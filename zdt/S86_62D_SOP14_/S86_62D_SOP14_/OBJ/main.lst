
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showKeyLed
                                    1-   24     	extern	_A2
                                    1-   25     	extern	_B2
                                    1-   26     	extern	_C2
                                    1-   27     	extern	_D2
                                    1-   28     	extern	_E2
                                    1-   29     	extern	_F2
                                    1-   30     	extern	_G2
                                    1-   31     	extern	_A3
                                    1-   32     	extern	_B3
                                    1-   33     	extern	_C3
                                    1-   34     	extern	_D3
                                    1-   35     	extern	_E3
                                    1-   36     	extern	_F3
                                    1-   37     	extern	_G3
                                    1-   38     	extern	_delayms
                                    1-   39     	extern	_LedCtr2
                                    1-   40     	extern	_checkInAD
                                    1-   41     	extern	_F_AIN3_Convert
                                    1-   42     	extern	_fgCtr
                                    1-   43     	extern	_ledCtr
                                    1-   44     	extern	_keyRead2
                                    1-   45     	extern	__divuchar
                                    1-   46     	extern	__moduchar
                                    1-   47     	extern	__divuint
                                    1-   48     	extern	_PORTAbits
                                    1-   49     	extern	_PORTBbits
                                    1-   50     	extern	_PCONbits
                                    1-   51     	extern	_BWUCONbits
                                    1-   52     	extern	_ABPLCONbits
                                    1-   53     	extern	_BPHCONbits
                                    1-   54     	extern	_INTEbits
                                    1-   55     	extern	_INTFbits
                                    1-   56     	extern	_ADMDbits
                                    1-   57     	extern	_ADRbits
                                    1-   58     	extern	_ADVREFHbits
                                    1-   59     	extern	_ADCRbits
                                    1-   60     	extern	_AWUCONbits
                                    1-   61     	extern	_PACONbits
                                    1-   62     	extern	_INTEDGbits
                                    1-   63     	extern	_ANAENbits
                                    1-   64     	extern	_RFCbits
                                    1-   65     	extern	_INTE2bits
                                    1-   66     	extern	_INDF
                                    1-   67     	extern	_TMR0
                                    1-   68     	extern	_PCL
                                    1-   69     	extern	_STATUS
                                    1-   70     	extern	_FSR
                                    1-   71     	extern	_PORTA
                                    1-   72     	extern	_PORTB
                                    1-   73     	extern	_PCON
                                    1-   74     	extern	_BWUCON
                                    1-   75     	extern	_PCHBUF
                                    1-   76     	extern	_ABPLCON
                                    1-   77     	extern	_BPHCON
                                    1-   78     	extern	_INTE
                                    1-   79     	extern	_INTF
                                    1-   80     	extern	_ADMD
                                    1-   81     	extern	_ADR
                                    1-   82     	extern	_ADD
                                    1-   83     	extern	_ADVREFH
                                    1-   84     	extern	_ADCR
                                    1-   85     	extern	_AWUCON
                                    1-   86     	extern	_PACON
                                    1-   87     	extern	_INTEDG
                                    1-   88     	extern	_TMRH
                                    1-   89     	extern	_ANAEN
                                    1-   90     	extern	_RFC
                                    1-   91     	extern	_TM3RH
                                    1-   92     	extern	_INTE2
                                    1-   93     	extern	_TMR1
                                    1-   94     	extern	_T1CR1
                                    1-   95     	extern	_T1CR2
                                    1-   96     	extern	_PWM1DUTY
                                    1-   97     	extern	_PS1CV
                                    1-   98     	extern	_BZ1CR
                                    1-   99     	extern	_IRCR
                                    1-  100     	extern	_TBHP
                                    1-  101     	extern	_TBHD
                                    1-  102     	extern	_TMR2
                                    1-  103     	extern	_T2CR1
                                    1-  104     	extern	_T2CR2
                                    1-  105     	extern	_PWM2DUTY
                                    1-  106     	extern	_PS2CV
                                    1-  107     	extern	_BZ2CR
                                    1-  108     	extern	_OSCCR
                                    1-  109     	extern	_TMR3
                                    1-  110     	extern	_T3CR1
                                    1-  111     	extern	_T3CR2
                                    1-  112     	extern	_PWM3DUTY
                                    1-  113     	extern	_PS3CV
                                    1-  114     	extern	_BZ3CR
                                    1-  115     	extern	_IOSTA
                                    1-  116     	extern	_IOSTB
                                    1-  117     	extern	_APHCON
                                    1-  118     	extern	_PS0CV
                                    1-  119     	extern	_BODCON
                                    1-  120     	extern	_CMPCR
                                    1-  121     	extern	_PCON1
                                    1-  122     	extern	_T0MD
                                    1-  123     	extern	___sdcc_saved_fsr
                                    1-  124     	extern	___sdcc_saved_stk00
                                    1-  125     	extern	___sdcc_saved_stk01
                                    1-  126     	extern	__gptrget1
                                    1-  127     	extern	__mulchar
                                    1-  128     	extern	__nyc_ny8_startup
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; global declarations
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     	extern	_delay
                                    1-  133     	extern	_F_wait_eoc
                                    1-  134     	extern	_F_AIN2_Convert
                                    1-  135     	extern	_F_AIN4_Convert
                                    1-  136     	extern	_checkOutA
                                    1-  137     	extern	_checkBatAD
                                    1-  138     	extern	_initAD
                                    1-  139     	extern	_gotoSleep
                                    1-  140     	extern	_pwm1Stop
                                    1-  141     	extern	_pwm1Init
                                    1-  142     	extern	_pwmStop
                                    1-  143     	extern	_pwmInit
                                    1-  144     	extern	_powerOff
                                    1-  145     	extern	_initSys
                                    1-  146     	extern	_keyCtr
                                    1-  147     	extern	_keyRead
                                    1-  148     	extern	_refreshNub
                                    1-  149     	extern	_workCtr
                                    1-  150     	extern	_chrgCtr
                                    1-  151     	extern	_isr
                                    1-  152     	extern	_main
                                    1-  153     	extern	_debug
                                    1-  154     	extern	_Status
                                    1-  155     	extern	_R_AIN4_DATA
                                    1-  156     	extern	_R_AIN4_DATA_LB
                                    1-  157     	extern	_R_AIN2_DATA
                                    1-  158     	extern	_R_AIN2_DATA_LB
                                    1-  159     	extern	_intCount
                                    1-  160     	extern	_sleepTime
                                    1-  161     	extern	_count200ms
                                    1-  162     	extern	_count500ms
                                    1-  163     	extern	_count1s
                                    1-  164     	extern	_count5s
                                    1-  165     	extern	_count900s
                                    1-  166     	extern	_workStep
                                    1-  167     	extern	_keyCount
                                    1-  168     	extern	_pwStep
                                    1-  169     	extern	_ledLightTime
                                    1-  170     	extern	_maxDuty
                                    1-  171     	extern	_overCount
                                    1-  172     	extern	_tempDuty
                                    1-  173     	extern	_count5S
                                    1-  174     	extern	_ledDeadTime
                                    1-  175     	extern	_countFull
                                    1-  176     	extern	_refreshCount
                                    1-  177     	extern	_shiweiNum
                                    1-  178     	extern	_geweiNum
                                    1-  179     	extern	_batValue
                                    1-  180     	extern	_cDuty
                                    1-  181     	extern	_preBatValue
                                    1-  182     	extern	_chrgStep
                                    1-  183     	extern	_lightBat
                                    1-  184     	extern	_closeCount
                                    1-  185     	extern	_firstShowCount
                                    1-  186     	extern	_batCount
                                    1-  187     	extern	_maxChrgDuty
                                    1-  188     	extern	_chrgFullFlag
                                    1-  189     	extern	_fullCount
                                    1-  190     	extern	_subMin
                                    1-  191     	extern	_addTime
                                    1-  192     	extern	_subTime
                                    1-  193     	extern	_chrgWaitTime
                                    1-  194     	extern	_maxduty
                                    1-  195     	extern	_addFlag
                                    1-  196     	extern	_keyCount2
                                    1-  197     	extern	_currentDuty
                                    1-  198     	extern	_addPWMFlag
                                    1-  199     	extern	_batTime
                                    1-  200     	extern	_subBatTime
                                    1-  201     	extern	_showBatValue
                                    1-  202     	extern	_overFlag
                                    1-  203     	extern	_batFullTime
                                    1-  204     	extern	_startTime
                                    1-  205     	extern	_keyNum
                                    1-  206     	extern	_keyResetTime
                                    1-  207     	extern	_preKeyStatus
                                    1-  208     	extern	_keyDisableTime
                                    1-  210     	extern PSAVE
                                    1-  211     	extern SSAVE
                                    1-  212     	extern WSAVE
                                    1-  213     	extern STK04
                                    1-  214     	extern STK03
                                    1-  215     	extern STK02
                                    1-  216     	extern STK01
                                    1-  217     	extern STK00
                                    1-  219     .segment "uninit", 0x20000040
 20000040                           1-  220     PSAVE:
                                    1-  221     	.res 1
 20000041                           1-  222     SSAVE:
                                    1-  223     	.res 1
 20000042                           1-  224     WSAVE:
                                    1-  225     	.res 1
 20000043                           1-  226     STK04:
                                    1-  227     	.res 1
 20000044                           1-  228     STK03:
                                    1-  229     	.res 1
 20000045                           1-  230     STK02:
                                    1-  231     	.res 1
 20000046                           1-  232     STK01:
                                    1-  233     	.res 1
 20000047                           1-  234     STK00:
                                    1-  235     	.res 1
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ; global definitions
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     .segment "uninit"
     0000                           1-  241     _R_AIN4_DATA:
                                    1-  242     	.res	2
                                    1-  245     .segment "uninit"
     0000                           1-  246     _R_AIN4_DATA_LB:
                                    1-  247     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     _R_AIN2_DATA:
                                    1-  252     	.res	2
                                    1-  255     .segment "uninit"
     0000                           1-  256     _R_AIN2_DATA_LB:
                                    1-  257     	.res	1
                                    1-  260     ;--------------------------------------------------------
                                    1-  261     ; absolute symbol definitions
                                    1-  262     ;--------------------------------------------------------
                                    1-  263     ;--------------------------------------------------------
                                    1-  264     ; compiler-defined variables
                                    1-  265     ;--------------------------------------------------------
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1058:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1055:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1056:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1052:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1053:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1054:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1051:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1050:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x104C:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x104D:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x104E:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x104F:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1048:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x104B:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1042:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1043:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1044:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1047:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x103C:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x103D:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x103E:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1041:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1038:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x1037:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x1039:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x103A:
                                    1-  343     	.res	1
                                    1-  344     .segment "uninit"
     0000                           1-  345     r0x103B:
                                    1-  346     	.res	1
                                    1-  347     ;--------------------------------------------------------
                                    1-  348     ; initialized data
                                    1-  349     ;--------------------------------------------------------
                                    1-  351     .segment "idata"
     0000                           1-  352     _debug:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _Status:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _intCount:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _sleepTime:
     0000 0000 0000                 1-  371     	dw	0x00, 0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _count200ms:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _count500ms:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _count1s:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _count5s:
     0000 0000 0000                 1-  395     	dw	0x00, 0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _count900s:
     0000 0000 0000                 1-  401     	dw	0x00, 0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _workStep:
     0000 0000                      1-  407     	dw	0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _keyCount:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _pwStep:
     0000 0000                      1-  419     	dw	0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _ledLightTime:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _maxDuty:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _overCount:
     0000 0000 0000                 1-  437     	dw	0x00, 0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _tempDuty:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _count5S:
     0000 0000 0000                 1-  449     	dw	0x00, 0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _ledDeadTime:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _countFull:
     0000 0000 0000                 1-  461     	dw	0x00, 0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _refreshCount:
     0000 0000 0000                 1-  467     	dw	0x00, 0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _shiweiNum:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _geweiNum:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _batValue:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _cDuty:
     0000 0000                      1-  491     	dw	0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _preBatValue:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _chrgStep:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _lightBat:
     0000 0000                      1-  509     	dw	0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _closeCount:
     0000 0000 0000                 1-  515     	dw	0x00, 0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _firstShowCount:
     0000 0000                      1-  521     	dw	0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _batCount:
     0000 0000 0000                 1-  527     	dw	0x00, 0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _maxChrgDuty:
     0000 0000                      1-  533     	dw	0x00
                                    1-  537     .segment "idata"
     0000                           1-  538     _chrgFullFlag:
     0000 0000                      1-  539     	dw	0x00
                                    1-  543     .segment "idata"
     0000                           1-  544     _fullCount:
     0000 0000 0000                 1-  545     	dw	0x00, 0x00
                                    1-  549     .segment "idata"
     0000                           1-  550     _subMin:
     0000 0000                      1-  551     	dw	0x00
                                    1-  555     .segment "idata"
     0000                           1-  556     _addTime:
     0000 0000                      1-  557     	dw	0x00
                                    1-  561     .segment "idata"
     0000                           1-  562     _subTime:
     0000 0000                      1-  563     	dw	0x00
                                    1-  567     .segment "idata"
     0000                           1-  568     _chrgWaitTime:
     0000 0000                      1-  569     	dw	0x00
                                    1-  573     .segment "idata"
     0000                           1-  574     _maxduty:
     0000 0000                      1-  575     	dw	0x00
                                    1-  579     .segment "idata"
     0000                           1-  580     _addFlag:
     0000 0000                      1-  581     	dw	0x00
                                    1-  585     .segment "idata"
     0000                           1-  586     _keyCount2:
     0000 0000                      1-  587     	dw	0x00
                                    1-  591     .segment "idata"
     0000                           1-  592     _currentDuty:
     0000 0000                      1-  593     	dw	0x00
                                    1-  597     .segment "idata"
     0000                           1-  598     _addPWMFlag:
     0000 0000                      1-  599     	dw	0x00
                                    1-  603     .segment "idata"
     0000                           1-  604     _batTime:
     0000 0000 0000                 1-  605     	dw	0x00, 0x00
                                    1-  609     .segment "idata"
     0000                           1-  610     _subBatTime:
     0000 0000 0000                 1-  611     	dw	0x00, 0x00
                                    1-  615     .segment "idata"
     0000                           1-  616     _showBatValue:
     0000 0000                      1-  617     	dw	0x00
                                    1-  621     .segment "idata"
     0000                           1-  622     _overFlag:
     0000 0000                      1-  623     	dw	0x00
                                    1-  627     .segment "idata"
     0000                           1-  628     _batFullTime:
     0000 0000 0000                 1-  629     	dw	0x00, 0x00
                                    1-  633     .segment "idata"
     0000                           1-  634     _startTime:
     0000 0000                      1-  635     	dw	0x00
                                    1-  639     .segment "idata"
     0000                           1-  640     _keyNum:
     0000 0000                      1-  641     	dw	0x00
                                    1-  645     .segment "idata"
     0000                           1-  646     _keyResetTime:
     0000 0000                      1-  647     	dw	0x00
                                    1-  651     .segment "idata"
     0000                           1-  652     _preKeyStatus:
     0000 0000                      1-  653     	dw	0x00
                                    1-  657     .segment "idata"
     0000                           1-  658     _keyDisableTime:
     0000 0000                      1-  659     	dw	0x00
                                    1-  663     .segment "code"
     0000                           1-  664     _numArray:
     0000 203F                      1-  665     	retia 0x3f
     0001 2006                      1-  666     	retia 0x06
     0002 205B                      1-  667     	retia 0x5b
     0003 204F                      1-  668     	retia 0x4f
     0004 2066                      1-  669     	retia 0x66
     0005 206D                      1-  670     	retia 0x6d
     0006 207D                      1-  671     	retia 0x7d
     0007 2007                      1-  672     	retia 0x07
     0008 207F                      1-  673     	retia 0x7f
     0009 206F                      1-  674     	retia 0x6f
     000A 2071                      1-  675     	retia 0x71
     000B 2079                      1-  676     	retia 0x79
     000C 2050                      1-  677     	retia 0x50
                                    1-  679     ;--------------------------------------------------------
                                    1-  680     ; overlayable items in internal ram 
                                    1-  681     ;--------------------------------------------------------
                                    1-  682     ;	udata_ovr
                                    1-  683     ;--------------------------------------------------------
                                    1-  684     ; reset vector 
                                    1-  685     ;--------------------------------------------------------
                                    1-  686     ORG	0x0000
     0000 3rrr                      1-  687     	LGOTO	__nyc_ny8_startup
                                    1-  688     ;--------------------------------------------------------
                                    1-  689     ; interrupt and initialization code
                                    1-  690     ;--------------------------------------------------------
                                    1-  691     ORG 0x0008
                                    1-  692     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  694     .segment "code"
     0000                           1-  695     __sdcc_interrupt:
                                    1-  696     ;***
                                    1-  697     ;  pBlock Stats: dbName = I
                                    1-  698     ;***
                                    1-  699     ;2 compiler assigned registers:
                                    1-  700     ;   STK00
                                    1-  701     ;   STK01
                                    1-  702     ;; Starting pCode block
     0000                           1-  703     _isr:
                                    1-  704     ; 0 exit points
                                    1-  705     	.line	107, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  706     	MOVAR	WSAVE
     0001 1503                      1-  707     	SWAPR	STATUS,W
     0002 0283                      1-  708     	CLRR	STATUS
     0003 00rr                      1-  709     	MOVAR	SSAVE
     0004 010A                      1-  710     	MOVR	PCHBUF,W
     0005 028A                      1-  711     	CLRR	PCHBUF
     0006 00rr                      1-  712     	MOVAR	PSAVE
     0007 0104                      1-  713     	MOVR	FSR,W
                                    1-  714     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  715     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  716     	MOVR	STK00,W
                                    1-  717     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  718     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  719     	MOVR	STK01,W
                                    1-  720     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  721     	MOVAR	___sdcc_saved_stk01
                                    1-  722     	.line	109, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  723     	BTRSS	_INTFbits,0
                                    1-  724     	MGOTO	_00123_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  725     	.line	111, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  726     	MOVIA	0x37
     0013 03rr                      1-  727     	ADDAR	_TMR0,F
                                    1-  728     	.line	113, "main.c"; 	if(++intCount >= 100)
                                    1-  729     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  730     	INCR	_intCount,F
                                    1-  731     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  732     	MOVIA	0x64
     0017 04rr                      1-  733     	SUBAR	_intCount,W
     0018 0803                      1-  734     	BTRSS	STATUS,0
                                    1-  735     	MGOTO	_00123_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  736     	.line	115, "main.c"; 	IntFlag = 1;
                                    1-  737     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  738     	BSR	_Status,0
                                    1-  739     	.line	116, "main.c"; 	intCount = 0;
                                    1-  740     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  741     	CLRR	_intCount
                                    1-  742     	.line	117, "main.c"; 	if(++count500ms >= 40)
                                    1-  743     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  744     	INCR	_count500ms,F
                                    1-  745     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  746     	MOVIA	0x28
     0021 04rr                      1-  747     	SUBAR	_count500ms,W
     0022 0C03                      1-  748     	BTRSC	STATUS,0
                                    1-  749     	.line	118, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  750     	CLRR	_count500ms
                                    1-  751     	.line	119, "main.c"; 	if(++count200ms >= 20)
                                    1-  752     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  753     	INCR	_count200ms,F
     0026 2114                      1-  754     	MOVIA	0x14
     0027 04rr                      1-  755     	SUBAR	_count200ms,W
     0028 0803                      1-  756     	BTRSS	STATUS,0
                                    1-  757     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  758     	.line	121, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  759     	CLRR	_count200ms
                                    1-  760     	.line	122, "main.c"; 	if(ledDeadTime > 0)
                                    1-  761     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  762     	MOVR	_ledDeadTime,W
     002D 0903                      1-  763     	BTRSS	STATUS,2
                                    1-  764     	.line	123, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  765     	DECR	_ledDeadTime,F
     002F                           1-  766     _00110_DS_:
                                    1-  767     	.line	125, "main.c"; 	if(++count5s >= 500)
                                    1-  768     	BANKSEL	_count5s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  769     	INCR	_count5s,F
     0031 0D03                      1-  770     	BTRSC	STATUS,2
     0032 05rr                      1-  771     	INCR	(_count5s + 1),F
                                    1-  772     ;;unsigned compare: left < lit (0x1F4=500), size=2
     0033 2101                      1-  773     	MOVIA	0x01
     0034 04rr                      1-  774     	SUBAR	(_count5s + 1),W
     0035 0903                      1-  775     	BTRSS	STATUS,2
                                    1-  776     	MGOTO	_00161_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21F4                      1-  777     	MOVIA	0xf4
     0038 04rr                      1-  778     	SUBAR	_count5s,W
     0039                           1-  779     _00161_DS_:
     0039 0803                      1-  780     	BTRSS	STATUS,0
                                    1-  781     	MGOTO	_00112_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  782     	.line	127, "main.c"; 	count5s = 0;
                                    1-  783     	BANKSEL	_count5s
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  784     	CLRR	_count5s
     003D 02rr                      1-  785     	CLRR	(_count5s + 1)
     003E                           1-  786     _00112_DS_:
                                    1-  787     	.line	129, "main.c"; 	if(++count1s >= 100)
                                    1-  788     	BANKSEL	_count1s
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  789     	INCR	_count1s,F
                                    1-  790     ;;unsigned compare: left < lit (0x64=100), size=1
     0040 2164                      1-  791     	MOVIA	0x64
     0041 04rr                      1-  792     	SUBAR	_count1s,W
     0042 0803                      1-  793     	BTRSS	STATUS,0
                                    1-  794     	MGOTO	_00123_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  795     	.line	131, "main.c"; 	count1s = 0;
     0044 02rr                      1-  796     	CLRR	_count1s
                                    1-  797     	.line	132, "main.c"; 	if(ledLightTime > 0)
                                    1-  798     	BANKSEL	_ledLightTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  799     	MOVR	_ledLightTime,W
     0047 0903                      1-  800     	BTRSS	STATUS,2
                                    1-  801     	.line	133, "main.c"; 	ledLightTime--;
     0048 06rr                      1-  802     	DECR	_ledLightTime,F
                                    1-  803     	.line	134, "main.c"; 	if(workStep)
                                    1-  804     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  805     	MOVR	_workStep,W
     004B 0D03                      1-  806     	BTRSC	STATUS,2
                                    1-  807     	MGOTO	_00116_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  808     	.line	136, "main.c"; 	++count900s;
                                    1-  809     	BANKSEL	_count900s
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1-  810     	INCR	_count900s,F
     004F 0D03                      1-  811     	BTRSC	STATUS,2
     0050 05rr                      1-  812     	INCR	(_count900s + 1),F
                                    1-  813     	MGOTO	_00123_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  814     _00116_DS_:
                                    1-  815     	.line	140, "main.c"; 	count900s = 0;
                                    1-  816     	BANKSEL	_count900s
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1-  817     	CLRR	_count900s
     0054 02rr                      1-  818     	CLRR	(_count900s + 1)
     0055                           1-  819     _00123_DS_:
                                    1-  820     	.line	149, "main.c"; 	if(INTFbits.PABIF)
     0055 08rr                      1-  821     	BTRSS	_INTFbits,1
                                    1-  822     	MGOTO	_00125_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  823     	.line	151, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0057 21FD                      1-  824     	MOVIA	0xfd
     0058 00rr                      1-  825     	MOVAR	_INTF
     0059                           1-  826     _00125_DS_:
                                    1-  827     	.line	154, "main.c"; 	INTF = 0;
     0059 02rr                      1-  828     	CLRR	_INTF
                                    1-  829     	.line	156, "main.c"; 	}
                                    1-  830     	BANKSEL	___sdcc_saved_stk01
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  831     	MOVR	___sdcc_saved_stk01,W
     005C 00rr                      1-  832     	MOVAR	STK01
                                    1-  833     	BANKSEL	___sdcc_saved_stk00
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1-  834     	MOVR	___sdcc_saved_stk00,W
     005F 00rr                      1-  835     	MOVAR	STK00
                                    1-  836     	BANKSEL	___sdcc_saved_fsr
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  837     	MOVR	___sdcc_saved_fsr,W
     0062 0084                      1-  838     	MOVAR	FSR
     0063 01rr                      1-  839     	MOVR	PSAVE,W
     0064 008A                      1-  840     	MOVAR	PCHBUF
     0065 0283                      1-  841     	CLRR	STATUS
     0066 15rr                      1-  842     	SWAPR	SSAVE,W
     0067 0083                      1-  843     	MOVAR	STATUS
     0068 15rr                      1-  844     	SWAPR	WSAVE,F
     0069 15rr                      1-  845     	SWAPR	WSAVE,W
     006A                           1-  846     END_OF_INTERRUPT:
     006A 0011                      1-  847     	RETIE	
                                    1-  849     ;--------------------------------------------------------
                                    1-  850     ; code
                                    1-  851     ;--------------------------------------------------------
                                    1-  852     ;***
                                    1-  853     ;  pBlock Stats: dbName = M
                                    1-  854     ;***
                                    1-  855     ;has an exit
                                    1-  856     ;functions called:
                                    1-  857     ;   _initSys
                                    1-  858     ;   _initAD
                                    1-  859     ;   _delay
                                    1-  860     ;   _refreshNub
                                    1-  861     ;   _setInput
                                    1-  862     ;   _pwmStop
                                    1-  863     ;   _checkBatAD
                                    1-  864     ;   _checkOutA
                                    1-  865     ;   _chrgCtr
                                    1-  866     ;   _keyCtr
                                    1-  867     ;   _gotoSleep
                                    1-  868     ;   _powerOff
                                    1-  869     ;   _initSys
                                    1-  870     ;   _initAD
                                    1-  871     ;   _delay
                                    1-  872     ;   _refreshNub
                                    1-  873     ;   _setInput
                                    1-  874     ;   _pwmStop
                                    1-  875     ;   _checkBatAD
                                    1-  876     ;   _checkOutA
                                    1-  877     ;   _chrgCtr
                                    1-  878     ;   _keyCtr
                                    1-  879     ;   _gotoSleep
                                    1-  880     ;   _powerOff
                                    1-  881     ;1 compiler assigned register :
                                    1-  882     ;   STK00
                                    1-  883     ;; Starting pCode block
                                    1-  884     .segment "code"; module=main, function=_main
     0000                           1-  886     _main:
                                    1-  887     ; 2 exit points
                                    1-  888     	.line	161, "main.c"; 	initSys();
                                    1-  889     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  890     	.line	162, "main.c"; 	initAD();
                                    1-  891     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  892     	.line	163, "main.c"; 	firstShowCount = 100;
     0002 2164                      1-  893     	MOVIA	0x64
                                    1-  894     	BANKSEL	_firstShowCount
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  895     	MOVAR	_firstShowCount
                                    1-  896     	.line	164, "main.c"; 	ledLightTime = showFlag = 1;
                                    1-  897     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1-  898     	BSR	_Status,4
                                    1-  899     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  900     	CLRR	_ledLightTime
                                    1-  901     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  902     	BTRSS	_Status,4
                                    1-  903     	MGOTO	_00010_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  904     	BANKSEL	_ledLightTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  905     	INCR	_ledLightTime,F
     000E                           1-  906     _00010_DS_:
                                    1-  907     	.line	165, "main.c"; 	shiweiNum = 8;
     000E 2108                      1-  908     	MOVIA	0x08
                                    1-  909     	BANKSEL	_shiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1-  910     	MOVAR	_shiweiNum
                                    1-  911     	.line	166, "main.c"; 	geweiNum = 8;
                                    1-  912     	BANKSEL	_geweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  913     	MOVAR	_geweiNum
                                    1-  914     	.line	167, "main.c"; 	delay(250);
     0013 21FA                      1-  915     	MOVIA	0xfa
     0014 00rr                      1-  916     	MOVAR	STK00
     0015 2100                      1-  917     	MOVIA	0x00
                                    1-  918     	MCALL	_delay
     0016 2rrr                      3-   66 m1      LCALL rom_address
     0017                           1-  919     _00197_DS_:
                                    1-  920     	.line	170, "main.c"; 	CLRWDT();
     0017 0002                      1-  921     	clrwdt
                                    1-  922     	.line	171, "main.c"; 	if(showFlag)
                                    1-  923     	BANKSEL	_Status
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 0Arr                      1-  924     	BTRSS	_Status,4
                                    1-  925     	MGOTO	_00167_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  926     	.line	172, "main.c"; 	refreshNub();
                                    1-  927     	MCALL	_refreshNub
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  928     	MGOTO	_00168_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1-  929     _00167_DS_:
                                    1-  930     	.line	174, "main.c"; 	setInput();
                                    1-  931     	MCALL	_setInput
     001D 2rrr                      3-   66 m1      LCALL rom_address
     001E                           1-  932     _00168_DS_:
                                    1-  933     	.line	175, "main.c"; 	if(!IntFlag)
                                    1-  934     	BANKSEL	_Status
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 08rr                      1-  935     	BTRSS	_Status,0
                                    1-  936     	MGOTO	_00197_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  937     	.line	177, "main.c"; 	IntFlag = 0;
     0021 1Crr                      1-  938     	BCR	_Status,0
                                    1-  939     	.line	179, "main.c"; 	if(batValue == 1 && workStep > 0)
                                    1-  940     	BANKSEL	_batValue
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1-  941     	MOVR	_batValue,W
     0024 2401                      1-  942     	XORIA	0x01
     0025 0903                      1-  943     	BTRSS	STATUS,2
                                    1-  944     	MGOTO	_00174_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  945     	BANKSEL	_workStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1-  946     	MOVR	_workStep,W
     0029 0D03                      1-  947     	BTRSC	STATUS,2
                                    1-  948     	MGOTO	_00174_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  949     	.line	181, "main.c"; 	if(++closeCount >= 6000)
                                    1-  950     	BANKSEL	_closeCount
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 05rr                      1-  951     	INCR	_closeCount,F
     002D 0D03                      1-  952     	BTRSC	STATUS,2
     002E 05rr                      1-  953     	INCR	(_closeCount + 1),F
                                    1-  954     ;;unsigned compare: left < lit (0x1770=6000), size=2
     002F 2117                      1-  955     	MOVIA	0x17
     0030 04rr                      1-  956     	SUBAR	(_closeCount + 1),W
     0031 0903                      1-  957     	BTRSS	STATUS,2
                                    1-  958     	MGOTO	_00252_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 2170                      1-  959     	MOVIA	0x70
     0034 04rr                      1-  960     	SUBAR	_closeCount,W
     0035                           1-  961     _00252_DS_:
     0035 0803                      1-  962     	BTRSS	STATUS,0
                                    1-  963     	MGOTO	_00175_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  964     	.line	183, "main.c"; 	closeCount = 0;
                                    1-  965     	BANKSEL	_closeCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1-  966     	CLRR	_closeCount
     0039 02rr                      1-  967     	CLRR	(_closeCount + 1)
                                    1-  968     	.line	184, "main.c"; 	showBatValue = 0;
                                    1-  969     	BANKSEL	_showBatValue
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 02rr                      1-  970     	CLRR	_showBatValue
                                    1-  971     	.line	185, "main.c"; 	workStep = 0;
                                    1-  972     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 02rr                      1-  973     	CLRR	_workStep
                                    1-  974     	.line	186, "main.c"; 	pwmStop();
                                    1-  975     	MCALL	_pwmStop
     003E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  976     	MGOTO	_00175_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1-  977     _00174_DS_:
                                    1-  978     	.line	191, "main.c"; 	closeCount = 0;
                                    1-  979     	BANKSEL	_closeCount
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 02rr                      1-  980     	CLRR	_closeCount
     0042 02rr                      1-  981     	CLRR	(_closeCount + 1)
     0043                           1-  982     _00175_DS_:
                                    1-  983     	.line	193, "main.c"; 	if(firstShowCount > 0)
                                    1-  984     	BANKSEL	_firstShowCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  985     	MOVR	_firstShowCount,W
     0045 0903                      1-  986     	BTRSS	STATUS,2
                                    1-  987     	.line	195, "main.c"; 	firstShowCount--;
     0046 06rr                      1-  988     	DECR	_firstShowCount,F
                                    1-  989     	.line	198, "main.c"; 	if(count200ms < 5)
     0047 2105                      1-  990     	MOVIA	0x05
                                    1-  991     	BANKSEL	_count200ms
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1-  992     	SUBAR	_count200ms,W
     004A 0803                      1-  993     	BTRSS	STATUS,0
                                    1-  994     	.line	200, "main.c"; 	checkBatAD();
                                    1-  995     	MCALL	_checkBatAD
     004B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  996     	.line	202, "main.c"; 	if(keyDisableTime > 0)
                                    1-  997     	BANKSEL	_keyDisableTime
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1-  998     	MOVR	_keyDisableTime,W
     004E 0903                      1-  999     	BTRSS	STATUS,2
                                    1- 1000     	.line	203, "main.c"; 	keyDisableTime--;
     004F 06rr                      1- 1001     	DECR	_keyDisableTime,F
                                    1- 1002     	.line	204, "main.c"; 	if(startTime > 0)
                                    1- 1003     	BANKSEL	_startTime
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1- 1004     	MOVR	_startTime,W
     0052 0903                      1- 1005     	BTRSS	STATUS,2
                                    1- 1006     	.line	205, "main.c"; 	startTime--;
     0053 06rr                      1- 1007     	DECR	_startTime,F
                                    1- 1008     	.line	206, "main.c"; 	checkOutA();
                                    1- 1009     	MCALL	_checkOutA
     0054 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1010     	.line	207, "main.c"; 	chrgCtr();
                                    1- 1011     	MCALL	_chrgCtr
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1012     	.line	208, "main.c"; 	if(chrgFlag == 0)
                                    1- 1013     	BANKSEL	_Status
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 09rr                      1- 1014     	BTRSS	_Status,3
                                    1- 1015     	.line	209, "main.c"; 	keyCtr();
                                    1- 1016     	MCALL	_keyCtr
     0058 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1017     	.line	210, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x80) == 0 && ledLightTime == 0 )
                                    1- 1018     	BANKSEL	_workStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1- 1019     	MOVR	_workStep,W
     005B 0903                      1- 1020     	BTRSS	STATUS,2
                                    1- 1021     	MGOTO	_00190_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1022     	BANKSEL	_keyCount
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 1023     	MOVR	_keyCount,W
     005F 0903                      1- 1024     	BTRSS	STATUS,2
                                    1- 1025     	MGOTO	_00190_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1026     	BANKSEL	_PORTA
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 0Frr                      1- 1027     	BTRSC	_PORTA,7
                                    1- 1028     	MGOTO	_00190_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1029     	BANKSEL	_ledLightTime
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1030     	MOVR	_ledLightTime,W
     0066 0903                      1- 1031     	BTRSS	STATUS,2
                                    1- 1032     	MGOTO	_00190_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1033     	.line	212, "main.c"; 	showFlag = 0;
                                    1- 1034     	BANKSEL	_Status
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 1Err                      1- 1035     	BCR	_Status,4
                                    1- 1036     	.line	213, "main.c"; 	overFlag = 0;
                                    1- 1037     	BANKSEL	_overFlag
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 02rr                      1- 1038     	CLRR	_overFlag
                                    1- 1039     	.line	214, "main.c"; 	if(++sleepTime > 200)
                                    1- 1040     	BANKSEL	_sleepTime
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 05rr                      1- 1041     	INCR	_sleepTime,F
     006E 0D03                      1- 1042     	BTRSC	STATUS,2
     006F 05rr                      1- 1043     	INCR	(_sleepTime + 1),F
                                    1- 1044     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1045     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0070 2100                      1- 1046     	MOVIA	0x00
     0071 04rr                      1- 1047     	SUBAR	(_sleepTime + 1),W
     0072 0903                      1- 1048     	BTRSS	STATUS,2
                                    1- 1049     	MGOTO	_00254_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074 21C9                      1- 1050     	MOVIA	0xc9
     0075 04rr                      1- 1051     	SUBAR	_sleepTime,W
     0076                           1- 1052     _00254_DS_:
     0076 0803                      1- 1053     	BTRSS	STATUS,0
                                    1- 1054     	MGOTO	_00190_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1055     	.line	215, "main.c"; 	gotoSleep();
                                    1- 1056     	MCALL	_gotoSleep
     0078 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1057     ;;unsigned compare: left < lit (0x384=900), size=2
     0079                           1- 1058     _00190_DS_:
                                    1- 1059     	.line	219, "main.c"; 	if(count900s >= 900)
     0079 2103                      1- 1060     	MOVIA	0x03
                                    1- 1061     	BANKSEL	_count900s
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 04rr                      1- 1062     	SUBAR	(_count900s + 1),W
     007C 0903                      1- 1063     	BTRSS	STATUS,2
                                    1- 1064     	MGOTO	_00255_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
     007E 2184                      1- 1065     	MOVIA	0x84
     007F 04rr                      1- 1066     	SUBAR	_count900s,W
     0080                           1- 1067     _00255_DS_:
     0080 0803                      1- 1068     	BTRSS	STATUS,0
                                    1- 1069     	MGOTO	_00197_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1070     	.line	221, "main.c"; 	powerOff();
                                    1- 1071     	MCALL	_powerOff
     0082 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1072     	MGOTO	_00197_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1073     	.line	224, "main.c"; 	}
                                    1- 1074     	RETURN	
     0084 0010                      3-   40 m1      ret
                                    1- 1075     ; exit point of _main
                                    1- 1077     ;***
                                    1- 1078     ;  pBlock Stats: dbName = C
                                    1- 1079     ;***
                                    1- 1080     ;has an exit
                                    1- 1081     ;6 compiler assigned registers:
                                    1- 1082     ;   r0x1037
                                    1- 1083     ;   STK00
                                    1- 1084     ;   r0x1038
                                    1- 1085     ;   r0x1039
                                    1- 1086     ;   r0x103A
                                    1- 1087     ;   r0x103B
                                    1- 1088     ;; Starting pCode block
                                    1- 1089     .segment "code"; module=main, function=_delay
                                    1- 1091     ;local variable name mapping:
     0000                           1- 1096     _delay:
                                    1- 1097     ; 2 exit points
                                    1- 1098     	.line	856, "main.c"; 	void delay(int count)
                                    1- 1099     	BANKSEL	r0x1037
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1100     	MOVAR	r0x1037
     0002 01rr                      1- 1101     	MOVR	STK00,W
                                    1- 1102     	BANKSEL	r0x1038
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1103     	MOVAR	r0x1038
                                    1- 1104     	.line	859, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1105     	MOVIA	0x01
                                    1- 1106     	BANKSEL	r0x1039
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1107     	MOVAR	r0x1039
                                    1- 1108     	BANKSEL	r0x103A
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1109     	CLRR	r0x103A
     000A                           1- 1110     _00781_DS_:
                                    1- 1111     	BANKSEL	r0x1037
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1112     	MOVR	r0x1037,W
     000C 2580                      1- 1113     	ADDIA	0x80
                                    1- 1114     	BANKSEL	r0x103B
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1115     	MOVAR	r0x103B
                                    1- 1116     	BANKSEL	r0x103A
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1117     	MOVR	r0x103A,W
     0011 2580                      1- 1118     	ADDIA	0x80
                                    1- 1119     	BANKSEL	r0x103B
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1120     	SUBAR	r0x103B,W
     0014 0903                      1- 1121     	BTRSS	STATUS,2
                                    1- 1122     	MGOTO	_00792_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1123     	BANKSEL	r0x1039
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1124     	MOVR	r0x1039,W
                                    1- 1125     	BANKSEL	r0x1038
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1126     	SUBAR	r0x1038,W
     001A                           1- 1127     _00792_DS_:
     001A 0803                      1- 1128     	BTRSS	STATUS,0
                                    1- 1129     	MGOTO	_00783_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1130     	BANKSEL	r0x1039
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1131     	INCR	r0x1039,F
     001E 0903                      1- 1132     	BTRSS	STATUS,2
                                    1- 1133     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1134     	BANKSEL	r0x103A
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1135     	INCR	r0x103A,F
     0022                           1- 1136     _00001_DS_:
                                    1- 1137     	MGOTO	_00781_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1138     _00783_DS_:
                                    1- 1139     	.line	861, "main.c"; 	}
                                    1- 1140     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1141     ; exit point of _delay
                                    1- 1143     ;***
                                    1- 1144     ;  pBlock Stats: dbName = C
                                    1- 1145     ;***
                                    1- 1146     ;has an exit
                                    1- 1147     ;; Starting pCode block
                                    1- 1148     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1150     _F_wait_eoc:
                                    1- 1151     ; 2 exit points
     0000                           1- 1152     _00774_DS_:
                                    1- 1153     	.line	851, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1154     	BTRSS	_ADMDbits,5
                                    1- 1155     	MGOTO	_00774_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1156     	.line	853, "main.c"; 	}
                                    1- 1157     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1158     ; exit point of _F_wait_eoc
                                    1- 1160     ;***
                                    1- 1161     ;  pBlock Stats: dbName = C
                                    1- 1162     ;***
                                    1- 1163     ;has an exit
                                    1- 1164     ;functions called:
                                    1- 1165     ;   _delay
                                    1- 1166     ;   _F_wait_eoc
                                    1- 1167     ;   _delay
                                    1- 1168     ;   _F_wait_eoc
                                    1- 1169     ;7 compiler assigned registers:
                                    1- 1170     ;   r0x103C
                                    1- 1171     ;   STK00
                                    1- 1172     ;   r0x103D
                                    1- 1173     ;   r0x103E
                                    1- 1174     ;   r0x103F
                                    1- 1175     ;   r0x1040
                                    1- 1176     ;   r0x1041
                                    1- 1177     ;; Starting pCode block
                                    1- 1178     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1180     ;local variable name mapping:
     0000                           1- 1183     _F_AIN2_Convert:
                                    1- 1184     ; 2 exit points
                                    1- 1185     	.line	834, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1186     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1187     	MOVAR	r0x103C
                                    1- 1188     	.line	836, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1189     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1190     	CLRR	_R_AIN2_DATA_LB
                                    1- 1191     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1192     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1193     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1194     	.line	838, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1195     	MOVIA	0x93
     0008 00rr                      1- 1196     	MOVAR	_ADMD
                                    1- 1197     	.line	839, "main.c"; 	delay(200);	
     0009 21C8                      1- 1198     	MOVIA	0xc8
     000A 00rr                      1- 1199     	MOVAR	STK00
     000B 2100                      1- 1200     	MOVIA	0x00
                                    1- 1201     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1202     	.line	840, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1203     	MOVIA	0x01
                                    1- 1204     	BANKSEL	r0x103D
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1205     	MOVAR	r0x103D
     0010                           1- 1206     _00767_DS_:
                                    1- 1207     	BANKSEL	r0x103D
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1208     	MOVR	r0x103D,W
                                    1- 1209     	BANKSEL	r0x103C
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1210     	SUBAR	r0x103C,W
     0014 0803                      1- 1211     	BTRSS	STATUS,0
                                    1- 1212     	MGOTO	_00769_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1213     	.line	842, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1214     	BSR	_ADMDbits,6
                                    1- 1215     	.line	843, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1216     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1217     	.line	844, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1218     	MOVIA	0x0f
     0019 10rr                      1- 1219     	ANDAR	_ADR,W
                                    1- 1220     ;;3	MOVAR	r0x103E
                                    1- 1221     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1222     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1223     	.line	845, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1224     	MOVR	_ADD,W
                                    1- 1225     	BANKSEL	r0x103E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1226     	MOVAR	r0x103E
                                    1- 1227     ;;1	CLRR	r0x103F
                                    1- 1228     ;;109	MOVR	r0x103E,W
                                    1- 1229     ;;107	MOVAR	r0x1040
     001F 2100                      1- 1230     	MOVIA	0x00
                                    1- 1231     	BANKSEL	r0x1041
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1232     	MOVAR	r0x1041
                                    1- 1233     ;;108	MOVR	r0x1040,W
                                    1- 1234     	BANKSEL	r0x103E
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1235     	MOVR	r0x103E,W
                                    1- 1236     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1237     	ADDAR	_R_AIN2_DATA,F
                                    1- 1238     	BANKSEL	r0x1041
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1239     	MOVR	r0x1041,W
     0028 0C03                      1- 1240     	BTRSC	STATUS,0
     0029 05rr                      1- 1241     	INCR	r0x1041,W
     002A 0D03                      1- 1242     	BTRSC	STATUS,2
                                    1- 1243     	MGOTO	_00002_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1244     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1245     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1246     _00002_DS_:
                                    1- 1247     	.line	840, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1248     	BANKSEL	r0x103D
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1249     	INCR	r0x103D,F
                                    1- 1250     	MGOTO	_00767_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1251     _00769_DS_:
                                    1- 1252     	.line	847, "main.c"; 	}
                                    1- 1253     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1254     ; exit point of _F_AIN2_Convert
                                    1- 1256     ;***
                                    1- 1257     ;  pBlock Stats: dbName = C
                                    1- 1258     ;***
                                    1- 1259     ;has an exit
                                    1- 1260     ;functions called:
                                    1- 1261     ;   _delay
                                    1- 1262     ;   _F_wait_eoc
                                    1- 1263     ;   _delay
                                    1- 1264     ;   _F_wait_eoc
                                    1- 1265     ;7 compiler assigned registers:
                                    1- 1266     ;   r0x1042
                                    1- 1267     ;   STK00
                                    1- 1268     ;   r0x1043
                                    1- 1269     ;   r0x1044
                                    1- 1270     ;   r0x1045
                                    1- 1271     ;   r0x1046
                                    1- 1272     ;   r0x1047
                                    1- 1273     ;; Starting pCode block
                                    1- 1274     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1276     ;local variable name mapping:
     0000                           1- 1279     _F_AIN4_Convert:
                                    1- 1280     ; 2 exit points
                                    1- 1281     	.line	819, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1282     	BANKSEL	r0x1042
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1283     	MOVAR	r0x1042
                                    1- 1284     	.line	821, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1285     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1286     	CLRR	_R_AIN4_DATA_LB
                                    1- 1287     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1288     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1289     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1290     	.line	823, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1291     	MOVIA	0x94
     0008 00rr                      1- 1292     	MOVAR	_ADMD
                                    1- 1293     	.line	824, "main.c"; 	delay(200);	
     0009 21C8                      1- 1294     	MOVIA	0xc8
     000A 00rr                      1- 1295     	MOVAR	STK00
     000B 2100                      1- 1296     	MOVIA	0x00
                                    1- 1297     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1298     	.line	825, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1299     	MOVIA	0x01
                                    1- 1300     	BANKSEL	r0x1043
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1301     	MOVAR	r0x1043
     0010                           1- 1302     _00758_DS_:
                                    1- 1303     	BANKSEL	r0x1043
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1304     	MOVR	r0x1043,W
                                    1- 1305     	BANKSEL	r0x1042
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1306     	SUBAR	r0x1042,W
     0014 0803                      1- 1307     	BTRSS	STATUS,0
                                    1- 1308     	MGOTO	_00760_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1309     	.line	827, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1310     	BSR	_ADMDbits,6
                                    1- 1311     	.line	828, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1312     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1313     	.line	829, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1314     	MOVIA	0x0f
     0019 10rr                      1- 1315     	ANDAR	_ADR,W
                                    1- 1316     ;;3	MOVAR	r0x1044
                                    1- 1317     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1318     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1319     	.line	830, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1320     	MOVR	_ADD,W
                                    1- 1321     	BANKSEL	r0x1044
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1322     	MOVAR	r0x1044
                                    1- 1323     ;;1	CLRR	r0x1045
                                    1- 1324     ;;106	MOVR	r0x1044,W
                                    1- 1325     ;;104	MOVAR	r0x1046
     001F 2100                      1- 1326     	MOVIA	0x00
                                    1- 1327     	BANKSEL	r0x1047
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1328     	MOVAR	r0x1047
                                    1- 1329     ;;105	MOVR	r0x1046,W
                                    1- 1330     	BANKSEL	r0x1044
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1331     	MOVR	r0x1044,W
                                    1- 1332     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1333     	ADDAR	_R_AIN4_DATA,F
                                    1- 1334     	BANKSEL	r0x1047
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1335     	MOVR	r0x1047,W
     0028 0C03                      1- 1336     	BTRSC	STATUS,0
     0029 05rr                      1- 1337     	INCR	r0x1047,W
     002A 0D03                      1- 1338     	BTRSC	STATUS,2
                                    1- 1339     	MGOTO	_00003_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1340     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1341     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1342     _00003_DS_:
                                    1- 1343     	.line	825, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1344     	BANKSEL	r0x1043
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1345     	INCR	r0x1043,F
                                    1- 1346     	MGOTO	_00758_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1347     _00760_DS_:
                                    1- 1348     	.line	832, "main.c"; 	}
                                    1- 1349     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1350     ; exit point of _F_AIN4_Convert
                                    1- 1352     ;***
                                    1- 1353     ;  pBlock Stats: dbName = C
                                    1- 1354     ;***
                                    1- 1355     ;has an exit
                                    1- 1356     ;functions called:
                                    1- 1357     ;   _F_AIN4_Convert
                                    1- 1358     ;   _pwmStop
                                    1- 1359     ;   __mulchar
                                    1- 1360     ;   _F_AIN4_Convert
                                    1- 1361     ;   _pwmStop
                                    1- 1362     ;   __mulchar
                                    1- 1363     ;5 compiler assigned registers:
                                    1- 1364     ;   r0x1048
                                    1- 1365     ;   r0x1049
                                    1- 1366     ;   r0x104A
                                    1- 1367     ;   r0x104B
                                    1- 1368     ;   STK00
                                    1- 1369     ;; Starting pCode block
                                    1- 1370     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1372     _checkOutA:
                                    1- 1373     ; 2 exit points
                                    1- 1374     	.line	681, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1375     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1376     	CLRR	_R_AIN4_DATA_LB
                                    1- 1377     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1378     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1379     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1380     	.line	682, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1381     	MOVIA	0x08
                                    1- 1382     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1383     	.line	683, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1384     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1385     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1386     	ANDIA	0xf0
     000A 00rr                      1- 1387     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1388     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1389     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1390     	ANDIA	0x0f
     000E 11rr                      1- 1391     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1392     	XORAR	_R_AIN4_DATA,F
                                    1- 1393     	.line	684, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1394     	MOVIA	0xf0
                                    1- 1395     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1396     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1397     	.line	685, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1398     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1399     	BANKSEL	r0x1048
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1400     	MOVAR	r0x1048
                                    1- 1401     ;;1	CLRR	r0x1049
                                    1- 1402     ;;103	MOVR	r0x1048,W
                                    1- 1403     ;;101	MOVAR	r0x104A
     0016 2100                      1- 1404     	MOVIA	0x00
                                    1- 1405     	BANKSEL	r0x104B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1406     	MOVAR	r0x104B
                                    1- 1407     ;;102	MOVR	r0x104A,W
                                    1- 1408     	BANKSEL	r0x1048
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1409     	MOVR	r0x1048,W
                                    1- 1410     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1411     	ADDAR	_R_AIN4_DATA,F
                                    1- 1412     	BANKSEL	r0x104B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1413     	MOVR	r0x104B,W
     001F 0C03                      1- 1414     	BTRSC	STATUS,0
     0020 05rr                      1- 1415     	INCR	r0x104B,W
     0021 0D03                      1- 1416     	BTRSC	STATUS,2
                                    1- 1417     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1418     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1419     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1420     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1421     _00004_DS_:
                                    1- 1422     	.line	686, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1423     	BCR	STATUS,0
                                    1- 1424     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1425     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1426     	RRR	_R_AIN4_DATA,F
                                    1- 1427     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1428     	BCR	STATUS,0
     002A 13rr                      1- 1429     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1430     	RRR	_R_AIN4_DATA,F
                                    1- 1431     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1432     	BCR	STATUS,0
     002D 13rr                      1- 1433     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1434     	RRR	_R_AIN4_DATA,F
                                    1- 1435     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1436     ;;unsigned compare: left >= lit (0xC9=201), size=2
                                    1- 1437     	.line	687, "main.c"; 	if(R_AIN4_DATA > 200)
     002F 2100                      1- 1438     	MOVIA	0x00
     0030 04rr                      1- 1439     	SUBAR	(_R_AIN4_DATA + 1),W
     0031 0903                      1- 1440     	BTRSS	STATUS,2
                                    1- 1441     	MGOTO	_00736_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 21C9                      1- 1442     	MOVIA	0xc9
     0034 04rr                      1- 1443     	SUBAR	_R_AIN4_DATA,W
     0035                           1- 1444     _00736_DS_:
     0035 0803                      1- 1445     	BTRSS	STATUS,0
                                    1- 1446     	MGOTO	_00663_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1447     	.line	689, "main.c"; 	if(++overCount > 500)
                                    1- 1448     	BANKSEL	_overCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1- 1449     	INCR	_overCount,F
     0039 0D03                      1- 1450     	BTRSC	STATUS,2
     003A 05rr                      1- 1451     	INCR	(_overCount + 1),F
                                    1- 1452     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1453     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     003B 2101                      1- 1454     	MOVIA	0x01
     003C 04rr                      1- 1455     	SUBAR	(_overCount + 1),W
     003D 0903                      1- 1456     	BTRSS	STATUS,2
                                    1- 1457     	MGOTO	_00737_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 21F5                      1- 1458     	MOVIA	0xf5
     0040 04rr                      1- 1459     	SUBAR	_overCount,W
     0041                           1- 1460     _00737_DS_:
     0041 0803                      1- 1461     	BTRSS	STATUS,0
                                    1- 1462     	MGOTO	_00664_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1463     	.line	691, "main.c"; 	overCount = 500;
     0043 21F4                      1- 1464     	MOVIA	0xf4
                                    1- 1465     	BANKSEL	_overCount
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1466     	MOVAR	_overCount
     0046 2101                      1- 1467     	MOVIA	0x01
     0047 00rr                      1- 1468     	MOVAR	(_overCount + 1)
                                    1- 1469     	.line	692, "main.c"; 	ledLightTime = 5;
     0048 2105                      1- 1470     	MOVIA	0x05
                                    1- 1471     	BANKSEL	_ledLightTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 1472     	MOVAR	_ledLightTime
                                    1- 1473     	.line	693, "main.c"; 	workStep = 0;
                                    1- 1474     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 1475     	CLRR	_workStep
                                    1- 1476     	.line	694, "main.c"; 	overFlag = 1;
     004D 2101                      1- 1477     	MOVIA	0x01
                                    1- 1478     	BANKSEL	_overFlag
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1479     	MOVAR	_overFlag
                                    1- 1480     	.line	695, "main.c"; 	pwmStop();
                                    1- 1481     	MCALL	_pwmStop
     0050 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1482     	MGOTO	_00664_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1483     ;;unsigned compare: left < lit (0x50=80), size=2
     0052                           1- 1484     _00663_DS_:
                                    1- 1485     	.line	703, "main.c"; 	else if(R_AIN4_DATA >= 80)
     0052 2100                      1- 1486     	MOVIA	0x00
                                    1- 1487     	BANKSEL	_R_AIN4_DATA
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 04rr                      1- 1488     	SUBAR	(_R_AIN4_DATA + 1),W
     0055 0903                      1- 1489     	BTRSS	STATUS,2
                                    1- 1490     	MGOTO	_00738_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057 2150                      1- 1491     	MOVIA	0x50
     0058 04rr                      1- 1492     	SUBAR	_R_AIN4_DATA,W
     0059                           1- 1493     _00738_DS_:
     0059 0803                      1- 1494     	BTRSS	STATUS,0
                                    1- 1495     	MGOTO	_00660_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1496     	.line	705, "main.c"; 	if(overCount > 0)
                                    1- 1497     	BANKSEL	_overCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 1498     	MOVR	_overCount,W
     005D 11rr                      1- 1499     	IORAR	(_overCount + 1),W
     005E 0D03                      1- 1500     	BTRSC	STATUS,2
                                    1- 1501     	MGOTO	_00616_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1502     	.line	707, "main.c"; 	overCount--;
     0060 21FF                      1- 1503     	MOVIA	0xff
     0061 03rr                      1- 1504     	ADDAR	_overCount,F
     0062 0803                      1- 1505     	BTRSS	STATUS,0
     0063 06rr                      1- 1506     	DECR	(_overCount + 1),F
     0064                           1- 1507     _00616_DS_:
                                    1- 1508     	.line	710, "main.c"; 	addPWMFlag = 1;
     0064 2101                      1- 1509     	MOVIA	0x01
                                    1- 1510     	BANKSEL	_addPWMFlag
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1511     	MOVAR	_addPWMFlag
                                    1- 1512     	MGOTO	_00664_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068                           1- 1513     _00660_DS_:
                                    1- 1514     	.line	716, "main.c"; 	if(overCount > 0)
                                    1- 1515     	BANKSEL	_overCount
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 1516     	MOVR	_overCount,W
     006A 11rr                      1- 1517     	IORAR	(_overCount + 1),W
     006B 0D03                      1- 1518     	BTRSC	STATUS,2
                                    1- 1519     	MGOTO	_00618_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1520     	.line	718, "main.c"; 	overCount--;
     006D 21FF                      1- 1521     	MOVIA	0xff
     006E 03rr                      1- 1522     	ADDAR	_overCount,F
     006F 0803                      1- 1523     	BTRSS	STATUS,0
     0070 06rr                      1- 1524     	DECR	(_overCount + 1),F
                                    1- 1525     ;;unsigned compare: left < lit (0x5=5), size=1
     0071                           1- 1526     _00618_DS_:
                                    1- 1527     	.line	720, "main.c"; 	if(workStep < 5)
     0071 2105                      1- 1528     	MOVIA	0x05
                                    1- 1529     	BANKSEL	_workStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 04rr                      1- 1530     	SUBAR	_workStep,W
     0074 0C03                      1- 1531     	BTRSC	STATUS,0
                                    1- 1532     	MGOTO	_00657_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1533     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1534     ;;unsigned compare: left >= lit (0x33=51), size=2
                                    1- 1535     	.line	722, "main.c"; 	if(R_AIN4_DATA > 50 && startTime == 0)
     0076 2100                      1- 1536     	MOVIA	0x00
                                    1- 1537     	BANKSEL	_R_AIN4_DATA
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 04rr                      1- 1538     	SUBAR	(_R_AIN4_DATA + 1),W
     0079 0903                      1- 1539     	BTRSS	STATUS,2
                                    1- 1540     	MGOTO	_00740_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B 2133                      1- 1541     	MOVIA	0x33
     007C 04rr                      1- 1542     	SUBAR	_R_AIN4_DATA,W
     007D                           1- 1543     _00740_DS_:
     007D 0803                      1- 1544     	BTRSS	STATUS,0
                                    1- 1545     	MGOTO	_00620_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1546     	BANKSEL	_startTime
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 1547     	MOVR	_startTime,W
     0081 0903                      1- 1548     	BTRSS	STATUS,2
                                    1- 1549     	MGOTO	_00620_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1550     	.line	724, "main.c"; 	addPWMFlag = 1;
     0083 2101                      1- 1551     	MOVIA	0x01
                                    1- 1552     	BANKSEL	_addPWMFlag
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 00rr                      1- 1553     	MOVAR	_addPWMFlag
                                    1- 1554     	MGOTO	_00664_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
     0087                           1- 1555     _00620_DS_:
                                    1- 1556     	.line	728, "main.c"; 	addPWMFlag = 0;
                                    1- 1557     	BANKSEL	_addPWMFlag
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 02rr                      1- 1558     	CLRR	_addPWMFlag
                                    1- 1559     	MGOTO	_00664_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1560     ;;unsigned compare: left < lit (0xA=10), size=1
     008A                           1- 1561     _00657_DS_:
                                    1- 1562     	.line	731, "main.c"; 	else if(workStep < 10)
     008A 210A                      1- 1563     	MOVIA	0x0a
                                    1- 1564     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 04rr                      1- 1565     	SUBAR	_workStep,W
     008D 0C03                      1- 1566     	BTRSC	STATUS,0
                                    1- 1567     	MGOTO	_00654_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1568     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1569     ;;unsigned compare: left >= lit (0x38=56), size=2
                                    1- 1570     	.line	733, "main.c"; 	if(R_AIN4_DATA > 55)
     008F 2100                      1- 1571     	MOVIA	0x00
                                    1- 1572     	BANKSEL	_R_AIN4_DATA
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 04rr                      1- 1573     	SUBAR	(_R_AIN4_DATA + 1),W
     0092 0903                      1- 1574     	BTRSS	STATUS,2
                                    1- 1575     	MGOTO	_00742_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
     0094 2138                      1- 1576     	MOVIA	0x38
     0095 04rr                      1- 1577     	SUBAR	_R_AIN4_DATA,W
     0096                           1- 1578     _00742_DS_:
     0096 0803                      1- 1579     	BTRSS	STATUS,0
                                    1- 1580     	MGOTO	_00624_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1581     	.line	735, "main.c"; 	addPWMFlag = 1;
     0098 2101                      1- 1582     	MOVIA	0x01
                                    1- 1583     	BANKSEL	_addPWMFlag
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 1584     	MOVAR	_addPWMFlag
                                    1- 1585     	MGOTO	_00664_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
     009C                           1- 1586     _00624_DS_:
                                    1- 1587     	.line	739, "main.c"; 	addPWMFlag = 0;
                                    1- 1588     	BANKSEL	_addPWMFlag
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 02rr                      1- 1589     	CLRR	_addPWMFlag
                                    1- 1590     	MGOTO	_00664_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1591     ;;unsigned compare: left < lit (0xF=15), size=1
     009F                           1- 1592     _00654_DS_:
                                    1- 1593     	.line	742, "main.c"; 	else if(workStep < 15)
     009F 210F                      1- 1594     	MOVIA	0x0f
                                    1- 1595     	BANKSEL	_workStep
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 04rr                      1- 1596     	SUBAR	_workStep,W
     00A2 0C03                      1- 1597     	BTRSC	STATUS,0
                                    1- 1598     	MGOTO	_00651_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1599     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1600     ;;unsigned compare: left >= lit (0x3D=61), size=2
                                    1- 1601     	.line	744, "main.c"; 	if(R_AIN4_DATA > 60)
     00A4 2100                      1- 1602     	MOVIA	0x00
                                    1- 1603     	BANKSEL	_R_AIN4_DATA
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 04rr                      1- 1604     	SUBAR	(_R_AIN4_DATA + 1),W
     00A7 0903                      1- 1605     	BTRSS	STATUS,2
                                    1- 1606     	MGOTO	_00744_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
     00A9 213D                      1- 1607     	MOVIA	0x3d
     00AA 04rr                      1- 1608     	SUBAR	_R_AIN4_DATA,W
     00AB                           1- 1609     _00744_DS_:
     00AB 0803                      1- 1610     	BTRSS	STATUS,0
                                    1- 1611     	MGOTO	_00627_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1612     	.line	746, "main.c"; 	addPWMFlag = 1;
     00AD 2101                      1- 1613     	MOVIA	0x01
                                    1- 1614     	BANKSEL	_addPWMFlag
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 1615     	MOVAR	_addPWMFlag
                                    1- 1616     	MGOTO	_00664_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1                           1- 1617     _00627_DS_:
                                    1- 1618     	.line	750, "main.c"; 	addPWMFlag = 0;
                                    1- 1619     	BANKSEL	_addPWMFlag
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 02rr                      1- 1620     	CLRR	_addPWMFlag
                                    1- 1621     	MGOTO	_00664_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1622     ;;unsigned compare: left < lit (0x14=20), size=1
     00B4                           1- 1623     _00651_DS_:
                                    1- 1624     	.line	753, "main.c"; 	else if(workStep < 20)
     00B4 2114                      1- 1625     	MOVIA	0x14
                                    1- 1626     	BANKSEL	_workStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 04rr                      1- 1627     	SUBAR	_workStep,W
     00B7 0C03                      1- 1628     	BTRSC	STATUS,0
                                    1- 1629     	MGOTO	_00648_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1630     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1631     ;;unsigned compare: left >= lit (0x42=66), size=2
                                    1- 1632     	.line	755, "main.c"; 	if(R_AIN4_DATA > 65)
     00B9 2100                      1- 1633     	MOVIA	0x00
                                    1- 1634     	BANKSEL	_R_AIN4_DATA
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 04rr                      1- 1635     	SUBAR	(_R_AIN4_DATA + 1),W
     00BC 0903                      1- 1636     	BTRSS	STATUS,2
                                    1- 1637     	MGOTO	_00746_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
     00BE 2142                      1- 1638     	MOVIA	0x42
     00BF 04rr                      1- 1639     	SUBAR	_R_AIN4_DATA,W
     00C0                           1- 1640     _00746_DS_:
     00C0 0803                      1- 1641     	BTRSS	STATUS,0
                                    1- 1642     	MGOTO	_00630_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1643     	.line	757, "main.c"; 	addPWMFlag = 1;
     00C2 2101                      1- 1644     	MOVIA	0x01
                                    1- 1645     	BANKSEL	_addPWMFlag
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 00rr                      1- 1646     	MOVAR	_addPWMFlag
                                    1- 1647     	MGOTO	_00664_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6                           1- 1648     _00630_DS_:
                                    1- 1649     	.line	761, "main.c"; 	addPWMFlag = 0;
                                    1- 1650     	BANKSEL	_addPWMFlag
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 02rr                      1- 1651     	CLRR	_addPWMFlag
                                    1- 1652     	MGOTO	_00664_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1653     ;;unsigned compare: left < lit (0x19=25), size=1
     00C9                           1- 1654     _00648_DS_:
                                    1- 1655     	.line	764, "main.c"; 	else if(workStep < 25)
     00C9 2119                      1- 1656     	MOVIA	0x19
                                    1- 1657     	BANKSEL	_workStep
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 04rr                      1- 1658     	SUBAR	_workStep,W
     00CC 0C03                      1- 1659     	BTRSC	STATUS,0
                                    1- 1660     	MGOTO	_00645_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1661     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1662     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 1663     	.line	766, "main.c"; 	if(R_AIN4_DATA > 70)
     00CE 2100                      1- 1664     	MOVIA	0x00
                                    1- 1665     	BANKSEL	_R_AIN4_DATA
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 04rr                      1- 1666     	SUBAR	(_R_AIN4_DATA + 1),W
     00D1 0903                      1- 1667     	BTRSS	STATUS,2
                                    1- 1668     	MGOTO	_00748_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
     00D3 2147                      1- 1669     	MOVIA	0x47
     00D4 04rr                      1- 1670     	SUBAR	_R_AIN4_DATA,W
     00D5                           1- 1671     _00748_DS_:
     00D5 0803                      1- 1672     	BTRSS	STATUS,0
                                    1- 1673     	MGOTO	_00633_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1674     	.line	768, "main.c"; 	addPWMFlag = 1;
     00D7 2101                      1- 1675     	MOVIA	0x01
                                    1- 1676     	BANKSEL	_addPWMFlag
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 00rr                      1- 1677     	MOVAR	_addPWMFlag
                                    1- 1678     	MGOTO	_00664_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
     00DB                           1- 1679     _00633_DS_:
                                    1- 1680     	.line	772, "main.c"; 	addPWMFlag = 0;
                                    1- 1681     	BANKSEL	_addPWMFlag
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 02rr                      1- 1682     	CLRR	_addPWMFlag
                                    1- 1683     	MGOTO	_00664_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1684     ;;unsigned compare: left < lit (0x1D=29), size=1
     00DE                           1- 1685     _00645_DS_:
                                    1- 1686     	.line	775, "main.c"; 	else if(workStep < 29)
     00DE 211D                      1- 1687     	MOVIA	0x1d
                                    1- 1688     	BANKSEL	_workStep
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 04rr                      1- 1689     	SUBAR	_workStep,W
     00E1 0C03                      1- 1690     	BTRSC	STATUS,0
                                    1- 1691     	MGOTO	_00642_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1692     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1693     ;;unsigned compare: left >= lit (0x4C=76), size=2
                                    1- 1694     	.line	777, "main.c"; 	if(R_AIN4_DATA > 75)
     00E3 2100                      1- 1695     	MOVIA	0x00
                                    1- 1696     	BANKSEL	_R_AIN4_DATA
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 1697     	SUBAR	(_R_AIN4_DATA + 1),W
     00E6 0903                      1- 1698     	BTRSS	STATUS,2
                                    1- 1699     	MGOTO	_00750_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8 214C                      1- 1700     	MOVIA	0x4c
     00E9 04rr                      1- 1701     	SUBAR	_R_AIN4_DATA,W
     00EA                           1- 1702     _00750_DS_:
     00EA 0803                      1- 1703     	BTRSS	STATUS,0
                                    1- 1704     	MGOTO	_00636_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1705     	.line	779, "main.c"; 	addPWMFlag = 1;
     00EC 2101                      1- 1706     	MOVIA	0x01
                                    1- 1707     	BANKSEL	_addPWMFlag
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 1708     	MOVAR	_addPWMFlag
                                    1- 1709     	MGOTO	_00664_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
     00F0                           1- 1710     _00636_DS_:
                                    1- 1711     	.line	783, "main.c"; 	addPWMFlag = 0;
                                    1- 1712     	BANKSEL	_addPWMFlag
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 02rr                      1- 1713     	CLRR	_addPWMFlag
                                    1- 1714     	MGOTO	_00664_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1715     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1716     ;;unsigned compare: left >= lit (0x51=81), size=2
     00F3                           1- 1717     _00642_DS_:
                                    1- 1718     	.line	788, "main.c"; 	if(R_AIN4_DATA > 80)
     00F3 2100                      1- 1719     	MOVIA	0x00
                                    1- 1720     	BANKSEL	_R_AIN4_DATA
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 04rr                      1- 1721     	SUBAR	(_R_AIN4_DATA + 1),W
     00F6 0903                      1- 1722     	BTRSS	STATUS,2
                                    1- 1723     	MGOTO	_00751_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
     00F8 2151                      1- 1724     	MOVIA	0x51
     00F9 04rr                      1- 1725     	SUBAR	_R_AIN4_DATA,W
     00FA                           1- 1726     _00751_DS_:
     00FA 0803                      1- 1727     	BTRSS	STATUS,0
                                    1- 1728     	MGOTO	_00639_DS_
     00FB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1729     	.line	790, "main.c"; 	addPWMFlag = 1;
     00FC 2101                      1- 1730     	MOVIA	0x01
                                    1- 1731     	BANKSEL	_addPWMFlag
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 1732     	MOVAR	_addPWMFlag
                                    1- 1733     	MGOTO	_00664_DS_
     00FF 3rrr                      3-   63 m1      LGOTO rom_address
     0100                           1- 1734     _00639_DS_:
                                    1- 1735     	.line	794, "main.c"; 	addPWMFlag = 0;
                                    1- 1736     	BANKSEL	_addPWMFlag
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 02rr                      1- 1737     	CLRR	_addPWMFlag
     0102                           1- 1738     _00664_DS_:
                                    1- 1739     	.line	800, "main.c"; 	if(addPWMFlag)
                                    1- 1740     	BANKSEL	_addPWMFlag
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 01rr                      1- 1741     	MOVR	_addPWMFlag,W
     0104 0D03                      1- 1742     	BTRSC	STATUS,2
                                    1- 1743     	MGOTO	_00669_DS_
     0105 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1744     ;;unsigned compare: left < lit (0x9=9), size=1
                                    1- 1745     	.line	802, "main.c"; 	if(workStep < 9)
     0106 2109                      1- 1746     	MOVIA	0x09
                                    1- 1747     	BANKSEL	_workStep
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 04rr                      1- 1748     	SUBAR	_workStep,W
     0109 0C03                      1- 1749     	BTRSC	STATUS,0
                                    1- 1750     	MGOTO	_00666_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1751     	.line	803, "main.c"; 	tempDuty = 154 + workStep*2;
     010B 2102                      1- 1752     	MOVIA	0x02
     010C 00rr                      1- 1753     	MOVAR	STK00
     010D 01rr                      1- 1754     	MOVR	_workStep,W
                                    1- 1755     	MCALL	__mulchar
     010E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1756     	BANKSEL	r0x1048
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 00rr                      1- 1757     	MOVAR	r0x1048
     0111 219A                      1- 1758     	MOVIA	0x9a
     0112 03rr                      1- 1759     	ADDAR	r0x1048,W
                                    1- 1760     	BANKSEL	_tempDuty
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 00rr                      1- 1761     	MOVAR	_tempDuty
                                    1- 1762     	MGOTO	_00670_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
     0116                           1- 1763     _00666_DS_:
                                    1- 1764     	.line	805, "main.c"; 	tempDuty = 162 + workStep;
     0116 21A2                      1- 1765     	MOVIA	0xa2
                                    1- 1766     	BANKSEL	_workStep
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 03rr                      1- 1767     	ADDAR	_workStep,W
                                    1- 1768     	BANKSEL	_tempDuty
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 00rr                      1- 1769     	MOVAR	_tempDuty
                                    1- 1770     	MGOTO	_00670_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
     011C                           1- 1771     _00669_DS_:
                                    1- 1772     	.line	809, "main.c"; 	tempDuty = 68 + workStep;
     011C 2144                      1- 1773     	MOVIA	0x44
                                    1- 1774     	BANKSEL	_workStep
     011D rrrr                      3-  110 m1      .banksel ram_address
     011E 03rr                      1- 1775     	ADDAR	_workStep,W
                                    1- 1776     	BANKSEL	_tempDuty
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 00rr                      1- 1777     	MOVAR	_tempDuty
     0121                           1- 1778     _00670_DS_:
                                    1- 1779     	.line	811, "main.c"; 	PWM1DUTY = tempDuty;
                                    1- 1780     	BANKSEL	_tempDuty
     0121 rrrr                      3-  110 m1      .banksel ram_address
     0122 01rr                      1- 1781     	MOVR	_tempDuty,W
     0123 00rr                      1- 1782     	SFUN	_PWM1DUTY
                                    1- 1783     	.line	813, "main.c"; 	}
                                    1- 1784     	RETURN	
     0124 0010                      3-   40 m1      ret
                                    1- 1785     ; exit point of _checkOutA
                                    1- 1787     ;***
                                    1- 1788     ;  pBlock Stats: dbName = C
                                    1- 1789     ;***
                                    1- 1790     ;has an exit
                                    1- 1791     ;functions called:
                                    1- 1792     ;   _F_AIN2_Convert
                                    1- 1793     ;   __divuint
                                    1- 1794     ;   _F_AIN2_Convert
                                    1- 1795     ;   __divuint
                                    1- 1796     ;7 compiler assigned registers:
                                    1- 1797     ;   r0x104C
                                    1- 1798     ;   r0x104D
                                    1- 1799     ;   r0x104E
                                    1- 1800     ;   r0x104F
                                    1- 1801     ;   STK02
                                    1- 1802     ;   STK01
                                    1- 1803     ;   STK00
                                    1- 1804     ;; Starting pCode block
                                    1- 1805     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1807     _checkBatAD:
                                    1- 1808     ; 2 exit points
                                    1- 1809     	.line	601, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1810     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1811     	CLRR	_R_AIN2_DATA_LB
                                    1- 1812     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1813     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1814     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1815     	.line	602, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1816     	MOVIA	0x08
                                    1- 1817     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1818     	.line	603, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1819     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1820     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1821     	ANDIA	0xf0
     000A 00rr                      1- 1822     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1823     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1824     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1825     	ANDIA	0x0f
     000E 11rr                      1- 1826     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1827     	XORAR	_R_AIN2_DATA,F
                                    1- 1828     	.line	604, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1829     	MOVIA	0xf0
                                    1- 1830     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1831     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1832     	.line	605, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1833     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1834     	BANKSEL	r0x104E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1835     	MOVAR	r0x104E
                                    1- 1836     	BANKSEL	r0x104C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1837     	MOVAR	r0x104C
                                    1- 1838     	BANKSEL	r0x104D
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1839     	CLRR	r0x104D
                                    1- 1840     ;;110	MOVR	r0x104C,W
     001A 2100                      1- 1841     	MOVIA	0x00
                                    1- 1842     	BANKSEL	r0x104F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1843     	MOVAR	r0x104F
                                    1- 1844     	BANKSEL	r0x104E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1845     	MOVR	r0x104E,W
                                    1- 1846     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1847     	ADDAR	_R_AIN2_DATA,F
                                    1- 1848     	BANKSEL	r0x104F
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1849     	MOVR	r0x104F,W
     0023 0C03                      1- 1850     	BTRSC	STATUS,0
     0024 05rr                      1- 1851     	INCR	r0x104F,W
     0025 0D03                      1- 1852     	BTRSC	STATUS,2
                                    1- 1853     	MGOTO	_00005_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1854     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1855     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1856     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1857     _00005_DS_:
                                    1- 1858     	.line	606, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1859     	BCR	STATUS,0
                                    1- 1860     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1861     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1862     	RRR	_R_AIN2_DATA,F
                                    1- 1863     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1864     	BCR	STATUS,0
     002E 13rr                      1- 1865     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1866     	RRR	_R_AIN2_DATA,F
                                    1- 1867     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1868     	BCR	STATUS,0
     0031 13rr                      1- 1869     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1870     	RRR	_R_AIN2_DATA,F
                                    1- 1871     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1872     ;;unsigned compare: left >= lit (0x60D=1549), size=2
                                    1- 1873     	.line	607, "main.c"; 	if(R_AIN2_DATA > 1548)
     0033 2106                      1- 1874     	MOVIA	0x06
     0034 04rr                      1- 1875     	SUBAR	(_R_AIN2_DATA + 1),W
     0035 0903                      1- 1876     	BTRSS	STATUS,2
                                    1- 1877     	MGOTO	_00599_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 210D                      1- 1878     	MOVIA	0x0d
     0038 04rr                      1- 1879     	SUBAR	_R_AIN2_DATA,W
     0039                           1- 1880     _00599_DS_:
     0039 0803                      1- 1881     	BTRSS	STATUS,0
                                    1- 1882     	MGOTO	_00531_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1883     	.line	609, "main.c"; 	batValue = 99;
     003B 2163                      1- 1884     	MOVIA	0x63
                                    1- 1885     	BANKSEL	_batValue
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1886     	MOVAR	_batValue
                                    1- 1887     	.line	610, "main.c"; 	if(++batFullTime > 3000)
                                    1- 1888     	BANKSEL	_batFullTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1- 1889     	INCR	_batFullTime,F
     0040 0D03                      1- 1890     	BTRSC	STATUS,2
     0041 05rr                      1- 1891     	INCR	(_batFullTime + 1),F
                                    1- 1892     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1893     ;;unsigned compare: left >= lit (0xBB9=3001), size=2
     0042 210B                      1- 1894     	MOVIA	0x0b
     0043 04rr                      1- 1895     	SUBAR	(_batFullTime + 1),W
     0044 0903                      1- 1896     	BTRSS	STATUS,2
                                    1- 1897     	MGOTO	_00600_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
     0046 21B9                      1- 1898     	MOVIA	0xb9
     0047 04rr                      1- 1899     	SUBAR	_batFullTime,W
     0048                           1- 1900     _00600_DS_:
     0048 0803                      1- 1901     	BTRSS	STATUS,0
                                    1- 1902     	MGOTO	_00532_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1903     	.line	612, "main.c"; 	batFullTime = 3000;
     004A 21B8                      1- 1904     	MOVIA	0xb8
                                    1- 1905     	BANKSEL	_batFullTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 1906     	MOVAR	_batFullTime
     004D 210B                      1- 1907     	MOVIA	0x0b
     004E 00rr                      1- 1908     	MOVAR	(_batFullTime + 1)
                                    1- 1909     	.line	613, "main.c"; 	batValue = 100;
     004F 2164                      1- 1910     	MOVIA	0x64
                                    1- 1911     	BANKSEL	_batValue
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 1912     	MOVAR	_batValue
                                    1- 1913     	MGOTO	_00532_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1914     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1915     ;;unsigned compare: left >= lit (0x5BD=1469), size=2
     0053                           1- 1916     _00531_DS_:
                                    1- 1917     	.line	617, "main.c"; 	else if(R_AIN2_DATA > 1468)		//80%
     0053 2105                      1- 1918     	MOVIA	0x05
                                    1- 1919     	BANKSEL	_R_AIN2_DATA
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 1920     	SUBAR	(_R_AIN2_DATA + 1),W
     0056 0903                      1- 1921     	BTRSS	STATUS,2
                                    1- 1922     	MGOTO	_00601_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058 21BD                      1- 1923     	MOVIA	0xbd
     0059 04rr                      1- 1924     	SUBAR	_R_AIN2_DATA,W
     005A                           1- 1925     _00601_DS_:
     005A 0803                      1- 1926     	BTRSS	STATUS,0
                                    1- 1927     	MGOTO	_00528_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1928     	.line	619, "main.c"; 	batFullTime = 0;
                                    1- 1929     	BANKSEL	_batFullTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 1930     	CLRR	_batFullTime
     005E 02rr                      1- 1931     	CLRR	(_batFullTime + 1)
                                    1- 1932     	.line	620, "main.c"; 	batValue = (R_AIN2_DATA-1468)/4;
     005F 2144                      1- 1933     	MOVIA	0x44
                                    1- 1934     	BANKSEL	_R_AIN2_DATA
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 03rr                      1- 1935     	ADDAR	_R_AIN2_DATA,W
                                    1- 1936     	BANKSEL	r0x104C
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 00rr                      1- 1937     	MOVAR	r0x104C
     0064 21FA                      1- 1938     	MOVIA	0xfa
                                    1- 1939     	BANKSEL	r0x104D
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1940     	MOVAR	r0x104D
                                    1- 1941     	BANKSEL	_R_AIN2_DATA
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 1942     	MOVR	(_R_AIN2_DATA + 1),W
     0069 0C03                      1- 1943     	BTRSC	STATUS,0
     006A 05rr                      1- 1944     	INCR	(_R_AIN2_DATA + 1),W
     006B 0D03                      1- 1945     	BTRSC	STATUS,2
                                    1- 1946     	MGOTO	_00006_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1947     	BANKSEL	r0x104D
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 03rr                      1- 1948     	ADDAR	r0x104D,F
                                    1- 1949     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=0, offr=0
     006F                           1- 1950     _00006_DS_:
     006F 1C03                      1- 1951     	BCR	STATUS,0
                                    1- 1952     	BANKSEL	r0x104D
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 13rr                      1- 1953     	RRR	r0x104D,W
                                    1- 1954     	BANKSEL	r0x104F
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1955     	MOVAR	r0x104F
                                    1- 1956     	BANKSEL	r0x104C
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 13rr                      1- 1957     	RRR	r0x104C,W
                                    1- 1958     	BANKSEL	r0x104E
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 1959     	MOVAR	r0x104E
                                    1- 1960     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0078 1C03                      1- 1961     	BCR	STATUS,0
                                    1- 1962     	BANKSEL	r0x104F
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 13rr                      1- 1963     	RRR	r0x104F,F
                                    1- 1964     	BANKSEL	r0x104E
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 13rr                      1- 1965     	RRR	r0x104E,F
     007D 01rr                      1- 1966     	MOVR	r0x104E,W
                                    1- 1967     	BANKSEL	_batValue
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 1968     	MOVAR	_batValue
                                    1- 1969     	.line	621, "main.c"; 	batValue += 80;
     0080 2150                      1- 1970     	MOVIA	0x50
     0081 03rr                      1- 1971     	ADDAR	_batValue,F
                                    1- 1972     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1973     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 1974     	.line	622, "main.c"; 	if(batValue > 99)
     0082 2164                      1- 1975     	MOVIA	0x64
     0083 04rr                      1- 1976     	SUBAR	_batValue,W
     0084 0803                      1- 1977     	BTRSS	STATUS,0
                                    1- 1978     	MGOTO	_00532_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1979     	.line	623, "main.c"; 	batValue = 98;
     0086 2162                      1- 1980     	MOVIA	0x62
     0087 00rr                      1- 1981     	MOVAR	_batValue
                                    1- 1982     	MGOTO	_00532_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1983     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1984     ;;unsigned compare: left >= lit (0x53F=1343), size=2
     0089                           1- 1985     _00528_DS_:
                                    1- 1986     	.line	625, "main.c"; 	else if(R_AIN2_DATA > 1342)			
     0089 2105                      1- 1987     	MOVIA	0x05
                                    1- 1988     	BANKSEL	_R_AIN2_DATA
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 1989     	SUBAR	(_R_AIN2_DATA + 1),W
     008C 0903                      1- 1990     	BTRSS	STATUS,2
                                    1- 1991     	MGOTO	_00603_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E 213F                      1- 1992     	MOVIA	0x3f
     008F 04rr                      1- 1993     	SUBAR	_R_AIN2_DATA,W
     0090                           1- 1994     _00603_DS_:
     0090 0803                      1- 1995     	BTRSS	STATUS,0
                                    1- 1996     	MGOTO	_00525_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1997     	.line	627, "main.c"; 	batValue = (R_AIN2_DATA-1330)/2;
     0092 21CE                      1- 1998     	MOVIA	0xce
                                    1- 1999     	BANKSEL	_R_AIN2_DATA
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 03rr                      1- 2000     	ADDAR	_R_AIN2_DATA,W
                                    1- 2001     	BANKSEL	r0x104C
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 2002     	MOVAR	r0x104C
     0097 21FA                      1- 2003     	MOVIA	0xfa
                                    1- 2004     	BANKSEL	r0x104D
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 2005     	MOVAR	r0x104D
                                    1- 2006     	BANKSEL	_R_AIN2_DATA
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 01rr                      1- 2007     	MOVR	(_R_AIN2_DATA + 1),W
     009C 0C03                      1- 2008     	BTRSC	STATUS,0
     009D 05rr                      1- 2009     	INCR	(_R_AIN2_DATA + 1),W
     009E 0D03                      1- 2010     	BTRSC	STATUS,2
                                    1- 2011     	MGOTO	_00007_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2012     	BANKSEL	r0x104D
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 03rr                      1- 2013     	ADDAR	r0x104D,F
                                    1- 2014     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=0, offr=0
     00A2                           1- 2015     _00007_DS_:
     00A2 1C03                      1- 2016     	BCR	STATUS,0
                                    1- 2017     	BANKSEL	r0x104D
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 13rr                      1- 2018     	RRR	r0x104D,W
                                    1- 2019     	BANKSEL	r0x104F
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 2020     	MOVAR	r0x104F
                                    1- 2021     	BANKSEL	r0x104C
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 13rr                      1- 2022     	RRR	r0x104C,W
                                    1- 2023     	BANKSEL	r0x104E
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 2024     	MOVAR	r0x104E
                                    1- 2025     	BANKSEL	_batValue
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1- 2026     	MOVAR	_batValue
                                    1- 2027     	.line	628, "main.c"; 	batValue += 10;
     00AD 210A                      1- 2028     	MOVIA	0x0a
     00AE 03rr                      1- 2029     	ADDAR	_batValue,F
                                    1- 2030     	MGOTO	_00532_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2031     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2032     ;;unsigned compare: left >= lit (0x4A8=1192), size=2
     00B0                           1- 2033     _00525_DS_:
                                    1- 2034     	.line	630, "main.c"; 	else if(R_AIN2_DATA > 1191)
     00B0 2104                      1- 2035     	MOVIA	0x04
                                    1- 2036     	BANKSEL	_R_AIN2_DATA
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 04rr                      1- 2037     	SUBAR	(_R_AIN2_DATA + 1),W
     00B3 0903                      1- 2038     	BTRSS	STATUS,2
                                    1- 2039     	MGOTO	_00604_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
     00B5 21A8                      1- 2040     	MOVIA	0xa8
     00B6 04rr                      1- 2041     	SUBAR	_R_AIN2_DATA,W
     00B7                           1- 2042     _00604_DS_:
     00B7 0803                      1- 2043     	BTRSS	STATUS,0
                                    1- 2044     	MGOTO	_00522_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2045     	.line	632, "main.c"; 	batValue = (R_AIN2_DATA-1191)/15;
     00B9 2159                      1- 2046     	MOVIA	0x59
                                    1- 2047     	BANKSEL	_R_AIN2_DATA
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 03rr                      1- 2048     	ADDAR	_R_AIN2_DATA,W
                                    1- 2049     	BANKSEL	r0x104C
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 2050     	MOVAR	r0x104C
     00BE 21FB                      1- 2051     	MOVIA	0xfb
                                    1- 2052     	BANKSEL	r0x104D
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 2053     	MOVAR	r0x104D
                                    1- 2054     	BANKSEL	_R_AIN2_DATA
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 2055     	MOVR	(_R_AIN2_DATA + 1),W
     00C3 0C03                      1- 2056     	BTRSC	STATUS,0
     00C4 05rr                      1- 2057     	INCR	(_R_AIN2_DATA + 1),W
     00C5 0D03                      1- 2058     	BTRSC	STATUS,2
                                    1- 2059     	MGOTO	_00008_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2060     	BANKSEL	r0x104D
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 03rr                      1- 2061     	ADDAR	r0x104D,F
     00C9                           1- 2062     _00008_DS_:
     00C9 210F                      1- 2063     	MOVIA	0x0f
     00CA 00rr                      1- 2064     	MOVAR	STK02
     00CB 2100                      1- 2065     	MOVIA	0x00
     00CC 00rr                      1- 2066     	MOVAR	STK01
                                    1- 2067     	BANKSEL	r0x104C
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 01rr                      1- 2068     	MOVR	r0x104C,W
     00CF 00rr                      1- 2069     	MOVAR	STK00
                                    1- 2070     	BANKSEL	r0x104D
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 2071     	MOVR	r0x104D,W
                                    1- 2072     	MCALL	__divuint
     00D2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2073     	BANKSEL	r0x104D
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 2074     	MOVAR	r0x104D
     00D5 01rr                      1- 2075     	MOVR	STK00,W
                                    1- 2076     	BANKSEL	r0x104C
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 00rr                      1- 2077     	MOVAR	r0x104C
                                    1- 2078     	BANKSEL	_batValue
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 00rr                      1- 2079     	MOVAR	_batValue
                                    1- 2080     	MGOTO	_00532_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
     00DB                           1- 2081     _00522_DS_:
                                    1- 2082     	.line	636, "main.c"; 	batValue = 0;
                                    1- 2083     	BANKSEL	_batValue
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 02rr                      1- 2084     	CLRR	_batValue
     00DD                           1- 2085     _00532_DS_:
                                    1- 2086     	.line	639, "main.c"; 	if(showBatValue == 0)
                                    1- 2087     	BANKSEL	_showBatValue
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 01rr                      1- 2088     	MOVR	_showBatValue,W
     00DF 0903                      1- 2089     	BTRSS	STATUS,2
                                    1- 2090     	MGOTO	_00534_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2091     	.line	641, "main.c"; 	showBatValue = batValue;
                                    1- 2092     	BANKSEL	_batValue
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 01rr                      1- 2093     	MOVR	_batValue,W
                                    1- 2094     	BANKSEL	_showBatValue
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 00rr                      1- 2095     	MOVAR	_showBatValue
     00E5                           1- 2096     _00534_DS_:
                                    1- 2097     	.line	643, "main.c"; 	if(chrgFlag == 0)
                                    1- 2098     	BANKSEL	_Status
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 0Drr                      1- 2099     	BTRSC	_Status,3
                                    1- 2100     	MGOTO	_00544_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2101     	.line	645, "main.c"; 	if(showBatValue > batValue && showBatValue > 0)
                                    1- 2102     	BANKSEL	_showBatValue
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 01rr                      1- 2103     	MOVR	_showBatValue,W
                                    1- 2104     	BANKSEL	_batValue
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 04rr                      1- 2105     	SUBAR	_batValue,W
     00EC 0C03                      1- 2106     	BTRSC	STATUS,0
                                    1- 2107     	MGOTO	_00540_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2108     	BANKSEL	_showBatValue
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 01rr                      1- 2109     	MOVR	_showBatValue,W
     00F0 0D03                      1- 2110     	BTRSC	STATUS,2
                                    1- 2111     	MGOTO	_00540_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2112     	.line	647, "main.c"; 	if(++subBatTime > 1000)
                                    1- 2113     	BANKSEL	_subBatTime
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 05rr                      1- 2114     	INCR	_subBatTime,F
     00F4 0D03                      1- 2115     	BTRSC	STATUS,2
     00F5 05rr                      1- 2116     	INCR	(_subBatTime + 1),F
                                    1- 2117     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2118     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     00F6 2103                      1- 2119     	MOVIA	0x03
     00F7 04rr                      1- 2120     	SUBAR	(_subBatTime + 1),W
     00F8 0903                      1- 2121     	BTRSS	STATUS,2
                                    1- 2122     	MGOTO	_00606_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
     00FA 21E9                      1- 2123     	MOVIA	0xe9
     00FB 04rr                      1- 2124     	SUBAR	_subBatTime,W
     00FC                           1- 2125     _00606_DS_:
     00FC 0803                      1- 2126     	BTRSS	STATUS,0
                                    1- 2127     	MGOTO	_00544_DS_
     00FD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2128     	.line	649, "main.c"; 	subBatTime = 0;
                                    1- 2129     	BANKSEL	_subBatTime
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 02rr                      1- 2130     	CLRR	_subBatTime
     0100 02rr                      1- 2131     	CLRR	(_subBatTime + 1)
                                    1- 2132     	.line	650, "main.c"; 	if(--showBatValue == 0)
                                    1- 2133     	BANKSEL	_showBatValue
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 17rr                      1- 2134     	DECRSZ	_showBatValue,F
                                    1- 2135     	MGOTO	_00544_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2136     	.line	652, "main.c"; 	showBatValue = 1;
     0104 2101                      1- 2137     	MOVIA	0x01
     0105 00rr                      1- 2138     	MOVAR	_showBatValue
                                    1- 2139     	MGOTO	_00544_DS_
     0106 3rrr                      3-   63 m1      LGOTO rom_address
     0107                           1- 2140     _00540_DS_:
                                    1- 2141     	.line	658, "main.c"; 	subBatTime = 0;
                                    1- 2142     	BANKSEL	_subBatTime
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 02rr                      1- 2143     	CLRR	_subBatTime
     0109 02rr                      1- 2144     	CLRR	(_subBatTime + 1)
     010A                           1- 2145     _00544_DS_:
                                    1- 2146     	.line	662, "main.c"; 	if(showBatValue < batValue)
                                    1- 2147     	BANKSEL	_batValue
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 01rr                      1- 2148     	MOVR	_batValue,W
                                    1- 2149     	BANKSEL	_showBatValue
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 04rr                      1- 2150     	SUBAR	_showBatValue,W
     010E 0C03                      1- 2151     	BTRSC	STATUS,0
                                    1- 2152     	MGOTO	_00550_DS_
     010F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2153     	.line	664, "main.c"; 	if(++batTime > 1000)
                                    1- 2154     	BANKSEL	_batTime
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 05rr                      1- 2155     	INCR	_batTime,F
     0112 0D03                      1- 2156     	BTRSC	STATUS,2
     0113 05rr                      1- 2157     	INCR	(_batTime + 1),F
                                    1- 2158     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2159     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0114 2103                      1- 2160     	MOVIA	0x03
     0115 04rr                      1- 2161     	SUBAR	(_batTime + 1),W
     0116 0903                      1- 2162     	BTRSS	STATUS,2
                                    1- 2163     	MGOTO	_00608_DS_
     0117 3rrr                      3-   63 m1      LGOTO rom_address
     0118 21E9                      1- 2164     	MOVIA	0xe9
     0119 04rr                      1- 2165     	SUBAR	_batTime,W
     011A                           1- 2166     _00608_DS_:
     011A 0803                      1- 2167     	BTRSS	STATUS,0
                                    1- 2168     	MGOTO	_00552_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2169     	.line	666, "main.c"; 	batTime = 0;
                                    1- 2170     	BANKSEL	_batTime
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 02rr                      1- 2171     	CLRR	_batTime
     011E 02rr                      1- 2172     	CLRR	(_batTime + 1)
                                    1- 2173     	.line	667, "main.c"; 	if(++showBatValue > 99)
                                    1- 2174     	BANKSEL	_showBatValue
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 05rr                      1- 2175     	INCR	_showBatValue,F
                                    1- 2176     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2177     ;;unsigned compare: left >= lit (0x64=100), size=1
     0121 2164                      1- 2178     	MOVIA	0x64
     0122 04rr                      1- 2179     	SUBAR	_showBatValue,W
     0123 0803                      1- 2180     	BTRSS	STATUS,0
                                    1- 2181     	MGOTO	_00552_DS_
     0124 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2182     	.line	668, "main.c"; 	showBatValue = 99;
     0125 2163                      1- 2183     	MOVIA	0x63
     0126 00rr                      1- 2184     	MOVAR	_showBatValue
                                    1- 2185     	MGOTO	_00552_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
     0128                           1- 2186     _00550_DS_:
                                    1- 2187     	.line	673, "main.c"; 	batTime = 0;
                                    1- 2188     	BANKSEL	_batTime
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 02rr                      1- 2189     	CLRR	_batTime
     012A 02rr                      1- 2190     	CLRR	(_batTime + 1)
     012B                           1- 2191     _00552_DS_:
                                    1- 2192     	.line	675, "main.c"; 	}
                                    1- 2193     	RETURN	
     012B 0010                      3-   40 m1      ret
                                    1- 2194     ; exit point of _checkBatAD
                                    1- 2196     ;***
                                    1- 2197     ;  pBlock Stats: dbName = C
                                    1- 2198     ;***
                                    1- 2199     ;has an exit
                                    1- 2200     ;functions called:
                                    1- 2201     ;   _delay
                                    1- 2202     ;   _delay
                                    1- 2203     ;1 compiler assigned register :
                                    1- 2204     ;   STK00
                                    1- 2205     ;; Starting pCode block
                                    1- 2206     .segment "code"; module=main, function=_initAD
     0000                           1- 2208     _initAD:
                                    1- 2209     ; 2 exit points
                                    1- 2210     	.line	577, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2211     	MOVIA	0x84
     0001 00rr                      1- 2212     	MOVAR	_ADMD
                                    1- 2213     	.line	582, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2214     	CLRR	_ADVREFH
                                    1- 2215     	.line	587, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2216     	MOVIA	0x10
     0004 00rr                      1- 2217     	MOVAR	_ADR
                                    1- 2218     	.line	589, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2219     	MOVIA	0x03
     0006 00rr                      1- 2220     	MOVAR	_ADCR
                                    1- 2221     	.line	591, "main.c"; 	PACON = C_PA3_AIN3 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2118                      1- 2222     	MOVIA	0x18
     0008 00rr                      1- 2223     	MOVAR	_PACON
                                    1- 2224     	.line	592, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 2225     	BSR	_ADMDbits,4
                                    1- 2226     	.line	593, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 2227     	MOVIA	0x64
     000B 00rr                      1- 2228     	MOVAR	STK00
     000C 2100                      1- 2229     	MOVIA	0x00
                                    1- 2230     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2231     	.line	596, "main.c"; 	}
                                    1- 2232     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2233     ; exit point of _initAD
                                    1- 2235     ;***
                                    1- 2236     ;  pBlock Stats: dbName = C
                                    1- 2237     ;***
                                    1- 2238     ;has an exit
                                    1- 2239     ;functions called:
                                    1- 2240     ;   _checkBatAD
                                    1- 2241     ;   _setInput
                                    1- 2242     ;   _pwmStop
                                    1- 2243     ;   _pwm1Stop
                                    1- 2244     ;   _checkBatAD
                                    1- 2245     ;   _setInput
                                    1- 2246     ;   _pwmStop
                                    1- 2247     ;   _pwm1Stop
                                    1- 2248     ;; Starting pCode block
                                    1- 2249     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2251     _gotoSleep:
                                    1- 2252     ; 2 exit points
                                    1- 2253     	.line	540, "main.c"; 	checkBatAD();
                                    1- 2254     	MCALL	_checkBatAD
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2255     	.line	541, "main.c"; 	setInput();
                                    1- 2256     	MCALL	_setInput
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2257     	.line	542, "main.c"; 	count5s = 0;
                                    1- 2258     	BANKSEL	_count5s
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2259     	CLRR	_count5s
     0004 02rr                      1- 2260     	CLRR	(_count5s + 1)
                                    1- 2261     	.line	543, "main.c"; 	addPWMFlag = 0;
                                    1- 2262     	BANKSEL	_addPWMFlag
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2263     	CLRR	_addPWMFlag
                                    1- 2264     	.line	544, "main.c"; 	showFlag = 0;
                                    1- 2265     	BANKSEL	_Status
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 1Err                      1- 2266     	BCR	_Status,4
                                    1- 2267     	.line	546, "main.c"; 	PORTB = 0x00;
     0009 02rr                      1- 2268     	CLRR	_PORTB
                                    1- 2269     	.line	547, "main.c"; 	PORTA = 0x00;
                                    1- 2270     	BANKSEL	_PORTA
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2271     	CLRR	_PORTA
                                    1- 2272     	.line	548, "main.c"; 	sleepTime = 0;
                                    1- 2273     	BANKSEL	_sleepTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2274     	CLRR	_sleepTime
     000E 02rr                      1- 2275     	CLRR	(_sleepTime + 1)
                                    1- 2276     	.line	550, "main.c"; 	pwmStop();
                                    1- 2277     	MCALL	_pwmStop
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2278     	.line	551, "main.c"; 	pwm1Stop();
                                    1- 2279     	MCALL	_pwm1Stop
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2280     	.line	552, "main.c"; 	workStep = 0;
                                    1- 2281     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2282     	CLRR	_workStep
                                    1- 2283     	.line	553, "main.c"; 	AWUCON = 0xC0;
     0013 21C0                      1- 2284     	MOVIA	0xc0
     0014 00rr                      1- 2285     	MOVAR	_AWUCON
                                    1- 2286     	.line	554, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0015 210B                      1- 2287     	MOVIA	0x0b
     0016 00rr                      1- 2288     	MOVAR	_INTE
                                    1- 2289     	.line	555, "main.c"; 	PCON =  C_LVR_En;	
     0017 2108                      1- 2290     	MOVIA	0x08
     0018 00rr                      1- 2291     	MOVAR	_PCON
                                    1- 2292     	.line	556, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0019 02rr                      1- 2293     	CLRR	_INTF
                                    1- 2294     	.line	557, "main.c"; 	CLRWDT();
     001A 0002                      1- 2295     	clrwdt
                                    1- 2296     	.line	558, "main.c"; 	ENI();
     001B 0004                      1- 2297     	ENI
                                    1- 2298     	.line	559, "main.c"; 	SLEEP();
     001C 0001                      1- 2299     	sleep
                                    1- 2300     	.line	560, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2301     	CLRR	_AWUCON
                                    1- 2302     	.line	562, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001E 2101                      1- 2303     	MOVIA	0x01
     001F 00rr                      1- 2304     	MOVAR	_INTE
                                    1- 2305     	.line	563, "main.c"; 	INTF = 0;
     0020 02rr                      1- 2306     	CLRR	_INTF
                                    1- 2307     	.line	565, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0021 21A8                      1- 2308     	MOVIA	0xa8
     0022 00rr                      1- 2309     	MOVAR	_PCON
                                    1- 2310     	.line	567, "main.c"; 	}
                                    1- 2311     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 2312     ; exit point of _gotoSleep
                                    1- 2314     ;***
                                    1- 2315     ;  pBlock Stats: dbName = C
                                    1- 2316     ;***
                                    1- 2317     ;has an exit
                                    1- 2318     ;; Starting pCode block
                                    1- 2319     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2321     _pwm1Stop:
                                    1- 2322     ; 2 exit points
                                    1- 2323     	.line	534, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2324     	CLRA	
     0001 00rr                      1- 2325     	SFUN	_T2CR1
                                    1- 2326     	.line	535, "main.c"; 	}
                                    1- 2327     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2328     ; exit point of _pwm1Stop
                                    1- 2330     ;***
                                    1- 2331     ;  pBlock Stats: dbName = C
                                    1- 2332     ;***
                                    1- 2333     ;has an exit
                                    1- 2334     ;1 compiler assigned register :
                                    1- 2335     ;   r0x1050
                                    1- 2336     ;; Starting pCode block
                                    1- 2337     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2339     _pwm1Init:
                                    1- 2340     ; 2 exit points
                                    1- 2341     	.line	522, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2342     	SFUNR	_T2CR1
                                    1- 2343     	BANKSEL	r0x1050
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2344     	MOVAR	r0x1050
     0003 0Frr                      1- 2345     	BTRSC	r0x1050,7
                                    1- 2346     	.line	523, "main.c"; 	return;
                                    1- 2347     	MGOTO	_00500_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2348     	.line	524, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2349     	CLRR	_TMRH
                                    1- 2350     	.line	525, "main.c"; 	TMR2 = 60;							//频率为110K
     0006 213C                      1- 2351     	MOVIA	0x3c
     0007 00rr                      1- 2352     	SFUN	_TMR2
                                    1- 2353     	.line	528, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Dis;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2108                      1- 2354     	MOVIA	0x08
     0009 00rr                      1- 2355     	SFUN	_T2CR2
                                    1- 2356     	.line	529, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2357     	MOVIA	0x83
     000B 00rr                      1- 2358     	SFUN	_T2CR1
     000C                           1- 2359     _00500_DS_:
                                    1- 2360     	.line	530, "main.c"; 	}
                                    1- 2361     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2362     ; exit point of _pwm1Init
                                    1- 2364     ;***
                                    1- 2365     ;  pBlock Stats: dbName = C
                                    1- 2366     ;***
                                    1- 2367     ;has an exit
                                    1- 2368     ;; Starting pCode block
                                    1- 2369     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2371     _pwmStop:
                                    1- 2372     ; 2 exit points
                                    1- 2373     	.line	515, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2374     	CLRA	
     0001 00rr                      1- 2375     	SFUN	_T1CR1
                                    1- 2376     	.line	516, "main.c"; 	}
                                    1- 2377     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2378     ; exit point of _pwmStop
                                    1- 2380     ;***
                                    1- 2381     ;  pBlock Stats: dbName = C
                                    1- 2382     ;***
                                    1- 2383     ;has an exit
                                    1- 2384     ;1 compiler assigned register :
                                    1- 2385     ;   r0x1051
                                    1- 2386     ;; Starting pCode block
                                    1- 2387     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2389     _pwmInit:
                                    1- 2390     ; 2 exit points
                                    1- 2391     	.line	503, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2392     	SFUNR	_T1CR1
                                    1- 2393     	BANKSEL	r0x1051
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2394     	MOVAR	r0x1051
     0003 0Frr                      1- 2395     	BTRSC	r0x1051,7
                                    1- 2396     	.line	504, "main.c"; 	return;
                                    1- 2397     	MGOTO	_00489_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2398     	.line	505, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2399     	CLRR	_TMRH
                                    1- 2400     	.line	506, "main.c"; 	TMR1 = 200;							//频率为110K
     0006 21C8                      1- 2401     	MOVIA	0xc8
     0007 00rr                      1- 2402     	SFUN	_TMR1
                                    1- 2403     	.line	509, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2404     	CLRA	
     0009 00rr                      1- 2405     	SFUN	_T1CR2
                                    1- 2406     	.line	510, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2407     	MOVIA	0x83
     000B 00rr                      1- 2408     	SFUN	_T1CR1
     000C                           1- 2409     _00489_DS_:
                                    1- 2410     	.line	511, "main.c"; 	}
                                    1- 2411     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2412     ; exit point of _pwmInit
                                    1- 2414     ;***
                                    1- 2415     ;  pBlock Stats: dbName = C
                                    1- 2416     ;***
                                    1- 2417     ;has an exit
                                    1- 2418     ;functions called:
                                    1- 2419     ;   _pwmStop
                                    1- 2420     ;   _pwmStop
                                    1- 2421     ;; Starting pCode block
                                    1- 2422     .segment "code"; module=main, function=_powerOff
     0000                           1- 2424     _powerOff:
                                    1- 2425     ; 2 exit points
                                    1- 2426     	.line	496, "main.c"; 	workStep = 0;
                                    1- 2427     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2428     	CLRR	_workStep
                                    1- 2429     	.line	497, "main.c"; 	pwmStop();
                                    1- 2430     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2431     	.line	498, "main.c"; 	}
                                    1- 2432     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2433     ; exit point of _powerOff
                                    1- 2435     ;***
                                    1- 2436     ;  pBlock Stats: dbName = C
                                    1- 2437     ;***
                                    1- 2438     ;has an exit
                                    1- 2439     ;; Starting pCode block
                                    1- 2440     .segment "code"; module=main, function=_initSys
     0000                           1- 2442     _initSys:
                                    1- 2443     ; 2 exit points
                                    1- 2444     	.line	468, "main.c"; 	DISI();
     0000 0013                      1- 2445     	DISI
                                    1- 2446     	.line	469, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA6_Input | C_PA7_Input;
     0001 21F8                      1- 2447     	MOVIA	0xf8
     0002 000r                      1- 2448     	IOST	_IOSTA
                                    1- 2449     	.line	470, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2450     	CLRA	
     0004 000r                      1- 2451     	IOST	_IOSTB
                                    1- 2452     	.line	471, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2453     	CLRR	_PORTB
                                    1- 2454     	.line	472, "main.c"; 	PORTA = 0x00;
                                    1- 2455     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2456     	CLRR	_PORTA
                                    1- 2457     	.line	473, "main.c"; 	APHCON = 0xBF;
     0008 21BF                      1- 2458     	MOVIA	0xbf
     0009 000r                      1- 2459     	IOST	_APHCON
                                    1- 2460     	.line	474, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2461     	MOVIA	0xff
     000B 00rr                      1- 2462     	MOVAR	_BPHCON
                                    1- 2463     	.line	475, "main.c"; 	ABPLCON = 0xFF;
     000C 00rr                      1- 2464     	MOVAR	_ABPLCON
                                    1- 2465     	.line	477, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1- 2466     	MOVIA	0x01
     000E 00rr                      1- 2467     	MOVAR	_INTE
                                    1- 2468     	.line	479, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 2469     	CLRA	
     0010 000r                      1- 2470     	IOST	_PCON1
                                    1- 2471     	.line	481, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 2472     	MOVIA	0x37
     0012 00rr                      1- 2473     	MOVAR	_TMR0
                                    1- 2474     	.line	482, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0013 2101                      1- 2475     	MOVIA	0x01
     0014 0003                      1- 2476     	T0MD	
                                    1- 2477     	.line	484, "main.c"; 	PCON1 = C_TMR0_En;
     0015 000r                      1- 2478     	IOST	_PCON1
                                    1- 2479     	.line	487, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0016 2188                      1- 2480     	MOVIA	0x88
     0017 00rr                      1- 2481     	MOVAR	_PCON
                                    1- 2482     	.line	490, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 2483     	MOVIA	0x01
     0019 000r                      1- 2484     	IOST	_PCON1
                                    1- 2485     	.line	491, "main.c"; 	ENI();
     001A 0004                      1- 2486     	ENI
                                    1- 2487     	.line	492, "main.c"; 	}
                                    1- 2488     	RETURN	
     001B 0010                      3-   40 m1      ret
                                    1- 2489     ; exit point of _initSys
                                    1- 2491     ;***
                                    1- 2492     ;  pBlock Stats: dbName = C
                                    1- 2493     ;***
                                    1- 2494     ;has an exit
                                    1- 2495     ;functions called:
                                    1- 2496     ;   _keyRead
                                    1- 2497     ;   _keyRead
                                    1- 2498     ;2 compiler assigned registers:
                                    1- 2499     ;   r0x1053
                                    1- 2500     ;   r0x1054
                                    1- 2501     ;; Starting pCode block
                                    1- 2502     .segment "code"; module=main, function=_keyCtr
                                    1- 2504     ;local variable name mapping:
     0000                           1- 2506     _keyCtr:
                                    1- 2507     ; 2 exit points
                                    1- 2508     	.line	417, "main.c"; 	char kclick = keyRead(0x60 & (~PORTA));
                                    1- 2509     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2510     	COMR	_PORTA,W
                                    1- 2511     	BANKSEL	r0x1053
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2512     	MOVAR	r0x1053
     0004 2160                      1- 2513     	MOVIA	0x60
     0005 10rr                      1- 2514     	ANDAR	r0x1053,F
     0006 01rr                      1- 2515     	MOVR	r0x1053,W
                                    1- 2516     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2517     	BANKSEL	r0x1053
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2518     	MOVAR	r0x1053
                                    1- 2519     	.line	418, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2520     	XORIA	0x01
     000B 0903                      1- 2521     	BTRSS	STATUS,2
                                    1- 2522     	MGOTO	_00472_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2523     	.line	420, "main.c"; 	if(keyNum == 1)
                                    1- 2524     	BANKSEL	_keyNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2525     	MOVR	_keyNum,W
     000F 2401                      1- 2526     	XORIA	0x01
     0010 0903                      1- 2527     	BTRSS	STATUS,2
                                    1- 2528     	MGOTO	_00459_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2529     	.line	422, "main.c"; 	if(workStep > 0)
                                    1- 2530     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2531     	MOVR	_workStep,W
     0014 0D03                      1- 2532     	BTRSC	STATUS,2
                                    1- 2533     	MGOTO	_00474_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2534     	.line	424, "main.c"; 	if(++workStep > 32)
     0016 05rr                      1- 2535     	INCR	_workStep,F
                                    1- 2536     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2537     ;;unsigned compare: left >= lit (0x21=33), size=1
     0017 2121                      1- 2538     	MOVIA	0x21
     0018 04rr                      1- 2539     	SUBAR	_workStep,W
     0019 0803                      1- 2540     	BTRSS	STATUS,0
                                    1- 2541     	MGOTO	_00474_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2542     	.line	426, "main.c"; 	workStep = 32;
     001B 2120                      1- 2543     	MOVIA	0x20
     001C 00rr                      1- 2544     	MOVAR	_workStep
                                    1- 2545     	MGOTO	_00474_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2546     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2547     ;;unsigned compare: left >= lit (0x2=2), size=1
     001E                           1- 2548     _00459_DS_:
                                    1- 2549     	.line	432, "main.c"; 	if(workStep > 1)
     001E 2102                      1- 2550     	MOVIA	0x02
                                    1- 2551     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2552     	SUBAR	_workStep,W
     0021 0803                      1- 2553     	BTRSS	STATUS,0
                                    1- 2554     	MGOTO	_00474_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2555     	.line	434, "main.c"; 	workStep--;
     0023 06rr                      1- 2556     	DECR	_workStep,F
                                    1- 2557     	MGOTO	_00474_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2558     _00472_DS_:
                                    1- 2559     	.line	439, "main.c"; 	else if(kclick == 2)
                                    1- 2560     	BANKSEL	r0x1053
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2561     	MOVR	r0x1053,W
     0027 2402                      1- 2562     	XORIA	0x02
     0028 0903                      1- 2563     	BTRSS	STATUS,2
                                    1- 2564     	MGOTO	_00469_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2565     	.line	441, "main.c"; 	if(workStep > 0)
                                    1- 2566     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2567     	MOVR	_workStep,W
     002C 0D03                      1- 2568     	BTRSC	STATUS,2
                                    1- 2569     	MGOTO	_00462_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2570     	.line	443, "main.c"; 	workStep = 0;
     002E 02rr                      1- 2571     	CLRR	_workStep
                                    1- 2572     	MGOTO	_00474_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 2573     _00462_DS_:
                                    1- 2574     	.line	447, "main.c"; 	workStep = 1;
     0030 2101                      1- 2575     	MOVIA	0x01
                                    1- 2576     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2577     	MOVAR	_workStep
                                    1- 2578     	.line	448, "main.c"; 	startTime = 30;		//启动一瞬间不加力
     0033 211E                      1- 2579     	MOVIA	0x1e
                                    1- 2580     	BANKSEL	_startTime
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2581     	MOVAR	_startTime
                                    1- 2582     	MGOTO	_00474_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 2583     _00469_DS_:
                                    1- 2584     	.line	451, "main.c"; 	else if((0x60 & (~PORTA)) == 0)
                                    1- 2585     	BANKSEL	_PORTA
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 2586     	MOVR	_PORTA,W
                                    1- 2587     	BANKSEL	r0x1053
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 2588     	MOVAR	r0x1053
                                    1- 2589     	BANKSEL	r0x1054
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 2590     	CLRR	r0x1054
                                    1- 2591     	BANKSEL	r0x1053
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 07rr                      1- 2592     	COMR	r0x1053,W
     003F 00rr                      1- 2593     	MOVAR	r0x1053
                                    1- 2594     	BANKSEL	r0x1054
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 07rr                      1- 2595     	COMR	r0x1054,W
     0042 00rr                      1- 2596     	MOVAR	r0x1054
                                    1- 2597     	BANKSEL	r0x1053
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2598     	MOVR	r0x1053,W
     0045 2260                      1- 2599     	ANDIA	0x60
     0046 0903                      1- 2600     	BTRSS	STATUS,2
                                    1- 2601     	MGOTO	_00474_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2602     	.line	453, "main.c"; 	if(++keyResetTime > 2)
                                    1- 2603     	BANKSEL	_keyResetTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 05rr                      1- 2604     	INCR	_keyResetTime,F
                                    1- 2605     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2606     ;;unsigned compare: left >= lit (0x3=3), size=1
     004A 2103                      1- 2607     	MOVIA	0x03
     004B 04rr                      1- 2608     	SUBAR	_keyResetTime,W
     004C 0803                      1- 2609     	BTRSS	STATUS,0
                                    1- 2610     	MGOTO	_00474_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2611     	.line	455, "main.c"; 	keyResetTime = 0;
     004E 02rr                      1- 2612     	CLRR	_keyResetTime
                                    1- 2613     	.line	456, "main.c"; 	keyNum = 0;
                                    1- 2614     	BANKSEL	_keyNum
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1- 2615     	CLRR	_keyNum
     0051                           1- 2616     _00474_DS_:
                                    1- 2617     	.line	461, "main.c"; 	}
                                    1- 2618     	RETURN	
     0051 0010                      3-   40 m1      ret
                                    1- 2619     ; exit point of _keyCtr
                                    1- 2621     ;***
                                    1- 2622     ;  pBlock Stats: dbName = C
                                    1- 2623     ;***
                                    1- 2624     ;has an exit
                                    1- 2625     ;1 compiler assigned register :
                                    1- 2626     ;   r0x1052
                                    1- 2627     ;; Starting pCode block
                                    1- 2628     .segment "code"; module=main, function=_keyRead
                                    1- 2630     ;local variable name mapping:
     0000                           1- 2632     _keyRead:
                                    1- 2633     ; 2 exit points
                                    1- 2634     	.line	353, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2635     	BANKSEL	r0x1052
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2636     	MOVAR	r0x1052
                                    1- 2637     	.line	355, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2638     	MOVR	r0x1052,W
     0003 0D03                      1- 2639     	BTRSC	STATUS,2
                                    1- 2640     	MGOTO	_00410_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2641     	.line	357, "main.c"; 	if(keyNum == 0)
                                    1- 2642     	BANKSEL	_keyNum
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2643     	MOVR	_keyNum,W
     0007 0903                      1- 2644     	BTRSS	STATUS,2
                                    1- 2645     	MGOTO	_00392_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2646     	.line	359, "main.c"; 	if(keyStatus & 0x40)		//判断是哪个按键最先按下的
                                    1- 2647     	BANKSEL	r0x1052
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Brr                      1- 2648     	BTRSS	r0x1052,6
                                    1- 2649     	MGOTO	_00389_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2650     	.line	361, "main.c"; 	keyNum = 1;
     000C 2101                      1- 2651     	MOVIA	0x01
                                    1- 2652     	BANKSEL	_keyNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2653     	MOVAR	_keyNum
                                    1- 2654     	MGOTO	_00392_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
     0010                           1- 2655     _00389_DS_:
                                    1- 2656     	.line	365, "main.c"; 	keyNum = 2;
     0010 2102                      1- 2657     	MOVIA	0x02
                                    1- 2658     	BANKSEL	_keyNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2659     	MOVAR	_keyNum
     0013                           1- 2660     _00392_DS_:
                                    1- 2661     	.line	368, "main.c"; 	keyCount++;
                                    1- 2662     	BANKSEL	_keyCount
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 05rr                      1- 2663     	INCR	_keyCount,F
                                    1- 2664     	.line	369, "main.c"; 	if(preKeyStatus > 0 && keyDisableTime == 0)
                                    1- 2665     	BANKSEL	_preKeyStatus
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 2666     	MOVR	_preKeyStatus,W
     0017 0D03                      1- 2667     	BTRSC	STATUS,2
                                    1- 2668     	MGOTO	_00396_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2669     	BANKSEL	_keyDisableTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2670     	MOVR	_keyDisableTime,W
     001B 0903                      1- 2671     	BTRSS	STATUS,2
                                    1- 2672     	MGOTO	_00396_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2673     	.line	371, "main.c"; 	if(preKeyStatus != keyStatus)
                                    1- 2674     	BANKSEL	r0x1052
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2675     	MOVR	r0x1052,W
                                    1- 2676     	BANKSEL	_preKeyStatus
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 12rr                      1- 2677     	XORAR	_preKeyStatus,W
     0021 0D03                      1- 2678     	BTRSC	STATUS,2
                                    1- 2679     	MGOTO	_00397_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2680     	.line	373, "main.c"; 	keyDisableTime = 30;
     0023 211E                      1- 2681     	MOVIA	0x1e
                                    1- 2682     	BANKSEL	_keyDisableTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2683     	MOVAR	_keyDisableTime
                                    1- 2684     	.line	374, "main.c"; 	preKeyStatus = keyStatus;
                                    1- 2685     	BANKSEL	r0x1052
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2686     	MOVR	r0x1052,W
                                    1- 2687     	BANKSEL	_preKeyStatus
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2688     	MOVAR	_preKeyStatus
                                    1- 2689     	.line	375, "main.c"; 	keyCount = 1;
     002A 2101                      1- 2690     	MOVIA	0x01
                                    1- 2691     	BANKSEL	_keyCount
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 2692     	MOVAR	_keyCount
                                    1- 2693     	.line	376, "main.c"; 	return 1;
                                    1- 2694     	MGOTO	_00412_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 2695     _00396_DS_:
                                    1- 2696     	.line	381, "main.c"; 	preKeyStatus = keyStatus;
                                    1- 2697     	BANKSEL	r0x1052
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2698     	MOVR	r0x1052,W
                                    1- 2699     	BANKSEL	_preKeyStatus
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 2700     	MOVAR	_preKeyStatus
                                    1- 2701     ;;unsigned compare: left < lit (0x96=150), size=1
     0032                           1- 2702     _00397_DS_:
                                    1- 2703     	.line	385, "main.c"; 	if(keyCount >= 150 && keyNum == 1)
     0032 2196                      1- 2704     	MOVIA	0x96
                                    1- 2705     	BANKSEL	_keyCount
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 04rr                      1- 2706     	SUBAR	_keyCount,W
     0035 0803                      1- 2707     	BTRSS	STATUS,0
                                    1- 2708     	MGOTO	_00411_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2709     	BANKSEL	_keyNum
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 2710     	MOVR	_keyNum,W
     0039 2401                      1- 2711     	XORIA	0x01
     003A 0903                      1- 2712     	BTRSS	STATUS,2
                                    1- 2713     	MGOTO	_00411_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2714     	.line	387, "main.c"; 	keyCount = 150;
     003C 2196                      1- 2715     	MOVIA	0x96
                                    1- 2716     	BANKSEL	_keyCount
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 2717     	MOVAR	_keyCount
                                    1- 2718     	.line	388, "main.c"; 	if(!longPressFlag)
                                    1- 2719     	BANKSEL	_Status
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 0Crr                      1- 2720     	BTRSC	_Status,1
                                    1- 2721     	MGOTO	_00411_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2722     	.line	390, "main.c"; 	longPressFlag = 1;
     0042 18rr                      1- 2723     	BSR	_Status,1
                                    1- 2724     	.line	391, "main.c"; 	return 2;
     0043 2102                      1- 2725     	MOVIA	0x02
                                    1- 2726     	MGOTO	_00412_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2727     ;;unsigned compare: left < lit (0x96=150), size=1
     0045                           1- 2728     _00410_DS_:
                                    1- 2729     	.line	397, "main.c"; 	if(keyCount >= 150)
     0045 2196                      1- 2730     	MOVIA	0x96
                                    1- 2731     	BANKSEL	_keyCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2732     	SUBAR	_keyCount,W
     0048 0803                      1- 2733     	BTRSS	STATUS,0
                                    1- 2734     	MGOTO	_00407_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2735     	.line	399, "main.c"; 	keyCount = 0;
     004A 02rr                      1- 2736     	CLRR	_keyCount
                                    1- 2737     	.line	400, "main.c"; 	longPressFlag = 0;
                                    1- 2738     	BANKSEL	_Status
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 1Crr                      1- 2739     	BCR	_Status,1
                                    1- 2740     	.line	401, "main.c"; 	return	0;
     004D 2100                      1- 2741     	MOVIA	0x00
                                    1- 2742     	MGOTO	_00412_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2743     ;;unsigned compare: left < lit (0x2=2), size=1
     004F                           1- 2744     _00407_DS_:
                                    1- 2745     	.line	403, "main.c"; 	else if(keyCount >= 2)
     004F 2102                      1- 2746     	MOVIA	0x02
                                    1- 2747     	BANKSEL	_keyCount
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 04rr                      1- 2748     	SUBAR	_keyCount,W
     0052 0803                      1- 2749     	BTRSS	STATUS,0
                                    1- 2750     	MGOTO	_00408_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2751     	.line	405, "main.c"; 	keyCount = 0;
     0054 02rr                      1- 2752     	CLRR	_keyCount
                                    1- 2753     	.line	406, "main.c"; 	return	1;
     0055 2101                      1- 2754     	MOVIA	0x01
                                    1- 2755     	MGOTO	_00412_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 2756     _00408_DS_:
                                    1- 2757     	.line	408, "main.c"; 	keyCount = 0;
                                    1- 2758     	BANKSEL	_keyCount
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1- 2759     	CLRR	_keyCount
                                    1- 2760     	.line	409, "main.c"; 	preKeyStatus = 0;
                                    1- 2761     	BANKSEL	_preKeyStatus
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1- 2762     	CLRR	_preKeyStatus
     005B                           1- 2763     _00411_DS_:
                                    1- 2764     	.line	411, "main.c"; 	return 0;
     005B 2100                      1- 2765     	MOVIA	0x00
     005C                           1- 2766     _00412_DS_:
                                    1- 2767     	.line	412, "main.c"; 	}
                                    1- 2768     	RETURN	
     005C 0010                      3-   40 m1      ret
                                    1- 2769     ; exit point of _keyRead
                                    1- 2771     ;***
                                    1- 2772     ;  pBlock Stats: dbName = C
                                    1- 2773     ;***
                                    1- 2774     ;has an exit
                                    1- 2775     ;functions called:
                                    1- 2776     ;   _setInput
                                    1- 2777     ;   _showKeyLed
                                    1- 2778     ;   __gptrget1
                                    1- 2779     ;   _showNubShiwei
                                    1- 2780     ;   __gptrget1
                                    1- 2781     ;   _showNubGewei
                                    1- 2782     ;   _setInput
                                    1- 2783     ;   _showKeyLed
                                    1- 2784     ;   __gptrget1
                                    1- 2785     ;   _showNubShiwei
                                    1- 2786     ;   __gptrget1
                                    1- 2787     ;   _showNubGewei
                                    1- 2788     ;5 compiler assigned registers:
                                    1- 2789     ;   r0x1055
                                    1- 2790     ;   r0x1056
                                    1- 2791     ;   STK01
                                    1- 2792     ;   STK00
                                    1- 2793     ;   r0x1057
                                    1- 2794     ;; Starting pCode block
                                    1- 2795     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2797     _refreshNub:
                                    1- 2798     ; 2 exit points
                                    1- 2799     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2800     	.line	330, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2801     	MOVIA	0x03
                                    1- 2802     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2803     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2804     	BTRSS	STATUS,2
                                    1- 2805     	MGOTO	_00383_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2806     	MOVIA	0x84
     0006 04rr                      1- 2807     	SUBAR	_count900s,W
     0007                           1- 2808     _00383_DS_:
     0007 0803                      1- 2809     	BTRSS	STATUS,0
                                    1- 2810     	MGOTO	_00361_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2811     	.line	332, "main.c"; 	setInput();
                                    1- 2812     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2813     	.line	333, "main.c"; 	return;
                                    1- 2814     	MGOTO	_00369_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2815     _00361_DS_:
                                    1- 2816     	.line	335, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2817     	BANKSEL	_workStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2818     	MOVR	_workStep,W
     000D 0903                      1- 2819     	BTRSS	STATUS,2
                                    1- 2820     	MGOTO	_00362_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2821     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2822     	MOVR	_ledLightTime,W
     0011 0903                      1- 2823     	BTRSS	STATUS,2
     0012                           1- 2824     _00362_DS_:
                                    1- 2825     	.line	337, "main.c"; 	showKeyLed();
                                    1- 2826     	MCALL	_showKeyLed
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2827     	.line	340, "main.c"; 	if(overFlag > 0)
                                    1- 2828     	BANKSEL	_overFlag
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2829     	MOVR	_overFlag,W
     0015 0D03                      1- 2830     	BTRSC	STATUS,2
                                    1- 2831     	MGOTO	_00366_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2832     	.line	342, "main.c"; 	shiweiNum = 11;
     0017 210B                      1- 2833     	MOVIA	0x0b
                                    1- 2834     	BANKSEL	_shiweiNum
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 2835     	MOVAR	_shiweiNum
                                    1- 2836     	.line	343, "main.c"; 	geweiNum = 12;
     001A 210C                      1- 2837     	MOVIA	0x0c
                                    1- 2838     	BANKSEL	_geweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2839     	MOVAR	_geweiNum
     001D                           1- 2840     _00366_DS_:
                                    1- 2841     	.line	346, "main.c"; 	if(firstShowCount > 0)
                                    1- 2842     	BANKSEL	_firstShowCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2843     	MOVR	_firstShowCount,W
     001F 0D03                      1- 2844     	BTRSC	STATUS,2
                                    1- 2845     	MGOTO	_00368_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2846     	.line	347, "main.c"; 	shiweiNum = geweiNum = 8;
     0021 2108                      1- 2847     	MOVIA	0x08
                                    1- 2848     	BANKSEL	_geweiNum
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 2849     	MOVAR	_geweiNum
                                    1- 2850     	BANKSEL	_shiweiNum
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2851     	MOVAR	_shiweiNum
     0026                           1- 2852     _00368_DS_:
                                    1- 2853     	.line	348, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2854     	BANKSEL	_shiweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2855     	MOVR	_shiweiNum,W
     0028 25rr                      1- 2856     	ADDIA	(_numArray + 0)
                                    1- 2857     	BANKSEL	r0x1055
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2858     	MOVAR	r0x1055
     002B 21rr                      1- 2859     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2860     	BTRSC	STATUS,0
     002D 2501                      1- 2861     	ADDIA	0x01
                                    1- 2862     	BANKSEL	r0x1056
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2863     	MOVAR	r0x1056
                                    1- 2864     	BANKSEL	r0x1055
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2865     	MOVR	r0x1055,W
     0032 00rr                      1- 2866     	MOVAR	STK01
                                    1- 2867     	BANKSEL	r0x1056
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2868     	MOVR	r0x1056,W
     0035 00rr                      1- 2869     	MOVAR	STK00
     0036 2180                      1- 2870     	MOVIA	0x80
                                    1- 2871     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2872     ;;100	MOVAR	r0x1057
                                    1- 2873     	MCALL	_showNubShiwei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2874     	.line	349, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2875     	BANKSEL	_geweiNum
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 2876     	MOVR	_geweiNum,W
     003B 25rr                      1- 2877     	ADDIA	(_numArray + 0)
                                    1- 2878     	BANKSEL	r0x1055
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 2879     	MOVAR	r0x1055
     003E 21rr                      1- 2880     	MOVIA	((_numArray + 0) >> 8) & 0xff
     003F 0C03                      1- 2881     	BTRSC	STATUS,0
     0040 2501                      1- 2882     	ADDIA	0x01
                                    1- 2883     	BANKSEL	r0x1056
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2884     	MOVAR	r0x1056
                                    1- 2885     	BANKSEL	r0x1055
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2886     	MOVR	r0x1055,W
     0045 00rr                      1- 2887     	MOVAR	STK01
                                    1- 2888     	BANKSEL	r0x1056
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 2889     	MOVR	r0x1056,W
     0048 00rr                      1- 2890     	MOVAR	STK00
     0049 2180                      1- 2891     	MOVIA	0x80
                                    1- 2892     	MCALL	__gptrget1
     004A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2893     ;;99	MOVAR	r0x1057
                                    1- 2894     	MCALL	_showNubGewei
     004B 2rrr                      3-   66 m1      LCALL rom_address
     004C                           1- 2895     _00369_DS_:
                                    1- 2896     	.line	350, "main.c"; 	}
                                    1- 2897     	RETURN	
     004C 0010                      3-   40 m1      ret
                                    1- 2898     ; exit point of _refreshNub
                                    1- 2900     ;***
                                    1- 2901     ;  pBlock Stats: dbName = C
                                    1- 2902     ;***
                                    1- 2903     ;has an exit
                                    1- 2904     ;functions called:
                                    1- 2905     ;   _pwmInit
                                    1- 2906     ;   __divuchar
                                    1- 2907     ;   __moduchar
                                    1- 2908     ;   _pwmStop
                                    1- 2909     ;   _pwmInit
                                    1- 2910     ;   __divuchar
                                    1- 2911     ;   __moduchar
                                    1- 2912     ;   _pwmStop
                                    1- 2913     ;1 compiler assigned register :
                                    1- 2914     ;   STK00
                                    1- 2915     ;; Starting pCode block
                                    1- 2916     .segment "code"; module=main, function=_workCtr
     0000                           1- 2918     _workCtr:
                                    1- 2919     ; 2 exit points
                                    1- 2920     	.line	311, "main.c"; 	if(workStep > 0)
                                    1- 2921     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2922     	MOVR	_workStep,W
     0002 0D03                      1- 2923     	BTRSC	STATUS,2
                                    1- 2924     	MGOTO	_00353_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2925     	.line	313, "main.c"; 	pwmInit();
                                    1- 2926     	MCALL	_pwmInit
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2927     	.line	314, "main.c"; 	showFlag = 1;
                                    1- 2928     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1- 2929     	BSR	_Status,4
                                    1- 2930     	.line	315, "main.c"; 	shiweiNum = workStep/10;
     0007 210A                      1- 2931     	MOVIA	0x0a
     0008 00rr                      1- 2932     	MOVAR	STK00
                                    1- 2933     	BANKSEL	_workStep
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 2934     	MOVR	_workStep,W
                                    1- 2935     	MCALL	__divuchar
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2936     	BANKSEL	_shiweiNum
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 2937     	MOVAR	_shiweiNum
                                    1- 2938     	.line	316, "main.c"; 	geweiNum = workStep%10;
     000E 210A                      1- 2939     	MOVIA	0x0a
     000F 00rr                      1- 2940     	MOVAR	STK00
                                    1- 2941     	BANKSEL	_workStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 2942     	MOVR	_workStep,W
                                    1- 2943     	MCALL	__moduchar
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2944     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 2945     	MOVAR	_geweiNum
                                    1- 2946     	MGOTO	_00355_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 2947     _00353_DS_:
                                    1- 2948     	.line	320, "main.c"; 	pwmStop();
                                    1- 2949     	MCALL	_pwmStop
     0016 2rrr                      3-   66 m1      LCALL rom_address
     0017                           1- 2950     _00355_DS_:
                                    1- 2951     	.line	322, "main.c"; 	}
                                    1- 2952     	RETURN	
     0017 0010                      3-   40 m1      ret
                                    1- 2953     ; exit point of _workCtr
                                    1- 2955     ;***
                                    1- 2956     ;  pBlock Stats: dbName = C
                                    1- 2957     ;***
                                    1- 2958     ;has an exit
                                    1- 2959     ;functions called:
                                    1- 2960     ;   _checkBatAD
                                    1- 2961     ;   _pwmStop
                                    1- 2962     ;   __divuchar
                                    1- 2963     ;   __moduchar
                                    1- 2964     ;   _pwm1Stop
                                    1- 2965     ;   _pwm1Init
                                    1- 2966     ;   _pwm1Stop
                                    1- 2967     ;   _workCtr
                                    1- 2968     ;   _checkBatAD
                                    1- 2969     ;   _pwmStop
                                    1- 2970     ;   __divuchar
                                    1- 2971     ;   __moduchar
                                    1- 2972     ;   _pwm1Stop
                                    1- 2973     ;   _pwm1Init
                                    1- 2974     ;   _pwm1Stop
                                    1- 2975     ;   _workCtr
                                    1- 2976     ;3 compiler assigned registers:
                                    1- 2977     ;   STK00
                                    1- 2978     ;   r0x1058
                                    1- 2979     ;   r0x1059
                                    1- 2980     ;; Starting pCode block
                                    1- 2981     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2983     _chrgCtr:
                                    1- 2984     ; 2 exit points
                                    1- 2985     	.line	229, "main.c"; 	if(PORTA & 0x80)
                                    1- 2986     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Brr                      1- 2987     	BTRSS	_PORTA,7
                                    1- 2988     	MGOTO	_00290_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2989     	.line	232, "main.c"; 	if(chrgFlag == 0)
                                    1- 2990     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 0Drr                      1- 2991     	BTRSC	_Status,3
                                    1- 2992     	MGOTO	_00264_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2993     	.line	234, "main.c"; 	checkBatAD();
                                    1- 2994     	MCALL	_checkBatAD
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2995     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2996     ;;unsigned compare: left >= lit (0x5FB=1531), size=2
                                    1- 2997     	.line	235, "main.c"; 	if(R_AIN2_DATA > 1530 && showBatValue == 99)
     0007 2105                      1- 2998     	MOVIA	0x05
                                    1- 2999     	BANKSEL	_R_AIN2_DATA
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 04rr                      1- 3000     	SUBAR	(_R_AIN2_DATA + 1),W
     000A 0903                      1- 3001     	BTRSS	STATUS,2
                                    1- 3002     	MGOTO	_00339_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C 21FB                      1- 3003     	MOVIA	0xfb
     000D 04rr                      1- 3004     	SUBAR	_R_AIN2_DATA,W
     000E                           1- 3005     _00339_DS_:
     000E 0803                      1- 3006     	BTRSS	STATUS,0
                                    1- 3007     	MGOTO	_00264_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3008     	BANKSEL	_showBatValue
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 3009     	MOVR	_showBatValue,W
     0012 2463                      1- 3010     	XORIA	0x63
     0013 0903                      1- 3011     	BTRSS	STATUS,2
                                    1- 3012     	MGOTO	_00264_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3013     	.line	236, "main.c"; 	chrgFullFlag = 1;
     0015 2101                      1- 3014     	MOVIA	0x01
                                    1- 3015     	BANKSEL	_chrgFullFlag
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 3016     	MOVAR	_chrgFullFlag
     0018                           1- 3017     _00264_DS_:
                                    1- 3018     	.line	238, "main.c"; 	chrgFlag = 1;
                                    1- 3019     	BANKSEL	_Status
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 19rr                      1- 3020     	BSR	_Status,3
                                    1- 3021     	.line	239, "main.c"; 	showFlag = 1;
     001A 1Arr                      1- 3022     	BSR	_Status,4
                                    1- 3023     	.line	240, "main.c"; 	workStep = 0;
                                    1- 3024     	BANKSEL	_workStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 3025     	CLRR	_workStep
                                    1- 3026     	.line	241, "main.c"; 	pwmStop();
                                    1- 3027     	MCALL	_pwmStop
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3028     	.line	242, "main.c"; 	shiweiNum = showBatValue/10;
     001E 210A                      1- 3029     	MOVIA	0x0a
     001F 00rr                      1- 3030     	MOVAR	STK00
                                    1- 3031     	BANKSEL	_showBatValue
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 3032     	MOVR	_showBatValue,W
                                    1- 3033     	MCALL	__divuchar
     0022 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3034     	BANKSEL	_shiweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 3035     	MOVAR	_shiweiNum
                                    1- 3036     	.line	243, "main.c"; 	geweiNum = showBatValue%10;
     0025 210A                      1- 3037     	MOVIA	0x0a
     0026 00rr                      1- 3038     	MOVAR	STK00
                                    1- 3039     	BANKSEL	_showBatValue
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3040     	MOVR	_showBatValue,W
                                    1- 3041     	MCALL	__moduchar
     0029 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3042     	BANKSEL	_geweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 3043     	MOVAR	_geweiNum
                                    1- 3044     ;;unsigned compare: left < lit (0x5C=92), size=1
                                    1- 3045     	.line	244, "main.c"; 	if(batValue < 92)
     002C 215C                      1- 3046     	MOVIA	0x5c
                                    1- 3047     	BANKSEL	_batValue
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 04rr                      1- 3048     	SUBAR	_batValue,W
     002F 0C03                      1- 3049     	BTRSC	STATUS,0
                                    1- 3050     	MGOTO	_00009_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3051     	.line	245, "main.c"; 	chrgFullFlag = 0;
                                    1- 3052     	BANKSEL	_chrgFullFlag
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 3053     	CLRR	_chrgFullFlag
     0033                           1- 3054     _00009_DS_:
                                    1- 3055     	.line	246, "main.c"; 	if(chrgFullFlag || (showBatValue >= 99 && batValue == 100))
                                    1- 3056     	BANKSEL	_chrgFullFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3057     	MOVR	_chrgFullFlag,W
     0035 0903                      1- 3058     	BTRSS	STATUS,2
                                    1- 3059     	MGOTO	_00284_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3060     ;;unsigned compare: left < lit (0x63=99), size=1
     0037 2163                      1- 3061     	MOVIA	0x63
                                    1- 3062     	BANKSEL	_showBatValue
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3063     	SUBAR	_showBatValue,W
     003A 0803                      1- 3064     	BTRSS	STATUS,0
                                    1- 3065     	MGOTO	_00285_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3066     	BANKSEL	_batValue
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3067     	MOVR	_batValue,W
     003E 2464                      1- 3068     	XORIA	0x64
     003F 0903                      1- 3069     	BTRSS	STATUS,2
                                    1- 3070     	MGOTO	_00285_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3071     _00284_DS_:
                                    1- 3072     	.line	250, "main.c"; 	chrgFullFlag = 1;
     0041 2101                      1- 3073     	MOVIA	0x01
                                    1- 3074     	BANKSEL	_chrgFullFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3075     	MOVAR	_chrgFullFlag
                                    1- 3076     	.line	251, "main.c"; 	pwm1Stop();
                                    1- 3077     	MCALL	_pwm1Stop
     0044 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3078     	.line	252, "main.c"; 	PORTB &= 0xFB;
     0045 1Drr                      1- 3079     	BCR	_PORTB,2
                                    1- 3080     	MGOTO	_00292_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1- 3081     _00285_DS_:
                                    1- 3082     	.line	258, "main.c"; 	fullCount = 0;
                                    1- 3083     	BANKSEL	_fullCount
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 3084     	CLRR	_fullCount
     0049 02rr                      1- 3085     	CLRR	(_fullCount + 1)
                                    1- 3086     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3087     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 3088     	.line	260, "main.c"; 	if(count200ms > 5)
     004A 2106                      1- 3089     	MOVIA	0x06
                                    1- 3090     	BANKSEL	_count200ms
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 3091     	SUBAR	_count200ms,W
     004D 0803                      1- 3092     	BTRSS	STATUS,0
                                    1- 3093     	MGOTO	_00292_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3094     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3095     ;;unsigned compare: left >= lit (0x42=66), size=2
                                    1- 3096     	.line	262, "main.c"; 	if(R_AIN4_DATA <= 65 && R_AIN4_DATA >=subMin)
     004F 2100                      1- 3097     	MOVIA	0x00
                                    1- 3098     	BANKSEL	_R_AIN4_DATA
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 04rr                      1- 3099     	SUBAR	(_R_AIN4_DATA + 1),W
     0052 0903                      1- 3100     	BTRSS	STATUS,2
                                    1- 3101     	MGOTO	_00343_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054 2142                      1- 3102     	MOVIA	0x42
     0055 04rr                      1- 3103     	SUBAR	_R_AIN4_DATA,W
     0056                           1- 3104     _00343_DS_:
     0056 0C03                      1- 3105     	BTRSC	STATUS,0
                                    1- 3106     	MGOTO	_00268_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3107     	BANKSEL	_subMin
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 01rr                      1- 3108     	MOVR	_subMin,W
                                    1- 3109     	BANKSEL	r0x1058
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 3110     	MOVAR	r0x1058
                                    1- 3111     ;;112	CLRR	r0x1059
     005C 2100                      1- 3112     	MOVIA	0x00
                                    1- 3113     	BANKSEL	_R_AIN4_DATA
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 04rr                      1- 3114     	SUBAR	(_R_AIN4_DATA + 1),W
     005F 0903                      1- 3115     	BTRSS	STATUS,2
                                    1- 3116     	MGOTO	_00344_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3117     	BANKSEL	r0x1058
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 3118     	MOVR	r0x1058,W
                                    1- 3119     	BANKSEL	_R_AIN4_DATA
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 04rr                      1- 3120     	SUBAR	_R_AIN4_DATA,W
     0065                           1- 3121     _00344_DS_:
     0065 0803                      1- 3122     	BTRSS	STATUS,0
                                    1- 3123     	MGOTO	_00268_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3124     	.line	264, "main.c"; 	addTime = subTime = 0;
                                    1- 3125     	BANKSEL	_subTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 02rr                      1- 3126     	CLRR	_subTime
                                    1- 3127     	BANKSEL	_addTime
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 02rr                      1- 3128     	CLRR	_addTime
                                    1- 3129     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3130     ;;unsigned compare: left >= lit (0x42=66), size=2
     006B                           1- 3131     _00268_DS_:
                                    1- 3132     	.line	266, "main.c"; 	if(R_AIN4_DATA > 65)
     006B 2100                      1- 3133     	MOVIA	0x00
                                    1- 3134     	BANKSEL	_R_AIN4_DATA
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 04rr                      1- 3135     	SUBAR	(_R_AIN4_DATA + 1),W
     006E 0903                      1- 3136     	BTRSS	STATUS,2
                                    1- 3137     	MGOTO	_00345_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 2142                      1- 3138     	MOVIA	0x42
     0071 04rr                      1- 3139     	SUBAR	_R_AIN4_DATA,W
     0072                           1- 3140     _00345_DS_:
     0072 0803                      1- 3141     	BTRSS	STATUS,0
                                    1- 3142     	MGOTO	_00278_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3143     	.line	268, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 3144     	BANKSEL	_subTime
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 05rr                      1- 3145     	INCR	_subTime,F
     0076 01rr                      1- 3146     	MOVR	_subTime,W
                                    1- 3147     	BANKSEL	_chrgWaitTime
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 04rr                      1- 3148     	SUBAR	_chrgWaitTime,W
     0079 0C03                      1- 3149     	BTRSC	STATUS,0
                                    1- 3150     	MGOTO	_00271_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3151     	.line	270, "main.c"; 	addFlag = 1;
     007B 2101                      1- 3152     	MOVIA	0x01
                                    1- 3153     	BANKSEL	_addFlag
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 3154     	MOVAR	_addFlag
                                    1- 3155     	.line	271, "main.c"; 	maxduty = maxduty - 1;
                                    1- 3156     	BANKSEL	_maxduty
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 06rr                      1- 3157     	DECR	_maxduty,F
                                    1- 3158     	.line	272, "main.c"; 	subTime = 0;
                                    1- 3159     	BANKSEL	_subTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1- 3160     	CLRR	_subTime
                                    1- 3161     	.line	273, "main.c"; 	subMin = 57;
     0082 2139                      1- 3162     	MOVIA	0x39
                                    1- 3163     	BANKSEL	_subMin
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1- 3164     	MOVAR	_subMin
                                    1- 3165     	.line	274, "main.c"; 	chrgWaitTime = 250;
     0085 21FA                      1- 3166     	MOVIA	0xfa
                                    1- 3167     	BANKSEL	_chrgWaitTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 3168     	MOVAR	_chrgWaitTime
     0088                           1- 3169     _00271_DS_:
                                    1- 3170     	.line	276, "main.c"; 	addTime = 0;
                                    1- 3171     	BANKSEL	_addTime
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 02rr                      1- 3172     	CLRR	_addTime
                                    1- 3173     	MGOTO	_00279_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
     008B                           1- 3174     _00278_DS_:
                                    1- 3175     	.line	278, "main.c"; 	else if(R_AIN4_DATA < subMin || addFlag == 0)
                                    1- 3176     	BANKSEL	_subMin
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1- 3177     	MOVR	_subMin,W
                                    1- 3178     	BANKSEL	r0x1058
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 3179     	MOVAR	r0x1058
                                    1- 3180     ;;111	CLRR	r0x1059
     008F 2100                      1- 3181     	MOVIA	0x00
                                    1- 3182     	BANKSEL	_R_AIN4_DATA
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 04rr                      1- 3183     	SUBAR	(_R_AIN4_DATA + 1),W
     0092 0903                      1- 3184     	BTRSS	STATUS,2
                                    1- 3185     	MGOTO	_00347_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3186     	BANKSEL	r0x1058
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 3187     	MOVR	r0x1058,W
                                    1- 3188     	BANKSEL	_R_AIN4_DATA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 04rr                      1- 3189     	SUBAR	_R_AIN4_DATA,W
     0098                           1- 3190     _00347_DS_:
     0098 0803                      1- 3191     	BTRSS	STATUS,0
                                    1- 3192     	MGOTO	_00274_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3193     	BANKSEL	_addFlag
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 01rr                      1- 3194     	MOVR	_addFlag,W
     009C 0903                      1- 3195     	BTRSS	STATUS,2
                                    1- 3196     	MGOTO	_00279_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
     009E                           1- 3197     _00274_DS_:
                                    1- 3198     	.line	280, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 3199     	BANKSEL	_addTime
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 05rr                      1- 3200     	INCR	_addTime,F
     00A0 01rr                      1- 3201     	MOVR	_addTime,W
                                    1- 3202     	BANKSEL	_chrgWaitTime
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 3203     	SUBAR	_chrgWaitTime,W
     00A3 0C03                      1- 3204     	BTRSC	STATUS,0
                                    1- 3205     	MGOTO	_00273_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3206     	.line	282, "main.c"; 	maxduty = maxduty + 1;
                                    1- 3207     	BANKSEL	_maxduty
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 05rr                      1- 3208     	INCR	_maxduty,F
                                    1- 3209     	.line	283, "main.c"; 	addTime = 0;
                                    1- 3210     	BANKSEL	_addTime
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 02rr                      1- 3211     	CLRR	_addTime
     00A9                           1- 3212     _00273_DS_:
                                    1- 3213     	.line	285, "main.c"; 	subTime = 0;
                                    1- 3214     	BANKSEL	_subTime
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 02rr                      1- 3215     	CLRR	_subTime
                                    1- 3216     ;;unsigned compare: left < lit (0xA=10), size=1
     00AB                           1- 3217     _00279_DS_:
                                    1- 3218     	.line	287, "main.c"; 	if(maxduty < 10)
     00AB 210A                      1- 3219     	MOVIA	0x0a
                                    1- 3220     	BANKSEL	_maxduty
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 04rr                      1- 3221     	SUBAR	_maxduty,W
     00AE 0C03                      1- 3222     	BTRSC	STATUS,0
                                    1- 3223     	MGOTO	_00281_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3224     	.line	288, "main.c"; 	maxduty = 10;
     00B0 210A                      1- 3225     	MOVIA	0x0a
     00B1 00rr                      1- 3226     	MOVAR	_maxduty
     00B2                           1- 3227     _00281_DS_:
                                    1- 3228     	.line	289, "main.c"; 	PWM2DUTY = maxduty;
                                    1- 3229     	BANKSEL	_maxduty
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 3230     	MOVR	_maxduty,W
     00B4 00rr                      1- 3231     	SFUN	_PWM2DUTY
                                    1- 3232     	.line	290, "main.c"; 	pwm1Init();			
                                    1- 3233     	MCALL	_pwm1Init
     00B5 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3234     	MGOTO	_00292_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
     00B7                           1- 3235     _00290_DS_:
                                    1- 3236     	.line	298, "main.c"; 	addFlag = 0;
                                    1- 3237     	BANKSEL	_addFlag
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 02rr                      1- 3238     	CLRR	_addFlag
                                    1- 3239     	.line	299, "main.c"; 	chrgWaitTime = 5;
     00B9 2105                      1- 3240     	MOVIA	0x05
                                    1- 3241     	BANKSEL	_chrgWaitTime
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 00rr                      1- 3242     	MOVAR	_chrgWaitTime
                                    1- 3243     	.line	300, "main.c"; 	subMin = 57;
     00BC 2139                      1- 3244     	MOVIA	0x39
                                    1- 3245     	BANKSEL	_subMin
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 00rr                      1- 3246     	MOVAR	_subMin
                                    1- 3247     	.line	301, "main.c"; 	chrgFullFlag = 0;
                                    1- 3248     	BANKSEL	_chrgFullFlag
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 02rr                      1- 3249     	CLRR	_chrgFullFlag
                                    1- 3250     	.line	302, "main.c"; 	maxduty = 0;
                                    1- 3251     	BANKSEL	_maxduty
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 02rr                      1- 3252     	CLRR	_maxduty
                                    1- 3253     	.line	303, "main.c"; 	pwm1Stop();
                                    1- 3254     	MCALL	_pwm1Stop
     00C3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3255     	.line	304, "main.c"; 	chrgFlag = 0;
                                    1- 3256     	BANKSEL	_Status
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 1Drr                      1- 3257     	BCR	_Status,3
                                    1- 3258     	.line	305, "main.c"; 	workCtr();	
                                    1- 3259     	MCALL	_workCtr
     00C6 2rrr                      3-   66 m1      LCALL rom_address
     00C7                           1- 3260     _00292_DS_:
                                    1- 3261     	.line	307, "main.c"; 	}
                                    1- 3262     	RETURN	
     00C7 0010                      3-   40 m1      ret
                                    1- 3263     ; exit point of _chrgCtr
                                    1- 3266     ;	code size estimation:
                                    1- 3267     ;	 1208+  349 =  1557 instructions ( 3812 byte)
                                    1- 3269     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
