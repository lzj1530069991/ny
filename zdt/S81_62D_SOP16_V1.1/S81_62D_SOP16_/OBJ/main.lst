
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_F_Quarter_VDD_Convert
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	__moduchar
                                    1-   17     	extern	__mulint
                                    1-   18     	extern	__divuint
                                    1-   19     	extern	_PORTAbits
                                    1-   20     	extern	_PORTBbits
                                    1-   21     	extern	_PCONbits
                                    1-   22     	extern	_BWUCONbits
                                    1-   23     	extern	_ABPLCONbits
                                    1-   24     	extern	_BPHCONbits
                                    1-   25     	extern	_INTEbits
                                    1-   26     	extern	_INTFbits
                                    1-   27     	extern	_ADMDbits
                                    1-   28     	extern	_ADRbits
                                    1-   29     	extern	_ADVREFHbits
                                    1-   30     	extern	_ADCRbits
                                    1-   31     	extern	_AWUCONbits
                                    1-   32     	extern	_PACONbits
                                    1-   33     	extern	_INTEDGbits
                                    1-   34     	extern	_ANAENbits
                                    1-   35     	extern	_RFCbits
                                    1-   36     	extern	_INTE2bits
                                    1-   37     	extern	_INDF
                                    1-   38     	extern	_TMR0
                                    1-   39     	extern	_PCL
                                    1-   40     	extern	_STATUS
                                    1-   41     	extern	_FSR
                                    1-   42     	extern	_PORTA
                                    1-   43     	extern	_PORTB
                                    1-   44     	extern	_PCON
                                    1-   45     	extern	_BWUCON
                                    1-   46     	extern	_PCHBUF
                                    1-   47     	extern	_ABPLCON
                                    1-   48     	extern	_BPHCON
                                    1-   49     	extern	_INTE
                                    1-   50     	extern	_INTF
                                    1-   51     	extern	_ADMD
                                    1-   52     	extern	_ADR
                                    1-   53     	extern	_ADD
                                    1-   54     	extern	_ADVREFH
                                    1-   55     	extern	_ADCR
                                    1-   56     	extern	_AWUCON
                                    1-   57     	extern	_PACON
                                    1-   58     	extern	_INTEDG
                                    1-   59     	extern	_TMRH
                                    1-   60     	extern	_ANAEN
                                    1-   61     	extern	_RFC
                                    1-   62     	extern	_TM3RH
                                    1-   63     	extern	_INTE2
                                    1-   64     	extern	_TMR1
                                    1-   65     	extern	_T1CR1
                                    1-   66     	extern	_T1CR2
                                    1-   67     	extern	_PWM1DUTY
                                    1-   68     	extern	_PS1CV
                                    1-   69     	extern	_BZ1CR
                                    1-   70     	extern	_IRCR
                                    1-   71     	extern	_TBHP
                                    1-   72     	extern	_TBHD
                                    1-   73     	extern	_TMR2
                                    1-   74     	extern	_T2CR1
                                    1-   75     	extern	_T2CR2
                                    1-   76     	extern	_PWM2DUTY
                                    1-   77     	extern	_PS2CV
                                    1-   78     	extern	_BZ2CR
                                    1-   79     	extern	_OSCCR
                                    1-   80     	extern	_TMR3
                                    1-   81     	extern	_T3CR1
                                    1-   82     	extern	_T3CR2
                                    1-   83     	extern	_PWM3DUTY
                                    1-   84     	extern	_PS3CV
                                    1-   85     	extern	_BZ3CR
                                    1-   86     	extern	_IOSTA
                                    1-   87     	extern	_IOSTB
                                    1-   88     	extern	_APHCON
                                    1-   89     	extern	_PS0CV
                                    1-   90     	extern	_BODCON
                                    1-   91     	extern	_CMPCR
                                    1-   92     	extern	_PCON1
                                    1-   93     	extern	_T0MD
                                    1-   94     	extern	___sdcc_saved_fsr
                                    1-   95     	extern	___sdcc_saved_stk00
                                    1-   96     	extern	___sdcc_saved_stk01
                                    1-   97     	extern	__gptrget1
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_Delay10Us
                                    1-  103     	extern	_delay_us
                                    1-  104     	extern	_delay
                                    1-  105     	extern	_F_wait_eoc
                                    1-  106     	extern	_F_AIN2_Convert
                                    1-  107     	extern	_F_AIN0_Convert
                                    1-  108     	extern	_checkBatAD
                                    1-  109     	extern	_checkOutA
                                    1-  110     	extern	_gotoSleep
                                    1-  111     	extern	_refreshBat
                                    1-  112     	extern	_refresh
                                    1-  113     	extern	_ind_light_disp
                                    1-  114     	extern	_pwm1Stop
                                    1-  115     	extern	_pwm1Init
                                    1-  116     	extern	_initAD
                                    1-  117     	extern	_initSys
                                    1-  118     	extern	_keyRead2
                                    1-  119     	extern	_keyRead
                                    1-  120     	extern	_keyCtr
                                    1-  121     	extern	_workCtr
                                    1-  122     	extern	_chrgCtr
                                    1-  123     	extern	_powerOff
                                    1-  124     	extern	_isr
                                    1-  125     	extern	_main
                                    1-  126     	extern	_getbatGe
                                    1-  127     	extern	_workStep
                                    1-  128     	extern	_IntFlag
                                    1-  129     	extern	_intCount
                                    1-  130     	extern	_count1s
                                    1-  131     	extern	_count900s
                                    1-  132     	extern	_closeFlag
                                    1-  133     	extern	_shiwei
                                    1-  134     	extern	_gewei
                                    1-  135     	extern	_workStepshiwei
                                    1-  136     	extern	_workStepgewei
                                    1-  137     	extern	_powerTime
                                    1-  138     	extern	_powerFlag
                                    1-  139     	extern	_keyCount2
                                    1-  140     	extern	_lockKeyFlag
                                    1-  141     	extern	_count100ms
                                    1-  142     	extern	_keyCount
                                    1-  143     	extern	_longPressFlag
                                    1-  144     	extern	_R_AIN2_DATA
                                    1-  145     	extern	_R_AIN2_DATA_LB
                                    1-  146     	extern	_firstTime
                                    1-  147     	extern	_chrgStep
                                    1-  148     	extern	_chrgFlag
                                    1-  149     	extern	_sleepTime
                                    1-  150     	extern	_batValue
                                    1-  151     	extern	_showBatValue
                                    1-  152     	extern	_batTime
                                    1-  153     	extern	_subBatTime
                                    1-  154     	extern	_currentDuty
                                    1-  155     	extern	_closeCount
                                    1-  156     	extern	_overCount
                                    1-  157     	extern	_overFlag
                                    1-  158     	extern	_shanshuoTime
                                    1-  159     	extern	_zeroTime
                                    1-  160     	extern	_zeroFlag
                                    1-  161     	extern	_zeroCount
                                    1-  162     	extern	_chrgFullFlag
                                    1-  163     	extern	_preBatValue
                                    1-  164     	extern	_tempBatValue
                                    1-  165     	extern	_chrgFullCount
                                    1-  167     	extern PSAVE
                                    1-  168     	extern SSAVE
                                    1-  169     	extern WSAVE
                                    1-  170     	extern STK04
                                    1-  171     	extern STK03
                                    1-  172     	extern STK02
                                    1-  173     	extern STK01
                                    1-  174     	extern STK00
                                    1-  176     .segment "uninit", 0x20000040
 20000040                           1-  177     PSAVE:
                                    1-  178     	.res 1
 20000041                           1-  179     SSAVE:
                                    1-  180     	.res 1
 20000042                           1-  181     WSAVE:
                                    1-  182     	.res 1
 20000043                           1-  183     STK04:
                                    1-  184     	.res 1
 20000044                           1-  185     STK03:
                                    1-  186     	.res 1
 20000045                           1-  187     STK02:
                                    1-  188     	.res 1
 20000046                           1-  189     STK01:
                                    1-  190     	.res 1
 20000047                           1-  191     STK00:
                                    1-  192     	.res 1
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     ; global definitions
                                    1-  196     ;--------------------------------------------------------
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     ; absolute symbol definitions
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     ; compiler-defined variables
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x1060:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1061:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1062:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1064:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x105F:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x105E:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x105D:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x105C:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x105B:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x105A:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1052:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1053:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1057:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1058:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1054:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1055:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1051:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1045:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1044:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1046:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x104F:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1050:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1049:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x104A:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x104C:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x103E:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x103F:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1040:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1043:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1038:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1039:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x103A:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x103D:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1034:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1033:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1035:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1036:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1037:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1032:
                                    1-  319     	.res	1
                                    1-  320     ;--------------------------------------------------------
                                    1-  321     ; initialized data
                                    1-  322     ;--------------------------------------------------------
                                    1-  324     .segment "idata"
     0000                           1-  325     _workStep:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _IntFlag:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _intCount:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _count1s:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _count900s:
     0000 0000 0000                 1-  350     	dw	0x00, 0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _closeFlag:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _shiwei:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _gewei:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _workStepshiwei:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _workStepgewei:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _powerTime:
     0000 0000 0000                 1-  386     	dw	0x00, 0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _powerFlag:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _keyCount2:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _lockKeyFlag:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _count100ms:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _keyCount:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _longPressFlag:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _R_AIN2_DATA:
     0000 0000 0000                 1-  428     	dw	0x00, 0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _R_AIN2_DATA_LB:
     0000 0000                      1-  434     	dw	0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _firstTime:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _chrgStep:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _chrgFlag:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _sleepTime:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _batValue:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _showBatValue:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _batTime:
     0000 0000 0000                 1-  476     	dw	0x00, 0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _subBatTime:
     0000 0000 0000                 1-  482     	dw	0x00, 0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _currentDuty:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _closeCount:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _overCount:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _overFlag:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _shanshuoTime:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _zeroTime:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _zeroFlag:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _zeroCount:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _chrgFullFlag:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _preBatValue:
     0000 0000 0000                 1-  542     	dw	0x00, 0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _tempBatValue:
     0000 0000 0000                 1-  548     	dw	0x00, 0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _chrgFullCount:
     0000 0000 0000                 1-  554     	dw	0x00, 0x00
                                    1-  558     .segment "code"
     0000                           1-  559     _table:
     0000 203F                      1-  560     	retia 0x3f
     0001 2006                      1-  561     	retia 0x06
     0002 205B                      1-  562     	retia 0x5b
     0003 204F                      1-  563     	retia 0x4f
     0004 2066                      1-  564     	retia 0x66
     0005 206D                      1-  565     	retia 0x6d
     0006 207D                      1-  566     	retia 0x7d
     0007 2007                      1-  567     	retia 0x07
     0008 207F                      1-  568     	retia 0x7f
     0009 206F                      1-  569     	retia 0x6f
     000A 2079                      1-  570     	retia 0x79
     000B 2038                      1-  571     	retia 0x38
     000C 205C                      1-  572     	retia 0x5c
                                    1-  575     .segment "code"
     0000                           1-  576     _table2:
     0000 2000                      1-  577     	retia 0x00
     0001 2001                      1-  578     	retia 0x01
     0002 2003                      1-  579     	retia 0x03
     0003 2007                      1-  580     	retia 0x07
     0004 200F                      1-  581     	retia 0x0f
     0005 201F                      1-  582     	retia 0x1f
     0006 203F                      1-  583     	retia 0x3f
     0007 203E                      1-  584     	retia 0x3e
     0008 203C                      1-  585     	retia 0x3c
     0009 2038                      1-  586     	retia 0x38
     000A 2030                      1-  587     	retia 0x30
     000B 2020                      1-  588     	retia 0x20
                                    1-  590     ;--------------------------------------------------------
                                    1-  591     ; overlayable items in internal ram 
                                    1-  592     ;--------------------------------------------------------
                                    1-  593     ;	udata_ovr
                                    1-  594     ;--------------------------------------------------------
                                    1-  595     ; reset vector 
                                    1-  596     ;--------------------------------------------------------
                                    1-  597     ORG	0x0000
     0000 3rrr                      1-  598     	LGOTO	__nyc_ny8_startup
                                    1-  599     ;--------------------------------------------------------
                                    1-  600     ; interrupt and initialization code
                                    1-  601     ;--------------------------------------------------------
                                    1-  602     ORG 0x0008
                                    1-  603     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  605     .segment "code"
     0000                           1-  606     __sdcc_interrupt:
                                    1-  607     ;***
                                    1-  608     ;  pBlock Stats: dbName = I
                                    1-  609     ;***
                                    1-  610     ;2 compiler assigned registers:
                                    1-  611     ;   STK00
                                    1-  612     ;   STK01
                                    1-  613     ;; Starting pCode block
     0000                           1-  614     _isr:
                                    1-  615     ; 0 exit points
                                    1-  616     	.line	103, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  617     	MOVAR	WSAVE
     0001 1503                      1-  618     	SWAPR	STATUS,W
     0002 0283                      1-  619     	CLRR	STATUS
     0003 00rr                      1-  620     	MOVAR	SSAVE
     0004 010A                      1-  621     	MOVR	PCHBUF,W
     0005 028A                      1-  622     	CLRR	PCHBUF
     0006 00rr                      1-  623     	MOVAR	PSAVE
     0007 0104                      1-  624     	MOVR	FSR,W
                                    1-  625     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  626     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  627     	MOVR	STK00,W
                                    1-  628     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  629     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  630     	MOVR	STK01,W
                                    1-  631     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  632     	MOVAR	___sdcc_saved_stk01
                                    1-  633     	.line	105, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  634     	BTRSS	_INTFbits,0
                                    1-  635     	MGOTO	_00113_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  636     	.line	107, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  637     	MOVIA	0x37
     0013 03rr                      1-  638     	ADDAR	_TMR0,F
                                    1-  639     	.line	109, "main.c"; 	if(++intCount >= 100)
                                    1-  640     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  641     	INCR	_intCount,F
                                    1-  642     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  643     	MOVIA	0x64
     0017 04rr                      1-  644     	SUBAR	_intCount,W
     0018 0803                      1-  645     	BTRSS	STATUS,0
                                    1-  646     	MGOTO	_00113_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  647     	.line	111, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  648     	MOVIA	0x01
                                    1-  649     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  650     	MOVAR	_IntFlag
                                    1-  651     	.line	112, "main.c"; 	intCount = 0;
                                    1-  652     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  653     	CLRR	_intCount
                                    1-  654     	.line	113, "main.c"; 	if(++count1s >= 100)
                                    1-  655     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  656     	INCR	_count1s,F
                                    1-  657     ;;unsigned compare: left < lit (0x64=100), size=1
     0021 2164                      1-  658     	MOVIA	0x64
     0022 04rr                      1-  659     	SUBAR	_count1s,W
     0023 0803                      1-  660     	BTRSS	STATUS,0
                                    1-  661     	MGOTO	_00113_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  662     	.line	115, "main.c"; 	count1s = 0;
     0025 02rr                      1-  663     	CLRR	_count1s
                                    1-  664     	.line	116, "main.c"; 	if(workStep)
                                    1-  665     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  666     	MOVR	_workStep,W
     0028 0D03                      1-  667     	BTRSC	STATUS,2
                                    1-  668     	MGOTO	_00106_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  669     	.line	118, "main.c"; 	++count900s;
                                    1-  670     	BANKSEL	_count900s
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 05rr                      1-  671     	INCR	_count900s,F
     002C 0D03                      1-  672     	BTRSC	STATUS,2
     002D 05rr                      1-  673     	INCR	(_count900s + 1),F
                                    1-  674     	MGOTO	_00113_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  675     _00106_DS_:
                                    1-  676     	.line	122, "main.c"; 	count900s = 0;
                                    1-  677     	BANKSEL	_count900s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1-  678     	CLRR	_count900s
     0031 02rr                      1-  679     	CLRR	(_count900s + 1)
     0032                           1-  680     _00113_DS_:
                                    1-  681     	.line	131, "main.c"; 	if(INTFbits.PABIF)
     0032 08rr                      1-  682     	BTRSS	_INTFbits,1
                                    1-  683     	MGOTO	_00115_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  684     	.line	133, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0034 21FD                      1-  685     	MOVIA	0xfd
     0035 00rr                      1-  686     	MOVAR	_INTF
     0036                           1-  687     _00115_DS_:
                                    1-  688     	.line	136, "main.c"; 	INTF = 0;
     0036 02rr                      1-  689     	CLRR	_INTF
                                    1-  690     	.line	138, "main.c"; 	}
                                    1-  691     	BANKSEL	___sdcc_saved_stk01
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1-  692     	MOVR	___sdcc_saved_stk01,W
     0039 00rr                      1-  693     	MOVAR	STK01
                                    1-  694     	BANKSEL	___sdcc_saved_stk00
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  695     	MOVR	___sdcc_saved_stk00,W
     003C 00rr                      1-  696     	MOVAR	STK00
                                    1-  697     	BANKSEL	___sdcc_saved_fsr
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  698     	MOVR	___sdcc_saved_fsr,W
     003F 0084                      1-  699     	MOVAR	FSR
     0040 01rr                      1-  700     	MOVR	PSAVE,W
     0041 008A                      1-  701     	MOVAR	PCHBUF
     0042 0283                      1-  702     	CLRR	STATUS
     0043 15rr                      1-  703     	SWAPR	SSAVE,W
     0044 0083                      1-  704     	MOVAR	STATUS
     0045 15rr                      1-  705     	SWAPR	WSAVE,F
     0046 15rr                      1-  706     	SWAPR	WSAVE,W
     0047                           1-  707     END_OF_INTERRUPT:
     0047 0011                      1-  708     	RETIE	
                                    1-  710     ;--------------------------------------------------------
                                    1-  711     ; code
                                    1-  712     ;--------------------------------------------------------
                                    1-  713     ;***
                                    1-  714     ;  pBlock Stats: dbName = M
                                    1-  715     ;***
                                    1-  716     ;has an exit
                                    1-  717     ;functions called:
                                    1-  718     ;   _initSys
                                    1-  719     ;   _initAD
                                    1-  720     ;   _delay_us
                                    1-  721     ;   _delay_us
                                    1-  722     ;   _refresh
                                    1-  723     ;   _refreshBat
                                    1-  724     ;   _refresh
                                    1-  725     ;   _refreshBat
                                    1-  726     ;   __gptrget1
                                    1-  727     ;   _ind_light_disp
                                    1-  728     ;   _delay_us
                                    1-  729     ;   __gptrget1
                                    1-  730     ;   _ind_light_disp
                                    1-  731     ;   _delay_us
                                    1-  732     ;   __gptrget1
                                    1-  733     ;   _ind_light_disp
                                    1-  734     ;   _delay_us
                                    1-  735     ;   __gptrget1
                                    1-  736     ;   _ind_light_disp
                                    1-  737     ;   _delay_us
                                    1-  738     ;   _chrgCtr
                                    1-  739     ;   _checkBatAD
                                    1-  740     ;   _checkOutA
                                    1-  741     ;   _powerOff
                                    1-  742     ;   _gotoSleep
                                    1-  743     ;   _powerOff
                                    1-  744     ;   _initSys
                                    1-  745     ;   _initAD
                                    1-  746     ;   _delay_us
                                    1-  747     ;   _delay_us
                                    1-  748     ;   _refresh
                                    1-  749     ;   _refreshBat
                                    1-  750     ;   _refresh
                                    1-  751     ;   _refreshBat
                                    1-  752     ;   __gptrget1
                                    1-  753     ;   _ind_light_disp
                                    1-  754     ;   _delay_us
                                    1-  755     ;   __gptrget1
                                    1-  756     ;   _ind_light_disp
                                    1-  757     ;   _delay_us
                                    1-  758     ;   __gptrget1
                                    1-  759     ;   _ind_light_disp
                                    1-  760     ;   _delay_us
                                    1-  761     ;   __gptrget1
                                    1-  762     ;   _ind_light_disp
                                    1-  763     ;   _delay_us
                                    1-  764     ;   _chrgCtr
                                    1-  765     ;   _checkBatAD
                                    1-  766     ;   _checkOutA
                                    1-  767     ;   _powerOff
                                    1-  768     ;   _gotoSleep
                                    1-  769     ;   _powerOff
                                    1-  770     ;7 compiler assigned registers:
                                    1-  771     ;   r0x1060
                                    1-  772     ;   STK01
                                    1-  773     ;   STK00
                                    1-  774     ;   r0x1061
                                    1-  775     ;   r0x1062
                                    1-  776     ;   r0x1063
                                    1-  777     ;   r0x1064
                                    1-  778     ;; Starting pCode block
                                    1-  779     .segment "code"; module=main, function=_main
     0000                           1-  781     _main:
                                    1-  782     ; 2 exit points
                                    1-  783     	.line	143, "main.c"; 	initSys();
                                    1-  784     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  785     	.line	144, "main.c"; 	initAD();
                                    1-  786     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  787     	.line	145, "main.c"; 	firstTime = 200;
     0002 21C8                      1-  788     	MOVIA	0xc8
                                    1-  789     	BANKSEL	_firstTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  790     	MOVAR	_firstTime
     0005                           1-  791     _00159_DS_:
                                    1-  792     	.line	148, "main.c"; 	CLRWDT();
     0005 0002                      1-  793     	clrwdt
                                    1-  794     	.line	149, "main.c"; 	if(powerFlag)
                                    1-  795     	BANKSEL	_powerFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  796     	MOVR	_powerFlag,W
     0008 0D03                      1-  797     	BTRSC	STATUS,2
                                    1-  798     	MGOTO	_00130_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  799     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  800     ;;unsigned compare: left >= lit (0x1A=26), size=1
                                    1-  801     	.line	151, "main.c"; 	if(shanshuoTime > 25)
     000A 211A                      1-  802     	MOVIA	0x1a
                                    1-  803     	BANKSEL	_shanshuoTime
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1-  804     	SUBAR	_shanshuoTime,W
     000D 0803                      1-  805     	BTRSS	STATUS,0
                                    1-  806     	MGOTO	_00124_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  807     	.line	153, "main.c"; 	delay_us(REFRESHTIME);
     000F 2164                      1-  808     	MOVIA	0x64
                                    1-  809     	MCALL	_delay_us
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  810     	.line	154, "main.c"; 	delay_us(REFRESHTIME);
     0011 2164                      1-  811     	MOVIA	0x64
                                    1-  812     	MCALL	_delay_us
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  813     	.line	155, "main.c"; 	if(zeroFlag)
                                    1-  814     	BANKSEL	_zeroFlag
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1-  815     	MOVR	_zeroFlag,W
     0015 0D03                      1-  816     	BTRSC	STATUS,2
                                    1-  817     	MGOTO	_00121_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  818     	.line	156, "main.c"; 	refresh();
                                    1-  819     	MCALL	_refresh
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  820     	MGOTO	_00125_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1-  821     _00121_DS_:
                                    1-  822     	.line	158, "main.c"; 	refreshBat();
                                    1-  823     	MCALL	_refreshBat
     0019 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  824     	MGOTO	_00125_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1-  825     _00124_DS_:
                                    1-  826     	.line	162, "main.c"; 	refresh();
                                    1-  827     	MCALL	_refresh
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  828     	.line	163, "main.c"; 	refreshBat();
                                    1-  829     	MCALL	_refreshBat
     001C 2rrr                      3-   66 m1      LCALL rom_address
     001D                           1-  830     _00125_DS_:
                                    1-  831     	.line	165, "main.c"; 	IOSTA &= 0xDF;
     001D 001r                      1-  832     	IOSTR	_IOSTA
                                    1-  833     	BANKSEL	r0x1060
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  834     	MOVAR	r0x1060
     0020 1Err                      1-  835     	BCR	r0x1060,5
     0021 01rr                      1-  836     	MOVR	r0x1060,W
     0022 000r                      1-  837     	IOST	_IOSTA
                                    1-  838     	.line	166, "main.c"; 	PORTA &= 0xDF;
                                    1-  839     	BANKSEL	_PORTA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 1Err                      1-  840     	BCR	_PORTA,5
                                    1-  841     	MGOTO	_00131_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1-  842     _00130_DS_:
                                    1-  843     	.line	170, "main.c"; 	if(firstTime)
                                    1-  844     	BANKSEL	_firstTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  845     	MOVR	_firstTime,W
     0028 0D03                      1-  846     	BTRSC	STATUS,2
                                    1-  847     	MGOTO	_00127_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  848     	.line	172, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     002A 1Arr                      1-  849     	BSR	_PORTB,5
     002B 0Arr                      1-  850     	BTRSS	_PORTB,5
     002C 1Err                      1-  851     	BCR	_PORTB,4
     002D 0Err                      1-  852     	BTRSC	_PORTB,5
     002E 1Arr                      1-  853     	BSR	_PORTB,4
     002F 0Err                      1-  854     	BTRSC	_PORTB,4
                                    1-  855     	MGOTO	_00010_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  856     	BANKSEL	_PORTA
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 1Drr                      1-  857     	BCR	_PORTA,3
     0033                           1-  858     _00010_DS_:
     0033 0Arr                      1-  859     	BTRSS	_PORTB,4
                                    1-  860     	MGOTO	_00011_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	BANKSEL	_PORTA
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 19rr                      1-  862     	BSR	_PORTA,3
     0037                           1-  863     _00011_DS_:
                                    1-  864     	BANKSEL	_PORTA
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 09rr                      1-  865     	BTRSS	_PORTA,3
     0039 1Err                      1-  866     	BCR	_PORTA,4
     003A 0Drr                      1-  867     	BTRSC	_PORTA,3
     003B 1Arr                      1-  868     	BSR	_PORTA,4
                                    1-  869     	.line	173, "main.c"; 	ind_light_disp(table[8]);
     003C 21rr                      1-  870     	MOVIA	(_table + 8)
     003D 00rr                      1-  871     	MOVAR	STK01
     003E 21rr                      1-  872     	MOVIA	((_table + 8) >> 8) & 0xff
     003F 00rr                      1-  873     	MOVAR	STK00
     0040 2180                      1-  874     	MOVIA	0x80
                                    1-  875     	MCALL	__gptrget1
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  876     	BANKSEL	r0x1060
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1-  877     	MOVAR	r0x1060
                                    1-  878     	MCALL	_ind_light_disp
     0044 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  879     	.line	174, "main.c"; 	COM1 = 0;
                                    1-  880     	BANKSEL	_PORTA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 1Err                      1-  881     	BCR	_PORTA,4
                                    1-  882     	.line	175, "main.c"; 	delay_us(REFRESHTIME);
     0047 2164                      1-  883     	MOVIA	0x64
                                    1-  884     	MCALL	_delay_us
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  885     	.line	176, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     0049 1Arr                      1-  886     	BSR	_PORTB,5
     004A 0Arr                      1-  887     	BTRSS	_PORTB,5
     004B 1Err                      1-  888     	BCR	_PORTB,4
     004C 0Err                      1-  889     	BTRSC	_PORTB,5
     004D 1Arr                      1-  890     	BSR	_PORTB,4
     004E 0Err                      1-  891     	BTRSC	_PORTB,4
                                    1-  892     	MGOTO	_00012_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  893     	BANKSEL	_PORTA
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 1Drr                      1-  894     	BCR	_PORTA,3
     0052                           1-  895     _00012_DS_:
     0052 0Arr                      1-  896     	BTRSS	_PORTB,4
                                    1-  897     	MGOTO	_00013_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  898     	BANKSEL	_PORTA
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 19rr                      1-  899     	BSR	_PORTA,3
     0056                           1-  900     _00013_DS_:
                                    1-  901     	BANKSEL	_PORTA
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 09rr                      1-  902     	BTRSS	_PORTA,3
     0058 1Err                      1-  903     	BCR	_PORTA,4
     0059 0Drr                      1-  904     	BTRSC	_PORTA,3
     005A 1Arr                      1-  905     	BSR	_PORTA,4
                                    1-  906     	.line	177, "main.c"; 	ind_light_disp(table[8]);
     005B 21rr                      1-  907     	MOVIA	(_table + 8)
     005C 00rr                      1-  908     	MOVAR	STK01
     005D 21rr                      1-  909     	MOVIA	((_table + 8) >> 8) & 0xff
     005E 00rr                      1-  910     	MOVAR	STK00
     005F 2180                      1-  911     	MOVIA	0x80
                                    1-  912     	MCALL	__gptrget1
     0060 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  913     	BANKSEL	r0x1060
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1-  914     	MOVAR	r0x1060
                                    1-  915     	MCALL	_ind_light_disp
     0063 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  916     	.line	178, "main.c"; 	COM2 = 0;
                                    1-  917     	BANKSEL	_PORTA
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 1Drr                      1-  918     	BCR	_PORTA,3
                                    1-  919     	.line	179, "main.c"; 	delay_us(REFRESHTIME);
     0066 2164                      1-  920     	MOVIA	0x64
                                    1-  921     	MCALL	_delay_us
     0067 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  922     	.line	180, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     0068 1Arr                      1-  923     	BSR	_PORTB,5
     0069 0Arr                      1-  924     	BTRSS	_PORTB,5
     006A 1Err                      1-  925     	BCR	_PORTB,4
     006B 0Err                      1-  926     	BTRSC	_PORTB,5
     006C 1Arr                      1-  927     	BSR	_PORTB,4
     006D 0Err                      1-  928     	BTRSC	_PORTB,4
                                    1-  929     	MGOTO	_00014_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  930     	BANKSEL	_PORTA
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 1Drr                      1-  931     	BCR	_PORTA,3
     0071                           1-  932     _00014_DS_:
     0071 0Arr                      1-  933     	BTRSS	_PORTB,4
                                    1-  934     	MGOTO	_00015_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  935     	BANKSEL	_PORTA
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 19rr                      1-  936     	BSR	_PORTA,3
     0075                           1-  937     _00015_DS_:
                                    1-  938     	BANKSEL	_PORTA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 09rr                      1-  939     	BTRSS	_PORTA,3
     0077 1Err                      1-  940     	BCR	_PORTA,4
     0078 0Drr                      1-  941     	BTRSC	_PORTA,3
     0079 1Arr                      1-  942     	BSR	_PORTA,4
                                    1-  943     	.line	181, "main.c"; 	ind_light_disp(table[8]);
     007A 21rr                      1-  944     	MOVIA	(_table + 8)
     007B 00rr                      1-  945     	MOVAR	STK01
     007C 21rr                      1-  946     	MOVIA	((_table + 8) >> 8) & 0xff
     007D 00rr                      1-  947     	MOVAR	STK00
     007E 2180                      1-  948     	MOVIA	0x80
                                    1-  949     	MCALL	__gptrget1
     007F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  950     	BANKSEL	r0x1060
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1-  951     	MOVAR	r0x1060
                                    1-  952     	MCALL	_ind_light_disp
     0082 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  953     	.line	182, "main.c"; 	COM3 = 0;
     0083 1Err                      1-  954     	BCR	_PORTB,4
                                    1-  955     	.line	183, "main.c"; 	delay_us(REFRESHTIME);
     0084 2164                      1-  956     	MOVIA	0x64
                                    1-  957     	MCALL	_delay_us
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  958     	.line	184, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     0086 1Arr                      1-  959     	BSR	_PORTB,5
     0087 0Arr                      1-  960     	BTRSS	_PORTB,5
     0088 1Err                      1-  961     	BCR	_PORTB,4
     0089 0Err                      1-  962     	BTRSC	_PORTB,5
     008A 1Arr                      1-  963     	BSR	_PORTB,4
     008B 0Err                      1-  964     	BTRSC	_PORTB,4
                                    1-  965     	MGOTO	_00016_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  966     	BANKSEL	_PORTA
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 1Drr                      1-  967     	BCR	_PORTA,3
     008F                           1-  968     _00016_DS_:
     008F 0Arr                      1-  969     	BTRSS	_PORTB,4
                                    1-  970     	MGOTO	_00017_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  971     	BANKSEL	_PORTA
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 19rr                      1-  972     	BSR	_PORTA,3
     0093                           1-  973     _00017_DS_:
                                    1-  974     	BANKSEL	_PORTA
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 09rr                      1-  975     	BTRSS	_PORTA,3
     0095 1Err                      1-  976     	BCR	_PORTA,4
     0096 0Drr                      1-  977     	BTRSC	_PORTA,3
     0097 1Arr                      1-  978     	BSR	_PORTA,4
                                    1-  979     	.line	185, "main.c"; 	ind_light_disp(table[8]);
     0098 21rr                      1-  980     	MOVIA	(_table + 8)
     0099 00rr                      1-  981     	MOVAR	STK01
     009A 21rr                      1-  982     	MOVIA	((_table + 8) >> 8) & 0xff
     009B 00rr                      1-  983     	MOVAR	STK00
     009C 2180                      1-  984     	MOVIA	0x80
                                    1-  985     	MCALL	__gptrget1
     009D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  986     	BANKSEL	r0x1060
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1-  987     	MOVAR	r0x1060
                                    1-  988     	MCALL	_ind_light_disp
     00A0 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  989     	.line	186, "main.c"; 	COM4 = 0;
     00A1 1Err                      1-  990     	BCR	_PORTB,5
                                    1-  991     	.line	187, "main.c"; 	delay_us(REFRESHTIME);
     00A2 2164                      1-  992     	MOVIA	0x64
                                    1-  993     	MCALL	_delay_us
     00A3 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  994     	.line	188, "main.c"; 	IOSTA &= 0xDF;
     00A4 001r                      1-  995     	IOSTR	_IOSTA
                                    1-  996     	BANKSEL	r0x1060
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1-  997     	MOVAR	r0x1060
     00A7 1Err                      1-  998     	BCR	r0x1060,5
     00A8 01rr                      1-  999     	MOVR	r0x1060,W
     00A9 000r                      1- 1000     	IOST	_IOSTA
                                    1- 1001     	.line	189, "main.c"; 	PORTA &= 0xDF;
                                    1- 1002     	BANKSEL	_PORTA
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 1Err                      1- 1003     	BCR	_PORTA,5
                                    1- 1004     	MGOTO	_00131_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
     00AD                           1- 1005     _00127_DS_:
                                    1- 1006     	.line	193, "main.c"; 	IOSTA |= 0x20;
     00AD 001r                      1- 1007     	IOSTR	_IOSTA
                                    1- 1008     	BANKSEL	r0x1060
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 1009     	MOVAR	r0x1060
     00B0 1Arr                      1- 1010     	BSR	r0x1060,5
     00B1 01rr                      1- 1011     	MOVR	r0x1060,W
     00B2 000r                      1- 1012     	IOST	_IOSTA
                                    1- 1013     	.line	194, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     00B3 1Arr                      1- 1014     	BSR	_PORTB,5
     00B4 0Arr                      1- 1015     	BTRSS	_PORTB,5
     00B5 1Err                      1- 1016     	BCR	_PORTB,4
     00B6 0Err                      1- 1017     	BTRSC	_PORTB,5
     00B7 1Arr                      1- 1018     	BSR	_PORTB,4
     00B8 0Err                      1- 1019     	BTRSC	_PORTB,4
                                    1- 1020     	MGOTO	_00018_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1021     	BANKSEL	_PORTA
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 1Drr                      1- 1022     	BCR	_PORTA,3
     00BC                           1- 1023     _00018_DS_:
     00BC 0Arr                      1- 1024     	BTRSS	_PORTB,4
                                    1- 1025     	MGOTO	_00019_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1026     	BANKSEL	_PORTA
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 19rr                      1- 1027     	BSR	_PORTA,3
     00C0                           1- 1028     _00019_DS_:
                                    1- 1029     	BANKSEL	_PORTA
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 09rr                      1- 1030     	BTRSS	_PORTA,3
     00C2 1Err                      1- 1031     	BCR	_PORTA,4
     00C3 0Drr                      1- 1032     	BTRSC	_PORTA,3
     00C4 1Arr                      1- 1033     	BSR	_PORTA,4
     00C5                           1- 1034     _00131_DS_:
                                    1- 1035     	.line	198, "main.c"; 	if(workStep > 0 && currentDuty > (workStep + 170))
                                    1- 1036     	BANKSEL	_workStep
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1037     	MOVR	_workStep,W
     00C7 0D03                      1- 1038     	BTRSC	STATUS,2
                                    1- 1039     	MGOTO	_00133_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
     00C9 01rr                      1- 1040     	MOVR	_workStep,W
                                    1- 1041     	BANKSEL	r0x1060
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 1042     	MOVAR	r0x1060
                                    1- 1043     	BANKSEL	r0x1061
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 02rr                      1- 1044     	CLRR	r0x1061
     00CE 21AA                      1- 1045     	MOVIA	0xaa
                                    1- 1046     	BANKSEL	r0x1060
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 03rr                      1- 1047     	ADDAR	r0x1060,F
     00D1 0803                      1- 1048     	BTRSS	STATUS,0
                                    1- 1049     	MGOTO	_00020_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1050     	BANKSEL	r0x1061
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 05rr                      1- 1051     	INCR	r0x1061,F
     00D5                           1- 1052     _00020_DS_:
                                    1- 1053     	BANKSEL	_currentDuty
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 1054     	MOVR	_currentDuty,W
                                    1- 1055     	BANKSEL	r0x1062
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 00rr                      1- 1056     	MOVAR	r0x1062
                                    1- 1057     ;;1	CLRR	r0x1063
                                    1- 1058     	BANKSEL	r0x1061
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 01rr                      1- 1059     	MOVR	r0x1061,W
     00DB 2580                      1- 1060     	ADDIA	0x80
                                    1- 1061     	BANKSEL	r0x1064
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 00rr                      1- 1062     	MOVAR	r0x1064
     00DE 2100                      1- 1063     	MOVIA	0x00
     00DF 2580                      1- 1064     	ADDIA	0x80
     00E0 04rr                      1- 1065     	SUBAR	r0x1064,W
     00E1 0903                      1- 1066     	BTRSS	STATUS,2
                                    1- 1067     	MGOTO	_00227_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1068     	BANKSEL	r0x1062
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 01rr                      1- 1069     	MOVR	r0x1062,W
                                    1- 1070     	BANKSEL	r0x1060
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 04rr                      1- 1071     	SUBAR	r0x1060,W
     00E7                           1- 1072     _00227_DS_:
     00E7 0C03                      1- 1073     	BTRSC	STATUS,0
                                    1- 1074     	MGOTO	_00133_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1075     	.line	201, "main.c"; 	currentDuty = currentDuty - 1;
                                    1- 1076     	BANKSEL	_currentDuty
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 06rr                      1- 1077     	DECR	_currentDuty,F
                                    1- 1078     	.line	202, "main.c"; 	PWM1DUTY = currentDuty;
     00EB 01rr                      1- 1079     	MOVR	_currentDuty,W
     00EC 00rr                      1- 1080     	SFUN	_PWM1DUTY
     00ED                           1- 1081     _00133_DS_:
                                    1- 1082     	.line	205, "main.c"; 	if(!IntFlag)
                                    1- 1083     	BANKSEL	_IntFlag
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 01rr                      1- 1084     	MOVR	_IntFlag,W
     00EF 0D03                      1- 1085     	BTRSC	STATUS,2
                                    1- 1086     	MGOTO	_00159_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1087     	.line	207, "main.c"; 	IntFlag = 0;
     00F1 02rr                      1- 1088     	CLRR	_IntFlag
                                    1- 1089     	.line	208, "main.c"; 	chrgCtr();
                                    1- 1090     	MCALL	_chrgCtr
     00F2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1091     	.line	209, "main.c"; 	if(count1s %2 == 0)
                                    1- 1092     	BANKSEL	_count1s
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 0Crr                      1- 1093     	BTRSC	_count1s,0
                                    1- 1094     	MGOTO	_00138_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1095     	.line	210, "main.c"; 	checkBatAD();
                                    1- 1096     	MCALL	_checkBatAD
     00F6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1097     	MGOTO	_00139_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
     00F8                           1- 1098     _00138_DS_:
                                    1- 1099     	.line	212, "main.c"; 	checkOutA();
                                    1- 1100     	MCALL	_checkOutA
     00F8 2rrr                      3-   66 m1      LCALL rom_address
     00F9                           1- 1101     _00139_DS_:
                                    1- 1102     	.line	213, "main.c"; 	if(chrgFlag == 0 && batValue == 0 && workStep > 0)
                                    1- 1103     	BANKSEL	_chrgFlag
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 01rr                      1- 1104     	MOVR	_chrgFlag,W
     00FB 0903                      1- 1105     	BTRSS	STATUS,2
                                    1- 1106     	MGOTO	_00143_DS_
     00FC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1107     	BANKSEL	_batValue
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 01rr                      1- 1108     	MOVR	_batValue,W
     00FF 0903                      1- 1109     	BTRSS	STATUS,2
                                    1- 1110     	MGOTO	_00143_DS_
     0100 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1111     	BANKSEL	_workStep
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 01rr                      1- 1112     	MOVR	_workStep,W
     0103 0D03                      1- 1113     	BTRSC	STATUS,2
                                    1- 1114     	MGOTO	_00143_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1115     	.line	215, "main.c"; 	if(++closeCount > 200)
                                    1- 1116     	BANKSEL	_closeCount
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 05rr                      1- 1117     	INCR	_closeCount,F
                                    1- 1118     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1119     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0107 21C9                      1- 1120     	MOVIA	0xc9
     0108 04rr                      1- 1121     	SUBAR	_closeCount,W
     0109 0803                      1- 1122     	BTRSS	STATUS,0
                                    1- 1123     	MGOTO	_00144_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1124     	.line	217, "main.c"; 	showBatValue = 0;
                                    1- 1125     	BANKSEL	_showBatValue
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 02rr                      1- 1126     	CLRR	_showBatValue
                                    1- 1127     	.line	218, "main.c"; 	closeCount = 0;
                                    1- 1128     	BANKSEL	_closeCount
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 02rr                      1- 1129     	CLRR	_closeCount
                                    1- 1130     	.line	219, "main.c"; 	powerOff();
                                    1- 1131     	MCALL	_powerOff
     010F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1132     	.line	220, "main.c"; 	powerFlag = 1;
     0110 2101                      1- 1133     	MOVIA	0x01
                                    1- 1134     	BANKSEL	_powerFlag
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 00rr                      1- 1135     	MOVAR	_powerFlag
                                    1- 1136     	.line	221, "main.c"; 	shiwei = 11;
     0113 210B                      1- 1137     	MOVIA	0x0b
                                    1- 1138     	BANKSEL	_shiwei
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 00rr                      1- 1139     	MOVAR	_shiwei
                                    1- 1140     	.line	222, "main.c"; 	gewei = 12;
     0116 210C                      1- 1141     	MOVIA	0x0c
                                    1- 1142     	BANKSEL	_gewei
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 00rr                      1- 1143     	MOVAR	_gewei
                                    1- 1144     	.line	223, "main.c"; 	zeroFlag = 1;
     0119 2101                      1- 1145     	MOVIA	0x01
                                    1- 1146     	BANKSEL	_zeroFlag
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 00rr                      1- 1147     	MOVAR	_zeroFlag
                                    1- 1148     	.line	224, "main.c"; 	powerTime = 500;
     011C 21F4                      1- 1149     	MOVIA	0xf4
                                    1- 1150     	BANKSEL	_powerTime
     011D rrrr                      3-  110 m1      .banksel ram_address
     011E 00rr                      1- 1151     	MOVAR	_powerTime
     011F 2101                      1- 1152     	MOVIA	0x01
     0120 00rr                      1- 1153     	MOVAR	(_powerTime + 1)
                                    1- 1154     	MGOTO	_00144_DS_
     0121 3rrr                      3-   63 m1      LGOTO rom_address
     0122                           1- 1155     _00143_DS_:
                                    1- 1156     	.line	229, "main.c"; 	closeCount = 0;
                                    1- 1157     	BANKSEL	_closeCount
     0122 rrrr                      3-  110 m1      .banksel ram_address
     0123 02rr                      1- 1158     	CLRR	_closeCount
     0124                           1- 1159     _00144_DS_:
                                    1- 1160     	.line	231, "main.c"; 	if(workStep == 0 && keyCount == 0 &&  keyCount2 == 0 && (PORTA & 0x02) == 0 && firstTime == 0 && powerFlag == 0)
                                    1- 1161     	BANKSEL	_workStep
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 01rr                      1- 1162     	MOVR	_workStep,W
     0126 0903                      1- 1163     	BTRSS	STATUS,2
                                    1- 1164     	MGOTO	_00150_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1165     	BANKSEL	_keyCount
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 01rr                      1- 1166     	MOVR	_keyCount,W
     012A 0903                      1- 1167     	BTRSS	STATUS,2
                                    1- 1168     	MGOTO	_00150_DS_
     012B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1169     	BANKSEL	_keyCount2
     012C rrrr                      3-  110 m1      .banksel ram_address
     012D 01rr                      1- 1170     	MOVR	_keyCount2,W
     012E 0903                      1- 1171     	BTRSS	STATUS,2
                                    1- 1172     	MGOTO	_00150_DS_
     012F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1173     	BANKSEL	_PORTA
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 0Crr                      1- 1174     	BTRSC	_PORTA,1
                                    1- 1175     	MGOTO	_00150_DS_
     0132 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1176     	BANKSEL	_firstTime
     0133 rrrr                      3-  110 m1      .banksel ram_address
     0134 01rr                      1- 1177     	MOVR	_firstTime,W
     0135 0903                      1- 1178     	BTRSS	STATUS,2
                                    1- 1179     	MGOTO	_00150_DS_
     0136 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1180     	BANKSEL	_powerFlag
     0137 rrrr                      3-  110 m1      .banksel ram_address
     0138 01rr                      1- 1181     	MOVR	_powerFlag,W
     0139 0903                      1- 1182     	BTRSS	STATUS,2
                                    1- 1183     	MGOTO	_00150_DS_
     013A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1184     	.line	233, "main.c"; 	if(++sleepTime > 20)
                                    1- 1185     	BANKSEL	_sleepTime
     013B rrrr                      3-  110 m1      .banksel ram_address
     013C 05rr                      1- 1186     	INCR	_sleepTime,F
                                    1- 1187     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1188     ;;unsigned compare: left >= lit (0x15=21), size=1
     013D 2115                      1- 1189     	MOVIA	0x15
     013E 04rr                      1- 1190     	SUBAR	_sleepTime,W
     013F 0C03                      1- 1191     	BTRSC	STATUS,0
                                    1- 1192     	.line	235, "main.c"; 	gotoSleep();
                                    1- 1193     	MCALL	_gotoSleep
     0140 2rrr                      3-   66 m1      LCALL rom_address
     0141                           1- 1194     _00150_DS_:
                                    1- 1195     	.line	239, "main.c"; 	if(count900s >= 900)
     0141 2103                      1- 1196     	MOVIA	0x03
                                    1- 1197     	BANKSEL	_count900s
     0142 rrrr                      3-  110 m1      .banksel ram_address
     0143 04rr                      1- 1198     	SUBAR	(_count900s + 1),W
     0144 0903                      1- 1199     	BTRSS	STATUS,2
                                    1- 1200     	MGOTO	_00230_DS_
     0145 3rrr                      3-   63 m1      LGOTO rom_address
     0146 2184                      1- 1201     	MOVIA	0x84
     0147 04rr                      1- 1202     	SUBAR	_count900s,W
     0148                           1- 1203     _00230_DS_:
     0148 0803                      1- 1204     	BTRSS	STATUS,0
                                    1- 1205     	MGOTO	_00159_DS_
     0149 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1206     	.line	241, "main.c"; 	powerOff();
                                    1- 1207     	MCALL	_powerOff
     014A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1208     	MGOTO	_00159_DS_
     014B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1209     	.line	244, "main.c"; 	}
                                    1- 1210     	RETURN	
     014C 0010                      3-   40 m1      ret
                                    1- 1211     ; exit point of _main
                                    1- 1213     ;***
                                    1- 1214     ;  pBlock Stats: dbName = C
                                    1- 1215     ;***
                                    1- 1216     ;has an exit
                                    1- 1217     ;; Starting pCode block
                                    1- 1218     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1220     _Delay10Us:
                                    1- 1221     ; 2 exit points
                                    1- 1222     	.line	915, "main.c"; 	NOP();
     0000 0000                      1- 1223     	nop
                                    1- 1224     	.line	916, "main.c"; 	NOP();
     0001 0000                      1- 1225     	nop
                                    1- 1226     	.line	917, "main.c"; 	NOP();
     0002 0000                      1- 1227     	nop
                                    1- 1228     	.line	918, "main.c"; 	NOP();
     0003 0000                      1- 1229     	nop
                                    1- 1230     	.line	919, "main.c"; 	NOP();
     0004 0000                      1- 1231     	nop
                                    1- 1232     	.line	920, "main.c"; 	NOP();
     0005 0000                      1- 1233     	nop
                                    1- 1234     	.line	921, "main.c"; 	}
                                    1- 1235     	RETURN	
     0006 0010                      3-   40 m1      ret
                                    1- 1236     ; exit point of _Delay10Us
                                    1- 1238     ;***
                                    1- 1239     ;  pBlock Stats: dbName = C
                                    1- 1240     ;***
                                    1- 1241     ;has an exit
                                    1- 1242     ;1 compiler assigned register :
                                    1- 1243     ;   r0x1032
                                    1- 1244     ;; Starting pCode block
                                    1- 1245     .segment "code"; module=main, function=_delay_us
     0000                           1- 1247     _delay_us:
                                    1- 1248     ; 2 exit points
                                    1- 1249     	.line	903, "main.c"; 	void delay_us(u8t time)
                                    1- 1250     	BANKSEL	r0x1032
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1251     	MOVAR	r0x1032
     0002                           1- 1252     _00640_DS_:
                                    1- 1253     	.line	905, "main.c"; 	while(time)
                                    1- 1254     	BANKSEL	r0x1032
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 1255     	MOVR	r0x1032,W
     0004 0D03                      1- 1256     	BTRSC	STATUS,2
                                    1- 1257     	MGOTO	_00643_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1258     	.line	907, "main.c"; 	--time;
     0006 06rr                      1- 1259     	DECR	r0x1032,F
                                    1- 1260     	.line	908, "main.c"; 	NOP();
     0007 0000                      1- 1261     	nop
                                    1- 1262     	MGOTO	_00640_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1- 1263     _00643_DS_:
                                    1- 1264     	.line	910, "main.c"; 	}
                                    1- 1265     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 1266     ; exit point of _delay_us
                                    1- 1268     ;***
                                    1- 1269     ;  pBlock Stats: dbName = C
                                    1- 1270     ;***
                                    1- 1271     ;has an exit
                                    1- 1272     ;6 compiler assigned registers:
                                    1- 1273     ;   r0x1033
                                    1- 1274     ;   STK00
                                    1- 1275     ;   r0x1034
                                    1- 1276     ;   r0x1035
                                    1- 1277     ;   r0x1036
                                    1- 1278     ;   r0x1037
                                    1- 1279     ;; Starting pCode block
                                    1- 1280     .segment "code"; module=main, function=_delay
                                    1- 1282     ;local variable name mapping:
     0000                           1- 1287     _delay:
                                    1- 1288     ; 2 exit points
                                    1- 1289     	.line	895, "main.c"; 	void delay(int count)
                                    1- 1290     	BANKSEL	r0x1033
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1291     	MOVAR	r0x1033
     0002 01rr                      1- 1292     	MOVR	STK00,W
                                    1- 1293     	BANKSEL	r0x1034
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1294     	MOVAR	r0x1034
                                    1- 1295     	.line	898, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1296     	MOVIA	0x01
                                    1- 1297     	BANKSEL	r0x1035
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1298     	MOVAR	r0x1035
                                    1- 1299     	BANKSEL	r0x1036
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1300     	CLRR	r0x1036
     000A                           1- 1301     _00624_DS_:
                                    1- 1302     	BANKSEL	r0x1033
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1303     	MOVR	r0x1033,W
     000C 2580                      1- 1304     	ADDIA	0x80
                                    1- 1305     	BANKSEL	r0x1037
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1306     	MOVAR	r0x1037
                                    1- 1307     	BANKSEL	r0x1036
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1308     	MOVR	r0x1036,W
     0011 2580                      1- 1309     	ADDIA	0x80
                                    1- 1310     	BANKSEL	r0x1037
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1311     	SUBAR	r0x1037,W
     0014 0903                      1- 1312     	BTRSS	STATUS,2
                                    1- 1313     	MGOTO	_00635_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1314     	BANKSEL	r0x1035
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1315     	MOVR	r0x1035,W
                                    1- 1316     	BANKSEL	r0x1034
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1317     	SUBAR	r0x1034,W
     001A                           1- 1318     _00635_DS_:
     001A 0803                      1- 1319     	BTRSS	STATUS,0
                                    1- 1320     	MGOTO	_00626_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1321     	BANKSEL	r0x1035
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1322     	INCR	r0x1035,F
     001E 0903                      1- 1323     	BTRSS	STATUS,2
                                    1- 1324     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1325     	BANKSEL	r0x1036
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1326     	INCR	r0x1036,F
     0022                           1- 1327     _00001_DS_:
                                    1- 1328     	MGOTO	_00624_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1329     _00626_DS_:
                                    1- 1330     	.line	900, "main.c"; 	}
                                    1- 1331     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1332     ; exit point of _delay
                                    1- 1334     ;***
                                    1- 1335     ;  pBlock Stats: dbName = C
                                    1- 1336     ;***
                                    1- 1337     ;has an exit
                                    1- 1338     ;; Starting pCode block
                                    1- 1339     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1341     _F_wait_eoc:
                                    1- 1342     ; 2 exit points
     0000                           1- 1343     _00617_DS_:
                                    1- 1344     	.line	891, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1345     	BTRSS	_ADMDbits,5
                                    1- 1346     	MGOTO	_00617_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1347     	.line	893, "main.c"; 	}
                                    1- 1348     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1349     ; exit point of _F_wait_eoc
                                    1- 1351     ;***
                                    1- 1352     ;  pBlock Stats: dbName = C
                                    1- 1353     ;***
                                    1- 1354     ;has an exit
                                    1- 1355     ;functions called:
                                    1- 1356     ;   _F_wait_eoc
                                    1- 1357     ;   _F_wait_eoc
                                    1- 1358     ;6 compiler assigned registers:
                                    1- 1359     ;   r0x1038
                                    1- 1360     ;   r0x1039
                                    1- 1361     ;   r0x103A
                                    1- 1362     ;   r0x103B
                                    1- 1363     ;   r0x103C
                                    1- 1364     ;   r0x103D
                                    1- 1365     ;; Starting pCode block
                                    1- 1366     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1368     ;local variable name mapping:
     0000                           1- 1371     _F_AIN2_Convert:
                                    1- 1372     ; 2 exit points
                                    1- 1373     	.line	876, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1374     	BANKSEL	r0x1038
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1375     	MOVAR	r0x1038
                                    1- 1376     	.line	879, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN0(PA0) pad as ADC input
     0002 2192                      1- 1377     	MOVIA	0x92
     0003 00rr                      1- 1378     	MOVAR	_ADMD
                                    1- 1379     	.line	880, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1380     	MOVIA	0x01
                                    1- 1381     	BANKSEL	r0x1039
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1382     	MOVAR	r0x1039
     0007                           1- 1383     _00610_DS_:
                                    1- 1384     	BANKSEL	r0x1039
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1385     	MOVR	r0x1039,W
                                    1- 1386     	BANKSEL	r0x1038
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1387     	SUBAR	r0x1038,W
     000B 0803                      1- 1388     	BTRSS	STATUS,0
                                    1- 1389     	MGOTO	_00612_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1390     	.line	882, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1391     	BSR	_ADMDbits,6
                                    1- 1392     	.line	883, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1393     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1394     	.line	884, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1395     	MOVIA	0x0f
     0010 10rr                      1- 1396     	ANDAR	_ADR,W
                                    1- 1397     ;;3	MOVAR	r0x103A
                                    1- 1398     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1399     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1400     	.line	885, "main.c"; 	R_AIN2_DATA    += ADD; 
     0013 01rr                      1- 1401     	MOVR	_ADD,W
                                    1- 1402     	BANKSEL	r0x103A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1403     	MOVAR	r0x103A
                                    1- 1404     ;;1	CLRR	r0x103B
                                    1- 1405     ;;113	MOVR	r0x103A,W
                                    1- 1406     ;;111	MOVAR	r0x103C
     0016 2100                      1- 1407     	MOVIA	0x00
                                    1- 1408     	BANKSEL	r0x103D
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1409     	MOVAR	r0x103D
                                    1- 1410     ;;112	MOVR	r0x103C,W
                                    1- 1411     	BANKSEL	r0x103A
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1412     	MOVR	r0x103A,W
                                    1- 1413     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1414     	ADDAR	_R_AIN2_DATA,F
                                    1- 1415     	BANKSEL	r0x103D
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1416     	MOVR	r0x103D,W
     001F 0C03                      1- 1417     	BTRSC	STATUS,0
     0020 05rr                      1- 1418     	INCR	r0x103D,W
     0021 0D03                      1- 1419     	BTRSC	STATUS,2
                                    1- 1420     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1421     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1422     	ADDAR	(_R_AIN2_DATA + 1),F
     0025                           1- 1423     _00002_DS_:
                                    1- 1424     	.line	880, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1425     	BANKSEL	r0x1039
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1426     	INCR	r0x1039,F
                                    1- 1427     	MGOTO	_00610_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1428     _00612_DS_:
                                    1- 1429     	.line	887, "main.c"; 	}
                                    1- 1430     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1431     ; exit point of _F_AIN2_Convert
                                    1- 1433     ;***
                                    1- 1434     ;  pBlock Stats: dbName = C
                                    1- 1435     ;***
                                    1- 1436     ;has an exit
                                    1- 1437     ;functions called:
                                    1- 1438     ;   _F_wait_eoc
                                    1- 1439     ;   _F_wait_eoc
                                    1- 1440     ;6 compiler assigned registers:
                                    1- 1441     ;   r0x103E
                                    1- 1442     ;   r0x103F
                                    1- 1443     ;   r0x1040
                                    1- 1444     ;   r0x1041
                                    1- 1445     ;   r0x1042
                                    1- 1446     ;   r0x1043
                                    1- 1447     ;; Starting pCode block
                                    1- 1448     .segment "code"; module=main, function=_F_AIN0_Convert
                                    1- 1450     ;local variable name mapping:
     0000                           1- 1453     _F_AIN0_Convert:
                                    1- 1454     ; 2 exit points
                                    1- 1455     	.line	863, "main.c"; 	void F_AIN0_Convert(char count)
                                    1- 1456     	BANKSEL	r0x103E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1457     	MOVAR	r0x103E
                                    1- 1458     	.line	866, "main.c"; 	ADMD  = 0x90 | C_ADC_PB1;				// Select AIN0(PA0) pad as ADC input
     0002 2196                      1- 1459     	MOVIA	0x96
     0003 00rr                      1- 1460     	MOVAR	_ADMD
                                    1- 1461     	.line	867, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1462     	MOVIA	0x01
                                    1- 1463     	BANKSEL	r0x103F
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1464     	MOVAR	r0x103F
     0007                           1- 1465     _00601_DS_:
                                    1- 1466     	BANKSEL	r0x103F
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1467     	MOVR	r0x103F,W
                                    1- 1468     	BANKSEL	r0x103E
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1469     	SUBAR	r0x103E,W
     000B 0803                      1- 1470     	BTRSS	STATUS,0
                                    1- 1471     	MGOTO	_00603_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1472     	.line	869, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1473     	BSR	_ADMDbits,6
                                    1- 1474     	.line	870, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1475     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1476     	.line	871, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1477     	MOVIA	0x0f
     0010 10rr                      1- 1478     	ANDAR	_ADR,W
                                    1- 1479     ;;3	MOVAR	r0x1040
                                    1- 1480     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1481     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1482     	.line	872, "main.c"; 	R_AIN2_DATA    += ADD; 
     0013 01rr                      1- 1483     	MOVR	_ADD,W
                                    1- 1484     	BANKSEL	r0x1040
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1485     	MOVAR	r0x1040
                                    1- 1486     ;;1	CLRR	r0x1041
                                    1- 1487     ;;110	MOVR	r0x1040,W
                                    1- 1488     ;;108	MOVAR	r0x1042
     0016 2100                      1- 1489     	MOVIA	0x00
                                    1- 1490     	BANKSEL	r0x1043
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1491     	MOVAR	r0x1043
                                    1- 1492     ;;109	MOVR	r0x1042,W
                                    1- 1493     	BANKSEL	r0x1040
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1494     	MOVR	r0x1040,W
                                    1- 1495     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1496     	ADDAR	_R_AIN2_DATA,F
                                    1- 1497     	BANKSEL	r0x1043
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1498     	MOVR	r0x1043,W
     001F 0C03                      1- 1499     	BTRSC	STATUS,0
     0020 05rr                      1- 1500     	INCR	r0x1043,W
     0021 0D03                      1- 1501     	BTRSC	STATUS,2
                                    1- 1502     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1503     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1504     	ADDAR	(_R_AIN2_DATA + 1),F
     0025                           1- 1505     _00003_DS_:
                                    1- 1506     	.line	867, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1507     	BANKSEL	r0x103F
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1508     	INCR	r0x103F,F
                                    1- 1509     	MGOTO	_00601_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1510     _00603_DS_:
                                    1- 1511     	.line	874, "main.c"; 	}
                                    1- 1512     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1513     ; exit point of _F_AIN0_Convert
                                    1- 1515     ;***
                                    1- 1516     ;  pBlock Stats: dbName = C
                                    1- 1517     ;***
                                    1- 1518     ;has an exit
                                    1- 1519     ;functions called:
                                    1- 1520     ;   _F_AIN0_Convert
                                    1- 1521     ;   _getbatGe
                                    1- 1522     ;   _getbatGe
                                    1- 1523     ;   _getbatGe
                                    1- 1524     ;   _getbatGe
                                    1- 1525     ;   _getbatGe
                                    1- 1526     ;   __divuint
                                    1- 1527     ;   __divuint
                                    1- 1528     ;   _powerOff
                                    1- 1529     ;   __divuchar
                                    1- 1530     ;   __moduchar
                                    1- 1531     ;   _F_AIN0_Convert
                                    1- 1532     ;   _getbatGe
                                    1- 1533     ;   _getbatGe
                                    1- 1534     ;   _getbatGe
                                    1- 1535     ;   _getbatGe
                                    1- 1536     ;   _getbatGe
                                    1- 1537     ;   __divuint
                                    1- 1538     ;   __divuint
                                    1- 1539     ;   _powerOff
                                    1- 1540     ;   __divuchar
                                    1- 1541     ;   __moduchar
                                    1- 1542     ;7 compiler assigned registers:
                                    1- 1543     ;   r0x1049
                                    1- 1544     ;   r0x104A
                                    1- 1545     ;   r0x104B
                                    1- 1546     ;   r0x104C
                                    1- 1547     ;   STK01
                                    1- 1548     ;   STK00
                                    1- 1549     ;   STK02
                                    1- 1550     ;; Starting pCode block
                                    1- 1551     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1553     _checkBatAD:
                                    1- 1554     ; 2 exit points
                                    1- 1555     	.line	710, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1556     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1557     	CLRR	_R_AIN2_DATA_LB
                                    1- 1558     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1559     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1560     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1561     	.line	711, "main.c"; 	F_AIN0_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1562     	MOVIA	0x08
                                    1- 1563     	MCALL	_F_AIN0_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1564     	.line	712, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1565     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1566     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1567     	ANDIA	0xf0
     000A 00rr                      1- 1568     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1569     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1570     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1571     	ANDIA	0x0f
     000E 11rr                      1- 1572     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1573     	XORAR	_R_AIN2_DATA,F
                                    1- 1574     	.line	713, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1575     	MOVIA	0xf0
                                    1- 1576     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1577     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1578     	.line	714, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1579     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1580     	BANKSEL	r0x1049
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1581     	MOVAR	r0x1049
                                    1- 1582     	BANKSEL	r0x104A
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 1583     	CLRR	r0x104A
                                    1- 1584     ;;107	MOVR	r0x1049,W
                                    1- 1585     ;;105	MOVAR	r0x104B
     0018 2100                      1- 1586     	MOVIA	0x00
                                    1- 1587     	BANKSEL	r0x104C
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 1588     	MOVAR	r0x104C
                                    1- 1589     ;;106	MOVR	r0x104B,W
                                    1- 1590     	BANKSEL	r0x1049
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1591     	MOVR	r0x1049,W
                                    1- 1592     	BANKSEL	_R_AIN2_DATA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 03rr                      1- 1593     	ADDAR	_R_AIN2_DATA,F
                                    1- 1594     	BANKSEL	r0x104C
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1595     	MOVR	r0x104C,W
     0021 0C03                      1- 1596     	BTRSC	STATUS,0
     0022 05rr                      1- 1597     	INCR	r0x104C,W
     0023 0D03                      1- 1598     	BTRSC	STATUS,2
                                    1- 1599     	MGOTO	_00004_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1600     	BANKSEL	_R_AIN2_DATA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 03rr                      1- 1601     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1602     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1603     _00004_DS_:
                                    1- 1604     	.line	715, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0027 1C03                      1- 1605     	BCR	STATUS,0
                                    1- 1606     	BANKSEL	_R_AIN2_DATA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 13rr                      1- 1607     	RRR	(_R_AIN2_DATA + 1),F
     002A 13rr                      1- 1608     	RRR	_R_AIN2_DATA,F
                                    1- 1609     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1610     	BCR	STATUS,0
     002C 13rr                      1- 1611     	RRR	(_R_AIN2_DATA + 1),F
     002D 13rr                      1- 1612     	RRR	_R_AIN2_DATA,F
                                    1- 1613     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1614     	BCR	STATUS,0
     002F 13rr                      1- 1615     	RRR	(_R_AIN2_DATA + 1),F
     0030 13rr                      1- 1616     	RRR	_R_AIN2_DATA,F
                                    1- 1617     	.line	717, "main.c"; 	tempBatValue = R_AIN2_DATA;
     0031 01rr                      1- 1618     	MOVR	_R_AIN2_DATA,W
                                    1- 1619     	BANKSEL	_tempBatValue
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 00rr                      1- 1620     	MOVAR	_tempBatValue
                                    1- 1621     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1- 1622     	MOVR	(_R_AIN2_DATA + 1),W
                                    1- 1623     	BANKSEL	_tempBatValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1624     	MOVAR	(_tempBatValue + 1)
                                    1- 1625     ;;unsigned compare: left < lit (0x613=1555), size=2
                                    1- 1626     	.line	718, "main.c"; 	if(R_AIN2_DATA < 1555)
     0038 2106                      1- 1627     	MOVIA	0x06
                                    1- 1628     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1629     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1630     	BTRSS	STATUS,2
                                    1- 1631     	MGOTO	_00580_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 2113                      1- 1632     	MOVIA	0x13
     003E 04rr                      1- 1633     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1634     _00580_DS_:
     003F 0C03                      1- 1635     	BTRSC	STATUS,0
                                    1- 1636     	MGOTO	_00427_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1637     	.line	720, "main.c"; 	chrgFullFlag = 0;
                                    1- 1638     	BANKSEL	_chrgFullFlag
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1639     	CLRR	_chrgFullFlag
                                    1- 1640     ;;unsigned compare: left < lit (0x618=1560), size=2
     0043                           1- 1641     _00427_DS_:
                                    1- 1642     	.line	724, "main.c"; 	if(R_AIN2_DATA >= 1560 || chrgFullFlag)
     0043 2106                      1- 1643     	MOVIA	0x06
                                    1- 1644     	BANKSEL	_R_AIN2_DATA
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 04rr                      1- 1645     	SUBAR	(_R_AIN2_DATA + 1),W
     0046 0903                      1- 1646     	BTRSS	STATUS,2
                                    1- 1647     	MGOTO	_00581_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048 2118                      1- 1648     	MOVIA	0x18
     0049 04rr                      1- 1649     	SUBAR	_R_AIN2_DATA,W
     004A                           1- 1650     _00581_DS_:
     004A 0C03                      1- 1651     	BTRSC	STATUS,0
                                    1- 1652     	MGOTO	_00454_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1653     	BANKSEL	_chrgFullFlag
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 1654     	MOVR	_chrgFullFlag,W
     004E 0D03                      1- 1655     	BTRSC	STATUS,2
                                    1- 1656     	MGOTO	_00455_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1- 1657     _00454_DS_:
                                    1- 1658     	.line	726, "main.c"; 	R_AIN2_DATA = 1560;		//4.2V 100%
     0050 2118                      1- 1659     	MOVIA	0x18
                                    1- 1660     	BANKSEL	_R_AIN2_DATA
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 1661     	MOVAR	_R_AIN2_DATA
     0053 2106                      1- 1662     	MOVIA	0x06
     0054 00rr                      1- 1663     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1664     	.line	727, "main.c"; 	if(preBatValue < R_AIN2_DATA)
                                    1- 1665     	BANKSEL	_preBatValue
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 04rr                      1- 1666     	SUBAR	(_preBatValue + 1),W
     0057 0903                      1- 1667     	BTRSS	STATUS,2
                                    1- 1668     	MGOTO	_00582_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059 2118                      1- 1669     	MOVIA	0x18
     005A 04rr                      1- 1670     	SUBAR	_preBatValue,W
     005B                           1- 1671     _00582_DS_:
     005B 0C03                      1- 1672     	BTRSC	STATUS,0
                                    1- 1673     	MGOTO	_00429_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1674     	.line	729, "main.c"; 	preBatValue = R_AIN2_DATA;
     005D 2118                      1- 1675     	MOVIA	0x18
                                    1- 1676     	BANKSEL	_preBatValue
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 1677     	MOVAR	_preBatValue
     0060 2106                      1- 1678     	MOVIA	0x06
     0061 00rr                      1- 1679     	MOVAR	(_preBatValue + 1)
                                    1- 1680     	.line	730, "main.c"; 	chrgFullCount = 0;
                                    1- 1681     	BANKSEL	_chrgFullCount
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1682     	CLRR	_chrgFullCount
     0064 02rr                      1- 1683     	CLRR	(_chrgFullCount + 1)
     0065                           1- 1684     _00429_DS_:
                                    1- 1685     	.line	732, "main.c"; 	if(++chrgFullCount > 10000)
                                    1- 1686     	BANKSEL	_chrgFullCount
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 05rr                      1- 1687     	INCR	_chrgFullCount,F
     0067 0D03                      1- 1688     	BTRSC	STATUS,2
     0068 05rr                      1- 1689     	INCR	(_chrgFullCount + 1),F
                                    1- 1690     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1691     ;;unsigned compare: left >= lit (0x2711=10001), size=2
     0069 2127                      1- 1692     	MOVIA	0x27
     006A 04rr                      1- 1693     	SUBAR	(_chrgFullCount + 1),W
     006B 0903                      1- 1694     	BTRSS	STATUS,2
                                    1- 1695     	MGOTO	_00583_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D 2111                      1- 1696     	MOVIA	0x11
     006E 04rr                      1- 1697     	SUBAR	_chrgFullCount,W
     006F                           1- 1698     _00583_DS_:
     006F 0803                      1- 1699     	BTRSS	STATUS,0
                                    1- 1700     	MGOTO	_00431_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1701     	.line	734, "main.c"; 	chrgFullFlag = 1;
     0071 2101                      1- 1702     	MOVIA	0x01
                                    1- 1703     	BANKSEL	_chrgFullFlag
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1704     	MOVAR	_chrgFullFlag
                                    1- 1705     	.line	735, "main.c"; 	batValue = 100;
     0074 2164                      1- 1706     	MOVIA	0x64
                                    1- 1707     	BANKSEL	_batValue
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 1708     	MOVAR	_batValue
                                    1- 1709     	.line	736, "main.c"; 	chrgFullCount = 10000;
     0077 2110                      1- 1710     	MOVIA	0x10
                                    1- 1711     	BANKSEL	_chrgFullCount
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 1712     	MOVAR	_chrgFullCount
     007A 2127                      1- 1713     	MOVIA	0x27
     007B 00rr                      1- 1714     	MOVAR	(_chrgFullCount + 1)
                                    1- 1715     	MGOTO	_00456_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 1716     _00431_DS_:
                                    1- 1717     	.line	740, "main.c"; 	batValue = 99;
     007D 2163                      1- 1718     	MOVIA	0x63
                                    1- 1719     	BANKSEL	_batValue
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 1720     	MOVAR	_batValue
                                    1- 1721     	MGOTO	_00456_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1722     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1723     ;;unsigned compare: left >= lit (0x5E8=1512), size=2
     0081                           1- 1724     _00455_DS_:
                                    1- 1725     	.line	743, "main.c"; 	else if(R_AIN2_DATA > 1511)		//4.06V 90%
     0081 2105                      1- 1726     	MOVIA	0x05
                                    1- 1727     	BANKSEL	_R_AIN2_DATA
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 04rr                      1- 1728     	SUBAR	(_R_AIN2_DATA + 1),W
     0084 0903                      1- 1729     	BTRSS	STATUS,2
                                    1- 1730     	MGOTO	_00584_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086 21E8                      1- 1731     	MOVIA	0xe8
     0087 04rr                      1- 1732     	SUBAR	_R_AIN2_DATA,W
     0088                           1- 1733     _00584_DS_:
     0088 0803                      1- 1734     	BTRSS	STATUS,0
                                    1- 1735     	MGOTO	_00452_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1736     	.line	745, "main.c"; 	chrgFullCount = 0;
                                    1- 1737     	BANKSEL	_chrgFullCount
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 02rr                      1- 1738     	CLRR	_chrgFullCount
     008C 02rr                      1- 1739     	CLRR	(_chrgFullCount + 1)
                                    1- 1740     	.line	746, "main.c"; 	batValue = 90 + getbatGe(1511,53);
     008D 2135                      1- 1741     	MOVIA	0x35
     008E 00rr                      1- 1742     	MOVAR	STK01
     008F 21E7                      1- 1743     	MOVIA	0xe7
     0090 00rr                      1- 1744     	MOVAR	STK00
     0091 2105                      1- 1745     	MOVIA	0x05
                                    1- 1746     	MCALL	_getbatGe
     0092 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1747     	BANKSEL	r0x1049
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 1748     	MOVAR	r0x1049
     0095 215A                      1- 1749     	MOVIA	0x5a
     0096 03rr                      1- 1750     	ADDAR	r0x1049,W
                                    1- 1751     	BANKSEL	_batValue
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1752     	MOVAR	_batValue
                                    1- 1753     	MGOTO	_00456_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1754     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1755     ;;unsigned compare: left >= lit (0x584=1412), size=2
     009A                           1- 1756     _00452_DS_:
                                    1- 1757     	.line	748, "main.c"; 	else if(R_AIN2_DATA > 1411)		//3.79V 40%
     009A 2105                      1- 1758     	MOVIA	0x05
                                    1- 1759     	BANKSEL	_R_AIN2_DATA
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1760     	SUBAR	(_R_AIN2_DATA + 1),W
     009D 0903                      1- 1761     	BTRSS	STATUS,2
                                    1- 1762     	MGOTO	_00585_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F 2184                      1- 1763     	MOVIA	0x84
     00A0 04rr                      1- 1764     	SUBAR	_R_AIN2_DATA,W
     00A1                           1- 1765     _00585_DS_:
     00A1 0803                      1- 1766     	BTRSS	STATUS,0
                                    1- 1767     	MGOTO	_00449_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1768     	.line	750, "main.c"; 	batValue = 40 + getbatGe(1411,20);
     00A3 2114                      1- 1769     	MOVIA	0x14
     00A4 00rr                      1- 1770     	MOVAR	STK01
     00A5 2183                      1- 1771     	MOVIA	0x83
     00A6 00rr                      1- 1772     	MOVAR	STK00
     00A7 2105                      1- 1773     	MOVIA	0x05
                                    1- 1774     	MCALL	_getbatGe
     00A8 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1775     	BANKSEL	r0x1049
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 1776     	MOVAR	r0x1049
     00AB 2128                      1- 1777     	MOVIA	0x28
     00AC 03rr                      1- 1778     	ADDAR	r0x1049,W
                                    1- 1779     	BANKSEL	_batValue
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 00rr                      1- 1780     	MOVAR	_batValue
                                    1- 1781     	MGOTO	_00456_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1782     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1783     ;;unsigned compare: left >= lit (0x57C=1404), size=2
     00B0                           1- 1784     _00449_DS_:
                                    1- 1785     	.line	752, "main.c"; 	else if(R_AIN2_DATA > 1403)		//3.77V 30%
     00B0 2105                      1- 1786     	MOVIA	0x05
                                    1- 1787     	BANKSEL	_R_AIN2_DATA
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 04rr                      1- 1788     	SUBAR	(_R_AIN2_DATA + 1),W
     00B3 0903                      1- 1789     	BTRSS	STATUS,2
                                    1- 1790     	MGOTO	_00586_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
     00B5 217C                      1- 1791     	MOVIA	0x7c
     00B6 04rr                      1- 1792     	SUBAR	_R_AIN2_DATA,W
     00B7                           1- 1793     _00586_DS_:
     00B7 0803                      1- 1794     	BTRSS	STATUS,0
                                    1- 1795     	MGOTO	_00446_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1796     	.line	754, "main.c"; 	batValue = 30 + getbatGe(1403,8);
     00B9 2108                      1- 1797     	MOVIA	0x08
     00BA 00rr                      1- 1798     	MOVAR	STK01
     00BB 217B                      1- 1799     	MOVIA	0x7b
     00BC 00rr                      1- 1800     	MOVAR	STK00
     00BD 2105                      1- 1801     	MOVIA	0x05
                                    1- 1802     	MCALL	_getbatGe
     00BE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1803     	BANKSEL	r0x1049
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 1804     	MOVAR	r0x1049
     00C1 211E                      1- 1805     	MOVIA	0x1e
     00C2 03rr                      1- 1806     	ADDAR	r0x1049,W
                                    1- 1807     	BANKSEL	_batValue
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 00rr                      1- 1808     	MOVAR	_batValue
                                    1- 1809     	MGOTO	_00456_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1810     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1811     ;;unsigned compare: left >= lit (0x571=1393), size=2
     00C6                           1- 1812     _00446_DS_:
                                    1- 1813     	.line	756, "main.c"; 	else if(R_AIN2_DATA > 1392)		//3.74V 20%
     00C6 2105                      1- 1814     	MOVIA	0x05
                                    1- 1815     	BANKSEL	_R_AIN2_DATA
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 04rr                      1- 1816     	SUBAR	(_R_AIN2_DATA + 1),W
     00C9 0903                      1- 1817     	BTRSS	STATUS,2
                                    1- 1818     	MGOTO	_00587_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
     00CB 2171                      1- 1819     	MOVIA	0x71
     00CC 04rr                      1- 1820     	SUBAR	_R_AIN2_DATA,W
     00CD                           1- 1821     _00587_DS_:
     00CD 0803                      1- 1822     	BTRSS	STATUS,0
                                    1- 1823     	MGOTO	_00443_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1824     	.line	758, "main.c"; 	batValue = 20 + getbatGe(1392,11);
     00CF 210B                      1- 1825     	MOVIA	0x0b
     00D0 00rr                      1- 1826     	MOVAR	STK01
     00D1 2170                      1- 1827     	MOVIA	0x70
     00D2 00rr                      1- 1828     	MOVAR	STK00
     00D3 2105                      1- 1829     	MOVIA	0x05
                                    1- 1830     	MCALL	_getbatGe
     00D4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1831     	BANKSEL	r0x1049
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 00rr                      1- 1832     	MOVAR	r0x1049
     00D7 2114                      1- 1833     	MOVIA	0x14
     00D8 03rr                      1- 1834     	ADDAR	r0x1049,W
                                    1- 1835     	BANKSEL	_batValue
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 1836     	MOVAR	_batValue
                                    1- 1837     	MGOTO	_00456_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1838     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1839     ;;unsigned compare: left >= lit (0x55B=1371), size=2
     00DC                           1- 1840     _00443_DS_:
                                    1- 1841     	.line	760, "main.c"; 	else if(R_AIN2_DATA > 1370)		//3.68V 10%
     00DC 2105                      1- 1842     	MOVIA	0x05
                                    1- 1843     	BANKSEL	_R_AIN2_DATA
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 04rr                      1- 1844     	SUBAR	(_R_AIN2_DATA + 1),W
     00DF 0903                      1- 1845     	BTRSS	STATUS,2
                                    1- 1846     	MGOTO	_00588_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
     00E1 215B                      1- 1847     	MOVIA	0x5b
     00E2 04rr                      1- 1848     	SUBAR	_R_AIN2_DATA,W
     00E3                           1- 1849     _00588_DS_:
     00E3 0803                      1- 1850     	BTRSS	STATUS,0
                                    1- 1851     	MGOTO	_00440_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1852     	.line	762, "main.c"; 	batValue = 10 + getbatGe(1370,22);
     00E5 2116                      1- 1853     	MOVIA	0x16
     00E6 00rr                      1- 1854     	MOVAR	STK01
     00E7 215A                      1- 1855     	MOVIA	0x5a
     00E8 00rr                      1- 1856     	MOVAR	STK00
     00E9 2105                      1- 1857     	MOVIA	0x05
                                    1- 1858     	MCALL	_getbatGe
     00EA 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1859     	BANKSEL	r0x1049
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 00rr                      1- 1860     	MOVAR	r0x1049
     00ED 210A                      1- 1861     	MOVIA	0x0a
     00EE 03rr                      1- 1862     	ADDAR	r0x1049,W
                                    1- 1863     	BANKSEL	_batValue
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 00rr                      1- 1864     	MOVAR	_batValue
                                    1- 1865     	MGOTO	_00456_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1866     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1867     ;;unsigned compare: left >= lit (0x506=1286), size=2
     00F2                           1- 1868     _00440_DS_:
                                    1- 1869     	.line	764, "main.c"; 	else if(R_AIN2_DATA > 1285)		//3.45V 5%
     00F2 2105                      1- 1870     	MOVIA	0x05
                                    1- 1871     	BANKSEL	_R_AIN2_DATA
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 04rr                      1- 1872     	SUBAR	(_R_AIN2_DATA + 1),W
     00F5 0903                      1- 1873     	BTRSS	STATUS,2
                                    1- 1874     	MGOTO	_00589_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
     00F7 2106                      1- 1875     	MOVIA	0x06
     00F8 04rr                      1- 1876     	SUBAR	_R_AIN2_DATA,W
     00F9                           1- 1877     _00589_DS_:
     00F9 0803                      1- 1878     	BTRSS	STATUS,0
                                    1- 1879     	MGOTO	_00437_DS_
     00FA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1880     	.line	766, "main.c"; 	batValue = (R_AIN2_DATA - 1285)/17;
     00FB 21FB                      1- 1881     	MOVIA	0xfb
                                    1- 1882     	BANKSEL	_R_AIN2_DATA
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 03rr                      1- 1883     	ADDAR	_R_AIN2_DATA,W
                                    1- 1884     	BANKSEL	r0x1049
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 00rr                      1- 1885     	MOVAR	r0x1049
     0100 21FA                      1- 1886     	MOVIA	0xfa
                                    1- 1887     	BANKSEL	r0x104A
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 00rr                      1- 1888     	MOVAR	r0x104A
                                    1- 1889     	BANKSEL	_R_AIN2_DATA
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 01rr                      1- 1890     	MOVR	(_R_AIN2_DATA + 1),W
     0105 0C03                      1- 1891     	BTRSC	STATUS,0
     0106 05rr                      1- 1892     	INCR	(_R_AIN2_DATA + 1),W
     0107 0D03                      1- 1893     	BTRSC	STATUS,2
                                    1- 1894     	MGOTO	_00005_DS_
     0108 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1895     	BANKSEL	r0x104A
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 03rr                      1- 1896     	ADDAR	r0x104A,F
     010B                           1- 1897     _00005_DS_:
     010B 2111                      1- 1898     	MOVIA	0x11
     010C 00rr                      1- 1899     	MOVAR	STK02
     010D 2100                      1- 1900     	MOVIA	0x00
     010E 00rr                      1- 1901     	MOVAR	STK01
                                    1- 1902     	BANKSEL	r0x1049
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 01rr                      1- 1903     	MOVR	r0x1049,W
     0111 00rr                      1- 1904     	MOVAR	STK00
                                    1- 1905     	BANKSEL	r0x104A
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 01rr                      1- 1906     	MOVR	r0x104A,W
                                    1- 1907     	MCALL	__divuint
     0114 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1908     	BANKSEL	r0x104A
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 00rr                      1- 1909     	MOVAR	r0x104A
     0117 01rr                      1- 1910     	MOVR	STK00,W
                                    1- 1911     	BANKSEL	r0x1049
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 00rr                      1- 1912     	MOVAR	r0x1049
                                    1- 1913     	BANKSEL	_batValue
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 00rr                      1- 1914     	MOVAR	_batValue
                                    1- 1915     	.line	767, "main.c"; 	batValue += 5;
     011C 2105                      1- 1916     	MOVIA	0x05
     011D 03rr                      1- 1917     	ADDAR	_batValue,F
                                    1- 1918     	MGOTO	_00456_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1919     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1920     ;;unsigned compare: left >= lit (0x4B1=1201), size=2
     011F                           1- 1921     _00437_DS_:
                                    1- 1922     	.line	769, "main.c"; 	else if(R_AIN2_DATA > 1200)		//3.2V 0%
     011F 2104                      1- 1923     	MOVIA	0x04
                                    1- 1924     	BANKSEL	_R_AIN2_DATA
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 04rr                      1- 1925     	SUBAR	(_R_AIN2_DATA + 1),W
     0122 0903                      1- 1926     	BTRSS	STATUS,2
                                    1- 1927     	MGOTO	_00590_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
     0124 21B1                      1- 1928     	MOVIA	0xb1
     0125 04rr                      1- 1929     	SUBAR	_R_AIN2_DATA,W
     0126                           1- 1930     _00590_DS_:
     0126 0803                      1- 1931     	BTRSS	STATUS,0
                                    1- 1932     	MGOTO	_00434_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1933     	.line	771, "main.c"; 	batValue = (R_AIN2_DATA - 1200)/17;
     0128 2150                      1- 1934     	MOVIA	0x50
                                    1- 1935     	BANKSEL	_R_AIN2_DATA
     0129 rrrr                      3-  110 m1      .banksel ram_address
     012A 03rr                      1- 1936     	ADDAR	_R_AIN2_DATA,W
                                    1- 1937     	BANKSEL	r0x1049
     012B rrrr                      3-  110 m1      .banksel ram_address
     012C 00rr                      1- 1938     	MOVAR	r0x1049
     012D 21FB                      1- 1939     	MOVIA	0xfb
                                    1- 1940     	BANKSEL	r0x104A
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 00rr                      1- 1941     	MOVAR	r0x104A
                                    1- 1942     	BANKSEL	_R_AIN2_DATA
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 01rr                      1- 1943     	MOVR	(_R_AIN2_DATA + 1),W
     0132 0C03                      1- 1944     	BTRSC	STATUS,0
     0133 05rr                      1- 1945     	INCR	(_R_AIN2_DATA + 1),W
     0134 0D03                      1- 1946     	BTRSC	STATUS,2
                                    1- 1947     	MGOTO	_00006_DS_
     0135 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1948     	BANKSEL	r0x104A
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 03rr                      1- 1949     	ADDAR	r0x104A,F
     0138                           1- 1950     _00006_DS_:
     0138 2111                      1- 1951     	MOVIA	0x11
     0139 00rr                      1- 1952     	MOVAR	STK02
     013A 2100                      1- 1953     	MOVIA	0x00
     013B 00rr                      1- 1954     	MOVAR	STK01
                                    1- 1955     	BANKSEL	r0x1049
     013C rrrr                      3-  110 m1      .banksel ram_address
     013D 01rr                      1- 1956     	MOVR	r0x1049,W
     013E 00rr                      1- 1957     	MOVAR	STK00
                                    1- 1958     	BANKSEL	r0x104A
     013F rrrr                      3-  110 m1      .banksel ram_address
     0140 01rr                      1- 1959     	MOVR	r0x104A,W
                                    1- 1960     	MCALL	__divuint
     0141 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1961     	BANKSEL	r0x104A
     0142 rrrr                      3-  110 m1      .banksel ram_address
     0143 00rr                      1- 1962     	MOVAR	r0x104A
     0144 01rr                      1- 1963     	MOVR	STK00,W
                                    1- 1964     	BANKSEL	r0x1049
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 00rr                      1- 1965     	MOVAR	r0x1049
                                    1- 1966     	BANKSEL	_batValue
     0147 rrrr                      3-  110 m1      .banksel ram_address
     0148 00rr                      1- 1967     	MOVAR	_batValue
                                    1- 1968     	MGOTO	_00456_DS_
     0149 3rrr                      3-   63 m1      LGOTO rom_address
     014A                           1- 1969     _00434_DS_:
                                    1- 1970     	.line	775, "main.c"; 	batValue = 0;
                                    1- 1971     	BANKSEL	_batValue
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 02rr                      1- 1972     	CLRR	_batValue
     014C                           1- 1973     _00456_DS_:
                                    1- 1974     	.line	779, "main.c"; 	if(showBatValue == 0)
                                    1- 1975     	BANKSEL	_showBatValue
     014C rrrr                      3-  110 m1      .banksel ram_address
     014D 01rr                      1- 1976     	MOVR	_showBatValue,W
     014E 0903                      1- 1977     	BTRSS	STATUS,2
                                    1- 1978     	MGOTO	_00459_DS_
     014F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1979     	.line	781, "main.c"; 	showBatValue = batValue;
                                    1- 1980     	BANKSEL	_batValue
     0150 rrrr                      3-  110 m1      .banksel ram_address
     0151 01rr                      1- 1981     	MOVR	_batValue,W
                                    1- 1982     	BANKSEL	_showBatValue
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 00rr                      1- 1983     	MOVAR	_showBatValue
     0154                           1- 1984     _00459_DS_:
                                    1- 1985     	.line	783, "main.c"; 	if(chrgFlag == 0)
                                    1- 1986     	BANKSEL	_chrgFlag
     0154 rrrr                      3-  110 m1      .banksel ram_address
     0155 01rr                      1- 1987     	MOVR	_chrgFlag,W
     0156 0903                      1- 1988     	BTRSS	STATUS,2
                                    1- 1989     	MGOTO	_00469_DS_
     0157 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1990     	.line	785, "main.c"; 	if(showBatValue > batValue && showBatValue > 0)
                                    1- 1991     	BANKSEL	_showBatValue
     0158 rrrr                      3-  110 m1      .banksel ram_address
     0159 01rr                      1- 1992     	MOVR	_showBatValue,W
                                    1- 1993     	BANKSEL	_batValue
     015A rrrr                      3-  110 m1      .banksel ram_address
     015B 04rr                      1- 1994     	SUBAR	_batValue,W
     015C 0C03                      1- 1995     	BTRSC	STATUS,0
                                    1- 1996     	MGOTO	_00465_DS_
     015D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1997     	BANKSEL	_showBatValue
     015E rrrr                      3-  110 m1      .banksel ram_address
     015F 01rr                      1- 1998     	MOVR	_showBatValue,W
     0160 0D03                      1- 1999     	BTRSC	STATUS,2
                                    1- 2000     	MGOTO	_00465_DS_
     0161 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2001     	.line	787, "main.c"; 	if(++subBatTime > 1000)
                                    1- 2002     	BANKSEL	_subBatTime
     0162 rrrr                      3-  110 m1      .banksel ram_address
     0163 05rr                      1- 2003     	INCR	_subBatTime,F
     0164 0D03                      1- 2004     	BTRSC	STATUS,2
     0165 05rr                      1- 2005     	INCR	(_subBatTime + 1),F
                                    1- 2006     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2007     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0166 2103                      1- 2008     	MOVIA	0x03
     0167 04rr                      1- 2009     	SUBAR	(_subBatTime + 1),W
     0168 0903                      1- 2010     	BTRSS	STATUS,2
                                    1- 2011     	MGOTO	_00592_DS_
     0169 3rrr                      3-   63 m1      LGOTO rom_address
     016A 21E9                      1- 2012     	MOVIA	0xe9
     016B 04rr                      1- 2013     	SUBAR	_subBatTime,W
     016C                           1- 2014     _00592_DS_:
     016C 0803                      1- 2015     	BTRSS	STATUS,0
                                    1- 2016     	MGOTO	_00469_DS_
     016D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2017     	.line	789, "main.c"; 	subBatTime = 0;
                                    1- 2018     	BANKSEL	_subBatTime
     016E rrrr                      3-  110 m1      .banksel ram_address
     016F 02rr                      1- 2019     	CLRR	_subBatTime
     0170 02rr                      1- 2020     	CLRR	(_subBatTime + 1)
                                    1- 2021     	.line	790, "main.c"; 	if(--showBatValue == 0)
                                    1- 2022     	BANKSEL	_showBatValue
     0171 rrrr                      3-  110 m1      .banksel ram_address
     0172 17rr                      1- 2023     	DECRSZ	_showBatValue,F
                                    1- 2024     	MGOTO	_00469_DS_
     0173 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2025     	.line	792, "main.c"; 	showBatValue = 1;
     0174 2101                      1- 2026     	MOVIA	0x01
     0175 00rr                      1- 2027     	MOVAR	_showBatValue
                                    1- 2028     	MGOTO	_00469_DS_
     0176 3rrr                      3-   63 m1      LGOTO rom_address
     0177                           1- 2029     _00465_DS_:
                                    1- 2030     	.line	798, "main.c"; 	subBatTime = 0;
                                    1- 2031     	BANKSEL	_subBatTime
     0177 rrrr                      3-  110 m1      .banksel ram_address
     0178 02rr                      1- 2032     	CLRR	_subBatTime
     0179 02rr                      1- 2033     	CLRR	(_subBatTime + 1)
     017A                           1- 2034     _00469_DS_:
                                    1- 2035     	.line	802, "main.c"; 	if(showBatValue < batValue)
                                    1- 2036     	BANKSEL	_batValue
     017A rrrr                      3-  110 m1      .banksel ram_address
     017B 01rr                      1- 2037     	MOVR	_batValue,W
                                    1- 2038     	BANKSEL	_showBatValue
     017C rrrr                      3-  110 m1      .banksel ram_address
     017D 04rr                      1- 2039     	SUBAR	_showBatValue,W
     017E 0C03                      1- 2040     	BTRSC	STATUS,0
                                    1- 2041     	MGOTO	_00475_DS_
     017F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2042     	.line	804, "main.c"; 	if(++batTime > 1000)
                                    1- 2043     	BANKSEL	_batTime
     0180 rrrr                      3-  110 m1      .banksel ram_address
     0181 05rr                      1- 2044     	INCR	_batTime,F
     0182 0D03                      1- 2045     	BTRSC	STATUS,2
     0183 05rr                      1- 2046     	INCR	(_batTime + 1),F
                                    1- 2047     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2048     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0184 2103                      1- 2049     	MOVIA	0x03
     0185 04rr                      1- 2050     	SUBAR	(_batTime + 1),W
     0186 0903                      1- 2051     	BTRSS	STATUS,2
                                    1- 2052     	MGOTO	_00594_DS_
     0187 3rrr                      3-   63 m1      LGOTO rom_address
     0188 21E9                      1- 2053     	MOVIA	0xe9
     0189 04rr                      1- 2054     	SUBAR	_batTime,W
     018A                           1- 2055     _00594_DS_:
     018A 0803                      1- 2056     	BTRSS	STATUS,0
                                    1- 2057     	MGOTO	_00476_DS_
     018B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2058     	.line	806, "main.c"; 	batTime = 0;
                                    1- 2059     	BANKSEL	_batTime
     018C rrrr                      3-  110 m1      .banksel ram_address
     018D 02rr                      1- 2060     	CLRR	_batTime
     018E 02rr                      1- 2061     	CLRR	(_batTime + 1)
                                    1- 2062     	.line	807, "main.c"; 	if(++showBatValue > 99)
                                    1- 2063     	BANKSEL	_showBatValue
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 05rr                      1- 2064     	INCR	_showBatValue,F
                                    1- 2065     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2066     ;;unsigned compare: left >= lit (0x64=100), size=1
     0191 2164                      1- 2067     	MOVIA	0x64
     0192 04rr                      1- 2068     	SUBAR	_showBatValue,W
     0193 0803                      1- 2069     	BTRSS	STATUS,0
                                    1- 2070     	MGOTO	_00476_DS_
     0194 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2071     	.line	808, "main.c"; 	showBatValue = 99;
     0195 2163                      1- 2072     	MOVIA	0x63
     0196 00rr                      1- 2073     	MOVAR	_showBatValue
                                    1- 2074     	MGOTO	_00476_DS_
     0197 3rrr                      3-   63 m1      LGOTO rom_address
     0198                           1- 2075     _00475_DS_:
                                    1- 2076     	.line	813, "main.c"; 	batTime = 0;
                                    1- 2077     	BANKSEL	_batTime
     0198 rrrr                      3-  110 m1      .banksel ram_address
     0199 02rr                      1- 2078     	CLRR	_batTime
     019A 02rr                      1- 2079     	CLRR	(_batTime + 1)
     019B                           1- 2080     _00476_DS_:
                                    1- 2081     	.line	817, "main.c"; 	if(batValue == 0)
                                    1- 2082     	BANKSEL	_batValue
     019B rrrr                      3-  110 m1      .banksel ram_address
     019C 01rr                      1- 2083     	MOVR	_batValue,W
     019D 0903                      1- 2084     	BTRSS	STATUS,2
                                    1- 2085     	MGOTO	_00487_DS_
     019E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2086     	.line	819, "main.c"; 	if(++zeroTime > 200)
                                    1- 2087     	BANKSEL	_zeroTime
     019F rrrr                      3-  110 m1      .banksel ram_address
     01A0 05rr                      1- 2088     	INCR	_zeroTime,F
                                    1- 2089     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2090     ;;unsigned compare: left >= lit (0xC9=201), size=1
     01A1 21C9                      1- 2091     	MOVIA	0xc9
     01A2 04rr                      1- 2092     	SUBAR	_zeroTime,W
     01A3 0803                      1- 2093     	BTRSS	STATUS,0
                                    1- 2094     	MGOTO	_00488_DS_
     01A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2095     	.line	821, "main.c"; 	zeroTime = 200;
     01A5 21C8                      1- 2096     	MOVIA	0xc8
     01A6 00rr                      1- 2097     	MOVAR	_zeroTime
                                    1- 2098     	.line	822, "main.c"; 	showBatValue = 0;
                                    1- 2099     	BANKSEL	_showBatValue
     01A7 rrrr                      3-  110 m1      .banksel ram_address
     01A8 02rr                      1- 2100     	CLRR	_showBatValue
                                    1- 2101     	.line	823, "main.c"; 	if(zeroFlag == 0 && chrgFlag == 0)
                                    1- 2102     	BANKSEL	_zeroFlag
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 01rr                      1- 2103     	MOVR	_zeroFlag,W
     01AB 0903                      1- 2104     	BTRSS	STATUS,2
                                    1- 2105     	MGOTO	_00488_DS_
     01AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2106     	BANKSEL	_chrgFlag
     01AD rrrr                      3-  110 m1      .banksel ram_address
     01AE 01rr                      1- 2107     	MOVR	_chrgFlag,W
     01AF 0903                      1- 2108     	BTRSS	STATUS,2
                                    1- 2109     	MGOTO	_00488_DS_
     01B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2110     	.line	825, "main.c"; 	powerOff();
                                    1- 2111     	MCALL	_powerOff
     01B1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2112     	.line	826, "main.c"; 	powerFlag = 1;
     01B2 2101                      1- 2113     	MOVIA	0x01
                                    1- 2114     	BANKSEL	_powerFlag
     01B3 rrrr                      3-  110 m1      .banksel ram_address
     01B4 00rr                      1- 2115     	MOVAR	_powerFlag
                                    1- 2116     	.line	827, "main.c"; 	shiwei = 11;
     01B5 210B                      1- 2117     	MOVIA	0x0b
                                    1- 2118     	BANKSEL	_shiwei
     01B6 rrrr                      3-  110 m1      .banksel ram_address
     01B7 00rr                      1- 2119     	MOVAR	_shiwei
                                    1- 2120     	.line	828, "main.c"; 	gewei = 12;
     01B8 210C                      1- 2121     	MOVIA	0x0c
                                    1- 2122     	BANKSEL	_gewei
     01B9 rrrr                      3-  110 m1      .banksel ram_address
     01BA 00rr                      1- 2123     	MOVAR	_gewei
                                    1- 2124     	.line	829, "main.c"; 	zeroFlag = 1;
     01BB 2101                      1- 2125     	MOVIA	0x01
                                    1- 2126     	BANKSEL	_zeroFlag
     01BC rrrr                      3-  110 m1      .banksel ram_address
     01BD 00rr                      1- 2127     	MOVAR	_zeroFlag
                                    1- 2128     	.line	830, "main.c"; 	powerTime = 500;
     01BE 21F4                      1- 2129     	MOVIA	0xf4
                                    1- 2130     	BANKSEL	_powerTime
     01BF rrrr                      3-  110 m1      .banksel ram_address
     01C0 00rr                      1- 2131     	MOVAR	_powerTime
     01C1 2101                      1- 2132     	MOVIA	0x01
     01C2 00rr                      1- 2133     	MOVAR	(_powerTime + 1)
                                    1- 2134     	MGOTO	_00488_DS_
     01C3 3rrr                      3-   63 m1      LGOTO rom_address
     01C4                           1- 2135     _00487_DS_:
                                    1- 2136     	.line	837, "main.c"; 	if(zeroTime > 0)
                                    1- 2137     	BANKSEL	_zeroTime
     01C4 rrrr                      3-  110 m1      .banksel ram_address
     01C5 01rr                      1- 2138     	MOVR	_zeroTime,W
     01C6 0D03                      1- 2139     	BTRSC	STATUS,2
                                    1- 2140     	MGOTO	_00485_DS_
     01C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2141     	.line	839, "main.c"; 	if(--zeroTime == 0)
     01C8 17rr                      1- 2142     	DECRSZ	_zeroTime,F
                                    1- 2143     	MGOTO	_00485_DS_
     01C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2144     	.line	841, "main.c"; 	zeroFlag = 0;
                                    1- 2145     	BANKSEL	_zeroFlag
     01CA rrrr                      3-  110 m1      .banksel ram_address
     01CB 02rr                      1- 2146     	CLRR	_zeroFlag
     01CC                           1- 2147     _00485_DS_:
                                    1- 2148     	.line	844, "main.c"; 	zeroTime = 0;
                                    1- 2149     	BANKSEL	_zeroTime
     01CC rrrr                      3-  110 m1      .banksel ram_address
     01CD 02rr                      1- 2150     	CLRR	_zeroTime
     01CE                           1- 2151     _00488_DS_:
                                    1- 2152     	.line	846, "main.c"; 	if(zeroFlag)
                                    1- 2153     	BANKSEL	_zeroFlag
     01CE rrrr                      3-  110 m1      .banksel ram_address
     01CF 01rr                      1- 2154     	MOVR	_zeroFlag,W
     01D0 0D03                      1- 2155     	BTRSC	STATUS,2
                                    1- 2156     	MGOTO	_00492_DS_
     01D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2157     	.line	848, "main.c"; 	shiwei = 11;
     01D2 210B                      1- 2158     	MOVIA	0x0b
                                    1- 2159     	BANKSEL	_shiwei
     01D3 rrrr                      3-  110 m1      .banksel ram_address
     01D4 00rr                      1- 2160     	MOVAR	_shiwei
                                    1- 2161     	.line	849, "main.c"; 	gewei = 12;
     01D5 210C                      1- 2162     	MOVIA	0x0c
                                    1- 2163     	BANKSEL	_gewei
     01D6 rrrr                      3-  110 m1      .banksel ram_address
     01D7 00rr                      1- 2164     	MOVAR	_gewei
                                    1- 2165     	MGOTO	_00494_DS_
     01D8 3rrr                      3-   63 m1      LGOTO rom_address
     01D9                           1- 2166     _00492_DS_:
                                    1- 2167     	.line	853, "main.c"; 	zeroCount = 0;
                                    1- 2168     	BANKSEL	_zeroCount
     01D9 rrrr                      3-  110 m1      .banksel ram_address
     01DA 02rr                      1- 2169     	CLRR	_zeroCount
                                    1- 2170     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2171     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2172     	.line	854, "main.c"; 	if(showBatValue > 99)
     01DB 2164                      1- 2173     	MOVIA	0x64
                                    1- 2174     	BANKSEL	_showBatValue
     01DC rrrr                      3-  110 m1      .banksel ram_address
     01DD 04rr                      1- 2175     	SUBAR	_showBatValue,W
     01DE 0803                      1- 2176     	BTRSS	STATUS,0
                                    1- 2177     	MGOTO	_00490_DS_
     01DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2178     	.line	855, "main.c"; 	showBatValue = 99;
     01E0 2163                      1- 2179     	MOVIA	0x63
     01E1 00rr                      1- 2180     	MOVAR	_showBatValue
     01E2                           1- 2181     _00490_DS_:
                                    1- 2182     	.line	856, "main.c"; 	shiwei = showBatValue/10;
     01E2 210A                      1- 2183     	MOVIA	0x0a
     01E3 00rr                      1- 2184     	MOVAR	STK00
                                    1- 2185     	BANKSEL	_showBatValue
     01E4 rrrr                      3-  110 m1      .banksel ram_address
     01E5 01rr                      1- 2186     	MOVR	_showBatValue,W
                                    1- 2187     	MCALL	__divuchar
     01E6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2188     	BANKSEL	_shiwei
     01E7 rrrr                      3-  110 m1      .banksel ram_address
     01E8 00rr                      1- 2189     	MOVAR	_shiwei
                                    1- 2190     	.line	857, "main.c"; 	gewei = showBatValue%10;
     01E9 210A                      1- 2191     	MOVIA	0x0a
     01EA 00rr                      1- 2192     	MOVAR	STK00
                                    1- 2193     	BANKSEL	_showBatValue
     01EB rrrr                      3-  110 m1      .banksel ram_address
     01EC 01rr                      1- 2194     	MOVR	_showBatValue,W
                                    1- 2195     	MCALL	__moduchar
     01ED 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2196     	BANKSEL	_gewei
     01EE rrrr                      3-  110 m1      .banksel ram_address
     01EF 00rr                      1- 2197     	MOVAR	_gewei
     01F0                           1- 2198     _00494_DS_:
                                    1- 2199     	.line	859, "main.c"; 	}
                                    1- 2200     	RETURN	
     01F0 0010                      3-   40 m1      ret
                                    1- 2201     ; exit point of _checkBatAD
                                    1- 2203     ;***
                                    1- 2204     ;  pBlock Stats: dbName = C
                                    1- 2205     ;***
                                    1- 2206     ;functions called:
                                    1- 2207     ;   _F_AIN2_Convert
                                    1- 2208     ;   _powerOff
                                    1- 2209     ;   _F_AIN2_Convert
                                    1- 2210     ;   _powerOff
                                    1- 2211     ;4 compiler assigned registers:
                                    1- 2212     ;   r0x104D
                                    1- 2213     ;   r0x104E
                                    1- 2214     ;   r0x104F
                                    1- 2215     ;   r0x1050
                                    1- 2216     ;; Starting pCode block
                                    1- 2217     .segment "code"; module=main, function=_checkOutA
     0000                           1- 2219     _checkOutA:
                                    1- 2220     ; 0 exit points
                                    1- 2221     	.line	680, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 2222     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2223     	CLRR	_R_AIN2_DATA_LB
                                    1- 2224     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2225     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 2226     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 2227     	.line	681, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 2228     	MOVIA	0x08
                                    1- 2229     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2230     	.line	682, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2231     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 2232     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 2233     	ANDIA	0xf0
     000A 00rr                      1- 2234     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 2235     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 2236     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 2237     	ANDIA	0x0f
     000E 11rr                      1- 2238     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 2239     	XORAR	_R_AIN2_DATA,F
                                    1- 2240     	.line	683, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 2241     	MOVIA	0xf0
                                    1- 2242     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 2243     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 2244     	.line	684, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 2245     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 2246     	BANKSEL	r0x104F
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2247     	MOVAR	r0x104F
                                    1- 2248     ;;1	MOVAR	r0x104D
                                    1- 2249     ;;1	CLRR	r0x104E
                                    1- 2250     ;;104	MOVR	r0x104D,W
     0016 2100                      1- 2251     	MOVIA	0x00
                                    1- 2252     	BANKSEL	r0x1050
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2253     	MOVAR	r0x1050
                                    1- 2254     	BANKSEL	r0x104F
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2255     	MOVR	r0x104F,W
                                    1- 2256     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 2257     	ADDAR	_R_AIN2_DATA,F
                                    1- 2258     	BANKSEL	r0x1050
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2259     	MOVR	r0x1050,W
     001F 0C03                      1- 2260     	BTRSC	STATUS,0
     0020 05rr                      1- 2261     	INCR	r0x1050,W
     0021 0D03                      1- 2262     	BTRSC	STATUS,2
                                    1- 2263     	MGOTO	_00007_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2264     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 2265     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 2266     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 2267     _00007_DS_:
                                    1- 2268     	.line	685, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 2269     	BCR	STATUS,0
                                    1- 2270     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 2271     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 2272     	RRR	_R_AIN2_DATA,F
                                    1- 2273     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 2274     	BCR	STATUS,0
     002A 13rr                      1- 2275     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 2276     	RRR	_R_AIN2_DATA,F
                                    1- 2277     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 2278     	BCR	STATUS,0
     002D 13rr                      1- 2279     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 2280     	RRR	_R_AIN2_DATA,F
                                    1- 2281     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2282     ;;unsigned compare: left >= lit (0xC9=201), size=2
                                    1- 2283     	.line	686, "main.c"; 	if(R_AIN2_DATA > 200)
     002F 2100                      1- 2284     	MOVIA	0x00
     0030 04rr                      1- 2285     	SUBAR	(_R_AIN2_DATA + 1),W
     0031 0903                      1- 2286     	BTRSS	STATUS,2
                                    1- 2287     	MGOTO	_00421_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 21C9                      1- 2288     	MOVIA	0xc9
     0034 04rr                      1- 2289     	SUBAR	_R_AIN2_DATA,W
     0035                           1- 2290     _00421_DS_:
     0035 0803                      1- 2291     	BTRSS	STATUS,0
                                    1- 2292     	MGOTO	_00408_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2293     	.line	688, "main.c"; 	if(++overCount > 250)
                                    1- 2294     	BANKSEL	_overCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1- 2295     	INCR	_overCount,F
                                    1- 2296     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2297     ;;unsigned compare: left >= lit (0xFB=251), size=1
     0039 21FB                      1- 2298     	MOVIA	0xfb
     003A 04rr                      1- 2299     	SUBAR	_overCount,W
     003B 0803                      1- 2300     	BTRSS	STATUS,0
                                    1- 2301     	MGOTO	_00410_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2302     	.line	690, "main.c"; 	overCount = 250;
     003D 21FA                      1- 2303     	MOVIA	0xfa
     003E 00rr                      1- 2304     	MOVAR	_overCount
                                    1- 2305     	.line	691, "main.c"; 	powerOff();
                                    1- 2306     	MCALL	_powerOff
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2307     	.line	692, "main.c"; 	powerTime = 500;
     0040 21F4                      1- 2308     	MOVIA	0xf4
                                    1- 2309     	BANKSEL	_powerTime
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2310     	MOVAR	_powerTime
     0043 2101                      1- 2311     	MOVIA	0x01
     0044 00rr                      1- 2312     	MOVAR	(_powerTime + 1)
                                    1- 2313     	.line	693, "main.c"; 	workStepshiwei = 10;
     0045 210A                      1- 2314     	MOVIA	0x0a
                                    1- 2315     	BANKSEL	_workStepshiwei
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 2316     	MOVAR	_workStepshiwei
                                    1- 2317     	.line	694, "main.c"; 	workStepgewei = 1;
     0048 2101                      1- 2318     	MOVIA	0x01
                                    1- 2319     	BANKSEL	_workStepgewei
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2320     	MOVAR	_workStepgewei
                                    1- 2321     	.line	695, "main.c"; 	overFlag = 1;
                                    1- 2322     	BANKSEL	_overFlag
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2323     	MOVAR	_overFlag
                                    1- 2324     	MGOTO	_00410_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2325     _00408_DS_:
                                    1- 2326     	.line	700, "main.c"; 	if(overCount > 0)
                                    1- 2327     	BANKSEL	_overCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2328     	MOVR	_overCount,W
     0050 0903                      1- 2329     	BTRSS	STATUS,2
                                    1- 2330     	.line	702, "main.c"; 	overCount--;
     0051 06rr                      1- 2331     	DECR	_overCount,F
     0052                           1- 2332     _00410_DS_:
                                    1- 2333     	.line	705, "main.c"; 	}
                                    1- 2334     	RETURN	
     0052 0010                      3-   40 m1      ret
                                    1- 2336     ;***
                                    1- 2337     ;  pBlock Stats: dbName = C
                                    1- 2338     ;***
                                    1- 2339     ;has an exit
                                    1- 2340     ;functions called:
                                    1- 2341     ;   __mulint
                                    1- 2342     ;   __divuint
                                    1- 2343     ;   __mulint
                                    1- 2344     ;   __divuint
                                    1- 2345     ;8 compiler assigned registers:
                                    1- 2346     ;   r0x1044
                                    1- 2347     ;   STK00
                                    1- 2348     ;   r0x1045
                                    1- 2349     ;   STK01
                                    1- 2350     ;   r0x1046
                                    1- 2351     ;   STK02
                                    1- 2352     ;   r0x1047
                                    1- 2353     ;   r0x1048
                                    1- 2354     ;; Starting pCode block
                                    1- 2355     .segment "code"; module=main, function=_getbatGe
                                    1- 2357     ;local variable name mapping:
     0000                           1- 2364     _getbatGe:
                                    1- 2365     ; 2 exit points
                                    1- 2366     	.line	671, "main.c"; 	u8t getbatGe(u16t adValue,u8t adValue2)
                                    1- 2367     	BANKSEL	r0x1044
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2368     	MOVAR	r0x1044
     0002 01rr                      1- 2369     	MOVR	STK00,W
                                    1- 2370     	BANKSEL	r0x1045
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2371     	MOVAR	r0x1045
     0005 01rr                      1- 2372     	MOVR	STK01,W
                                    1- 2373     	BANKSEL	r0x1046
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2374     	MOVAR	r0x1046
                                    1- 2375     	.line	673, "main.c"; 	u16t result = (R_AIN2_DATA - adValue)*10/adValue2;
                                    1- 2376     	BANKSEL	r0x1045
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 2377     	MOVR	r0x1045,W
                                    1- 2378     	BANKSEL	_R_AIN2_DATA
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 2379     	SUBAR	_R_AIN2_DATA,W
                                    1- 2380     	BANKSEL	r0x1045
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 2381     	MOVAR	r0x1045
                                    1- 2382     	BANKSEL	r0x1044
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2383     	MOVR	r0x1044,W
     0010 0803                      1- 2384     	BTRSS	STATUS,0
     0011 05rr                      1- 2385     	INCR	r0x1044,W
                                    1- 2386     	BANKSEL	_R_AIN2_DATA
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 2387     	SUBAR	(_R_AIN2_DATA + 1),W
                                    1- 2388     	BANKSEL	r0x1044
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2389     	MOVAR	r0x1044
                                    1- 2390     	BANKSEL	r0x1045
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2391     	MOVR	r0x1045,W
     0018 00rr                      1- 2392     	MOVAR	STK02
                                    1- 2393     	BANKSEL	r0x1044
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2394     	MOVR	r0x1044,W
     001B 00rr                      1- 2395     	MOVAR	STK01
     001C 210A                      1- 2396     	MOVIA	0x0a
     001D 00rr                      1- 2397     	MOVAR	STK00
     001E 2100                      1- 2398     	MOVIA	0x00
                                    1- 2399     	MCALL	__mulint
     001F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2400     	BANKSEL	r0x1044
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2401     	MOVAR	r0x1044
     0022 01rr                      1- 2402     	MOVR	STK00,W
                                    1- 2403     	BANKSEL	r0x1045
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2404     	MOVAR	r0x1045
                                    1- 2405     ;;103	MOVR	r0x1046,W
                                    1- 2406     ;;101	MOVAR	r0x1047
                                    1- 2407     ;;1	CLRR	r0x1048
                                    1- 2408     ;;102	MOVR	r0x1047,W
                                    1- 2409     	BANKSEL	r0x1046
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2410     	MOVR	r0x1046,W
     0027 00rr                      1- 2411     	MOVAR	STK02
     0028 2100                      1- 2412     	MOVIA	0x00
     0029 00rr                      1- 2413     	MOVAR	STK01
                                    1- 2414     	BANKSEL	r0x1045
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2415     	MOVR	r0x1045,W
     002C 00rr                      1- 2416     	MOVAR	STK00
                                    1- 2417     	BANKSEL	r0x1044
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 2418     	MOVR	r0x1044,W
                                    1- 2419     	MCALL	__divuint
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2420     	BANKSEL	r0x1044
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 2421     	MOVAR	r0x1044
     0032 01rr                      1- 2422     	MOVR	STK00,W
                                    1- 2423     	BANKSEL	r0x1045
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2424     	MOVAR	r0x1045
                                    1- 2425     	.line	674, "main.c"; 	u8t res = result;
                                    1- 2426     	BANKSEL	r0x1046
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 2427     	MOVAR	r0x1046
                                    1- 2428     	.line	676, "main.c"; 	}
                                    1- 2429     	RETURN	
     0037 0010                      3-   40 m1      ret
                                    1- 2430     ; exit point of _getbatGe
                                    1- 2432     ;***
                                    1- 2433     ;  pBlock Stats: dbName = C
                                    1- 2434     ;***
                                    1- 2435     ;has an exit
                                    1- 2436     ;functions called:
                                    1- 2437     ;   _pwm1Stop
                                    1- 2438     ;   _pwm1Stop
                                    1- 2439     ;1 compiler assigned register :
                                    1- 2440     ;   r0x1051
                                    1- 2441     ;; Starting pCode block
                                    1- 2442     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2444     _gotoSleep:
                                    1- 2445     ; 2 exit points
                                    1- 2446     	.line	641, "main.c"; 	shanshuoTime = 0;
                                    1- 2447     	BANKSEL	_shanshuoTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2448     	CLRR	_shanshuoTime
                                    1- 2449     	.line	642, "main.c"; 	zeroCount = 0;
                                    1- 2450     	BANKSEL	_zeroCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2451     	CLRR	_zeroCount
                                    1- 2452     	.line	643, "main.c"; 	overFlag = 0;
                                    1- 2453     	BANKSEL	_overFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2454     	CLRR	_overFlag
                                    1- 2455     	.line	644, "main.c"; 	count900s = 0;
                                    1- 2456     	BANKSEL	_count900s
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2457     	CLRR	_count900s
     0008 02rr                      1- 2458     	CLRR	(_count900s + 1)
                                    1- 2459     	.line	645, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     0009 1Arr                      1- 2460     	BSR	_PORTB,5
     000A 0Arr                      1- 2461     	BTRSS	_PORTB,5
     000B 1Err                      1- 2462     	BCR	_PORTB,4
     000C 0Err                      1- 2463     	BTRSC	_PORTB,5
     000D 1Arr                      1- 2464     	BSR	_PORTB,4
     000E 0Err                      1- 2465     	BTRSC	_PORTB,4
                                    1- 2466     	MGOTO	_00008_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2467     	BANKSEL	_PORTA
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 1Drr                      1- 2468     	BCR	_PORTA,3
     0012                           1- 2469     _00008_DS_:
     0012 0Arr                      1- 2470     	BTRSS	_PORTB,4
                                    1- 2471     	MGOTO	_00009_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2472     	BANKSEL	_PORTA
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 19rr                      1- 2473     	BSR	_PORTA,3
     0016                           1- 2474     _00009_DS_:
                                    1- 2475     	BANKSEL	_PORTA
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 09rr                      1- 2476     	BTRSS	_PORTA,3
     0018 1Err                      1- 2477     	BCR	_PORTA,4
     0019 0Drr                      1- 2478     	BTRSC	_PORTA,3
     001A 1Arr                      1- 2479     	BSR	_PORTA,4
                                    1- 2480     	.line	646, "main.c"; 	IOSTA |= 0x20;
     001B 001r                      1- 2481     	IOSTR	_IOSTA
                                    1- 2482     	BANKSEL	r0x1051
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1- 2483     	MOVAR	r0x1051
     001E 1Arr                      1- 2484     	BSR	r0x1051,5
     001F 01rr                      1- 2485     	MOVR	r0x1051,W
     0020 000r                      1- 2486     	IOST	_IOSTA
                                    1- 2487     	.line	647, "main.c"; 	sleepTime = 0;
                                    1- 2488     	BANKSEL	_sleepTime
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1- 2489     	CLRR	_sleepTime
                                    1- 2490     	.line	648, "main.c"; 	workStep = 0;
                                    1- 2491     	BANKSEL	_workStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1- 2492     	CLRR	_workStep
                                    1- 2493     	.line	649, "main.c"; 	powerFlag = 0;
                                    1- 2494     	BANKSEL	_powerFlag
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2495     	CLRR	_powerFlag
                                    1- 2496     	.line	650, "main.c"; 	powerTime = 0;
                                    1- 2497     	BANKSEL	_powerTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2498     	CLRR	_powerTime
     0029 02rr                      1- 2499     	CLRR	(_powerTime + 1)
                                    1- 2500     	.line	651, "main.c"; 	pwm1Stop();
                                    1- 2501     	MCALL	_pwm1Stop
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2502     	.line	653, "main.c"; 	AWUCON = 0x02;
     002B 2102                      1- 2503     	MOVIA	0x02
     002C 00rr                      1- 2504     	MOVAR	_AWUCON
                                    1- 2505     	.line	654, "main.c"; 	BWUCON = 0x04;
     002D 2104                      1- 2506     	MOVIA	0x04
     002E 00rr                      1- 2507     	MOVAR	_BWUCON
                                    1- 2508     	.line	655, "main.c"; 	INTE =  C_INT_PABKey;
     002F 2102                      1- 2509     	MOVIA	0x02
     0030 00rr                      1- 2510     	MOVAR	_INTE
                                    1- 2511     	.line	656, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0031 2118                      1- 2512     	MOVIA	0x18
     0032 00rr                      1- 2513     	MOVAR	_PCON
                                    1- 2514     	.line	657, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0033 02rr                      1- 2515     	CLRR	_INTF
                                    1- 2516     	.line	658, "main.c"; 	CLRWDT();
     0034 0002                      1- 2517     	clrwdt
                                    1- 2518     	.line	659, "main.c"; 	ENI();
     0035 0004                      1- 2519     	ENI
                                    1- 2520     	.line	660, "main.c"; 	SLEEP();
     0036 0001                      1- 2521     	sleep
                                    1- 2522     	.line	661, "main.c"; 	AWUCON = 0x00;
     0037 02rr                      1- 2523     	CLRR	_AWUCON
                                    1- 2524     	.line	662, "main.c"; 	BWUCON = 0x00;
     0038 02rr                      1- 2525     	CLRR	_BWUCON
                                    1- 2526     	.line	663, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0��Timer1��WDT overflow interrupt
     0039 2101                      1- 2527     	MOVIA	0x01
     003A 00rr                      1- 2528     	MOVAR	_INTE
                                    1- 2529     	.line	664, "main.c"; 	INTF = 0;
     003B 02rr                      1- 2530     	CLRR	_INTF
                                    1- 2531     	.line	666, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     003C 21B8                      1- 2532     	MOVIA	0xb8
     003D 00rr                      1- 2533     	MOVAR	_PCON
                                    1- 2534     	.line	669, "main.c"; 	}
                                    1- 2535     	RETURN	
     003E 0010                      3-   40 m1      ret
                                    1- 2536     ; exit point of _gotoSleep
                                    1- 2538     ;***
                                    1- 2539     ;  pBlock Stats: dbName = C
                                    1- 2540     ;***
                                    1- 2541     ;has an exit
                                    1- 2542     ;functions called:
                                    1- 2543     ;   __gptrget1
                                    1- 2544     ;   _ind_light_disp
                                    1- 2545     ;   _delay_us
                                    1- 2546     ;   __gptrget1
                                    1- 2547     ;   _ind_light_disp
                                    1- 2548     ;   _delay_us
                                    1- 2549     ;   __gptrget1
                                    1- 2550     ;   _ind_light_disp
                                    1- 2551     ;   _delay_us
                                    1- 2552     ;   __gptrget1
                                    1- 2553     ;   _ind_light_disp
                                    1- 2554     ;   _delay_us
                                    1- 2555     ;5 compiler assigned registers:
                                    1- 2556     ;   r0x1054
                                    1- 2557     ;   r0x1055
                                    1- 2558     ;   STK01
                                    1- 2559     ;   STK00
                                    1- 2560     ;   r0x1056
                                    1- 2561     ;; Starting pCode block
                                    1- 2562     .segment "code"; module=main, function=_refreshBat
     0000                           1- 2564     _refreshBat:
                                    1- 2565     ; 2 exit points
                                    1- 2566     	.line	619, "main.c"; 	COM1 = 1;
                                    1- 2567     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Arr                      1- 2568     	BSR	_PORTA,4
                                    1- 2569     	.line	620, "main.c"; 	COM2 = 1;
     0002 19rr                      1- 2570     	BSR	_PORTA,3
                                    1- 2571     	.line	621, "main.c"; 	COM3 = 1;
     0003 1Arr                      1- 2572     	BSR	_PORTB,4
                                    1- 2573     	.line	622, "main.c"; 	COM4 = 1;
     0004 1Arr                      1- 2574     	BSR	_PORTB,5
                                    1- 2575     	.line	623, "main.c"; 	ind_light_disp(table[shiwei]);
                                    1- 2576     	BANKSEL	_shiwei
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2577     	MOVR	_shiwei,W
     0007 25rr                      1- 2578     	ADDIA	(_table + 0)
                                    1- 2579     	BANKSEL	r0x1054
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2580     	MOVAR	r0x1054
     000A 21rr                      1- 2581     	MOVIA	((_table + 0) >> 8) & 0xff
     000B 0C03                      1- 2582     	BTRSC	STATUS,0
     000C 2501                      1- 2583     	ADDIA	0x01
                                    1- 2584     	BANKSEL	r0x1055
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2585     	MOVAR	r0x1055
                                    1- 2586     	BANKSEL	r0x1054
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2587     	MOVR	r0x1054,W
     0011 00rr                      1- 2588     	MOVAR	STK01
                                    1- 2589     	BANKSEL	r0x1055
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2590     	MOVR	r0x1055,W
     0014 00rr                      1- 2591     	MOVAR	STK00
     0015 2180                      1- 2592     	MOVIA	0x80
                                    1- 2593     	MCALL	__gptrget1
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2594     ;;100	MOVAR	r0x1056
                                    1- 2595     	MCALL	_ind_light_disp
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2596     	.line	624, "main.c"; 	COM1 = 1;
                                    1- 2597     	BANKSEL	_PORTA
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 1Arr                      1- 2598     	BSR	_PORTA,4
                                    1- 2599     	.line	625, "main.c"; 	COM2 = 0;
     001A 1Drr                      1- 2600     	BCR	_PORTA,3
                                    1- 2601     	.line	626, "main.c"; 	delay_us(REFRESHTIME);
     001B 2164                      1- 2602     	MOVIA	0x64
                                    1- 2603     	MCALL	_delay_us
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2604     	.line	627, "main.c"; 	COM1 = 1;
                                    1- 2605     	BANKSEL	_PORTA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2606     	BSR	_PORTA,4
                                    1- 2607     	.line	628, "main.c"; 	COM2 = 1;
     001F 19rr                      1- 2608     	BSR	_PORTA,3
                                    1- 2609     	.line	629, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 2610     	BANKSEL	_gewei
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2611     	MOVR	_gewei,W
     0022 25rr                      1- 2612     	ADDIA	(_table + 0)
                                    1- 2613     	BANKSEL	r0x1054
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2614     	MOVAR	r0x1054
     0025 21rr                      1- 2615     	MOVIA	((_table + 0) >> 8) & 0xff
     0026 0C03                      1- 2616     	BTRSC	STATUS,0
     0027 2501                      1- 2617     	ADDIA	0x01
                                    1- 2618     	BANKSEL	r0x1055
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2619     	MOVAR	r0x1055
                                    1- 2620     	BANKSEL	r0x1054
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2621     	MOVR	r0x1054,W
     002C 00rr                      1- 2622     	MOVAR	STK01
                                    1- 2623     	BANKSEL	r0x1055
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 2624     	MOVR	r0x1055,W
     002F 00rr                      1- 2625     	MOVAR	STK00
     0030 2180                      1- 2626     	MOVIA	0x80
                                    1- 2627     	MCALL	__gptrget1
     0031 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2628     ;;99	MOVAR	r0x1056
                                    1- 2629     	MCALL	_ind_light_disp
     0032 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2630     	.line	630, "main.c"; 	COM1 = 0;
                                    1- 2631     	BANKSEL	_PORTA
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 1Err                      1- 2632     	BCR	_PORTA,4
                                    1- 2633     	.line	631, "main.c"; 	COM2 = 1;
     0035 19rr                      1- 2634     	BSR	_PORTA,3
                                    1- 2635     	.line	632, "main.c"; 	delay_us(REFRESHTIME);
     0036 2164                      1- 2636     	MOVIA	0x64
                                    1- 2637     	MCALL	_delay_us
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2638     	.line	633, "main.c"; 	COM1 = 1;
                                    1- 2639     	BANKSEL	_PORTA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 1Arr                      1- 2640     	BSR	_PORTA,4
                                    1- 2641     	.line	634, "main.c"; 	COM2 = 1;
     003A 19rr                      1- 2642     	BSR	_PORTA,3
                                    1- 2643     	.line	635, "main.c"; 	}
                                    1- 2644     	RETURN	
     003B 0010                      3-   40 m1      ret
                                    1- 2645     ; exit point of _refreshBat
                                    1- 2647     ;***
                                    1- 2648     ;  pBlock Stats: dbName = C
                                    1- 2649     ;***
                                    1- 2650     ;has an exit
                                    1- 2651     ;functions called:
                                    1- 2652     ;   __gptrget1
                                    1- 2653     ;   _ind_light_disp
                                    1- 2654     ;   _delay_us
                                    1- 2655     ;   __gptrget1
                                    1- 2656     ;   _ind_light_disp
                                    1- 2657     ;   _delay_us
                                    1- 2658     ;   __gptrget1
                                    1- 2659     ;   _ind_light_disp
                                    1- 2660     ;   _delay_us
                                    1- 2661     ;   __gptrget1
                                    1- 2662     ;   _ind_light_disp
                                    1- 2663     ;   _delay_us
                                    1- 2664     ;   __gptrget1
                                    1- 2665     ;   _ind_light_disp
                                    1- 2666     ;   _delay_us
                                    1- 2667     ;   __gptrget1
                                    1- 2668     ;   _ind_light_disp
                                    1- 2669     ;   _delay_us
                                    1- 2670     ;   __gptrget1
                                    1- 2671     ;   _ind_light_disp
                                    1- 2672     ;   _delay_us
                                    1- 2673     ;   __gptrget1
                                    1- 2674     ;   _ind_light_disp
                                    1- 2675     ;   _delay_us
                                    1- 2676     ;   __gptrget1
                                    1- 2677     ;   _ind_light_disp
                                    1- 2678     ;   _delay_us
                                    1- 2679     ;   __gptrget1
                                    1- 2680     ;   _ind_light_disp
                                    1- 2681     ;   _delay_us
                                    1- 2682     ;   __gptrget1
                                    1- 2683     ;   _ind_light_disp
                                    1- 2684     ;   _delay_us
                                    1- 2685     ;   __gptrget1
                                    1- 2686     ;   _ind_light_disp
                                    1- 2687     ;   _delay_us
                                    1- 2688     ;5 compiler assigned registers:
                                    1- 2689     ;   STK01
                                    1- 2690     ;   STK00
                                    1- 2691     ;   r0x1057
                                    1- 2692     ;   r0x1058
                                    1- 2693     ;   r0x1059
                                    1- 2694     ;; Starting pCode block
                                    1- 2695     .segment "code"; module=main, function=_refresh
     0000                           1- 2697     _refresh:
                                    1- 2698     ; 2 exit points
                                    1- 2699     	.line	574, "main.c"; 	COM1 = 1;
                                    1- 2700     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Arr                      1- 2701     	BSR	_PORTA,4
                                    1- 2702     	.line	575, "main.c"; 	COM2 = 1;
     0002 19rr                      1- 2703     	BSR	_PORTA,3
                                    1- 2704     	.line	576, "main.c"; 	COM3 = 1;
     0003 1Arr                      1- 2705     	BSR	_PORTB,4
                                    1- 2706     	.line	577, "main.c"; 	COM4 = 1;
     0004 1Arr                      1- 2707     	BSR	_PORTB,5
                                    1- 2708     	.line	578, "main.c"; 	if(chrgFlag)
                                    1- 2709     	BANKSEL	_chrgFlag
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2710     	MOVR	_chrgFlag,W
     0007 0D03                      1- 2711     	BTRSC	STATUS,2
                                    1- 2712     	MGOTO	_00384_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2713     	.line	580, "main.c"; 	if(batValue == 100 && showBatValue == 99)
                                    1- 2714     	BANKSEL	_batValue
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 2715     	MOVR	_batValue,W
     000B 2464                      1- 2716     	XORIA	0x64
     000C 0903                      1- 2717     	BTRSS	STATUS,2
                                    1- 2718     	MGOTO	_00380_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2719     	BANKSEL	_showBatValue
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2720     	MOVR	_showBatValue,W
     0010 2463                      1- 2721     	XORIA	0x63
     0011 0903                      1- 2722     	BTRSS	STATUS,2
                                    1- 2723     	MGOTO	_00380_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2724     	.line	582, "main.c"; 	ind_light_disp(table[0]);
     0013 21rr                      1- 2725     	MOVIA	(_table + 0)
     0014 00rr                      1- 2726     	MOVAR	STK01
     0015 21rr                      1- 2727     	MOVIA	((_table + 0) >> 8) & 0xff
     0016 00rr                      1- 2728     	MOVAR	STK00
     0017 2180                      1- 2729     	MOVIA	0x80
                                    1- 2730     	MCALL	__gptrget1
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2731     	BANKSEL	r0x1057
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 2732     	MOVAR	r0x1057
                                    1- 2733     	MCALL	_ind_light_disp
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2734     	.line	583, "main.c"; 	COM3 = 0;
     001C 1Err                      1- 2735     	BCR	_PORTB,4
                                    1- 2736     	.line	584, "main.c"; 	delay_us(REFRESHTIME);
     001D 2164                      1- 2737     	MOVIA	0x64
                                    1- 2738     	MCALL	_delay_us
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2739     	.line	585, "main.c"; 	COM3 = 1;
     001F 1Arr                      1- 2740     	BSR	_PORTB,4
                                    1- 2741     	.line	586, "main.c"; 	ind_light_disp(table[0]);
     0020 21rr                      1- 2742     	MOVIA	(_table + 0)
     0021 00rr                      1- 2743     	MOVAR	STK01
     0022 21rr                      1- 2744     	MOVIA	((_table + 0) >> 8) & 0xff
     0023 00rr                      1- 2745     	MOVAR	STK00
     0024 2180                      1- 2746     	MOVIA	0x80
                                    1- 2747     	MCALL	__gptrget1
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2748     	BANKSEL	r0x1057
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 2749     	MOVAR	r0x1057
                                    1- 2750     	MCALL	_ind_light_disp
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2751     	.line	587, "main.c"; 	COM4 = 0;
     0029 1Err                      1- 2752     	BCR	_PORTB,5
                                    1- 2753     	.line	588, "main.c"; 	delay_us(REFRESHTIME);
     002A 2164                      1- 2754     	MOVIA	0x64
                                    1- 2755     	MCALL	_delay_us
     002B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2756     	.line	589, "main.c"; 	COM4 = 1;
     002C 1Arr                      1- 2757     	BSR	_PORTB,5
                                    1- 2758     	MGOTO	_00386_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 2759     _00380_DS_:
                                    1- 2760     	.line	593, "main.c"; 	ind_light_disp(table2[workStepshiwei]);
                                    1- 2761     	BANKSEL	_workStepshiwei
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2762     	MOVR	_workStepshiwei,W
     0030 25rr                      1- 2763     	ADDIA	(_table2 + 0)
                                    1- 2764     	BANKSEL	r0x1057
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2765     	MOVAR	r0x1057
     0033 21rr                      1- 2766     	MOVIA	((_table2 + 0) >> 8) & 0xff
     0034 0C03                      1- 2767     	BTRSC	STATUS,0
     0035 2501                      1- 2768     	ADDIA	0x01
                                    1- 2769     	BANKSEL	r0x1058
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2770     	MOVAR	r0x1058
                                    1- 2771     	BANKSEL	r0x1057
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2772     	MOVR	r0x1057,W
     003A 00rr                      1- 2773     	MOVAR	STK01
                                    1- 2774     	BANKSEL	r0x1058
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2775     	MOVR	r0x1058,W
     003D 00rr                      1- 2776     	MOVAR	STK00
     003E 2180                      1- 2777     	MOVIA	0x80
                                    1- 2778     	MCALL	__gptrget1
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2779     ;;2	MOVAR	r0x1059
                                    1- 2780     	MCALL	_ind_light_disp
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2781     	.line	594, "main.c"; 	COM3 = 0;
     0041 1Err                      1- 2782     	BCR	_PORTB,4
                                    1- 2783     	.line	595, "main.c"; 	delay_us(REFRESHTIME);
     0042 2164                      1- 2784     	MOVIA	0x64
                                    1- 2785     	MCALL	_delay_us
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2786     	.line	596, "main.c"; 	COM3 = 1;
     0044 1Arr                      1- 2787     	BSR	_PORTB,4
                                    1- 2788     	.line	597, "main.c"; 	ind_light_disp(table2[workStepgewei]);
                                    1- 2789     	BANKSEL	_workStepgewei
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 2790     	MOVR	_workStepgewei,W
     0047 25rr                      1- 2791     	ADDIA	(_table2 + 0)
                                    1- 2792     	BANKSEL	r0x1057
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 2793     	MOVAR	r0x1057
     004A 21rr                      1- 2794     	MOVIA	((_table2 + 0) >> 8) & 0xff
     004B 0C03                      1- 2795     	BTRSC	STATUS,0
     004C 2501                      1- 2796     	ADDIA	0x01
                                    1- 2797     	BANKSEL	r0x1058
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 2798     	MOVAR	r0x1058
                                    1- 2799     	BANKSEL	r0x1057
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1- 2800     	MOVR	r0x1057,W
     0051 00rr                      1- 2801     	MOVAR	STK01
                                    1- 2802     	BANKSEL	r0x1058
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2803     	MOVR	r0x1058,W
     0054 00rr                      1- 2804     	MOVAR	STK00
     0055 2180                      1- 2805     	MOVIA	0x80
                                    1- 2806     	MCALL	__gptrget1
     0056 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2807     ;;2	MOVAR	r0x1059
                                    1- 2808     	MCALL	_ind_light_disp
     0057 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2809     	.line	598, "main.c"; 	COM4 = 0;
     0058 1Err                      1- 2810     	BCR	_PORTB,5
                                    1- 2811     	.line	599, "main.c"; 	delay_us(REFRESHTIME);
     0059 2164                      1- 2812     	MOVIA	0x64
                                    1- 2813     	MCALL	_delay_us
     005A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2814     	.line	600, "main.c"; 	COM4 = 1;
     005B 1Arr                      1- 2815     	BSR	_PORTB,5
                                    1- 2816     	MGOTO	_00386_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 2817     _00384_DS_:
                                    1- 2818     	.line	605, "main.c"; 	ind_light_disp(table[workStepshiwei]);
                                    1- 2819     	BANKSEL	_workStepshiwei
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 2820     	MOVR	_workStepshiwei,W
     005F 25rr                      1- 2821     	ADDIA	(_table + 0)
                                    1- 2822     	BANKSEL	r0x1057
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 2823     	MOVAR	r0x1057
     0062 21rr                      1- 2824     	MOVIA	((_table + 0) >> 8) & 0xff
     0063 0C03                      1- 2825     	BTRSC	STATUS,0
     0064 2501                      1- 2826     	ADDIA	0x01
                                    1- 2827     	BANKSEL	r0x1058
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 2828     	MOVAR	r0x1058
                                    1- 2829     	BANKSEL	r0x1057
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 2830     	MOVR	r0x1057,W
     0069 00rr                      1- 2831     	MOVAR	STK01
                                    1- 2832     	BANKSEL	r0x1058
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 2833     	MOVR	r0x1058,W
     006C 00rr                      1- 2834     	MOVAR	STK00
     006D 2180                      1- 2835     	MOVIA	0x80
                                    1- 2836     	MCALL	__gptrget1
     006E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2837     ;;2	MOVAR	r0x1059
                                    1- 2838     	MCALL	_ind_light_disp
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2839     	.line	606, "main.c"; 	COM3 = 0;
     0070 1Err                      1- 2840     	BCR	_PORTB,4
                                    1- 2841     	.line	607, "main.c"; 	delay_us(REFRESHTIME);
     0071 2164                      1- 2842     	MOVIA	0x64
                                    1- 2843     	MCALL	_delay_us
     0072 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2844     	.line	608, "main.c"; 	COM3 = 1;
     0073 1Arr                      1- 2845     	BSR	_PORTB,4
                                    1- 2846     	.line	609, "main.c"; 	ind_light_disp(table[workStepgewei]);
                                    1- 2847     	BANKSEL	_workStepgewei
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 2848     	MOVR	_workStepgewei,W
     0076 25rr                      1- 2849     	ADDIA	(_table + 0)
                                    1- 2850     	BANKSEL	r0x1057
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 2851     	MOVAR	r0x1057
     0079 21rr                      1- 2852     	MOVIA	((_table + 0) >> 8) & 0xff
     007A 0C03                      1- 2853     	BTRSC	STATUS,0
     007B 2501                      1- 2854     	ADDIA	0x01
                                    1- 2855     	BANKSEL	r0x1058
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2856     	MOVAR	r0x1058
                                    1- 2857     	BANKSEL	r0x1057
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 01rr                      1- 2858     	MOVR	r0x1057,W
     0080 00rr                      1- 2859     	MOVAR	STK01
                                    1- 2860     	BANKSEL	r0x1058
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 2861     	MOVR	r0x1058,W
     0083 00rr                      1- 2862     	MOVAR	STK00
     0084 2180                      1- 2863     	MOVIA	0x80
                                    1- 2864     	MCALL	__gptrget1
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2865     ;;2	MOVAR	r0x1059
                                    1- 2866     	MCALL	_ind_light_disp
     0086 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2867     	.line	610, "main.c"; 	COM4 = 0;
     0087 1Err                      1- 2868     	BCR	_PORTB,5
                                    1- 2869     	.line	611, "main.c"; 	delay_us(REFRESHTIME);
     0088 2164                      1- 2870     	MOVIA	0x64
                                    1- 2871     	MCALL	_delay_us
     0089 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2872     	.line	612, "main.c"; 	COM4 = 1;
     008A 1Arr                      1- 2873     	BSR	_PORTB,5
     008B                           1- 2874     _00386_DS_:
                                    1- 2875     	.line	614, "main.c"; 	}
                                    1- 2876     	RETURN	
     008B 0010                      3-   40 m1      ret
                                    1- 2877     ; exit point of _refresh
                                    1- 2879     ;***
                                    1- 2880     ;  pBlock Stats: dbName = C
                                    1- 2881     ;***
                                    1- 2882     ;has an exit
                                    1- 2883     ;functions called:
                                    1- 2884     ;   _Delay10Us
                                    1- 2885     ;   _Delay10Us
                                    1- 2886     ;   _Delay10Us
                                    1- 2887     ;   _Delay10Us
                                    1- 2888     ;   _Delay10Us
                                    1- 2889     ;   _Delay10Us
                                    1- 2890     ;   _Delay10Us
                                    1- 2891     ;   _Delay10Us
                                    1- 2892     ;2 compiler assigned registers:
                                    1- 2893     ;   r0x1052
                                    1- 2894     ;   r0x1053
                                    1- 2895     ;; Starting pCode block
                                    1- 2896     .segment "code"; module=main, function=_ind_light_disp
                                    1- 2898     ;local variable name mapping:
     0000                           1- 2901     _ind_light_disp:
                                    1- 2902     ; 2 exit points
                                    1- 2903     	.line	546, "main.c"; 	void ind_light_disp( u8t udata )
                                    1- 2904     	BANKSEL	r0x1052
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2905     	MOVAR	r0x1052
                                    1- 2906     	.line	549, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 2907     	BANKSEL	r0x1053
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2908     	CLRR	r0x1053
     0004                           1- 2909     _00374_DS_:
                                    1- 2910     	.line	551, "main.c"; 	CLK=0;
                                    1- 2911     	BANKSEL	_PORTA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 1Frr                      1- 2912     	BCR	_PORTA,7
                                    1- 2913     	.line	552, "main.c"; 	Delay10Us();
                                    1- 2914     	MCALL	_Delay10Us
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2915     	.line	553, "main.c"; 	if(udata&0x80)
                                    1- 2916     	BANKSEL	r0x1052
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 0Brr                      1- 2917     	BTRSS	r0x1052,7
                                    1- 2918     	MGOTO	_00371_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2919     	.line	555, "main.c"; 	DAT=1;
                                    1- 2920     	BANKSEL	_PORTA
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 18rr                      1- 2921     	BSR	_PORTA,0
                                    1- 2922     	.line	556, "main.c"; 	Delay10Us();
                                    1- 2923     	MCALL	_Delay10Us
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2924     	MGOTO	_00372_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2925     _00371_DS_:
                                    1- 2926     	.line	560, "main.c"; 	DAT=0;
                                    1- 2927     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Crr                      1- 2928     	BCR	_PORTA,0
                                    1- 2929     	.line	561, "main.c"; 	Delay10Us();
                                    1- 2930     	MCALL	_Delay10Us
     0010 2rrr                      3-   66 m1      LCALL rom_address
     0011                           1- 2931     _00372_DS_:
                                    1- 2932     	.line	563, "main.c"; 	CLK=1;
                                    1- 2933     	BANKSEL	_PORTA
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 1Brr                      1- 2934     	BSR	_PORTA,7
                                    1- 2935     	.line	564, "main.c"; 	Delay10Us();
                                    1- 2936     	MCALL	_Delay10Us
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2937     	.line	565, "main.c"; 	udata<<=1;
     0014 1C03                      1- 2938     	BCR	STATUS,0
                                    1- 2939     	BANKSEL	r0x1052
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 14rr                      1- 2940     	RLR	r0x1052,F
                                    1- 2941     	.line	549, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 2942     	BANKSEL	r0x1053
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 05rr                      1- 2943     	INCR	r0x1053,F
                                    1- 2944     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2945     ;;unsigned compare: left >= lit (0x8=8), size=1
     0019 2108                      1- 2946     	MOVIA	0x08
     001A 04rr                      1- 2947     	SUBAR	r0x1053,W
     001B 0803                      1- 2948     	BTRSS	STATUS,0
                                    1- 2949     	MGOTO	_00374_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2950     	.line	567, "main.c"; 	CLK=0;
                                    1- 2951     	BANKSEL	_PORTA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Frr                      1- 2952     	BCR	_PORTA,7
                                    1- 2953     	.line	568, "main.c"; 	DAT=0;
     001F 1Crr                      1- 2954     	BCR	_PORTA,0
                                    1- 2955     	.line	569, "main.c"; 	}
                                    1- 2956     	RETURN	
     0020 0010                      3-   40 m1      ret
                                    1- 2957     ; exit point of _ind_light_disp
                                    1- 2959     ;***
                                    1- 2960     ;  pBlock Stats: dbName = C
                                    1- 2961     ;***
                                    1- 2962     ;has an exit
                                    1- 2963     ;; Starting pCode block
                                    1- 2964     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2966     _pwm1Stop:
                                    1- 2967     ; 2 exit points
                                    1- 2968     	.line	540, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2969     	CLRA	
     0001 00rr                      1- 2970     	SFUN	_T1CR1
                                    1- 2971     	.line	541, "main.c"; 	PORTB &= 0xF7;
     0002 1Drr                      1- 2972     	BCR	_PORTB,3
                                    1- 2973     	.line	542, "main.c"; 	}
                                    1- 2974     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2975     ; exit point of _pwm1Stop
                                    1- 2977     ;***
                                    1- 2978     ;  pBlock Stats: dbName = C
                                    1- 2979     ;***
                                    1- 2980     ;has an exit
                                    1- 2981     ;1 compiler assigned register :
                                    1- 2982     ;   r0x105A
                                    1- 2983     ;; Starting pCode block
                                    1- 2984     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2986     _pwm1Init:
                                    1- 2987     ; 2 exit points
                                    1- 2988     	.line	528, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2989     	SFUNR	_T1CR1
                                    1- 2990     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2991     	MOVAR	r0x105A
     0003 0Frr                      1- 2992     	BTRSC	r0x105A,7
                                    1- 2993     	.line	529, "main.c"; 	return;
                                    1- 2994     	MGOTO	_00361_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2995     	.line	530, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2996     	CLRR	_TMRH
                                    1- 2997     	.line	531, "main.c"; 	TMR1 = 255;							//Ƶ��Ϊ110K
     0006 21FF                      1- 2998     	MOVIA	0xff
     0007 00rr                      1- 2999     	SFUN	_TMR1
                                    1- 3000     	.line	534, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 3001     	CLRA	
     0009 00rr                      1- 3002     	SFUN	_T1CR2
                                    1- 3003     	.line	535, "main.c"; 	T1CR1	 = C_PWM1_En | C_PWM1_Active_Hi | C_TMR1_Reload | C_TMR1_En;
     000A 2183                      1- 3004     	MOVIA	0x83
     000B 00rr                      1- 3005     	SFUN	_T1CR1
     000C                           1- 3006     _00361_DS_:
                                    1- 3007     	.line	536, "main.c"; 	}
                                    1- 3008     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3009     ; exit point of _pwm1Init
                                    1- 3011     ;***
                                    1- 3012     ;  pBlock Stats: dbName = C
                                    1- 3013     ;***
                                    1- 3014     ;has an exit
                                    1- 3015     ;functions called:
                                    1- 3016     ;   _delay
                                    1- 3017     ;   _delay
                                    1- 3018     ;1 compiler assigned register :
                                    1- 3019     ;   STK00
                                    1- 3020     ;; Starting pCode block
                                    1- 3021     .segment "code"; module=main, function=_initAD
     0000                           1- 3023     _initAD:
                                    1- 3024     ; 2 exit points
                                    1- 3025     	.line	502, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 3026     	MOVIA	0x84
     0001 00rr                      1- 3027     	MOVAR	_ADMD
                                    1- 3028     	.line	507, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 3029     	CLRR	_ADVREFH
                                    1- 3030     	.line	512, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 3031     	MOVIA	0x10
     0004 00rr                      1- 3032     	MOVAR	_ADR
                                    1- 3033     	.line	514, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 3034     	MOVIA	0x03
     0006 00rr                      1- 3035     	MOVAR	_ADCR
                                    1- 3036     	.line	517, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 3037     	BSR	_ADMDbits,4
                                    1- 3038     	.line	518, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 3039     	MOVIA	0x64
     0009 00rr                      1- 3040     	MOVAR	STK00
     000A 2100                      1- 3041     	MOVIA	0x00
                                    1- 3042     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3043     	.line	521, "main.c"; 	}
                                    1- 3044     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3045     ; exit point of _initAD
                                    1- 3047     ;***
                                    1- 3048     ;  pBlock Stats: dbName = C
                                    1- 3049     ;***
                                    1- 3050     ;has an exit
                                    1- 3051     ;; Starting pCode block
                                    1- 3052     .segment "code"; module=main, function=_initSys
     0000                           1- 3054     _initSys:
                                    1- 3055     ; 2 exit points
                                    1- 3056     	.line	471, "main.c"; 	DISI();
     0000 0013                      1- 3057     	DISI
                                    1- 3058     	.line	472, "main.c"; 	IOSTA = C_PA6_Input  | C_PA1_Input | C_PA2_Input;
     0001 2146                      1- 3059     	MOVIA	0x46
     0002 000r                      1- 3060     	IOST	_IOSTA
                                    1- 3061     	.line	473, "main.c"; 	IOSTB = C_PB1_Input | C_PB2_Input;
     0003 2106                      1- 3062     	MOVIA	0x06
     0004 000r                      1- 3063     	IOST	_IOSTB
                                    1- 3064     	.line	474, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3065     	CLRR	_PORTB
                                    1- 3066     	.line	475, "main.c"; 	PORTA = 0x00;
                                    1- 3067     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3068     	CLRR	_PORTA
                                    1- 3069     	.line	476, "main.c"; 	APHCON = 0xBF;
     0008 21BF                      1- 3070     	MOVIA	0xbf
     0009 000r                      1- 3071     	IOST	_APHCON
                                    1- 3072     	.line	477, "main.c"; 	BPHCON = 0xFB;
     000A 21FB                      1- 3073     	MOVIA	0xfb
     000B 00rr                      1- 3074     	MOVAR	_BPHCON
                                    1- 3075     	.line	478, "main.c"; 	ABPLCON = 0xFF;
     000C 21FF                      1- 3076     	MOVIA	0xff
     000D 00rr                      1- 3077     	MOVAR	_ABPLCON
                                    1- 3078     	.line	480, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 3079     	MOVIA	0x01
     000F 00rr                      1- 3080     	MOVAR	_INTE
                                    1- 3081     	.line	482, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3082     	CLRA	
     0011 000r                      1- 3083     	IOST	_PCON1
                                    1- 3084     	.line	484, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3085     	MOVIA	0x37
     0013 00rr                      1- 3086     	MOVAR	_TMR0
                                    1- 3087     	.line	485, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3088     	MOVIA	0x01
     0015 0003                      1- 3089     	T0MD	
                                    1- 3090     	.line	487, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3091     	IOST	_PCON1
                                    1- 3092     	.line	490, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3093     	MOVIA	0x98
     0018 00rr                      1- 3094     	MOVAR	_PCON
                                    1- 3095     	.line	493, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3096     	MOVIA	0x01
     001A 000r                      1- 3097     	IOST	_PCON1
                                    1- 3098     	.line	494, "main.c"; 	ENI();
     001B 0004                      1- 3099     	ENI
                                    1- 3100     	.line	495, "main.c"; 	closeFlag = 0;
                                    1- 3101     	BANKSEL	_closeFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 3102     	CLRR	_closeFlag
                                    1- 3103     	.line	496, "main.c"; 	}
                                    1- 3104     	RETURN	
     001E 0010                      3-   40 m1      ret
                                    1- 3105     ; exit point of _initSys
                                    1- 3107     ;***
                                    1- 3108     ;  pBlock Stats: dbName = C
                                    1- 3109     ;***
                                    1- 3110     ;has an exit
                                    1- 3111     ;1 compiler assigned register :
                                    1- 3112     ;   r0x105B
                                    1- 3113     ;; Starting pCode block
                                    1- 3114     .segment "code"; module=main, function=_keyRead2
                                    1- 3116     ;local variable name mapping:
     0000                           1- 3118     _keyRead2:
                                    1- 3119     ; 2 exit points
                                    1- 3120     	.line	444, "main.c"; 	char keyRead2(char keyStatus)	
                                    1- 3121     	BANKSEL	r0x105B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 3122     	MOVAR	r0x105B
                                    1- 3123     	.line	446, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 3124     	MOVR	r0x105B,W
     0003 0D03                      1- 3125     	BTRSC	STATUS,2
                                    1- 3126     	MGOTO	_00344_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3127     	.line	448, "main.c"; 	keyCount2++;
                                    1- 3128     	BANKSEL	_keyCount2
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 3129     	INCR	_keyCount2,F
                                    1- 3130     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1- 3131     	.line	449, "main.c"; 	if(keyCount2 >= 20)
     0007 2114                      1- 3132     	MOVIA	0x14
     0008 04rr                      1- 3133     	SUBAR	_keyCount2,W
     0009 0803                      1- 3134     	BTRSS	STATUS,0
                                    1- 3135     	MGOTO	_00345_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3136     	.line	451, "main.c"; 	keyCount2 = 20;
     000B 2114                      1- 3137     	MOVIA	0x14
     000C 00rr                      1- 3138     	MOVAR	_keyCount2
                                    1- 3139     	.line	452, "main.c"; 	return 2;
     000D 2102                      1- 3140     	MOVIA	0x02
                                    1- 3141     	MGOTO	_00346_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3142     ;;unsigned compare: left < lit (0x2=2), size=1
     000F                           1- 3143     _00344_DS_:
                                    1- 3144     	.line	457, "main.c"; 	if(keyCount2 >= 2)
     000F 2102                      1- 3145     	MOVIA	0x02
                                    1- 3146     	BANKSEL	_keyCount2
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 3147     	SUBAR	_keyCount2,W
     0012 0803                      1- 3148     	BTRSS	STATUS,0
                                    1- 3149     	MGOTO	_00342_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3150     	.line	459, "main.c"; 	keyCount2 = 0;
     0014 02rr                      1- 3151     	CLRR	_keyCount2
                                    1- 3152     	.line	460, "main.c"; 	return	1;
     0015 2101                      1- 3153     	MOVIA	0x01
                                    1- 3154     	MGOTO	_00346_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1- 3155     _00342_DS_:
                                    1- 3156     	.line	462, "main.c"; 	keyCount2 = 0;
                                    1- 3157     	BANKSEL	_keyCount2
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1- 3158     	CLRR	_keyCount2
     0019                           1- 3159     _00345_DS_:
                                    1- 3160     	.line	464, "main.c"; 	return 0;
     0019 2100                      1- 3161     	MOVIA	0x00
     001A                           1- 3162     _00346_DS_:
                                    1- 3163     	.line	465, "main.c"; 	}
                                    1- 3164     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 3165     ; exit point of _keyRead2
                                    1- 3167     ;***
                                    1- 3168     ;  pBlock Stats: dbName = C
                                    1- 3169     ;***
                                    1- 3170     ;has an exit
                                    1- 3171     ;1 compiler assigned register :
                                    1- 3172     ;   r0x105C
                                    1- 3173     ;; Starting pCode block
                                    1- 3174     .segment "code"; module=main, function=_keyRead
                                    1- 3176     ;local variable name mapping:
     0000                           1- 3178     _keyRead:
                                    1- 3179     ; 2 exit points
                                    1- 3180     	.line	409, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 3181     	BANKSEL	r0x105C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 3182     	MOVAR	r0x105C
                                    1- 3183     	.line	411, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 3184     	MOVR	r0x105C,W
     0003 0D03                      1- 3185     	BTRSC	STATUS,2
                                    1- 3186     	MGOTO	_00332_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3187     	.line	413, "main.c"; 	keyCount++;
                                    1- 3188     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 3189     	INCR	_keyCount,F
                                    1- 3190     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 3191     	.line	414, "main.c"; 	if(keyCount >= 10)
     0007 210A                      1- 3192     	MOVIA	0x0a
     0008 04rr                      1- 3193     	SUBAR	_keyCount,W
     0009 0803                      1- 3194     	BTRSS	STATUS,0
                                    1- 3195     	MGOTO	_00333_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3196     	.line	416, "main.c"; 	keyCount = 10;
     000B 210A                      1- 3197     	MOVIA	0x0a
     000C 00rr                      1- 3198     	MOVAR	_keyCount
                                    1- 3199     	.line	417, "main.c"; 	if(!longPressFlag)
                                    1- 3200     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 3201     	MOVR	_longPressFlag,W
     000F 0903                      1- 3202     	BTRSS	STATUS,2
                                    1- 3203     	MGOTO	_00333_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3204     	.line	419, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 3205     	MOVIA	0x01
     0012 00rr                      1- 3206     	MOVAR	_longPressFlag
                                    1- 3207     	.line	420, "main.c"; 	return 2;
     0013 2102                      1- 3208     	MOVIA	0x02
                                    1- 3209     	MGOTO	_00334_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3210     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 3211     _00332_DS_:
                                    1- 3212     	.line	426, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 3213     	MOVIA	0x64
                                    1- 3214     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 3215     	SUBAR	_keyCount,W
     0018 0803                      1- 3216     	BTRSS	STATUS,0
                                    1- 3217     	MGOTO	_00329_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3218     	.line	428, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 3219     	CLRR	_keyCount
                                    1- 3220     	.line	429, "main.c"; 	longPressFlag = 0;
                                    1- 3221     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 3222     	CLRR	_longPressFlag
                                    1- 3223     	.line	430, "main.c"; 	return	0;
     001D 2100                      1- 3224     	MOVIA	0x00
                                    1- 3225     	MGOTO	_00334_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3226     ;;unsigned compare: left < lit (0x2=2), size=1
     001F                           1- 3227     _00329_DS_:
                                    1- 3228     	.line	432, "main.c"; 	else if(keyCount >= 2)
     001F 2102                      1- 3229     	MOVIA	0x02
                                    1- 3230     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 3231     	SUBAR	_keyCount,W
     0022 0803                      1- 3232     	BTRSS	STATUS,0
                                    1- 3233     	MGOTO	_00330_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3234     	.line	434, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 3235     	CLRR	_keyCount
                                    1- 3236     	.line	435, "main.c"; 	return	1;
     0025 2101                      1- 3237     	MOVIA	0x01
                                    1- 3238     	MGOTO	_00334_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3239     _00330_DS_:
                                    1- 3240     	.line	437, "main.c"; 	keyCount = 0;
                                    1- 3241     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 3242     	CLRR	_keyCount
     0029                           1- 3243     _00333_DS_:
                                    1- 3244     	.line	439, "main.c"; 	return 0;
     0029 2100                      1- 3245     	MOVIA	0x00
     002A                           1- 3246     _00334_DS_:
                                    1- 3247     	.line	440, "main.c"; 	}
                                    1- 3248     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 3249     ; exit point of _keyRead
                                    1- 3251     ;***
                                    1- 3252     ;  pBlock Stats: dbName = C
                                    1- 3253     ;***
                                    1- 3254     ;has an exit
                                    1- 3255     ;functions called:
                                    1- 3256     ;   _keyRead
                                    1- 3257     ;   _keyRead2
                                    1- 3258     ;   __divuchar
                                    1- 3259     ;   __moduchar
                                    1- 3260     ;   _keyRead
                                    1- 3261     ;   _keyRead2
                                    1- 3262     ;   __divuchar
                                    1- 3263     ;   __moduchar
                                    1- 3264     ;2 compiler assigned registers:
                                    1- 3265     ;   r0x105D
                                    1- 3266     ;   STK00
                                    1- 3267     ;; Starting pCode block
                                    1- 3268     .segment "code"; module=main, function=_keyCtr
                                    1- 3270     ;local variable name mapping:
     0000                           1- 3272     _keyCtr:
                                    1- 3273     ; 2 exit points
                                    1- 3274     	.line	352, "main.c"; 	if(keyRead(0x04 & ~PORTB))
     0000 07rr                      1- 3275     	COMR	_PORTB,W
                                    1- 3276     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3277     	MOVAR	r0x105D
     0003 2104                      1- 3278     	MOVIA	0x04
     0004 10rr                      1- 3279     	ANDAR	r0x105D,F
     0005 01rr                      1- 3280     	MOVR	r0x105D,W
                                    1- 3281     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3282     	BANKSEL	r0x105D
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 3283     	MOVAR	r0x105D
     0009 01rr                      1- 3284     	MOVR	r0x105D,W
     000A 0D03                      1- 3285     	BTRSC	STATUS,2
                                    1- 3286     	MGOTO	_00297_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3287     	.line	355, "main.c"; 	powerTime = 500;
     000C 21F4                      1- 3288     	MOVIA	0xf4
                                    1- 3289     	BANKSEL	_powerTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 3290     	MOVAR	_powerTime
     000F 2101                      1- 3291     	MOVIA	0x01
     0010 00rr                      1- 3292     	MOVAR	(_powerTime + 1)
                                    1- 3293     	.line	356, "main.c"; 	powerFlag = 1;
                                    1- 3294     	BANKSEL	_powerFlag
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 3295     	MOVAR	_powerFlag
                                    1- 3296     	.line	357, "main.c"; 	workStep = 0;
                                    1- 3297     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 3298     	CLRR	_workStep
                                    1- 3299     	.line	358, "main.c"; 	if(overFlag == 1)
                                    1- 3300     	BANKSEL	_overFlag
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 3301     	MOVR	_overFlag,W
     0017 2401                      1- 3302     	XORIA	0x01
     0018 0903                      1- 3303     	BTRSS	STATUS,2
                                    1- 3304     	MGOTO	_00295_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3305     	.line	360, "main.c"; 	overFlag  = shanshuoTime = 0;
                                    1- 3306     	BANKSEL	_shanshuoTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 3307     	CLRR	_shanshuoTime
                                    1- 3308     	BANKSEL	_overFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 3309     	CLRR	_overFlag
     001E                           1- 3310     _00295_DS_:
                                    1- 3311     	.line	362, "main.c"; 	workStepshiwei = workStep/10;
                                    1- 3312     	BANKSEL	_workStepshiwei
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 02rr                      1- 3313     	CLRR	_workStepshiwei
                                    1- 3314     	.line	363, "main.c"; 	workStepgewei = workStep%10;
                                    1- 3315     	BANKSEL	_workStepgewei
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1- 3316     	CLRR	_workStepgewei
     0022                           1- 3317     _00297_DS_:
                                    1- 3318     	.line	366, "main.c"; 	u8t kclick = keyRead2(0x40 & ~PORTA);
                                    1- 3319     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 07rr                      1- 3320     	COMR	_PORTA,W
                                    1- 3321     	BANKSEL	r0x105D
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 3322     	MOVAR	r0x105D
     0026 2140                      1- 3323     	MOVIA	0x40
     0027 10rr                      1- 3324     	ANDAR	r0x105D,F
     0028 01rr                      1- 3325     	MOVR	r0x105D,W
                                    1- 3326     	MCALL	_keyRead2
     0029 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3327     	BANKSEL	r0x105D
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 3328     	MOVAR	r0x105D
                                    1- 3329     	.line	367, "main.c"; 	if(powerFlag && zeroFlag == 0)
                                    1- 3330     	BANKSEL	_powerFlag
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1- 3331     	MOVR	_powerFlag,W
     002E 0D03                      1- 3332     	BTRSC	STATUS,2
                                    1- 3333     	MGOTO	_00317_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3334     	BANKSEL	_zeroFlag
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 3335     	MOVR	_zeroFlag,W
     0032 0903                      1- 3336     	BTRSS	STATUS,2
                                    1- 3337     	MGOTO	_00317_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3338     	.line	369, "main.c"; 	if(kclick)
                                    1- 3339     	BANKSEL	r0x105D
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1- 3340     	MOVR	r0x105D,W
     0036 0D03                      1- 3341     	BTRSC	STATUS,2
                                    1- 3342     	MGOTO	_00312_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3343     	.line	371, "main.c"; 	overFlag = 0;
                                    1- 3344     	BANKSEL	_overFlag
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 3345     	CLRR	_overFlag
                                    1- 3346     	.line	372, "main.c"; 	if(workStep == 0)
                                    1- 3347     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 3348     	MOVR	_workStep,W
     003C 0903                      1- 3349     	BTRSS	STATUS,2
                                    1- 3350     	MGOTO	_00299_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3351     	.line	374, "main.c"; 	workStep = 1;
     003E 2101                      1- 3352     	MOVIA	0x01
     003F 00rr                      1- 3353     	MOVAR	_workStep
                                    1- 3354     	.line	375, "main.c"; 	currentDuty = 220;
     0040 21DC                      1- 3355     	MOVIA	0xdc
                                    1- 3356     	BANKSEL	_currentDuty
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 3357     	MOVAR	_currentDuty
                                    1- 3358     	.line	376, "main.c"; 	PWM1DUTY = 220;
     0043 00rr                      1- 3359     	SFUN	_PWM1DUTY
                                    1- 3360     	.line	377, "main.c"; 	lockKeyFlag = 1;
     0044 2101                      1- 3361     	MOVIA	0x01
                                    1- 3362     	BANKSEL	_lockKeyFlag
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 3363     	MOVAR	_lockKeyFlag
     0047                           1- 3364     _00299_DS_:
                                    1- 3365     	.line	379, "main.c"; 	if(lockKeyFlag == 0)
                                    1- 3366     	BANKSEL	_lockKeyFlag
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1- 3367     	MOVR	_lockKeyFlag,W
     0049 0903                      1- 3368     	BTRSS	STATUS,2
                                    1- 3369     	MGOTO	_00310_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3370     	.line	382, "main.c"; 	if(kclick == 1)
                                    1- 3371     	BANKSEL	r0x105D
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3372     	MOVR	r0x105D,W
     004D 2401                      1- 3373     	XORIA	0x01
     004E 0903                      1- 3374     	BTRSS	STATUS,2
                                    1- 3375     	MGOTO	_00307_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3376     	.line	384, "main.c"; 	if(++workStep > 99)
                                    1- 3377     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 05rr                      1- 3378     	INCR	_workStep,F
                                    1- 3379     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3380     ;;unsigned compare: left >= lit (0x64=100), size=1
     0052 2164                      1- 3381     	MOVIA	0x64
     0053 04rr                      1- 3382     	SUBAR	_workStep,W
     0054 0803                      1- 3383     	BTRSS	STATUS,0
                                    1- 3384     	MGOTO	_00310_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3385     	.line	385, "main.c"; 	workStep = 1;
     0056 2101                      1- 3386     	MOVIA	0x01
     0057 00rr                      1- 3387     	MOVAR	_workStep
                                    1- 3388     	MGOTO	_00310_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3389     _00307_DS_:
                                    1- 3390     	.line	389, "main.c"; 	if(++count100ms >= 5)
                                    1- 3391     	BANKSEL	_count100ms
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 05rr                      1- 3392     	INCR	_count100ms,F
                                    1- 3393     ;;unsigned compare: left < lit (0x5=5), size=1
     005B 2105                      1- 3394     	MOVIA	0x05
     005C 04rr                      1- 3395     	SUBAR	_count100ms,W
     005D 0803                      1- 3396     	BTRSS	STATUS,0
                                    1- 3397     	MGOTO	_00310_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3398     	.line	391, "main.c"; 	count100ms = 0;
     005F 02rr                      1- 3399     	CLRR	_count100ms
                                    1- 3400     	.line	392, "main.c"; 	if(++workStep > 99)
                                    1- 3401     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 3402     	INCR	_workStep,F
                                    1- 3403     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3404     ;;unsigned compare: left >= lit (0x64=100), size=1
     0062 2164                      1- 3405     	MOVIA	0x64
     0063 04rr                      1- 3406     	SUBAR	_workStep,W
     0064 0803                      1- 3407     	BTRSS	STATUS,0
                                    1- 3408     	MGOTO	_00310_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3409     	.line	393, "main.c"; 	workStep = 1;
     0066 2101                      1- 3410     	MOVIA	0x01
     0067 00rr                      1- 3411     	MOVAR	_workStep
     0068                           1- 3412     _00310_DS_:
                                    1- 3413     	.line	397, "main.c"; 	workStepshiwei = workStep/10;
     0068 210A                      1- 3414     	MOVIA	0x0a
     0069 00rr                      1- 3415     	MOVAR	STK00
                                    1- 3416     	BANKSEL	_workStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 3417     	MOVR	_workStep,W
                                    1- 3418     	MCALL	__divuchar
     006C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3419     	BANKSEL	_workStepshiwei
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 00rr                      1- 3420     	MOVAR	_workStepshiwei
                                    1- 3421     	.line	398, "main.c"; 	workStepgewei = workStep%10;
     006F 210A                      1- 3422     	MOVIA	0x0a
     0070 00rr                      1- 3423     	MOVAR	STK00
                                    1- 3424     	BANKSEL	_workStep
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 01rr                      1- 3425     	MOVR	_workStep,W
                                    1- 3426     	MCALL	__moduchar
     0073 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3427     	BANKSEL	_workStepgewei
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 3428     	MOVAR	_workStepgewei
                                    1- 3429     	MGOTO	_00317_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
     0077                           1- 3430     _00312_DS_:
                                    1- 3431     	.line	402, "main.c"; 	lockKeyFlag = 0;
                                    1- 3432     	BANKSEL	_lockKeyFlag
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 02rr                      1- 3433     	CLRR	_lockKeyFlag
     0079                           1- 3434     _00317_DS_:
                                    1- 3435     	.line	405, "main.c"; 	}
                                    1- 3436     	RETURN	
     0079 0010                      3-   40 m1      ret
                                    1- 3437     ; exit point of _keyCtr
                                    1- 3439     ;***
                                    1- 3440     ;  pBlock Stats: dbName = C
                                    1- 3441     ;***
                                    1- 3442     ;functions called:
                                    1- 3443     ;   _pwm1Init
                                    1- 3444     ;   _pwm1Stop
                                    1- 3445     ;   _pwm1Init
                                    1- 3446     ;   _pwm1Stop
                                    1- 3447     ;1 compiler assigned register :
                                    1- 3448     ;   r0x105E
                                    1- 3449     ;; Starting pCode block
                                    1- 3450     .segment "code"; module=main, function=_workCtr
     0000                           1- 3452     _workCtr:
                                    1- 3453     ; 0 exit points
                                    1- 3454     	.line	304, "main.c"; 	if(firstTime > 0)
                                    1- 3455     	BANKSEL	_firstTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3456     	MOVR	_firstTime,W
     0002 0D03                      1- 3457     	BTRSC	STATUS,2
                                    1- 3458     	MGOTO	_00287_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3459     	.line	306, "main.c"; 	firstTime--;
     0004 06rr                      1- 3460     	DECR	_firstTime,F
                                    1- 3461     	.line	307, "main.c"; 	powerTime = 500;
     0005 21F4                      1- 3462     	MOVIA	0xf4
                                    1- 3463     	BANKSEL	_powerTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 3464     	MOVAR	_powerTime
     0008 2101                      1- 3465     	MOVIA	0x01
     0009 00rr                      1- 3466     	MOVAR	(_powerTime + 1)
                                    1- 3467     	MGOTO	_00289_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 3468     _00287_DS_:
                                    1- 3469     	.line	311, "main.c"; 	if(workStep > 0)
                                    1- 3470     	BANKSEL	_workStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 3471     	MOVR	_workStep,W
     000D 0D03                      1- 3472     	BTRSC	STATUS,2
                                    1- 3473     	MGOTO	_00284_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3474     	.line	313, "main.c"; 	if(workStep % 2 == 1)
     000F 2101                      1- 3475     	MOVIA	0x01
     0010 10rr                      1- 3476     	ANDAR	_workStep,W
                                    1- 3477     	BANKSEL	r0x105E
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 3478     	MOVAR	r0x105E
     0013 2401                      1- 3479     	XORIA	0x01
     0014 0903                      1- 3480     	BTRSS	STATUS,2
                                    1- 3481     	MGOTO	_00273_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3482     	.line	315, "main.c"; 	TMRH = 0x00;
     0016 02rr                      1- 3483     	CLRR	_TMRH
                                    1- 3484     	.line	316, "main.c"; 	TMR1 = 254;							//Ƶ��Ϊ110K
     0017 21FE                      1- 3485     	MOVIA	0xfe
     0018 00rr                      1- 3486     	SFUN	_TMR1
                                    1- 3487     	MGOTO	_00274_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 3488     _00273_DS_:
                                    1- 3489     	.line	320, "main.c"; 	TMRH = 0x00;
     001A 02rr                      1- 3490     	CLRR	_TMRH
                                    1- 3491     	.line	321, "main.c"; 	TMR1 = 255;							//Ƶ��Ϊ110K
     001B 21FF                      1- 3492     	MOVIA	0xff
     001C 00rr                      1- 3493     	SFUN	_TMR1
                                    1- 3494     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=1, sign=0, same=0, offr=0
     001D                           1- 3495     _00274_DS_:
                                    1- 3496     	.line	323, "main.c"; 	PWM1DUTY = workStep/2 + 180;
     001D 1C03                      1- 3497     	BCR	STATUS,0
                                    1- 3498     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 13rr                      1- 3499     	RRR	_workStep,W
                                    1- 3500     	BANKSEL	r0x105E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 3501     	MOVAR	r0x105E
     0022 21B4                      1- 3502     	MOVIA	0xb4
     0023 03rr                      1- 3503     	ADDAR	r0x105E,F
     0024 01rr                      1- 3504     	MOVR	r0x105E,W
     0025 00rr                      1- 3505     	SFUN	_PWM1DUTY
                                    1- 3506     	.line	324, "main.c"; 	pwm1Init();
                                    1- 3507     	MCALL	_pwm1Init
     0026 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3508     	MGOTO	_00289_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 3509     _00284_DS_:
                                    1- 3510     	.line	328, "main.c"; 	pwm1Stop();
                                    1- 3511     	MCALL	_pwm1Stop
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3512     	.line	329, "main.c"; 	if(powerTime > 0)
                                    1- 3513     	BANKSEL	_powerTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 3514     	MOVR	_powerTime,W
     002B 11rr                      1- 3515     	IORAR	(_powerTime + 1),W
     002C 0D03                      1- 3516     	BTRSC	STATUS,2
                                    1- 3517     	MGOTO	_00276_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3518     	.line	331, "main.c"; 	powerTime--;
     002E 21FF                      1- 3519     	MOVIA	0xff
     002F 03rr                      1- 3520     	ADDAR	_powerTime,F
     0030 0803                      1- 3521     	BTRSS	STATUS,0
     0031 06rr                      1- 3522     	DECR	(_powerTime + 1),F
                                    1- 3523     	.line	332, "main.c"; 	powerFlag = 1;
     0032 2101                      1- 3524     	MOVIA	0x01
                                    1- 3525     	BANKSEL	_powerFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 3526     	MOVAR	_powerFlag
                                    1- 3527     	MGOTO	_00277_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 3528     _00276_DS_:
                                    1- 3529     	.line	336, "main.c"; 	powerFlag = 0;
                                    1- 3530     	BANKSEL	_powerFlag
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 3531     	CLRR	_powerFlag
     0038                           1- 3532     _00277_DS_:
                                    1- 3533     	.line	338, "main.c"; 	if(overFlag || zeroFlag)
                                    1- 3534     	BANKSEL	_overFlag
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 3535     	MOVR	_overFlag,W
     003A 0903                      1- 3536     	BTRSS	STATUS,2
                                    1- 3537     	MGOTO	_00280_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3538     	BANKSEL	_zeroFlag
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3539     	MOVR	_zeroFlag,W
     003E 0D03                      1- 3540     	BTRSC	STATUS,2
                                    1- 3541     	MGOTO	_00289_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 3542     _00280_DS_:
                                    1- 3543     	.line	340, "main.c"; 	if(++shanshuoTime > 50)
                                    1- 3544     	BANKSEL	_shanshuoTime
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 05rr                      1- 3545     	INCR	_shanshuoTime,F
                                    1- 3546     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3547     ;;unsigned compare: left >= lit (0x33=51), size=1
     0042 2133                      1- 3548     	MOVIA	0x33
     0043 04rr                      1- 3549     	SUBAR	_shanshuoTime,W
     0044 0C03                      1- 3550     	BTRSC	STATUS,0
                                    1- 3551     	.line	341, "main.c"; 	shanshuoTime = 0;
     0045 02rr                      1- 3552     	CLRR	_shanshuoTime
     0046                           1- 3553     _00289_DS_:
                                    1- 3554     	.line	348, "main.c"; 	}
                                    1- 3555     	RETURN	
     0046 0010                      3-   40 m1      ret
                                    1- 3557     ;***
                                    1- 3558     ;  pBlock Stats: dbName = C
                                    1- 3559     ;***
                                    1- 3560     ;has an exit
                                    1- 3561     ;functions called:
                                    1- 3562     ;   _pwm1Stop
                                    1- 3563     ;   _keyCtr
                                    1- 3564     ;   _workCtr
                                    1- 3565     ;   _pwm1Stop
                                    1- 3566     ;   _keyCtr
                                    1- 3567     ;   _workCtr
                                    1- 3568     ;1 compiler assigned register :
                                    1- 3569     ;   r0x105F
                                    1- 3570     ;; Starting pCode block
                                    1- 3571     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 3573     _chrgCtr:
                                    1- 3574     ; 2 exit points
                                    1- 3575     	.line	262, "main.c"; 	if(0x02&PORTA)
                                    1- 3576     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 08rr                      1- 3577     	BTRSS	_PORTA,1
                                    1- 3578     	MGOTO	_00248_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3579     	.line	265, "main.c"; 	zeroFlag = 0;
                                    1- 3580     	BANKSEL	_zeroFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3581     	CLRR	_zeroFlag
                                    1- 3582     	.line	266, "main.c"; 	shanshuoTime = 0;
                                    1- 3583     	BANKSEL	_shanshuoTime
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 3584     	CLRR	_shanshuoTime
                                    1- 3585     	.line	267, "main.c"; 	if(chrgFlag == 0)
                                    1- 3586     	BANKSEL	_chrgFlag
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 3587     	MOVR	_chrgFlag,W
     0009 0903                      1- 3588     	BTRSS	STATUS,2
                                    1- 3589     	MGOTO	_00242_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3590     	.line	269, "main.c"; 	chrgStep = 1;
     000B 2101                      1- 3591     	MOVIA	0x01
                                    1- 3592     	BANKSEL	_chrgStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 3593     	MOVAR	_chrgStep
                                    1- 3594     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3595     ;;unsigned compare: left >= lit (0x618=1560), size=2
                                    1- 3596     	.line	270, "main.c"; 	if(preBatValue > 1559)
     000E 2106                      1- 3597     	MOVIA	0x06
                                    1- 3598     	BANKSEL	_preBatValue
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 3599     	SUBAR	(_preBatValue + 1),W
     0011 0903                      1- 3600     	BTRSS	STATUS,2
                                    1- 3601     	MGOTO	_00267_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013 2118                      1- 3602     	MOVIA	0x18
     0014 04rr                      1- 3603     	SUBAR	_preBatValue,W
     0015                           1- 3604     _00267_DS_:
     0015 0803                      1- 3605     	BTRSS	STATUS,0
                                    1- 3606     	MGOTO	_00240_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3607     	.line	272, "main.c"; 	chrgFullCount = 10000;
     0017 2110                      1- 3608     	MOVIA	0x10
                                    1- 3609     	BANKSEL	_chrgFullCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3610     	MOVAR	_chrgFullCount
     001A 2127                      1- 3611     	MOVIA	0x27
     001B 00rr                      1- 3612     	MOVAR	(_chrgFullCount + 1)
                                    1- 3613     	.line	273, "main.c"; 	chrgFullFlag = 1;
     001C 2101                      1- 3614     	MOVIA	0x01
                                    1- 3615     	BANKSEL	_chrgFullFlag
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 3616     	MOVAR	_chrgFullFlag
     001F                           1- 3617     _00240_DS_:
                                    1- 3618     	.line	275, "main.c"; 	preBatValue = tempBatValue;
                                    1- 3619     	BANKSEL	_tempBatValue
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 3620     	MOVR	_tempBatValue,W
                                    1- 3621     	BANKSEL	_preBatValue
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 3622     	MOVAR	_preBatValue
                                    1- 3623     	BANKSEL	_tempBatValue
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 3624     	MOVR	(_tempBatValue + 1),W
                                    1- 3625     	BANKSEL	_preBatValue
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 3626     	MOVAR	(_preBatValue + 1)
     0027                           1- 3627     _00242_DS_:
                                    1- 3628     	.line	277, "main.c"; 	chrgFlag = 1;
     0027 2101                      1- 3629     	MOVIA	0x01
                                    1- 3630     	BANKSEL	_chrgFlag
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 3631     	MOVAR	_chrgFlag
                                    1- 3632     	.line	278, "main.c"; 	powerFlag = 1;
                                    1- 3633     	BANKSEL	_powerFlag
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 3634     	MOVAR	_powerFlag
                                    1- 3635     	.line	279, "main.c"; 	powerTime = 0;
                                    1- 3636     	BANKSEL	_powerTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1- 3637     	CLRR	_powerTime
     002E 02rr                      1- 3638     	CLRR	(_powerTime + 1)
                                    1- 3639     	.line	280, "main.c"; 	firstTime = 0;
                                    1- 3640     	BANKSEL	_firstTime
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1- 3641     	CLRR	_firstTime
                                    1- 3642     	.line	281, "main.c"; 	workStep = 0;
                                    1- 3643     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 3644     	CLRR	_workStep
                                    1- 3645     	.line	282, "main.c"; 	pwm1Stop();
                                    1- 3646     	MCALL	_pwm1Stop
     0033 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3647     	.line	283, "main.c"; 	if(++count100ms >= 50)
                                    1- 3648     	BANKSEL	_count100ms
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 05rr                      1- 3649     	INCR	_count100ms,F
                                    1- 3650     ;;unsigned compare: left < lit (0x32=50), size=1
     0036 2132                      1- 3651     	MOVIA	0x32
     0037 04rr                      1- 3652     	SUBAR	_count100ms,W
     0038 0803                      1- 3653     	BTRSS	STATUS,0
                                    1- 3654     	MGOTO	_00250_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3655     	.line	285, "main.c"; 	count100ms = 0;
     003A 02rr                      1- 3656     	CLRR	_count100ms
                                    1- 3657     	.line	286, "main.c"; 	if(++chrgStep > 11)
                                    1- 3658     	BANKSEL	_chrgStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 3659     	INCR	_chrgStep,F
                                    1- 3660     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3661     ;;unsigned compare: left >= lit (0xC=12), size=1
     003D 210C                      1- 3662     	MOVIA	0x0c
     003E 04rr                      1- 3663     	SUBAR	_chrgStep,W
     003F 0C03                      1- 3664     	BTRSC	STATUS,0
                                    1- 3665     	.line	288, "main.c"; 	chrgStep = 0;
     0040 02rr                      1- 3666     	CLRR	_chrgStep
                                    1- 3667     	.line	290, "main.c"; 	workStepshiwei = workStepgewei = chrgStep;
     0041 01rr                      1- 3668     	MOVR	_chrgStep,W
                                    1- 3669     	BANKSEL	r0x105F
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3670     	MOVAR	r0x105F
                                    1- 3671     	BANKSEL	_workStepgewei
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 3672     	MOVAR	_workStepgewei
                                    1- 3673     	BANKSEL	r0x105F
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 3674     	MOVR	r0x105F,W
                                    1- 3675     	BANKSEL	_workStepshiwei
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 3676     	MOVAR	_workStepshiwei
                                    1- 3677     	MGOTO	_00250_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 3678     _00248_DS_:
                                    1- 3679     	.line	296, "main.c"; 	chrgFlag = 0;
                                    1- 3680     	BANKSEL	_chrgFlag
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 3681     	CLRR	_chrgFlag
                                    1- 3682     	.line	297, "main.c"; 	keyCtr();
                                    1- 3683     	MCALL	_keyCtr
     004D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3684     	.line	298, "main.c"; 	workCtr();
                                    1- 3685     	MCALL	_workCtr
     004E 2rrr                      3-   66 m1      LCALL rom_address
     004F                           1- 3686     _00250_DS_:
                                    1- 3687     	.line	300, "main.c"; 	}
                                    1- 3688     	RETURN	
     004F 0010                      3-   40 m1      ret
                                    1- 3689     ; exit point of _chrgCtr
                                    1- 3691     ;***
                                    1- 3692     ;  pBlock Stats: dbName = C
                                    1- 3693     ;***
                                    1- 3694     ;has an exit
                                    1- 3695     ;functions called:
                                    1- 3696     ;   _pwm1Stop
                                    1- 3697     ;   _pwm1Stop
                                    1- 3698     ;; Starting pCode block
                                    1- 3699     .segment "code"; module=main, function=_powerOff
     0000                           1- 3701     _powerOff:
                                    1- 3702     ; 2 exit points
                                    1- 3703     	.line	249, "main.c"; 	count900s = 0;
                                    1- 3704     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3705     	CLRR	_count900s
     0002 02rr                      1- 3706     	CLRR	(_count900s + 1)
                                    1- 3707     	.line	250, "main.c"; 	workStep = 0;
                                    1- 3708     	BANKSEL	_workStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3709     	CLRR	_workStep
                                    1- 3710     	.line	251, "main.c"; 	workStepshiwei = workStep/10;
                                    1- 3711     	BANKSEL	_workStepshiwei
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 3712     	CLRR	_workStepshiwei
                                    1- 3713     	.line	252, "main.c"; 	workStepgewei = workStep%10;
                                    1- 3714     	BANKSEL	_workStepgewei
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 3715     	CLRR	_workStepgewei
                                    1- 3716     	.line	253, "main.c"; 	powerFlag = 0;
                                    1- 3717     	BANKSEL	_powerFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 3718     	CLRR	_powerFlag
                                    1- 3719     	.line	254, "main.c"; 	powerTime = 0;
                                    1- 3720     	BANKSEL	_powerTime
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3721     	CLRR	_powerTime
     000D 02rr                      1- 3722     	CLRR	(_powerTime + 1)
                                    1- 3723     	.line	255, "main.c"; 	firstTime = 0;
                                    1- 3724     	BANKSEL	_firstTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 3725     	CLRR	_firstTime
                                    1- 3726     	.line	256, "main.c"; 	pwm1Stop();
                                    1- 3727     	MCALL	_pwm1Stop
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3728     	.line	257, "main.c"; 	}
                                    1- 3729     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3730     ; exit point of _powerOff
                                    1- 3733     ;	code size estimation:
                                    1- 3734     ;	 1476+  408 =  1884 instructions ( 4584 byte)
                                    1- 3736     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
