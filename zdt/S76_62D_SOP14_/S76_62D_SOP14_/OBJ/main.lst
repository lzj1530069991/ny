
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_LedCtr2
                                    1-   18     	extern	_checkInAD
                                    1-   19     	extern	_F_AIN3_Convert
                                    1-   20     	extern	__divuint
                                    1-   21     	extern	_PORTAbits
                                    1-   22     	extern	_PORTBbits
                                    1-   23     	extern	_PCONbits
                                    1-   24     	extern	_BWUCONbits
                                    1-   25     	extern	_ABPLCONbits
                                    1-   26     	extern	_BPHCONbits
                                    1-   27     	extern	_INTEbits
                                    1-   28     	extern	_INTFbits
                                    1-   29     	extern	_ADMDbits
                                    1-   30     	extern	_ADRbits
                                    1-   31     	extern	_ADVREFHbits
                                    1-   32     	extern	_ADCRbits
                                    1-   33     	extern	_AWUCONbits
                                    1-   34     	extern	_PACONbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PCON
                                    1-   47     	extern	_BWUCON
                                    1-   48     	extern	_PCHBUF
                                    1-   49     	extern	_ABPLCON
                                    1-   50     	extern	_BPHCON
                                    1-   51     	extern	_INTE
                                    1-   52     	extern	_INTF
                                    1-   53     	extern	_ADMD
                                    1-   54     	extern	_ADR
                                    1-   55     	extern	_ADD
                                    1-   56     	extern	_ADVREFH
                                    1-   57     	extern	_ADCR
                                    1-   58     	extern	_AWUCON
                                    1-   59     	extern	_PACON
                                    1-   60     	extern	_INTEDG
                                    1-   61     	extern	_TMRH
                                    1-   62     	extern	_ANAEN
                                    1-   63     	extern	_RFC
                                    1-   64     	extern	_TM3RH
                                    1-   65     	extern	_INTE2
                                    1-   66     	extern	_TMR1
                                    1-   67     	extern	_T1CR1
                                    1-   68     	extern	_T1CR2
                                    1-   69     	extern	_PWM1DUTY
                                    1-   70     	extern	_PS1CV
                                    1-   71     	extern	_BZ1CR
                                    1-   72     	extern	_IRCR
                                    1-   73     	extern	_TBHP
                                    1-   74     	extern	_TBHD
                                    1-   75     	extern	_TMR2
                                    1-   76     	extern	_T2CR1
                                    1-   77     	extern	_T2CR2
                                    1-   78     	extern	_PWM2DUTY
                                    1-   79     	extern	_PS2CV
                                    1-   80     	extern	_BZ2CR
                                    1-   81     	extern	_OSCCR
                                    1-   82     	extern	_TMR3
                                    1-   83     	extern	_T3CR1
                                    1-   84     	extern	_T3CR2
                                    1-   85     	extern	_PWM3DUTY
                                    1-   86     	extern	_PS3CV
                                    1-   87     	extern	_BZ3CR
                                    1-   88     	extern	_IOSTA
                                    1-   89     	extern	_IOSTB
                                    1-   90     	extern	_APHCON
                                    1-   91     	extern	_PS0CV
                                    1-   92     	extern	_BODCON
                                    1-   93     	extern	_CMPCR
                                    1-   94     	extern	_PCON1
                                    1-   95     	extern	_T0MD
                                    1-   96     	extern	___sdcc_saved_fsr
                                    1-   97     	extern	___sdcc_saved_stk00
                                    1-   98     	extern	___sdcc_saved_stk01
                                    1-   99     	extern	__mulchar
                                    1-  100     	extern	__nyc_ny8_startup
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     ; global declarations
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     	extern	_F_wait_eoc
                                    1-  105     	extern	_F_AIN2_Convert
                                    1-  106     	extern	_F_AIN4_Convert
                                    1-  107     	extern	_checkOutA
                                    1-  108     	extern	_fgCtr
                                    1-  109     	extern	_checkBatAD
                                    1-  110     	extern	_initAD
                                    1-  111     	extern	_delay
                                    1-  112     	extern	_chrgCtr
                                    1-  113     	extern	_keyRead
                                    1-  114     	extern	_gotoSleep
                                    1-  115     	extern	_pwmStop
                                    1-  116     	extern	_pwmInit
                                    1-  117     	extern	_pwm1Stop
                                    1-  118     	extern	_pwm1Init
                                    1-  119     	extern	_LED6ON
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_intCount
                                    1-  134     	extern	_count500ms
                                    1-  135     	extern	_keyCount
                                    1-  136     	extern	_workStep
                                    1-  137     	extern	_ledStep
                                    1-  138     	extern	_maxDuty
                                    1-  139     	extern	_pwStep
                                    1-  140     	extern	_R_AIN4_DATA
                                    1-  141     	extern	_R_AIN4_DATA_LB
                                    1-  142     	extern	_R_AIN2_DATA
                                    1-  143     	extern	_R_AIN2_DATA_LB
                                    1-  144     	extern	_chrgTime
                                    1-  145     	extern	_startStep
                                    1-  146     	extern	_sleepTime
                                    1-  147     	extern	_count200ms
                                    1-  148     	extern	_count1s
                                    1-  149     	extern	_count900s
                                    1-  150     	extern	_lowBatTime
                                    1-  151     	extern	_ledTime
                                    1-  152     	extern	_overCount
                                    1-  153     	extern	_chrgCount
                                    1-  154     	extern	_ledLightTime
                                    1-  155     	extern	_currentDuty
                                    1-  156     	extern	_fullCount
                                    1-  157     	extern	_shanshuoTime
                                    1-  158     	extern	_firstTime
                                    1-  159     	extern	_tempDuty
                                    1-  160     	extern	_lowCount
                                    1-  161     	extern	_cDuty
                                    1-  162     	extern	_tempLedStep
                                    1-  163     	extern	_count5S
                                    1-  164     	extern	_ledDeadTime
                                    1-  165     	extern	_lockLedStep
                                    1-  166     	extern	_closeCount
                                    1-  167     	extern	_chrgStep
                                    1-  168     	extern	_prePwStep
                                    1-  169     	extern	_chrgduty
                                    1-  170     	extern	_maxduty
                                    1-  171     	extern	_count50ms
                                    1-  172     	extern	_chrgFullFlag
                                    1-  173     	extern	_ledCount
                                    1-  174     	extern	_addTime
                                    1-  175     	extern	_subTime
                                    1-  176     	extern	_subMin
                                    1-  177     	extern	_chrgWaitTime
                                    1-  178     	extern	_tempSum
                                    1-  179     	extern	_count100
                                    1-  180     	extern	_tempResult
                                    1-  181     	extern	_fgCount
                                    1-  182     	extern	_preFG
                                    1-  183     	extern	_fgPRD
                                    1-  184     	extern	_debug
                                    1-  186     	extern PSAVE
                                    1-  187     	extern SSAVE
                                    1-  188     	extern WSAVE
                                    1-  189     	extern STK04
                                    1-  190     	extern STK03
                                    1-  191     	extern STK02
                                    1-  192     	extern STK01
                                    1-  193     	extern STK00
                                    1-  195     .segment "uninit", 0x20000040
 20000040                           1-  196     PSAVE:
                                    1-  197     	.res 1
 20000041                           1-  198     SSAVE:
                                    1-  199     	.res 1
 20000042                           1-  200     WSAVE:
                                    1-  201     	.res 1
 20000043                           1-  202     STK04:
                                    1-  203     	.res 1
 20000044                           1-  204     STK03:
                                    1-  205     	.res 1
 20000045                           1-  206     STK02:
                                    1-  207     	.res 1
 20000046                           1-  208     STK01:
                                    1-  209     	.res 1
 20000047                           1-  210     STK00:
                                    1-  211     	.res 1
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ; global definitions
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN4_DATA:
                                    1-  218     	.res	2
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN4_DATA_LB:
                                    1-  223     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN2_DATA:
                                    1-  228     	.res	2
                                    1-  231     .segment "uninit"
     0000                           1-  232     _R_AIN2_DATA_LB:
                                    1-  233     	.res	1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; absolute symbol definitions
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; compiler-defined variables
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1060:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1059:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x105F:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x105E:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x105D:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x105C:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x105B:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x105A:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1052:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1058:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1053:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1054:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1055:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1057:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x103C:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x103D:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1050:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1051:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x104A:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x104B:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x104C:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x104D:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1044:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1045:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1046:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1049:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x103E:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x103F:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1040:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1043:
                                    1-  331     	.res	1
                                    1-  332     ;--------------------------------------------------------
                                    1-  333     ; initialized data
                                    1-  334     ;--------------------------------------------------------
                                    1-  336     .segment "idata"
     0000                           1-  337     _Status:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _intCount:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _count500ms:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _keyCount:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _workStep:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _ledStep:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _maxDuty:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _pwStep:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _chrgTime:
     0000 0000 0000                 1-  386     	dw	0x00, 0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _startStep:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _sleepTime:
     0000 0000 0000                 1-  398     	dw	0x00, 0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _count200ms:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _count1s:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _count900s:
     0000 0000 0000                 1-  416     	dw	0x00, 0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _lowBatTime:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _ledTime:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _overCount:
     0000 0000                      1-  434     	dw	0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _chrgCount:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _ledLightTime:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _currentDuty:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _fullCount:
     0000 0000 0000                 1-  458     	dw	0x00, 0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _shanshuoTime:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _firstTime:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _tempDuty:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _lowCount:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _cDuty:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _tempLedStep:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _count5S:
     0000 0000 0000                 1-  500     	dw	0x00, 0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _ledDeadTime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _lockLedStep:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _closeCount:
     0000 0000 0000                 1-  518     	dw	0x00, 0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _chrgStep:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _prePwStep:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _chrgduty:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _maxduty:
     0000 0000                      1-  542     	dw	0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _count50ms:
     0000 0000                      1-  548     	dw	0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _chrgFullFlag:
     0000 0000                      1-  554     	dw	0x00
                                    1-  558     .segment "idata"
     0000                           1-  559     _ledCount:
     0000 0000                      1-  560     	dw	0x00
                                    1-  564     .segment "idata"
     0000                           1-  565     _addTime:
     0000 0000                      1-  566     	dw	0x00
                                    1-  570     .segment "idata"
     0000                           1-  571     _subTime:
     0000 0000                      1-  572     	dw	0x00
                                    1-  576     .segment "idata"
     0000                           1-  577     _subMin:
     0000 0000                      1-  578     	dw	0x00
                                    1-  582     .segment "idata"
     0000                           1-  583     _chrgWaitTime:
     0000 0000                      1-  584     	dw	0x00
                                    1-  588     .segment "idata"
     0000                           1-  589     _tempSum:
     0000 0000 0000                 1-  590     	dw	0x00, 0x00
                                    1-  594     .segment "idata"
     0000                           1-  595     _count100:
     0000 0000                      1-  596     	dw	0x00
                                    1-  600     .segment "idata"
     0000                           1-  601     _tempResult:
     0000 0000 0000                 1-  602     	dw	0x00, 0x00
                                    1-  606     .segment "idata"
     0000                           1-  607     _fgCount:
     0000 0000                      1-  608     	dw	0x00
                                    1-  612     .segment "idata"
     0000                           1-  613     _preFG:
     0000 0000                      1-  614     	dw	0x00
                                    1-  618     .segment "idata"
     0000                           1-  619     _fgPRD:
     0000 0000                      1-  620     	dw	0x00
                                    1-  624     .segment "idata"
     0000                           1-  625     _debug:
     0000 0000                      1-  626     	dw	0x00
                                    1-  629     ;--------------------------------------------------------
                                    1-  630     ; overlayable items in internal ram 
                                    1-  631     ;--------------------------------------------------------
                                    1-  632     ;	udata_ovr
                                    1-  633     ;--------------------------------------------------------
                                    1-  634     ; reset vector 
                                    1-  635     ;--------------------------------------------------------
                                    1-  636     ORG	0x0000
     0000 3rrr                      1-  637     	LGOTO	__nyc_ny8_startup
                                    1-  638     ;--------------------------------------------------------
                                    1-  639     ; interrupt and initialization code
                                    1-  640     ;--------------------------------------------------------
                                    1-  641     ORG 0x0008
                                    1-  642     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  644     .segment "code"
     0000                           1-  645     __sdcc_interrupt:
                                    1-  646     ;***
                                    1-  647     ;  pBlock Stats: dbName = I
                                    1-  648     ;***
                                    1-  649     ;2 compiler assigned registers:
                                    1-  650     ;   STK00
                                    1-  651     ;   STK01
                                    1-  652     ;; Starting pCode block
     0000                           1-  653     _isr:
                                    1-  654     ; 0 exit points
                                    1-  655     	.line	123, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  656     	MOVAR	WSAVE
     0001 1503                      1-  657     	SWAPR	STATUS,W
     0002 0283                      1-  658     	CLRR	STATUS
     0003 00rr                      1-  659     	MOVAR	SSAVE
     0004 010A                      1-  660     	MOVR	PCHBUF,W
     0005 028A                      1-  661     	CLRR	PCHBUF
     0006 00rr                      1-  662     	MOVAR	PSAVE
     0007 0104                      1-  663     	MOVR	FSR,W
                                    1-  664     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  665     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  666     	MOVR	STK00,W
                                    1-  667     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  668     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  669     	MOVR	STK01,W
                                    1-  670     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  671     	MOVAR	___sdcc_saved_stk01
                                    1-  672     	.line	125, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  673     	BTRSS	_INTFbits,0
                                    1-  674     	MGOTO	_00128_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  675     	.line	127, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  676     	MOVIA	0x37
     0013 03rr                      1-  677     	ADDAR	_TMR0,F
                                    1-  678     	.line	129, "main.c"; 	if(++intCount >= 100)
                                    1-  679     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  680     	INCR	_intCount,F
                                    1-  681     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  682     	MOVIA	0x64
     0017 04rr                      1-  683     	SUBAR	_intCount,W
     0018 0803                      1-  684     	BTRSS	STATUS,0
                                    1-  685     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  686     	.line	131, "main.c"; 	IntFlag = 1;
                                    1-  687     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  688     	BSR	_Status,0
                                    1-  689     	.line	132, "main.c"; 	intCount = 0;
                                    1-  690     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  691     	CLRR	_intCount
                                    1-  692     	.line	133, "main.c"; 	if(workStep)
                                    1-  693     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  694     	MOVR	_workStep,W
     0020 0D03                      1-  695     	BTRSC	STATUS,2
                                    1-  696     	MGOTO	_00008_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  697     	.line	134, "main.c"; 	++fgCount;
                                    1-  698     	BANKSEL	_fgCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  699     	INCR	_fgCount,F
     0024                           1-  700     _00008_DS_:
                                    1-  701     	.line	135, "main.c"; 	if(++count500ms >= 40)
                                    1-  702     	BANKSEL	_count500ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  703     	INCR	_count500ms,F
     0026 2128                      1-  704     	MOVIA	0x28
     0027 04rr                      1-  705     	SUBAR	_count500ms,W
     0028 0C03                      1-  706     	BTRSC	STATUS,0
                                    1-  707     	.line	136, "main.c"; 	count500ms = 0;
     0029 02rr                      1-  708     	CLRR	_count500ms
                                    1-  709     	.line	137, "main.c"; 	if(++count200ms >= 20)
                                    1-  710     	BANKSEL	_count200ms
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 05rr                      1-  711     	INCR	_count200ms,F
     002C 2114                      1-  712     	MOVIA	0x14
     002D 04rr                      1-  713     	SUBAR	_count200ms,W
     002E 0803                      1-  714     	BTRSS	STATUS,0
                                    1-  715     	MGOTO	_00112_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  716     	.line	139, "main.c"; 	count200ms = 0;
     0030 02rr                      1-  717     	CLRR	_count200ms
                                    1-  718     	.line	140, "main.c"; 	if(ledDeadTime > 0)
                                    1-  719     	BANKSEL	_ledDeadTime
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1-  720     	MOVR	_ledDeadTime,W
     0033 0903                      1-  721     	BTRSS	STATUS,2
                                    1-  722     	.line	141, "main.c"; 	--ledDeadTime;
     0034 06rr                      1-  723     	DECR	_ledDeadTime,F
     0035                           1-  724     _00112_DS_:
                                    1-  725     	.line	143, "main.c"; 	if(++count1s >= 100)
                                    1-  726     	BANKSEL	_count1s
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 05rr                      1-  727     	INCR	_count1s,F
     0037 2164                      1-  728     	MOVIA	0x64
     0038 04rr                      1-  729     	SUBAR	_count1s,W
     0039 0803                      1-  730     	BTRSS	STATUS,0
                                    1-  731     	MGOTO	_00128_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  732     	.line	145, "main.c"; 	count1s = 0;
     003B 02rr                      1-  733     	CLRR	_count1s
                                    1-  734     	.line	146, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  735     	BANKSEL	_Status
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 09rr                      1-  736     	BTRSS	_Status,3
                                    1-  737     	MGOTO	_00114_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  738     	BANKSEL	_pwStep
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  739     	MOVR	_pwStep,W
     0041 2406                      1-  740     	XORIA	0x06
     0042 0903                      1-  741     	BTRSS	STATUS,2
                                    1-  742     	MGOTO	_00114_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  743     	.line	148, "main.c"; 	++chrgTime;
                                    1-  744     	BANKSEL	_chrgTime
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 05rr                      1-  745     	INCR	_chrgTime,F
     0046 0D03                      1-  746     	BTRSC	STATUS,2
     0047 05rr                      1-  747     	INCR	(_chrgTime + 1),F
     0048                           1-  748     _00114_DS_:
                                    1-  749     	.line	151, "main.c"; 	if(ledLightTime > 0)
                                    1-  750     	BANKSEL	_ledLightTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  751     	MOVR	_ledLightTime,W
     004A 0903                      1-  752     	BTRSS	STATUS,2
                                    1-  753     	.line	152, "main.c"; 	--ledLightTime;
     004B 06rr                      1-  754     	DECR	_ledLightTime,F
                                    1-  755     	.line	153, "main.c"; 	if(shanshuoTime > 0)
                                    1-  756     	BANKSEL	_shanshuoTime
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1-  757     	MOVR	_shanshuoTime,W
     004E 0903                      1-  758     	BTRSS	STATUS,2
                                    1-  759     	.line	154, "main.c"; 	--shanshuoTime;
     004F 06rr                      1-  760     	DECR	_shanshuoTime,F
                                    1-  761     	.line	155, "main.c"; 	if(workStep)
                                    1-  762     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  763     	MOVR	_workStep,W
     0052 0D03                      1-  764     	BTRSC	STATUS,2
                                    1-  765     	MGOTO	_00121_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  766     	.line	157, "main.c"; 	++count900s;
                                    1-  767     	BANKSEL	_count900s
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 05rr                      1-  768     	INCR	_count900s,F
     0056 0D03                      1-  769     	BTRSC	STATUS,2
     0057 05rr                      1-  770     	INCR	(_count900s + 1),F
                                    1-  771     	MGOTO	_00128_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1-  772     _00121_DS_:
                                    1-  773     	.line	161, "main.c"; 	count900s = 0;
                                    1-  774     	BANKSEL	_count900s
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1-  775     	CLRR	_count900s
     005B 02rr                      1-  776     	CLRR	(_count900s + 1)
     005C                           1-  777     _00128_DS_:
                                    1-  778     	.line	170, "main.c"; 	if(INTFbits.PABIF)
     005C 08rr                      1-  779     	BTRSS	_INTFbits,1
                                    1-  780     	MGOTO	_00130_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  781     	.line	172, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005E 21FD                      1-  782     	MOVIA	0xfd
     005F 00rr                      1-  783     	MOVAR	_INTF
     0060                           1-  784     _00130_DS_:
                                    1-  785     	.line	175, "main.c"; 	INTF = 0;
     0060 02rr                      1-  786     	CLRR	_INTF
                                    1-  787     	.line	177, "main.c"; 	}
                                    1-  788     	BANKSEL	___sdcc_saved_stk01
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  789     	MOVR	___sdcc_saved_stk01,W
     0063 00rr                      1-  790     	MOVAR	STK01
                                    1-  791     	BANKSEL	___sdcc_saved_stk00
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  792     	MOVR	___sdcc_saved_stk00,W
     0066 00rr                      1-  793     	MOVAR	STK00
                                    1-  794     	BANKSEL	___sdcc_saved_fsr
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  795     	MOVR	___sdcc_saved_fsr,W
     0069 0084                      1-  796     	MOVAR	FSR
     006A 01rr                      1-  797     	MOVR	PSAVE,W
     006B 008A                      1-  798     	MOVAR	PCHBUF
     006C 0283                      1-  799     	CLRR	STATUS
     006D 15rr                      1-  800     	SWAPR	SSAVE,W
     006E 0083                      1-  801     	MOVAR	STATUS
     006F 15rr                      1-  802     	SWAPR	WSAVE,F
     0070 15rr                      1-  803     	SWAPR	WSAVE,W
     0071                           1-  804     END_OF_INTERRUPT:
     0071 0011                      1-  805     	RETIE	
                                    1-  807     ;--------------------------------------------------------
                                    1-  808     ; code
                                    1-  809     ;--------------------------------------------------------
                                    1-  810     ;***
                                    1-  811     ;  pBlock Stats: dbName = M
                                    1-  812     ;***
                                    1-  813     ;has an exit
                                    1-  814     ;functions called:
                                    1-  815     ;   _initSys
                                    1-  816     ;   _initAD
                                    1-  817     ;   _ledShow
                                    1-  818     ;   _fgCtr
                                    1-  819     ;   _pwmStop
                                    1-  820     ;   _powerOff
                                    1-  821     ;   _keyCtr
                                    1-  822     ;   _checkBatAD
                                    1-  823     ;   _checkOutA
                                    1-  824     ;   _chrgCtr
                                    1-  825     ;   _gotoSleep
                                    1-  826     ;   _powerOff
                                    1-  827     ;   _initSys
                                    1-  828     ;   _initAD
                                    1-  829     ;   _ledShow
                                    1-  830     ;   _fgCtr
                                    1-  831     ;   _pwmStop
                                    1-  832     ;   _powerOff
                                    1-  833     ;   _keyCtr
                                    1-  834     ;   _checkBatAD
                                    1-  835     ;   _checkOutA
                                    1-  836     ;   _chrgCtr
                                    1-  837     ;   _gotoSleep
                                    1-  838     ;   _powerOff
                                    1-  839     ;; Starting pCode block
                                    1-  840     .segment "code"; module=main, function=_main
     0000                           1-  842     _main:
                                    1-  843     ; 2 exit points
                                    1-  844     	.line	181, "main.c"; 	initSys();
                                    1-  845     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  846     	.line	182, "main.c"; 	initAD();
                                    1-  847     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  848     _00166_DS_:
                                    1-  849     	.line	185, "main.c"; 	CLRWDT();
     0002 0002                      1-  850     	clrwdt
                                    1-  851     	.line	186, "main.c"; 	ledShow();
                                    1-  852     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  853     	.line	187, "main.c"; 	fgCtr();
                                    1-  854     	MCALL	_fgCtr
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  855     	.line	188, "main.c"; 	if(!IntFlag)
                                    1-  856     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 08rr                      1-  857     	BTRSS	_Status,0
                                    1-  858     	MGOTO	_00166_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  859     	.line	190, "main.c"; 	IntFlag = 0;
     0008 1Crr                      1-  860     	BCR	_Status,0
                                    1-  861     	.line	192, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  862     	BANKSEL	_shanshuoTime
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1-  863     	MOVR	_shanshuoTime,W
     000B 0903                      1-  864     	BTRSS	STATUS,2
                                    1-  865     	MGOTO	_00140_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  866     	BANKSEL	_pwStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  867     	MOVR	_pwStep,W
     000F 0903                      1-  868     	BTRSS	STATUS,2
                                    1-  869     	MGOTO	_00140_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  870     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1-  871     	MOVR	_workStep,W
     0013 0D03                      1-  872     	BTRSC	STATUS,2
                                    1-  873     	MGOTO	_00140_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  874     	.line	194, "main.c"; 	if(++closeCount >= 1000)
                                    1-  875     	BANKSEL	_closeCount
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1-  876     	INCR	_closeCount,F
     0017 0D03                      1-  877     	BTRSC	STATUS,2
     0018 05rr                      1-  878     	INCR	(_closeCount + 1),F
                                    1-  879     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0019 2103                      1-  880     	MOVIA	0x03
     001A 04rr                      1-  881     	SUBAR	(_closeCount + 1),W
     001B 0903                      1-  882     	BTRSS	STATUS,2
                                    1-  883     	MGOTO	_00227_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D 21E8                      1-  884     	MOVIA	0xe8
     001E 04rr                      1-  885     	SUBAR	_closeCount,W
     001F                           1-  886     _00227_DS_:
     001F 0803                      1-  887     	BTRSS	STATUS,0
                                    1-  888     	MGOTO	_00141_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  889     	.line	196, "main.c"; 	closeCount = 0;
                                    1-  890     	BANKSEL	_closeCount
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1-  891     	CLRR	_closeCount
     0023 02rr                      1-  892     	CLRR	(_closeCount + 1)
                                    1-  893     	.line	197, "main.c"; 	workStep = 0;
                                    1-  894     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1-  895     	CLRR	_workStep
                                    1-  896     	.line	198, "main.c"; 	ledStep = 0;
                                    1-  897     	BANKSEL	_ledStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 02rr                      1-  898     	CLRR	_ledStep
                                    1-  899     	.line	199, "main.c"; 	pwmStop();
                                    1-  900     	MCALL	_pwmStop
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  901     	MGOTO	_00141_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1-  902     _00140_DS_:
                                    1-  903     	.line	204, "main.c"; 	closeCount = 0;
                                    1-  904     	BANKSEL	_closeCount
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1-  905     	CLRR	_closeCount
     002C 02rr                      1-  906     	CLRR	(_closeCount + 1)
                                    1-  907     ;;unsigned compare: left < lit (0x5=5), size=1
     002D                           1-  908     _00141_DS_:
                                    1-  909     	.line	207, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002D 2105                      1-  910     	MOVIA	0x05
                                    1-  911     	BANKSEL	_overCount
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 04rr                      1-  912     	SUBAR	_overCount,W
     0030 0803                      1-  913     	BTRSS	STATUS,0
                                    1-  914     	MGOTO	_00147_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  915     	BANKSEL	_workStep
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  916     	MOVR	_workStep,W
     0034 0D03                      1-  917     	BTRSC	STATUS,2
                                    1-  918     	MGOTO	_00147_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  919     	.line	209, "main.c"; 	if(++count5S > 500)
                                    1-  920     	BANKSEL	_count5S
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 05rr                      1-  921     	INCR	_count5S,F
     0038 0D03                      1-  922     	BTRSC	STATUS,2
     0039 05rr                      1-  923     	INCR	(_count5S + 1),F
                                    1-  924     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  925     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     003A 2101                      1-  926     	MOVIA	0x01
     003B 04rr                      1-  927     	SUBAR	(_count5S + 1),W
     003C 0903                      1-  928     	BTRSS	STATUS,2
                                    1-  929     	MGOTO	_00229_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E 21F5                      1-  930     	MOVIA	0xf5
     003F 04rr                      1-  931     	SUBAR	_count5S,W
     0040                           1-  932     _00229_DS_:
     0040 0803                      1-  933     	BTRSS	STATUS,0
                                    1-  934     	MGOTO	_00148_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  935     	.line	211, "main.c"; 	overCount = 0;
                                    1-  936     	BANKSEL	_overCount
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 02rr                      1-  937     	CLRR	_overCount
                                    1-  938     	.line	212, "main.c"; 	count5S = 0;
                                    1-  939     	BANKSEL	_count5S
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 02rr                      1-  940     	CLRR	_count5S
     0046 02rr                      1-  941     	CLRR	(_count5S + 1)
                                    1-  942     	.line	213, "main.c"; 	ledDeadTime = 25;
     0047 2119                      1-  943     	MOVIA	0x19
                                    1-  944     	BANKSEL	_ledDeadTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1-  945     	MOVAR	_ledDeadTime
                                    1-  946     	.line	214, "main.c"; 	powerOff();
                                    1-  947     	MCALL	_powerOff
     004A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  948     	MGOTO	_00148_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1-  949     _00147_DS_:
                                    1-  950     	.line	219, "main.c"; 	count5S = 0;
                                    1-  951     	BANKSEL	_count5S
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1-  952     	CLRR	_count5S
     004E 02rr                      1-  953     	CLRR	(_count5S + 1)
     004F                           1-  954     _00148_DS_:
                                    1-  955     	.line	221, "main.c"; 	if(chrgFlag == 0)
                                    1-  956     	BANKSEL	_Status
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 09rr                      1-  957     	BTRSS	_Status,3
                                    1-  958     	.line	222, "main.c"; 	keyCtr();
                                    1-  959     	MCALL	_keyCtr
     0051 2rrr                      3-   66 m1      LCALL rom_address
     0052                           1-  960     _00151_DS_:
                                    1-  961     	.line	223, "main.c"; 	if(count200ms < 3)
     0052 2103                      1-  962     	MOVIA	0x03
                                    1-  963     	BANKSEL	_count200ms
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 04rr                      1-  964     	SUBAR	_count200ms,W
     0055 0803                      1-  965     	BTRSS	STATUS,0
                                    1-  966     	.line	225, "main.c"; 	checkBatAD();
                                    1-  967     	MCALL	_checkBatAD
     0056 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  968     	.line	227, "main.c"; 	checkOutA();
                                    1-  969     	MCALL	_checkOutA
     0057 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  970     	.line	228, "main.c"; 	chrgCtr();
                                    1-  971     	MCALL	_chrgCtr
     0058 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  972     	.line	231, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1-  973     	BANKSEL	_workStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1-  974     	MOVR	_workStep,W
     005B 0903                      1-  975     	BTRSS	STATUS,2
                                    1-  976     	MGOTO	_00157_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  977     	BANKSEL	_keyCount
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1-  978     	MOVR	_keyCount,W
     005F 0903                      1-  979     	BTRSS	STATUS,2
                                    1-  980     	MGOTO	_00157_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  981     	BANKSEL	_PORTA
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 0Err                      1-  982     	BTRSC	_PORTA,5
                                    1-  983     	MGOTO	_00157_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  984     	BANKSEL	_ledLightTime
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  985     	MOVR	_ledLightTime,W
     0066 0903                      1-  986     	BTRSS	STATUS,2
                                    1-  987     	MGOTO	_00157_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  988     	BANKSEL	_ledDeadTime
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1-  989     	MOVR	_ledDeadTime,W
     006A 0903                      1-  990     	BTRSS	STATUS,2
                                    1-  991     	MGOTO	_00157_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     	BANKSEL	_shanshuoTime
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1-  993     	MOVR	_shanshuoTime,W
     006E 0903                      1-  994     	BTRSS	STATUS,2
                                    1-  995     	MGOTO	_00157_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  996     	.line	233, "main.c"; 	if(++sleepTime > 20)
                                    1-  997     	BANKSEL	_sleepTime
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 05rr                      1-  998     	INCR	_sleepTime,F
     0072 0D03                      1-  999     	BTRSC	STATUS,2
     0073 05rr                      1- 1000     	INCR	(_sleepTime + 1),F
                                    1- 1001     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1002     ;;unsigned compare: left >= lit (0x15=21), size=2
     0074 2100                      1- 1003     	MOVIA	0x00
     0075 04rr                      1- 1004     	SUBAR	(_sleepTime + 1),W
     0076 0903                      1- 1005     	BTRSS	STATUS,2
                                    1- 1006     	MGOTO	_00231_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 2115                      1- 1007     	MOVIA	0x15
     0079 04rr                      1- 1008     	SUBAR	_sleepTime,W
     007A                           1- 1009     _00231_DS_:
     007A 0803                      1- 1010     	BTRSS	STATUS,0
                                    1- 1011     	MGOTO	_00157_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1012     	.line	235, "main.c"; 	gotoSleep();
                                    1- 1013     	MCALL	_gotoSleep
     007C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1014     ;;unsigned compare: left < lit (0x384=900), size=2
     007D                           1- 1015     _00157_DS_:
                                    1- 1016     	.line	239, "main.c"; 	if(count900s >= 900)
     007D 2103                      1- 1017     	MOVIA	0x03
                                    1- 1018     	BANKSEL	_count900s
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 04rr                      1- 1019     	SUBAR	(_count900s + 1),W
     0080 0903                      1- 1020     	BTRSS	STATUS,2
                                    1- 1021     	MGOTO	_00232_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
     0082 2184                      1- 1022     	MOVIA	0x84
     0083 04rr                      1- 1023     	SUBAR	_count900s,W
     0084                           1- 1024     _00232_DS_:
     0084 0803                      1- 1025     	BTRSS	STATUS,0
                                    1- 1026     	MGOTO	_00166_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1027     	.line	241, "main.c"; 	powerOff();
                                    1- 1028     	MCALL	_powerOff
     0086 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1029     	MGOTO	_00166_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	.line	245, "main.c"; 	}
                                    1- 1031     	RETURN	
     0088 0010                      3-   40 m1      ret
                                    1- 1032     ; exit point of _main
                                    1- 1034     ;***
                                    1- 1035     ;  pBlock Stats: dbName = C
                                    1- 1036     ;***
                                    1- 1037     ;has an exit
                                    1- 1038     ;; Starting pCode block
                                    1- 1039     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1041     _F_wait_eoc:
                                    1- 1042     ; 2 exit points
     0000                           1- 1043     _00809_DS_:
                                    1- 1044     	.line	959, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1045     	BTRSS	_ADMDbits,5
                                    1- 1046     	MGOTO	_00809_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1047     	.line	961, "main.c"; 	}
                                    1- 1048     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1049     ; exit point of _F_wait_eoc
                                    1- 1051     ;***
                                    1- 1052     ;  pBlock Stats: dbName = C
                                    1- 1053     ;***
                                    1- 1054     ;has an exit
                                    1- 1055     ;functions called:
                                    1- 1056     ;   _delay
                                    1- 1057     ;   _F_wait_eoc
                                    1- 1058     ;   _delay
                                    1- 1059     ;   _F_wait_eoc
                                    1- 1060     ;6 compiler assigned registers:
                                    1- 1061     ;   r0x103E
                                    1- 1062     ;   r0x103F
                                    1- 1063     ;   r0x1040
                                    1- 1064     ;   r0x1041
                                    1- 1065     ;   r0x1042
                                    1- 1066     ;   r0x1043
                                    1- 1067     ;; Starting pCode block
                                    1- 1068     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1070     ;local variable name mapping:
     0000                           1- 1073     _F_AIN2_Convert:
                                    1- 1074     ; 2 exit points
                                    1- 1075     	.line	942, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1076     	BANKSEL	r0x103E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1077     	MOVAR	r0x103E
                                    1- 1078     	.line	944, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1079     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1080     	CLRR	_R_AIN2_DATA_LB
                                    1- 1081     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1082     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1083     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1084     	.line	946, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1085     	MOVIA	0x94
     0008 00rr                      1- 1086     	MOVAR	_ADMD
                                    1- 1087     	.line	947, "main.c"; 	delay(200);	
     0009 21C8                      1- 1088     	MOVIA	0xc8
                                    1- 1089     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1090     	.line	948, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1091     	MOVIA	0x01
                                    1- 1092     	BANKSEL	r0x103F
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1093     	MOVAR	r0x103F
     000E                           1- 1094     _00802_DS_:
                                    1- 1095     	BANKSEL	r0x103F
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1096     	MOVR	r0x103F,W
                                    1- 1097     	BANKSEL	r0x103E
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1098     	SUBAR	r0x103E,W
     0012 0803                      1- 1099     	BTRSS	STATUS,0
                                    1- 1100     	MGOTO	_00804_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1101     	.line	950, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1102     	BSR	_ADMDbits,6
                                    1- 1103     	.line	951, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1104     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1105     	.line	952, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1106     	MOVIA	0x0f
     0017 10rr                      1- 1107     	ANDAR	_ADR,W
                                    1- 1108     ;;3	MOVAR	r0x1040
                                    1- 1109     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1110     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1111     	.line	953, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1112     	MOVR	_ADD,W
                                    1- 1113     	BANKSEL	r0x1040
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1114     	MOVAR	r0x1040
                                    1- 1115     ;;1	CLRR	r0x1041
                                    1- 1116     ;;105	MOVR	r0x1040,W
                                    1- 1117     ;;103	MOVAR	r0x1042
     001D 2100                      1- 1118     	MOVIA	0x00
                                    1- 1119     	BANKSEL	r0x1043
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1120     	MOVAR	r0x1043
                                    1- 1121     ;;104	MOVR	r0x1042,W
                                    1- 1122     	BANKSEL	r0x1040
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1123     	MOVR	r0x1040,W
                                    1- 1124     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1125     	ADDAR	_R_AIN2_DATA,F
                                    1- 1126     	BANKSEL	r0x1043
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1127     	MOVR	r0x1043,W
     0026 0C03                      1- 1128     	BTRSC	STATUS,0
     0027 05rr                      1- 1129     	INCR	r0x1043,W
     0028 0D03                      1- 1130     	BTRSC	STATUS,2
                                    1- 1131     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1132     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1133     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1134     _00001_DS_:
                                    1- 1135     	.line	948, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1136     	BANKSEL	r0x103F
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1137     	INCR	r0x103F,F
                                    1- 1138     	MGOTO	_00802_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1139     _00804_DS_:
                                    1- 1140     	.line	955, "main.c"; 	}
                                    1- 1141     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1142     ; exit point of _F_AIN2_Convert
                                    1- 1144     ;***
                                    1- 1145     ;  pBlock Stats: dbName = C
                                    1- 1146     ;***
                                    1- 1147     ;has an exit
                                    1- 1148     ;functions called:
                                    1- 1149     ;   _delay
                                    1- 1150     ;   _F_wait_eoc
                                    1- 1151     ;   _delay
                                    1- 1152     ;   _F_wait_eoc
                                    1- 1153     ;6 compiler assigned registers:
                                    1- 1154     ;   r0x1044
                                    1- 1155     ;   r0x1045
                                    1- 1156     ;   r0x1046
                                    1- 1157     ;   r0x1047
                                    1- 1158     ;   r0x1048
                                    1- 1159     ;   r0x1049
                                    1- 1160     ;; Starting pCode block
                                    1- 1161     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1163     ;local variable name mapping:
     0000                           1- 1166     _F_AIN4_Convert:
                                    1- 1167     ; 2 exit points
                                    1- 1168     	.line	927, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1169     	BANKSEL	r0x1044
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1170     	MOVAR	r0x1044
                                    1- 1171     	.line	929, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1172     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1173     	CLRR	_R_AIN4_DATA_LB
                                    1- 1174     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1175     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1176     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1177     	.line	931, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1178     	MOVIA	0x91
     0008 00rr                      1- 1179     	MOVAR	_ADMD
                                    1- 1180     	.line	932, "main.c"; 	delay(200);	
     0009 21C8                      1- 1181     	MOVIA	0xc8
                                    1- 1182     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1183     	.line	933, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1184     	MOVIA	0x01
                                    1- 1185     	BANKSEL	r0x1045
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1186     	MOVAR	r0x1045
     000E                           1- 1187     _00793_DS_:
                                    1- 1188     	BANKSEL	r0x1045
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1189     	MOVR	r0x1045,W
                                    1- 1190     	BANKSEL	r0x1044
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1191     	SUBAR	r0x1044,W
     0012 0803                      1- 1192     	BTRSS	STATUS,0
                                    1- 1193     	MGOTO	_00795_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1194     	.line	935, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1195     	BSR	_ADMDbits,6
                                    1- 1196     	.line	936, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1197     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1198     	.line	937, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1199     	MOVIA	0x0f
     0017 10rr                      1- 1200     	ANDAR	_ADR,W
                                    1- 1201     ;;3	MOVAR	r0x1046
                                    1- 1202     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1203     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1204     	.line	938, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1205     	MOVR	_ADD,W
                                    1- 1206     	BANKSEL	r0x1046
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1207     	MOVAR	r0x1046
                                    1- 1208     ;;1	CLRR	r0x1047
                                    1- 1209     ;;102	MOVR	r0x1046,W
                                    1- 1210     ;;100	MOVAR	r0x1048
     001D 2100                      1- 1211     	MOVIA	0x00
                                    1- 1212     	BANKSEL	r0x1049
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1213     	MOVAR	r0x1049
                                    1- 1214     ;;101	MOVR	r0x1048,W
                                    1- 1215     	BANKSEL	r0x1046
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1216     	MOVR	r0x1046,W
                                    1- 1217     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1218     	ADDAR	_R_AIN4_DATA,F
                                    1- 1219     	BANKSEL	r0x1049
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1220     	MOVR	r0x1049,W
     0026 0C03                      1- 1221     	BTRSC	STATUS,0
     0027 05rr                      1- 1222     	INCR	r0x1049,W
     0028 0D03                      1- 1223     	BTRSC	STATUS,2
                                    1- 1224     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1225     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1226     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1227     _00002_DS_:
                                    1- 1228     	.line	933, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1229     	BANKSEL	r0x1045
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1230     	INCR	r0x1045,F
                                    1- 1231     	MGOTO	_00793_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1232     _00795_DS_:
                                    1- 1233     	.line	940, "main.c"; 	}
                                    1- 1234     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1235     ; exit point of _F_AIN4_Convert
                                    1- 1237     ;***
                                    1- 1238     ;  pBlock Stats: dbName = C
                                    1- 1239     ;***
                                    1- 1240     ;has an exit
                                    1- 1241     ;functions called:
                                    1- 1242     ;   _F_AIN4_Convert
                                    1- 1243     ;   __divuint
                                    1- 1244     ;   __mulchar
                                    1- 1245     ;   __mulchar
                                    1- 1246     ;   _F_AIN4_Convert
                                    1- 1247     ;   __divuint
                                    1- 1248     ;   __mulchar
                                    1- 1249     ;   __mulchar
                                    1- 1250     ;7 compiler assigned registers:
                                    1- 1251     ;   r0x104A
                                    1- 1252     ;   r0x104B
                                    1- 1253     ;   r0x104C
                                    1- 1254     ;   r0x104D
                                    1- 1255     ;   STK02
                                    1- 1256     ;   STK01
                                    1- 1257     ;   STK00
                                    1- 1258     ;; Starting pCode block
                                    1- 1259     .segment "code"; module=main, function=_checkOutA
                                    1- 1261     ;local variable name mapping:
     0000                           1- 1263     _checkOutA:
                                    1- 1264     ; 2 exit points
                                    1- 1265     	.line	830, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1266     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1267     	CLRR	_R_AIN4_DATA_LB
                                    1- 1268     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1269     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1270     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1271     	.line	831, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1272     	MOVIA	0x08
                                    1- 1273     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1274     	.line	832, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1275     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1276     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1277     	ANDIA	0xf0
     000A 00rr                      1- 1278     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1279     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1280     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1281     	ANDIA	0x0f
     000E 11rr                      1- 1282     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1283     	XORAR	_R_AIN4_DATA,F
                                    1- 1284     	.line	833, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1285     	MOVIA	0xf0
                                    1- 1286     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1287     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1288     	.line	834, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1289     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1290     	BANKSEL	r0x104C
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1291     	MOVAR	r0x104C
                                    1- 1292     	BANKSEL	r0x104A
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1293     	MOVAR	r0x104A
                                    1- 1294     	BANKSEL	r0x104B
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1295     	CLRR	r0x104B
                                    1- 1296     ;;106	MOVR	r0x104A,W
     001A 2100                      1- 1297     	MOVIA	0x00
                                    1- 1298     	BANKSEL	r0x104D
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1299     	MOVAR	r0x104D
                                    1- 1300     	BANKSEL	r0x104C
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1301     	MOVR	r0x104C,W
                                    1- 1302     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1303     	ADDAR	_R_AIN4_DATA,F
                                    1- 1304     	BANKSEL	r0x104D
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1305     	MOVR	r0x104D,W
     0023 0C03                      1- 1306     	BTRSC	STATUS,0
     0024 05rr                      1- 1307     	INCR	r0x104D,W
     0025 0D03                      1- 1308     	BTRSC	STATUS,2
                                    1- 1309     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1310     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1311     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1312     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1313     _00003_DS_:
                                    1- 1314     	.line	835, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1315     	BCR	STATUS,0
                                    1- 1316     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1317     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1318     	RRR	_R_AIN4_DATA,F
                                    1- 1319     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1320     	BCR	STATUS,0
     002E 13rr                      1- 1321     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1322     	RRR	_R_AIN4_DATA,F
                                    1- 1323     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1324     	BCR	STATUS,0
     0031 13rr                      1- 1325     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1326     	RRR	_R_AIN4_DATA,F
                                    1- 1327     	.line	836, "main.c"; 	tempSum += R_AIN4_DATA;
     0033 01rr                      1- 1328     	MOVR	_R_AIN4_DATA,W
                                    1- 1329     	BANKSEL	_tempSum
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 03rr                      1- 1330     	ADDAR	_tempSum,F
                                    1- 1331     	BANKSEL	_R_AIN4_DATA
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 1332     	MOVR	(_R_AIN4_DATA + 1),W
     0038 0C03                      1- 1333     	BTRSC	STATUS,0
     0039 05rr                      1- 1334     	INCR	(_R_AIN4_DATA + 1),W
     003A 0D03                      1- 1335     	BTRSC	STATUS,2
                                    1- 1336     	MGOTO	_00004_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1337     	BANKSEL	_tempSum
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 03rr                      1- 1338     	ADDAR	(_tempSum + 1),F
     003E                           1- 1339     _00004_DS_:
                                    1- 1340     	.line	837, "main.c"; 	if(++count100 >= 3)
                                    1- 1341     	BANKSEL	_count100
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1- 1342     	INCR	_count100,F
                                    1- 1343     ;;unsigned compare: left < lit (0x3=3), size=1
     0040 2103                      1- 1344     	MOVIA	0x03
     0041 04rr                      1- 1345     	SUBAR	_count100,W
     0042 0803                      1- 1346     	BTRSS	STATUS,0
                                    1- 1347     	MGOTO	_00679_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1348     	.line	839, "main.c"; 	count100 = 0;
     0044 02rr                      1- 1349     	CLRR	_count100
                                    1- 1350     	.line	840, "main.c"; 	tempResult = tempSum/3;
     0045 2103                      1- 1351     	MOVIA	0x03
     0046 00rr                      1- 1352     	MOVAR	STK02
     0047 2100                      1- 1353     	MOVIA	0x00
     0048 00rr                      1- 1354     	MOVAR	STK01
                                    1- 1355     	BANKSEL	_tempSum
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 1356     	MOVR	_tempSum,W
     004B 00rr                      1- 1357     	MOVAR	STK00
     004C 01rr                      1- 1358     	MOVR	(_tempSum + 1),W
                                    1- 1359     	MCALL	__divuint
     004D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1360     	BANKSEL	_tempResult
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1361     	MOVAR	(_tempResult + 1)
     0050 01rr                      1- 1362     	MOVR	STK00,W
     0051 00rr                      1- 1363     	MOVAR	_tempResult
                                    1- 1364     	.line	841, "main.c"; 	tempSum = 0;
                                    1- 1365     	BANKSEL	_tempSum
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1- 1366     	CLRR	_tempSum
     0054 02rr                      1- 1367     	CLRR	(_tempSum + 1)
                                    1- 1368     ;;unsigned compare: left < lit (0x6=6), size=1
     0055                           1- 1369     _00679_DS_:
                                    1- 1370     	.line	844, "main.c"; 	if(workStep < 6 && tempResult > 200)
     0055 2106                      1- 1371     	MOVIA	0x06
                                    1- 1372     	BANKSEL	_workStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 04rr                      1- 1373     	SUBAR	_workStep,W
     0058 0C03                      1- 1374     	BTRSC	STATUS,0
                                    1- 1375     	MGOTO	_00716_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1376     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1377     ;;unsigned compare: left >= lit (0xC9=201), size=2
     005A 2100                      1- 1378     	MOVIA	0x00
                                    1- 1379     	BANKSEL	_tempResult
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1- 1380     	SUBAR	(_tempResult + 1),W
     005D 0903                      1- 1381     	BTRSS	STATUS,2
                                    1- 1382     	MGOTO	_00779_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F 21C9                      1- 1383     	MOVIA	0xc9
     0060 04rr                      1- 1384     	SUBAR	_tempResult,W
     0061                           1- 1385     _00779_DS_:
     0061 0803                      1- 1386     	BTRSS	STATUS,0
                                    1- 1387     	MGOTO	_00716_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1388     	.line	846, "main.c"; 	if(++overCount > 5)
                                    1- 1389     	BANKSEL	_overCount
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 05rr                      1- 1390     	INCR	_overCount,F
                                    1- 1391     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1392     ;;unsigned compare: left >= lit (0x6=6), size=1
     0065 2106                      1- 1393     	MOVIA	0x06
     0066 04rr                      1- 1394     	SUBAR	_overCount,W
     0067 0803                      1- 1395     	BTRSS	STATUS,0
                                    1- 1396     	MGOTO	_00717_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1397     	.line	848, "main.c"; 	overCount = 5;
     0069 2105                      1- 1398     	MOVIA	0x05
     006A 00rr                      1- 1399     	MOVAR	_overCount
                                    1- 1400     	MGOTO	_00717_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1401     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1402     ;;unsigned compare: left >= lit (0x191=401), size=2
     006C                           1- 1403     _00716_DS_:
                                    1- 1404     	.line	851, "main.c"; 	else if(tempResult > 400)
     006C 2101                      1- 1405     	MOVIA	0x01
                                    1- 1406     	BANKSEL	_tempResult
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 04rr                      1- 1407     	SUBAR	(_tempResult + 1),W
     006F 0903                      1- 1408     	BTRSS	STATUS,2
                                    1- 1409     	MGOTO	_00781_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071 2191                      1- 1410     	MOVIA	0x91
     0072 04rr                      1- 1411     	SUBAR	_tempResult,W
     0073                           1- 1412     _00781_DS_:
     0073 0803                      1- 1413     	BTRSS	STATUS,0
                                    1- 1414     	MGOTO	_00713_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1415     	.line	853, "main.c"; 	if(++overCount > 5)
                                    1- 1416     	BANKSEL	_overCount
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 05rr                      1- 1417     	INCR	_overCount,F
                                    1- 1418     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1419     ;;unsigned compare: left >= lit (0x6=6), size=1
     0077 2106                      1- 1420     	MOVIA	0x06
     0078 04rr                      1- 1421     	SUBAR	_overCount,W
     0079 0803                      1- 1422     	BTRSS	STATUS,0
                                    1- 1423     	MGOTO	_00717_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1424     	.line	855, "main.c"; 	overCount = 5;
     007B 2105                      1- 1425     	MOVIA	0x05
     007C 00rr                      1- 1426     	MOVAR	_overCount
                                    1- 1427     	MGOTO	_00717_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1428     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1429     ;;unsigned compare: left >= lit (0x45=69), size=2
     007E                           1- 1430     _00713_DS_:
                                    1- 1431     	.line	863, "main.c"; 	else if(tempResult > 68)
     007E 2100                      1- 1432     	MOVIA	0x00
                                    1- 1433     	BANKSEL	_tempResult
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1434     	SUBAR	(_tempResult + 1),W
     0081 0903                      1- 1435     	BTRSS	STATUS,2
                                    1- 1436     	MGOTO	_00783_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 2145                      1- 1437     	MOVIA	0x45
     0084 04rr                      1- 1438     	SUBAR	_tempResult,W
     0085                           1- 1439     _00783_DS_:
     0085 0803                      1- 1440     	BTRSS	STATUS,0
                                    1- 1441     	MGOTO	_00710_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1442     	.line	865, "main.c"; 	if(overCount > 0)
                                    1- 1443     	BANKSEL	_overCount
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 01rr                      1- 1444     	MOVR	_overCount,W
     0089 0903                      1- 1445     	BTRSS	STATUS,2
                                    1- 1446     	.line	867, "main.c"; 	overCount--;
     008A 06rr                      1- 1447     	DECR	_overCount,F
                                    1- 1448     	.line	870, "main.c"; 	tempDuty = 69 + workStep*5;
     008B 2105                      1- 1449     	MOVIA	0x05
     008C 00rr                      1- 1450     	MOVAR	STK00
                                    1- 1451     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 1452     	MOVR	_workStep,W
                                    1- 1453     	MCALL	__mulchar
     008F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1454     	BANKSEL	r0x104A
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 00rr                      1- 1455     	MOVAR	r0x104A
     0092 2145                      1- 1456     	MOVIA	0x45
     0093 03rr                      1- 1457     	ADDAR	r0x104A,W
                                    1- 1458     	BANKSEL	_tempDuty
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 00rr                      1- 1459     	MOVAR	_tempDuty
                                    1- 1460     	MGOTO	_00717_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
     0097                           1- 1461     _00710_DS_:
                                    1- 1462     	.line	875, "main.c"; 	u8t maxAout = 40;
     0097 2128                      1- 1463     	MOVIA	0x28
                                    1- 1464     	BANKSEL	r0x104A
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 1465     	MOVAR	r0x104A
                                    1- 1466     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1467     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 1468     	.line	876, "main.c"; 	if(pwStep > 3)
     009A 2104                      1- 1469     	MOVIA	0x04
                                    1- 1470     	BANKSEL	_pwStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1471     	SUBAR	_pwStep,W
     009D 0803                      1- 1472     	BTRSS	STATUS,0
                                    1- 1473     	MGOTO	_00687_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1474     	.line	877, "main.c"; 	maxAout = 45;
     009F 212D                      1- 1475     	MOVIA	0x2d
                                    1- 1476     	BANKSEL	r0x104A
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 1477     	MOVAR	r0x104A
     00A2                           1- 1478     _00687_DS_:
                                    1- 1479     	.line	878, "main.c"; 	if(workStep == 1)
                                    1- 1480     	BANKSEL	_workStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 01rr                      1- 1481     	MOVR	_workStep,W
     00A4 2401                      1- 1482     	XORIA	0x01
     00A5 0903                      1- 1483     	BTRSS	STATUS,2
                                    1- 1484     	MGOTO	_00700_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1485     	.line	880, "main.c"; 	maxAout = maxAout - 15;
     00A7 21F1                      1- 1486     	MOVIA	0xf1
                                    1- 1487     	BANKSEL	r0x104A
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 03rr                      1- 1488     	ADDAR	r0x104A,F
                                    1- 1489     	MGOTO	_00701_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
     00AB                           1- 1490     _00700_DS_:
                                    1- 1491     	.line	882, "main.c"; 	else if(workStep == 2)
                                    1- 1492     	BANKSEL	_workStep
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 01rr                      1- 1493     	MOVR	_workStep,W
     00AD 2402                      1- 1494     	XORIA	0x02
     00AE 0903                      1- 1495     	BTRSS	STATUS,2
                                    1- 1496     	MGOTO	_00697_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1497     	.line	884, "main.c"; 	maxAout = maxAout - 12;
     00B0 21F4                      1- 1498     	MOVIA	0xf4
                                    1- 1499     	BANKSEL	r0x104A
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 03rr                      1- 1500     	ADDAR	r0x104A,F
                                    1- 1501     	MGOTO	_00701_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 1502     _00697_DS_:
                                    1- 1503     	.line	886, "main.c"; 	else if(workStep == 3)
                                    1- 1504     	BANKSEL	_workStep
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 1505     	MOVR	_workStep,W
     00B6 2403                      1- 1506     	XORIA	0x03
     00B7 0903                      1- 1507     	BTRSS	STATUS,2
                                    1- 1508     	MGOTO	_00694_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1509     	.line	888, "main.c"; 	maxAout = maxAout - 5;
     00B9 21FB                      1- 1510     	MOVIA	0xfb
                                    1- 1511     	BANKSEL	r0x104A
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 03rr                      1- 1512     	ADDAR	r0x104A,F
                                    1- 1513     	MGOTO	_00701_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
     00BD                           1- 1514     _00694_DS_:
                                    1- 1515     	.line	890, "main.c"; 	else if(workStep == 5)
                                    1- 1516     	BANKSEL	_workStep
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 1517     	MOVR	_workStep,W
     00BF 2405                      1- 1518     	XORIA	0x05
     00C0 0903                      1- 1519     	BTRSS	STATUS,2
                                    1- 1520     	MGOTO	_00691_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1521     	.line	892, "main.c"; 	maxAout = maxAout + 1;
                                    1- 1522     	BANKSEL	r0x104A
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 05rr                      1- 1523     	INCR	r0x104A,F
                                    1- 1524     	MGOTO	_00701_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
     00C5                           1- 1525     _00691_DS_:
                                    1- 1526     	.line	894, "main.c"; 	else if(workStep == 6)
                                    1- 1527     	BANKSEL	_workStep
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1528     	MOVR	_workStep,W
     00C7 2406                      1- 1529     	XORIA	0x06
     00C8 0903                      1- 1530     	BTRSS	STATUS,2
                                    1- 1531     	MGOTO	_00701_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1532     	.line	896, "main.c"; 	maxAout = maxAout + 5;
     00CA 2105                      1- 1533     	MOVIA	0x05
                                    1- 1534     	BANKSEL	r0x104A
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 03rr                      1- 1535     	ADDAR	r0x104A,F
     00CD                           1- 1536     _00701_DS_:
                                    1- 1537     	.line	898, "main.c"; 	if(overCount > 0)
                                    1- 1538     	BANKSEL	_overCount
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 01rr                      1- 1539     	MOVR	_overCount,W
     00CF 0903                      1- 1540     	BTRSS	STATUS,2
                                    1- 1541     	.line	900, "main.c"; 	overCount--;
     00D0 06rr                      1- 1542     	DECR	_overCount,F
                                    1- 1543     	.line	902, "main.c"; 	if(tempResult > maxAout)
                                    1- 1544     	BANKSEL	r0x104A
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 1545     	MOVR	r0x104A,W
                                    1- 1546     	BANKSEL	r0x104B
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 1547     	MOVAR	r0x104B
                                    1- 1548     	BANKSEL	r0x104C
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 02rr                      1- 1549     	CLRR	r0x104C
                                    1- 1550     	BANKSEL	_tempResult
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 01rr                      1- 1551     	MOVR	(_tempResult + 1),W
                                    1- 1552     	BANKSEL	r0x104C
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 04rr                      1- 1553     	SUBAR	r0x104C,W
     00DB 0903                      1- 1554     	BTRSS	STATUS,2
                                    1- 1555     	MGOTO	_00785_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1556     	BANKSEL	_tempResult
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 01rr                      1- 1557     	MOVR	_tempResult,W
                                    1- 1558     	BANKSEL	r0x104B
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 04rr                      1- 1559     	SUBAR	r0x104B,W
     00E1                           1- 1560     _00785_DS_:
     00E1 0C03                      1- 1561     	BTRSC	STATUS,0
                                    1- 1562     	MGOTO	_00707_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1563     	.line	904, "main.c"; 	tempDuty = 69 + workStep*5;
     00E3 2105                      1- 1564     	MOVIA	0x05
     00E4 00rr                      1- 1565     	MOVAR	STK00
                                    1- 1566     	BANKSEL	_workStep
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 01rr                      1- 1567     	MOVR	_workStep,W
                                    1- 1568     	MCALL	__mulchar
     00E7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1569     	BANKSEL	r0x104A
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 00rr                      1- 1570     	MOVAR	r0x104A
     00EA 2145                      1- 1571     	MOVIA	0x45
     00EB 03rr                      1- 1572     	ADDAR	r0x104A,W
                                    1- 1573     	BANKSEL	_tempDuty
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1- 1574     	MOVAR	_tempDuty
                                    1- 1575     	MGOTO	_00717_DS_
     00EE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1576     ;;unsigned compare: left < lit (0x64=100), size=2
     00EF                           1- 1577     _00707_DS_:
                                    1- 1578     	.line	907, "main.c"; 	else if(tempResult < 100)
     00EF 2100                      1- 1579     	MOVIA	0x00
                                    1- 1580     	BANKSEL	_tempResult
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 04rr                      1- 1581     	SUBAR	(_tempResult + 1),W
     00F2 0903                      1- 1582     	BTRSS	STATUS,2
                                    1- 1583     	MGOTO	_00786_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
     00F4 2164                      1- 1584     	MOVIA	0x64
     00F5 04rr                      1- 1585     	SUBAR	_tempResult,W
     00F6                           1- 1586     _00786_DS_:
     00F6 0C03                      1- 1587     	BTRSC	STATUS,0
                                    1- 1588     	MGOTO	_00717_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1589     	.line	910, "main.c"; 	tempDuty = maxDuty;
                                    1- 1590     	BANKSEL	_maxDuty
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 01rr                      1- 1591     	MOVR	_maxDuty,W
                                    1- 1592     	BANKSEL	_tempDuty
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 00rr                      1- 1593     	MOVAR	_tempDuty
     00FC                           1- 1594     _00717_DS_:
                                    1- 1595     	.line	914, "main.c"; 	PWM3DUTY = 100 - tempDuty;
                                    1- 1596     	BANKSEL	_tempDuty
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 01rr                      1- 1597     	MOVR	_tempDuty,W
     00FE 2764                      1- 1598     	SUBIA	0x64
                                    1- 1599     	BANKSEL	r0x104A
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 00rr                      1- 1600     	MOVAR	r0x104A
     0101 00rr                      1- 1601     	SFUN	_PWM3DUTY
                                    1- 1602     	.line	915, "main.c"; 	if(workStep > 0)
                                    1- 1603     	BANKSEL	_workStep
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 01rr                      1- 1604     	MOVR	_workStep,W
     0104 0D03                      1- 1605     	BTRSC	STATUS,2
                                    1- 1606     	MGOTO	_00721_DS_
     0105 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1607     	.line	916, "main.c"; 	ledStep = workStep;
     0106 01rr                      1- 1608     	MOVR	_workStep,W
                                    1- 1609     	BANKSEL	_ledStep
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 00rr                      1- 1610     	MOVAR	_ledStep
     0109                           1- 1611     _00721_DS_:
                                    1- 1612     	.line	920, "main.c"; 	}
                                    1- 1613     	RETURN	
     0109 0010                      3-   40 m1      ret
                                    1- 1614     ; exit point of _checkOutA
                                    1- 1616     ;***
                                    1- 1617     ;  pBlock Stats: dbName = C
                                    1- 1618     ;***
                                    1- 1619     ;has an exit
                                    1- 1620     ;; Starting pCode block
                                    1- 1621     .segment "code"; module=main, function=_fgCtr
     0000                           1- 1623     _fgCtr:
                                    1- 1624     ; 2 exit points
                                    1- 1625     	.line	811, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 1626     	BTRSS	_PORTB,0
                                    1- 1627     	MGOTO	_00671_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1628     	.line	813, "main.c"; 	if(preFG == 0)
                                    1- 1629     	BANKSEL	_preFG
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 1630     	MOVR	_preFG,W
     0004 0903                      1- 1631     	BTRSS	STATUS,2
                                    1- 1632     	MGOTO	_00669_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1633     	.line	815, "main.c"; 	fgPRD = fgCount;
                                    1- 1634     	BANKSEL	_fgCount
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1- 1635     	MOVR	_fgCount,W
                                    1- 1636     	BANKSEL	_fgPRD
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1637     	MOVAR	_fgPRD
                                    1- 1638     	.line	816, "main.c"; 	fgCount = 0;
                                    1- 1639     	BANKSEL	_fgCount
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 1640     	CLRR	_fgCount
     000C                           1- 1641     _00669_DS_:
                                    1- 1642     	.line	818, "main.c"; 	preFG = 1;
     000C 2101                      1- 1643     	MOVIA	0x01
                                    1- 1644     	BANKSEL	_preFG
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1645     	MOVAR	_preFG
                                    1- 1646     	MGOTO	_00673_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
     0010                           1- 1647     _00671_DS_:
                                    1- 1648     	.line	822, "main.c"; 	preFG = 0;
                                    1- 1649     	BANKSEL	_preFG
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 1650     	CLRR	_preFG
     0012                           1- 1651     _00673_DS_:
                                    1- 1652     	.line	824, "main.c"; 	}
                                    1- 1653     	RETURN	
     0012 0010                      3-   40 m1      ret
                                    1- 1654     ; exit point of _fgCtr
                                    1- 1656     ;***
                                    1- 1657     ;  pBlock Stats: dbName = C
                                    1- 1658     ;***
                                    1- 1659     ;has an exit
                                    1- 1660     ;functions called:
                                    1- 1661     ;   _F_AIN2_Convert
                                    1- 1662     ;   _F_AIN2_Convert
                                    1- 1663     ;4 compiler assigned registers:
                                    1- 1664     ;   r0x104E
                                    1- 1665     ;   r0x104F
                                    1- 1666     ;   r0x1050
                                    1- 1667     ;   r0x1051
                                    1- 1668     ;; Starting pCode block
                                    1- 1669     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1671     _checkBatAD:
                                    1- 1672     ; 2 exit points
                                    1- 1673     	.line	756, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1674     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1675     	CLRR	_R_AIN2_DATA_LB
                                    1- 1676     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1677     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1678     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1679     	.line	757, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1680     	MOVIA	0x08
                                    1- 1681     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1682     	.line	758, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1683     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1684     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1685     	ANDIA	0xf0
     000A 00rr                      1- 1686     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1687     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1688     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1689     	ANDIA	0x0f
     000E 11rr                      1- 1690     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1691     	XORAR	_R_AIN2_DATA,F
                                    1- 1692     	.line	759, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1693     	MOVIA	0xf0
                                    1- 1694     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1695     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1696     	.line	760, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1697     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1698     	BANKSEL	r0x1050
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1699     	MOVAR	r0x1050
                                    1- 1700     ;;1	MOVAR	r0x104E
                                    1- 1701     ;;1	CLRR	r0x104F
                                    1- 1702     ;;99	MOVR	r0x104E,W
     0016 2100                      1- 1703     	MOVIA	0x00
                                    1- 1704     	BANKSEL	r0x1051
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1705     	MOVAR	r0x1051
                                    1- 1706     	BANKSEL	r0x1050
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1707     	MOVR	r0x1050,W
                                    1- 1708     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1709     	ADDAR	_R_AIN2_DATA,F
                                    1- 1710     	BANKSEL	r0x1051
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1711     	MOVR	r0x1051,W
     001F 0C03                      1- 1712     	BTRSC	STATUS,0
     0020 05rr                      1- 1713     	INCR	r0x1051,W
     0021 0D03                      1- 1714     	BTRSC	STATUS,2
                                    1- 1715     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1716     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1717     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1718     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1719     _00005_DS_:
                                    1- 1720     	.line	761, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1721     	BCR	STATUS,0
                                    1- 1722     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1723     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1724     	RRR	_R_AIN2_DATA,F
                                    1- 1725     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1726     	BCR	STATUS,0
     002A 13rr                      1- 1727     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1728     	RRR	_R_AIN2_DATA,F
                                    1- 1729     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1730     	BCR	STATUS,0
     002D 13rr                      1- 1731     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1732     	RRR	_R_AIN2_DATA,F
                                    1- 1733     	.line	762, "main.c"; 	if(debug)
                                    1- 1734     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1735     	MOVR	_debug,W
     0031 0D03                      1- 1736     	BTRSC	STATUS,2
                                    1- 1737     	MGOTO	_00581_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1738     	.line	763, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1739     	MOVIA	0x0e
                                    1- 1740     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1741     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1742     	MOVIA	0x06
     0037 00rr                      1- 1743     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1744     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1745     ;;unsigned compare: left >= lit (0x623=1571), size=2
     0038                           1- 1746     _00581_DS_:
                                    1- 1747     	.line	765, "main.c"; 	if(R_AIN2_DATA > 1570)
     0038 2106                      1- 1748     	MOVIA	0x06
                                    1- 1749     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1750     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1751     	BTRSS	STATUS,2
                                    1- 1752     	MGOTO	_00655_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 2123                      1- 1753     	MOVIA	0x23
     003E 04rr                      1- 1754     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1755     _00655_DS_:
     003F 0803                      1- 1756     	BTRSS	STATUS,0
                                    1- 1757     	MGOTO	_00606_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1758     	.line	768, "main.c"; 	lowCount = 0;
                                    1- 1759     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1760     	CLRR	_lowCount
                                    1- 1761     	.line	769, "main.c"; 	pwStep = 8;
     0043 2108                      1- 1762     	MOVIA	0x08
                                    1- 1763     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1764     	MOVAR	_pwStep
                                    1- 1765     	MGOTO	_00607_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1766     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0047                           1- 1767     _00606_DS_:
                                    1- 1768     	.line	771, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0047 2104                      1- 1769     	MOVIA	0x04
                                    1- 1770     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1771     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1772     	BTRSS	STATUS,2
                                    1- 1773     	MGOTO	_00656_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 217E                      1- 1774     	MOVIA	0x7e
     004D 04rr                      1- 1775     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1776     _00656_DS_:
     004E 0C03                      1- 1777     	BTRSC	STATUS,0
                                    1- 1778     	MGOTO	_00603_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1779     	.line	773, "main.c"; 	if(++lowCount < 10)
                                    1- 1780     	BANKSEL	_lowCount
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 05rr                      1- 1781     	INCR	_lowCount,F
                                    1- 1782     ;;unsigned compare: left < lit (0xA=10), size=1
     0052 210A                      1- 1783     	MOVIA	0x0a
     0053 04rr                      1- 1784     	SUBAR	_lowCount,W
     0054 0803                      1- 1785     	BTRSS	STATUS,0
                                    1- 1786     	.line	774, "main.c"; 	return;
                                    1- 1787     	MGOTO	_00614_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1788     	.line	775, "main.c"; 	lowCount = 10;
     0056 210A                      1- 1789     	MOVIA	0x0a
     0057 00rr                      1- 1790     	MOVAR	_lowCount
                                    1- 1791     	.line	776, "main.c"; 	pwStep = 0;
                                    1- 1792     	BANKSEL	_pwStep
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1793     	CLRR	_pwStep
                                    1- 1794     	.line	777, "main.c"; 	R_AIN2_DATA = 1150;
     005A 217E                      1- 1795     	MOVIA	0x7e
                                    1- 1796     	BANKSEL	_R_AIN2_DATA
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1797     	MOVAR	_R_AIN2_DATA
     005D 2104                      1- 1798     	MOVIA	0x04
     005E 00rr                      1- 1799     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1800     	MGOTO	_00607_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 1801     _00603_DS_:
                                    1- 1802     	.line	782, "main.c"; 	lowCount = 0;
                                    1- 1803     	BANKSEL	_lowCount
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1804     	CLRR	_lowCount
                                    1- 1805     	.line	783, "main.c"; 	firstTime = 0;
                                    1- 1806     	BANKSEL	_firstTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1807     	CLRR	_firstTime
                                    1- 1808     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1809     	.line	784, "main.c"; 	if(R_AIN2_DATA < 1270)
     0064 2104                      1- 1810     	MOVIA	0x04
                                    1- 1811     	BANKSEL	_R_AIN2_DATA
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 1812     	SUBAR	(_R_AIN2_DATA + 1),W
     0067 0903                      1- 1813     	BTRSS	STATUS,2
                                    1- 1814     	MGOTO	_00658_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069 21F6                      1- 1815     	MOVIA	0xf6
     006A 04rr                      1- 1816     	SUBAR	_R_AIN2_DATA,W
     006B                           1- 1817     _00658_DS_:
     006B 0C03                      1- 1818     	BTRSC	STATUS,0
                                    1- 1819     	MGOTO	_00600_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1820     	.line	785, "main.c"; 	pwStep = 1;
     006D 2101                      1- 1821     	MOVIA	0x01
                                    1- 1822     	BANKSEL	_pwStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1823     	MOVAR	_pwStep
                                    1- 1824     	MGOTO	_00607_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1825     ;;unsigned compare: left < lit (0x53C=1340), size=2
     0071                           1- 1826     _00600_DS_:
                                    1- 1827     	.line	786, "main.c"; 	else if(R_AIN2_DATA < 1340)
     0071 2105                      1- 1828     	MOVIA	0x05
                                    1- 1829     	BANKSEL	_R_AIN2_DATA
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 04rr                      1- 1830     	SUBAR	(_R_AIN2_DATA + 1),W
     0074 0903                      1- 1831     	BTRSS	STATUS,2
                                    1- 1832     	MGOTO	_00659_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076 213C                      1- 1833     	MOVIA	0x3c
     0077 04rr                      1- 1834     	SUBAR	_R_AIN2_DATA,W
     0078                           1- 1835     _00659_DS_:
     0078 0C03                      1- 1836     	BTRSC	STATUS,0
                                    1- 1837     	MGOTO	_00597_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1838     	.line	787, "main.c"; 	pwStep = 2;
     007A 2102                      1- 1839     	MOVIA	0x02
                                    1- 1840     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1841     	MOVAR	_pwStep
                                    1- 1842     	MGOTO	_00607_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1843     ;;unsigned compare: left < lit (0x56E=1390), size=2
     007E                           1- 1844     _00597_DS_:
                                    1- 1845     	.line	788, "main.c"; 	else if(R_AIN2_DATA < 1390)
     007E 2105                      1- 1846     	MOVIA	0x05
                                    1- 1847     	BANKSEL	_R_AIN2_DATA
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1848     	SUBAR	(_R_AIN2_DATA + 1),W
     0081 0903                      1- 1849     	BTRSS	STATUS,2
                                    1- 1850     	MGOTO	_00660_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 216E                      1- 1851     	MOVIA	0x6e
     0084 04rr                      1- 1852     	SUBAR	_R_AIN2_DATA,W
     0085                           1- 1853     _00660_DS_:
     0085 0C03                      1- 1854     	BTRSC	STATUS,0
                                    1- 1855     	MGOTO	_00594_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1856     	.line	789, "main.c"; 	pwStep = 3;
     0087 2103                      1- 1857     	MOVIA	0x03
                                    1- 1858     	BANKSEL	_pwStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 1859     	MOVAR	_pwStep
                                    1- 1860     	MGOTO	_00607_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1861     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     008B                           1- 1862     _00594_DS_:
                                    1- 1863     	.line	790, "main.c"; 	else if(R_AIN2_DATA < 1450)
     008B 2105                      1- 1864     	MOVIA	0x05
                                    1- 1865     	BANKSEL	_R_AIN2_DATA
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 04rr                      1- 1866     	SUBAR	(_R_AIN2_DATA + 1),W
     008E 0903                      1- 1867     	BTRSS	STATUS,2
                                    1- 1868     	MGOTO	_00661_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090 21AA                      1- 1869     	MOVIA	0xaa
     0091 04rr                      1- 1870     	SUBAR	_R_AIN2_DATA,W
     0092                           1- 1871     _00661_DS_:
     0092 0C03                      1- 1872     	BTRSC	STATUS,0
                                    1- 1873     	MGOTO	_00591_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1874     	.line	791, "main.c"; 	pwStep = 4;
     0094 2104                      1- 1875     	MOVIA	0x04
                                    1- 1876     	BANKSEL	_pwStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1877     	MOVAR	_pwStep
                                    1- 1878     	MGOTO	_00607_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1879     ;;unsigned compare: left < lit (0x5E6=1510), size=2
     0098                           1- 1880     _00591_DS_:
                                    1- 1881     	.line	792, "main.c"; 	else if(R_AIN2_DATA < 1510)
     0098 2105                      1- 1882     	MOVIA	0x05
                                    1- 1883     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 1884     	SUBAR	(_R_AIN2_DATA + 1),W
     009B 0903                      1- 1885     	BTRSS	STATUS,2
                                    1- 1886     	MGOTO	_00662_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D 21E6                      1- 1887     	MOVIA	0xe6
     009E 04rr                      1- 1888     	SUBAR	_R_AIN2_DATA,W
     009F                           1- 1889     _00662_DS_:
     009F 0C03                      1- 1890     	BTRSC	STATUS,0
                                    1- 1891     	MGOTO	_00588_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1892     	.line	793, "main.c"; 	pwStep = 5;
     00A1 2105                      1- 1893     	MOVIA	0x05
                                    1- 1894     	BANKSEL	_pwStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1895     	MOVAR	_pwStep
                                    1- 1896     	MGOTO	_00607_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1897     ;;unsigned compare: left < lit (0x604=1540), size=2
     00A5                           1- 1898     _00588_DS_:
                                    1- 1899     	.line	794, "main.c"; 	else if(R_AIN2_DATA < 1540)
     00A5 2106                      1- 1900     	MOVIA	0x06
                                    1- 1901     	BANKSEL	_R_AIN2_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 1902     	SUBAR	(_R_AIN2_DATA + 1),W
     00A8 0903                      1- 1903     	BTRSS	STATUS,2
                                    1- 1904     	MGOTO	_00663_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 2104                      1- 1905     	MOVIA	0x04
     00AB 04rr                      1- 1906     	SUBAR	_R_AIN2_DATA,W
     00AC                           1- 1907     _00663_DS_:
     00AC 0C03                      1- 1908     	BTRSC	STATUS,0
                                    1- 1909     	MGOTO	_00585_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1910     	.line	795, "main.c"; 	pwStep = 6;
     00AE 2106                      1- 1911     	MOVIA	0x06
                                    1- 1912     	BANKSEL	_pwStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1913     	MOVAR	_pwStep
                                    1- 1914     	MGOTO	_00607_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 1915     _00585_DS_:
                                    1- 1916     	.line	797, "main.c"; 	pwStep = 7;
     00B2 2107                      1- 1917     	MOVIA	0x07
                                    1- 1918     	BANKSEL	_pwStep
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 00rr                      1- 1919     	MOVAR	_pwStep
     00B5                           1- 1920     _00607_DS_:
                                    1- 1921     	.line	800, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
                                    1- 1922     	BANKSEL	_prePwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 1923     	MOVR	_prePwStep,W
     00B7 0D03                      1- 1924     	BTRSC	STATUS,2
                                    1- 1925     	MGOTO	_00608_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1926     	BANKSEL	_pwStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 1927     	MOVR	_pwStep,W
                                    1- 1928     	BANKSEL	_prePwStep
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 1929     	SUBAR	_prePwStep,W
     00BD 0C03                      1- 1930     	BTRSC	STATUS,0
                                    1- 1931     	MGOTO	_00609_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF                           1- 1932     _00608_DS_:
                                    1- 1933     	.line	801, "main.c"; 	prePwStep = pwStep;
                                    1- 1934     	BANKSEL	_pwStep
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 01rr                      1- 1935     	MOVR	_pwStep,W
                                    1- 1936     	BANKSEL	_prePwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 1937     	MOVAR	_prePwStep
     00C3                           1- 1938     _00609_DS_:
                                    1- 1939     	.line	803, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 1940     	BANKSEL	_ledLightTime
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 1941     	MOVR	_ledLightTime,W
     00C5 0D03                      1- 1942     	BTRSC	STATUS,2
                                    1- 1943     	MGOTO	_00614_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1944     	BANKSEL	_prePwStep
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 01rr                      1- 1945     	MOVR	_prePwStep,W
     00C9 0D03                      1- 1946     	BTRSC	STATUS,2
                                    1- 1947     	MGOTO	_00614_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1948     	.line	804, "main.c"; 	pwStep = prePwStep;
     00CB 01rr                      1- 1949     	MOVR	_prePwStep,W
                                    1- 1950     	BANKSEL	_pwStep
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 1951     	MOVAR	_pwStep
     00CE                           1- 1952     _00614_DS_:
                                    1- 1953     	.line	806, "main.c"; 	}
                                    1- 1954     	RETURN	
     00CE 0010                      3-   40 m1      ret
                                    1- 1955     ; exit point of _checkBatAD
                                    1- 1957     ;***
                                    1- 1958     ;  pBlock Stats: dbName = C
                                    1- 1959     ;***
                                    1- 1960     ;has an exit
                                    1- 1961     ;functions called:
                                    1- 1962     ;   _delay
                                    1- 1963     ;   _delay
                                    1- 1964     ;; Starting pCode block
                                    1- 1965     .segment "code"; module=main, function=_initAD
     0000                           1- 1967     _initAD:
                                    1- 1968     ; 2 exit points
                                    1- 1969     	.line	732, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1970     	MOVIA	0x84
     0001 00rr                      1- 1971     	MOVAR	_ADMD
                                    1- 1972     	.line	737, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1973     	CLRR	_ADVREFH
                                    1- 1974     	.line	742, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1975     	MOVIA	0x10
     0004 00rr                      1- 1976     	MOVAR	_ADR
                                    1- 1977     	.line	744, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1978     	MOVIA	0x03
     0006 00rr                      1- 1979     	MOVAR	_ADCR
                                    1- 1980     	.line	747, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1981     	BSR	_ADMDbits,4
                                    1- 1982     	.line	748, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1983     	MOVIA	0x64
                                    1- 1984     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1985     	.line	751, "main.c"; 	}
                                    1- 1986     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1987     ; exit point of _initAD
                                    1- 1989     ;***
                                    1- 1990     ;  pBlock Stats: dbName = C
                                    1- 1991     ;***
                                    1- 1992     ;has an exit
                                    1- 1993     ;2 compiler assigned registers:
                                    1- 1994     ;   r0x103C
                                    1- 1995     ;   r0x103D
                                    1- 1996     ;; Starting pCode block
                                    1- 1997     .segment "code"; module=main, function=_delay
                                    1- 1999     ;local variable name mapping:
     0000                           1- 2002     _delay:
                                    1- 2003     ; 2 exit points
                                    1- 2004     	.line	722, "main.c"; 	void delay(u8t time)
                                    1- 2005     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2006     	MOVAR	r0x103C
                                    1- 2007     	.line	724, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2008     	BANKSEL	r0x103D
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2009     	CLRR	r0x103D
     0004                           1- 2010     _00569_DS_:
                                    1- 2011     	BANKSEL	r0x103C
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2012     	MOVR	r0x103C,W
                                    1- 2013     	BANKSEL	r0x103D
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2014     	SUBAR	r0x103D,W
     0008 0C03                      1- 2015     	BTRSC	STATUS,0
                                    1- 2016     	MGOTO	_00571_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2017     	.line	725, "main.c"; 	NOP();
     000A 0000                      1- 2018     	nop
                                    1- 2019     	.line	724, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2020     	BANKSEL	r0x103D
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2021     	INCR	r0x103D,F
                                    1- 2022     	MGOTO	_00569_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2023     _00571_DS_:
                                    1- 2024     	.line	726, "main.c"; 	}
                                    1- 2025     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2026     ; exit point of _delay
                                    1- 2028     ;***
                                    1- 2029     ;  pBlock Stats: dbName = C
                                    1- 2030     ;***
                                    1- 2031     ;has an exit
                                    1- 2032     ;functions called:
                                    1- 2033     ;   _pwmStop
                                    1- 2034     ;   _pwm1Stop
                                    1- 2035     ;   _pwm1Init
                                    1- 2036     ;   _pwm1Stop
                                    1- 2037     ;   _pwmInit
                                    1- 2038     ;   _pwmStop
                                    1- 2039     ;   _delay
                                    1- 2040     ;   _pwmStop
                                    1- 2041     ;   _pwm1Stop
                                    1- 2042     ;   _pwm1Init
                                    1- 2043     ;   _pwm1Stop
                                    1- 2044     ;   _pwmInit
                                    1- 2045     ;   _pwmStop
                                    1- 2046     ;   _delay
                                    1- 2047     ;5 compiler assigned registers:
                                    1- 2048     ;   r0x1053
                                    1- 2049     ;   r0x1054
                                    1- 2050     ;   r0x1055
                                    1- 2051     ;   r0x1056
                                    1- 2052     ;   r0x1057
                                    1- 2053     ;; Starting pCode block
                                    1- 2054     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2056     _chrgCtr:
                                    1- 2057     ; 2 exit points
                                    1- 2058     	.line	600, "main.c"; 	if(PORTA & 0x20)
                                    1- 2059     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2060     	BTRSS	_PORTA,5
                                    1- 2061     	MGOTO	_00479_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2062     	.line	603, "main.c"; 	chrgFlag = 1;
                                    1- 2063     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 2064     	BSR	_Status,3
                                    1- 2065     	.line	604, "main.c"; 	workStep = 0;
                                    1- 2066     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2067     	CLRR	_workStep
                                    1- 2068     	.line	605, "main.c"; 	ledLightTime = 0;
                                    1- 2069     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 2070     	CLRR	_ledLightTime
                                    1- 2071     	.line	606, "main.c"; 	pwmStop();
                                    1- 2072     	MCALL	_pwmStop
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2073     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 2074     	.line	608, "main.c"; 	if(pwStep >= 8 || chrgFullFlag)
     000A 2108                      1- 2075     	MOVIA	0x08
                                    1- 2076     	BANKSEL	_pwStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 2077     	SUBAR	_pwStep,W
     000D 0C03                      1- 2078     	BTRSC	STATUS,0
                                    1- 2079     	MGOTO	_00468_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2080     	BANKSEL	_chrgFullFlag
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2081     	MOVR	_chrgFullFlag,W
     0011 0D03                      1- 2082     	BTRSC	STATUS,2
                                    1- 2083     	MGOTO	_00469_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 2084     _00468_DS_:
                                    1- 2085     	.line	610, "main.c"; 	chrgStep = 6;
     0013 2106                      1- 2086     	MOVIA	0x06
                                    1- 2087     	BANKSEL	_chrgStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2088     	MOVAR	_chrgStep
                                    1- 2089     	.line	612, "main.c"; 	ledStep = 6;
                                    1- 2090     	BANKSEL	_ledStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2091     	MOVAR	_ledStep
                                    1- 2092     	.line	613, "main.c"; 	if(++fullCount >= 2000)
                                    1- 2093     	BANKSEL	_fullCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 05rr                      1- 2094     	INCR	_fullCount,F
     001A 0D03                      1- 2095     	BTRSC	STATUS,2
     001B 05rr                      1- 2096     	INCR	(_fullCount + 1),F
                                    1- 2097     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     001C 2107                      1- 2098     	MOVIA	0x07
     001D 04rr                      1- 2099     	SUBAR	(_fullCount + 1),W
     001E 0903                      1- 2100     	BTRSS	STATUS,2
                                    1- 2101     	MGOTO	_00550_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020 21D0                      1- 2102     	MOVIA	0xd0
     0021 04rr                      1- 2103     	SUBAR	_fullCount,W
     0022                           1- 2104     _00550_DS_:
     0022 0803                      1- 2105     	BTRSS	STATUS,0
                                    1- 2106     	MGOTO	_00481_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2107     	.line	615, "main.c"; 	fullCount = 2000;
     0024 21D0                      1- 2108     	MOVIA	0xd0
                                    1- 2109     	BANKSEL	_fullCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2110     	MOVAR	_fullCount
     0027 2107                      1- 2111     	MOVIA	0x07
     0028 00rr                      1- 2112     	MOVAR	(_fullCount + 1)
                                    1- 2113     	.line	616, "main.c"; 	chrgFullFlag = 1;
     0029 2101                      1- 2114     	MOVIA	0x01
                                    1- 2115     	BANKSEL	_chrgFullFlag
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2116     	MOVAR	_chrgFullFlag
                                    1- 2117     	.line	617, "main.c"; 	pwm1Stop();
                                    1- 2118     	MCALL	_pwm1Stop
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2119     	.line	618, "main.c"; 	PORTB &= 0xFB;
     002D 1Drr                      1- 2120     	BCR	_PORTB,2
                                    1- 2121     	.line	619, "main.c"; 	IOSTB |= 0X04;
     002E 001r                      1- 2122     	IOSTR	_IOSTB
                                    1- 2123     	BANKSEL	r0x1053
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 2124     	MOVAR	r0x1053
     0031 19rr                      1- 2125     	BSR	r0x1053,2
     0032 01rr                      1- 2126     	MOVR	r0x1053,W
     0033 000r                      1- 2127     	IOST	_IOSTB
                                    1- 2128     	MGOTO	_00481_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1- 2129     _00469_DS_:
                                    1- 2130     	.line	627, "main.c"; 	IOSTB &= 0xFB;
     0035 001r                      1- 2131     	IOSTR	_IOSTB
                                    1- 2132     	BANKSEL	r0x1053
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2133     	MOVAR	r0x1053
     0038 1Drr                      1- 2134     	BCR	r0x1053,2
     0039 01rr                      1- 2135     	MOVR	r0x1053,W
     003A 000r                      1- 2136     	IOST	_IOSTB
                                    1- 2137     	.line	628, "main.c"; 	fullCount = 0;
                                    1- 2138     	BANKSEL	_fullCount
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 2139     	CLRR	_fullCount
     003D 02rr                      1- 2140     	CLRR	(_fullCount + 1)
                                    1- 2141     	.line	629, "main.c"; 	if(count500ms == 0 && pwStep <= 7 && lockLedStep < 6)
                                    1- 2142     	BANKSEL	_count500ms
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 2143     	MOVR	_count500ms,W
     0040 0903                      1- 2144     	BTRSS	STATUS,2
                                    1- 2145     	MGOTO	_00447_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2146     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2147     ;;unsigned compare: left >= lit (0x8=8), size=1
     0042 2108                      1- 2148     	MOVIA	0x08
                                    1- 2149     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 04rr                      1- 2150     	SUBAR	_pwStep,W
     0045 0C03                      1- 2151     	BTRSC	STATUS,0
                                    1- 2152     	MGOTO	_00447_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2153     ;;unsigned compare: left < lit (0x6=6), size=1
     0047 2106                      1- 2154     	MOVIA	0x06
                                    1- 2155     	BANKSEL	_lockLedStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 2156     	SUBAR	_lockLedStep,W
     004A 0C03                      1- 2157     	BTRSC	STATUS,0
                                    1- 2158     	MGOTO	_00447_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2159     	.line	632, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 2160     	BANKSEL	_pwStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 2161     	MOVR	_pwStep,W
                                    1- 2162     	BANKSEL	r0x1053
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 2163     	MOVAR	r0x1053
                                    1- 2164     	BANKSEL	r0x1054
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 2165     	CLRR	r0x1054
     0052 21FF                      1- 2166     	MOVIA	0xff
                                    1- 2167     	BANKSEL	r0x1053
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 03rr                      1- 2168     	ADDAR	r0x1053,F
     0055 0C03                      1- 2169     	BTRSC	STATUS,0
                                    1- 2170     	MGOTO	_00006_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2171     	BANKSEL	r0x1054
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 06rr                      1- 2172     	DECR	r0x1054,F
     0059                           1- 2173     _00006_DS_:
                                    1- 2174     	BANKSEL	_lockLedStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1- 2175     	MOVR	_lockLedStep,W
                                    1- 2176     	BANKSEL	r0x1055
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 2177     	MOVAR	r0x1055
                                    1- 2178     ;;1	CLRR	r0x1056
     005D 2100                      1- 2179     	MOVIA	0x00
     005E 2580                      1- 2180     	ADDIA	0x80
                                    1- 2181     	BANKSEL	r0x1057
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 00rr                      1- 2182     	MOVAR	r0x1057
                                    1- 2183     	BANKSEL	r0x1054
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 2184     	MOVR	r0x1054,W
     0063 2580                      1- 2185     	ADDIA	0x80
                                    1- 2186     	BANKSEL	r0x1057
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 2187     	SUBAR	r0x1057,W
     0066 0903                      1- 2188     	BTRSS	STATUS,2
                                    1- 2189     	MGOTO	_00553_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2190     	BANKSEL	r0x1053
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 2191     	MOVR	r0x1053,W
                                    1- 2192     	BANKSEL	r0x1055
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 2193     	SUBAR	r0x1055,W
     006C                           1- 2194     _00553_DS_:
     006C 0C03                      1- 2195     	BTRSC	STATUS,0
                                    1- 2196     	MGOTO	_00442_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2197     	.line	634, "main.c"; 	if(lockLedStep == 0)
                                    1- 2198     	BANKSEL	_lockLedStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 2199     	MOVR	_lockLedStep,W
     0070 0903                      1- 2200     	BTRSS	STATUS,2
                                    1- 2201     	MGOTO	_00438_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2202     	.line	635, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2203     	BANKSEL	_pwStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 06rr                      1- 2204     	DECR	_pwStep,W
                                    1- 2205     	BANKSEL	_lockLedStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 2206     	MOVAR	_lockLedStep
     0076                           1- 2207     _00438_DS_:
                                    1- 2208     	.line	636, "main.c"; 	if(++ledCount > 100)
                                    1- 2209     	BANKSEL	_ledCount
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 05rr                      1- 2210     	INCR	_ledCount,F
                                    1- 2211     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2212     ;;unsigned compare: left >= lit (0x65=101), size=1
     0078 2165                      1- 2213     	MOVIA	0x65
     0079 04rr                      1- 2214     	SUBAR	_ledCount,W
     007A 0803                      1- 2215     	BTRSS	STATUS,0
                                    1- 2216     	MGOTO	_00443_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2217     	.line	637, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2218     	BANKSEL	_pwStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 06rr                      1- 2219     	DECR	_pwStep,W
                                    1- 2220     	BANKSEL	_lockLedStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 2221     	MOVAR	_lockLedStep
                                    1- 2222     	MGOTO	_00443_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081                           1- 2223     _00442_DS_:
                                    1- 2224     	.line	642, "main.c"; 	ledCount = 0;
                                    1- 2225     	BANKSEL	_ledCount
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 02rr                      1- 2226     	CLRR	_ledCount
     0083                           1- 2227     _00443_DS_:
                                    1- 2228     	.line	644, "main.c"; 	if(++ledStep > 6)
                                    1- 2229     	BANKSEL	_ledStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 05rr                      1- 2230     	INCR	_ledStep,F
                                    1- 2231     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2232     ;;unsigned compare: left >= lit (0x7=7), size=1
     0085 2107                      1- 2233     	MOVIA	0x07
     0086 04rr                      1- 2234     	SUBAR	_ledStep,W
     0087 0803                      1- 2235     	BTRSS	STATUS,0
                                    1- 2236     	MGOTO	_00447_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2237     	.line	645, "main.c"; 	ledStep = lockLedStep;
                                    1- 2238     	BANKSEL	_lockLedStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 2239     	MOVR	_lockLedStep,W
                                    1- 2240     	BANKSEL	_ledStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 2241     	MOVAR	_ledStep
                                    1- 2242     ;;unsigned compare: left < lit (0x6=6), size=1
     008D                           1- 2243     _00447_DS_:
                                    1- 2244     	.line	647, "main.c"; 	if(lockLedStep >= 6)
     008D 2106                      1- 2245     	MOVIA	0x06
                                    1- 2246     	BANKSEL	_lockLedStep
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 2247     	SUBAR	_lockLedStep,W
     0090 0803                      1- 2248     	BTRSS	STATUS,0
                                    1- 2249     	MGOTO	_00451_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2250     	.line	649, "main.c"; 	ledStep = 6;	//���Ʋ�����
     0092 2106                      1- 2251     	MOVIA	0x06
                                    1- 2252     	BANKSEL	_ledStep
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 2253     	MOVAR	_ledStep
     0095                           1- 2254     _00451_DS_:
                                    1- 2255     	.line	652, "main.c"; 	pwm1Init();
                                    1- 2256     	MCALL	_pwm1Init
     0095 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2257     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2258     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2259     	.line	653, "main.c"; 	if(count200ms > 5)
     0096 2106                      1- 2260     	MOVIA	0x06
                                    1- 2261     	BANKSEL	_count200ms
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 04rr                      1- 2262     	SUBAR	_count200ms,W
     0099 0803                      1- 2263     	BTRSS	STATUS,0
                                    1- 2264     	MGOTO	_00481_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2265     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2266     ;;unsigned compare: left >= lit (0x26=38), size=2
                                    1- 2267     	.line	655, "main.c"; 	if(R_AIN4_DATA <= 37 && R_AIN4_DATA >=subMin)
     009B 2100                      1- 2268     	MOVIA	0x00
                                    1- 2269     	BANKSEL	_R_AIN4_DATA
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 04rr                      1- 2270     	SUBAR	(_R_AIN4_DATA + 1),W
     009E 0903                      1- 2271     	BTRSS	STATUS,2
                                    1- 2272     	MGOTO	_00558_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
     00A0 2126                      1- 2273     	MOVIA	0x26
     00A1 04rr                      1- 2274     	SUBAR	_R_AIN4_DATA,W
     00A2                           1- 2275     _00558_DS_:
     00A2 0C03                      1- 2276     	BTRSC	STATUS,0
                                    1- 2277     	MGOTO	_00453_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2278     	BANKSEL	_subMin
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 2279     	MOVR	_subMin,W
                                    1- 2280     	BANKSEL	r0x1053
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 2281     	MOVAR	r0x1053
                                    1- 2282     	BANKSEL	r0x1054
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 02rr                      1- 2283     	CLRR	r0x1054
     00AA 2100                      1- 2284     	MOVIA	0x00
                                    1- 2285     	BANKSEL	_R_AIN4_DATA
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 04rr                      1- 2286     	SUBAR	(_R_AIN4_DATA + 1),W
     00AD 0903                      1- 2287     	BTRSS	STATUS,2
                                    1- 2288     	MGOTO	_00559_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2289     	BANKSEL	r0x1053
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 01rr                      1- 2290     	MOVR	r0x1053,W
                                    1- 2291     	BANKSEL	_R_AIN4_DATA
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 04rr                      1- 2292     	SUBAR	_R_AIN4_DATA,W
     00B3                           1- 2293     _00559_DS_:
     00B3 0803                      1- 2294     	BTRSS	STATUS,0
                                    1- 2295     	MGOTO	_00453_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2296     	.line	657, "main.c"; 	addTime = subTime = 0;
                                    1- 2297     	BANKSEL	_subTime
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 02rr                      1- 2298     	CLRR	_subTime
                                    1- 2299     	BANKSEL	_addTime
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 02rr                      1- 2300     	CLRR	_addTime
                                    1- 2301     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2302     ;;unsigned compare: left >= lit (0x26=38), size=2
     00B9                           1- 2303     _00453_DS_:
                                    1- 2304     	.line	659, "main.c"; 	if(R_AIN4_DATA > 37)
     00B9 2100                      1- 2305     	MOVIA	0x00
                                    1- 2306     	BANKSEL	_R_AIN4_DATA
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 04rr                      1- 2307     	SUBAR	(_R_AIN4_DATA + 1),W
     00BC 0903                      1- 2308     	BTRSS	STATUS,2
                                    1- 2309     	MGOTO	_00560_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
     00BE 2126                      1- 2310     	MOVIA	0x26
     00BF 04rr                      1- 2311     	SUBAR	_R_AIN4_DATA,W
     00C0                           1- 2312     _00560_DS_:
     00C0 0803                      1- 2313     	BTRSS	STATUS,0
                                    1- 2314     	MGOTO	_00462_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2315     	.line	661, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 2316     	BANKSEL	_subTime
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 05rr                      1- 2317     	INCR	_subTime,F
     00C4 01rr                      1- 2318     	MOVR	_subTime,W
                                    1- 2319     	BANKSEL	_chrgWaitTime
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 04rr                      1- 2320     	SUBAR	_chrgWaitTime,W
     00C7 0C03                      1- 2321     	BTRSC	STATUS,0
                                    1- 2322     	MGOTO	_00456_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2323     	.line	663, "main.c"; 	maxduty = maxduty - 1;
                                    1- 2324     	BANKSEL	_maxduty
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 06rr                      1- 2325     	DECR	_maxduty,F
                                    1- 2326     	.line	664, "main.c"; 	subTime = 0;
                                    1- 2327     	BANKSEL	_subTime
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 02rr                      1- 2328     	CLRR	_subTime
                                    1- 2329     	.line	665, "main.c"; 	subMin = 36;
     00CD 2124                      1- 2330     	MOVIA	0x24
                                    1- 2331     	BANKSEL	_subMin
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 2332     	MOVAR	_subMin
                                    1- 2333     	.line	666, "main.c"; 	chrgWaitTime = 250;
     00D0 21FA                      1- 2334     	MOVIA	0xfa
                                    1- 2335     	BANKSEL	_chrgWaitTime
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 00rr                      1- 2336     	MOVAR	_chrgWaitTime
     00D3                           1- 2337     _00456_DS_:
                                    1- 2338     	.line	668, "main.c"; 	addTime = 0;
                                    1- 2339     	BANKSEL	_addTime
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 02rr                      1- 2340     	CLRR	_addTime
                                    1- 2341     	MGOTO	_00463_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6                           1- 2342     _00462_DS_:
                                    1- 2343     	.line	670, "main.c"; 	else if(R_AIN4_DATA < subMin)
                                    1- 2344     	BANKSEL	_subMin
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 01rr                      1- 2345     	MOVR	_subMin,W
                                    1- 2346     	BANKSEL	r0x1053
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 00rr                      1- 2347     	MOVAR	r0x1053
                                    1- 2348     	BANKSEL	r0x1054
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 02rr                      1- 2349     	CLRR	r0x1054
     00DC 2100                      1- 2350     	MOVIA	0x00
                                    1- 2351     	BANKSEL	_R_AIN4_DATA
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 04rr                      1- 2352     	SUBAR	(_R_AIN4_DATA + 1),W
     00DF 0903                      1- 2353     	BTRSS	STATUS,2
                                    1- 2354     	MGOTO	_00562_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2355     	BANKSEL	r0x1053
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 01rr                      1- 2356     	MOVR	r0x1053,W
                                    1- 2357     	BANKSEL	_R_AIN4_DATA
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 04rr                      1- 2358     	SUBAR	_R_AIN4_DATA,W
     00E5                           1- 2359     _00562_DS_:
     00E5 0C03                      1- 2360     	BTRSC	STATUS,0
                                    1- 2361     	MGOTO	_00463_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2362     	.line	672, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 2363     	BANKSEL	_addTime
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 05rr                      1- 2364     	INCR	_addTime,F
     00E9 01rr                      1- 2365     	MOVR	_addTime,W
                                    1- 2366     	BANKSEL	_chrgWaitTime
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 04rr                      1- 2367     	SUBAR	_chrgWaitTime,W
     00EC 0C03                      1- 2368     	BTRSC	STATUS,0
                                    1- 2369     	MGOTO	_00458_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2370     	.line	674, "main.c"; 	maxduty = maxduty + 1;
                                    1- 2371     	BANKSEL	_maxduty
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 05rr                      1- 2372     	INCR	_maxduty,F
                                    1- 2373     	.line	675, "main.c"; 	addTime = 0;
                                    1- 2374     	BANKSEL	_addTime
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 02rr                      1- 2375     	CLRR	_addTime
     00F2                           1- 2376     _00458_DS_:
                                    1- 2377     	.line	677, "main.c"; 	subTime = 0;
                                    1- 2378     	BANKSEL	_subTime
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 02rr                      1- 2379     	CLRR	_subTime
                                    1- 2380     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2381     ;;unsigned compare: left >= lit (0x24=36), size=1
     00F4                           1- 2382     _00463_DS_:
                                    1- 2383     	.line	679, "main.c"; 	if(maxduty > 35)
     00F4 2124                      1- 2384     	MOVIA	0x24
                                    1- 2385     	BANKSEL	_maxduty
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 04rr                      1- 2386     	SUBAR	_maxduty,W
     00F7 0803                      1- 2387     	BTRSS	STATUS,0
                                    1- 2388     	MGOTO	_00465_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2389     	.line	681, "main.c"; 	maxduty = 35;
     00F9 2123                      1- 2390     	MOVIA	0x23
     00FA 00rr                      1- 2391     	MOVAR	_maxduty
     00FB                           1- 2392     _00465_DS_:
                                    1- 2393     	.line	683, "main.c"; 	PWM2DUTY = maxduty;
                                    1- 2394     	BANKSEL	_maxduty
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 2395     	MOVR	_maxduty,W
     00FD 00rr                      1- 2396     	SFUN	_PWM2DUTY
                                    1- 2397     	MGOTO	_00481_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
     00FF                           1- 2398     _00479_DS_:
                                    1- 2399     	.line	691, "main.c"; 	chrgWaitTime = 20;
     00FF 2114                      1- 2400     	MOVIA	0x14
                                    1- 2401     	BANKSEL	_chrgWaitTime
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 00rr                      1- 2402     	MOVAR	_chrgWaitTime
                                    1- 2403     	.line	692, "main.c"; 	subMin = 36;
     0102 2124                      1- 2404     	MOVIA	0x24
                                    1- 2405     	BANKSEL	_subMin
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 00rr                      1- 2406     	MOVAR	_subMin
                                    1- 2407     	.line	693, "main.c"; 	chrgFullFlag = 0;
                                    1- 2408     	BANKSEL	_chrgFullFlag
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 02rr                      1- 2409     	CLRR	_chrgFullFlag
                                    1- 2410     	.line	694, "main.c"; 	chrgduty = 0;
                                    1- 2411     	BANKSEL	_chrgduty
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 02rr                      1- 2412     	CLRR	_chrgduty
                                    1- 2413     	.line	695, "main.c"; 	maxduty = 0;
                                    1- 2414     	BANKSEL	_maxduty
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 02rr                      1- 2415     	CLRR	_maxduty
                                    1- 2416     	.line	696, "main.c"; 	chrgStep = 0;
                                    1- 2417     	BANKSEL	_chrgStep
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 02rr                      1- 2418     	CLRR	_chrgStep
                                    1- 2419     	.line	697, "main.c"; 	lockLedStep = 0;
                                    1- 2420     	BANKSEL	_lockLedStep
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 02rr                      1- 2421     	CLRR	_lockLedStep
                                    1- 2422     	.line	698, "main.c"; 	chrgTime = 0;
                                    1- 2423     	BANKSEL	_chrgTime
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 02rr                      1- 2424     	CLRR	_chrgTime
     0111 02rr                      1- 2425     	CLRR	(_chrgTime + 1)
                                    1- 2426     	.line	699, "main.c"; 	pwm1Stop();
                                    1- 2427     	MCALL	_pwm1Stop
     0112 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2428     	.line	700, "main.c"; 	if(workStep == 0)
                                    1- 2429     	BANKSEL	_workStep
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 01rr                      1- 2430     	MOVR	_workStep,W
     0115 0903                      1- 2431     	BTRSS	STATUS,2
                                    1- 2432     	MGOTO	_00007_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2433     	.line	701, "main.c"; 	ledStep = 0;
                                    1- 2434     	BANKSEL	_ledStep
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 02rr                      1- 2435     	CLRR	_ledStep
     0119                           1- 2436     _00007_DS_:
                                    1- 2437     	.line	702, "main.c"; 	chrgFlag = 0;
                                    1- 2438     	BANKSEL	_Status
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 1Drr                      1- 2439     	BCR	_Status,3
                                    1- 2440     	.line	703, "main.c"; 	chrgTime = 0;	//���ó�����
                                    1- 2441     	BANKSEL	_chrgTime
     011B rrrr                      3-  110 m1      .banksel ram_address
     011C 02rr                      1- 2442     	CLRR	_chrgTime
     011D 02rr                      1- 2443     	CLRR	(_chrgTime + 1)
                                    1- 2444     	.line	704, "main.c"; 	if(workStep > 0)
                                    1- 2445     	BANKSEL	_workStep
     011E rrrr                      3-  110 m1      .banksel ram_address
     011F 01rr                      1- 2446     	MOVR	_workStep,W
     0120 0903                      1- 2447     	BTRSS	STATUS,2
                                    1- 2448     	.line	706, "main.c"; 	pwmInit();
                                    1- 2449     	MCALL	_pwmInit
     0121 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2450     	.line	708, "main.c"; 	if(fgCount > 150)
     0122 2197                      1- 2451     	MOVIA	0x97
                                    1- 2452     	BANKSEL	_fgCount
     0123 rrrr                      3-  110 m1      .banksel ram_address
     0124 04rr                      1- 2453     	SUBAR	_fgCount,W
     0125 0803                      1- 2454     	BTRSS	STATUS,0
                                    1- 2455     	MGOTO	_00481_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2456     	.line	710, "main.c"; 	pwmStop();
                                    1- 2457     	MCALL	_pwmStop
     0127 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2458     	.line	711, "main.c"; 	PORTB &= 0xF7;
     0128 1Drr                      1- 2459     	BCR	_PORTB,3
                                    1- 2460     	.line	712, "main.c"; 	fgPRD = 0;
                                    1- 2461     	BANKSEL	_fgPRD
     0129 rrrr                      3-  110 m1      .banksel ram_address
     012A 02rr                      1- 2462     	CLRR	_fgPRD
                                    1- 2463     	.line	713, "main.c"; 	fgCount = 0;
                                    1- 2464     	BANKSEL	_fgCount
     012B rrrr                      3-  110 m1      .banksel ram_address
     012C 02rr                      1- 2465     	CLRR	_fgCount
                                    1- 2466     	.line	714, "main.c"; 	delay(200);
     012D 21C8                      1- 2467     	MOVIA	0xc8
                                    1- 2468     	MCALL	_delay
     012E 2rrr                      3-   66 m1      LCALL rom_address
     012F                           1- 2469     _00481_DS_:
                                    1- 2470     	.line	719, "main.c"; 	}
                                    1- 2471     	RETURN	
     012F 0010                      3-   40 m1      ret
                                    1- 2472     ; exit point of _chrgCtr
                                    1- 2474     ;***
                                    1- 2475     ;  pBlock Stats: dbName = C
                                    1- 2476     ;***
                                    1- 2477     ;has an exit
                                    1- 2478     ;1 compiler assigned register :
                                    1- 2479     ;   r0x1058
                                    1- 2480     ;; Starting pCode block
                                    1- 2481     .segment "code"; module=main, function=_keyRead
                                    1- 2483     ;local variable name mapping:
     0000                           1- 2485     _keyRead:
                                    1- 2486     ; 2 exit points
                                    1- 2487     	.line	563, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2488     	BANKSEL	r0x1058
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2489     	MOVAR	r0x1058
                                    1- 2490     	.line	565, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2491     	MOVR	r0x1058,W
     0003 0D03                      1- 2492     	BTRSC	STATUS,2
                                    1- 2493     	MGOTO	_00428_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2494     	.line	567, "main.c"; 	keyCount++;
                                    1- 2495     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2496     	INCR	_keyCount,F
                                    1- 2497     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2498     	.line	568, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2499     	MOVIA	0x64
     0008 04rr                      1- 2500     	SUBAR	_keyCount,W
     0009 0803                      1- 2501     	BTRSS	STATUS,0
                                    1- 2502     	MGOTO	_00429_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2503     	.line	570, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2504     	MOVIA	0x64
     000C 00rr                      1- 2505     	MOVAR	_keyCount
                                    1- 2506     	.line	571, "main.c"; 	if(!longPressFlag)
                                    1- 2507     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2508     	BTRSC	_Status,1
                                    1- 2509     	MGOTO	_00429_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2510     	.line	573, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2511     	BSR	_Status,1
                                    1- 2512     	.line	574, "main.c"; 	return 2;
     0011 2102                      1- 2513     	MOVIA	0x02
                                    1- 2514     	MGOTO	_00430_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2515     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2516     _00428_DS_:
                                    1- 2517     	.line	580, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2518     	MOVIA	0x64
                                    1- 2519     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2520     	SUBAR	_keyCount,W
     0016 0803                      1- 2521     	BTRSS	STATUS,0
                                    1- 2522     	MGOTO	_00425_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2523     	.line	582, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2524     	CLRR	_keyCount
                                    1- 2525     	.line	583, "main.c"; 	longPressFlag = 0;
                                    1- 2526     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2527     	BCR	_Status,1
                                    1- 2528     	.line	584, "main.c"; 	return	0;
     001B 2100                      1- 2529     	MOVIA	0x00
                                    1- 2530     	MGOTO	_00430_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2531     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2532     _00425_DS_:
                                    1- 2533     	.line	586, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2534     	MOVIA	0x04
                                    1- 2535     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2536     	SUBAR	_keyCount,W
     0020 0803                      1- 2537     	BTRSS	STATUS,0
                                    1- 2538     	MGOTO	_00426_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2539     	.line	588, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2540     	CLRR	_keyCount
                                    1- 2541     	.line	589, "main.c"; 	return	1;
     0023 2101                      1- 2542     	MOVIA	0x01
                                    1- 2543     	MGOTO	_00430_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2544     _00426_DS_:
                                    1- 2545     	.line	591, "main.c"; 	keyCount = 0;
                                    1- 2546     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2547     	CLRR	_keyCount
     0027                           1- 2548     _00429_DS_:
                                    1- 2549     	.line	593, "main.c"; 	return 0;
     0027 2100                      1- 2550     	MOVIA	0x00
     0028                           1- 2551     _00430_DS_:
                                    1- 2552     	.line	594, "main.c"; 	}
                                    1- 2553     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2554     ; exit point of _keyRead
                                    1- 2556     ;***
                                    1- 2557     ;  pBlock Stats: dbName = C
                                    1- 2558     ;***
                                    1- 2559     ;has an exit
                                    1- 2560     ;functions called:
                                    1- 2561     ;   _LedInput
                                    1- 2562     ;   _pwmStop
                                    1- 2563     ;   _pwm1Stop
                                    1- 2564     ;   _LedInput
                                    1- 2565     ;   _pwmStop
                                    1- 2566     ;   _pwm1Stop
                                    1- 2567     ;; Starting pCode block
                                    1- 2568     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2570     _gotoSleep:
                                    1- 2571     ; 2 exit points
                                    1- 2572     	.line	532, "main.c"; 	LedInput();
                                    1- 2573     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2574     	.line	533, "main.c"; 	sleepTime = 0;
                                    1- 2575     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2576     	CLRR	_sleepTime
     0003 02rr                      1- 2577     	CLRR	(_sleepTime + 1)
                                    1- 2578     	.line	535, "main.c"; 	pwmStop();
                                    1- 2579     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2580     	.line	536, "main.c"; 	pwm1Stop();
                                    1- 2581     	MCALL	_pwm1Stop
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2582     	.line	537, "main.c"; 	PORTA = 0x00;
                                    1- 2583     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2584     	CLRR	_PORTA
                                    1- 2585     	.line	538, "main.c"; 	PORTB = 0x00;
     0008 02rr                      1- 2586     	CLRR	_PORTB
                                    1- 2587     	.line	539, "main.c"; 	workStep = 0;
                                    1- 2588     	BANKSEL	_workStep
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 2589     	CLRR	_workStep
                                    1- 2590     	.line	540, "main.c"; 	AWUCON = 0x60;
     000B 2160                      1- 2591     	MOVIA	0x60
     000C 00rr                      1- 2592     	MOVAR	_AWUCON
                                    1- 2593     	.line	541, "main.c"; 	BWUCON = 0x00;
     000D 02rr                      1- 2594     	CLRR	_BWUCON
                                    1- 2595     	.line	542, "main.c"; 	redLedFlag = 0;
                                    1- 2596     	BANKSEL	_Status
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Drr                      1- 2597     	BCR	_Status,2
                                    1- 2598     	.line	545, "main.c"; 	INTE =  C_INT_PABKey;
     0010 2102                      1- 2599     	MOVIA	0x02
     0011 00rr                      1- 2600     	MOVAR	_INTE
                                    1- 2601     	.line	546, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0012 2118                      1- 2602     	MOVIA	0x18
     0013 00rr                      1- 2603     	MOVAR	_PCON
                                    1- 2604     	.line	547, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0014 02rr                      1- 2605     	CLRR	_INTF
                                    1- 2606     	.line	548, "main.c"; 	CLRWDT();
     0015 0002                      1- 2607     	clrwdt
                                    1- 2608     	.line	549, "main.c"; 	ENI();
     0016 0004                      1- 2609     	ENI
                                    1- 2610     	.line	550, "main.c"; 	SLEEP();
     0017 0001                      1- 2611     	sleep
                                    1- 2612     	.line	551, "main.c"; 	AWUCON = 0x00;
     0018 02rr                      1- 2613     	CLRR	_AWUCON
                                    1- 2614     	.line	552, "main.c"; 	PORTA = 0x00;
                                    1- 2615     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 2616     	CLRR	_PORTA
                                    1- 2617     	.line	553, "main.c"; 	APHCON = 0x3F;
     001B 213F                      1- 2618     	MOVIA	0x3f
     001C 000r                      1- 2619     	IOST	_APHCON
                                    1- 2620     	.line	554, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0��Timer1��WDT overflow interrupt
     001D 2101                      1- 2621     	MOVIA	0x01
     001E 00rr                      1- 2622     	MOVAR	_INTE
                                    1- 2623     	.line	555, "main.c"; 	INTF = 0;
     001F 02rr                      1- 2624     	CLRR	_INTF
                                    1- 2625     	.line	557, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0020 21B8                      1- 2626     	MOVIA	0xb8
     0021 00rr                      1- 2627     	MOVAR	_PCON
                                    1- 2628     	.line	560, "main.c"; 	}
                                    1- 2629     	RETURN	
     0022 0010                      3-   40 m1      ret
                                    1- 2630     ; exit point of _gotoSleep
                                    1- 2632     ;***
                                    1- 2633     ;  pBlock Stats: dbName = C
                                    1- 2634     ;***
                                    1- 2635     ;has an exit
                                    1- 2636     ;; Starting pCode block
                                    1- 2637     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2639     _pwmStop:
                                    1- 2640     ; 2 exit points
                                    1- 2641     	.line	522, "main.c"; 	PORTB &= 0xF7;
     0000 1Drr                      1- 2642     	BCR	_PORTB,3
                                    1- 2643     	.line	523, "main.c"; 	PORTA &= 0xFB;
                                    1- 2644     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 1Drr                      1- 2645     	BCR	_PORTA,2
                                    1- 2646     	.line	524, "main.c"; 	T3CR1 = C_TMR3_Dis;
     0003 0200                      1- 2647     	CLRA	
     0004 00rr                      1- 2648     	SFUN	_T3CR1
                                    1- 2649     	.line	525, "main.c"; 	}
                                    1- 2650     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 2651     ; exit point of _pwmStop
                                    1- 2653     ;***
                                    1- 2654     ;  pBlock Stats: dbName = C
                                    1- 2655     ;***
                                    1- 2656     ;has an exit
                                    1- 2657     ;1 compiler assigned register :
                                    1- 2658     ;   r0x1052
                                    1- 2659     ;; Starting pCode block
                                    1- 2660     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2662     _pwmInit:
                                    1- 2663     ; 2 exit points
                                    1- 2664     	.line	509, "main.c"; 	PORTB |= 0x08;
     0000 19rr                      1- 2665     	BSR	_PORTB,3
                                    1- 2666     	.line	510, "main.c"; 	if(0x80&T3CR1)
     0001 00rr                      1- 2667     	SFUNR	_T3CR1
                                    1- 2668     	BANKSEL	r0x1052
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2669     	MOVAR	r0x1052
     0004 0Frr                      1- 2670     	BTRSC	r0x1052,7
                                    1- 2671     	.line	511, "main.c"; 	return;
                                    1- 2672     	MGOTO	_00405_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2673     	.line	512, "main.c"; 	TM3RH = 0x00;
     0006 02rr                      1- 2674     	CLRR	_TM3RH
                                    1- 2675     	.line	513, "main.c"; 	TMR3 = 100;							//Ƶ��Ϊ110K
     0007 2164                      1- 2676     	MOVIA	0x64
     0008 00rr                      1- 2677     	SFUN	_TMR3
                                    1- 2678     	.line	516, "main.c"; 	T3CR2 = C_TMR3_ClkSrc_Inst | C_PS3_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2101                      1- 2679     	MOVIA	0x01
     000A 00rr                      1- 2680     	SFUN	_T3CR2
                                    1- 2681     	.line	517, "main.c"; 	T3CR1 = C_PWM3_En | C_TMR3_Reload | C_TMR3_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 2682     	MOVIA	0x83
     000C 00rr                      1- 2683     	SFUN	_T3CR1
     000D                           1- 2684     _00405_DS_:
                                    1- 2685     	.line	518, "main.c"; 	}
                                    1- 2686     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 2687     ; exit point of _pwmInit
                                    1- 2689     ;***
                                    1- 2690     ;  pBlock Stats: dbName = C
                                    1- 2691     ;***
                                    1- 2692     ;has an exit
                                    1- 2693     ;; Starting pCode block
                                    1- 2694     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2696     _pwm1Stop:
                                    1- 2697     ; 2 exit points
                                    1- 2698     	.line	502, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2699     	CLRA	
     0001 00rr                      1- 2700     	SFUN	_T2CR1
                                    1- 2701     	.line	503, "main.c"; 	}
                                    1- 2702     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2703     ; exit point of _pwm1Stop
                                    1- 2705     ;***
                                    1- 2706     ;  pBlock Stats: dbName = C
                                    1- 2707     ;***
                                    1- 2708     ;has an exit
                                    1- 2709     ;1 compiler assigned register :
                                    1- 2710     ;   r0x1052
                                    1- 2711     ;; Starting pCode block
                                    1- 2712     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2714     _pwm1Init:
                                    1- 2715     ; 2 exit points
                                    1- 2716     	.line	489, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2717     	SFUNR	_T2CR1
                                    1- 2718     	BANKSEL	r0x1052
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2719     	MOVAR	r0x1052
     0003 0Frr                      1- 2720     	BTRSC	r0x1052,7
                                    1- 2721     	.line	490, "main.c"; 	return;
                                    1- 2722     	MGOTO	_00394_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2723     	.line	491, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2724     	CLRR	_TMRH
                                    1- 2725     	.line	492, "main.c"; 	TMR2 = 48;							//Ƶ��Ϊ110K
     0006 2130                      1- 2726     	MOVIA	0x30
     0007 00rr                      1- 2727     	SFUN	_TMR2
                                    1- 2728     	.line	495, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2729     	CLRA	
     0009 00rr                      1- 2730     	SFUN	_T2CR2
                                    1- 2731     	.line	496, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Dis;
     000A 2108                      1- 2732     	MOVIA	0x08
     000B 00rr                      1- 2733     	SFUN	_T2CR2
                                    1- 2734     	.line	497, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2735     	MOVIA	0x83
     000D 00rr                      1- 2736     	SFUN	_T2CR1
     000E                           1- 2737     _00394_DS_:
                                    1- 2738     	.line	498, "main.c"; 	}
                                    1- 2739     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2740     ; exit point of _pwm1Init
                                    1- 2742     ;***
                                    1- 2743     ;  pBlock Stats: dbName = C
                                    1- 2744     ;***
                                    1- 2745     ;has an exit
                                    1- 2746     ;functions called:
                                    1- 2747     ;   _delay
                                    1- 2748     ;   _LedInput
                                    1- 2749     ;   _delay
                                    1- 2750     ;   _LedInput
                                    1- 2751     ;1 compiler assigned register :
                                    1- 2752     ;   r0x105A
                                    1- 2753     ;; Starting pCode block
                                    1- 2754     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2756     _LED6ON:
                                    1- 2757     ; 2 exit points
                                    1- 2758     	.line	479, "main.c"; 	L2OUT;
     0000 001r                      1- 2759     	IOSTR	_IOSTB
                                    1- 2760     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2761     	MOVAR	r0x105A
     0003 1Crr                      1- 2762     	BCR	r0x105A,1
     0004 01rr                      1- 2763     	MOVR	r0x105A,W
     0005 000r                      1- 2764     	IOST	_IOSTB
                                    1- 2765     	.line	480, "main.c"; 	L1OUT;
     0006 001r                      1- 2766     	IOSTR	_IOSTA
     0007 00rr                      1- 2767     	MOVAR	r0x105A
     0008 1Crr                      1- 2768     	BCR	r0x105A,0
     0009 01rr                      1- 2769     	MOVR	r0x105A,W
     000A 000r                      1- 2770     	IOST	_IOSTA
                                    1- 2771     	.line	481, "main.c"; 	L1H;
                                    1- 2772     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2773     	BSR	_PORTA,0
                                    1- 2774     	.line	482, "main.c"; 	L2L;
     000D 1Crr                      1- 2775     	BCR	_PORTB,1
                                    1- 2776     	.line	483, "main.c"; 	delay(100);
     000E 2164                      1- 2777     	MOVIA	0x64
                                    1- 2778     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2779     	.line	484, "main.c"; 	LedInput();
                                    1- 2780     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2781     	.line	485, "main.c"; 	}
                                    1- 2782     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2783     ; exit point of _LED6ON
                                    1- 2785     ;***
                                    1- 2786     ;  pBlock Stats: dbName = C
                                    1- 2787     ;***
                                    1- 2788     ;has an exit
                                    1- 2789     ;functions called:
                                    1- 2790     ;   _delay
                                    1- 2791     ;   _LedInput
                                    1- 2792     ;   _delay
                                    1- 2793     ;   _LedInput
                                    1- 2794     ;1 compiler assigned register :
                                    1- 2795     ;   r0x105B
                                    1- 2796     ;; Starting pCode block
                                    1- 2797     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2799     _LED5ON:
                                    1- 2800     ; 2 exit points
                                    1- 2801     	.line	468, "main.c"; 	L2OUT;
     0000 001r                      1- 2802     	IOSTR	_IOSTB
                                    1- 2803     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2804     	MOVAR	r0x105B
     0003 1Crr                      1- 2805     	BCR	r0x105B,1
     0004 01rr                      1- 2806     	MOVR	r0x105B,W
     0005 000r                      1- 2807     	IOST	_IOSTB
                                    1- 2808     	.line	469, "main.c"; 	L1OUT;
     0006 001r                      1- 2809     	IOSTR	_IOSTA
     0007 00rr                      1- 2810     	MOVAR	r0x105B
     0008 1Crr                      1- 2811     	BCR	r0x105B,0
     0009 01rr                      1- 2812     	MOVR	r0x105B,W
     000A 000r                      1- 2813     	IOST	_IOSTA
                                    1- 2814     	.line	470, "main.c"; 	L2H;
     000B 18rr                      1- 2815     	BSR	_PORTB,1
                                    1- 2816     	.line	471, "main.c"; 	L1L;
                                    1- 2817     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2818     	BCR	_PORTA,0
                                    1- 2819     	.line	472, "main.c"; 	delay(100);
     000E 2164                      1- 2820     	MOVIA	0x64
                                    1- 2821     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2822     	.line	473, "main.c"; 	LedInput();
                                    1- 2823     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2824     	.line	474, "main.c"; 	}
                                    1- 2825     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2826     ; exit point of _LED5ON
                                    1- 2828     ;***
                                    1- 2829     ;  pBlock Stats: dbName = C
                                    1- 2830     ;***
                                    1- 2831     ;has an exit
                                    1- 2832     ;functions called:
                                    1- 2833     ;   _delay
                                    1- 2834     ;   _LedInput
                                    1- 2835     ;   _delay
                                    1- 2836     ;   _LedInput
                                    1- 2837     ;1 compiler assigned register :
                                    1- 2838     ;   r0x105C
                                    1- 2839     ;; Starting pCode block
                                    1- 2840     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2842     _LED4ON:
                                    1- 2843     ; 2 exit points
                                    1- 2844     	.line	458, "main.c"; 	L3OUT;
     0000 001r                      1- 2845     	IOSTR	_IOSTA
                                    1- 2846     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2847     	MOVAR	r0x105C
     0003 1Frr                      1- 2848     	BCR	r0x105C,7
     0004 01rr                      1- 2849     	MOVR	r0x105C,W
     0005 000r                      1- 2850     	IOST	_IOSTA
                                    1- 2851     	.line	459, "main.c"; 	L2OUT;
     0006 001r                      1- 2852     	IOSTR	_IOSTB
     0007 00rr                      1- 2853     	MOVAR	r0x105C
     0008 1Crr                      1- 2854     	BCR	r0x105C,1
     0009 01rr                      1- 2855     	MOVR	r0x105C,W
     000A 000r                      1- 2856     	IOST	_IOSTB
                                    1- 2857     	.line	460, "main.c"; 	L3H;
                                    1- 2858     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 2859     	BSR	_PORTA,7
                                    1- 2860     	.line	461, "main.c"; 	L2L;
     000D 1Crr                      1- 2861     	BCR	_PORTB,1
                                    1- 2862     	.line	462, "main.c"; 	delay(100);
     000E 2164                      1- 2863     	MOVIA	0x64
                                    1- 2864     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2865     	.line	463, "main.c"; 	LedInput();
                                    1- 2866     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2867     	.line	464, "main.c"; 	}
                                    1- 2868     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2869     ; exit point of _LED4ON
                                    1- 2871     ;***
                                    1- 2872     ;  pBlock Stats: dbName = C
                                    1- 2873     ;***
                                    1- 2874     ;has an exit
                                    1- 2875     ;functions called:
                                    1- 2876     ;   _delay
                                    1- 2877     ;   _LedInput
                                    1- 2878     ;   _delay
                                    1- 2879     ;   _LedInput
                                    1- 2880     ;1 compiler assigned register :
                                    1- 2881     ;   r0x105D
                                    1- 2882     ;; Starting pCode block
                                    1- 2883     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2885     _LED3ON:
                                    1- 2886     ; 2 exit points
                                    1- 2887     	.line	448, "main.c"; 	L2OUT;
     0000 001r                      1- 2888     	IOSTR	_IOSTB
                                    1- 2889     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2890     	MOVAR	r0x105D
     0003 1Crr                      1- 2891     	BCR	r0x105D,1
     0004 01rr                      1- 2892     	MOVR	r0x105D,W
     0005 000r                      1- 2893     	IOST	_IOSTB
                                    1- 2894     	.line	449, "main.c"; 	L3OUT;
     0006 001r                      1- 2895     	IOSTR	_IOSTA
     0007 00rr                      1- 2896     	MOVAR	r0x105D
     0008 1Frr                      1- 2897     	BCR	r0x105D,7
     0009 01rr                      1- 2898     	MOVR	r0x105D,W
     000A 000r                      1- 2899     	IOST	_IOSTA
                                    1- 2900     	.line	450, "main.c"; 	L2H;
     000B 18rr                      1- 2901     	BSR	_PORTB,1
                                    1- 2902     	.line	451, "main.c"; 	L3L;
                                    1- 2903     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 2904     	BCR	_PORTA,7
                                    1- 2905     	.line	452, "main.c"; 	delay(100);
     000E 2164                      1- 2906     	MOVIA	0x64
                                    1- 2907     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2908     	.line	453, "main.c"; 	LedInput();
                                    1- 2909     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2910     	.line	454, "main.c"; 	}
                                    1- 2911     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2912     ; exit point of _LED3ON
                                    1- 2914     ;***
                                    1- 2915     ;  pBlock Stats: dbName = C
                                    1- 2916     ;***
                                    1- 2917     ;has an exit
                                    1- 2918     ;functions called:
                                    1- 2919     ;   _delay
                                    1- 2920     ;   _LedInput
                                    1- 2921     ;   _delay
                                    1- 2922     ;   _LedInput
                                    1- 2923     ;1 compiler assigned register :
                                    1- 2924     ;   r0x105E
                                    1- 2925     ;; Starting pCode block
                                    1- 2926     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2928     _LED2ON:
                                    1- 2929     ; 2 exit points
                                    1- 2930     	.line	437, "main.c"; 	L3OUT;
     0000 001r                      1- 2931     	IOSTR	_IOSTA
                                    1- 2932     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2933     	MOVAR	r0x105E
     0003 1Frr                      1- 2934     	BCR	r0x105E,7
     0004 01rr                      1- 2935     	MOVR	r0x105E,W
     0005 000r                      1- 2936     	IOST	_IOSTA
                                    1- 2937     	.line	438, "main.c"; 	L1OUT;
     0006 001r                      1- 2938     	IOSTR	_IOSTA
     0007 00rr                      1- 2939     	MOVAR	r0x105E
     0008 1Crr                      1- 2940     	BCR	r0x105E,0
     0009 01rr                      1- 2941     	MOVR	r0x105E,W
     000A 000r                      1- 2942     	IOST	_IOSTA
                                    1- 2943     	.line	439, "main.c"; 	L1H;
                                    1- 2944     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2945     	BSR	_PORTA,0
                                    1- 2946     	.line	440, "main.c"; 	L3L;
     000D 1Frr                      1- 2947     	BCR	_PORTA,7
                                    1- 2948     	.line	441, "main.c"; 	delay(100);
     000E 2164                      1- 2949     	MOVIA	0x64
                                    1- 2950     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2951     	.line	442, "main.c"; 	LedInput();
                                    1- 2952     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2953     	.line	443, "main.c"; 	}
                                    1- 2954     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2955     ; exit point of _LED2ON
                                    1- 2957     ;***
                                    1- 2958     ;  pBlock Stats: dbName = C
                                    1- 2959     ;***
                                    1- 2960     ;has an exit
                                    1- 2961     ;functions called:
                                    1- 2962     ;   _delay
                                    1- 2963     ;   _LedInput
                                    1- 2964     ;   _delay
                                    1- 2965     ;   _LedInput
                                    1- 2966     ;1 compiler assigned register :
                                    1- 2967     ;   r0x105F
                                    1- 2968     ;; Starting pCode block
                                    1- 2969     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2971     _LED1ON:
                                    1- 2972     ; 2 exit points
                                    1- 2973     	.line	427, "main.c"; 	L3OUT;
     0000 001r                      1- 2974     	IOSTR	_IOSTA
                                    1- 2975     	BANKSEL	r0x105F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2976     	MOVAR	r0x105F
     0003 1Frr                      1- 2977     	BCR	r0x105F,7
     0004 01rr                      1- 2978     	MOVR	r0x105F,W
     0005 000r                      1- 2979     	IOST	_IOSTA
                                    1- 2980     	.line	428, "main.c"; 	L1OUT;
     0006 001r                      1- 2981     	IOSTR	_IOSTA
     0007 00rr                      1- 2982     	MOVAR	r0x105F
     0008 1Crr                      1- 2983     	BCR	r0x105F,0
     0009 01rr                      1- 2984     	MOVR	r0x105F,W
     000A 000r                      1- 2985     	IOST	_IOSTA
                                    1- 2986     	.line	429, "main.c"; 	L3H;
                                    1- 2987     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 2988     	BSR	_PORTA,7
                                    1- 2989     	.line	430, "main.c"; 	L1L;
     000D 1Crr                      1- 2990     	BCR	_PORTA,0
                                    1- 2991     	.line	431, "main.c"; 	delay(100);
     000E 2164                      1- 2992     	MOVIA	0x64
                                    1- 2993     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2994     	.line	432, "main.c"; 	LedInput();
                                    1- 2995     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2996     	.line	433, "main.c"; 	}
                                    1- 2997     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2998     ; exit point of _LED1ON
                                    1- 3000     ;***
                                    1- 3001     ;  pBlock Stats: dbName = C
                                    1- 3002     ;***
                                    1- 3003     ;has an exit
                                    1- 3004     ;1 compiler assigned register :
                                    1- 3005     ;   r0x1059
                                    1- 3006     ;; Starting pCode block
                                    1- 3007     .segment "code"; module=main, function=_LedInput
     0000                           1- 3009     _LedInput:
                                    1- 3010     ; 2 exit points
                                    1- 3011     	.line	419, "main.c"; 	IOSTA |= 0x81;
     0000 001r                      1- 3012     	IOSTR	_IOSTA
                                    1- 3013     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3014     	MOVAR	r0x1059
     0003 2181                      1- 3015     	MOVIA	0x81
     0004 11rr                      1- 3016     	IORAR	r0x1059,F
     0005 01rr                      1- 3017     	MOVR	r0x1059,W
     0006 000r                      1- 3018     	IOST	_IOSTA
                                    1- 3019     	.line	420, "main.c"; 	IOSTB |= 0x02;
     0007 001r                      1- 3020     	IOSTR	_IOSTB
     0008 00rr                      1- 3021     	MOVAR	r0x1059
     0009 18rr                      1- 3022     	BSR	r0x1059,1
     000A 01rr                      1- 3023     	MOVR	r0x1059,W
     000B 000r                      1- 3024     	IOST	_IOSTB
                                    1- 3025     	.line	421, "main.c"; 	PORTB &= 0xFD;
     000C 1Crr                      1- 3026     	BCR	_PORTB,1
                                    1- 3027     	.line	422, "main.c"; 	PORTA &= 0x7E;
     000D 217E                      1- 3028     	MOVIA	0x7e
                                    1- 3029     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 10rr                      1- 3030     	ANDAR	_PORTA,F
                                    1- 3031     	.line	423, "main.c"; 	}
                                    1- 3032     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3033     ; exit point of _LedInput
                                    1- 3035     ;***
                                    1- 3036     ;  pBlock Stats: dbName = C
                                    1- 3037     ;***
                                    1- 3038     ;has an exit
                                    1- 3039     ;functions called:
                                    1- 3040     ;   _LedInput
                                    1- 3041     ;   _LedInput
                                    1- 3042     ;   _LED6ON
                                    1- 3043     ;   _LED5ON
                                    1- 3044     ;   _LED4ON
                                    1- 3045     ;   _LED3ON
                                    1- 3046     ;   _LED2ON
                                    1- 3047     ;   _LED1ON
                                    1- 3048     ;   _LedInput
                                    1- 3049     ;   _LedInput
                                    1- 3050     ;   _LED6ON
                                    1- 3051     ;   _LED5ON
                                    1- 3052     ;   _LED4ON
                                    1- 3053     ;   _LED3ON
                                    1- 3054     ;   _LED2ON
                                    1- 3055     ;   _LED1ON
                                    1- 3056     ;; Starting pCode block
                                    1- 3057     .segment "code"; module=main, function=_ledShow
     0000                           1- 3059     _ledShow:
                                    1- 3060     ; 2 exit points
                                    1- 3061     	.line	361, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3062     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3063     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3064     	BTRSC	STATUS,2
                                    1- 3065     	MGOTO	_00291_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3066     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3067     	MOVR	_workStep,W
     0006 0903                      1- 3068     	BTRSS	STATUS,2
                                    1- 3069     	MGOTO	_00291_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3070     	.line	363, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3071     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3072     	BTRSC	_ledDeadTime,0
                                    1- 3073     	MGOTO	_00288_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3074     	.line	365, "main.c"; 	ledStep = 0;
                                    1- 3075     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3076     	CLRR	_ledStep
                                    1- 3077     	MGOTO	_00291_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3078     _00288_DS_:
                                    1- 3079     	.line	369, "main.c"; 	ledStep = tempLedStep;
                                    1- 3080     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3081     	MOVR	_tempLedStep,W
                                    1- 3082     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3083     	MOVAR	_ledStep
     0012                           1- 3084     _00291_DS_:
                                    1- 3085     	.line	373, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3086     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 3087     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3088     	BTRSC	STATUS,2
                                    1- 3089     	MGOTO	_00299_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3090     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3091     	MOVR	_pwStep,W
     0018 0D03                      1- 3092     	BTRSC	STATUS,2
                                    1- 3093     	MGOTO	_00299_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3094     	.line	375, "main.c"; 	if(ledLightTime > 0)
                                    1- 3095     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3096     	MOVR	_ledLightTime,W
     001C 0D03                      1- 3097     	BTRSC	STATUS,2
                                    1- 3098     	MGOTO	_00299_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3099     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3100     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3101     	.line	377, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 3102     	MOVIA	0x07
                                    1- 3103     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 3104     	SUBAR	_pwStep,W
     0021 0803                      1- 3105     	BTRSS	STATUS,0
                                    1- 3106     	MGOTO	_00294_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3107     	.line	378, "main.c"; 	ledStep = 6;
     0023 2106                      1- 3108     	MOVIA	0x06
                                    1- 3109     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 3110     	MOVAR	_ledStep
                                    1- 3111     	MGOTO	_00299_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3112     _00294_DS_:
                                    1- 3113     	.line	380, "main.c"; 	ledStep = pwStep;
                                    1- 3114     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3115     	MOVR	_pwStep,W
                                    1- 3116     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 3117     	MOVAR	_ledStep
     002B                           1- 3118     _00299_DS_:
                                    1- 3119     	.line	383, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3120     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3121     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 3122     	BTRSC	STATUS,2
                                    1- 3123     	MGOTO	_00305_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3124     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3125     	MOVR	_workStep,W
     0031 0D03                      1- 3126     	BTRSC	STATUS,2
                                    1- 3127     	MGOTO	_00305_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3128     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3129     	MOVR	_pwStep,W
     0035 0903                      1- 3130     	BTRSS	STATUS,2
                                    1- 3131     	MGOTO	_00305_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3132     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3133     	.line	385, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 3134     	MOVIA	0x32
                                    1- 3135     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3136     	SUBAR	_count1s,W
     003A 0C03                      1- 3137     	BTRSC	STATUS,0
                                    1- 3138     	MGOTO	_00302_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3139     	.line	386, "main.c"; 	ledStep = workStep;
                                    1- 3140     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3141     	MOVR	_workStep,W
                                    1- 3142     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3143     	MOVAR	_ledStep
                                    1- 3144     	MGOTO	_00305_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3145     _00302_DS_:
                                    1- 3146     	.line	388, "main.c"; 	ledStep = 0;
                                    1- 3147     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 3148     	CLRR	_ledStep
     0043                           1- 3149     _00305_DS_:
                                    1- 3150     	.line	391, "main.c"; 	LedInput();
                                    1- 3151     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3152     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3153     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3154     	.line	392, "main.c"; 	switch(ledStep)
     0044 2109                      1- 3155     	MOVIA	0x09
                                    1- 3156     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 3157     	SUBAR	_ledStep,W
     0047 0C03                      1- 3158     	BTRSC	STATUS,0
                                    1- 3159     	MGOTO	_00318_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 3160     	MOVIA	((_00359_DS_ >> 8) & 0xff)
     004A 008A                      1- 3161     	MOVAR	PCHBUF
     004B 01rr                      1- 3162     	MOVR	_ledStep,W
     004C 25rr                      1- 3163     	ADDIA	_00359_DS_
     004D 0C03                      1- 3164     	BTRSC	STATUS,0
     004E 058A                      1- 3165     	INCR	PCHBUF,F
     004F 0082                      1- 3166     	MOVAR	PCL
     0050                           1- 3167     _00359_DS_:
                                    1- 3168     	MGOTO	_00308_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3169     	MGOTO	_00316_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3170     	MGOTO	_00315_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3171     	MGOTO	_00314_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3172     	MGOTO	_00313_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3173     	MGOTO	_00312_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3174     	MGOTO	_00311_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3175     	MGOTO	_00311_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3176     	MGOTO	_00311_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3177     _00308_DS_:
                                    1- 3178     	.line	395, "main.c"; 	LedInput();
                                    1- 3179     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3180     	.line	396, "main.c"; 	break;
                                    1- 3181     	MGOTO	_00318_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3182     _00311_DS_:
                                    1- 3183     	.line	400, "main.c"; 	LED6ON();
                                    1- 3184     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3185     _00312_DS_:
                                    1- 3186     	.line	402, "main.c"; 	LED5ON();
                                    1- 3187     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3188     _00313_DS_:
                                    1- 3189     	.line	404, "main.c"; 	LED4ON();
                                    1- 3190     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3191     _00314_DS_:
                                    1- 3192     	.line	406, "main.c"; 	LED3ON();
                                    1- 3193     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3194     _00315_DS_:
                                    1- 3195     	.line	408, "main.c"; 	LED2ON();
                                    1- 3196     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3197     _00316_DS_:
                                    1- 3198     	.line	410, "main.c"; 	LED1ON();
                                    1- 3199     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3200     _00318_DS_:
                                    1- 3201     	.line	413, "main.c"; 	}
                                    1- 3202     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 3203     ; exit point of _ledShow
                                    1- 3205     ;***
                                    1- 3206     ;  pBlock Stats: dbName = C
                                    1- 3207     ;***
                                    1- 3208     ;has an exit
                                    1- 3209     ;functions called:
                                    1- 3210     ;   _LedInput
                                    1- 3211     ;   _LedInput
                                    1- 3212     ;; Starting pCode block
                                    1- 3213     .segment "code"; module=main, function=_initSys
     0000                           1- 3215     _initSys:
                                    1- 3216     ; 2 exit points
                                    1- 3217     	.line	329, "main.c"; 	DISI();
     0000 0013                      1- 3218     	DISI
                                    1- 3219     	.line	330, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA1_Input;
     0001 2172                      1- 3220     	MOVIA	0x72
     0002 000r                      1- 3221     	IOST	_IOSTA
                                    1- 3222     	.line	331, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 3223     	MOVIA	0x01
     0004 000r                      1- 3224     	IOST	_IOSTB
                                    1- 3225     	.line	332, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3226     	CLRR	_PORTB
                                    1- 3227     	.line	333, "main.c"; 	PORTA = 0x00;
                                    1- 3228     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3229     	CLRR	_PORTA
                                    1- 3230     	.line	334, "main.c"; 	LedInput();
                                    1- 3231     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3232     	.line	335, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3233     	MOVIA	0xbf
     000A 000r                      1- 3234     	IOST	_APHCON
                                    1- 3235     	.line	336, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3236     	MOVIA	0xff
     000C 00rr                      1- 3237     	MOVAR	_BPHCON
                                    1- 3238     	.line	337, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3239     	MOVAR	_ABPLCON
                                    1- 3240     	.line	339, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 3241     	MOVIA	0x01
     000F 00rr                      1- 3242     	MOVAR	_INTE
                                    1- 3243     	.line	341, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3244     	CLRA	
     0011 000r                      1- 3245     	IOST	_PCON1
                                    1- 3246     	.line	343, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3247     	MOVIA	0x37
     0013 00rr                      1- 3248     	MOVAR	_TMR0
                                    1- 3249     	.line	344, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3250     	MOVIA	0x01
     0015 0003                      1- 3251     	T0MD	
                                    1- 3252     	.line	346, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3253     	IOST	_PCON1
                                    1- 3254     	.line	349, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3255     	MOVIA	0x98
     0018 00rr                      1- 3256     	MOVAR	_PCON
                                    1- 3257     	.line	352, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3258     	MOVIA	0x01
     001A 000r                      1- 3259     	IOST	_PCON1
                                    1- 3260     	.line	353, "main.c"; 	ENI();
     001B 0004                      1- 3261     	ENI
                                    1- 3262     	.line	354, "main.c"; 	}
                                    1- 3263     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 3264     ; exit point of _initSys
                                    1- 3266     ;***
                                    1- 3267     ;  pBlock Stats: dbName = C
                                    1- 3268     ;***
                                    1- 3269     ;has an exit
                                    1- 3270     ;functions called:
                                    1- 3271     ;   _pwmStop
                                    1- 3272     ;   _pwmStop
                                    1- 3273     ;; Starting pCode block
                                    1- 3274     .segment "code"; module=main, function=_powerOff
     0000                           1- 3276     _powerOff:
                                    1- 3277     ; 2 exit points
                                    1- 3278     	.line	320, "main.c"; 	workStep = 0;
                                    1- 3279     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3280     	CLRR	_workStep
                                    1- 3281     	.line	321, "main.c"; 	pwmStop();
                                    1- 3282     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3283     	.line	323, "main.c"; 	}
                                    1- 3284     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3285     ; exit point of _powerOff
                                    1- 3287     ;***
                                    1- 3288     ;  pBlock Stats: dbName = C
                                    1- 3289     ;***
                                    1- 3290     ;has an exit
                                    1- 3291     ;functions called:
                                    1- 3292     ;   _keyRead
                                    1- 3293     ;   _pwmInit
                                    1- 3294     ;   _powerOff
                                    1- 3295     ;   _pwmInit
                                    1- 3296     ;   _keyRead
                                    1- 3297     ;   _pwmInit
                                    1- 3298     ;   _powerOff
                                    1- 3299     ;   _pwmInit
                                    1- 3300     ;2 compiler assigned registers:
                                    1- 3301     ;   r0x1060
                                    1- 3302     ;   r0x1061
                                    1- 3303     ;; Starting pCode block
                                    1- 3304     .segment "code"; module=main, function=_keyCtr
                                    1- 3306     ;local variable name mapping:
     0000                           1- 3308     _keyCtr:
                                    1- 3309     ; 2 exit points
                                    1- 3310     	.line	250, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3311     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3312     	COMR	_PORTA,W
                                    1- 3313     	BANKSEL	r0x1060
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3314     	MOVAR	r0x1060
     0004 2140                      1- 3315     	MOVIA	0x40
     0005 10rr                      1- 3316     	ANDAR	r0x1060,F
     0006 01rr                      1- 3317     	MOVR	r0x1060,W
                                    1- 3318     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3319     	BANKSEL	r0x1060
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3320     	MOVAR	r0x1060
                                    1- 3321     	.line	251, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3322     	XORIA	0x01
     000B 0903                      1- 3323     	BTRSS	STATUS,2
                                    1- 3324     	MGOTO	_00272_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3325     	.line	253, "main.c"; 	count500ms = 0;
                                    1- 3326     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3327     	CLRR	_count500ms
                                    1- 3328     	.line	254, "main.c"; 	ledLightTime = 0;
                                    1- 3329     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3330     	CLRR	_ledLightTime
                                    1- 3331     	.line	255, "main.c"; 	if(workStep == 0)
                                    1- 3332     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3333     	MOVR	_workStep,W
     0013 0903                      1- 3334     	BTRSS	STATUS,2
                                    1- 3335     	MGOTO	_00238_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3336     	.line	257, "main.c"; 	count1s = 0;
                                    1- 3337     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3338     	CLRR	_count1s
                                    1- 3339     	.line	258, "main.c"; 	ledLightTime = 3;
     0017 2103                      1- 3340     	MOVIA	0x03
                                    1- 3341     	BANKSEL	_ledLightTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3342     	MOVAR	_ledLightTime
                                    1- 3343     	.line	259, "main.c"; 	prePwStep = 0;
                                    1- 3344     	BANKSEL	_prePwStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 3345     	CLRR	_prePwStep
                                    1- 3346     	.line	260, "main.c"; 	return;
                                    1- 3347     	MGOTO	_00274_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1- 3348     _00238_DS_:
                                    1- 3349     	.line	262, "main.c"; 	ledTime = 0;
                                    1- 3350     	BANKSEL	_ledTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 3351     	CLRR	_ledTime
                                    1- 3352     	.line	263, "main.c"; 	if(++workStep > 6)
                                    1- 3353     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 3354     	INCR	_workStep,F
                                    1- 3355     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3356     ;;unsigned compare: left >= lit (0x7=7), size=1
     0021 2107                      1- 3357     	MOVIA	0x07
     0022 04rr                      1- 3358     	SUBAR	_workStep,W
     0023 0803                      1- 3359     	BTRSS	STATUS,0
                                    1- 3360     	MGOTO	_00240_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3361     	.line	264, "main.c"; 	workStep = 1;
     0025 2101                      1- 3362     	MOVIA	0x01
     0026 00rr                      1- 3363     	MOVAR	_workStep
     0027                           1- 3364     _00240_DS_:
                                    1- 3365     	.line	265, "main.c"; 	if(pwStep == 0)
                                    1- 3366     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3367     	MOVR	_pwStep,W
     0029 0903                      1- 3368     	BTRSS	STATUS,2
                                    1- 3369     	MGOTO	_00242_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3370     	.line	266, "main.c"; 	shanshuoTime = 10;
     002B 210A                      1- 3371     	MOVIA	0x0a
                                    1- 3372     	BANKSEL	_shanshuoTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 3373     	MOVAR	_shanshuoTime
     002E                           1- 3374     _00242_DS_:
                                    1- 3375     	.line	267, "main.c"; 	if(workStep == 1)
                                    1- 3376     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 3377     	MOVR	_workStep,W
     0030 2401                      1- 3378     	XORIA	0x01
     0031 0903                      1- 3379     	BTRSS	STATUS,2
                                    1- 3380     	MGOTO	_00258_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3381     	.line	269, "main.c"; 	maxDuty = 40;
     0033 2128                      1- 3382     	MOVIA	0x28
                                    1- 3383     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 3384     	MOVAR	_maxDuty
                                    1- 3385     	.line	270, "main.c"; 	ledLightTime = 0;
                                    1- 3386     	BANKSEL	_ledLightTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 3387     	CLRR	_ledLightTime
                                    1- 3388     	MGOTO	_00259_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 3389     _00258_DS_:
                                    1- 3390     	.line	272, "main.c"; 	else if(workStep == 2)
                                    1- 3391     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 3392     	MOVR	_workStep,W
     003B 2402                      1- 3393     	XORIA	0x02
     003C 0903                      1- 3394     	BTRSS	STATUS,2
                                    1- 3395     	MGOTO	_00255_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3396     	.line	273, "main.c"; 	maxDuty = 42;
     003E 212A                      1- 3397     	MOVIA	0x2a
                                    1- 3398     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 3399     	MOVAR	_maxDuty
                                    1- 3400     	MGOTO	_00259_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 3401     _00255_DS_:
                                    1- 3402     	.line	274, "main.c"; 	else if(workStep == 3)
                                    1- 3403     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 3404     	MOVR	_workStep,W
     0044 2403                      1- 3405     	XORIA	0x03
     0045 0903                      1- 3406     	BTRSS	STATUS,2
                                    1- 3407     	MGOTO	_00252_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3408     	.line	275, "main.c"; 	maxDuty = 44;
     0047 212C                      1- 3409     	MOVIA	0x2c
                                    1- 3410     	BANKSEL	_maxDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 3411     	MOVAR	_maxDuty
                                    1- 3412     	MGOTO	_00259_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 3413     _00252_DS_:
                                    1- 3414     	.line	276, "main.c"; 	else if(workStep == 4)
                                    1- 3415     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3416     	MOVR	_workStep,W
     004D 2404                      1- 3417     	XORIA	0x04
     004E 0903                      1- 3418     	BTRSS	STATUS,2
                                    1- 3419     	MGOTO	_00249_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3420     	.line	277, "main.c"; 	maxDuty = 46;
     0050 212E                      1- 3421     	MOVIA	0x2e
                                    1- 3422     	BANKSEL	_maxDuty
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 3423     	MOVAR	_maxDuty
                                    1- 3424     	MGOTO	_00259_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 3425     _00249_DS_:
                                    1- 3426     	.line	278, "main.c"; 	else if(workStep == 5)
                                    1- 3427     	BANKSEL	_workStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 3428     	MOVR	_workStep,W
     0056 2405                      1- 3429     	XORIA	0x05
     0057 0903                      1- 3430     	BTRSS	STATUS,2
                                    1- 3431     	MGOTO	_00246_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3432     	.line	279, "main.c"; 	maxDuty = 48;
     0059 2130                      1- 3433     	MOVIA	0x30
                                    1- 3434     	BANKSEL	_maxDuty
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 3435     	MOVAR	_maxDuty
                                    1- 3436     	MGOTO	_00259_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 3437     _00246_DS_:
                                    1- 3438     	.line	280, "main.c"; 	else if(workStep == 6)
                                    1- 3439     	BANKSEL	_workStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 3440     	MOVR	_workStep,W
     005F 2406                      1- 3441     	XORIA	0x06
     0060 0903                      1- 3442     	BTRSS	STATUS,2
                                    1- 3443     	MGOTO	_00259_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3444     	.line	281, "main.c"; 	maxDuty = 50;
     0062 2132                      1- 3445     	MOVIA	0x32
                                    1- 3446     	BANKSEL	_maxDuty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 3447     	MOVAR	_maxDuty
     0065                           1- 3448     _00259_DS_:
                                    1- 3449     	.line	282, "main.c"; 	if(workStep > 0)
                                    1- 3450     	BANKSEL	_workStep
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 3451     	MOVR	_workStep,W
     0067 0D03                      1- 3452     	BTRSC	STATUS,2
                                    1- 3453     	MGOTO	_00261_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3454     	.line	284, "main.c"; 	PWM3DUTY = 100 - maxDuty;
                                    1- 3455     	BANKSEL	_maxDuty
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3456     	MOVR	_maxDuty,W
     006B 2764                      1- 3457     	SUBIA	0x64
                                    1- 3458     ;;1	MOVAR	r0x1061
     006C 00rr                      1- 3459     	SFUN	_PWM3DUTY
                                    1- 3460     	.line	285, "main.c"; 	pwmInit();
                                    1- 3461     	MCALL	_pwmInit
     006D 2rrr                      3-   66 m1      LCALL rom_address
     006E                           1- 3462     _00261_DS_:
                                    1- 3463     	.line	287, "main.c"; 	ledStep = workStep;
                                    1- 3464     	BANKSEL	_workStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 3465     	MOVR	_workStep,W
                                    1- 3466     	BANKSEL	_ledStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 00rr                      1- 3467     	MOVAR	_ledStep
                                    1- 3468     	MGOTO	_00274_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
     0073                           1- 3469     _00272_DS_:
                                    1- 3470     	.line	289, "main.c"; 	else if(kclick == 2)
                                    1- 3471     	BANKSEL	r0x1060
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 3472     	MOVR	r0x1060,W
     0075 2402                      1- 3473     	XORIA	0x02
     0076 0903                      1- 3474     	BTRSS	STATUS,2
                                    1- 3475     	MGOTO	_00274_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3476     	.line	291, "main.c"; 	if(workStep > 0)
                                    1- 3477     	BANKSEL	_workStep
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1- 3478     	MOVR	_workStep,W
     007A 0D03                      1- 3479     	BTRSC	STATUS,2
                                    1- 3480     	MGOTO	_00267_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3481     	.line	293, "main.c"; 	powerOff();
                                    1- 3482     	MCALL	_powerOff
     007C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3483     	MGOTO	_00268_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
     007E                           1- 3484     _00267_DS_:
                                    1- 3485     	.line	297, "main.c"; 	if(pwStep == 10)
                                    1- 3486     	BANKSEL	_pwStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 01rr                      1- 3487     	MOVR	_pwStep,W
     0080 240A                      1- 3488     	XORIA	0x0a
     0081 0903                      1- 3489     	BTRSS	STATUS,2
                                    1- 3490     	MGOTO	_00263_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3491     	.line	299, "main.c"; 	sleepTime = 0;
                                    1- 3492     	BANKSEL	_sleepTime
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 02rr                      1- 3493     	CLRR	_sleepTime
     0085 02rr                      1- 3494     	CLRR	(_sleepTime + 1)
                                    1- 3495     	.line	300, "main.c"; 	return;
                                    1- 3496     	MGOTO	_00274_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
     0087                           1- 3497     _00263_DS_:
                                    1- 3498     	.line	302, "main.c"; 	ledLightTime = 0;
                                    1- 3499     	BANKSEL	_ledLightTime
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 02rr                      1- 3500     	CLRR	_ledLightTime
                                    1- 3501     	.line	303, "main.c"; 	ledStep = 1;
     0089 2101                      1- 3502     	MOVIA	0x01
                                    1- 3503     	BANKSEL	_ledStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 3504     	MOVAR	_ledStep
                                    1- 3505     	.line	304, "main.c"; 	workStep = 1;
                                    1- 3506     	BANKSEL	_workStep
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 3507     	MOVAR	_workStep
                                    1- 3508     	.line	305, "main.c"; 	pwmInit();
                                    1- 3509     	MCALL	_pwmInit
     008E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3510     	.line	306, "main.c"; 	PWM3DUTY = 60;
     008F 213C                      1- 3511     	MOVIA	0x3c
     0090 00rr                      1- 3512     	SFUN	_PWM3DUTY
                                    1- 3513     	.line	307, "main.c"; 	currentDuty = 60;
                                    1- 3514     	BANKSEL	_currentDuty
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3515     	MOVAR	_currentDuty
                                    1- 3516     	.line	308, "main.c"; 	maxDuty = 40;
     0093 2128                      1- 3517     	MOVIA	0x28
                                    1- 3518     	BANKSEL	_maxDuty
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 00rr                      1- 3519     	MOVAR	_maxDuty
                                    1- 3520     	.line	309, "main.c"; 	if(pwStep == 0)
                                    1- 3521     	BANKSEL	_pwStep
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 01rr                      1- 3522     	MOVR	_pwStep,W
     0098 0903                      1- 3523     	BTRSS	STATUS,2
                                    1- 3524     	MGOTO	_00268_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3525     	.line	310, "main.c"; 	shanshuoTime = 10;
     009A 210A                      1- 3526     	MOVIA	0x0a
                                    1- 3527     	BANKSEL	_shanshuoTime
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 00rr                      1- 3528     	MOVAR	_shanshuoTime
     009D                           1- 3529     _00268_DS_:
                                    1- 3530     	.line	313, "main.c"; 	ledStep = workStep;
                                    1- 3531     	BANKSEL	_workStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 01rr                      1- 3532     	MOVR	_workStep,W
                                    1- 3533     	BANKSEL	_ledStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 3534     	MOVAR	_ledStep
     00A1                           1- 3535     _00274_DS_:
                                    1- 3536     	.line	315, "main.c"; 	}
                                    1- 3537     	RETURN	
     00A1 0010                      3-   40 m1      ret
                                    1- 3538     ; exit point of _keyCtr
                                    1- 3541     ;	code size estimation:
                                    1- 3542     ;	 1322+  375 =  1697 instructions ( 4144 byte)
                                    1- 3544     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
