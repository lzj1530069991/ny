
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_LED6ON
                                    1-   18     	extern	_fgCtr
                                    1-   19     	extern	_LedCtr2
                                    1-   20     	extern	_checkInAD
                                    1-   21     	extern	_F_AIN3_Convert
                                    1-   22     	extern	__divuint
                                    1-   23     	extern	_PORTAbits
                                    1-   24     	extern	_PORTBbits
                                    1-   25     	extern	_PCONbits
                                    1-   26     	extern	_BWUCONbits
                                    1-   27     	extern	_ABPLCONbits
                                    1-   28     	extern	_BPHCONbits
                                    1-   29     	extern	_INTEbits
                                    1-   30     	extern	_INTFbits
                                    1-   31     	extern	_ADMDbits
                                    1-   32     	extern	_ADRbits
                                    1-   33     	extern	_ADVREFHbits
                                    1-   34     	extern	_ADCRbits
                                    1-   35     	extern	_AWUCONbits
                                    1-   36     	extern	_PACONbits
                                    1-   37     	extern	_INTEDGbits
                                    1-   38     	extern	_ANAENbits
                                    1-   39     	extern	_RFCbits
                                    1-   40     	extern	_INTE2bits
                                    1-   41     	extern	_INDF
                                    1-   42     	extern	_TMR0
                                    1-   43     	extern	_PCL
                                    1-   44     	extern	_STATUS
                                    1-   45     	extern	_FSR
                                    1-   46     	extern	_PORTA
                                    1-   47     	extern	_PORTB
                                    1-   48     	extern	_PCON
                                    1-   49     	extern	_BWUCON
                                    1-   50     	extern	_PCHBUF
                                    1-   51     	extern	_ABPLCON
                                    1-   52     	extern	_BPHCON
                                    1-   53     	extern	_INTE
                                    1-   54     	extern	_INTF
                                    1-   55     	extern	_ADMD
                                    1-   56     	extern	_ADR
                                    1-   57     	extern	_ADD
                                    1-   58     	extern	_ADVREFH
                                    1-   59     	extern	_ADCR
                                    1-   60     	extern	_AWUCON
                                    1-   61     	extern	_PACON
                                    1-   62     	extern	_INTEDG
                                    1-   63     	extern	_TMRH
                                    1-   64     	extern	_ANAEN
                                    1-   65     	extern	_RFC
                                    1-   66     	extern	_TM3RH
                                    1-   67     	extern	_INTE2
                                    1-   68     	extern	_TMR1
                                    1-   69     	extern	_T1CR1
                                    1-   70     	extern	_T1CR2
                                    1-   71     	extern	_PWM1DUTY
                                    1-   72     	extern	_PS1CV
                                    1-   73     	extern	_BZ1CR
                                    1-   74     	extern	_IRCR
                                    1-   75     	extern	_TBHP
                                    1-   76     	extern	_TBHD
                                    1-   77     	extern	_TMR2
                                    1-   78     	extern	_T2CR1
                                    1-   79     	extern	_T2CR2
                                    1-   80     	extern	_PWM2DUTY
                                    1-   81     	extern	_PS2CV
                                    1-   82     	extern	_BZ2CR
                                    1-   83     	extern	_OSCCR
                                    1-   84     	extern	_TMR3
                                    1-   85     	extern	_T3CR1
                                    1-   86     	extern	_T3CR2
                                    1-   87     	extern	_PWM3DUTY
                                    1-   88     	extern	_PS3CV
                                    1-   89     	extern	_BZ3CR
                                    1-   90     	extern	_IOSTA
                                    1-   91     	extern	_IOSTB
                                    1-   92     	extern	_APHCON
                                    1-   93     	extern	_PS0CV
                                    1-   94     	extern	_BODCON
                                    1-   95     	extern	_CMPCR
                                    1-   96     	extern	_PCON1
                                    1-   97     	extern	_T0MD
                                    1-   98     	extern	___sdcc_saved_fsr
                                    1-   99     	extern	___sdcc_saved_stk00
                                    1-  100     	extern	___sdcc_saved_stk01
                                    1-  101     	extern	__mulchar
                                    1-  102     	extern	__nyc_ny8_startup
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     ; global declarations
                                    1-  105     ;--------------------------------------------------------
                                    1-  106     	extern	_F_wait_eoc
                                    1-  107     	extern	_F_AIN2_Convert
                                    1-  108     	extern	_F_AIN4_Convert
                                    1-  109     	extern	_checkOutA
                                    1-  110     	extern	_checkBatAD
                                    1-  111     	extern	_initAD
                                    1-  112     	extern	_delay
                                    1-  113     	extern	_chrgCtr
                                    1-  114     	extern	_keyRead
                                    1-  115     	extern	_gotoSleep
                                    1-  116     	extern	_pwmStop
                                    1-  117     	extern	_pwmInit
                                    1-  118     	extern	_LED1ON
                                    1-  119     	extern	_LED2ON
                                    1-  120     	extern	_LED3ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED5ON
                                    1-  123     	extern	_LedInput
                                    1-  124     	extern	_ledShow
                                    1-  125     	extern	_initSys
                                    1-  126     	extern	_powerOff
                                    1-  127     	extern	_keyCtr
                                    1-  128     	extern	_isr
                                    1-  129     	extern	_main
                                    1-  130     	extern	_Status
                                    1-  131     	extern	_intCount
                                    1-  132     	extern	_count500ms
                                    1-  133     	extern	_keyCount
                                    1-  134     	extern	_workStep
                                    1-  135     	extern	_ledStep
                                    1-  136     	extern	_maxDuty
                                    1-  137     	extern	_pwStep
                                    1-  138     	extern	_R_AIN4_DATA
                                    1-  139     	extern	_R_AIN4_DATA_LB
                                    1-  140     	extern	_R_AIN2_DATA
                                    1-  141     	extern	_R_AIN2_DATA_LB
                                    1-  142     	extern	_chrgTime
                                    1-  143     	extern	_startStep
                                    1-  144     	extern	_sleepTime
                                    1-  145     	extern	_count200ms
                                    1-  146     	extern	_count1s
                                    1-  147     	extern	_count900s
                                    1-  148     	extern	_lowBatTime
                                    1-  149     	extern	_ledTime
                                    1-  150     	extern	_overCount
                                    1-  151     	extern	_chrgCount
                                    1-  152     	extern	_ledLightTime
                                    1-  153     	extern	_currentDuty
                                    1-  154     	extern	_fullCount
                                    1-  155     	extern	_shanshuoTime
                                    1-  156     	extern	_firstTime
                                    1-  157     	extern	_tempDuty
                                    1-  158     	extern	_lowCount
                                    1-  159     	extern	_cDuty
                                    1-  160     	extern	_tempLedStep
                                    1-  161     	extern	_count5S
                                    1-  162     	extern	_ledDeadTime
                                    1-  163     	extern	_lockLedStep
                                    1-  164     	extern	_closeCount
                                    1-  165     	extern	_chrgStep
                                    1-  166     	extern	_prePwStep
                                    1-  167     	extern	_chrgduty
                                    1-  168     	extern	_maxduty
                                    1-  169     	extern	_count50ms
                                    1-  170     	extern	_chrgFullFlag
                                    1-  171     	extern	_ledCount
                                    1-  172     	extern	_addTime
                                    1-  173     	extern	_subTime
                                    1-  174     	extern	_subMin
                                    1-  175     	extern	_chrgWaitTime
                                    1-  176     	extern	_tempSum
                                    1-  177     	extern	_count100
                                    1-  178     	extern	_tempResult
                                    1-  179     	extern	_debug
                                    1-  181     	extern PSAVE
                                    1-  182     	extern SSAVE
                                    1-  183     	extern WSAVE
                                    1-  184     	extern STK04
                                    1-  185     	extern STK03
                                    1-  186     	extern STK02
                                    1-  187     	extern STK01
                                    1-  188     	extern STK00
                                    1-  190     .segment "uninit", 0x20000040
 20000040                           1-  191     PSAVE:
                                    1-  192     	.res 1
 20000041                           1-  193     SSAVE:
                                    1-  194     	.res 1
 20000042                           1-  195     WSAVE:
                                    1-  196     	.res 1
 20000043                           1-  197     STK04:
                                    1-  198     	.res 1
 20000044                           1-  199     STK03:
                                    1-  200     	.res 1
 20000045                           1-  201     STK02:
                                    1-  202     	.res 1
 20000046                           1-  203     STK01:
                                    1-  204     	.res 1
 20000047                           1-  205     STK00:
                                    1-  206     	.res 1
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     ; global definitions
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     .segment "uninit"
     0000                           1-  212     _R_AIN4_DATA:
                                    1-  213     	.res	2
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN4_DATA_LB:
                                    1-  218     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN2_DATA:
                                    1-  223     	.res	2
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN2_DATA_LB:
                                    1-  228     	.res	1
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; absolute symbol definitions
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ;--------------------------------------------------------
                                    1-  235     ; compiler-defined variables
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x105B:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1054:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x105A:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1059:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1058:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1057:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1056:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1055:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1053:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x104E:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x104F:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1050:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1052:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1038:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1039:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x104C:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x104D:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x1046:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x1047:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x1048:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1049:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x1040:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x1041:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x1042:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x1045:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x103A:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x103B:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x103C:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x103F:
                                    1-  323     	.res	1
                                    1-  324     ;--------------------------------------------------------
                                    1-  325     ; initialized data
                                    1-  326     ;--------------------------------------------------------
                                    1-  328     .segment "idata"
     0000                           1-  329     _Status:
     0000 0000                      1-  330     	dw	0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _intCount:
     0000 0000                      1-  336     	dw	0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _count500ms:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _keyCount:
     0000 0000                      1-  348     	dw	0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _workStep:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _ledStep:
     0000 0000                      1-  360     	dw	0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _maxDuty:
     0000 0000                      1-  366     	dw	0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _pwStep:
     0000 0000                      1-  372     	dw	0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _chrgTime:
     0000 0000 0000                 1-  378     	dw	0x00, 0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _startStep:
     0000 0000                      1-  384     	dw	0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _sleepTime:
     0000 0000 0000                 1-  390     	dw	0x00, 0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _count200ms:
     0000 0000                      1-  396     	dw	0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _count1s:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _count900s:
     0000 0000 0000                 1-  408     	dw	0x00, 0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _lowBatTime:
     0000 0000                      1-  414     	dw	0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _ledTime:
     0000 0000                      1-  420     	dw	0x00
                                    1-  424     .segment "idata"
     0000                           1-  425     _overCount:
     0000 0000                      1-  426     	dw	0x00
                                    1-  430     .segment "idata"
     0000                           1-  431     _chrgCount:
     0000 0000                      1-  432     	dw	0x00
                                    1-  436     .segment "idata"
     0000                           1-  437     _ledLightTime:
     0000 0000                      1-  438     	dw	0x00
                                    1-  442     .segment "idata"
     0000                           1-  443     _currentDuty:
     0000 0000                      1-  444     	dw	0x00
                                    1-  448     .segment "idata"
     0000                           1-  449     _fullCount:
     0000 0000 0000                 1-  450     	dw	0x00, 0x00
                                    1-  454     .segment "idata"
     0000                           1-  455     _shanshuoTime:
     0000 0000                      1-  456     	dw	0x00
                                    1-  460     .segment "idata"
     0000                           1-  461     _firstTime:
     0000 0000                      1-  462     	dw	0x00
                                    1-  466     .segment "idata"
     0000                           1-  467     _tempDuty:
     0000 0000                      1-  468     	dw	0x00
                                    1-  472     .segment "idata"
     0000                           1-  473     _lowCount:
     0000 0000                      1-  474     	dw	0x00
                                    1-  478     .segment "idata"
     0000                           1-  479     _cDuty:
     0000 0000                      1-  480     	dw	0x00
                                    1-  484     .segment "idata"
     0000                           1-  485     _tempLedStep:
     0000 0000                      1-  486     	dw	0x00
                                    1-  490     .segment "idata"
     0000                           1-  491     _count5S:
     0000 0000 0000                 1-  492     	dw	0x00, 0x00
                                    1-  496     .segment "idata"
     0000                           1-  497     _ledDeadTime:
     0000 0000                      1-  498     	dw	0x00
                                    1-  502     .segment "idata"
     0000                           1-  503     _lockLedStep:
     0000 0000                      1-  504     	dw	0x00
                                    1-  508     .segment "idata"
     0000                           1-  509     _closeCount:
     0000 0000 0000                 1-  510     	dw	0x00, 0x00
                                    1-  514     .segment "idata"
     0000                           1-  515     _chrgStep:
     0000 0000                      1-  516     	dw	0x00
                                    1-  520     .segment "idata"
     0000                           1-  521     _prePwStep:
     0000 0000                      1-  522     	dw	0x00
                                    1-  526     .segment "idata"
     0000                           1-  527     _chrgduty:
     0000 0000                      1-  528     	dw	0x00
                                    1-  532     .segment "idata"
     0000                           1-  533     _maxduty:
     0000 0000                      1-  534     	dw	0x00
                                    1-  538     .segment "idata"
     0000                           1-  539     _count50ms:
     0000 0000                      1-  540     	dw	0x00
                                    1-  544     .segment "idata"
     0000                           1-  545     _chrgFullFlag:
     0000 0000                      1-  546     	dw	0x00
                                    1-  550     .segment "idata"
     0000                           1-  551     _ledCount:
     0000 0000                      1-  552     	dw	0x00
                                    1-  556     .segment "idata"
     0000                           1-  557     _addTime:
     0000 0000                      1-  558     	dw	0x00
                                    1-  562     .segment "idata"
     0000                           1-  563     _subTime:
     0000 0000                      1-  564     	dw	0x00
                                    1-  568     .segment "idata"
     0000                           1-  569     _subMin:
     0000 0000                      1-  570     	dw	0x00
                                    1-  574     .segment "idata"
     0000                           1-  575     _chrgWaitTime:
     0000 0000                      1-  576     	dw	0x00
                                    1-  580     .segment "idata"
     0000                           1-  581     _tempSum:
     0000 0000 0000                 1-  582     	dw	0x00, 0x00
                                    1-  586     .segment "idata"
     0000                           1-  587     _count100:
     0000 0000                      1-  588     	dw	0x00
                                    1-  592     .segment "idata"
     0000                           1-  593     _tempResult:
     0000 0000 0000                 1-  594     	dw	0x00, 0x00
                                    1-  598     .segment "idata"
     0000                           1-  599     _debug:
     0000 0000                      1-  600     	dw	0x00
                                    1-  603     ;--------------------------------------------------------
                                    1-  604     ; overlayable items in internal ram 
                                    1-  605     ;--------------------------------------------------------
                                    1-  606     ;	udata_ovr
                                    1-  607     ;--------------------------------------------------------
                                    1-  608     ; reset vector 
                                    1-  609     ;--------------------------------------------------------
                                    1-  610     ORG	0x0000
     0000 3rrr                      1-  611     	LGOTO	__nyc_ny8_startup
                                    1-  612     ;--------------------------------------------------------
                                    1-  613     ; interrupt and initialization code
                                    1-  614     ;--------------------------------------------------------
                                    1-  615     ORG 0x0008
                                    1-  616     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  618     .segment "code"
     0000                           1-  619     __sdcc_interrupt:
                                    1-  620     ;***
                                    1-  621     ;  pBlock Stats: dbName = I
                                    1-  622     ;***
                                    1-  623     ;2 compiler assigned registers:
                                    1-  624     ;   STK00
                                    1-  625     ;   STK01
                                    1-  626     ;; Starting pCode block
     0000                           1-  627     _isr:
                                    1-  628     ; 0 exit points
                                    1-  629     	.line	119, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  630     	MOVAR	WSAVE
     0001 1503                      1-  631     	SWAPR	STATUS,W
     0002 0283                      1-  632     	CLRR	STATUS
     0003 00rr                      1-  633     	MOVAR	SSAVE
     0004 010A                      1-  634     	MOVR	PCHBUF,W
     0005 028A                      1-  635     	CLRR	PCHBUF
     0006 00rr                      1-  636     	MOVAR	PSAVE
     0007 0104                      1-  637     	MOVR	FSR,W
                                    1-  638     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  639     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  640     	MOVR	STK00,W
                                    1-  641     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  642     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  643     	MOVR	STK01,W
                                    1-  644     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  645     	MOVAR	___sdcc_saved_stk01
                                    1-  646     	.line	121, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  647     	BTRSS	_INTFbits,0
                                    1-  648     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  649     	.line	123, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  650     	MOVIA	0x37
     0013 03rr                      1-  651     	ADDAR	_TMR0,F
                                    1-  652     	.line	125, "main.c"; 	if(++intCount >= 100)
                                    1-  653     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  654     	INCR	_intCount,F
                                    1-  655     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  656     	MOVIA	0x64
     0017 04rr                      1-  657     	SUBAR	_intCount,W
     0018 0803                      1-  658     	BTRSS	STATUS,0
                                    1-  659     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  660     	.line	127, "main.c"; 	IntFlag = 1;
                                    1-  661     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  662     	BSR	_Status,0
                                    1-  663     	.line	128, "main.c"; 	intCount = 0;
                                    1-  664     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  665     	CLRR	_intCount
                                    1-  666     	.line	129, "main.c"; 	if(++count500ms >= 40)
                                    1-  667     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  668     	INCR	_count500ms,F
                                    1-  669     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  670     	MOVIA	0x28
     0021 04rr                      1-  671     	SUBAR	_count500ms,W
     0022 0C03                      1-  672     	BTRSC	STATUS,0
                                    1-  673     	.line	130, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  674     	CLRR	_count500ms
                                    1-  675     	.line	131, "main.c"; 	if(++count200ms >= 20)
                                    1-  676     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  677     	INCR	_count200ms,F
     0026 2114                      1-  678     	MOVIA	0x14
     0027 04rr                      1-  679     	SUBAR	_count200ms,W
     0028 0803                      1-  680     	BTRSS	STATUS,0
                                    1-  681     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  682     	.line	133, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  683     	CLRR	_count200ms
                                    1-  684     	.line	134, "main.c"; 	if(ledDeadTime > 0)
                                    1-  685     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  686     	MOVR	_ledDeadTime,W
     002D 0903                      1-  687     	BTRSS	STATUS,2
                                    1-  688     	.line	135, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  689     	DECR	_ledDeadTime,F
     002F                           1-  690     _00110_DS_:
                                    1-  691     	.line	137, "main.c"; 	if(++count1s >= 100)
                                    1-  692     	BANKSEL	_count1s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  693     	INCR	_count1s,F
     0031 2164                      1-  694     	MOVIA	0x64
     0032 04rr                      1-  695     	SUBAR	_count1s,W
     0033 0803                      1-  696     	BTRSS	STATUS,0
                                    1-  697     	MGOTO	_00126_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  698     	.line	139, "main.c"; 	count1s = 0;
     0035 02rr                      1-  699     	CLRR	_count1s
                                    1-  700     	.line	140, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  701     	BANKSEL	_Status
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 09rr                      1-  702     	BTRSS	_Status,3
                                    1-  703     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  704     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  705     	MOVR	_pwStep,W
     003B 2406                      1-  706     	XORIA	0x06
     003C 0903                      1-  707     	BTRSS	STATUS,2
                                    1-  708     	MGOTO	_00112_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  709     	.line	142, "main.c"; 	++chrgTime;
                                    1-  710     	BANKSEL	_chrgTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  711     	INCR	_chrgTime,F
     0040 0D03                      1-  712     	BTRSC	STATUS,2
     0041 05rr                      1-  713     	INCR	(_chrgTime + 1),F
     0042                           1-  714     _00112_DS_:
                                    1-  715     	.line	145, "main.c"; 	if(ledLightTime > 0)
                                    1-  716     	BANKSEL	_ledLightTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  717     	MOVR	_ledLightTime,W
     0044 0903                      1-  718     	BTRSS	STATUS,2
                                    1-  719     	.line	146, "main.c"; 	--ledLightTime;
     0045 06rr                      1-  720     	DECR	_ledLightTime,F
                                    1-  721     	.line	147, "main.c"; 	if(shanshuoTime > 0)
                                    1-  722     	BANKSEL	_shanshuoTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  723     	MOVR	_shanshuoTime,W
     0048 0903                      1-  724     	BTRSS	STATUS,2
                                    1-  725     	.line	148, "main.c"; 	--shanshuoTime;
     0049 06rr                      1-  726     	DECR	_shanshuoTime,F
                                    1-  727     	.line	149, "main.c"; 	if(workStep)
                                    1-  728     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  729     	MOVR	_workStep,W
     004C 0D03                      1-  730     	BTRSC	STATUS,2
                                    1-  731     	MGOTO	_00119_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  732     	.line	151, "main.c"; 	++count900s;
                                    1-  733     	BANKSEL	_count900s
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1-  734     	INCR	_count900s,F
     0050 0D03                      1-  735     	BTRSC	STATUS,2
     0051 05rr                      1-  736     	INCR	(_count900s + 1),F
                                    1-  737     	MGOTO	_00126_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1-  738     _00119_DS_:
                                    1-  739     	.line	155, "main.c"; 	count900s = 0;
                                    1-  740     	BANKSEL	_count900s
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  741     	CLRR	_count900s
     0055 02rr                      1-  742     	CLRR	(_count900s + 1)
     0056                           1-  743     _00126_DS_:
                                    1-  744     	.line	164, "main.c"; 	if(INTFbits.PABIF)
     0056 08rr                      1-  745     	BTRSS	_INTFbits,1
                                    1-  746     	MGOTO	_00128_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  747     	.line	166, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0058 21FD                      1-  748     	MOVIA	0xfd
     0059 00rr                      1-  749     	MOVAR	_INTF
     005A                           1-  750     _00128_DS_:
                                    1-  751     	.line	169, "main.c"; 	INTF = 0;
     005A 02rr                      1-  752     	CLRR	_INTF
                                    1-  753     	.line	171, "main.c"; 	}
                                    1-  754     	BANKSEL	___sdcc_saved_stk01
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  755     	MOVR	___sdcc_saved_stk01,W
     005D 00rr                      1-  756     	MOVAR	STK01
                                    1-  757     	BANKSEL	___sdcc_saved_stk00
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  758     	MOVR	___sdcc_saved_stk00,W
     0060 00rr                      1-  759     	MOVAR	STK00
                                    1-  760     	BANKSEL	___sdcc_saved_fsr
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  761     	MOVR	___sdcc_saved_fsr,W
     0063 0084                      1-  762     	MOVAR	FSR
     0064 01rr                      1-  763     	MOVR	PSAVE,W
     0065 008A                      1-  764     	MOVAR	PCHBUF
     0066 0283                      1-  765     	CLRR	STATUS
     0067 15rr                      1-  766     	SWAPR	SSAVE,W
     0068 0083                      1-  767     	MOVAR	STATUS
     0069 15rr                      1-  768     	SWAPR	WSAVE,F
     006A 15rr                      1-  769     	SWAPR	WSAVE,W
     006B                           1-  770     END_OF_INTERRUPT:
     006B 0011                      1-  771     	RETIE	
                                    1-  773     ;--------------------------------------------------------
                                    1-  774     ; code
                                    1-  775     ;--------------------------------------------------------
                                    1-  776     ;***
                                    1-  777     ;  pBlock Stats: dbName = M
                                    1-  778     ;***
                                    1-  779     ;has an exit
                                    1-  780     ;functions called:
                                    1-  781     ;   _initSys
                                    1-  782     ;   _initAD
                                    1-  783     ;   _ledShow
                                    1-  784     ;   _pwmStop
                                    1-  785     ;   _powerOff
                                    1-  786     ;   _keyCtr
                                    1-  787     ;   _checkBatAD
                                    1-  788     ;   _checkOutA
                                    1-  789     ;   _chrgCtr
                                    1-  790     ;   _gotoSleep
                                    1-  791     ;   _powerOff
                                    1-  792     ;   _initSys
                                    1-  793     ;   _initAD
                                    1-  794     ;   _ledShow
                                    1-  795     ;   _pwmStop
                                    1-  796     ;   _powerOff
                                    1-  797     ;   _keyCtr
                                    1-  798     ;   _checkBatAD
                                    1-  799     ;   _checkOutA
                                    1-  800     ;   _chrgCtr
                                    1-  801     ;   _gotoSleep
                                    1-  802     ;   _powerOff
                                    1-  803     ;; Starting pCode block
                                    1-  804     .segment "code"; module=main, function=_main
     0000                           1-  806     _main:
                                    1-  807     ; 2 exit points
                                    1-  808     	.line	175, "main.c"; 	initSys();
                                    1-  809     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  810     	.line	176, "main.c"; 	initAD();
                                    1-  811     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  812     _00175_DS_:
                                    1-  813     	.line	179, "main.c"; 	CLRWDT();
     0002 0002                      1-  814     	clrwdt
                                    1-  815     	.line	180, "main.c"; 	ledShow();
                                    1-  816     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  817     	.line	181, "main.c"; 	if(workStep > 0 && tempDuty >= 45)
                                    1-  818     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  819     	MOVR	_workStep,W
     0006 0D03                      1-  820     	BTRSC	STATUS,2
                                    1-  821     	MGOTO	_00139_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  822     ;;unsigned compare: left < lit (0x2D=45), size=1
     0008 212D                      1-  823     	MOVIA	0x2d
                                    1-  824     	BANKSEL	_tempDuty
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  825     	SUBAR	_tempDuty,W
     000B 0803                      1-  826     	BTRSS	STATUS,0
                                    1-  827     	MGOTO	_00139_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  828     	.line	183, "main.c"; 	if(cDuty > tempDuty)
                                    1-  829     	BANKSEL	_cDuty
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  830     	MOVR	_cDuty,W
                                    1-  831     	BANKSEL	_tempDuty
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1-  832     	SUBAR	_tempDuty,W
     0011 0C03                      1-  833     	BTRSC	STATUS,0
                                    1-  834     	MGOTO	_00136_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  835     	.line	185, "main.c"; 	cDuty--;
                                    1-  836     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 06rr                      1-  837     	DECR	_cDuty,F
                                    1-  838     	.line	186, "main.c"; 	PWM1DUTY = cDuty;
     0015 01rr                      1-  839     	MOVR	_cDuty,W
     0016 00rr                      1-  840     	SFUN	_PWM1DUTY
                                    1-  841     	MGOTO	_00139_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1-  842     _00136_DS_:
                                    1-  843     	.line	188, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  844     	BANKSEL	_tempDuty
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1-  845     	MOVR	_tempDuty,W
                                    1-  846     	BANKSEL	_cDuty
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 04rr                      1-  847     	SUBAR	_cDuty,W
     001C 0C03                      1-  848     	BTRSC	STATUS,0
                                    1-  849     	MGOTO	_00139_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  850     	.line	190, "main.c"; 	cDuty++;
     001E 05rr                      1-  851     	INCR	_cDuty,F
                                    1-  852     	.line	191, "main.c"; 	PWM1DUTY = cDuty;
     001F 01rr                      1-  853     	MOVR	_cDuty,W
     0020 00rr                      1-  854     	SFUN	_PWM1DUTY
     0021                           1-  855     _00139_DS_:
                                    1-  856     	.line	194, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  857     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  858     	MOVR	_workStep,W
     0023 0D03                      1-  859     	BTRSC	STATUS,2
                                    1-  860     	MGOTO	_00142_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  862     	MOVR	_currentDuty,W
                                    1-  863     	BANKSEL	_maxDuty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  864     	SUBAR	_maxDuty,W
     0029 0C03                      1-  865     	BTRSC	STATUS,0
                                    1-  866     	MGOTO	_00142_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  867     	.line	196, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  868     	BANKSEL	_currentDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 06rr                      1-  869     	DECR	_currentDuty,F
                                    1-  870     	.line	197, "main.c"; 	PWM1DUTY = currentDuty;
     002D 01rr                      1-  871     	MOVR	_currentDuty,W
     002E 00rr                      1-  872     	SFUN	_PWM1DUTY
                                    1-  873     	.line	198, "main.c"; 	cDuty = currentDuty;
     002F 01rr                      1-  874     	MOVR	_currentDuty,W
                                    1-  875     	BANKSEL	_cDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  876     	MOVAR	_cDuty
     0032                           1-  877     _00142_DS_:
                                    1-  878     	.line	200, "main.c"; 	if(!IntFlag)
                                    1-  879     	BANKSEL	_Status
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 08rr                      1-  880     	BTRSS	_Status,0
                                    1-  881     	MGOTO	_00175_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  882     	.line	202, "main.c"; 	IntFlag = 0;
     0035 1Crr                      1-  883     	BCR	_Status,0
                                    1-  884     	.line	204, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  885     	BANKSEL	_shanshuoTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1-  886     	MOVR	_shanshuoTime,W
     0038 0903                      1-  887     	BTRSS	STATUS,2
                                    1-  888     	MGOTO	_00149_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  889     	BANKSEL	_pwStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  890     	MOVR	_pwStep,W
     003C 0903                      1-  891     	BTRSS	STATUS,2
                                    1-  892     	MGOTO	_00149_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  893     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  894     	MOVR	_workStep,W
     0040 0D03                      1-  895     	BTRSC	STATUS,2
                                    1-  896     	MGOTO	_00149_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  897     	.line	206, "main.c"; 	if(++closeCount >= 1000)
                                    1-  898     	BANKSEL	_closeCount
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 05rr                      1-  899     	INCR	_closeCount,F
     0044 0D03                      1-  900     	BTRSC	STATUS,2
     0045 05rr                      1-  901     	INCR	(_closeCount + 1),F
                                    1-  902     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0046 2103                      1-  903     	MOVIA	0x03
     0047 04rr                      1-  904     	SUBAR	(_closeCount + 1),W
     0048 0903                      1-  905     	BTRSS	STATUS,2
                                    1-  906     	MGOTO	_00258_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A 21E8                      1-  907     	MOVIA	0xe8
     004B 04rr                      1-  908     	SUBAR	_closeCount,W
     004C                           1-  909     _00258_DS_:
     004C 0803                      1-  910     	BTRSS	STATUS,0
                                    1-  911     	MGOTO	_00150_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  912     	.line	208, "main.c"; 	closeCount = 0;
                                    1-  913     	BANKSEL	_closeCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1-  914     	CLRR	_closeCount
     0050 02rr                      1-  915     	CLRR	(_closeCount + 1)
                                    1-  916     	.line	209, "main.c"; 	workStep = 0;
                                    1-  917     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1-  918     	CLRR	_workStep
                                    1-  919     	.line	210, "main.c"; 	ledStep = 0;
                                    1-  920     	BANKSEL	_ledStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  921     	CLRR	_ledStep
                                    1-  922     	.line	211, "main.c"; 	pwmStop();
                                    1-  923     	MCALL	_pwmStop
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  924     	MGOTO	_00150_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1-  925     _00149_DS_:
                                    1-  926     	.line	216, "main.c"; 	closeCount = 0;
                                    1-  927     	BANKSEL	_closeCount
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1-  928     	CLRR	_closeCount
     0059 02rr                      1-  929     	CLRR	(_closeCount + 1)
                                    1-  930     ;;unsigned compare: left < lit (0x5=5), size=1
     005A                           1-  931     _00150_DS_:
                                    1-  932     	.line	219, "main.c"; 	if(overCount >= 5 && workStep > 0)
     005A 2105                      1-  933     	MOVIA	0x05
                                    1-  934     	BANKSEL	_overCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1-  935     	SUBAR	_overCount,W
     005D 0803                      1-  936     	BTRSS	STATUS,0
                                    1-  937     	MGOTO	_00156_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  938     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1-  939     	MOVR	_workStep,W
     0061 0D03                      1-  940     	BTRSC	STATUS,2
                                    1-  941     	MGOTO	_00156_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  942     	.line	221, "main.c"; 	if(++count5S > 500)
                                    1-  943     	BANKSEL	_count5S
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 05rr                      1-  944     	INCR	_count5S,F
     0065 0D03                      1-  945     	BTRSC	STATUS,2
     0066 05rr                      1-  946     	INCR	(_count5S + 1),F
                                    1-  947     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  948     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0067 2101                      1-  949     	MOVIA	0x01
     0068 04rr                      1-  950     	SUBAR	(_count5S + 1),W
     0069 0903                      1-  951     	BTRSS	STATUS,2
                                    1-  952     	MGOTO	_00260_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 21F5                      1-  953     	MOVIA	0xf5
     006C 04rr                      1-  954     	SUBAR	_count5S,W
     006D                           1-  955     _00260_DS_:
     006D 0803                      1-  956     	BTRSS	STATUS,0
                                    1-  957     	MGOTO	_00157_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  958     	.line	223, "main.c"; 	overCount = 0;
                                    1-  959     	BANKSEL	_overCount
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 02rr                      1-  960     	CLRR	_overCount
                                    1-  961     	.line	224, "main.c"; 	count5S = 0;
                                    1-  962     	BANKSEL	_count5S
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1-  963     	CLRR	_count5S
     0073 02rr                      1-  964     	CLRR	(_count5S + 1)
                                    1-  965     	.line	225, "main.c"; 	ledDeadTime = 25;
     0074 2119                      1-  966     	MOVIA	0x19
                                    1-  967     	BANKSEL	_ledDeadTime
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1-  968     	MOVAR	_ledDeadTime
                                    1-  969     	.line	226, "main.c"; 	powerOff();
                                    1-  970     	MCALL	_powerOff
     0077 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  971     	MGOTO	_00157_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1-  972     _00156_DS_:
                                    1-  973     	.line	231, "main.c"; 	count5S = 0;
                                    1-  974     	BANKSEL	_count5S
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 02rr                      1-  975     	CLRR	_count5S
     007B 02rr                      1-  976     	CLRR	(_count5S + 1)
     007C                           1-  977     _00157_DS_:
                                    1-  978     	.line	233, "main.c"; 	if(chrgFlag == 0)
                                    1-  979     	BANKSEL	_Status
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 09rr                      1-  980     	BTRSS	_Status,3
                                    1-  981     	.line	234, "main.c"; 	keyCtr();
                                    1-  982     	MCALL	_keyCtr
     007E 2rrr                      3-   66 m1      LCALL rom_address
     007F                           1-  983     _00160_DS_:
                                    1-  984     	.line	235, "main.c"; 	if(count200ms < 3)
     007F 2103                      1-  985     	MOVIA	0x03
                                    1-  986     	BANKSEL	_count200ms
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1-  987     	SUBAR	_count200ms,W
     0082 0803                      1-  988     	BTRSS	STATUS,0
                                    1-  989     	.line	237, "main.c"; 	checkBatAD();
                                    1-  990     	MCALL	_checkBatAD
     0083 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  991     	.line	239, "main.c"; 	checkOutA();
                                    1-  992     	MCALL	_checkOutA
     0084 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  993     	.line	240, "main.c"; 	chrgCtr();
                                    1-  994     	MCALL	_chrgCtr
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  995     	.line	243, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x40) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1-  996     	BANKSEL	_workStep
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1-  997     	MOVR	_workStep,W
     0088 0903                      1-  998     	BTRSS	STATUS,2
                                    1-  999     	MGOTO	_00166_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1000     	BANKSEL	_keyCount
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 01rr                      1- 1001     	MOVR	_keyCount,W
     008C 0903                      1- 1002     	BTRSS	STATUS,2
                                    1- 1003     	MGOTO	_00166_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1004     	BANKSEL	_PORTA
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 0Frr                      1- 1005     	BTRSC	_PORTA,6
                                    1- 1006     	MGOTO	_00166_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1007     	BANKSEL	_ledLightTime
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1- 1008     	MOVR	_ledLightTime,W
     0093 0903                      1- 1009     	BTRSS	STATUS,2
                                    1- 1010     	MGOTO	_00166_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1011     	BANKSEL	_ledDeadTime
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1- 1012     	MOVR	_ledDeadTime,W
     0097 0903                      1- 1013     	BTRSS	STATUS,2
                                    1- 1014     	MGOTO	_00166_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1015     	BANKSEL	_shanshuoTime
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 01rr                      1- 1016     	MOVR	_shanshuoTime,W
     009B 0903                      1- 1017     	BTRSS	STATUS,2
                                    1- 1018     	MGOTO	_00166_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1019     	.line	245, "main.c"; 	if(++sleepTime > 20)
                                    1- 1020     	BANKSEL	_sleepTime
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 05rr                      1- 1021     	INCR	_sleepTime,F
     009F 0D03                      1- 1022     	BTRSC	STATUS,2
     00A0 05rr                      1- 1023     	INCR	(_sleepTime + 1),F
                                    1- 1024     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1025     ;;unsigned compare: left >= lit (0x15=21), size=2
     00A1 2100                      1- 1026     	MOVIA	0x00
     00A2 04rr                      1- 1027     	SUBAR	(_sleepTime + 1),W
     00A3 0903                      1- 1028     	BTRSS	STATUS,2
                                    1- 1029     	MGOTO	_00262_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5 2115                      1- 1030     	MOVIA	0x15
     00A6 04rr                      1- 1031     	SUBAR	_sleepTime,W
     00A7                           1- 1032     _00262_DS_:
     00A7 0803                      1- 1033     	BTRSS	STATUS,0
                                    1- 1034     	MGOTO	_00166_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1035     	.line	247, "main.c"; 	gotoSleep();
                                    1- 1036     	MCALL	_gotoSleep
     00A9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1037     ;;unsigned compare: left < lit (0x384=900), size=2
     00AA                           1- 1038     _00166_DS_:
                                    1- 1039     	.line	251, "main.c"; 	if(count900s >= 900)
     00AA 2103                      1- 1040     	MOVIA	0x03
                                    1- 1041     	BANKSEL	_count900s
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 04rr                      1- 1042     	SUBAR	(_count900s + 1),W
     00AD 0903                      1- 1043     	BTRSS	STATUS,2
                                    1- 1044     	MGOTO	_00263_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF 2184                      1- 1045     	MOVIA	0x84
     00B0 04rr                      1- 1046     	SUBAR	_count900s,W
     00B1                           1- 1047     _00263_DS_:
     00B1 0803                      1- 1048     	BTRSS	STATUS,0
                                    1- 1049     	MGOTO	_00175_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1050     	.line	253, "main.c"; 	powerOff();
                                    1- 1051     	MCALL	_powerOff
     00B3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1052     	MGOTO	_00175_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1053     	.line	257, "main.c"; 	}
                                    1- 1054     	RETURN	
     00B5 0010                      3-   40 m1      ret
                                    1- 1055     ; exit point of _main
                                    1- 1057     ;***
                                    1- 1058     ;  pBlock Stats: dbName = C
                                    1- 1059     ;***
                                    1- 1060     ;has an exit
                                    1- 1061     ;; Starting pCode block
                                    1- 1062     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1064     _F_wait_eoc:
                                    1- 1065     ; 2 exit points
     0000                           1- 1066     _00746_DS_:
                                    1- 1067     	.line	867, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1068     	BTRSS	_ADMDbits,5
                                    1- 1069     	MGOTO	_00746_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1070     	.line	869, "main.c"; 	}
                                    1- 1071     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1072     ; exit point of _F_wait_eoc
                                    1- 1074     ;***
                                    1- 1075     ;  pBlock Stats: dbName = C
                                    1- 1076     ;***
                                    1- 1077     ;has an exit
                                    1- 1078     ;functions called:
                                    1- 1079     ;   _delay
                                    1- 1080     ;   _F_wait_eoc
                                    1- 1081     ;   _delay
                                    1- 1082     ;   _F_wait_eoc
                                    1- 1083     ;6 compiler assigned registers:
                                    1- 1084     ;   r0x103A
                                    1- 1085     ;   r0x103B
                                    1- 1086     ;   r0x103C
                                    1- 1087     ;   r0x103D
                                    1- 1088     ;   r0x103E
                                    1- 1089     ;   r0x103F
                                    1- 1090     ;; Starting pCode block
                                    1- 1091     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1093     ;local variable name mapping:
     0000                           1- 1096     _F_AIN2_Convert:
                                    1- 1097     ; 2 exit points
                                    1- 1098     	.line	850, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1099     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1100     	MOVAR	r0x103A
                                    1- 1101     	.line	852, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1102     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1103     	CLRR	_R_AIN2_DATA_LB
                                    1- 1104     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1105     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1106     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1107     	.line	854, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1108     	MOVIA	0x94
     0008 00rr                      1- 1109     	MOVAR	_ADMD
                                    1- 1110     	.line	855, "main.c"; 	delay(200);	
     0009 21C8                      1- 1111     	MOVIA	0xc8
                                    1- 1112     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1113     	.line	856, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1114     	MOVIA	0x01
                                    1- 1115     	BANKSEL	r0x103B
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1116     	MOVAR	r0x103B
     000E                           1- 1117     _00739_DS_:
                                    1- 1118     	BANKSEL	r0x103B
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1119     	MOVR	r0x103B,W
                                    1- 1120     	BANKSEL	r0x103A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1121     	SUBAR	r0x103A,W
     0012 0803                      1- 1122     	BTRSS	STATUS,0
                                    1- 1123     	MGOTO	_00741_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1124     	.line	858, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1125     	BSR	_ADMDbits,6
                                    1- 1126     	.line	859, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1127     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1128     	.line	860, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1129     	MOVIA	0x0f
     0017 10rr                      1- 1130     	ANDAR	_ADR,W
                                    1- 1131     ;;3	MOVAR	r0x103C
                                    1- 1132     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1133     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1134     	.line	861, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1135     	MOVR	_ADD,W
                                    1- 1136     	BANKSEL	r0x103C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1137     	MOVAR	r0x103C
                                    1- 1138     ;;1	CLRR	r0x103D
                                    1- 1139     ;;105	MOVR	r0x103C,W
                                    1- 1140     ;;103	MOVAR	r0x103E
     001D 2100                      1- 1141     	MOVIA	0x00
                                    1- 1142     	BANKSEL	r0x103F
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1143     	MOVAR	r0x103F
                                    1- 1144     ;;104	MOVR	r0x103E,W
                                    1- 1145     	BANKSEL	r0x103C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1146     	MOVR	r0x103C,W
                                    1- 1147     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1148     	ADDAR	_R_AIN2_DATA,F
                                    1- 1149     	BANKSEL	r0x103F
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1150     	MOVR	r0x103F,W
     0026 0C03                      1- 1151     	BTRSC	STATUS,0
     0027 05rr                      1- 1152     	INCR	r0x103F,W
     0028 0D03                      1- 1153     	BTRSC	STATUS,2
                                    1- 1154     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1155     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1156     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1157     _00001_DS_:
                                    1- 1158     	.line	856, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1159     	BANKSEL	r0x103B
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1160     	INCR	r0x103B,F
                                    1- 1161     	MGOTO	_00739_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1162     _00741_DS_:
                                    1- 1163     	.line	863, "main.c"; 	}
                                    1- 1164     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1165     ; exit point of _F_AIN2_Convert
                                    1- 1167     ;***
                                    1- 1168     ;  pBlock Stats: dbName = C
                                    1- 1169     ;***
                                    1- 1170     ;has an exit
                                    1- 1171     ;functions called:
                                    1- 1172     ;   _delay
                                    1- 1173     ;   _F_wait_eoc
                                    1- 1174     ;   _delay
                                    1- 1175     ;   _F_wait_eoc
                                    1- 1176     ;6 compiler assigned registers:
                                    1- 1177     ;   r0x1040
                                    1- 1178     ;   r0x1041
                                    1- 1179     ;   r0x1042
                                    1- 1180     ;   r0x1043
                                    1- 1181     ;   r0x1044
                                    1- 1182     ;   r0x1045
                                    1- 1183     ;; Starting pCode block
                                    1- 1184     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1186     ;local variable name mapping:
     0000                           1- 1189     _F_AIN4_Convert:
                                    1- 1190     ; 2 exit points
                                    1- 1191     	.line	835, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1192     	BANKSEL	r0x1040
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1193     	MOVAR	r0x1040
                                    1- 1194     	.line	837, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1195     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1196     	CLRR	_R_AIN4_DATA_LB
                                    1- 1197     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1198     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1199     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1200     	.line	839, "main.c"; 	ADMD  = 0x90 | C_ADC_PA0;				// Select AIN6(PB1) pad as ADC input
     0007 2190                      1- 1201     	MOVIA	0x90
     0008 00rr                      1- 1202     	MOVAR	_ADMD
                                    1- 1203     	.line	840, "main.c"; 	delay(200);	
     0009 21C8                      1- 1204     	MOVIA	0xc8
                                    1- 1205     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1206     	.line	841, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1207     	MOVIA	0x01
                                    1- 1208     	BANKSEL	r0x1041
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1209     	MOVAR	r0x1041
     000E                           1- 1210     _00730_DS_:
                                    1- 1211     	BANKSEL	r0x1041
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1212     	MOVR	r0x1041,W
                                    1- 1213     	BANKSEL	r0x1040
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1214     	SUBAR	r0x1040,W
     0012 0803                      1- 1215     	BTRSS	STATUS,0
                                    1- 1216     	MGOTO	_00732_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1217     	.line	843, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1218     	BSR	_ADMDbits,6
                                    1- 1219     	.line	844, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1220     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1221     	.line	845, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1222     	MOVIA	0x0f
     0017 10rr                      1- 1223     	ANDAR	_ADR,W
                                    1- 1224     ;;3	MOVAR	r0x1042
                                    1- 1225     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1226     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1227     	.line	846, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1228     	MOVR	_ADD,W
                                    1- 1229     	BANKSEL	r0x1042
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1230     	MOVAR	r0x1042
                                    1- 1231     ;;1	CLRR	r0x1043
                                    1- 1232     ;;102	MOVR	r0x1042,W
                                    1- 1233     ;;100	MOVAR	r0x1044
     001D 2100                      1- 1234     	MOVIA	0x00
                                    1- 1235     	BANKSEL	r0x1045
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1236     	MOVAR	r0x1045
                                    1- 1237     ;;101	MOVR	r0x1044,W
                                    1- 1238     	BANKSEL	r0x1042
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1239     	MOVR	r0x1042,W
                                    1- 1240     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1241     	ADDAR	_R_AIN4_DATA,F
                                    1- 1242     	BANKSEL	r0x1045
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1243     	MOVR	r0x1045,W
     0026 0C03                      1- 1244     	BTRSC	STATUS,0
     0027 05rr                      1- 1245     	INCR	r0x1045,W
     0028 0D03                      1- 1246     	BTRSC	STATUS,2
                                    1- 1247     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1248     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1249     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1250     _00002_DS_:
                                    1- 1251     	.line	841, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1252     	BANKSEL	r0x1041
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1253     	INCR	r0x1041,F
                                    1- 1254     	MGOTO	_00730_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1255     _00732_DS_:
                                    1- 1256     	.line	848, "main.c"; 	}
                                    1- 1257     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1258     ; exit point of _F_AIN4_Convert
                                    1- 1260     ;***
                                    1- 1261     ;  pBlock Stats: dbName = C
                                    1- 1262     ;***
                                    1- 1263     ;has an exit
                                    1- 1264     ;functions called:
                                    1- 1265     ;   _F_AIN4_Convert
                                    1- 1266     ;   __divuint
                                    1- 1267     ;   __mulchar
                                    1- 1268     ;   __mulchar
                                    1- 1269     ;   _F_AIN4_Convert
                                    1- 1270     ;   __divuint
                                    1- 1271     ;   __mulchar
                                    1- 1272     ;   __mulchar
                                    1- 1273     ;7 compiler assigned registers:
                                    1- 1274     ;   r0x1046
                                    1- 1275     ;   r0x1047
                                    1- 1276     ;   r0x1048
                                    1- 1277     ;   r0x1049
                                    1- 1278     ;   STK02
                                    1- 1279     ;   STK01
                                    1- 1280     ;   STK00
                                    1- 1281     ;; Starting pCode block
                                    1- 1282     .segment "code"; module=main, function=_checkOutA
                                    1- 1284     ;local variable name mapping:
     0000                           1- 1286     _checkOutA:
                                    1- 1287     ; 2 exit points
                                    1- 1288     	.line	739, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1289     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1290     	CLRR	_R_AIN4_DATA_LB
                                    1- 1291     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1292     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1293     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1294     	.line	740, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1295     	MOVIA	0x08
                                    1- 1296     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1297     	.line	741, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1298     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1299     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1300     	ANDIA	0xf0
     000A 00rr                      1- 1301     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1302     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1303     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1304     	ANDIA	0x0f
     000E 11rr                      1- 1305     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1306     	XORAR	_R_AIN4_DATA,F
                                    1- 1307     	.line	742, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1308     	MOVIA	0xf0
                                    1- 1309     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1310     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1311     	.line	743, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1312     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1313     	BANKSEL	r0x1048
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1314     	MOVAR	r0x1048
                                    1- 1315     	BANKSEL	r0x1046
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1316     	MOVAR	r0x1046
                                    1- 1317     	BANKSEL	r0x1047
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1318     	CLRR	r0x1047
                                    1- 1319     ;;106	MOVR	r0x1046,W
     001A 2100                      1- 1320     	MOVIA	0x00
                                    1- 1321     	BANKSEL	r0x1049
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1322     	MOVAR	r0x1049
                                    1- 1323     	BANKSEL	r0x1048
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1324     	MOVR	r0x1048,W
                                    1- 1325     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1326     	ADDAR	_R_AIN4_DATA,F
                                    1- 1327     	BANKSEL	r0x1049
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1328     	MOVR	r0x1049,W
     0023 0C03                      1- 1329     	BTRSC	STATUS,0
     0024 05rr                      1- 1330     	INCR	r0x1049,W
     0025 0D03                      1- 1331     	BTRSC	STATUS,2
                                    1- 1332     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1333     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1334     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1335     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1336     _00003_DS_:
                                    1- 1337     	.line	744, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1338     	BCR	STATUS,0
                                    1- 1339     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1340     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1341     	RRR	_R_AIN4_DATA,F
                                    1- 1342     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1343     	BCR	STATUS,0
     002E 13rr                      1- 1344     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1345     	RRR	_R_AIN4_DATA,F
                                    1- 1346     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1347     	BCR	STATUS,0
     0031 13rr                      1- 1348     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1349     	RRR	_R_AIN4_DATA,F
                                    1- 1350     	.line	745, "main.c"; 	tempSum += R_AIN4_DATA;
     0033 01rr                      1- 1351     	MOVR	_R_AIN4_DATA,W
                                    1- 1352     	BANKSEL	_tempSum
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 03rr                      1- 1353     	ADDAR	_tempSum,F
                                    1- 1354     	BANKSEL	_R_AIN4_DATA
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 1355     	MOVR	(_R_AIN4_DATA + 1),W
     0038 0C03                      1- 1356     	BTRSC	STATUS,0
     0039 05rr                      1- 1357     	INCR	(_R_AIN4_DATA + 1),W
     003A 0D03                      1- 1358     	BTRSC	STATUS,2
                                    1- 1359     	MGOTO	_00004_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1360     	BANKSEL	_tempSum
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 03rr                      1- 1361     	ADDAR	(_tempSum + 1),F
     003E                           1- 1362     _00004_DS_:
                                    1- 1363     	.line	746, "main.c"; 	if(++count100 >= 10)
                                    1- 1364     	BANKSEL	_count100
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1- 1365     	INCR	_count100,F
                                    1- 1366     ;;unsigned compare: left < lit (0xA=10), size=1
     0040 210A                      1- 1367     	MOVIA	0x0a
     0041 04rr                      1- 1368     	SUBAR	_count100,W
     0042 0803                      1- 1369     	BTRSS	STATUS,0
                                    1- 1370     	MGOTO	_00616_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1371     	.line	748, "main.c"; 	count100 = 0;
     0044 02rr                      1- 1372     	CLRR	_count100
                                    1- 1373     	.line	749, "main.c"; 	tempResult = tempSum/10;
     0045 210A                      1- 1374     	MOVIA	0x0a
     0046 00rr                      1- 1375     	MOVAR	STK02
     0047 2100                      1- 1376     	MOVIA	0x00
     0048 00rr                      1- 1377     	MOVAR	STK01
                                    1- 1378     	BANKSEL	_tempSum
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 1379     	MOVR	_tempSum,W
     004B 00rr                      1- 1380     	MOVAR	STK00
     004C 01rr                      1- 1381     	MOVR	(_tempSum + 1),W
                                    1- 1382     	MCALL	__divuint
     004D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1383     	BANKSEL	_tempResult
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1384     	MOVAR	(_tempResult + 1)
     0050 01rr                      1- 1385     	MOVR	STK00,W
     0051 00rr                      1- 1386     	MOVAR	_tempResult
                                    1- 1387     	.line	750, "main.c"; 	tempSum = 0;
                                    1- 1388     	BANKSEL	_tempSum
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1- 1389     	CLRR	_tempSum
     0054 02rr                      1- 1390     	CLRR	(_tempSum + 1)
                                    1- 1391     ;;unsigned compare: left < lit (0x6=6), size=1
     0055                           1- 1392     _00616_DS_:
                                    1- 1393     	.line	753, "main.c"; 	if(workStep < 6 && tempResult > 200)
     0055 2106                      1- 1394     	MOVIA	0x06
                                    1- 1395     	BANKSEL	_workStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 04rr                      1- 1396     	SUBAR	_workStep,W
     0058 0C03                      1- 1397     	BTRSC	STATUS,0
                                    1- 1398     	MGOTO	_00653_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1399     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1400     ;;unsigned compare: left >= lit (0xC9=201), size=2
     005A 2100                      1- 1401     	MOVIA	0x00
                                    1- 1402     	BANKSEL	_tempResult
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1- 1403     	SUBAR	(_tempResult + 1),W
     005D 0903                      1- 1404     	BTRSS	STATUS,2
                                    1- 1405     	MGOTO	_00716_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F 21C9                      1- 1406     	MOVIA	0xc9
     0060 04rr                      1- 1407     	SUBAR	_tempResult,W
     0061                           1- 1408     _00716_DS_:
     0061 0803                      1- 1409     	BTRSS	STATUS,0
                                    1- 1410     	MGOTO	_00653_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1411     	.line	755, "main.c"; 	if(++overCount > 5)
                                    1- 1412     	BANKSEL	_overCount
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 05rr                      1- 1413     	INCR	_overCount,F
                                    1- 1414     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1415     ;;unsigned compare: left >= lit (0x6=6), size=1
     0065 2106                      1- 1416     	MOVIA	0x06
     0066 04rr                      1- 1417     	SUBAR	_overCount,W
     0067 0803                      1- 1418     	BTRSS	STATUS,0
                                    1- 1419     	MGOTO	_00654_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1420     	.line	757, "main.c"; 	overCount = 5;
     0069 2105                      1- 1421     	MOVIA	0x05
     006A 00rr                      1- 1422     	MOVAR	_overCount
                                    1- 1423     	MGOTO	_00654_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1424     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1425     ;;unsigned compare: left >= lit (0x191=401), size=2
     006C                           1- 1426     _00653_DS_:
                                    1- 1427     	.line	760, "main.c"; 	else if(tempResult > 400)
     006C 2101                      1- 1428     	MOVIA	0x01
                                    1- 1429     	BANKSEL	_tempResult
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 04rr                      1- 1430     	SUBAR	(_tempResult + 1),W
     006F 0903                      1- 1431     	BTRSS	STATUS,2
                                    1- 1432     	MGOTO	_00718_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071 2191                      1- 1433     	MOVIA	0x91
     0072 04rr                      1- 1434     	SUBAR	_tempResult,W
     0073                           1- 1435     _00718_DS_:
     0073 0803                      1- 1436     	BTRSS	STATUS,0
                                    1- 1437     	MGOTO	_00650_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1438     	.line	762, "main.c"; 	if(++overCount > 5)
                                    1- 1439     	BANKSEL	_overCount
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 05rr                      1- 1440     	INCR	_overCount,F
                                    1- 1441     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1442     ;;unsigned compare: left >= lit (0x6=6), size=1
     0077 2106                      1- 1443     	MOVIA	0x06
     0078 04rr                      1- 1444     	SUBAR	_overCount,W
     0079 0803                      1- 1445     	BTRSS	STATUS,0
                                    1- 1446     	MGOTO	_00654_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1447     	.line	764, "main.c"; 	overCount = 5;
     007B 2105                      1- 1448     	MOVIA	0x05
     007C 00rr                      1- 1449     	MOVAR	_overCount
                                    1- 1450     	MGOTO	_00654_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1451     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1452     ;;unsigned compare: left >= lit (0x56=86), size=2
     007E                           1- 1453     _00650_DS_:
                                    1- 1454     	.line	772, "main.c"; 	else if(tempResult > 85)
     007E 2100                      1- 1455     	MOVIA	0x00
                                    1- 1456     	BANKSEL	_tempResult
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1457     	SUBAR	(_tempResult + 1),W
     0081 0903                      1- 1458     	BTRSS	STATUS,2
                                    1- 1459     	MGOTO	_00720_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 2156                      1- 1460     	MOVIA	0x56
     0084 04rr                      1- 1461     	SUBAR	_tempResult,W
     0085                           1- 1462     _00720_DS_:
     0085 0803                      1- 1463     	BTRSS	STATUS,0
                                    1- 1464     	MGOTO	_00647_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1465     	.line	774, "main.c"; 	if(overCount > 0)
                                    1- 1466     	BANKSEL	_overCount
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 01rr                      1- 1467     	MOVR	_overCount,W
     0089 0903                      1- 1468     	BTRSS	STATUS,2
                                    1- 1469     	.line	776, "main.c"; 	overCount--;
     008A 06rr                      1- 1470     	DECR	_overCount,F
                                    1- 1471     	.line	779, "main.c"; 	tempDuty = 75 + workStep*5;
     008B 2105                      1- 1472     	MOVIA	0x05
     008C 00rr                      1- 1473     	MOVAR	STK00
                                    1- 1474     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 1475     	MOVR	_workStep,W
                                    1- 1476     	MCALL	__mulchar
     008F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1477     	BANKSEL	r0x1046
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 00rr                      1- 1478     	MOVAR	r0x1046
     0092 214B                      1- 1479     	MOVIA	0x4b
     0093 03rr                      1- 1480     	ADDAR	r0x1046,W
                                    1- 1481     	BANKSEL	_tempDuty
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 00rr                      1- 1482     	MOVAR	_tempDuty
                                    1- 1483     	MGOTO	_00654_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
     0097                           1- 1484     _00647_DS_:
                                    1- 1485     	.line	784, "main.c"; 	u8t maxAout = 55;
     0097 2137                      1- 1486     	MOVIA	0x37
                                    1- 1487     	BANKSEL	r0x1046
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 1488     	MOVAR	r0x1046
                                    1- 1489     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1490     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 1491     	.line	785, "main.c"; 	if(pwStep > 2)
     009A 2103                      1- 1492     	MOVIA	0x03
                                    1- 1493     	BANKSEL	_pwStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1494     	SUBAR	_pwStep,W
     009D 0803                      1- 1495     	BTRSS	STATUS,0
                                    1- 1496     	MGOTO	_00624_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1497     	.line	786, "main.c"; 	maxAout = 60;
     009F 213C                      1- 1498     	MOVIA	0x3c
                                    1- 1499     	BANKSEL	r0x1046
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 1500     	MOVAR	r0x1046
     00A2                           1- 1501     _00624_DS_:
                                    1- 1502     	.line	787, "main.c"; 	if(workStep == 1)
                                    1- 1503     	BANKSEL	_workStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 01rr                      1- 1504     	MOVR	_workStep,W
     00A4 2401                      1- 1505     	XORIA	0x01
     00A5 0903                      1- 1506     	BTRSS	STATUS,2
                                    1- 1507     	MGOTO	_00637_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1508     	.line	789, "main.c"; 	maxAout = maxAout - 8;
     00A7 21F8                      1- 1509     	MOVIA	0xf8
                                    1- 1510     	BANKSEL	r0x1046
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 03rr                      1- 1511     	ADDAR	r0x1046,F
                                    1- 1512     	MGOTO	_00638_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
     00AB                           1- 1513     _00637_DS_:
                                    1- 1514     	.line	791, "main.c"; 	else if(workStep == 2)
                                    1- 1515     	BANKSEL	_workStep
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 01rr                      1- 1516     	MOVR	_workStep,W
     00AD 2402                      1- 1517     	XORIA	0x02
     00AE 0903                      1- 1518     	BTRSS	STATUS,2
                                    1- 1519     	MGOTO	_00634_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1520     	.line	793, "main.c"; 	maxAout = maxAout - 4;
     00B0 21FC                      1- 1521     	MOVIA	0xfc
                                    1- 1522     	BANKSEL	r0x1046
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 03rr                      1- 1523     	ADDAR	r0x1046,F
                                    1- 1524     	MGOTO	_00638_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 1525     _00634_DS_:
                                    1- 1526     	.line	795, "main.c"; 	else if(workStep == 3)
                                    1- 1527     	BANKSEL	_workStep
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 1528     	MOVR	_workStep,W
     00B6 2403                      1- 1529     	XORIA	0x03
     00B7 0903                      1- 1530     	BTRSS	STATUS,2
                                    1- 1531     	MGOTO	_00631_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1532     	.line	797, "main.c"; 	maxAout = maxAout - 1;
                                    1- 1533     	BANKSEL	r0x1046
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 06rr                      1- 1534     	DECR	r0x1046,F
                                    1- 1535     	MGOTO	_00638_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC                           1- 1536     _00631_DS_:
                                    1- 1537     	.line	799, "main.c"; 	else if(workStep == 4)
                                    1- 1538     	BANKSEL	_workStep
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 1539     	MOVR	_workStep,W
     00BE 2404                      1- 1540     	XORIA	0x04
     00BF 0903                      1- 1541     	BTRSS	STATUS,2
                                    1- 1542     	MGOTO	_00628_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1543     	.line	801, "main.c"; 	maxAout = maxAout + 3;
     00C1 2103                      1- 1544     	MOVIA	0x03
                                    1- 1545     	BANKSEL	r0x1046
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 03rr                      1- 1546     	ADDAR	r0x1046,F
                                    1- 1547     	MGOTO	_00638_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
     00C5                           1- 1548     _00628_DS_:
                                    1- 1549     	.line	803, "main.c"; 	else if(workStep == 5)
                                    1- 1550     	BANKSEL	_workStep
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1551     	MOVR	_workStep,W
     00C7 2405                      1- 1552     	XORIA	0x05
     00C8 0903                      1- 1553     	BTRSS	STATUS,2
                                    1- 1554     	MGOTO	_00638_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1555     	.line	805, "main.c"; 	maxAout = maxAout + 8;
     00CA 2108                      1- 1556     	MOVIA	0x08
                                    1- 1557     	BANKSEL	r0x1046
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 03rr                      1- 1558     	ADDAR	r0x1046,F
     00CD                           1- 1559     _00638_DS_:
                                    1- 1560     	.line	807, "main.c"; 	if(overCount > 0)
                                    1- 1561     	BANKSEL	_overCount
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 01rr                      1- 1562     	MOVR	_overCount,W
     00CF 0903                      1- 1563     	BTRSS	STATUS,2
                                    1- 1564     	.line	809, "main.c"; 	overCount--;
     00D0 06rr                      1- 1565     	DECR	_overCount,F
                                    1- 1566     	.line	811, "main.c"; 	if(tempResult > maxAout)
                                    1- 1567     	BANKSEL	r0x1046
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 1568     	MOVR	r0x1046,W
                                    1- 1569     	BANKSEL	r0x1047
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 1570     	MOVAR	r0x1047
                                    1- 1571     	BANKSEL	r0x1048
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 02rr                      1- 1572     	CLRR	r0x1048
                                    1- 1573     	BANKSEL	_tempResult
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 01rr                      1- 1574     	MOVR	(_tempResult + 1),W
                                    1- 1575     	BANKSEL	r0x1048
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 04rr                      1- 1576     	SUBAR	r0x1048,W
     00DB 0903                      1- 1577     	BTRSS	STATUS,2
                                    1- 1578     	MGOTO	_00722_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1579     	BANKSEL	_tempResult
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 01rr                      1- 1580     	MOVR	_tempResult,W
                                    1- 1581     	BANKSEL	r0x1047
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 04rr                      1- 1582     	SUBAR	r0x1047,W
     00E1                           1- 1583     _00722_DS_:
     00E1 0C03                      1- 1584     	BTRSC	STATUS,0
                                    1- 1585     	MGOTO	_00644_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1586     	.line	813, "main.c"; 	tempDuty = 75 + workStep*5;
     00E3 2105                      1- 1587     	MOVIA	0x05
     00E4 00rr                      1- 1588     	MOVAR	STK00
                                    1- 1589     	BANKSEL	_workStep
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 01rr                      1- 1590     	MOVR	_workStep,W
                                    1- 1591     	MCALL	__mulchar
     00E7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1592     	BANKSEL	r0x1046
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 00rr                      1- 1593     	MOVAR	r0x1046
     00EA 214B                      1- 1594     	MOVIA	0x4b
     00EB 03rr                      1- 1595     	ADDAR	r0x1046,W
                                    1- 1596     	BANKSEL	_tempDuty
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1- 1597     	MOVAR	_tempDuty
                                    1- 1598     	MGOTO	_00654_DS_
     00EE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1599     ;;unsigned compare: left < lit (0x4B=75), size=2
     00EF                           1- 1600     _00644_DS_:
                                    1- 1601     	.line	816, "main.c"; 	else if(tempResult < 75)
     00EF 2100                      1- 1602     	MOVIA	0x00
                                    1- 1603     	BANKSEL	_tempResult
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 04rr                      1- 1604     	SUBAR	(_tempResult + 1),W
     00F2 0903                      1- 1605     	BTRSS	STATUS,2
                                    1- 1606     	MGOTO	_00723_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
     00F4 214B                      1- 1607     	MOVIA	0x4b
     00F5 04rr                      1- 1608     	SUBAR	_tempResult,W
     00F6                           1- 1609     _00723_DS_:
     00F6 0C03                      1- 1610     	BTRSC	STATUS,0
                                    1- 1611     	MGOTO	_00654_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1612     	.line	819, "main.c"; 	tempDuty = maxDuty;
                                    1- 1613     	BANKSEL	_maxDuty
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 01rr                      1- 1614     	MOVR	_maxDuty,W
                                    1- 1615     	BANKSEL	_tempDuty
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 00rr                      1- 1616     	MOVAR	_tempDuty
     00FC                           1- 1617     _00654_DS_:
                                    1- 1618     	.line	823, "main.c"; 	if(workStep > 0)
                                    1- 1619     	BANKSEL	_workStep
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 01rr                      1- 1620     	MOVR	_workStep,W
     00FE 0D03                      1- 1621     	BTRSC	STATUS,2
                                    1- 1622     	MGOTO	_00658_DS_
     00FF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1623     	.line	824, "main.c"; 	ledStep = workStep;
     0100 01rr                      1- 1624     	MOVR	_workStep,W
                                    1- 1625     	BANKSEL	_ledStep
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 00rr                      1- 1626     	MOVAR	_ledStep
     0103                           1- 1627     _00658_DS_:
                                    1- 1628     	.line	828, "main.c"; 	}
                                    1- 1629     	RETURN	
     0103 0010                      3-   40 m1      ret
                                    1- 1630     ; exit point of _checkOutA
                                    1- 1632     ;***
                                    1- 1633     ;  pBlock Stats: dbName = C
                                    1- 1634     ;***
                                    1- 1635     ;has an exit
                                    1- 1636     ;functions called:
                                    1- 1637     ;   _F_AIN2_Convert
                                    1- 1638     ;   _F_AIN2_Convert
                                    1- 1639     ;4 compiler assigned registers:
                                    1- 1640     ;   r0x104A
                                    1- 1641     ;   r0x104B
                                    1- 1642     ;   r0x104C
                                    1- 1643     ;   r0x104D
                                    1- 1644     ;; Starting pCode block
                                    1- 1645     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1647     _checkBatAD:
                                    1- 1648     ; 2 exit points
                                    1- 1649     	.line	684, "main.c"; 	PORTA &= 0xF7;
                                    1- 1650     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Drr                      1- 1651     	BCR	_PORTA,3
                                    1- 1652     	.line	685, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1653     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1654     	CLRR	_R_AIN2_DATA_LB
                                    1- 1655     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1656     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1657     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1658     	.line	686, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0007 2108                      1- 1659     	MOVIA	0x08
                                    1- 1660     	MCALL	_F_AIN2_Convert
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1661     	.line	687, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1662     	BANKSEL	_R_AIN2_DATA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 15rr                      1- 1663     	SWAPR	(_R_AIN2_DATA + 1),W
     000B 22F0                      1- 1664     	ANDIA	0xf0
     000C 00rr                      1- 1665     	MOVAR	(_R_AIN2_DATA + 1)
     000D 15rr                      1- 1666     	SWAPR	_R_AIN2_DATA,W
     000E 00rr                      1- 1667     	MOVAR	_R_AIN2_DATA
     000F 220F                      1- 1668     	ANDIA	0x0f
     0010 11rr                      1- 1669     	IORAR	(_R_AIN2_DATA + 1),F
     0011 12rr                      1- 1670     	XORAR	_R_AIN2_DATA,F
                                    1- 1671     	.line	688, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1- 1672     	MOVIA	0xf0
                                    1- 1673     	BANKSEL	_R_AIN2_DATA_LB
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 10rr                      1- 1674     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1675     	.line	689, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1- 1676     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1677     	BANKSEL	r0x104C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1678     	MOVAR	r0x104C
                                    1- 1679     ;;1	MOVAR	r0x104A
                                    1- 1680     ;;1	CLRR	r0x104B
                                    1- 1681     ;;99	MOVR	r0x104A,W
     0018 2100                      1- 1682     	MOVIA	0x00
                                    1- 1683     	BANKSEL	r0x104D
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 1684     	MOVAR	r0x104D
                                    1- 1685     	BANKSEL	r0x104C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1686     	MOVR	r0x104C,W
                                    1- 1687     	BANKSEL	_R_AIN2_DATA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 03rr                      1- 1688     	ADDAR	_R_AIN2_DATA,F
                                    1- 1689     	BANKSEL	r0x104D
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1690     	MOVR	r0x104D,W
     0021 0C03                      1- 1691     	BTRSC	STATUS,0
     0022 05rr                      1- 1692     	INCR	r0x104D,W
     0023 0D03                      1- 1693     	BTRSC	STATUS,2
                                    1- 1694     	MGOTO	_00005_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1695     	BANKSEL	_R_AIN2_DATA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 03rr                      1- 1696     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1697     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1698     _00005_DS_:
                                    1- 1699     	.line	690, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0027 1C03                      1- 1700     	BCR	STATUS,0
                                    1- 1701     	BANKSEL	_R_AIN2_DATA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 13rr                      1- 1702     	RRR	(_R_AIN2_DATA + 1),F
     002A 13rr                      1- 1703     	RRR	_R_AIN2_DATA,F
                                    1- 1704     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1705     	BCR	STATUS,0
     002C 13rr                      1- 1706     	RRR	(_R_AIN2_DATA + 1),F
     002D 13rr                      1- 1707     	RRR	_R_AIN2_DATA,F
                                    1- 1708     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1709     	BCR	STATUS,0
     002F 13rr                      1- 1710     	RRR	(_R_AIN2_DATA + 1),F
     0030 13rr                      1- 1711     	RRR	_R_AIN2_DATA,F
                                    1- 1712     	.line	691, "main.c"; 	if(debug)
                                    1- 1713     	BANKSEL	_debug
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 1714     	MOVR	_debug,W
     0033 0D03                      1- 1715     	BTRSC	STATUS,2
                                    1- 1716     	MGOTO	_00535_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1717     	.line	692, "main.c"; 	R_AIN2_DATA = BATTLE;
     0035 210E                      1- 1718     	MOVIA	0x0e
                                    1- 1719     	BANKSEL	_R_AIN2_DATA
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1720     	MOVAR	_R_AIN2_DATA
     0038 2106                      1- 1721     	MOVIA	0x06
     0039 00rr                      1- 1722     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1723     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1724     ;;unsigned compare: left >= lit (0x623=1571), size=2
     003A                           1- 1725     _00535_DS_:
                                    1- 1726     	.line	694, "main.c"; 	if(R_AIN2_DATA > 1570)
     003A 2106                      1- 1727     	MOVIA	0x06
                                    1- 1728     	BANKSEL	_R_AIN2_DATA
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1- 1729     	SUBAR	(_R_AIN2_DATA + 1),W
     003D 0903                      1- 1730     	BTRSS	STATUS,2
                                    1- 1731     	MGOTO	_00603_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 2123                      1- 1732     	MOVIA	0x23
     0040 04rr                      1- 1733     	SUBAR	_R_AIN2_DATA,W
     0041                           1- 1734     _00603_DS_:
     0041 0803                      1- 1735     	BTRSS	STATUS,0
                                    1- 1736     	MGOTO	_00557_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1737     	.line	697, "main.c"; 	lowCount = 0;
                                    1- 1738     	BANKSEL	_lowCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1- 1739     	CLRR	_lowCount
                                    1- 1740     	.line	698, "main.c"; 	pwStep = 8;
     0045 2108                      1- 1741     	MOVIA	0x08
                                    1- 1742     	BANKSEL	_pwStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1743     	MOVAR	_pwStep
                                    1- 1744     	MGOTO	_00558_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1745     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0049                           1- 1746     _00557_DS_:
                                    1- 1747     	.line	700, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0049 2104                      1- 1748     	MOVIA	0x04
                                    1- 1749     	BANKSEL	_R_AIN2_DATA
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 04rr                      1- 1750     	SUBAR	(_R_AIN2_DATA + 1),W
     004C 0903                      1- 1751     	BTRSS	STATUS,2
                                    1- 1752     	MGOTO	_00604_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E 217E                      1- 1753     	MOVIA	0x7e
     004F 04rr                      1- 1754     	SUBAR	_R_AIN2_DATA,W
     0050                           1- 1755     _00604_DS_:
     0050 0C03                      1- 1756     	BTRSC	STATUS,0
                                    1- 1757     	MGOTO	_00554_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1758     	.line	702, "main.c"; 	if(++lowCount < 10)
                                    1- 1759     	BANKSEL	_lowCount
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 05rr                      1- 1760     	INCR	_lowCount,F
                                    1- 1761     ;;unsigned compare: left < lit (0xA=10), size=1
     0054 210A                      1- 1762     	MOVIA	0x0a
     0055 04rr                      1- 1763     	SUBAR	_lowCount,W
     0056 0803                      1- 1764     	BTRSS	STATUS,0
                                    1- 1765     	.line	703, "main.c"; 	return;
                                    1- 1766     	MGOTO	_00565_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1767     	.line	704, "main.c"; 	lowCount = 10;
     0058 210A                      1- 1768     	MOVIA	0x0a
     0059 00rr                      1- 1769     	MOVAR	_lowCount
                                    1- 1770     	.line	705, "main.c"; 	pwStep = 0;
                                    1- 1771     	BANKSEL	_pwStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1- 1772     	CLRR	_pwStep
                                    1- 1773     	.line	706, "main.c"; 	R_AIN2_DATA = 1150;
     005C 217E                      1- 1774     	MOVIA	0x7e
                                    1- 1775     	BANKSEL	_R_AIN2_DATA
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1776     	MOVAR	_R_AIN2_DATA
     005F 2104                      1- 1777     	MOVIA	0x04
     0060 00rr                      1- 1778     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1779     	MGOTO	_00558_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
     0062                           1- 1780     _00554_DS_:
                                    1- 1781     	.line	711, "main.c"; 	lowCount = 0;
                                    1- 1782     	BANKSEL	_lowCount
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1783     	CLRR	_lowCount
                                    1- 1784     	.line	712, "main.c"; 	firstTime = 0;
                                    1- 1785     	BANKSEL	_firstTime
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 02rr                      1- 1786     	CLRR	_firstTime
                                    1- 1787     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1788     	.line	713, "main.c"; 	if(R_AIN2_DATA < 1270)
     0066 2104                      1- 1789     	MOVIA	0x04
                                    1- 1790     	BANKSEL	_R_AIN2_DATA
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 04rr                      1- 1791     	SUBAR	(_R_AIN2_DATA + 1),W
     0069 0903                      1- 1792     	BTRSS	STATUS,2
                                    1- 1793     	MGOTO	_00606_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 21F6                      1- 1794     	MOVIA	0xf6
     006C 04rr                      1- 1795     	SUBAR	_R_AIN2_DATA,W
     006D                           1- 1796     _00606_DS_:
     006D 0C03                      1- 1797     	BTRSC	STATUS,0
                                    1- 1798     	MGOTO	_00551_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1799     	.line	714, "main.c"; 	pwStep = 1;
     006F 2101                      1- 1800     	MOVIA	0x01
                                    1- 1801     	BANKSEL	_pwStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 00rr                      1- 1802     	MOVAR	_pwStep
                                    1- 1803     	MGOTO	_00558_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1804     ;;unsigned compare: left < lit (0x56E=1390), size=2
     0073                           1- 1805     _00551_DS_:
                                    1- 1806     	.line	715, "main.c"; 	else if(R_AIN2_DATA < 1390)
     0073 2105                      1- 1807     	MOVIA	0x05
                                    1- 1808     	BANKSEL	_R_AIN2_DATA
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1- 1809     	SUBAR	(_R_AIN2_DATA + 1),W
     0076 0903                      1- 1810     	BTRSS	STATUS,2
                                    1- 1811     	MGOTO	_00607_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 216E                      1- 1812     	MOVIA	0x6e
     0079 04rr                      1- 1813     	SUBAR	_R_AIN2_DATA,W
     007A                           1- 1814     _00607_DS_:
     007A 0C03                      1- 1815     	BTRSC	STATUS,0
                                    1- 1816     	MGOTO	_00548_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1817     	.line	716, "main.c"; 	pwStep = 2;
     007C 2102                      1- 1818     	MOVIA	0x02
                                    1- 1819     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1820     	MOVAR	_pwStep
                                    1- 1821     	MGOTO	_00558_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1822     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     0080                           1- 1823     _00548_DS_:
                                    1- 1824     	.line	717, "main.c"; 	else if(R_AIN2_DATA < 1450)
     0080 2105                      1- 1825     	MOVIA	0x05
                                    1- 1826     	BANKSEL	_R_AIN2_DATA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1- 1827     	SUBAR	(_R_AIN2_DATA + 1),W
     0083 0903                      1- 1828     	BTRSS	STATUS,2
                                    1- 1829     	MGOTO	_00608_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085 21AA                      1- 1830     	MOVIA	0xaa
     0086 04rr                      1- 1831     	SUBAR	_R_AIN2_DATA,W
     0087                           1- 1832     _00608_DS_:
     0087 0C03                      1- 1833     	BTRSC	STATUS,0
                                    1- 1834     	MGOTO	_00545_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1835     	.line	718, "main.c"; 	pwStep = 3;
     0089 2103                      1- 1836     	MOVIA	0x03
                                    1- 1837     	BANKSEL	_pwStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 1838     	MOVAR	_pwStep
                                    1- 1839     	MGOTO	_00558_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1840     ;;unsigned compare: left < lit (0x5E6=1510), size=2
     008D                           1- 1841     _00545_DS_:
                                    1- 1842     	.line	719, "main.c"; 	else if(R_AIN2_DATA < 1510)
     008D 2105                      1- 1843     	MOVIA	0x05
                                    1- 1844     	BANKSEL	_R_AIN2_DATA
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 1845     	SUBAR	(_R_AIN2_DATA + 1),W
     0090 0903                      1- 1846     	BTRSS	STATUS,2
                                    1- 1847     	MGOTO	_00609_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092 21E6                      1- 1848     	MOVIA	0xe6
     0093 04rr                      1- 1849     	SUBAR	_R_AIN2_DATA,W
     0094                           1- 1850     _00609_DS_:
     0094 0C03                      1- 1851     	BTRSC	STATUS,0
                                    1- 1852     	MGOTO	_00542_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1853     	.line	720, "main.c"; 	pwStep = 4;
     0096 2104                      1- 1854     	MOVIA	0x04
                                    1- 1855     	BANKSEL	_pwStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1856     	MOVAR	_pwStep
                                    1- 1857     	MGOTO	_00558_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1858     ;;unsigned compare: left < lit (0x604=1540), size=2
     009A                           1- 1859     _00542_DS_:
                                    1- 1860     	.line	721, "main.c"; 	else if(R_AIN2_DATA < 1540)
     009A 2106                      1- 1861     	MOVIA	0x06
                                    1- 1862     	BANKSEL	_R_AIN2_DATA
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1863     	SUBAR	(_R_AIN2_DATA + 1),W
     009D 0903                      1- 1864     	BTRSS	STATUS,2
                                    1- 1865     	MGOTO	_00610_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F 2104                      1- 1866     	MOVIA	0x04
     00A0 04rr                      1- 1867     	SUBAR	_R_AIN2_DATA,W
     00A1                           1- 1868     _00610_DS_:
     00A1 0C03                      1- 1869     	BTRSC	STATUS,0
                                    1- 1870     	MGOTO	_00539_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1871     	.line	722, "main.c"; 	pwStep = 5;
     00A3 2105                      1- 1872     	MOVIA	0x05
                                    1- 1873     	BANKSEL	_pwStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1874     	MOVAR	_pwStep
                                    1- 1875     	MGOTO	_00558_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
     00A7                           1- 1876     _00539_DS_:
                                    1- 1877     	.line	724, "main.c"; 	pwStep = 6;
     00A7 2106                      1- 1878     	MOVIA	0x06
                                    1- 1879     	BANKSEL	_pwStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 00rr                      1- 1880     	MOVAR	_pwStep
     00AA                           1- 1881     _00558_DS_:
                                    1- 1882     	.line	727, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
                                    1- 1883     	BANKSEL	_prePwStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 01rr                      1- 1884     	MOVR	_prePwStep,W
     00AC 0D03                      1- 1885     	BTRSC	STATUS,2
                                    1- 1886     	MGOTO	_00559_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1887     	BANKSEL	_pwStep
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 01rr                      1- 1888     	MOVR	_pwStep,W
                                    1- 1889     	BANKSEL	_prePwStep
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 04rr                      1- 1890     	SUBAR	_prePwStep,W
     00B2 0C03                      1- 1891     	BTRSC	STATUS,0
                                    1- 1892     	MGOTO	_00560_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 1893     _00559_DS_:
                                    1- 1894     	.line	728, "main.c"; 	prePwStep = pwStep;
                                    1- 1895     	BANKSEL	_pwStep
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 1896     	MOVR	_pwStep,W
                                    1- 1897     	BANKSEL	_prePwStep
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1898     	MOVAR	_prePwStep
     00B8                           1- 1899     _00560_DS_:
                                    1- 1900     	.line	730, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 1901     	BANKSEL	_ledLightTime
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 01rr                      1- 1902     	MOVR	_ledLightTime,W
     00BA 0D03                      1- 1903     	BTRSC	STATUS,2
                                    1- 1904     	MGOTO	_00565_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1905     	BANKSEL	_prePwStep
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 1906     	MOVR	_prePwStep,W
     00BE 0D03                      1- 1907     	BTRSC	STATUS,2
                                    1- 1908     	MGOTO	_00565_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1909     	.line	731, "main.c"; 	pwStep = prePwStep;
     00C0 01rr                      1- 1910     	MOVR	_prePwStep,W
                                    1- 1911     	BANKSEL	_pwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 1912     	MOVAR	_pwStep
     00C3                           1- 1913     _00565_DS_:
                                    1- 1914     	.line	733, "main.c"; 	}
                                    1- 1915     	RETURN	
     00C3 0010                      3-   40 m1      ret
                                    1- 1916     ; exit point of _checkBatAD
                                    1- 1918     ;***
                                    1- 1919     ;  pBlock Stats: dbName = C
                                    1- 1920     ;***
                                    1- 1921     ;has an exit
                                    1- 1922     ;functions called:
                                    1- 1923     ;   _delay
                                    1- 1924     ;   _delay
                                    1- 1925     ;; Starting pCode block
                                    1- 1926     .segment "code"; module=main, function=_initAD
     0000                           1- 1928     _initAD:
                                    1- 1929     ; 2 exit points
                                    1- 1930     	.line	660, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1931     	MOVIA	0x84
     0001 00rr                      1- 1932     	MOVAR	_ADMD
                                    1- 1933     	.line	665, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1934     	CLRR	_ADVREFH
                                    1- 1935     	.line	670, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1936     	MOVIA	0x10
     0004 00rr                      1- 1937     	MOVAR	_ADR
                                    1- 1938     	.line	672, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1939     	MOVIA	0x03
     0006 00rr                      1- 1940     	MOVAR	_ADCR
                                    1- 1941     	.line	675, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1942     	BSR	_ADMDbits,4
                                    1- 1943     	.line	676, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1944     	MOVIA	0x64
                                    1- 1945     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1946     	.line	679, "main.c"; 	}
                                    1- 1947     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1948     ; exit point of _initAD
                                    1- 1950     ;***
                                    1- 1951     ;  pBlock Stats: dbName = C
                                    1- 1952     ;***
                                    1- 1953     ;has an exit
                                    1- 1954     ;2 compiler assigned registers:
                                    1- 1955     ;   r0x1038
                                    1- 1956     ;   r0x1039
                                    1- 1957     ;; Starting pCode block
                                    1- 1958     .segment "code"; module=main, function=_delay
                                    1- 1960     ;local variable name mapping:
     0000                           1- 1963     _delay:
                                    1- 1964     ; 2 exit points
                                    1- 1965     	.line	650, "main.c"; 	void delay(u8t time)
                                    1- 1966     	BANKSEL	r0x1038
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1967     	MOVAR	r0x1038
                                    1- 1968     	.line	652, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1969     	BANKSEL	r0x1039
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1970     	CLRR	r0x1039
     0004                           1- 1971     _00523_DS_:
                                    1- 1972     	BANKSEL	r0x1038
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1973     	MOVR	r0x1038,W
                                    1- 1974     	BANKSEL	r0x1039
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1975     	SUBAR	r0x1039,W
     0008 0C03                      1- 1976     	BTRSC	STATUS,0
                                    1- 1977     	MGOTO	_00525_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1978     	.line	653, "main.c"; 	NOP();
     000A 0000                      1- 1979     	nop
                                    1- 1980     	.line	652, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1981     	BANKSEL	r0x1039
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1982     	INCR	r0x1039,F
                                    1- 1983     	MGOTO	_00523_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1984     _00525_DS_:
                                    1- 1985     	.line	654, "main.c"; 	}
                                    1- 1986     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1987     ; exit point of _delay
                                    1- 1989     ;***
                                    1- 1990     ;  pBlock Stats: dbName = C
                                    1- 1991     ;***
                                    1- 1992     ;has an exit
                                    1- 1993     ;functions called:
                                    1- 1994     ;   _pwmStop
                                    1- 1995     ;   _pwmStop
                                    1- 1996     ;5 compiler assigned registers:
                                    1- 1997     ;   r0x104E
                                    1- 1998     ;   r0x104F
                                    1- 1999     ;   r0x1050
                                    1- 2000     ;   r0x1051
                                    1- 2001     ;   r0x1052
                                    1- 2002     ;; Starting pCode block
                                    1- 2003     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2005     _chrgCtr:
                                    1- 2006     ; 2 exit points
                                    1- 2007     	.line	578, "main.c"; 	if(PORTA & 0x40)
                                    1- 2008     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Brr                      1- 2009     	BTRSS	_PORTA,6
                                    1- 2010     	MGOTO	_00472_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2011     	.line	581, "main.c"; 	chrgFlag = 1;
                                    1- 2012     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 2013     	BSR	_Status,3
                                    1- 2014     	.line	582, "main.c"; 	workStep = 0;
                                    1- 2015     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2016     	CLRR	_workStep
                                    1- 2017     	.line	583, "main.c"; 	ledLightTime = 0;
                                    1- 2018     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 2019     	CLRR	_ledLightTime
                                    1- 2020     	.line	584, "main.c"; 	pwmStop();
                                    1- 2021     	MCALL	_pwmStop
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2022     ;;unsigned compare: left < lit (0x7=7), size=1
                                    1- 2023     	.line	586, "main.c"; 	if(pwStep >= 7 || chrgFullFlag)
     000A 2107                      1- 2024     	MOVIA	0x07
                                    1- 2025     	BANKSEL	_pwStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 2026     	SUBAR	_pwStep,W
     000D 0C03                      1- 2027     	BTRSC	STATUS,0
                                    1- 2028     	MGOTO	_00465_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2029     	BANKSEL	_chrgFullFlag
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2030     	MOVR	_chrgFullFlag,W
     0011 0D03                      1- 2031     	BTRSC	STATUS,2
                                    1- 2032     	MGOTO	_00466_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 2033     _00465_DS_:
                                    1- 2034     	.line	588, "main.c"; 	chrgStep = 6;
     0013 2106                      1- 2035     	MOVIA	0x06
                                    1- 2036     	BANKSEL	_chrgStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2037     	MOVAR	_chrgStep
                                    1- 2038     	.line	590, "main.c"; 	ledStep = 6;
                                    1- 2039     	BANKSEL	_ledStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2040     	MOVAR	_ledStep
                                    1- 2041     	.line	591, "main.c"; 	if(++fullCount >= 2000)
                                    1- 2042     	BANKSEL	_fullCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 05rr                      1- 2043     	INCR	_fullCount,F
     001A 0D03                      1- 2044     	BTRSC	STATUS,2
     001B 05rr                      1- 2045     	INCR	(_fullCount + 1),F
                                    1- 2046     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     001C 2107                      1- 2047     	MOVIA	0x07
     001D 04rr                      1- 2048     	SUBAR	(_fullCount + 1),W
     001E 0903                      1- 2049     	BTRSS	STATUS,2
                                    1- 2050     	MGOTO	_00513_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020 21D0                      1- 2051     	MOVIA	0xd0
     0021 04rr                      1- 2052     	SUBAR	_fullCount,W
     0022                           1- 2053     _00513_DS_:
     0022 0803                      1- 2054     	BTRSS	STATUS,0
                                    1- 2055     	MGOTO	_00474_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2056     	.line	593, "main.c"; 	fullCount = 2000;
     0024 21D0                      1- 2057     	MOVIA	0xd0
                                    1- 2058     	BANKSEL	_fullCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2059     	MOVAR	_fullCount
     0027 2107                      1- 2060     	MOVIA	0x07
     0028 00rr                      1- 2061     	MOVAR	(_fullCount + 1)
                                    1- 2062     	.line	594, "main.c"; 	chrgFullFlag = 1;
     0029 2101                      1- 2063     	MOVIA	0x01
                                    1- 2064     	BANKSEL	_chrgFullFlag
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2065     	MOVAR	_chrgFullFlag
                                    1- 2066     	MGOTO	_00474_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1- 2067     _00466_DS_:
                                    1- 2068     	.line	602, "main.c"; 	IOSTB &= 0xF7;
     002D 001r                      1- 2069     	IOSTR	_IOSTB
                                    1- 2070     	BANKSEL	r0x104E
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2071     	MOVAR	r0x104E
     0030 1Drr                      1- 2072     	BCR	r0x104E,3
     0031 01rr                      1- 2073     	MOVR	r0x104E,W
     0032 000r                      1- 2074     	IOST	_IOSTB
                                    1- 2075     	.line	603, "main.c"; 	fullCount = 0;
                                    1- 2076     	BANKSEL	_fullCount
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 02rr                      1- 2077     	CLRR	_fullCount
     0035 02rr                      1- 2078     	CLRR	(_fullCount + 1)
                                    1- 2079     	.line	604, "main.c"; 	if(count500ms == 0 && pwStep <= 6 && lockLedStep < 5)
                                    1- 2080     	BANKSEL	_count500ms
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 2081     	MOVR	_count500ms,W
     0038 0903                      1- 2082     	BTRSS	STATUS,2
                                    1- 2083     	MGOTO	_00460_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2084     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2085     ;;unsigned compare: left >= lit (0x7=7), size=1
     003A 2107                      1- 2086     	MOVIA	0x07
                                    1- 2087     	BANKSEL	_pwStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1- 2088     	SUBAR	_pwStep,W
     003D 0C03                      1- 2089     	BTRSC	STATUS,0
                                    1- 2090     	MGOTO	_00460_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2091     ;;unsigned compare: left < lit (0x5=5), size=1
     003F 2105                      1- 2092     	MOVIA	0x05
                                    1- 2093     	BANKSEL	_lockLedStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 2094     	SUBAR	_lockLedStep,W
     0042 0C03                      1- 2095     	BTRSC	STATUS,0
                                    1- 2096     	MGOTO	_00460_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2097     	.line	607, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 2098     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1- 2099     	MOVR	_pwStep,W
                                    1- 2100     	BANKSEL	r0x104E
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 2101     	MOVAR	r0x104E
                                    1- 2102     	BANKSEL	r0x104F
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 2103     	CLRR	r0x104F
     004A 21FF                      1- 2104     	MOVIA	0xff
                                    1- 2105     	BANKSEL	r0x104E
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 03rr                      1- 2106     	ADDAR	r0x104E,F
     004D 0C03                      1- 2107     	BTRSC	STATUS,0
                                    1- 2108     	MGOTO	_00006_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2109     	BANKSEL	r0x104F
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 06rr                      1- 2110     	DECR	r0x104F,F
     0051                           1- 2111     _00006_DS_:
                                    1- 2112     	BANKSEL	_lockLedStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2113     	MOVR	_lockLedStep,W
                                    1- 2114     	BANKSEL	r0x1050
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 00rr                      1- 2115     	MOVAR	r0x1050
                                    1- 2116     ;;1	CLRR	r0x1051
     0055 2100                      1- 2117     	MOVIA	0x00
     0056 2580                      1- 2118     	ADDIA	0x80
                                    1- 2119     	BANKSEL	r0x1052
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 2120     	MOVAR	r0x1052
                                    1- 2121     	BANKSEL	r0x104F
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1- 2122     	MOVR	r0x104F,W
     005B 2580                      1- 2123     	ADDIA	0x80
                                    1- 2124     	BANKSEL	r0x1052
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 04rr                      1- 2125     	SUBAR	r0x1052,W
     005E 0903                      1- 2126     	BTRSS	STATUS,2
                                    1- 2127     	MGOTO	_00516_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2128     	BANKSEL	r0x104E
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2129     	MOVR	r0x104E,W
                                    1- 2130     	BANKSEL	r0x1050
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 2131     	SUBAR	r0x1050,W
     0064                           1- 2132     _00516_DS_:
     0064 0C03                      1- 2133     	BTRSC	STATUS,0
                                    1- 2134     	MGOTO	_00455_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2135     	.line	609, "main.c"; 	if(lockLedStep == 0)
                                    1- 2136     	BANKSEL	_lockLedStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2137     	MOVR	_lockLedStep,W
     0068 0903                      1- 2138     	BTRSS	STATUS,2
                                    1- 2139     	MGOTO	_00451_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2140     	.line	610, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2141     	BANKSEL	_pwStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 06rr                      1- 2142     	DECR	_pwStep,W
                                    1- 2143     	BANKSEL	_lockLedStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 00rr                      1- 2144     	MOVAR	_lockLedStep
     006E                           1- 2145     _00451_DS_:
                                    1- 2146     	.line	611, "main.c"; 	if(++ledCount > 100)
                                    1- 2147     	BANKSEL	_ledCount
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 05rr                      1- 2148     	INCR	_ledCount,F
                                    1- 2149     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2150     ;;unsigned compare: left >= lit (0x65=101), size=1
     0070 2165                      1- 2151     	MOVIA	0x65
     0071 04rr                      1- 2152     	SUBAR	_ledCount,W
     0072 0803                      1- 2153     	BTRSS	STATUS,0
                                    1- 2154     	MGOTO	_00456_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2155     	.line	612, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2156     	BANKSEL	_pwStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 06rr                      1- 2157     	DECR	_pwStep,W
                                    1- 2158     	BANKSEL	_lockLedStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 2159     	MOVAR	_lockLedStep
                                    1- 2160     	MGOTO	_00456_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1- 2161     _00455_DS_:
                                    1- 2162     	.line	617, "main.c"; 	ledCount = 0;
                                    1- 2163     	BANKSEL	_ledCount
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 02rr                      1- 2164     	CLRR	_ledCount
     007B                           1- 2165     _00456_DS_:
                                    1- 2166     	.line	619, "main.c"; 	if(++ledStep > 5)
                                    1- 2167     	BANKSEL	_ledStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 05rr                      1- 2168     	INCR	_ledStep,F
                                    1- 2169     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2170     ;;unsigned compare: left >= lit (0x6=6), size=1
     007D 2106                      1- 2171     	MOVIA	0x06
     007E 04rr                      1- 2172     	SUBAR	_ledStep,W
     007F 0803                      1- 2173     	BTRSS	STATUS,0
                                    1- 2174     	MGOTO	_00460_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2175     	.line	620, "main.c"; 	ledStep = lockLedStep;
                                    1- 2176     	BANKSEL	_lockLedStep
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 2177     	MOVR	_lockLedStep,W
                                    1- 2178     	BANKSEL	_ledStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1- 2179     	MOVAR	_ledStep
                                    1- 2180     ;;unsigned compare: left < lit (0x5=5), size=1
     0085                           1- 2181     _00460_DS_:
                                    1- 2182     	.line	622, "main.c"; 	if(lockLedStep >= 5)
     0085 2105                      1- 2183     	MOVIA	0x05
                                    1- 2184     	BANKSEL	_lockLedStep
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 04rr                      1- 2185     	SUBAR	_lockLedStep,W
     0088 0803                      1- 2186     	BTRSS	STATUS,0
                                    1- 2187     	MGOTO	_00474_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2188     	.line	624, "main.c"; 	ledStep = 5;	//亮灯不闪了
     008A 2105                      1- 2189     	MOVIA	0x05
                                    1- 2190     	BANKSEL	_ledStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 2191     	MOVAR	_ledStep
                                    1- 2192     	MGOTO	_00474_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E                           1- 2193     _00472_DS_:
                                    1- 2194     	.line	633, "main.c"; 	chrgWaitTime = 20;
     008E 2114                      1- 2195     	MOVIA	0x14
                                    1- 2196     	BANKSEL	_chrgWaitTime
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 2197     	MOVAR	_chrgWaitTime
                                    1- 2198     	.line	634, "main.c"; 	subMin = 33;
     0091 2121                      1- 2199     	MOVIA	0x21
                                    1- 2200     	BANKSEL	_subMin
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 2201     	MOVAR	_subMin
                                    1- 2202     	.line	635, "main.c"; 	chrgFullFlag = 0;
                                    1- 2203     	BANKSEL	_chrgFullFlag
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 02rr                      1- 2204     	CLRR	_chrgFullFlag
                                    1- 2205     	.line	636, "main.c"; 	chrgduty = 0;
                                    1- 2206     	BANKSEL	_chrgduty
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 02rr                      1- 2207     	CLRR	_chrgduty
                                    1- 2208     	.line	637, "main.c"; 	maxduty = 0;
                                    1- 2209     	BANKSEL	_maxduty
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 02rr                      1- 2210     	CLRR	_maxduty
                                    1- 2211     	.line	638, "main.c"; 	chrgStep = 0;
                                    1- 2212     	BANKSEL	_chrgStep
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 02rr                      1- 2213     	CLRR	_chrgStep
                                    1- 2214     	.line	639, "main.c"; 	lockLedStep = 0;
                                    1- 2215     	BANKSEL	_lockLedStep
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 02rr                      1- 2216     	CLRR	_lockLedStep
                                    1- 2217     	.line	640, "main.c"; 	chrgTime = 0;
                                    1- 2218     	BANKSEL	_chrgTime
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 02rr                      1- 2219     	CLRR	_chrgTime
     00A0 02rr                      1- 2220     	CLRR	(_chrgTime + 1)
                                    1- 2221     	.line	641, "main.c"; 	if(workStep == 0)
                                    1- 2222     	BANKSEL	_workStep
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1- 2223     	MOVR	_workStep,W
     00A3 0903                      1- 2224     	BTRSS	STATUS,2
                                    1- 2225     	MGOTO	_00007_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2226     	.line	642, "main.c"; 	ledStep = 0;
                                    1- 2227     	BANKSEL	_ledStep
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 02rr                      1- 2228     	CLRR	_ledStep
     00A7                           1- 2229     _00007_DS_:
                                    1- 2230     	.line	643, "main.c"; 	chrgFlag = 0;
                                    1- 2231     	BANKSEL	_Status
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 1Drr                      1- 2232     	BCR	_Status,3
                                    1- 2233     	.line	644, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2234     	BANKSEL	_chrgTime
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 02rr                      1- 2235     	CLRR	_chrgTime
     00AB 02rr                      1- 2236     	CLRR	(_chrgTime + 1)
     00AC                           1- 2237     _00474_DS_:
                                    1- 2238     	.line	647, "main.c"; 	}
                                    1- 2239     	RETURN	
     00AC 0010                      3-   40 m1      ret
                                    1- 2240     ; exit point of _chrgCtr
                                    1- 2242     ;***
                                    1- 2243     ;  pBlock Stats: dbName = C
                                    1- 2244     ;***
                                    1- 2245     ;has an exit
                                    1- 2246     ;1 compiler assigned register :
                                    1- 2247     ;   r0x1053
                                    1- 2248     ;; Starting pCode block
                                    1- 2249     .segment "code"; module=main, function=_keyRead
                                    1- 2251     ;local variable name mapping:
     0000                           1- 2253     _keyRead:
                                    1- 2254     ; 2 exit points
                                    1- 2255     	.line	541, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2256     	BANKSEL	r0x1053
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2257     	MOVAR	r0x1053
                                    1- 2258     	.line	543, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2259     	MOVR	r0x1053,W
     0003 0D03                      1- 2260     	BTRSC	STATUS,2
                                    1- 2261     	MGOTO	_00441_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2262     	.line	545, "main.c"; 	keyCount++;
                                    1- 2263     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2264     	INCR	_keyCount,F
                                    1- 2265     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2266     	.line	546, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2267     	MOVIA	0x64
     0008 04rr                      1- 2268     	SUBAR	_keyCount,W
     0009 0803                      1- 2269     	BTRSS	STATUS,0
                                    1- 2270     	MGOTO	_00442_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2271     	.line	548, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2272     	MOVIA	0x64
     000C 00rr                      1- 2273     	MOVAR	_keyCount
                                    1- 2274     	.line	549, "main.c"; 	if(!longPressFlag)
                                    1- 2275     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2276     	BTRSC	_Status,1
                                    1- 2277     	MGOTO	_00442_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2278     	.line	551, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2279     	BSR	_Status,1
                                    1- 2280     	.line	552, "main.c"; 	return 2;
     0011 2102                      1- 2281     	MOVIA	0x02
                                    1- 2282     	MGOTO	_00443_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2283     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2284     _00441_DS_:
                                    1- 2285     	.line	558, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2286     	MOVIA	0x64
                                    1- 2287     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2288     	SUBAR	_keyCount,W
     0016 0803                      1- 2289     	BTRSS	STATUS,0
                                    1- 2290     	MGOTO	_00438_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2291     	.line	560, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2292     	CLRR	_keyCount
                                    1- 2293     	.line	561, "main.c"; 	longPressFlag = 0;
                                    1- 2294     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2295     	BCR	_Status,1
                                    1- 2296     	.line	562, "main.c"; 	return	0;
     001B 2100                      1- 2297     	MOVIA	0x00
                                    1- 2298     	MGOTO	_00443_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2299     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2300     _00438_DS_:
                                    1- 2301     	.line	564, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2302     	MOVIA	0x04
                                    1- 2303     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2304     	SUBAR	_keyCount,W
     0020 0803                      1- 2305     	BTRSS	STATUS,0
                                    1- 2306     	MGOTO	_00439_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2307     	.line	566, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2308     	CLRR	_keyCount
                                    1- 2309     	.line	567, "main.c"; 	return	1;
     0023 2101                      1- 2310     	MOVIA	0x01
                                    1- 2311     	MGOTO	_00443_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2312     _00439_DS_:
                                    1- 2313     	.line	569, "main.c"; 	keyCount = 0;
                                    1- 2314     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2315     	CLRR	_keyCount
     0027                           1- 2316     _00442_DS_:
                                    1- 2317     	.line	571, "main.c"; 	return 0;
     0027 2100                      1- 2318     	MOVIA	0x00
     0028                           1- 2319     _00443_DS_:
                                    1- 2320     	.line	572, "main.c"; 	}
                                    1- 2321     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2322     ; exit point of _keyRead
                                    1- 2324     ;***
                                    1- 2325     ;  pBlock Stats: dbName = C
                                    1- 2326     ;***
                                    1- 2327     ;has an exit
                                    1- 2328     ;functions called:
                                    1- 2329     ;   _LedInput
                                    1- 2330     ;   _pwmStop
                                    1- 2331     ;   _LedInput
                                    1- 2332     ;   _pwmStop
                                    1- 2333     ;; Starting pCode block
                                    1- 2334     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2336     _gotoSleep:
                                    1- 2337     ; 2 exit points
                                    1- 2338     	.line	508, "main.c"; 	LedInput();
                                    1- 2339     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2340     	.line	509, "main.c"; 	sleepTime = 0;
                                    1- 2341     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2342     	CLRR	_sleepTime
     0003 02rr                      1- 2343     	CLRR	(_sleepTime + 1)
                                    1- 2344     	.line	511, "main.c"; 	pwmStop();
                                    1- 2345     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2346     	.line	512, "main.c"; 	PORTA = 0x00;
                                    1- 2347     	BANKSEL	_PORTA
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2348     	CLRR	_PORTA
                                    1- 2349     	.line	513, "main.c"; 	APHCON = 0x7F;
     0007 217F                      1- 2350     	MOVIA	0x7f
     0008 000r                      1- 2351     	IOST	_APHCON
                                    1- 2352     	.line	514, "main.c"; 	PORTB = 0x00;
     0009 02rr                      1- 2353     	CLRR	_PORTB
                                    1- 2354     	.line	515, "main.c"; 	workStep = 0;
                                    1- 2355     	BANKSEL	_workStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2356     	CLRR	_workStep
                                    1- 2357     	.line	516, "main.c"; 	AWUCON = 0xC0;
     000C 21C0                      1- 2358     	MOVIA	0xc0
     000D 00rr                      1- 2359     	MOVAR	_AWUCON
                                    1- 2360     	.line	517, "main.c"; 	BWUCON = 0x00;
     000E 02rr                      1- 2361     	CLRR	_BWUCON
                                    1- 2362     	.line	518, "main.c"; 	redLedFlag = 0;
                                    1- 2363     	BANKSEL	_Status
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 1Drr                      1- 2364     	BCR	_Status,2
                                    1- 2365     	.line	521, "main.c"; 	INTE =  C_INT_PABKey;
     0011 2102                      1- 2366     	MOVIA	0x02
     0012 00rr                      1- 2367     	MOVAR	_INTE
                                    1- 2368     	.line	522, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 2369     	MOVIA	0x18
     0014 00rr                      1- 2370     	MOVAR	_PCON
                                    1- 2371     	.line	523, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 2372     	CLRR	_INTF
                                    1- 2373     	.line	524, "main.c"; 	CLRWDT();
     0016 0002                      1- 2374     	clrwdt
                                    1- 2375     	.line	525, "main.c"; 	ENI();
     0017 0004                      1- 2376     	ENI
                                    1- 2377     	.line	526, "main.c"; 	SLEEP();
     0018 0001                      1- 2378     	sleep
                                    1- 2379     	.line	527, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 2380     	CLRR	_AWUCON
                                    1- 2381     	.line	528, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA6_Input | C_PA2_Input | C_PA1_Input | C_PA0_Input;
     001A 21F7                      1- 2382     	MOVIA	0xf7
     001B 000r                      1- 2383     	IOST	_IOSTA
                                    1- 2384     	.line	529, "main.c"; 	IOSTB = 0x00;
     001C 0200                      1- 2385     	CLRA	
     001D 000r                      1- 2386     	IOST	_IOSTB
                                    1- 2387     	.line	530, "main.c"; 	PORTA = 0x00;
                                    1- 2388     	BANKSEL	_PORTA
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 02rr                      1- 2389     	CLRR	_PORTA
                                    1- 2390     	.line	531, "main.c"; 	APHCON = 0x7F;
     0020 217F                      1- 2391     	MOVIA	0x7f
     0021 000r                      1- 2392     	IOST	_APHCON
                                    1- 2393     	.line	532, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2394     	MOVIA	0x01
     0023 00rr                      1- 2395     	MOVAR	_INTE
                                    1- 2396     	.line	533, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2397     	CLRR	_INTF
                                    1- 2398     	.line	535, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0025 21B8                      1- 2399     	MOVIA	0xb8
     0026 00rr                      1- 2400     	MOVAR	_PCON
                                    1- 2401     	.line	538, "main.c"; 	}
                                    1- 2402     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2403     ; exit point of _gotoSleep
                                    1- 2405     ;***
                                    1- 2406     ;  pBlock Stats: dbName = C
                                    1- 2407     ;***
                                    1- 2408     ;has an exit
                                    1- 2409     ;; Starting pCode block
                                    1- 2410     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2412     _pwmStop:
                                    1- 2413     ; 2 exit points
                                    1- 2414     	.line	498, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2415     	CLRA	
     0001 00rr                      1- 2416     	SFUN	_T1CR1
                                    1- 2417     	.line	499, "main.c"; 	}
                                    1- 2418     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2419     ; exit point of _pwmStop
                                    1- 2421     ;***
                                    1- 2422     ;  pBlock Stats: dbName = C
                                    1- 2423     ;***
                                    1- 2424     ;has an exit
                                    1- 2425     ;1 compiler assigned register :
                                    1- 2426     ;   r0x1055
                                    1- 2427     ;; Starting pCode block
                                    1- 2428     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2430     _pwmInit:
                                    1- 2431     ; 2 exit points
                                    1- 2432     	.line	486, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2433     	SFUNR	_T1CR1
                                    1- 2434     	BANKSEL	r0x1055
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2435     	MOVAR	r0x1055
     0003 0Frr                      1- 2436     	BTRSC	r0x1055,7
                                    1- 2437     	.line	487, "main.c"; 	return;
                                    1- 2438     	MGOTO	_00418_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2439     	.line	488, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2440     	CLRR	_TMRH
                                    1- 2441     	.line	489, "main.c"; 	TMR1 = 100;							//频率为110K
     0006 2164                      1- 2442     	MOVIA	0x64
     0007 00rr                      1- 2443     	SFUN	_TMR1
                                    1- 2444     	.line	492, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2445     	CLRA	
     0009 00rr                      1- 2446     	SFUN	_T1CR2
                                    1- 2447     	.line	493, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2448     	MOVIA	0x83
     000B 00rr                      1- 2449     	SFUN	_T1CR1
     000C                           1- 2450     _00418_DS_:
                                    1- 2451     	.line	494, "main.c"; 	}
                                    1- 2452     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2453     ; exit point of _pwmInit
                                    1- 2455     ;***
                                    1- 2456     ;  pBlock Stats: dbName = C
                                    1- 2457     ;***
                                    1- 2458     ;has an exit
                                    1- 2459     ;functions called:
                                    1- 2460     ;   _delay
                                    1- 2461     ;   _LedInput
                                    1- 2462     ;   _delay
                                    1- 2463     ;   _LedInput
                                    1- 2464     ;1 compiler assigned register :
                                    1- 2465     ;   r0x1056
                                    1- 2466     ;; Starting pCode block
                                    1- 2467     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2469     _LED1ON:
                                    1- 2470     ; 2 exit points
                                    1- 2471     	.line	474, "main.c"; 	L2OUT;
     0000 001r                      1- 2472     	IOSTR	_IOSTB
                                    1- 2473     	BANKSEL	r0x1056
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2474     	MOVAR	r0x1056
     0003 1Crr                      1- 2475     	BCR	r0x1056,1
     0004 01rr                      1- 2476     	MOVR	r0x1056,W
     0005 000r                      1- 2477     	IOST	_IOSTB
                                    1- 2478     	.line	475, "main.c"; 	L3OUT;
     0006 001r                      1- 2479     	IOSTR	_IOSTB
     0007 00rr                      1- 2480     	MOVAR	r0x1056
     0008 1Drr                      1- 2481     	BCR	r0x1056,2
     0009 01rr                      1- 2482     	MOVR	r0x1056,W
     000A 000r                      1- 2483     	IOST	_IOSTB
                                    1- 2484     	.line	476, "main.c"; 	L3H;
     000B 19rr                      1- 2485     	BSR	_PORTB,2
                                    1- 2486     	.line	477, "main.c"; 	L2L;
     000C 1Crr                      1- 2487     	BCR	_PORTB,1
                                    1- 2488     	.line	478, "main.c"; 	delay(100);
     000D 2164                      1- 2489     	MOVIA	0x64
                                    1- 2490     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2491     	.line	479, "main.c"; 	LedInput();
                                    1- 2492     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2493     	.line	480, "main.c"; 	}
                                    1- 2494     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2495     ; exit point of _LED1ON
                                    1- 2497     ;***
                                    1- 2498     ;  pBlock Stats: dbName = C
                                    1- 2499     ;***
                                    1- 2500     ;has an exit
                                    1- 2501     ;functions called:
                                    1- 2502     ;   _delay
                                    1- 2503     ;   _LedInput
                                    1- 2504     ;   _delay
                                    1- 2505     ;   _LedInput
                                    1- 2506     ;1 compiler assigned register :
                                    1- 2507     ;   r0x1057
                                    1- 2508     ;; Starting pCode block
                                    1- 2509     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2511     _LED2ON:
                                    1- 2512     ; 2 exit points
                                    1- 2513     	.line	464, "main.c"; 	L3OUT;
     0000 001r                      1- 2514     	IOSTR	_IOSTB
                                    1- 2515     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2516     	MOVAR	r0x1057
     0003 1Drr                      1- 2517     	BCR	r0x1057,2
     0004 01rr                      1- 2518     	MOVR	r0x1057,W
     0005 000r                      1- 2519     	IOST	_IOSTB
                                    1- 2520     	.line	465, "main.c"; 	L1OUT;
     0006 001r                      1- 2521     	IOSTR	_IOSTB
     0007 00rr                      1- 2522     	MOVAR	r0x1057
     0008 1Crr                      1- 2523     	BCR	r0x1057,0
     0009 01rr                      1- 2524     	MOVR	r0x1057,W
     000A 000r                      1- 2525     	IOST	_IOSTB
                                    1- 2526     	.line	466, "main.c"; 	L1H;
     000B 18rr                      1- 2527     	BSR	_PORTB,0
                                    1- 2528     	.line	467, "main.c"; 	L3L;
     000C 1Drr                      1- 2529     	BCR	_PORTB,2
                                    1- 2530     	.line	468, "main.c"; 	delay(100);
     000D 2164                      1- 2531     	MOVIA	0x64
                                    1- 2532     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2533     	.line	469, "main.c"; 	LedInput();
                                    1- 2534     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2535     	.line	470, "main.c"; 	}
                                    1- 2536     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2537     ; exit point of _LED2ON
                                    1- 2539     ;***
                                    1- 2540     ;  pBlock Stats: dbName = C
                                    1- 2541     ;***
                                    1- 2542     ;has an exit
                                    1- 2543     ;functions called:
                                    1- 2544     ;   _delay
                                    1- 2545     ;   _LedInput
                                    1- 2546     ;   _delay
                                    1- 2547     ;   _LedInput
                                    1- 2548     ;1 compiler assigned register :
                                    1- 2549     ;   r0x1058
                                    1- 2550     ;; Starting pCode block
                                    1- 2551     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2553     _LED3ON:
                                    1- 2554     ; 2 exit points
                                    1- 2555     	.line	454, "main.c"; 	L3OUT;
     0000 001r                      1- 2556     	IOSTR	_IOSTB
                                    1- 2557     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2558     	MOVAR	r0x1058
     0003 1Drr                      1- 2559     	BCR	r0x1058,2
     0004 01rr                      1- 2560     	MOVR	r0x1058,W
     0005 000r                      1- 2561     	IOST	_IOSTB
                                    1- 2562     	.line	455, "main.c"; 	L1OUT;
     0006 001r                      1- 2563     	IOSTR	_IOSTB
     0007 00rr                      1- 2564     	MOVAR	r0x1058
     0008 1Crr                      1- 2565     	BCR	r0x1058,0
     0009 01rr                      1- 2566     	MOVR	r0x1058,W
     000A 000r                      1- 2567     	IOST	_IOSTB
                                    1- 2568     	.line	456, "main.c"; 	L3H;
     000B 19rr                      1- 2569     	BSR	_PORTB,2
                                    1- 2570     	.line	457, "main.c"; 	L1L;
     000C 1Crr                      1- 2571     	BCR	_PORTB,0
                                    1- 2572     	.line	458, "main.c"; 	delay(100);
     000D 2164                      1- 2573     	MOVIA	0x64
                                    1- 2574     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2575     	.line	459, "main.c"; 	LedInput();
                                    1- 2576     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2577     	.line	460, "main.c"; 	}
                                    1- 2578     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2579     ; exit point of _LED3ON
                                    1- 2581     ;***
                                    1- 2582     ;  pBlock Stats: dbName = C
                                    1- 2583     ;***
                                    1- 2584     ;has an exit
                                    1- 2585     ;functions called:
                                    1- 2586     ;   _delay
                                    1- 2587     ;   _LedInput
                                    1- 2588     ;   _delay
                                    1- 2589     ;   _LedInput
                                    1- 2590     ;1 compiler assigned register :
                                    1- 2591     ;   r0x1059
                                    1- 2592     ;; Starting pCode block
                                    1- 2593     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2595     _LED4ON:
                                    1- 2596     ; 2 exit points
                                    1- 2597     	.line	444, "main.c"; 	L2OUT;
     0000 001r                      1- 2598     	IOSTR	_IOSTB
                                    1- 2599     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2600     	MOVAR	r0x1059
     0003 1Crr                      1- 2601     	BCR	r0x1059,1
     0004 01rr                      1- 2602     	MOVR	r0x1059,W
     0005 000r                      1- 2603     	IOST	_IOSTB
                                    1- 2604     	.line	445, "main.c"; 	L1OUT;
     0006 001r                      1- 2605     	IOSTR	_IOSTB
     0007 00rr                      1- 2606     	MOVAR	r0x1059
     0008 1Crr                      1- 2607     	BCR	r0x1059,0
     0009 01rr                      1- 2608     	MOVR	r0x1059,W
     000A 000r                      1- 2609     	IOST	_IOSTB
                                    1- 2610     	.line	446, "main.c"; 	L2H;
     000B 18rr                      1- 2611     	BSR	_PORTB,1
                                    1- 2612     	.line	447, "main.c"; 	L1L;
     000C 1Crr                      1- 2613     	BCR	_PORTB,0
                                    1- 2614     	.line	448, "main.c"; 	delay(100);
     000D 2164                      1- 2615     	MOVIA	0x64
                                    1- 2616     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2617     	.line	449, "main.c"; 	LedInput();
                                    1- 2618     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2619     	.line	450, "main.c"; 	}
                                    1- 2620     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2621     ; exit point of _LED4ON
                                    1- 2623     ;***
                                    1- 2624     ;  pBlock Stats: dbName = C
                                    1- 2625     ;***
                                    1- 2626     ;has an exit
                                    1- 2627     ;functions called:
                                    1- 2628     ;   _delay
                                    1- 2629     ;   _LedInput
                                    1- 2630     ;   _delay
                                    1- 2631     ;   _LedInput
                                    1- 2632     ;1 compiler assigned register :
                                    1- 2633     ;   r0x105A
                                    1- 2634     ;; Starting pCode block
                                    1- 2635     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2637     _LED5ON:
                                    1- 2638     ; 2 exit points
                                    1- 2639     	.line	434, "main.c"; 	L2OUT;
     0000 001r                      1- 2640     	IOSTR	_IOSTB
                                    1- 2641     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2642     	MOVAR	r0x105A
     0003 1Crr                      1- 2643     	BCR	r0x105A,1
     0004 01rr                      1- 2644     	MOVR	r0x105A,W
     0005 000r                      1- 2645     	IOST	_IOSTB
                                    1- 2646     	.line	435, "main.c"; 	L1OUT;
     0006 001r                      1- 2647     	IOSTR	_IOSTB
     0007 00rr                      1- 2648     	MOVAR	r0x105A
     0008 1Crr                      1- 2649     	BCR	r0x105A,0
     0009 01rr                      1- 2650     	MOVR	r0x105A,W
     000A 000r                      1- 2651     	IOST	_IOSTB
                                    1- 2652     	.line	436, "main.c"; 	L1H;
     000B 18rr                      1- 2653     	BSR	_PORTB,0
                                    1- 2654     	.line	437, "main.c"; 	L2L;
     000C 1Crr                      1- 2655     	BCR	_PORTB,1
                                    1- 2656     	.line	438, "main.c"; 	delay(100);
     000D 2164                      1- 2657     	MOVIA	0x64
                                    1- 2658     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2659     	.line	439, "main.c"; 	LedInput();
                                    1- 2660     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2661     	.line	440, "main.c"; 	}
                                    1- 2662     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2663     ; exit point of _LED5ON
                                    1- 2665     ;***
                                    1- 2666     ;  pBlock Stats: dbName = C
                                    1- 2667     ;***
                                    1- 2668     ;has an exit
                                    1- 2669     ;1 compiler assigned register :
                                    1- 2670     ;   r0x1054
                                    1- 2671     ;; Starting pCode block
                                    1- 2672     .segment "code"; module=main, function=_LedInput
     0000                           1- 2674     _LedInput:
                                    1- 2675     ; 2 exit points
                                    1- 2676     	.line	428, "main.c"; 	IOSTB |= 0x07;
     0000 001r                      1- 2677     	IOSTR	_IOSTB
                                    1- 2678     	BANKSEL	r0x1054
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2679     	MOVAR	r0x1054
     0003 2107                      1- 2680     	MOVIA	0x07
     0004 11rr                      1- 2681     	IORAR	r0x1054,F
     0005 01rr                      1- 2682     	MOVR	r0x1054,W
     0006 000r                      1- 2683     	IOST	_IOSTB
                                    1- 2684     	.line	429, "main.c"; 	PORTB &= 0xF8;
     0007 21F8                      1- 2685     	MOVIA	0xf8
     0008 10rr                      1- 2686     	ANDAR	_PORTB,F
                                    1- 2687     	.line	430, "main.c"; 	}
                                    1- 2688     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 2689     ; exit point of _LedInput
                                    1- 2691     ;***
                                    1- 2692     ;  pBlock Stats: dbName = C
                                    1- 2693     ;***
                                    1- 2694     ;has an exit
                                    1- 2695     ;functions called:
                                    1- 2696     ;   _LedInput
                                    1- 2697     ;   _LedInput
                                    1- 2698     ;   _LED5ON
                                    1- 2699     ;   _LED4ON
                                    1- 2700     ;   _LED3ON
                                    1- 2701     ;   _LED2ON
                                    1- 2702     ;   _LED1ON
                                    1- 2703     ;   _LedInput
                                    1- 2704     ;   _LedInput
                                    1- 2705     ;   _LED5ON
                                    1- 2706     ;   _LED4ON
                                    1- 2707     ;   _LED3ON
                                    1- 2708     ;   _LED2ON
                                    1- 2709     ;   _LED1ON
                                    1- 2710     ;; Starting pCode block
                                    1- 2711     .segment "code"; module=main, function=_ledShow
     0000                           1- 2713     _ledShow:
                                    1- 2714     ; 2 exit points
                                    1- 2715     	.line	371, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 2716     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2717     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 2718     	BTRSC	STATUS,2
                                    1- 2719     	MGOTO	_00319_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2720     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2721     	MOVR	_workStep,W
     0006 0903                      1- 2722     	BTRSS	STATUS,2
                                    1- 2723     	MGOTO	_00319_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2724     	.line	373, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 2725     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 2726     	BTRSC	_ledDeadTime,0
                                    1- 2727     	MGOTO	_00316_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2728     	.line	375, "main.c"; 	ledStep = 0;
                                    1- 2729     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2730     	CLRR	_ledStep
                                    1- 2731     	MGOTO	_00319_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2732     _00316_DS_:
                                    1- 2733     	.line	379, "main.c"; 	ledStep = tempLedStep;
                                    1- 2734     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2735     	MOVR	_tempLedStep,W
                                    1- 2736     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2737     	MOVAR	_ledStep
     0012                           1- 2738     _00319_DS_:
                                    1- 2739     	.line	383, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 2740     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2741     	MOVR	_ledLightTime,W
     0014 0D03                      1- 2742     	BTRSC	STATUS,2
                                    1- 2743     	MGOTO	_00327_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2744     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2745     	MOVR	_pwStep,W
     0018 0D03                      1- 2746     	BTRSC	STATUS,2
                                    1- 2747     	MGOTO	_00327_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2748     	.line	385, "main.c"; 	if(ledLightTime > 0)
                                    1- 2749     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 2750     	MOVR	_ledLightTime,W
     001C 0D03                      1- 2751     	BTRSC	STATUS,2
                                    1- 2752     	MGOTO	_00327_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2753     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2754     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2755     	.line	387, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 2756     	MOVIA	0x07
                                    1- 2757     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2758     	SUBAR	_pwStep,W
     0021 0803                      1- 2759     	BTRSS	STATUS,0
                                    1- 2760     	MGOTO	_00322_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2761     	.line	388, "main.c"; 	ledStep = 6;
     0023 2106                      1- 2762     	MOVIA	0x06
                                    1- 2763     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2764     	MOVAR	_ledStep
                                    1- 2765     	MGOTO	_00327_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2766     _00322_DS_:
                                    1- 2767     	.line	390, "main.c"; 	ledStep = pwStep;
                                    1- 2768     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2769     	MOVR	_pwStep,W
                                    1- 2770     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2771     	MOVAR	_ledStep
     002B                           1- 2772     _00327_DS_:
                                    1- 2773     	.line	393, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 2774     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 2775     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 2776     	BTRSC	STATUS,2
                                    1- 2777     	MGOTO	_00333_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2778     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2779     	MOVR	_workStep,W
     0031 0D03                      1- 2780     	BTRSC	STATUS,2
                                    1- 2781     	MGOTO	_00333_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2782     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2783     	MOVR	_pwStep,W
     0035 0903                      1- 2784     	BTRSS	STATUS,2
                                    1- 2785     	MGOTO	_00333_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2786     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2787     	.line	395, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 2788     	MOVIA	0x32
                                    1- 2789     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 2790     	SUBAR	_count1s,W
     003A 0C03                      1- 2791     	BTRSC	STATUS,0
                                    1- 2792     	MGOTO	_00330_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2793     	.line	396, "main.c"; 	ledStep = workStep;
                                    1- 2794     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2795     	MOVR	_workStep,W
                                    1- 2796     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 2797     	MOVAR	_ledStep
                                    1- 2798     	MGOTO	_00333_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 2799     _00330_DS_:
                                    1- 2800     	.line	398, "main.c"; 	ledStep = 0;
                                    1- 2801     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 2802     	CLRR	_ledStep
     0043                           1- 2803     _00333_DS_:
                                    1- 2804     	.line	401, "main.c"; 	LedInput();
                                    1- 2805     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2806     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2807     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 2808     	.line	402, "main.c"; 	switch(ledStep)
     0044 2109                      1- 2809     	MOVIA	0x09
                                    1- 2810     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 2811     	SUBAR	_ledStep,W
     0047 0C03                      1- 2812     	BTRSC	STATUS,0
                                    1- 2813     	MGOTO	_00346_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 2814     	MOVIA	((_00387_DS_ >> 8) & 0xff)
     004A 008A                      1- 2815     	MOVAR	PCHBUF
     004B 01rr                      1- 2816     	MOVR	_ledStep,W
     004C 25rr                      1- 2817     	ADDIA	_00387_DS_
     004D 0C03                      1- 2818     	BTRSC	STATUS,0
     004E 058A                      1- 2819     	INCR	PCHBUF,F
     004F 0082                      1- 2820     	MOVAR	PCL
     0050                           1- 2821     _00387_DS_:
                                    1- 2822     	MGOTO	_00336_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2823     	MGOTO	_00344_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2824     	MGOTO	_00343_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2825     	MGOTO	_00342_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2826     	MGOTO	_00341_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2827     	MGOTO	_00340_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2828     	MGOTO	_00340_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2829     	MGOTO	_00340_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2830     	MGOTO	_00340_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 2831     _00336_DS_:
                                    1- 2832     	.line	405, "main.c"; 	LedInput();
                                    1- 2833     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2834     	.line	406, "main.c"; 	break;
                                    1- 2835     	MGOTO	_00346_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 2836     _00340_DS_:
                                    1- 2837     	.line	411, "main.c"; 	LED5ON();
                                    1- 2838     	MCALL	_LED5ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 2839     _00341_DS_:
                                    1- 2840     	.line	413, "main.c"; 	LED4ON();
                                    1- 2841     	MCALL	_LED4ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 2842     _00342_DS_:
                                    1- 2843     	.line	415, "main.c"; 	LED3ON();
                                    1- 2844     	MCALL	_LED3ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 2845     _00343_DS_:
                                    1- 2846     	.line	417, "main.c"; 	LED2ON();
                                    1- 2847     	MCALL	_LED2ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 2848     _00344_DS_:
                                    1- 2849     	.line	419, "main.c"; 	LED1ON();
                                    1- 2850     	MCALL	_LED1ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 2851     _00346_DS_:
                                    1- 2852     	.line	422, "main.c"; 	}
                                    1- 2853     	RETURN	
     0060 0010                      3-   40 m1      ret
                                    1- 2854     ; exit point of _ledShow
                                    1- 2856     ;***
                                    1- 2857     ;  pBlock Stats: dbName = C
                                    1- 2858     ;***
                                    1- 2859     ;has an exit
                                    1- 2860     ;functions called:
                                    1- 2861     ;   _LedInput
                                    1- 2862     ;   _LedInput
                                    1- 2863     ;; Starting pCode block
                                    1- 2864     .segment "code"; module=main, function=_initSys
     0000                           1- 2866     _initSys:
                                    1- 2867     ; 2 exit points
                                    1- 2868     	.line	339, "main.c"; 	DISI();
     0000 0013                      1- 2869     	DISI
                                    1- 2870     	.line	340, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA6_Input | C_PA2_Input | C_PA1_Input | C_PA0_Input;
     0001 21F7                      1- 2871     	MOVIA	0xf7
     0002 000r                      1- 2872     	IOST	_IOSTA
                                    1- 2873     	.line	341, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2874     	CLRA	
     0004 000r                      1- 2875     	IOST	_IOSTB
                                    1- 2876     	.line	342, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2877     	CLRR	_PORTB
                                    1- 2878     	.line	343, "main.c"; 	PORTA = 0x00;
                                    1- 2879     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2880     	CLRR	_PORTA
                                    1- 2881     	.line	344, "main.c"; 	LedInput();
                                    1- 2882     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2883     	.line	345, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2884     	MOVIA	0x7f
     000A 000r                      1- 2885     	IOST	_APHCON
                                    1- 2886     	.line	346, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 2887     	MOVIA	0xff
     000C 00rr                      1- 2888     	MOVAR	_BPHCON
                                    1- 2889     	.line	347, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2890     	MOVAR	_ABPLCON
                                    1- 2891     	.line	349, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 2892     	MOVIA	0x01
     000F 00rr                      1- 2893     	MOVAR	_INTE
                                    1- 2894     	.line	351, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2895     	CLRA	
     0011 000r                      1- 2896     	IOST	_PCON1
                                    1- 2897     	.line	353, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2898     	MOVIA	0x37
     0013 00rr                      1- 2899     	MOVAR	_TMR0
                                    1- 2900     	.line	354, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2901     	CLRA	
     0015 0003                      1- 2902     	T0MD	
                                    1- 2903     	.line	356, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2904     	MOVIA	0x01
     0017 000r                      1- 2905     	IOST	_PCON1
                                    1- 2906     	.line	359, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2907     	MOVIA	0x98
     0019 00rr                      1- 2908     	MOVAR	_PCON
                                    1- 2909     	.line	362, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2910     	MOVIA	0x01
     001B 000r                      1- 2911     	IOST	_PCON1
                                    1- 2912     	.line	363, "main.c"; 	ENI();
     001C 0004                      1- 2913     	ENI
                                    1- 2914     	.line	364, "main.c"; 	}
                                    1- 2915     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2916     ; exit point of _initSys
                                    1- 2918     ;***
                                    1- 2919     ;  pBlock Stats: dbName = C
                                    1- 2920     ;***
                                    1- 2921     ;has an exit
                                    1- 2922     ;functions called:
                                    1- 2923     ;   _pwmStop
                                    1- 2924     ;   _pwmStop
                                    1- 2925     ;; Starting pCode block
                                    1- 2926     .segment "code"; module=main, function=_powerOff
     0000                           1- 2928     _powerOff:
                                    1- 2929     ; 2 exit points
                                    1- 2930     	.line	330, "main.c"; 	workStep = 0;
                                    1- 2931     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2932     	CLRR	_workStep
                                    1- 2933     	.line	331, "main.c"; 	pwmStop();
                                    1- 2934     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2935     	.line	333, "main.c"; 	}
                                    1- 2936     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2937     ; exit point of _powerOff
                                    1- 2939     ;***
                                    1- 2940     ;  pBlock Stats: dbName = C
                                    1- 2941     ;***
                                    1- 2942     ;has an exit
                                    1- 2943     ;functions called:
                                    1- 2944     ;   _keyRead
                                    1- 2945     ;   _pwmInit
                                    1- 2946     ;   _powerOff
                                    1- 2947     ;   _pwmInit
                                    1- 2948     ;   _keyRead
                                    1- 2949     ;   _pwmInit
                                    1- 2950     ;   _powerOff
                                    1- 2951     ;   _pwmInit
                                    1- 2952     ;1 compiler assigned register :
                                    1- 2953     ;   r0x105B
                                    1- 2954     ;; Starting pCode block
                                    1- 2955     .segment "code"; module=main, function=_keyCtr
                                    1- 2957     ;local variable name mapping:
     0000                           1- 2959     _keyCtr:
                                    1- 2960     ; 2 exit points
                                    1- 2961     	.line	262, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 2962     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2963     	COMR	_PORTA,W
                                    1- 2964     	BANKSEL	r0x105B
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2965     	MOVAR	r0x105B
     0004 2180                      1- 2966     	MOVIA	0x80
     0005 10rr                      1- 2967     	ANDAR	r0x105B,F
     0006 01rr                      1- 2968     	MOVR	r0x105B,W
                                    1- 2969     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2970     	BANKSEL	r0x105B
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2971     	MOVAR	r0x105B
                                    1- 2972     	.line	263, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2973     	XORIA	0x01
     000B 0903                      1- 2974     	BTRSS	STATUS,2
                                    1- 2975     	MGOTO	_00300_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2976     	.line	265, "main.c"; 	count500ms = 0;
                                    1- 2977     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2978     	CLRR	_count500ms
                                    1- 2979     	.line	266, "main.c"; 	ledLightTime = 0;
                                    1- 2980     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2981     	CLRR	_ledLightTime
                                    1- 2982     	.line	267, "main.c"; 	if(workStep == 0)
                                    1- 2983     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 2984     	MOVR	_workStep,W
     0013 0903                      1- 2985     	BTRSS	STATUS,2
                                    1- 2986     	MGOTO	_00269_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2987     	.line	269, "main.c"; 	count1s = 0;
                                    1- 2988     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 2989     	CLRR	_count1s
                                    1- 2990     	.line	270, "main.c"; 	ledLightTime = 3;
     0017 2103                      1- 2991     	MOVIA	0x03
                                    1- 2992     	BANKSEL	_ledLightTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 2993     	MOVAR	_ledLightTime
                                    1- 2994     	.line	271, "main.c"; 	prePwStep = 0;
                                    1- 2995     	BANKSEL	_prePwStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 2996     	CLRR	_prePwStep
                                    1- 2997     	.line	272, "main.c"; 	return;
                                    1- 2998     	MGOTO	_00302_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1- 2999     _00269_DS_:
                                    1- 3000     	.line	274, "main.c"; 	ledTime = 0;
                                    1- 3001     	BANKSEL	_ledTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 3002     	CLRR	_ledTime
                                    1- 3003     	.line	275, "main.c"; 	if(++workStep > 5)
                                    1- 3004     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 3005     	INCR	_workStep,F
                                    1- 3006     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3007     ;;unsigned compare: left >= lit (0x6=6), size=1
     0021 2106                      1- 3008     	MOVIA	0x06
     0022 04rr                      1- 3009     	SUBAR	_workStep,W
     0023 0803                      1- 3010     	BTRSS	STATUS,0
                                    1- 3011     	MGOTO	_00271_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3012     	.line	276, "main.c"; 	workStep = 1;
     0025 2101                      1- 3013     	MOVIA	0x01
     0026 00rr                      1- 3014     	MOVAR	_workStep
     0027                           1- 3015     _00271_DS_:
                                    1- 3016     	.line	277, "main.c"; 	if(pwStep == 0)
                                    1- 3017     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3018     	MOVR	_pwStep,W
     0029 0903                      1- 3019     	BTRSS	STATUS,2
                                    1- 3020     	MGOTO	_00273_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3021     	.line	278, "main.c"; 	shanshuoTime = 10;
     002B 210A                      1- 3022     	MOVIA	0x0a
                                    1- 3023     	BANKSEL	_shanshuoTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 3024     	MOVAR	_shanshuoTime
     002E                           1- 3025     _00273_DS_:
                                    1- 3026     	.line	279, "main.c"; 	if(workStep == 1)
                                    1- 3027     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 3028     	MOVR	_workStep,W
     0030 2401                      1- 3029     	XORIA	0x01
     0031 0903                      1- 3030     	BTRSS	STATUS,2
                                    1- 3031     	MGOTO	_00286_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3032     	.line	281, "main.c"; 	maxDuty = 45;
     0033 212D                      1- 3033     	MOVIA	0x2d
                                    1- 3034     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 3035     	MOVAR	_maxDuty
                                    1- 3036     	.line	282, "main.c"; 	ledLightTime = 0;
                                    1- 3037     	BANKSEL	_ledLightTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 3038     	CLRR	_ledLightTime
                                    1- 3039     	MGOTO	_00287_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 3040     _00286_DS_:
                                    1- 3041     	.line	284, "main.c"; 	else if(workStep == 2)
                                    1- 3042     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 3043     	MOVR	_workStep,W
     003B 2402                      1- 3044     	XORIA	0x02
     003C 0903                      1- 3045     	BTRSS	STATUS,2
                                    1- 3046     	MGOTO	_00283_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3047     	.line	285, "main.c"; 	maxDuty = 49;
     003E 2131                      1- 3048     	MOVIA	0x31
                                    1- 3049     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 3050     	MOVAR	_maxDuty
                                    1- 3051     	MGOTO	_00287_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 3052     _00283_DS_:
                                    1- 3053     	.line	286, "main.c"; 	else if(workStep == 3)
                                    1- 3054     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 3055     	MOVR	_workStep,W
     0044 2403                      1- 3056     	XORIA	0x03
     0045 0903                      1- 3057     	BTRSS	STATUS,2
                                    1- 3058     	MGOTO	_00280_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3059     	.line	287, "main.c"; 	maxDuty = 53;
     0047 2135                      1- 3060     	MOVIA	0x35
                                    1- 3061     	BANKSEL	_maxDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 3062     	MOVAR	_maxDuty
                                    1- 3063     	MGOTO	_00287_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 3064     _00280_DS_:
                                    1- 3065     	.line	288, "main.c"; 	else if(workStep == 4)
                                    1- 3066     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3067     	MOVR	_workStep,W
     004D 2404                      1- 3068     	XORIA	0x04
     004E 0903                      1- 3069     	BTRSS	STATUS,2
                                    1- 3070     	MGOTO	_00277_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3071     	.line	289, "main.c"; 	maxDuty = 57;
     0050 2139                      1- 3072     	MOVIA	0x39
                                    1- 3073     	BANKSEL	_maxDuty
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 3074     	MOVAR	_maxDuty
                                    1- 3075     	MGOTO	_00287_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 3076     _00277_DS_:
                                    1- 3077     	.line	290, "main.c"; 	else if(workStep == 5)
                                    1- 3078     	BANKSEL	_workStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 3079     	MOVR	_workStep,W
     0056 2405                      1- 3080     	XORIA	0x05
     0057 0903                      1- 3081     	BTRSS	STATUS,2
                                    1- 3082     	MGOTO	_00287_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3083     	.line	291, "main.c"; 	maxDuty = 61;
     0059 213D                      1- 3084     	MOVIA	0x3d
                                    1- 3085     	BANKSEL	_maxDuty
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 3086     	MOVAR	_maxDuty
     005C                           1- 3087     _00287_DS_:
                                    1- 3088     	.line	292, "main.c"; 	if(workStep > 0)
                                    1- 3089     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 3090     	MOVR	_workStep,W
     005E 0D03                      1- 3091     	BTRSC	STATUS,2
                                    1- 3092     	MGOTO	_00289_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3093     	.line	294, "main.c"; 	PWM1DUTY = maxDuty;
                                    1- 3094     	BANKSEL	_maxDuty
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 3095     	MOVR	_maxDuty,W
     0062 00rr                      1- 3096     	SFUN	_PWM1DUTY
                                    1- 3097     	.line	295, "main.c"; 	pwmInit();
                                    1- 3098     	MCALL	_pwmInit
     0063 2rrr                      3-   66 m1      LCALL rom_address
     0064                           1- 3099     _00289_DS_:
                                    1- 3100     	.line	297, "main.c"; 	ledStep = workStep;
                                    1- 3101     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 3102     	MOVR	_workStep,W
                                    1- 3103     	BANKSEL	_ledStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 3104     	MOVAR	_ledStep
                                    1- 3105     	MGOTO	_00302_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069                           1- 3106     _00300_DS_:
                                    1- 3107     	.line	299, "main.c"; 	else if(kclick == 2)
                                    1- 3108     	BANKSEL	r0x105B
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3109     	MOVR	r0x105B,W
     006B 2402                      1- 3110     	XORIA	0x02
     006C 0903                      1- 3111     	BTRSS	STATUS,2
                                    1- 3112     	MGOTO	_00302_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3113     	.line	301, "main.c"; 	if(workStep > 0)
                                    1- 3114     	BANKSEL	_workStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 3115     	MOVR	_workStep,W
     0070 0D03                      1- 3116     	BTRSC	STATUS,2
                                    1- 3117     	MGOTO	_00295_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3118     	.line	303, "main.c"; 	powerOff();
                                    1- 3119     	MCALL	_powerOff
     0072 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3120     	MGOTO	_00296_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074                           1- 3121     _00295_DS_:
                                    1- 3122     	.line	307, "main.c"; 	if(pwStep == 10)
                                    1- 3123     	BANKSEL	_pwStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 3124     	MOVR	_pwStep,W
     0076 240A                      1- 3125     	XORIA	0x0a
     0077 0903                      1- 3126     	BTRSS	STATUS,2
                                    1- 3127     	MGOTO	_00291_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3128     	.line	309, "main.c"; 	sleepTime = 0;
                                    1- 3129     	BANKSEL	_sleepTime
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 02rr                      1- 3130     	CLRR	_sleepTime
     007B 02rr                      1- 3131     	CLRR	(_sleepTime + 1)
                                    1- 3132     	.line	310, "main.c"; 	return;
                                    1- 3133     	MGOTO	_00302_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 3134     _00291_DS_:
                                    1- 3135     	.line	312, "main.c"; 	ledLightTime = 0;
                                    1- 3136     	BANKSEL	_ledLightTime
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1- 3137     	CLRR	_ledLightTime
                                    1- 3138     	.line	313, "main.c"; 	ledStep = 1;
     007F 2101                      1- 3139     	MOVIA	0x01
                                    1- 3140     	BANKSEL	_ledStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 3141     	MOVAR	_ledStep
                                    1- 3142     	.line	314, "main.c"; 	workStep = 1;
                                    1- 3143     	BANKSEL	_workStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 3144     	MOVAR	_workStep
                                    1- 3145     	.line	315, "main.c"; 	PWM1DUTY = 70;
     0084 2146                      1- 3146     	MOVIA	0x46
     0085 00rr                      1- 3147     	SFUN	_PWM1DUTY
                                    1- 3148     	.line	316, "main.c"; 	currentDuty = 70;
                                    1- 3149     	BANKSEL	_currentDuty
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 3150     	MOVAR	_currentDuty
                                    1- 3151     	.line	317, "main.c"; 	maxDuty = 45;
     0088 212D                      1- 3152     	MOVIA	0x2d
                                    1- 3153     	BANKSEL	_maxDuty
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 3154     	MOVAR	_maxDuty
                                    1- 3155     	.line	318, "main.c"; 	pwmInit();
                                    1- 3156     	MCALL	_pwmInit
     008B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3157     	.line	319, "main.c"; 	if(pwStep == 0)
                                    1- 3158     	BANKSEL	_pwStep
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1- 3159     	MOVR	_pwStep,W
     008E 0903                      1- 3160     	BTRSS	STATUS,2
                                    1- 3161     	MGOTO	_00296_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3162     	.line	320, "main.c"; 	shanshuoTime = 10;
     0090 210A                      1- 3163     	MOVIA	0x0a
                                    1- 3164     	BANKSEL	_shanshuoTime
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3165     	MOVAR	_shanshuoTime
     0093                           1- 3166     _00296_DS_:
                                    1- 3167     	.line	323, "main.c"; 	ledStep = workStep;
                                    1- 3168     	BANKSEL	_workStep
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 01rr                      1- 3169     	MOVR	_workStep,W
                                    1- 3170     	BANKSEL	_ledStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 3171     	MOVAR	_ledStep
     0097                           1- 3172     _00302_DS_:
                                    1- 3173     	.line	325, "main.c"; 	}
                                    1- 3174     	RETURN	
     0097 0010                      3-   40 m1      ret
                                    1- 3175     ; exit point of _keyCtr
                                    1- 3178     ;	code size estimation:
                                    1- 3179     ;	 1184+  328 =  1512 instructions ( 3680 byte)
                                    1- 3181     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
