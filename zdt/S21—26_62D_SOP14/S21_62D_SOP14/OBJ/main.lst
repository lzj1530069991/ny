
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN2_Convert
                                    1-  104     	extern	_F_AIN3_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkChrgV
                                    1-  107     	extern	_checkBatAD
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_chrgCtr
                                    1-  111     	extern	_keyRead
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_pwmStop
                                    1-  114     	extern	_pwmInit
                                    1-  115     	extern	_pwm1Stop
                                    1-  116     	extern	_pwm1Init
                                    1-  117     	extern	_LED6ON
                                    1-  118     	extern	_LED5ON
                                    1-  119     	extern	_LED4ON
                                    1-  120     	extern	_LED3ON
                                    1-  121     	extern	_LED2ON
                                    1-  122     	extern	_LED1ON
                                    1-  123     	extern	_LedInput
                                    1-  124     	extern	_ledShow
                                    1-  125     	extern	_initSys
                                    1-  126     	extern	_powerOff
                                    1-  127     	extern	_keyCtr
                                    1-  128     	extern	_isr
                                    1-  129     	extern	_main
                                    1-  130     	extern	_Status
                                    1-  131     	extern	_duty
                                    1-  132     	extern	_intCount
                                    1-  133     	extern	_count500ms
                                    1-  134     	extern	_keyCount
                                    1-  135     	extern	_workStep
                                    1-  136     	extern	_ledStep
                                    1-  137     	extern	_maxDuty
                                    1-  138     	extern	_pwStep
                                    1-  139     	extern	_R_AIN4_DATA
                                    1-  140     	extern	_R_AIN4_DATA_LB
                                    1-  141     	extern	_R_AIN3_DATA
                                    1-  142     	extern	_R_AIN3_DATA_LB
                                    1-  143     	extern	_R_AIN2_DATA
                                    1-  144     	extern	_R_AIN2_DATA_LB
                                    1-  145     	extern	_chrgTime
                                    1-  146     	extern	_startStep
                                    1-  147     	extern	_sleepTime
                                    1-  148     	extern	_count200ms
                                    1-  149     	extern	_count1s
                                    1-  150     	extern	_count900s
                                    1-  151     	extern	_lowBatTime
                                    1-  152     	extern	_ledTime
                                    1-  153     	extern	_overCount
                                    1-  154     	extern	_chrgCount
                                    1-  155     	extern	_ledLightTime
                                    1-  156     	extern	_currentDuty
                                    1-  157     	extern	_fullCount
                                    1-  158     	extern	_shanshuoTime
                                    1-  159     	extern	_firstTime
                                    1-  160     	extern	_tempDuty
                                    1-  161     	extern	_lowCount
                                    1-  162     	extern	_cDuty
                                    1-  163     	extern	_tempLedStep
                                    1-  164     	extern	_count5S
                                    1-  165     	extern	_ledDeadTime
                                    1-  166     	extern	_lockLedStep
                                    1-  167     	extern	_closeCount
                                    1-  168     	extern	_chrgStep
                                    1-  169     	extern	_prePwStep
                                    1-  170     	extern	_currentChrgPWMDuty
                                    1-  171     	extern	_chrgDutyTime
                                    1-  172     	extern	_lockLedTime
                                    1-  173     	extern	_debug
                                    1-  175     	extern PSAVE
                                    1-  176     	extern SSAVE
                                    1-  177     	extern WSAVE
                                    1-  178     	extern STK04
                                    1-  179     	extern STK03
                                    1-  180     	extern STK02
                                    1-  181     	extern STK01
                                    1-  182     	extern STK00
                                    1-  184     .segment "uninit", 0x20000040
 20000040                           1-  185     PSAVE:
                                    1-  186     	.res 1
 20000041                           1-  187     SSAVE:
                                    1-  188     	.res 1
 20000042                           1-  189     WSAVE:
                                    1-  190     	.res 1
 20000043                           1-  191     STK04:
                                    1-  192     	.res 1
 20000044                           1-  193     STK03:
                                    1-  194     	.res 1
 20000045                           1-  195     STK02:
                                    1-  196     	.res 1
 20000046                           1-  197     STK01:
                                    1-  198     	.res 1
 20000047                           1-  199     STK00:
                                    1-  200     	.res 1
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ; global definitions
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     .segment "uninit"
     0000                           1-  206     _R_AIN4_DATA:
                                    1-  207     	.res	2
                                    1-  210     .segment "uninit"
     0000                           1-  211     _R_AIN4_DATA_LB:
                                    1-  212     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     _R_AIN3_DATA:
                                    1-  217     	.res	2
                                    1-  220     .segment "uninit"
     0000                           1-  221     _R_AIN3_DATA_LB:
                                    1-  222     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     _R_AIN2_DATA:
                                    1-  227     	.res	2
                                    1-  230     .segment "uninit"
     0000                           1-  231     _R_AIN2_DATA_LB:
                                    1-  232     	.res	1
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ; absolute symbol definitions
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ; compiler-defined variables
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x105E:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1056:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x105D:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x105C:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x105B:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x105A:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1059:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1058:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x104F:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1057:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1055:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1050:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1051:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1052:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1054:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1033:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1034:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x104B:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x104E:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1049:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x104A:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1041:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1042:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1043:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1046:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x103B:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x103C:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x103D:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1040:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x1035:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x1036:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x1037:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x103A:
                                    1-  339     	.res	1
                                    1-  340     ;--------------------------------------------------------
                                    1-  341     ; initialized data
                                    1-  342     ;--------------------------------------------------------
                                    1-  344     .segment "idata"
     0000                           1-  345     _Status:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _duty:
     0000 0000 0000                 1-  352     	dw	0x00, 0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _intCount:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _count500ms:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _keyCount:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _workStep:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _ledStep:
     0000 0000                      1-  382     	dw	0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _maxDuty:
     0000 0000                      1-  388     	dw	0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _pwStep:
     0000 0000                      1-  394     	dw	0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _chrgTime:
     0000 0000 0000                 1-  400     	dw	0x00, 0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _startStep:
     0000 0000                      1-  406     	dw	0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _sleepTime:
     0000 0000 0000                 1-  412     	dw	0x00, 0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _count200ms:
     0000 0000                      1-  418     	dw	0x00
                                    1-  422     .segment "idata"
     0000                           1-  423     _count1s:
     0000 0000                      1-  424     	dw	0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _count900s:
     0000 0000 0000                 1-  430     	dw	0x00, 0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _lowBatTime:
     0000 0000                      1-  436     	dw	0x00
                                    1-  440     .segment "idata"
     0000                           1-  441     _ledTime:
     0000 0000                      1-  442     	dw	0x00
                                    1-  446     .segment "idata"
     0000                           1-  447     _overCount:
     0000 0000                      1-  448     	dw	0x00
                                    1-  452     .segment "idata"
     0000                           1-  453     _chrgCount:
     0000 0000                      1-  454     	dw	0x00
                                    1-  458     .segment "idata"
     0000                           1-  459     _ledLightTime:
     0000 0000                      1-  460     	dw	0x00
                                    1-  464     .segment "idata"
     0000                           1-  465     _currentDuty:
     0000 0000                      1-  466     	dw	0x00
                                    1-  470     .segment "idata"
     0000                           1-  471     _fullCount:
     0000 0000 0000                 1-  472     	dw	0x00, 0x00
                                    1-  476     .segment "idata"
     0000                           1-  477     _shanshuoTime:
     0000 0000                      1-  478     	dw	0x00
                                    1-  482     .segment "idata"
     0000                           1-  483     _firstTime:
     0000 0000                      1-  484     	dw	0x00
                                    1-  488     .segment "idata"
     0000                           1-  489     _tempDuty:
     0000 0000                      1-  490     	dw	0x00
                                    1-  494     .segment "idata"
     0000                           1-  495     _lowCount:
     0000 0000                      1-  496     	dw	0x00
                                    1-  500     .segment "idata"
     0000                           1-  501     _cDuty:
     0000 0000                      1-  502     	dw	0x00
                                    1-  506     .segment "idata"
     0000                           1-  507     _tempLedStep:
     0000 0000                      1-  508     	dw	0x00
                                    1-  512     .segment "idata"
     0000                           1-  513     _count5S:
     0000 0000 0000                 1-  514     	dw	0x00, 0x00
                                    1-  518     .segment "idata"
     0000                           1-  519     _ledDeadTime:
     0000 0000                      1-  520     	dw	0x00
                                    1-  524     .segment "idata"
     0000                           1-  525     _lockLedStep:
     0000 0000                      1-  526     	dw	0x00
                                    1-  530     .segment "idata"
     0000                           1-  531     _closeCount:
     0000 0000 0000                 1-  532     	dw	0x00, 0x00
                                    1-  536     .segment "idata"
     0000                           1-  537     _chrgStep:
     0000 0000                      1-  538     	dw	0x00
                                    1-  542     .segment "idata"
     0000                           1-  543     _prePwStep:
     0000 0000                      1-  544     	dw	0x00
                                    1-  548     .segment "idata"
     0000                           1-  549     _currentChrgPWMDuty:
     0000 0000                      1-  550     	dw	0x00
                                    1-  554     .segment "idata"
     0000                           1-  555     _chrgDutyTime:
     0000 0000                      1-  556     	dw	0x00
                                    1-  560     .segment "idata"
     0000                           1-  561     _lockLedTime:
     0000 0000                      1-  562     	dw	0x00
                                    1-  566     .segment "idata"
     0000                           1-  567     _debug:
     0000 0000                      1-  568     	dw	0x00
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ; overlayable items in internal ram 
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ;	udata_ovr
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ; reset vector 
                                    1-  577     ;--------------------------------------------------------
                                    1-  578     ORG	0x0000
     0000 3rrr                      1-  579     	LGOTO	__nyc_ny8_startup
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ; interrupt and initialization code
                                    1-  582     ;--------------------------------------------------------
                                    1-  583     ORG 0x0008
                                    1-  584     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  586     .segment "code"
     0000                           1-  587     __sdcc_interrupt:
                                    1-  588     ;***
                                    1-  589     ;  pBlock Stats: dbName = I
                                    1-  590     ;***
                                    1-  591     ;2 compiler assigned registers:
                                    1-  592     ;   STK00
                                    1-  593     ;   STK01
                                    1-  594     ;; Starting pCode block
     0000                           1-  595     _isr:
                                    1-  596     ; 0 exit points
                                    1-  597     	.line	129, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  598     	MOVAR	WSAVE
     0001 1503                      1-  599     	SWAPR	STATUS,W
     0002 0283                      1-  600     	CLRR	STATUS
     0003 00rr                      1-  601     	MOVAR	SSAVE
     0004 010A                      1-  602     	MOVR	PCHBUF,W
     0005 028A                      1-  603     	CLRR	PCHBUF
     0006 00rr                      1-  604     	MOVAR	PSAVE
     0007 0104                      1-  605     	MOVR	FSR,W
                                    1-  606     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  607     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  608     	MOVR	STK00,W
                                    1-  609     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  610     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  611     	MOVR	STK01,W
                                    1-  612     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  613     	MOVAR	___sdcc_saved_stk01
                                    1-  614     	.line	131, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  615     	BTRSS	_INTFbits,0
                                    1-  616     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  617     	.line	133, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  618     	MOVIA	0x37
     0013 03rr                      1-  619     	ADDAR	_TMR0,F
                                    1-  620     	.line	135, "main.c"; 	if(++intCount >= 100)
                                    1-  621     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  622     	INCR	_intCount,F
                                    1-  623     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  624     	MOVIA	0x64
     0017 04rr                      1-  625     	SUBAR	_intCount,W
     0018 0803                      1-  626     	BTRSS	STATUS,0
                                    1-  627     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  628     	.line	137, "main.c"; 	IntFlag = 1;
                                    1-  629     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  630     	BSR	_Status,0
                                    1-  631     	.line	138, "main.c"; 	intCount = 0;
                                    1-  632     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  633     	CLRR	_intCount
                                    1-  634     	.line	139, "main.c"; 	if(++count500ms >= 40)
                                    1-  635     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  636     	INCR	_count500ms,F
                                    1-  637     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  638     	MOVIA	0x28
     0021 04rr                      1-  639     	SUBAR	_count500ms,W
     0022 0C03                      1-  640     	BTRSC	STATUS,0
                                    1-  641     	.line	140, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  642     	CLRR	_count500ms
                                    1-  643     	.line	141, "main.c"; 	if(++count200ms >= 20)
                                    1-  644     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  645     	INCR	_count200ms,F
     0026 2114                      1-  646     	MOVIA	0x14
     0027 04rr                      1-  647     	SUBAR	_count200ms,W
     0028 0803                      1-  648     	BTRSS	STATUS,0
                                    1-  649     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  650     	.line	143, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  651     	CLRR	_count200ms
                                    1-  652     	.line	144, "main.c"; 	if(ledDeadTime > 0)
                                    1-  653     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  654     	MOVR	_ledDeadTime,W
     002D 0903                      1-  655     	BTRSS	STATUS,2
                                    1-  656     	.line	145, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  657     	DECR	_ledDeadTime,F
     002F                           1-  658     _00110_DS_:
                                    1-  659     	.line	147, "main.c"; 	if(++count1s >= 100)
                                    1-  660     	BANKSEL	_count1s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  661     	INCR	_count1s,F
     0031 2164                      1-  662     	MOVIA	0x64
     0032 04rr                      1-  663     	SUBAR	_count1s,W
     0033 0803                      1-  664     	BTRSS	STATUS,0
                                    1-  665     	MGOTO	_00126_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  666     	.line	149, "main.c"; 	count1s = 0;
     0035 02rr                      1-  667     	CLRR	_count1s
                                    1-  668     	.line	150, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  669     	BANKSEL	_Status
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 09rr                      1-  670     	BTRSS	_Status,3
                                    1-  671     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  673     	MOVR	_pwStep,W
     003B 2406                      1-  674     	XORIA	0x06
     003C 0903                      1-  675     	BTRSS	STATUS,2
                                    1-  676     	MGOTO	_00112_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  677     	.line	152, "main.c"; 	++chrgTime;
                                    1-  678     	BANKSEL	_chrgTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  679     	INCR	_chrgTime,F
     0040 0D03                      1-  680     	BTRSC	STATUS,2
     0041 05rr                      1-  681     	INCR	(_chrgTime + 1),F
     0042                           1-  682     _00112_DS_:
                                    1-  683     	.line	155, "main.c"; 	if(ledLightTime > 0)
                                    1-  684     	BANKSEL	_ledLightTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  685     	MOVR	_ledLightTime,W
     0044 0903                      1-  686     	BTRSS	STATUS,2
                                    1-  687     	.line	156, "main.c"; 	--ledLightTime;
     0045 06rr                      1-  688     	DECR	_ledLightTime,F
                                    1-  689     	.line	157, "main.c"; 	if(shanshuoTime > 0)
                                    1-  690     	BANKSEL	_shanshuoTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  691     	MOVR	_shanshuoTime,W
     0048 0903                      1-  692     	BTRSS	STATUS,2
                                    1-  693     	.line	158, "main.c"; 	--shanshuoTime;
     0049 06rr                      1-  694     	DECR	_shanshuoTime,F
                                    1-  695     	.line	159, "main.c"; 	if(workStep)
                                    1-  696     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  697     	MOVR	_workStep,W
     004C 0D03                      1-  698     	BTRSC	STATUS,2
                                    1-  699     	MGOTO	_00119_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  700     	.line	161, "main.c"; 	++count900s;
                                    1-  701     	BANKSEL	_count900s
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1-  702     	INCR	_count900s,F
     0050 0D03                      1-  703     	BTRSC	STATUS,2
     0051 05rr                      1-  704     	INCR	(_count900s + 1),F
                                    1-  705     	MGOTO	_00126_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1-  706     _00119_DS_:
                                    1-  707     	.line	165, "main.c"; 	count900s = 0;
                                    1-  708     	BANKSEL	_count900s
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  709     	CLRR	_count900s
     0055 02rr                      1-  710     	CLRR	(_count900s + 1)
     0056                           1-  711     _00126_DS_:
                                    1-  712     	.line	174, "main.c"; 	if(INTFbits.PABIF)
     0056 08rr                      1-  713     	BTRSS	_INTFbits,1
                                    1-  714     	MGOTO	_00128_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  715     	.line	176, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0058 21FD                      1-  716     	MOVIA	0xfd
     0059 00rr                      1-  717     	MOVAR	_INTF
     005A                           1-  718     _00128_DS_:
                                    1-  719     	.line	179, "main.c"; 	INTF = 0;
     005A 02rr                      1-  720     	CLRR	_INTF
                                    1-  721     	.line	181, "main.c"; 	}
                                    1-  722     	BANKSEL	___sdcc_saved_stk01
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  723     	MOVR	___sdcc_saved_stk01,W
     005D 00rr                      1-  724     	MOVAR	STK01
                                    1-  725     	BANKSEL	___sdcc_saved_stk00
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  726     	MOVR	___sdcc_saved_stk00,W
     0060 00rr                      1-  727     	MOVAR	STK00
                                    1-  728     	BANKSEL	___sdcc_saved_fsr
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  729     	MOVR	___sdcc_saved_fsr,W
     0063 0084                      1-  730     	MOVAR	FSR
     0064 01rr                      1-  731     	MOVR	PSAVE,W
     0065 008A                      1-  732     	MOVAR	PCHBUF
     0066 0283                      1-  733     	CLRR	STATUS
     0067 15rr                      1-  734     	SWAPR	SSAVE,W
     0068 0083                      1-  735     	MOVAR	STATUS
     0069 15rr                      1-  736     	SWAPR	WSAVE,F
     006A 15rr                      1-  737     	SWAPR	WSAVE,W
     006B                           1-  738     END_OF_INTERRUPT:
     006B 0011                      1-  739     	RETIE	
                                    1-  741     ;--------------------------------------------------------
                                    1-  742     ; code
                                    1-  743     ;--------------------------------------------------------
                                    1-  744     ;***
                                    1-  745     ;  pBlock Stats: dbName = M
                                    1-  746     ;***
                                    1-  747     ;has an exit
                                    1-  748     ;functions called:
                                    1-  749     ;   _initSys
                                    1-  750     ;   _initAD
                                    1-  751     ;   _ledShow
                                    1-  752     ;   _pwmStop
                                    1-  753     ;   _powerOff
                                    1-  754     ;   _keyCtr
                                    1-  755     ;   _checkBatAD
                                    1-  756     ;   _chrgCtr
                                    1-  757     ;   _gotoSleep
                                    1-  758     ;   _powerOff
                                    1-  759     ;   _initSys
                                    1-  760     ;   _initAD
                                    1-  761     ;   _ledShow
                                    1-  762     ;   _pwmStop
                                    1-  763     ;   _powerOff
                                    1-  764     ;   _keyCtr
                                    1-  765     ;   _checkBatAD
                                    1-  766     ;   _chrgCtr
                                    1-  767     ;   _gotoSleep
                                    1-  768     ;   _powerOff
                                    1-  769     ;; Starting pCode block
                                    1-  770     .segment "code"; module=main, function=_main
     0000                           1-  772     _main:
                                    1-  773     ; 2 exit points
                                    1-  774     	.line	185, "main.c"; 	initSys();
                                    1-  775     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  776     	.line	186, "main.c"; 	initAD();
                                    1-  777     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  778     _00172_DS_:
                                    1-  779     	.line	189, "main.c"; 	CLRWDT();
     0002 0002                      1-  780     	clrwdt
                                    1-  781     	.line	190, "main.c"; 	ledShow();
                                    1-  782     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  783     	.line	191, "main.c"; 	if(workStep > 0 && tempDuty >= 77)
                                    1-  784     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  785     	MOVR	_workStep,W
     0006 0D03                      1-  786     	BTRSC	STATUS,2
                                    1-  787     	MGOTO	_00139_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  788     ;;unsigned compare: left < lit (0x4D=77), size=1
     0008 214D                      1-  789     	MOVIA	0x4d
                                    1-  790     	BANKSEL	_tempDuty
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  791     	SUBAR	_tempDuty,W
     000B 0803                      1-  792     	BTRSS	STATUS,0
                                    1-  793     	MGOTO	_00139_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  794     	.line	193, "main.c"; 	if(cDuty > tempDuty)
                                    1-  795     	BANKSEL	_cDuty
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  796     	MOVR	_cDuty,W
                                    1-  797     	BANKSEL	_tempDuty
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1-  798     	SUBAR	_tempDuty,W
     0011 0C03                      1-  799     	BTRSC	STATUS,0
                                    1-  800     	MGOTO	_00136_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  801     	.line	195, "main.c"; 	cDuty--;
                                    1-  802     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 06rr                      1-  803     	DECR	_cDuty,F
                                    1-  804     	.line	196, "main.c"; 	PWM2DUTY = cDuty;
     0015 01rr                      1-  805     	MOVR	_cDuty,W
     0016 00rr                      1-  806     	SFUN	_PWM2DUTY
                                    1-  807     	MGOTO	_00139_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1-  808     _00136_DS_:
                                    1-  809     	.line	198, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  810     	BANKSEL	_tempDuty
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1-  811     	MOVR	_tempDuty,W
                                    1-  812     	BANKSEL	_cDuty
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 04rr                      1-  813     	SUBAR	_cDuty,W
     001C 0C03                      1-  814     	BTRSC	STATUS,0
                                    1-  815     	MGOTO	_00139_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  816     	.line	200, "main.c"; 	cDuty++;
     001E 05rr                      1-  817     	INCR	_cDuty,F
                                    1-  818     	.line	201, "main.c"; 	PWM2DUTY = cDuty;
     001F 01rr                      1-  819     	MOVR	_cDuty,W
     0020 00rr                      1-  820     	SFUN	_PWM2DUTY
     0021                           1-  821     _00139_DS_:
                                    1-  822     	.line	204, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  823     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  824     	MOVR	_workStep,W
     0023 0D03                      1-  825     	BTRSC	STATUS,2
                                    1-  826     	MGOTO	_00142_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  827     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  828     	MOVR	_currentDuty,W
                                    1-  829     	BANKSEL	_maxDuty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  830     	SUBAR	_maxDuty,W
     0029 0C03                      1-  831     	BTRSC	STATUS,0
                                    1-  832     	MGOTO	_00142_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  833     	.line	206, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  834     	BANKSEL	_currentDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 06rr                      1-  835     	DECR	_currentDuty,F
                                    1-  836     	.line	207, "main.c"; 	PWM2DUTY = currentDuty;
     002D 01rr                      1-  837     	MOVR	_currentDuty,W
     002E 00rr                      1-  838     	SFUN	_PWM2DUTY
                                    1-  839     	.line	208, "main.c"; 	cDuty = currentDuty;
     002F 01rr                      1-  840     	MOVR	_currentDuty,W
                                    1-  841     	BANKSEL	_cDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  842     	MOVAR	_cDuty
     0032                           1-  843     _00142_DS_:
                                    1-  844     	.line	210, "main.c"; 	if(!IntFlag)
                                    1-  845     	BANKSEL	_Status
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 08rr                      1-  846     	BTRSS	_Status,0
                                    1-  847     	MGOTO	_00172_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  848     	.line	212, "main.c"; 	IntFlag = 0;
     0035 1Crr                      1-  849     	BCR	_Status,0
                                    1-  850     	.line	214, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  851     	BANKSEL	_shanshuoTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1-  852     	MOVR	_shanshuoTime,W
     0038 0903                      1-  853     	BTRSS	STATUS,2
                                    1-  854     	MGOTO	_00149_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  855     	BANKSEL	_pwStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  856     	MOVR	_pwStep,W
     003C 0903                      1-  857     	BTRSS	STATUS,2
                                    1-  858     	MGOTO	_00149_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  859     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  860     	MOVR	_workStep,W
     0040 0D03                      1-  861     	BTRSC	STATUS,2
                                    1-  862     	MGOTO	_00149_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  863     	.line	216, "main.c"; 	if(++closeCount >= 6000)
                                    1-  864     	BANKSEL	_closeCount
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 05rr                      1-  865     	INCR	_closeCount,F
     0044 0D03                      1-  866     	BTRSC	STATUS,2
     0045 05rr                      1-  867     	INCR	(_closeCount + 1),F
                                    1-  868     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0046 2117                      1-  869     	MOVIA	0x17
     0047 04rr                      1-  870     	SUBAR	(_closeCount + 1),W
     0048 0903                      1-  871     	BTRSS	STATUS,2
                                    1-  872     	MGOTO	_00249_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A 2170                      1-  873     	MOVIA	0x70
     004B 04rr                      1-  874     	SUBAR	_closeCount,W
     004C                           1-  875     _00249_DS_:
     004C 0803                      1-  876     	BTRSS	STATUS,0
                                    1-  877     	MGOTO	_00150_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  878     	.line	218, "main.c"; 	closeCount = 0;
                                    1-  879     	BANKSEL	_closeCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1-  880     	CLRR	_closeCount
     0050 02rr                      1-  881     	CLRR	(_closeCount + 1)
                                    1-  882     	.line	219, "main.c"; 	workStep = 0;
                                    1-  883     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1-  884     	CLRR	_workStep
                                    1-  885     	.line	220, "main.c"; 	ledStep = 0;
                                    1-  886     	BANKSEL	_ledStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  887     	CLRR	_ledStep
                                    1-  888     	.line	221, "main.c"; 	pwmStop();
                                    1-  889     	MCALL	_pwmStop
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  890     	MGOTO	_00150_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1-  891     _00149_DS_:
                                    1-  892     	.line	226, "main.c"; 	closeCount = 0;
                                    1-  893     	BANKSEL	_closeCount
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1-  894     	CLRR	_closeCount
     0059 02rr                      1-  895     	CLRR	(_closeCount + 1)
                                    1-  896     ;;unsigned compare: left < lit (0x5=5), size=1
     005A                           1-  897     _00150_DS_:
                                    1-  898     	.line	229, "main.c"; 	if(overCount >= 5 && workStep > 0)
     005A 2105                      1-  899     	MOVIA	0x05
                                    1-  900     	BANKSEL	_overCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1-  901     	SUBAR	_overCount,W
     005D 0803                      1-  902     	BTRSS	STATUS,0
                                    1-  903     	MGOTO	_00156_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  904     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1-  905     	MOVR	_workStep,W
     0061 0D03                      1-  906     	BTRSC	STATUS,2
                                    1-  907     	MGOTO	_00156_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  908     	.line	231, "main.c"; 	if(++count5S > 500)
                                    1-  909     	BANKSEL	_count5S
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 05rr                      1-  910     	INCR	_count5S,F
     0065 0D03                      1-  911     	BTRSC	STATUS,2
     0066 05rr                      1-  912     	INCR	(_count5S + 1),F
                                    1-  913     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  914     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0067 2101                      1-  915     	MOVIA	0x01
     0068 04rr                      1-  916     	SUBAR	(_count5S + 1),W
     0069 0903                      1-  917     	BTRSS	STATUS,2
                                    1-  918     	MGOTO	_00251_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 21F5                      1-  919     	MOVIA	0xf5
     006C 04rr                      1-  920     	SUBAR	_count5S,W
     006D                           1-  921     _00251_DS_:
     006D 0803                      1-  922     	BTRSS	STATUS,0
                                    1-  923     	MGOTO	_00157_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  924     	.line	233, "main.c"; 	overCount = 0;
                                    1-  925     	BANKSEL	_overCount
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 02rr                      1-  926     	CLRR	_overCount
                                    1-  927     	.line	234, "main.c"; 	count5S = 0;
                                    1-  928     	BANKSEL	_count5S
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1-  929     	CLRR	_count5S
     0073 02rr                      1-  930     	CLRR	(_count5S + 1)
                                    1-  931     	.line	235, "main.c"; 	ledDeadTime = 25;
     0074 2119                      1-  932     	MOVIA	0x19
                                    1-  933     	BANKSEL	_ledDeadTime
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1-  934     	MOVAR	_ledDeadTime
                                    1-  935     	.line	236, "main.c"; 	powerOff();
                                    1-  936     	MCALL	_powerOff
     0077 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  937     	MGOTO	_00157_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1-  938     _00156_DS_:
                                    1-  939     	.line	241, "main.c"; 	count5S = 0;
                                    1-  940     	BANKSEL	_count5S
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 02rr                      1-  941     	CLRR	_count5S
     007B 02rr                      1-  942     	CLRR	(_count5S + 1)
     007C                           1-  943     _00157_DS_:
                                    1-  944     	.line	243, "main.c"; 	if(chrgFlag == 0)
                                    1-  945     	BANKSEL	_Status
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 09rr                      1-  946     	BTRSS	_Status,3
                                    1-  947     	.line	244, "main.c"; 	keyCtr();
                                    1-  948     	MCALL	_keyCtr
     007E 2rrr                      3-   66 m1      LCALL rom_address
     007F                           1-  949     _00160_DS_:
                                    1-  950     	.line	254, "main.c"; 	checkBatAD();
                                    1-  951     	MCALL	_checkBatAD
     007F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  952     	.line	255, "main.c"; 	chrgCtr();
                                    1-  953     	MCALL	_chrgCtr
     0080 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  954     	.line	258, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1-  955     	BANKSEL	_workStep
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1-  956     	MOVR	_workStep,W
     0083 0903                      1-  957     	BTRSS	STATUS,2
                                    1-  958     	MGOTO	_00164_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  959     	BANKSEL	_keyCount
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 01rr                      1-  960     	MOVR	_keyCount,W
     0087 0903                      1-  961     	BTRSS	STATUS,2
                                    1-  962     	MGOTO	_00164_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  963     	BANKSEL	_PORTA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 0Drr                      1-  964     	BTRSC	_PORTA,3
                                    1-  965     	MGOTO	_00164_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  966     	BANKSEL	_ledLightTime
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1-  967     	MOVR	_ledLightTime,W
     008E 0903                      1-  968     	BTRSS	STATUS,2
                                    1-  969     	MGOTO	_00164_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  970     	BANKSEL	_ledDeadTime
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 01rr                      1-  971     	MOVR	_ledDeadTime,W
     0092 0903                      1-  972     	BTRSS	STATUS,2
                                    1-  973     	MGOTO	_00164_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  974     	.line	260, "main.c"; 	if(++sleepTime > 20)
                                    1-  975     	BANKSEL	_sleepTime
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 05rr                      1-  976     	INCR	_sleepTime,F
     0096 0D03                      1-  977     	BTRSC	STATUS,2
     0097 05rr                      1-  978     	INCR	(_sleepTime + 1),F
                                    1-  979     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  980     ;;unsigned compare: left >= lit (0x15=21), size=2
     0098 2100                      1-  981     	MOVIA	0x00
     0099 04rr                      1-  982     	SUBAR	(_sleepTime + 1),W
     009A 0903                      1-  983     	BTRSS	STATUS,2
                                    1-  984     	MGOTO	_00252_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
     009C 2115                      1-  985     	MOVIA	0x15
     009D 04rr                      1-  986     	SUBAR	_sleepTime,W
     009E                           1-  987     _00252_DS_:
     009E 0803                      1-  988     	BTRSS	STATUS,0
                                    1-  989     	MGOTO	_00164_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  990     	.line	262, "main.c"; 	gotoSleep();
                                    1-  991     	MCALL	_gotoSleep
     00A0 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  992     ;;unsigned compare: left < lit (0x384=900), size=2
     00A1                           1-  993     _00164_DS_:
                                    1-  994     	.line	266, "main.c"; 	if(count900s >= 900)
     00A1 2103                      1-  995     	MOVIA	0x03
                                    1-  996     	BANKSEL	_count900s
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 04rr                      1-  997     	SUBAR	(_count900s + 1),W
     00A4 0903                      1-  998     	BTRSS	STATUS,2
                                    1-  999     	MGOTO	_00253_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
     00A6 2184                      1- 1000     	MOVIA	0x84
     00A7 04rr                      1- 1001     	SUBAR	_count900s,W
     00A8                           1- 1002     _00253_DS_:
     00A8 0803                      1- 1003     	BTRSS	STATUS,0
                                    1- 1004     	MGOTO	_00172_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1005     	.line	268, "main.c"; 	powerOff();
                                    1- 1006     	MCALL	_powerOff
     00AA 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1007     	MGOTO	_00172_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1008     	.line	272, "main.c"; 	}
                                    1- 1009     	RETURN	
     00AC 0010                      3-   40 m1      ret
                                    1- 1010     ; exit point of _main
                                    1- 1012     ;***
                                    1- 1013     ;  pBlock Stats: dbName = C
                                    1- 1014     ;***
                                    1- 1015     ;has an exit
                                    1- 1016     ;; Starting pCode block
                                    1- 1017     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1019     _F_wait_eoc:
                                    1- 1020     ; 2 exit points
     0000                           1- 1021     _00986_DS_:
                                    1- 1022     	.line	1066, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1023     	BTRSS	_ADMDbits,5
                                    1- 1024     	MGOTO	_00986_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1025     	.line	1068, "main.c"; 	}
                                    1- 1026     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1027     ; exit point of _F_wait_eoc
                                    1- 1029     ;***
                                    1- 1030     ;  pBlock Stats: dbName = C
                                    1- 1031     ;***
                                    1- 1032     ;has an exit
                                    1- 1033     ;functions called:
                                    1- 1034     ;   _delay
                                    1- 1035     ;   _F_wait_eoc
                                    1- 1036     ;   _delay
                                    1- 1037     ;   _F_wait_eoc
                                    1- 1038     ;6 compiler assigned registers:
                                    1- 1039     ;   r0x1035
                                    1- 1040     ;   r0x1036
                                    1- 1041     ;   r0x1037
                                    1- 1042     ;   r0x1038
                                    1- 1043     ;   r0x1039
                                    1- 1044     ;   r0x103A
                                    1- 1045     ;; Starting pCode block
                                    1- 1046     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1048     ;local variable name mapping:
     0000                           1- 1051     _F_AIN2_Convert:
                                    1- 1052     ; 2 exit points
                                    1- 1053     	.line	1049, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1054     	BANKSEL	r0x1035
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1055     	MOVAR	r0x1035
                                    1- 1056     	.line	1051, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1057     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1058     	CLRR	_R_AIN2_DATA_LB
                                    1- 1059     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1060     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1061     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1062     	.line	1053, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1063     	MOVIA	0x92
     0008 00rr                      1- 1064     	MOVAR	_ADMD
                                    1- 1065     	.line	1054, "main.c"; 	delay(200);	
     0009 21C8                      1- 1066     	MOVIA	0xc8
                                    1- 1067     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1068     	.line	1055, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1069     	MOVIA	0x01
                                    1- 1070     	BANKSEL	r0x1036
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1071     	MOVAR	r0x1036
     000E                           1- 1072     _00979_DS_:
                                    1- 1073     	BANKSEL	r0x1036
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1074     	MOVR	r0x1036,W
                                    1- 1075     	BANKSEL	r0x1035
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1076     	SUBAR	r0x1035,W
     0012 0803                      1- 1077     	BTRSS	STATUS,0
                                    1- 1078     	MGOTO	_00981_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1079     	.line	1057, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1080     	BSR	_ADMDbits,6
                                    1- 1081     	.line	1058, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1082     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1083     	.line	1059, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1084     	MOVIA	0x0f
     0017 10rr                      1- 1085     	ANDAR	_ADR,W
                                    1- 1086     ;;3	MOVAR	r0x1037
                                    1- 1087     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1088     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1089     	.line	1060, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1090     	MOVR	_ADD,W
                                    1- 1091     	BANKSEL	r0x1037
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1092     	MOVAR	r0x1037
                                    1- 1093     ;;1	CLRR	r0x1038
                                    1- 1094     ;;111	MOVR	r0x1037,W
                                    1- 1095     ;;109	MOVAR	r0x1039
     001D 2100                      1- 1096     	MOVIA	0x00
                                    1- 1097     	BANKSEL	r0x103A
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1098     	MOVAR	r0x103A
                                    1- 1099     ;;110	MOVR	r0x1039,W
                                    1- 1100     	BANKSEL	r0x1037
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1101     	MOVR	r0x1037,W
                                    1- 1102     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1103     	ADDAR	_R_AIN2_DATA,F
                                    1- 1104     	BANKSEL	r0x103A
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1105     	MOVR	r0x103A,W
     0026 0C03                      1- 1106     	BTRSC	STATUS,0
     0027 05rr                      1- 1107     	INCR	r0x103A,W
     0028 0D03                      1- 1108     	BTRSC	STATUS,2
                                    1- 1109     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1110     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1111     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1112     _00001_DS_:
                                    1- 1113     	.line	1055, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1114     	BANKSEL	r0x1036
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1115     	INCR	r0x1036,F
                                    1- 1116     	MGOTO	_00979_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1117     _00981_DS_:
                                    1- 1118     	.line	1062, "main.c"; 	}
                                    1- 1119     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1120     ; exit point of _F_AIN2_Convert
                                    1- 1122     ;***
                                    1- 1123     ;  pBlock Stats: dbName = C
                                    1- 1124     ;***
                                    1- 1125     ;has an exit
                                    1- 1126     ;functions called:
                                    1- 1127     ;   _delay
                                    1- 1128     ;   _F_wait_eoc
                                    1- 1129     ;   _delay
                                    1- 1130     ;   _F_wait_eoc
                                    1- 1131     ;6 compiler assigned registers:
                                    1- 1132     ;   r0x103B
                                    1- 1133     ;   r0x103C
                                    1- 1134     ;   r0x103D
                                    1- 1135     ;   r0x103E
                                    1- 1136     ;   r0x103F
                                    1- 1137     ;   r0x1040
                                    1- 1138     ;; Starting pCode block
                                    1- 1139     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1141     ;local variable name mapping:
     0000                           1- 1144     _F_AIN3_Convert:
                                    1- 1145     ; 2 exit points
                                    1- 1146     	.line	1034, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1147     	BANKSEL	r0x103B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1148     	MOVAR	r0x103B
                                    1- 1149     	.line	1036, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1150     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1151     	CLRR	_R_AIN3_DATA_LB
                                    1- 1152     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1153     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1154     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1155     	.line	1038, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1156     	MOVIA	0x93
     0008 00rr                      1- 1157     	MOVAR	_ADMD
                                    1- 1158     	.line	1039, "main.c"; 	delay(200);	
     0009 21C8                      1- 1159     	MOVIA	0xc8
                                    1- 1160     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1161     	.line	1040, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1162     	MOVIA	0x01
                                    1- 1163     	BANKSEL	r0x103C
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1164     	MOVAR	r0x103C
     000E                           1- 1165     _00970_DS_:
                                    1- 1166     	BANKSEL	r0x103C
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1167     	MOVR	r0x103C,W
                                    1- 1168     	BANKSEL	r0x103B
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1169     	SUBAR	r0x103B,W
     0012 0803                      1- 1170     	BTRSS	STATUS,0
                                    1- 1171     	MGOTO	_00972_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1172     	.line	1042, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1173     	BSR	_ADMDbits,6
                                    1- 1174     	.line	1043, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1175     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1176     	.line	1044, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1177     	MOVIA	0x0f
     0017 10rr                      1- 1178     	ANDAR	_ADR,W
                                    1- 1179     ;;3	MOVAR	r0x103D
                                    1- 1180     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1181     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1182     	.line	1045, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1183     	MOVR	_ADD,W
                                    1- 1184     	BANKSEL	r0x103D
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1185     	MOVAR	r0x103D
                                    1- 1186     ;;1	CLRR	r0x103E
                                    1- 1187     ;;108	MOVR	r0x103D,W
                                    1- 1188     ;;106	MOVAR	r0x103F
     001D 2100                      1- 1189     	MOVIA	0x00
                                    1- 1190     	BANKSEL	r0x1040
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1191     	MOVAR	r0x1040
                                    1- 1192     ;;107	MOVR	r0x103F,W
                                    1- 1193     	BANKSEL	r0x103D
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1194     	MOVR	r0x103D,W
                                    1- 1195     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1196     	ADDAR	_R_AIN3_DATA,F
                                    1- 1197     	BANKSEL	r0x1040
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1198     	MOVR	r0x1040,W
     0026 0C03                      1- 1199     	BTRSC	STATUS,0
     0027 05rr                      1- 1200     	INCR	r0x1040,W
     0028 0D03                      1- 1201     	BTRSC	STATUS,2
                                    1- 1202     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1203     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1204     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1205     _00002_DS_:
                                    1- 1206     	.line	1040, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1207     	BANKSEL	r0x103C
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1208     	INCR	r0x103C,F
                                    1- 1209     	MGOTO	_00970_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1210     _00972_DS_:
                                    1- 1211     	.line	1047, "main.c"; 	}
                                    1- 1212     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1213     ; exit point of _F_AIN3_Convert
                                    1- 1215     ;***
                                    1- 1216     ;  pBlock Stats: dbName = C
                                    1- 1217     ;***
                                    1- 1218     ;has an exit
                                    1- 1219     ;functions called:
                                    1- 1220     ;   _delay
                                    1- 1221     ;   _F_wait_eoc
                                    1- 1222     ;   _delay
                                    1- 1223     ;   _F_wait_eoc
                                    1- 1224     ;6 compiler assigned registers:
                                    1- 1225     ;   r0x1041
                                    1- 1226     ;   r0x1042
                                    1- 1227     ;   r0x1043
                                    1- 1228     ;   r0x1044
                                    1- 1229     ;   r0x1045
                                    1- 1230     ;   r0x1046
                                    1- 1231     ;; Starting pCode block
                                    1- 1232     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1234     ;local variable name mapping:
     0000                           1- 1237     _F_AIN4_Convert:
                                    1- 1238     ; 2 exit points
                                    1- 1239     	.line	1019, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1240     	BANKSEL	r0x1041
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1241     	MOVAR	r0x1041
                                    1- 1242     	.line	1021, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1243     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1244     	CLRR	_R_AIN4_DATA_LB
                                    1- 1245     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1246     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1247     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1248     	.line	1023, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1249     	MOVIA	0x94
     0008 00rr                      1- 1250     	MOVAR	_ADMD
                                    1- 1251     	.line	1024, "main.c"; 	delay(200);	
     0009 21C8                      1- 1252     	MOVIA	0xc8
                                    1- 1253     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1254     	.line	1025, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1255     	MOVIA	0x01
                                    1- 1256     	BANKSEL	r0x1042
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1257     	MOVAR	r0x1042
     000E                           1- 1258     _00961_DS_:
                                    1- 1259     	BANKSEL	r0x1042
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1260     	MOVR	r0x1042,W
                                    1- 1261     	BANKSEL	r0x1041
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1262     	SUBAR	r0x1041,W
     0012 0803                      1- 1263     	BTRSS	STATUS,0
                                    1- 1264     	MGOTO	_00963_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1265     	.line	1027, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1266     	BSR	_ADMDbits,6
                                    1- 1267     	.line	1028, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1268     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1269     	.line	1029, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1270     	MOVIA	0x0f
     0017 10rr                      1- 1271     	ANDAR	_ADR,W
                                    1- 1272     ;;3	MOVAR	r0x1043
                                    1- 1273     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1274     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1275     	.line	1030, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1276     	MOVR	_ADD,W
                                    1- 1277     	BANKSEL	r0x1043
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1278     	MOVAR	r0x1043
                                    1- 1279     ;;1	CLRR	r0x1044
                                    1- 1280     ;;105	MOVR	r0x1043,W
                                    1- 1281     ;;103	MOVAR	r0x1045
     001D 2100                      1- 1282     	MOVIA	0x00
                                    1- 1283     	BANKSEL	r0x1046
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1284     	MOVAR	r0x1046
                                    1- 1285     ;;104	MOVR	r0x1045,W
                                    1- 1286     	BANKSEL	r0x1043
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1287     	MOVR	r0x1043,W
                                    1- 1288     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1289     	ADDAR	_R_AIN4_DATA,F
                                    1- 1290     	BANKSEL	r0x1046
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1291     	MOVR	r0x1046,W
     0026 0C03                      1- 1292     	BTRSC	STATUS,0
     0027 05rr                      1- 1293     	INCR	r0x1046,W
     0028 0D03                      1- 1294     	BTRSC	STATUS,2
                                    1- 1295     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1296     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1297     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1298     _00003_DS_:
                                    1- 1299     	.line	1025, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1300     	BANKSEL	r0x1042
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1301     	INCR	r0x1042,F
                                    1- 1302     	MGOTO	_00961_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1303     _00963_DS_:
                                    1- 1304     	.line	1032, "main.c"; 	}
                                    1- 1305     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1306     ; exit point of _F_AIN4_Convert
                                    1- 1308     ;***
                                    1- 1309     ;  pBlock Stats: dbName = C
                                    1- 1310     ;***
                                    1- 1311     ;has an exit
                                    1- 1312     ;functions called:
                                    1- 1313     ;   _F_AIN3_Convert
                                    1- 1314     ;   _F_AIN3_Convert
                                    1- 1315     ;4 compiler assigned registers:
                                    1- 1316     ;   r0x1047
                                    1- 1317     ;   r0x1048
                                    1- 1318     ;   r0x1049
                                    1- 1319     ;   r0x104A
                                    1- 1320     ;; Starting pCode block
                                    1- 1321     .segment "code"; module=main, function=_checkChrgV
     0000                           1- 1323     _checkChrgV:
                                    1- 1324     ; 2 exit points
                                    1- 1325     	.line	1004, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1326     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1327     	CLRR	_R_AIN3_DATA_LB
                                    1- 1328     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1329     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1330     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1331     	.line	1005, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1332     	MOVIA	0x08
                                    1- 1333     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1334     	.line	1006, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1335     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1336     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1337     	ANDIA	0xf0
     000A 00rr                      1- 1338     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1339     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1340     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1341     	ANDIA	0x0f
     000E 11rr                      1- 1342     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1343     	XORAR	_R_AIN3_DATA,F
                                    1- 1344     	.line	1007, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1345     	MOVIA	0xf0
                                    1- 1346     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1347     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1348     	.line	1008, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1349     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1350     	BANKSEL	r0x1049
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1351     	MOVAR	r0x1049
                                    1- 1352     ;;1	MOVAR	r0x1047
                                    1- 1353     ;;1	CLRR	r0x1048
                                    1- 1354     ;;102	MOVR	r0x1047,W
     0016 2100                      1- 1355     	MOVIA	0x00
                                    1- 1356     	BANKSEL	r0x104A
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1357     	MOVAR	r0x104A
                                    1- 1358     	BANKSEL	r0x1049
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1359     	MOVR	r0x1049,W
                                    1- 1360     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1361     	ADDAR	_R_AIN3_DATA,F
                                    1- 1362     	BANKSEL	r0x104A
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1363     	MOVR	r0x104A,W
     001F 0C03                      1- 1364     	BTRSC	STATUS,0
     0020 05rr                      1- 1365     	INCR	r0x104A,W
     0021 0D03                      1- 1366     	BTRSC	STATUS,2
                                    1- 1367     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1368     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1369     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1370     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1371     _00004_DS_:
                                    1- 1372     	.line	1009, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1373     	BCR	STATUS,0
                                    1- 1374     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1375     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1376     	RRR	_R_AIN3_DATA,F
                                    1- 1377     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1378     	BCR	STATUS,0
     002A 13rr                      1- 1379     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1380     	RRR	_R_AIN3_DATA,F
                                    1- 1381     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1382     	BCR	STATUS,0
     002D 13rr                      1- 1383     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1384     	RRR	_R_AIN3_DATA,F
                                    1- 1385     	.line	1010, "main.c"; 	}
                                    1- 1386     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1387     ; exit point of _checkChrgV
                                    1- 1389     ;***
                                    1- 1390     ;  pBlock Stats: dbName = C
                                    1- 1391     ;***
                                    1- 1392     ;has an exit
                                    1- 1393     ;functions called:
                                    1- 1394     ;   _F_AIN2_Convert
                                    1- 1395     ;   _F_AIN2_Convert
                                    1- 1396     ;4 compiler assigned registers:
                                    1- 1397     ;   r0x104B
                                    1- 1398     ;   r0x104C
                                    1- 1399     ;   r0x104D
                                    1- 1400     ;   r0x104E
                                    1- 1401     ;; Starting pCode block
                                    1- 1402     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1404     _checkBatAD:
                                    1- 1405     ; 2 exit points
                                    1- 1406     	.line	830, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1407     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1408     	CLRR	_R_AIN2_DATA_LB
                                    1- 1409     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1410     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1411     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1412     	.line	831, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1413     	MOVIA	0x08
                                    1- 1414     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1415     	.line	832, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1416     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1417     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1418     	ANDIA	0xf0
     000A 00rr                      1- 1419     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1420     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1421     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1422     	ANDIA	0x0f
     000E 11rr                      1- 1423     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1424     	XORAR	_R_AIN2_DATA,F
                                    1- 1425     	.line	833, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1426     	MOVIA	0xf0
                                    1- 1427     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1428     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1429     	.line	834, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1430     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1431     	BANKSEL	r0x104B
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1432     	MOVAR	r0x104B
                                    1- 1433     ;;1	CLRR	r0x104C
                                    1- 1434     ;;101	MOVR	r0x104B,W
                                    1- 1435     ;;99	MOVAR	r0x104D
     0016 2100                      1- 1436     	MOVIA	0x00
                                    1- 1437     	BANKSEL	r0x104E
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1438     	MOVAR	r0x104E
                                    1- 1439     ;;100	MOVR	r0x104D,W
                                    1- 1440     	BANKSEL	r0x104B
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1441     	MOVR	r0x104B,W
                                    1- 1442     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1443     	ADDAR	_R_AIN2_DATA,F
                                    1- 1444     	BANKSEL	r0x104E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1445     	MOVR	r0x104E,W
     001F 0C03                      1- 1446     	BTRSC	STATUS,0
     0020 05rr                      1- 1447     	INCR	r0x104E,W
     0021 0D03                      1- 1448     	BTRSC	STATUS,2
                                    1- 1449     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1450     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1451     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1452     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1453     _00005_DS_:
                                    1- 1454     	.line	835, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1455     	BCR	STATUS,0
                                    1- 1456     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1457     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1458     	RRR	_R_AIN2_DATA,F
                                    1- 1459     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1460     	BCR	STATUS,0
     002A 13rr                      1- 1461     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1462     	RRR	_R_AIN2_DATA,F
                                    1- 1463     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1464     	BCR	STATUS,0
     002D 13rr                      1- 1465     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1466     	RRR	_R_AIN2_DATA,F
                                    1- 1467     	.line	836, "main.c"; 	if(debug)
                                    1- 1468     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1469     	MOVR	_debug,W
     0031 0D03                      1- 1470     	BTRSC	STATUS,2
                                    1- 1471     	MGOTO	_00668_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1472     	.line	837, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1473     	MOVIA	0x0e
                                    1- 1474     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1475     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1476     	MOVIA	0x06
     0037 00rr                      1- 1477     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1478     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1479     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1480     _00668_DS_:
                                    1- 1481     	.line	839, "main.c"; 	if(R_AIN2_DATA > 1550)
     0038 2106                      1- 1482     	MOVIA	0x06
                                    1- 1483     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1484     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1485     	BTRSS	STATUS,2
                                    1- 1486     	MGOTO	_00918_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 210F                      1- 1487     	MOVIA	0x0f
     003E 04rr                      1- 1488     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1489     _00918_DS_:
     003F 0803                      1- 1490     	BTRSS	STATUS,0
                                    1- 1491     	MGOTO	_00675_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1492     	.line	842, "main.c"; 	lowCount = 0;
                                    1- 1493     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1494     	CLRR	_lowCount
                                    1- 1495     	.line	842, "main.c"; 	}
                                    1- 1496     	MGOTO	_00676_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1497     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0044                           1- 1498     _00675_DS_:
                                    1- 1499     	.line	844, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0044 2104                      1- 1500     	MOVIA	0x04
                                    1- 1501     	BANKSEL	_R_AIN2_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1502     	SUBAR	(_R_AIN2_DATA + 1),W
     0047 0903                      1- 1503     	BTRSS	STATUS,2
                                    1- 1504     	MGOTO	_00919_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 217E                      1- 1505     	MOVIA	0x7e
     004A 04rr                      1- 1506     	SUBAR	_R_AIN2_DATA,W
     004B                           1- 1507     _00919_DS_:
     004B 0C03                      1- 1508     	BTRSC	STATUS,0
                                    1- 1509     	MGOTO	_00672_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1510     	.line	846, "main.c"; 	if(++lowCount < 10)
                                    1- 1511     	BANKSEL	_lowCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1- 1512     	INCR	_lowCount,F
                                    1- 1513     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1514     	MOVIA	0x0a
     0050 04rr                      1- 1515     	SUBAR	_lowCount,W
     0051 0803                      1- 1516     	BTRSS	STATUS,0
                                    1- 1517     	.line	847, "main.c"; 	return;
                                    1- 1518     	MGOTO	_00775_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1519     	.line	848, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1520     	MOVIA	0x0a
     0054 00rr                      1- 1521     	MOVAR	_lowCount
                                    1- 1522     	.line	849, "main.c"; 	pwStep = 0;
                                    1- 1523     	BANKSEL	_pwStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1524     	CLRR	_pwStep
                                    1- 1525     	.line	850, "main.c"; 	R_AIN2_DATA = 1150;
     0057 217E                      1- 1526     	MOVIA	0x7e
                                    1- 1527     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1528     	MOVAR	_R_AIN2_DATA
     005A 2104                      1- 1529     	MOVIA	0x04
     005B 00rr                      1- 1530     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1531     	.line	850, "main.c"; 	R_AIN2_DATA = 1150;
                                    1- 1532     	MGOTO	_00676_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 1533     _00672_DS_:
                                    1- 1534     	.line	862, "main.c"; 	lowCount = 0;
                                    1- 1535     	BANKSEL	_lowCount
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 02rr                      1- 1536     	CLRR	_lowCount
                                    1- 1537     	.line	863, "main.c"; 	firstTime = 0;
                                    1- 1538     	BANKSEL	_firstTime
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1- 1539     	CLRR	_firstTime
     0061                           1- 1540     _00676_DS_:
                                    1- 1541     	.line	866, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1150;
     0061 2182                      1- 1542     	MOVIA	0x82
                                    1- 1543     	BANKSEL	_R_AIN2_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 03rr                      1- 1544     	ADDAR	_R_AIN2_DATA,F
     0064 21FB                      1- 1545     	MOVIA	0xfb
     0065 0C03                      1- 1546     	BTRSC	STATUS,0
     0066 21FC                      1- 1547     	MOVIA	0xfc
     0067 03rr                      1- 1548     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1549     	.line	867, "main.c"; 	if(PORTA & 0x08 && R_AIN2_DATA < 390)
                                    1- 1550     	BANKSEL	_PORTA
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 09rr                      1- 1551     	BTRSS	_PORTA,3
                                    1- 1552     	MGOTO	_00689_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1553     ;;unsigned compare: left < lit (0x186=390), size=2
     006B 2101                      1- 1554     	MOVIA	0x01
                                    1- 1555     	BANKSEL	_R_AIN2_DATA
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 04rr                      1- 1556     	SUBAR	(_R_AIN2_DATA + 1),W
     006E 0903                      1- 1557     	BTRSS	STATUS,2
                                    1- 1558     	MGOTO	_00921_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 2186                      1- 1559     	MOVIA	0x86
     0071 04rr                      1- 1560     	SUBAR	_R_AIN2_DATA,W
     0072                           1- 1561     _00921_DS_:
     0072 0C03                      1- 1562     	BTRSC	STATUS,0
                                    1- 1563     	MGOTO	_00689_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1564     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1565     ;;unsigned compare: left >= lit (0x169=361), size=2
                                    1- 1566     	.line	869, "main.c"; 	if(R_AIN2_DATA > 360)
     0074 2101                      1- 1567     	MOVIA	0x01
                                    1- 1568     	BANKSEL	_R_AIN2_DATA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 04rr                      1- 1569     	SUBAR	(_R_AIN2_DATA + 1),W
     0077 0903                      1- 1570     	BTRSS	STATUS,2
                                    1- 1571     	MGOTO	_00922_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079 2169                      1- 1572     	MOVIA	0x69
     007A 04rr                      1- 1573     	SUBAR	_R_AIN2_DATA,W
     007B                           1- 1574     _00922_DS_:
     007B 0803                      1- 1575     	BTRSS	STATUS,0
                                    1- 1576     	MGOTO	_00686_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1577     	.line	870, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 10;
     007D 21F6                      1- 1578     	MOVIA	0xf6
                                    1- 1579     	BANKSEL	_R_AIN2_DATA
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 03rr                      1- 1580     	ADDAR	_R_AIN2_DATA,F
     0080 0803                      1- 1581     	BTRSS	STATUS,0
     0081 06rr                      1- 1582     	DECR	(_R_AIN2_DATA + 1),F
                                    1- 1583     	MGOTO	_00689_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1584     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1585     ;;unsigned compare: left >= lit (0x12D=301), size=2
     0083                           1- 1586     _00686_DS_:
                                    1- 1587     	.line	871, "main.c"; 	else if(R_AIN2_DATA > 300)
     0083 2101                      1- 1588     	MOVIA	0x01
                                    1- 1589     	BANKSEL	_R_AIN2_DATA
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 04rr                      1- 1590     	SUBAR	(_R_AIN2_DATA + 1),W
     0086 0903                      1- 1591     	BTRSS	STATUS,2
                                    1- 1592     	MGOTO	_00923_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088 212D                      1- 1593     	MOVIA	0x2d
     0089 04rr                      1- 1594     	SUBAR	_R_AIN2_DATA,W
     008A                           1- 1595     _00923_DS_:
     008A 0803                      1- 1596     	BTRSS	STATUS,0
                                    1- 1597     	MGOTO	_00683_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1598     	.line	872, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 20;
     008C 21EC                      1- 1599     	MOVIA	0xec
                                    1- 1600     	BANKSEL	_R_AIN2_DATA
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 03rr                      1- 1601     	ADDAR	_R_AIN2_DATA,F
     008F 0803                      1- 1602     	BTRSS	STATUS,0
     0090 06rr                      1- 1603     	DECR	(_R_AIN2_DATA + 1),F
                                    1- 1604     	MGOTO	_00689_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1605     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1606     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0092                           1- 1607     _00683_DS_:
                                    1- 1608     	.line	873, "main.c"; 	else if(R_AIN2_DATA > 200)
     0092 2100                      1- 1609     	MOVIA	0x00
                                    1- 1610     	BANKSEL	_R_AIN2_DATA
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 04rr                      1- 1611     	SUBAR	(_R_AIN2_DATA + 1),W
     0095 0903                      1- 1612     	BTRSS	STATUS,2
                                    1- 1613     	MGOTO	_00924_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
     0097 21C9                      1- 1614     	MOVIA	0xc9
     0098 04rr                      1- 1615     	SUBAR	_R_AIN2_DATA,W
     0099                           1- 1616     _00924_DS_:
     0099 0803                      1- 1617     	BTRSS	STATUS,0
                                    1- 1618     	MGOTO	_00680_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1619     	.line	874, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 30;
     009B 21E2                      1- 1620     	MOVIA	0xe2
                                    1- 1621     	BANKSEL	_R_AIN2_DATA
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 03rr                      1- 1622     	ADDAR	_R_AIN2_DATA,F
     009E 0803                      1- 1623     	BTRSS	STATUS,0
     009F 06rr                      1- 1624     	DECR	(_R_AIN2_DATA + 1),F
                                    1- 1625     	MGOTO	_00689_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1626     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1627     ;;unsigned compare: left >= lit (0x33=51), size=2
     00A1                           1- 1628     _00680_DS_:
                                    1- 1629     	.line	875, "main.c"; 	else if(R_AIN2_DATA > 50)
     00A1 2100                      1- 1630     	MOVIA	0x00
                                    1- 1631     	BANKSEL	_R_AIN2_DATA
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 04rr                      1- 1632     	SUBAR	(_R_AIN2_DATA + 1),W
     00A4 0903                      1- 1633     	BTRSS	STATUS,2
                                    1- 1634     	MGOTO	_00925_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
     00A6 2133                      1- 1635     	MOVIA	0x33
     00A7 04rr                      1- 1636     	SUBAR	_R_AIN2_DATA,W
     00A8                           1- 1637     _00925_DS_:
     00A8 0803                      1- 1638     	BTRSS	STATUS,0
                                    1- 1639     	MGOTO	_00689_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1640     	.line	876, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 40;
     00AA 21D8                      1- 1641     	MOVIA	0xd8
                                    1- 1642     	BANKSEL	_R_AIN2_DATA
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 03rr                      1- 1643     	ADDAR	_R_AIN2_DATA,F
     00AD 0803                      1- 1644     	BTRSS	STATUS,0
     00AE 06rr                      1- 1645     	DECR	(_R_AIN2_DATA + 1),F
                                    1- 1646     ;;unsigned compare: left < lit (0x18E=398), size=2
     00AF                           1- 1647     _00689_DS_:
                                    1- 1648     	.line	878, "main.c"; 	if(R_AIN2_DATA >= 398)
     00AF 2101                      1- 1649     	MOVIA	0x01
                                    1- 1650     	BANKSEL	_R_AIN2_DATA
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 04rr                      1- 1651     	SUBAR	(_R_AIN2_DATA + 1),W
     00B2 0903                      1- 1652     	BTRSS	STATUS,2
                                    1- 1653     	MGOTO	_00926_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4 218E                      1- 1654     	MOVIA	0x8e
     00B5 04rr                      1- 1655     	SUBAR	_R_AIN2_DATA,W
     00B6                           1- 1656     _00926_DS_:
     00B6 0803                      1- 1657     	BTRSS	STATUS,0
                                    1- 1658     	MGOTO	_00692_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1659     	.line	880, "main.c"; 	pwStep = 7;
     00B8 2107                      1- 1660     	MOVIA	0x07
                                    1- 1661     	BANKSEL	_pwStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 1662     	MOVAR	_pwStep
                                    1- 1663     ;;unsigned compare: left < lit (0x192=402), size=2
     00BB                           1- 1664     _00692_DS_:
                                    1- 1665     	.line	882, "main.c"; 	if(R_AIN2_DATA >= 402)
     00BB 2101                      1- 1666     	MOVIA	0x01
                                    1- 1667     	BANKSEL	_R_AIN2_DATA
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 04rr                      1- 1668     	SUBAR	(_R_AIN2_DATA + 1),W
     00BE 0903                      1- 1669     	BTRSS	STATUS,2
                                    1- 1670     	MGOTO	_00927_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
     00C0 2192                      1- 1671     	MOVIA	0x92
     00C1 04rr                      1- 1672     	SUBAR	_R_AIN2_DATA,W
     00C2                           1- 1673     _00927_DS_:
     00C2 0803                      1- 1674     	BTRSS	STATUS,0
                                    1- 1675     	MGOTO	_00764_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1676     	.line	884, "main.c"; 	pwStep = 8;
     00C4 2108                      1- 1677     	MOVIA	0x08
                                    1- 1678     	BANKSEL	_pwStep
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 00rr                      1- 1679     	MOVAR	_pwStep
                                    1- 1680     	MGOTO	_00765_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1681     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1682     ;;unsigned compare: left >= lit (0x17D=381), size=2
     00C8                           1- 1683     _00764_DS_:
                                    1- 1684     	.line	886, "main.c"; 	else if(R_AIN2_DATA > 380)
     00C8 2101                      1- 1685     	MOVIA	0x01
                                    1- 1686     	BANKSEL	_R_AIN2_DATA
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 04rr                      1- 1687     	SUBAR	(_R_AIN2_DATA + 1),W
     00CB 0903                      1- 1688     	BTRSS	STATUS,2
                                    1- 1689     	MGOTO	_00928_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD 217D                      1- 1690     	MOVIA	0x7d
     00CE 04rr                      1- 1691     	SUBAR	_R_AIN2_DATA,W
     00CF                           1- 1692     _00928_DS_:
     00CF 0803                      1- 1693     	BTRSS	STATUS,0
                                    1- 1694     	MGOTO	_00761_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1695     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1696     	.line	889, "main.c"; 	if(pwStep < 6)
     00D1 2106                      1- 1697     	MOVIA	0x06
                                    1- 1698     	BANKSEL	_pwStep
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 04rr                      1- 1699     	SUBAR	_pwStep,W
     00D4 0C03                      1- 1700     	BTRSC	STATUS,0
                                    1- 1701     	MGOTO	_00699_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1702     	.line	891, "main.c"; 	fullCount = 0;
                                    1- 1703     	BANKSEL	_fullCount
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 1704     	CLRR	_fullCount
     00D8 02rr                      1- 1705     	CLRR	(_fullCount + 1)
                                    1- 1706     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1707     ;;unsigned compare: left >= lit (0x17F=383), size=2
                                    1- 1708     	.line	892, "main.c"; 	if(R_AIN2_DATA > 382)
     00D9 2101                      1- 1709     	MOVIA	0x01
                                    1- 1710     	BANKSEL	_R_AIN2_DATA
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 04rr                      1- 1711     	SUBAR	(_R_AIN2_DATA + 1),W
     00DC 0903                      1- 1712     	BTRSS	STATUS,2
                                    1- 1713     	MGOTO	_00930_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
     00DE 217F                      1- 1714     	MOVIA	0x7f
     00DF 04rr                      1- 1715     	SUBAR	_R_AIN2_DATA,W
     00E0                           1- 1716     _00930_DS_:
     00E0 0803                      1- 1717     	BTRSS	STATUS,0
                                    1- 1718     	MGOTO	_00700_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1719     	.line	893, "main.c"; 	pwStep = 6;
     00E2 2106                      1- 1720     	MOVIA	0x06
                                    1- 1721     	BANKSEL	_pwStep
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 00rr                      1- 1722     	MOVAR	_pwStep
                                    1- 1723     	MGOTO	_00700_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
     00E6                           1- 1724     _00699_DS_:
                                    1- 1725     	.line	895, "main.c"; 	else if(chrgTime == 0 && R_AIN2_DATA < 396)
                                    1- 1726     	BANKSEL	_chrgTime
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 01rr                      1- 1727     	MOVR	_chrgTime,W
     00E8 11rr                      1- 1728     	IORAR	(_chrgTime + 1),W
     00E9 0903                      1- 1729     	BTRSS	STATUS,2
                                    1- 1730     	MGOTO	_00700_DS_
     00EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1731     ;;unsigned compare: left < lit (0x18C=396), size=2
     00EB 2101                      1- 1732     	MOVIA	0x01
                                    1- 1733     	BANKSEL	_R_AIN2_DATA
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 1734     	SUBAR	(_R_AIN2_DATA + 1),W
     00EE 0903                      1- 1735     	BTRSS	STATUS,2
                                    1- 1736     	MGOTO	_00931_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
     00F0 218C                      1- 1737     	MOVIA	0x8c
     00F1 04rr                      1- 1738     	SUBAR	_R_AIN2_DATA,W
     00F2                           1- 1739     _00931_DS_:
     00F2 0C03                      1- 1740     	BTRSC	STATUS,0
                                    1- 1741     	MGOTO	_00700_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1742     	.line	897, "main.c"; 	pwStep = 6;
     00F4 2106                      1- 1743     	MOVIA	0x06
                                    1- 1744     	BANKSEL	_pwStep
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 1745     	MOVAR	_pwStep
                                    1- 1746     	.line	898, "main.c"; 	fullCount = 0;
                                    1- 1747     	BANKSEL	_fullCount
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 02rr                      1- 1748     	CLRR	_fullCount
     00F9 02rr                      1- 1749     	CLRR	(_fullCount + 1)
     00FA                           1- 1750     _00700_DS_:
                                    1- 1751     	.line	902, "main.c"; 	if(chrgTime > 0 && R_AIN2_DATA > 395 && chrgTime > 600)
                                    1- 1752     	BANKSEL	_chrgTime
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 01rr                      1- 1753     	MOVR	_chrgTime,W
     00FC 11rr                      1- 1754     	IORAR	(_chrgTime + 1),W
     00FD 0D03                      1- 1755     	BTRSC	STATUS,2
                                    1- 1756     	MGOTO	_00765_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1757     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1758     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00FF 2101                      1- 1759     	MOVIA	0x01
                                    1- 1760     	BANKSEL	_R_AIN2_DATA
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 04rr                      1- 1761     	SUBAR	(_R_AIN2_DATA + 1),W
     0102 0903                      1- 1762     	BTRSS	STATUS,2
                                    1- 1763     	MGOTO	_00932_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
     0104 218C                      1- 1764     	MOVIA	0x8c
     0105 04rr                      1- 1765     	SUBAR	_R_AIN2_DATA,W
     0106                           1- 1766     _00932_DS_:
     0106 0803                      1- 1767     	BTRSS	STATUS,0
                                    1- 1768     	MGOTO	_00765_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1769     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1770     ;;unsigned compare: left >= lit (0x259=601), size=2
     0108 2102                      1- 1771     	MOVIA	0x02
                                    1- 1772     	BANKSEL	_chrgTime
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 04rr                      1- 1773     	SUBAR	(_chrgTime + 1),W
     010B 0903                      1- 1774     	BTRSS	STATUS,2
                                    1- 1775     	MGOTO	_00933_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
     010D 2159                      1- 1776     	MOVIA	0x59
     010E 04rr                      1- 1777     	SUBAR	_chrgTime,W
     010F                           1- 1778     _00933_DS_:
     010F 0803                      1- 1779     	BTRSS	STATUS,0
                                    1- 1780     	MGOTO	_00765_DS_
     0110 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1781     	.line	904, "main.c"; 	chrgTime = 600;
     0111 2158                      1- 1782     	MOVIA	0x58
                                    1- 1783     	BANKSEL	_chrgTime
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 00rr                      1- 1784     	MOVAR	_chrgTime
     0114 2102                      1- 1785     	MOVIA	0x02
     0115 00rr                      1- 1786     	MOVAR	(_chrgTime + 1)
                                    1- 1787     	.line	905, "main.c"; 	pwStep = 7;
     0116 2107                      1- 1788     	MOVIA	0x07
                                    1- 1789     	BANKSEL	_pwStep
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 00rr                      1- 1790     	MOVAR	_pwStep
                                    1- 1791     	MGOTO	_00765_DS_
     0119 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1792     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1793     ;;unsigned compare: left >= lit (0x169=361), size=2
     011A                           1- 1794     _00761_DS_:
                                    1- 1795     	.line	908, "main.c"; 	else if(R_AIN2_DATA > 360)
     011A 2101                      1- 1796     	MOVIA	0x01
                                    1- 1797     	BANKSEL	_R_AIN2_DATA
     011B rrrr                      3-  110 m1      .banksel ram_address
     011C 04rr                      1- 1798     	SUBAR	(_R_AIN2_DATA + 1),W
     011D 0903                      1- 1799     	BTRSS	STATUS,2
                                    1- 1800     	MGOTO	_00934_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
     011F 2169                      1- 1801     	MOVIA	0x69
     0120 04rr                      1- 1802     	SUBAR	_R_AIN2_DATA,W
     0121                           1- 1803     _00934_DS_:
     0121 0803                      1- 1804     	BTRSS	STATUS,0
                                    1- 1805     	MGOTO	_00758_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1806     	.line	911, "main.c"; 	if(pwStep == 4)
                                    1- 1807     	BANKSEL	_pwStep
     0123 rrrr                      3-  110 m1      .banksel ram_address
     0124 01rr                      1- 1808     	MOVR	_pwStep,W
     0125 2404                      1- 1809     	XORIA	0x04
     0126 0903                      1- 1810     	BTRSS	STATUS,2
                                    1- 1811     	MGOTO	_00708_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1812     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1813     ;;unsigned compare: left >= lit (0x16B=363), size=2
                                    1- 1814     	.line	913, "main.c"; 	if(R_AIN2_DATA > 362)
     0128 2101                      1- 1815     	MOVIA	0x01
                                    1- 1816     	BANKSEL	_R_AIN2_DATA
     0129 rrrr                      3-  110 m1      .banksel ram_address
     012A 04rr                      1- 1817     	SUBAR	(_R_AIN2_DATA + 1),W
     012B 0903                      1- 1818     	BTRSS	STATUS,2
                                    1- 1819     	MGOTO	_00935_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
     012D 216B                      1- 1820     	MOVIA	0x6b
     012E 04rr                      1- 1821     	SUBAR	_R_AIN2_DATA,W
     012F                           1- 1822     _00935_DS_:
     012F 0803                      1- 1823     	BTRSS	STATUS,0
                                    1- 1824     	MGOTO	_00708_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1825     	.line	914, "main.c"; 	pwStep = 5;
     0131 2105                      1- 1826     	MOVIA	0x05
                                    1- 1827     	BANKSEL	_pwStep
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 00rr                      1- 1828     	MOVAR	_pwStep
                                    1- 1829     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1830     ;;unsigned compare: left >= lit (0x6=6), size=1
     0134                           1- 1831     _00708_DS_:
                                    1- 1832     	.line	916, "main.c"; 	if(pwStep > 5)
     0134 2106                      1- 1833     	MOVIA	0x06
                                    1- 1834     	BANKSEL	_pwStep
     0135 rrrr                      3-  110 m1      .banksel ram_address
     0136 04rr                      1- 1835     	SUBAR	_pwStep,W
     0137 0803                      1- 1836     	BTRSS	STATUS,0
                                    1- 1837     	MGOTO	_00712_DS_
     0138 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1838     ;;unsigned compare: left < lit (0x17C=380), size=2
                                    1- 1839     	.line	918, "main.c"; 	if(R_AIN2_DATA < 380)
     0139 2101                      1- 1840     	MOVIA	0x01
                                    1- 1841     	BANKSEL	_R_AIN2_DATA
     013A rrrr                      3-  110 m1      .banksel ram_address
     013B 04rr                      1- 1842     	SUBAR	(_R_AIN2_DATA + 1),W
     013C 0903                      1- 1843     	BTRSS	STATUS,2
                                    1- 1844     	MGOTO	_00937_DS_
     013D 3rrr                      3-   63 m1      LGOTO rom_address
     013E 217C                      1- 1845     	MOVIA	0x7c
     013F 04rr                      1- 1846     	SUBAR	_R_AIN2_DATA,W
     0140                           1- 1847     _00937_DS_:
     0140 0C03                      1- 1848     	BTRSC	STATUS,0
                                    1- 1849     	MGOTO	_00713_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1850     	.line	919, "main.c"; 	pwStep = 5;
     0142 2105                      1- 1851     	MOVIA	0x05
                                    1- 1852     	BANKSEL	_pwStep
     0143 rrrr                      3-  110 m1      .banksel ram_address
     0144 00rr                      1- 1853     	MOVAR	_pwStep
                                    1- 1854     	MGOTO	_00713_DS_
     0145 3rrr                      3-   63 m1      LGOTO rom_address
     0146                           1- 1855     _00712_DS_:
                                    1- 1856     	.line	922, "main.c"; 	pwStep = 5;
     0146 2105                      1- 1857     	MOVIA	0x05
                                    1- 1858     	BANKSEL	_pwStep
     0147 rrrr                      3-  110 m1      .banksel ram_address
     0148 00rr                      1- 1859     	MOVAR	_pwStep
     0149                           1- 1860     _00713_DS_:
                                    1- 1861     	.line	923, "main.c"; 	chrgTime = 0;
                                    1- 1862     	BANKSEL	_chrgTime
     0149 rrrr                      3-  110 m1      .banksel ram_address
     014A 02rr                      1- 1863     	CLRR	_chrgTime
     014B 02rr                      1- 1864     	CLRR	(_chrgTime + 1)
                                    1- 1865     	MGOTO	_00765_DS_
     014C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1866     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1867     ;;unsigned compare: left >= lit (0x14B=331), size=2
     014D                           1- 1868     _00758_DS_:
                                    1- 1869     	.line	925, "main.c"; 	else if(R_AIN2_DATA > 330)
     014D 2101                      1- 1870     	MOVIA	0x01
                                    1- 1871     	BANKSEL	_R_AIN2_DATA
     014E rrrr                      3-  110 m1      .banksel ram_address
     014F 04rr                      1- 1872     	SUBAR	(_R_AIN2_DATA + 1),W
     0150 0903                      1- 1873     	BTRSS	STATUS,2
                                    1- 1874     	MGOTO	_00938_DS_
     0151 3rrr                      3-   63 m1      LGOTO rom_address
     0152 214B                      1- 1875     	MOVIA	0x4b
     0153 04rr                      1- 1876     	SUBAR	_R_AIN2_DATA,W
     0154                           1- 1877     _00938_DS_:
     0154 0803                      1- 1878     	BTRSS	STATUS,0
                                    1- 1879     	MGOTO	_00755_DS_
     0155 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1880     	.line	927, "main.c"; 	if(pwStep == 3)
                                    1- 1881     	BANKSEL	_pwStep
     0156 rrrr                      3-  110 m1      .banksel ram_address
     0157 01rr                      1- 1882     	MOVR	_pwStep,W
     0158 2403                      1- 1883     	XORIA	0x03
     0159 0903                      1- 1884     	BTRSS	STATUS,2
                                    1- 1885     	MGOTO	_00717_DS_
     015A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1886     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1887     ;;unsigned compare: left >= lit (0x150=336), size=2
                                    1- 1888     	.line	929, "main.c"; 	if(R_AIN2_DATA > 335)
     015B 2101                      1- 1889     	MOVIA	0x01
                                    1- 1890     	BANKSEL	_R_AIN2_DATA
     015C rrrr                      3-  110 m1      .banksel ram_address
     015D 04rr                      1- 1891     	SUBAR	(_R_AIN2_DATA + 1),W
     015E 0903                      1- 1892     	BTRSS	STATUS,2
                                    1- 1893     	MGOTO	_00939_DS_
     015F 3rrr                      3-   63 m1      LGOTO rom_address
     0160 2150                      1- 1894     	MOVIA	0x50
     0161 04rr                      1- 1895     	SUBAR	_R_AIN2_DATA,W
     0162                           1- 1896     _00939_DS_:
     0162 0803                      1- 1897     	BTRSS	STATUS,0
                                    1- 1898     	MGOTO	_00717_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1899     	.line	930, "main.c"; 	pwStep = 4;
     0164 2104                      1- 1900     	MOVIA	0x04
                                    1- 1901     	BANKSEL	_pwStep
     0165 rrrr                      3-  110 m1      .banksel ram_address
     0166 00rr                      1- 1902     	MOVAR	_pwStep
                                    1- 1903     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1904     ;;unsigned compare: left >= lit (0x5=5), size=1
     0167                           1- 1905     _00717_DS_:
                                    1- 1906     	.line	932, "main.c"; 	if(pwStep > 4)
     0167 2105                      1- 1907     	MOVIA	0x05
                                    1- 1908     	BANKSEL	_pwStep
     0168 rrrr                      3-  110 m1      .banksel ram_address
     0169 04rr                      1- 1909     	SUBAR	_pwStep,W
     016A 0803                      1- 1910     	BTRSS	STATUS,0
                                    1- 1911     	MGOTO	_00721_DS_
     016B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1912     ;;unsigned compare: left < lit (0x168=360), size=2
                                    1- 1913     	.line	934, "main.c"; 	if(R_AIN2_DATA < 360)
     016C 2101                      1- 1914     	MOVIA	0x01
                                    1- 1915     	BANKSEL	_R_AIN2_DATA
     016D rrrr                      3-  110 m1      .banksel ram_address
     016E 04rr                      1- 1916     	SUBAR	(_R_AIN2_DATA + 1),W
     016F 0903                      1- 1917     	BTRSS	STATUS,2
                                    1- 1918     	MGOTO	_00941_DS_
     0170 3rrr                      3-   63 m1      LGOTO rom_address
     0171 2168                      1- 1919     	MOVIA	0x68
     0172 04rr                      1- 1920     	SUBAR	_R_AIN2_DATA,W
     0173                           1- 1921     _00941_DS_:
     0173 0C03                      1- 1922     	BTRSC	STATUS,0
                                    1- 1923     	MGOTO	_00722_DS_
     0174 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1924     	.line	935, "main.c"; 	pwStep = 4;
     0175 2104                      1- 1925     	MOVIA	0x04
                                    1- 1926     	BANKSEL	_pwStep
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 00rr                      1- 1927     	MOVAR	_pwStep
                                    1- 1928     	MGOTO	_00722_DS_
     0178 3rrr                      3-   63 m1      LGOTO rom_address
     0179                           1- 1929     _00721_DS_:
                                    1- 1930     	.line	938, "main.c"; 	pwStep = 4;
     0179 2104                      1- 1931     	MOVIA	0x04
                                    1- 1932     	BANKSEL	_pwStep
     017A rrrr                      3-  110 m1      .banksel ram_address
     017B 00rr                      1- 1933     	MOVAR	_pwStep
     017C                           1- 1934     _00722_DS_:
                                    1- 1935     	.line	939, "main.c"; 	chrgTime = 0;
                                    1- 1936     	BANKSEL	_chrgTime
     017C rrrr                      3-  110 m1      .banksel ram_address
     017D 02rr                      1- 1937     	CLRR	_chrgTime
     017E 02rr                      1- 1938     	CLRR	(_chrgTime + 1)
                                    1- 1939     	MGOTO	_00765_DS_
     017F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1940     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1941     ;;unsigned compare: left >= lit (0x123=291), size=2
     0180                           1- 1942     _00755_DS_:
                                    1- 1943     	.line	941, "main.c"; 	else if(R_AIN2_DATA > 290)
     0180 2101                      1- 1944     	MOVIA	0x01
                                    1- 1945     	BANKSEL	_R_AIN2_DATA
     0181 rrrr                      3-  110 m1      .banksel ram_address
     0182 04rr                      1- 1946     	SUBAR	(_R_AIN2_DATA + 1),W
     0183 0903                      1- 1947     	BTRSS	STATUS,2
                                    1- 1948     	MGOTO	_00942_DS_
     0184 3rrr                      3-   63 m1      LGOTO rom_address
     0185 2123                      1- 1949     	MOVIA	0x23
     0186 04rr                      1- 1950     	SUBAR	_R_AIN2_DATA,W
     0187                           1- 1951     _00942_DS_:
     0187 0803                      1- 1952     	BTRSS	STATUS,0
                                    1- 1953     	MGOTO	_00752_DS_
     0188 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1954     	.line	943, "main.c"; 	if(pwStep == 2)
                                    1- 1955     	BANKSEL	_pwStep
     0189 rrrr                      3-  110 m1      .banksel ram_address
     018A 01rr                      1- 1956     	MOVR	_pwStep,W
     018B 2402                      1- 1957     	XORIA	0x02
     018C 0903                      1- 1958     	BTRSS	STATUS,2
                                    1- 1959     	MGOTO	_00726_DS_
     018D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1960     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1961     ;;unsigned compare: left >= lit (0x128=296), size=2
                                    1- 1962     	.line	945, "main.c"; 	if(R_AIN2_DATA > 295)
     018E 2101                      1- 1963     	MOVIA	0x01
                                    1- 1964     	BANKSEL	_R_AIN2_DATA
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 04rr                      1- 1965     	SUBAR	(_R_AIN2_DATA + 1),W
     0191 0903                      1- 1966     	BTRSS	STATUS,2
                                    1- 1967     	MGOTO	_00943_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
     0193 2128                      1- 1968     	MOVIA	0x28
     0194 04rr                      1- 1969     	SUBAR	_R_AIN2_DATA,W
     0195                           1- 1970     _00943_DS_:
     0195 0803                      1- 1971     	BTRSS	STATUS,0
                                    1- 1972     	MGOTO	_00726_DS_
     0196 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1973     	.line	946, "main.c"; 	pwStep = 3;
     0197 2103                      1- 1974     	MOVIA	0x03
                                    1- 1975     	BANKSEL	_pwStep
     0198 rrrr                      3-  110 m1      .banksel ram_address
     0199 00rr                      1- 1976     	MOVAR	_pwStep
                                    1- 1977     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1978     ;;unsigned compare: left >= lit (0x4=4), size=1
     019A                           1- 1979     _00726_DS_:
                                    1- 1980     	.line	948, "main.c"; 	if(pwStep > 3)
     019A 2104                      1- 1981     	MOVIA	0x04
                                    1- 1982     	BANKSEL	_pwStep
     019B rrrr                      3-  110 m1      .banksel ram_address
     019C 04rr                      1- 1983     	SUBAR	_pwStep,W
     019D 0803                      1- 1984     	BTRSS	STATUS,0
                                    1- 1985     	MGOTO	_00730_DS_
     019E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1986     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 1987     	.line	950, "main.c"; 	if(R_AIN2_DATA < 340)
     019F 2101                      1- 1988     	MOVIA	0x01
                                    1- 1989     	BANKSEL	_R_AIN2_DATA
     01A0 rrrr                      3-  110 m1      .banksel ram_address
     01A1 04rr                      1- 1990     	SUBAR	(_R_AIN2_DATA + 1),W
     01A2 0903                      1- 1991     	BTRSS	STATUS,2
                                    1- 1992     	MGOTO	_00945_DS_
     01A3 3rrr                      3-   63 m1      LGOTO rom_address
     01A4 2154                      1- 1993     	MOVIA	0x54
     01A5 04rr                      1- 1994     	SUBAR	_R_AIN2_DATA,W
     01A6                           1- 1995     _00945_DS_:
     01A6 0C03                      1- 1996     	BTRSC	STATUS,0
                                    1- 1997     	MGOTO	_00731_DS_
     01A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1998     	.line	951, "main.c"; 	pwStep = 3;
     01A8 2103                      1- 1999     	MOVIA	0x03
                                    1- 2000     	BANKSEL	_pwStep
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 00rr                      1- 2001     	MOVAR	_pwStep
                                    1- 2002     	MGOTO	_00731_DS_
     01AB 3rrr                      3-   63 m1      LGOTO rom_address
     01AC                           1- 2003     _00730_DS_:
                                    1- 2004     	.line	954, "main.c"; 	pwStep = 3;
     01AC 2103                      1- 2005     	MOVIA	0x03
                                    1- 2006     	BANKSEL	_pwStep
     01AD rrrr                      3-  110 m1      .banksel ram_address
     01AE 00rr                      1- 2007     	MOVAR	_pwStep
     01AF                           1- 2008     _00731_DS_:
                                    1- 2009     	.line	955, "main.c"; 	chrgTime = 0;
                                    1- 2010     	BANKSEL	_chrgTime
     01AF rrrr                      3-  110 m1      .banksel ram_address
     01B0 02rr                      1- 2011     	CLRR	_chrgTime
     01B1 02rr                      1- 2012     	CLRR	(_chrgTime + 1)
                                    1- 2013     	MGOTO	_00765_DS_
     01B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2014     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2015     ;;unsigned compare: left >= lit (0xB5=181), size=2
     01B3                           1- 2016     _00752_DS_:
                                    1- 2017     	.line	957, "main.c"; 	else if(R_AIN2_DATA > 180)
     01B3 2100                      1- 2018     	MOVIA	0x00
                                    1- 2019     	BANKSEL	_R_AIN2_DATA
     01B4 rrrr                      3-  110 m1      .banksel ram_address
     01B5 04rr                      1- 2020     	SUBAR	(_R_AIN2_DATA + 1),W
     01B6 0903                      1- 2021     	BTRSS	STATUS,2
                                    1- 2022     	MGOTO	_00946_DS_
     01B7 3rrr                      3-   63 m1      LGOTO rom_address
     01B8 21B5                      1- 2023     	MOVIA	0xb5
     01B9 04rr                      1- 2024     	SUBAR	_R_AIN2_DATA,W
     01BA                           1- 2025     _00946_DS_:
                                    1- 2026     	BANKSEL	r0x104B
     01BA rrrr                      3-  110 m1      .banksel ram_address
     01BB 02rr                      1- 2027     	CLRR	r0x104B
     01BC 14rr                      1- 2028     	RLR	r0x104B,F
     01BD 01rr                      1- 2029     	MOVR	r0x104B,W
     01BE 0D03                      1- 2030     	BTRSC	STATUS,2
                                    1- 2031     	MGOTO	_00749_DS_
     01BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2032     	.line	960, "main.c"; 	if(pwStep == 1)
                                    1- 2033     	BANKSEL	_pwStep
     01C0 rrrr                      3-  110 m1      .banksel ram_address
     01C1 01rr                      1- 2034     	MOVR	_pwStep,W
     01C2 2401                      1- 2035     	XORIA	0x01
     01C3 0903                      1- 2036     	BTRSS	STATUS,2
                                    1- 2037     	MGOTO	_00735_DS_
     01C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2038     	.line	962, "main.c"; 	if(R_AIN2_DATA > 180)
                                    1- 2039     	BANKSEL	r0x104B
     01C5 rrrr                      3-  110 m1      .banksel ram_address
     01C6 01rr                      1- 2040     	MOVR	r0x104B,W
     01C7 0D03                      1- 2041     	BTRSC	STATUS,2
                                    1- 2042     	MGOTO	_00735_DS_
     01C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2043     	.line	963, "main.c"; 	pwStep = 2;
     01C9 2102                      1- 2044     	MOVIA	0x02
                                    1- 2045     	BANKSEL	_pwStep
     01CA rrrr                      3-  110 m1      .banksel ram_address
     01CB 00rr                      1- 2046     	MOVAR	_pwStep
                                    1- 2047     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2048     ;;unsigned compare: left >= lit (0x3=3), size=1
     01CC                           1- 2049     _00735_DS_:
                                    1- 2050     	.line	965, "main.c"; 	if(pwStep > 2)
     01CC 2103                      1- 2051     	MOVIA	0x03
                                    1- 2052     	BANKSEL	_pwStep
     01CD rrrr                      3-  110 m1      .banksel ram_address
     01CE 04rr                      1- 2053     	SUBAR	_pwStep,W
     01CF 0803                      1- 2054     	BTRSS	STATUS,0
                                    1- 2055     	MGOTO	_00739_DS_
     01D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2056     ;;unsigned compare: left < lit (0xF0=240), size=2
                                    1- 2057     	.line	967, "main.c"; 	if(R_AIN2_DATA < 240)
     01D1 2100                      1- 2058     	MOVIA	0x00
                                    1- 2059     	BANKSEL	_R_AIN2_DATA
     01D2 rrrr                      3-  110 m1      .banksel ram_address
     01D3 04rr                      1- 2060     	SUBAR	(_R_AIN2_DATA + 1),W
     01D4 0903                      1- 2061     	BTRSS	STATUS,2
                                    1- 2062     	MGOTO	_00948_DS_
     01D5 3rrr                      3-   63 m1      LGOTO rom_address
     01D6 21F0                      1- 2063     	MOVIA	0xf0
     01D7 04rr                      1- 2064     	SUBAR	_R_AIN2_DATA,W
     01D8                           1- 2065     _00948_DS_:
     01D8 0C03                      1- 2066     	BTRSC	STATUS,0
                                    1- 2067     	MGOTO	_00740_DS_
     01D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2068     	.line	968, "main.c"; 	pwStep = 2;
     01DA 2102                      1- 2069     	MOVIA	0x02
                                    1- 2070     	BANKSEL	_pwStep
     01DB rrrr                      3-  110 m1      .banksel ram_address
     01DC 00rr                      1- 2071     	MOVAR	_pwStep
                                    1- 2072     	MGOTO	_00740_DS_
     01DD 3rrr                      3-   63 m1      LGOTO rom_address
     01DE                           1- 2073     _00739_DS_:
                                    1- 2074     	.line	971, "main.c"; 	pwStep = 2;
     01DE 2102                      1- 2075     	MOVIA	0x02
                                    1- 2076     	BANKSEL	_pwStep
     01DF rrrr                      3-  110 m1      .banksel ram_address
     01E0 00rr                      1- 2077     	MOVAR	_pwStep
     01E1                           1- 2078     _00740_DS_:
                                    1- 2079     	.line	972, "main.c"; 	chrgTime = 0;
                                    1- 2080     	BANKSEL	_chrgTime
     01E1 rrrr                      3-  110 m1      .banksel ram_address
     01E2 02rr                      1- 2081     	CLRR	_chrgTime
     01E3 02rr                      1- 2082     	CLRR	(_chrgTime + 1)
                                    1- 2083     	MGOTO	_00765_DS_
     01E4 3rrr                      3-   63 m1      LGOTO rom_address
     01E5                           1- 2084     _00749_DS_:
                                    1- 2085     	.line	974, "main.c"; 	else  if(R_AIN2_DATA > 0)
                                    1- 2086     	BANKSEL	_R_AIN2_DATA
     01E5 rrrr                      3-  110 m1      .banksel ram_address
     01E6 01rr                      1- 2087     	MOVR	_R_AIN2_DATA,W
     01E7 11rr                      1- 2088     	IORAR	(_R_AIN2_DATA + 1),W
     01E8 0D03                      1- 2089     	BTRSC	STATUS,2
                                    1- 2090     	MGOTO	_00765_DS_
     01E9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2091     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2092     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2093     	.line	977, "main.c"; 	if(pwStep > 1)
     01EA 2102                      1- 2094     	MOVIA	0x02
                                    1- 2095     	BANKSEL	_pwStep
     01EB rrrr                      3-  110 m1      .banksel ram_address
     01EC 04rr                      1- 2096     	SUBAR	_pwStep,W
     01ED 0803                      1- 2097     	BTRSS	STATUS,0
                                    1- 2098     	MGOTO	_00744_DS_
     01EE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2099     ;;unsigned compare: left < lit (0xAA=170), size=2
                                    1- 2100     	.line	979, "main.c"; 	if(R_AIN2_DATA < 170)
     01EF 2100                      1- 2101     	MOVIA	0x00
                                    1- 2102     	BANKSEL	_R_AIN2_DATA
     01F0 rrrr                      3-  110 m1      .banksel ram_address
     01F1 04rr                      1- 2103     	SUBAR	(_R_AIN2_DATA + 1),W
     01F2 0903                      1- 2104     	BTRSS	STATUS,2
                                    1- 2105     	MGOTO	_00950_DS_
     01F3 3rrr                      3-   63 m1      LGOTO rom_address
     01F4 21AA                      1- 2106     	MOVIA	0xaa
     01F5 04rr                      1- 2107     	SUBAR	_R_AIN2_DATA,W
     01F6                           1- 2108     _00950_DS_:
     01F6 0C03                      1- 2109     	BTRSC	STATUS,0
                                    1- 2110     	MGOTO	_00745_DS_
     01F7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2111     	.line	980, "main.c"; 	pwStep = 1;
     01F8 2101                      1- 2112     	MOVIA	0x01
                                    1- 2113     	BANKSEL	_pwStep
     01F9 rrrr                      3-  110 m1      .banksel ram_address
     01FA 00rr                      1- 2114     	MOVAR	_pwStep
                                    1- 2115     	MGOTO	_00745_DS_
     01FB 3rrr                      3-   63 m1      LGOTO rom_address
     01FC                           1- 2116     _00744_DS_:
                                    1- 2117     	.line	983, "main.c"; 	pwStep = 1;
     01FC 2101                      1- 2118     	MOVIA	0x01
                                    1- 2119     	BANKSEL	_pwStep
     01FD rrrr                      3-  110 m1      .banksel ram_address
     01FE 00rr                      1- 2120     	MOVAR	_pwStep
     01FF                           1- 2121     _00745_DS_:
                                    1- 2122     	.line	984, "main.c"; 	chrgTime = 0;
                                    1- 2123     	BANKSEL	_chrgTime
     01FF rrrr                      3-  110 m1      .banksel ram_address
     0200 02rr                      1- 2124     	CLRR	_chrgTime
     0201 02rr                      1- 2125     	CLRR	(_chrgTime + 1)
     0202                           1- 2126     _00765_DS_:
                                    1- 2127     	.line	986, "main.c"; 	if(PORTA & 0x08)
                                    1- 2128     	BANKSEL	_PORTA
     0202 rrrr                      3-  110 m1      .banksel ram_address
     0203 09rr                      1- 2129     	BTRSS	_PORTA,3
                                    1- 2130     	MGOTO	_00771_DS_
     0204 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2131     	.line	988, "main.c"; 	if(pwStep > prePwStep)
                                    1- 2132     	BANKSEL	_pwStep
     0205 rrrr                      3-  110 m1      .banksel ram_address
     0206 01rr                      1- 2133     	MOVR	_pwStep,W
                                    1- 2134     	BANKSEL	_prePwStep
     0207 rrrr                      3-  110 m1      .banksel ram_address
     0208 04rr                      1- 2135     	SUBAR	_prePwStep,W
     0209 0C03                      1- 2136     	BTRSC	STATUS,0
                                    1- 2137     	MGOTO	_00772_DS_
     020A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2138     	.line	989, "main.c"; 	prePwStep = pwStep;
                                    1- 2139     	BANKSEL	_pwStep
     020B rrrr                      3-  110 m1      .banksel ram_address
     020C 01rr                      1- 2140     	MOVR	_pwStep,W
                                    1- 2141     	BANKSEL	_prePwStep
     020D rrrr                      3-  110 m1      .banksel ram_address
     020E 00rr                      1- 2142     	MOVAR	_prePwStep
                                    1- 2143     	MGOTO	_00772_DS_
     020F 3rrr                      3-   63 m1      LGOTO rom_address
     0210                           1- 2144     _00771_DS_:
                                    1- 2145     	.line	993, "main.c"; 	if(pwStep < prePwStep)
                                    1- 2146     	BANKSEL	_prePwStep
     0210 rrrr                      3-  110 m1      .banksel ram_address
     0211 01rr                      1- 2147     	MOVR	_prePwStep,W
                                    1- 2148     	BANKSEL	_pwStep
     0212 rrrr                      3-  110 m1      .banksel ram_address
     0213 04rr                      1- 2149     	SUBAR	_pwStep,W
     0214 0C03                      1- 2150     	BTRSC	STATUS,0
                                    1- 2151     	MGOTO	_00772_DS_
     0215 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2152     	.line	994, "main.c"; 	prePwStep = pwStep;
     0216 01rr                      1- 2153     	MOVR	_pwStep,W
                                    1- 2154     	BANKSEL	_prePwStep
     0217 rrrr                      3-  110 m1      .banksel ram_address
     0218 00rr                      1- 2155     	MOVAR	_prePwStep
     0219                           1- 2156     _00772_DS_:
                                    1- 2157     	.line	996, "main.c"; 	if(prePwStep > 0)
                                    1- 2158     	BANKSEL	_prePwStep
     0219 rrrr                      3-  110 m1      .banksel ram_address
     021A 01rr                      1- 2159     	MOVR	_prePwStep,W
     021B 0D03                      1- 2160     	BTRSC	STATUS,2
                                    1- 2161     	MGOTO	_00775_DS_
     021C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2162     	.line	997, "main.c"; 	pwStep = prePwStep;
     021D 01rr                      1- 2163     	MOVR	_prePwStep,W
                                    1- 2164     	BANKSEL	_pwStep
     021E rrrr                      3-  110 m1      .banksel ram_address
     021F 00rr                      1- 2165     	MOVAR	_pwStep
     0220                           1- 2166     _00775_DS_:
                                    1- 2167     	.line	999, "main.c"; 	}
                                    1- 2168     	RETURN	
     0220 0010                      3-   40 m1      ret
                                    1- 2169     ; exit point of _checkBatAD
                                    1- 2171     ;***
                                    1- 2172     ;  pBlock Stats: dbName = C
                                    1- 2173     ;***
                                    1- 2174     ;has an exit
                                    1- 2175     ;functions called:
                                    1- 2176     ;   _delay
                                    1- 2177     ;   _delay
                                    1- 2178     ;; Starting pCode block
                                    1- 2179     .segment "code"; module=main, function=_initAD
     0000                           1- 2181     _initAD:
                                    1- 2182     ; 2 exit points
                                    1- 2183     	.line	806, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2184     	MOVIA	0x84
     0001 00rr                      1- 2185     	MOVAR	_ADMD
                                    1- 2186     	.line	811, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2187     	CLRR	_ADVREFH
                                    1- 2188     	.line	816, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2189     	MOVIA	0x10
     0004 00rr                      1- 2190     	MOVAR	_ADR
                                    1- 2191     	.line	818, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2192     	MOVIA	0x03
     0006 00rr                      1- 2193     	MOVAR	_ADCR
                                    1- 2194     	.line	821, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2195     	BSR	_ADMDbits,4
                                    1- 2196     	.line	822, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2197     	MOVIA	0x64
                                    1- 2198     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2199     	.line	825, "main.c"; 	}
                                    1- 2200     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2201     ; exit point of _initAD
                                    1- 2203     ;***
                                    1- 2204     ;  pBlock Stats: dbName = C
                                    1- 2205     ;***
                                    1- 2206     ;has an exit
                                    1- 2207     ;2 compiler assigned registers:
                                    1- 2208     ;   r0x1033
                                    1- 2209     ;   r0x1034
                                    1- 2210     ;; Starting pCode block
                                    1- 2211     .segment "code"; module=main, function=_delay
                                    1- 2213     ;local variable name mapping:
     0000                           1- 2216     _delay:
                                    1- 2217     ; 2 exit points
                                    1- 2218     	.line	796, "main.c"; 	void delay(u8t time)
                                    1- 2219     	BANKSEL	r0x1033
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2220     	MOVAR	r0x1033
                                    1- 2221     	.line	798, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2222     	BANKSEL	r0x1034
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2223     	CLRR	r0x1034
     0004                           1- 2224     _00656_DS_:
                                    1- 2225     	BANKSEL	r0x1033
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2226     	MOVR	r0x1033,W
                                    1- 2227     	BANKSEL	r0x1034
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2228     	SUBAR	r0x1034,W
     0008 0C03                      1- 2229     	BTRSC	STATUS,0
                                    1- 2230     	MGOTO	_00658_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2231     	.line	799, "main.c"; 	NOP();
     000A 0000                      1- 2232     	nop
                                    1- 2233     	.line	798, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2234     	BANKSEL	r0x1034
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2235     	INCR	r0x1034,F
                                    1- 2236     	MGOTO	_00656_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2237     _00658_DS_:
                                    1- 2238     	.line	800, "main.c"; 	}
                                    1- 2239     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2240     ; exit point of _delay
                                    1- 2242     ;***
                                    1- 2243     ;  pBlock Stats: dbName = C
                                    1- 2244     ;***
                                    1- 2245     ;has an exit
                                    1- 2246     ;functions called:
                                    1- 2247     ;   _pwmStop
                                    1- 2248     ;   _pwm1Stop
                                    1- 2249     ;   _pwm1Init
                                    1- 2250     ;   _pwm1Stop
                                    1- 2251     ;   _pwmStop
                                    1- 2252     ;   _pwm1Stop
                                    1- 2253     ;   _pwm1Init
                                    1- 2254     ;   _pwm1Stop
                                    1- 2255     ;5 compiler assigned registers:
                                    1- 2256     ;   r0x1050
                                    1- 2257     ;   r0x1051
                                    1- 2258     ;   r0x1052
                                    1- 2259     ;   r0x1053
                                    1- 2260     ;   r0x1054
                                    1- 2261     ;; Starting pCode block
                                    1- 2262     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2264     _chrgCtr:
                                    1- 2265     ; 2 exit points
                                    1- 2266     	.line	639, "main.c"; 	if(PORTA & 0x08)
                                    1- 2267     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 2268     	BTRSS	_PORTA,3
                                    1- 2269     	MGOTO	_00526_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2270     	.line	642, "main.c"; 	chrgFlag = 1;
                                    1- 2271     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 2272     	BSR	_Status,3
                                    1- 2273     	.line	643, "main.c"; 	workStep = 0;
                                    1- 2274     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2275     	CLRR	_workStep
                                    1- 2276     	.line	644, "main.c"; 	ledLightTime = 0;
                                    1- 2277     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 2278     	CLRR	_ledLightTime
                                    1- 2279     	.line	645, "main.c"; 	pwmStop();
                                    1- 2280     	MCALL	_pwmStop
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2281     ;;unsigned compare: left < lit (0x7=7), size=1
                                    1- 2282     	.line	647, "main.c"; 	if(pwStep >= 7)
     000A 2107                      1- 2283     	MOVIA	0x07
                                    1- 2284     	BANKSEL	_pwStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 2285     	SUBAR	_pwStep,W
     000D 0803                      1- 2286     	BTRSS	STATUS,0
                                    1- 2287     	MGOTO	_00521_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2288     	.line	649, "main.c"; 	chrgStep = 9;
     000F 2109                      1- 2289     	MOVIA	0x09
                                    1- 2290     	BANKSEL	_chrgStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2291     	MOVAR	_chrgStep
                                    1- 2292     	.line	651, "main.c"; 	ledStep = 6;
     0012 2106                      1- 2293     	MOVIA	0x06
                                    1- 2294     	BANKSEL	_ledStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 2295     	MOVAR	_ledStep
                                    1- 2296     	.line	652, "main.c"; 	if(pwStep == 8 && ++fullCount >= 100)
                                    1- 2297     	BANKSEL	_pwStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 2298     	MOVR	_pwStep,W
     0017 2408                      1- 2299     	XORIA	0x08
     0018 0903                      1- 2300     	BTRSS	STATUS,2
                                    1- 2301     	MGOTO	_00455_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2302     	BANKSEL	_fullCount
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 2303     	INCR	_fullCount,F
     001C 0D03                      1- 2304     	BTRSC	STATUS,2
     001D 05rr                      1- 2305     	INCR	(_fullCount + 1),F
                                    1- 2306     ;;unsigned compare: left < lit (0x64=100), size=2
     001E 2100                      1- 2307     	MOVIA	0x00
     001F 04rr                      1- 2308     	SUBAR	(_fullCount + 1),W
     0020 0903                      1- 2309     	BTRSS	STATUS,2
                                    1- 2310     	MGOTO	_00627_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022 2164                      1- 2311     	MOVIA	0x64
     0023 04rr                      1- 2312     	SUBAR	_fullCount,W
     0024                           1- 2313     _00627_DS_:
     0024 0803                      1- 2314     	BTRSS	STATUS,0
                                    1- 2315     	MGOTO	_00455_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2316     	.line	654, "main.c"; 	fullCount = 100;
     0026 2164                      1- 2317     	MOVIA	0x64
                                    1- 2318     	BANKSEL	_fullCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 2319     	MOVAR	_fullCount
     0029 02rr                      1- 2320     	CLRR	(_fullCount + 1)
                                    1- 2321     	.line	655, "main.c"; 	pwm1Stop();
                                    1- 2322     	MCALL	_pwm1Stop
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2323     	.line	656, "main.c"; 	PORTB &= 0xF7;
     002B 1Drr                      1- 2324     	BCR	_PORTB,3
                                    1- 2325     	MGOTO	_00528_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1- 2326     _00455_DS_:
                                    1- 2327     	.line	660, "main.c"; 	PWM1DUTY = 24;
     002D 2118                      1- 2328     	MOVIA	0x18
     002E 00rr                      1- 2329     	SFUN	_PWM1DUTY
                                    1- 2330     	MGOTO	_00528_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 2331     _00521_DS_:
                                    1- 2332     	.line	669, "main.c"; 	IOSTB &= 0xF7;
     0030 001r                      1- 2333     	IOSTR	_IOSTB
                                    1- 2334     	BANKSEL	r0x1050
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2335     	MOVAR	r0x1050
     0033 1Drr                      1- 2336     	BCR	r0x1050,3
     0034 01rr                      1- 2337     	MOVR	r0x1050,W
     0035 000r                      1- 2338     	IOST	_IOSTB
                                    1- 2339     	.line	670, "main.c"; 	fullCount = 0;
                                    1- 2340     	BANKSEL	_fullCount
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2341     	CLRR	_fullCount
     0038 02rr                      1- 2342     	CLRR	(_fullCount + 1)
                                    1- 2343     	.line	671, "main.c"; 	if(count500ms == 0 && pwStep < 7 && chrgStep < 9)
                                    1- 2344     	BANKSEL	_count500ms
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 2345     	MOVR	_count500ms,W
     003B 0903                      1- 2346     	BTRSS	STATUS,2
                                    1- 2347     	MGOTO	_00466_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2348     ;;unsigned compare: left < lit (0x7=7), size=1
     003D 2107                      1- 2349     	MOVIA	0x07
                                    1- 2350     	BANKSEL	_pwStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 2351     	SUBAR	_pwStep,W
     0040 0C03                      1- 2352     	BTRSC	STATUS,0
                                    1- 2353     	MGOTO	_00466_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2354     ;;unsigned compare: left < lit (0x9=9), size=1
     0042 2109                      1- 2355     	MOVIA	0x09
                                    1- 2356     	BANKSEL	_chrgStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 04rr                      1- 2357     	SUBAR	_chrgStep,W
     0045 0C03                      1- 2358     	BTRSC	STATUS,0
                                    1- 2359     	MGOTO	_00466_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2360     	.line	673, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 2361     	BANKSEL	_pwStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1- 2362     	MOVR	_pwStep,W
                                    1- 2363     	BANKSEL	r0x1050
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2364     	MOVAR	r0x1050
                                    1- 2365     	BANKSEL	r0x1051
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2366     	CLRR	r0x1051
     004D 21FF                      1- 2367     	MOVIA	0xff
                                    1- 2368     	BANKSEL	r0x1050
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 03rr                      1- 2369     	ADDAR	r0x1050,F
     0050 0C03                      1- 2370     	BTRSC	STATUS,0
                                    1- 2371     	MGOTO	_00006_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2372     	BANKSEL	r0x1051
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 06rr                      1- 2373     	DECR	r0x1051,F
     0054                           1- 2374     _00006_DS_:
                                    1- 2375     	BANKSEL	_lockLedStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 2376     	MOVR	_lockLedStep,W
                                    1- 2377     	BANKSEL	r0x1052
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 2378     	MOVAR	r0x1052
                                    1- 2379     ;;1	CLRR	r0x1053
     0058 2100                      1- 2380     	MOVIA	0x00
     0059 2580                      1- 2381     	ADDIA	0x80
                                    1- 2382     	BANKSEL	r0x1054
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 2383     	MOVAR	r0x1054
                                    1- 2384     	BANKSEL	r0x1051
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 2385     	MOVR	r0x1051,W
     005E 2580                      1- 2386     	ADDIA	0x80
                                    1- 2387     	BANKSEL	r0x1054
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 04rr                      1- 2388     	SUBAR	r0x1054,W
     0061 0903                      1- 2389     	BTRSS	STATUS,2
                                    1- 2390     	MGOTO	_00630_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2391     	BANKSEL	r0x1050
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 2392     	MOVR	r0x1050,W
                                    1- 2393     	BANKSEL	r0x1052
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 2394     	SUBAR	r0x1052,W
     0067                           1- 2395     _00630_DS_:
     0067 0C03                      1- 2396     	BTRSC	STATUS,0
                                    1- 2397     	MGOTO	_00461_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2398     	.line	675, "main.c"; 	if(++lockLedTime > 20)
                                    1- 2399     	BANKSEL	_lockLedTime
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 05rr                      1- 2400     	INCR	_lockLedTime,F
                                    1- 2401     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2402     ;;unsigned compare: left >= lit (0x15=21), size=1
     006B 2115                      1- 2403     	MOVIA	0x15
     006C 04rr                      1- 2404     	SUBAR	_lockLedTime,W
     006D 0803                      1- 2405     	BTRSS	STATUS,0
                                    1- 2406     	MGOTO	_00462_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2407     	.line	676, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2408     	BANKSEL	_pwStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 06rr                      1- 2409     	DECR	_pwStep,W
                                    1- 2410     	BANKSEL	_lockLedStep
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 2411     	MOVAR	_lockLedStep
                                    1- 2412     	MGOTO	_00462_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074                           1- 2413     _00461_DS_:
                                    1- 2414     	.line	680, "main.c"; 	lockLedTime = 0;
                                    1- 2415     	BANKSEL	_lockLedTime
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 02rr                      1- 2416     	CLRR	_lockLedTime
     0076                           1- 2417     _00462_DS_:
                                    1- 2418     	.line	682, "main.c"; 	if(++ledStep > 6)
                                    1- 2419     	BANKSEL	_ledStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 05rr                      1- 2420     	INCR	_ledStep,F
                                    1- 2421     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2422     ;;unsigned compare: left >= lit (0x7=7), size=1
     0078 2107                      1- 2423     	MOVIA	0x07
     0079 04rr                      1- 2424     	SUBAR	_ledStep,W
     007A 0803                      1- 2425     	BTRSS	STATUS,0
                                    1- 2426     	MGOTO	_00466_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2427     	.line	683, "main.c"; 	ledStep = lockLedStep;
                                    1- 2428     	BANKSEL	_lockLedStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 2429     	MOVR	_lockLedStep,W
                                    1- 2430     	BANKSEL	_ledStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 2431     	MOVAR	_ledStep
     0080                           1- 2432     _00466_DS_:
                                    1- 2433     	.line	685, "main.c"; 	if(count1s == 0)
                                    1- 2434     	BANKSEL	_count1s
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 2435     	MOVR	_count1s,W
     0082 0903                      1- 2436     	BTRSS	STATUS,2
                                    1- 2437     	MGOTO	_00519_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2438     	.line	687, "main.c"; 	if(chrgStep > 0)
                                    1- 2439     	BANKSEL	_chrgStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1- 2440     	MOVR	_chrgStep,W
     0086 0D03                      1- 2441     	BTRSC	STATUS,2
                                    1- 2442     	MGOTO	_00516_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2443     ;;unsigned compare: left < lit (0x50=80), size=2
                                    1- 2444     	.line	689, "main.c"; 	if(R_AIN2_DATA < 80)
     0088 2100                      1- 2445     	MOVIA	0x00
                                    1- 2446     	BANKSEL	_R_AIN2_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 2447     	SUBAR	(_R_AIN2_DATA + 1),W
     008B 0903                      1- 2448     	BTRSS	STATUS,2
                                    1- 2449     	MGOTO	_00633_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D 2150                      1- 2450     	MOVIA	0x50
     008E 04rr                      1- 2451     	SUBAR	_R_AIN2_DATA,W
     008F                           1- 2452     _00633_DS_:
     008F 0C03                      1- 2453     	BTRSC	STATUS,0
                                    1- 2454     	MGOTO	_00504_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2455     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2456     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2457     	.line	691, "main.c"; 	if(chrgStep <= 1)
     0091 2102                      1- 2458     	MOVIA	0x02
                                    1- 2459     	BANKSEL	_chrgStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 04rr                      1- 2460     	SUBAR	_chrgStep,W
     0094 0C03                      1- 2461     	BTRSC	STATUS,0
                                    1- 2462     	MGOTO	_00519_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2463     	.line	693, "main.c"; 	chrgStep = 1;
     0096 2101                      1- 2464     	MOVIA	0x01
     0097 00rr                      1- 2465     	MOVAR	_chrgStep
                                    1- 2466     	.line	694, "main.c"; 	PWM1DUTY = 13;
     0098 210D                      1- 2467     	MOVIA	0x0d
     0099 00rr                      1- 2468     	SFUN	_PWM1DUTY
                                    1- 2469     	MGOTO	_00519_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2470     ;;unsigned compare: left < lit (0x6E=110), size=2
     009B                           1- 2471     _00504_DS_:
                                    1- 2472     	.line	697, "main.c"; 	else if(R_AIN2_DATA < 110)
     009B 2100                      1- 2473     	MOVIA	0x00
                                    1- 2474     	BANKSEL	_R_AIN2_DATA
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 04rr                      1- 2475     	SUBAR	(_R_AIN2_DATA + 1),W
     009E 0903                      1- 2476     	BTRSS	STATUS,2
                                    1- 2477     	MGOTO	_00635_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
     00A0 216E                      1- 2478     	MOVIA	0x6e
     00A1 04rr                      1- 2479     	SUBAR	_R_AIN2_DATA,W
     00A2                           1- 2480     _00635_DS_:
     00A2 0C03                      1- 2481     	BTRSC	STATUS,0
                                    1- 2482     	MGOTO	_00501_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2483     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2484     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 2485     	.line	699, "main.c"; 	if(chrgStep <= 2)
     00A4 2103                      1- 2486     	MOVIA	0x03
                                    1- 2487     	BANKSEL	_chrgStep
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 04rr                      1- 2488     	SUBAR	_chrgStep,W
     00A7 0C03                      1- 2489     	BTRSC	STATUS,0
                                    1- 2490     	MGOTO	_00519_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2491     	.line	701, "main.c"; 	chrgStep = 2;
     00A9 2102                      1- 2492     	MOVIA	0x02
     00AA 00rr                      1- 2493     	MOVAR	_chrgStep
                                    1- 2494     	.line	702, "main.c"; 	PWM1DUTY = 15;
     00AB 210F                      1- 2495     	MOVIA	0x0f
     00AC 00rr                      1- 2496     	SFUN	_PWM1DUTY
                                    1- 2497     	MGOTO	_00519_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2498     ;;unsigned compare: left < lit (0x96=150), size=2
     00AE                           1- 2499     _00501_DS_:
                                    1- 2500     	.line	705, "main.c"; 	else if(R_AIN2_DATA < 150)
     00AE 2100                      1- 2501     	MOVIA	0x00
                                    1- 2502     	BANKSEL	_R_AIN2_DATA
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 2503     	SUBAR	(_R_AIN2_DATA + 1),W
     00B1 0903                      1- 2504     	BTRSS	STATUS,2
                                    1- 2505     	MGOTO	_00637_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
     00B3 2196                      1- 2506     	MOVIA	0x96
     00B4 04rr                      1- 2507     	SUBAR	_R_AIN2_DATA,W
     00B5                           1- 2508     _00637_DS_:
     00B5 0C03                      1- 2509     	BTRSC	STATUS,0
                                    1- 2510     	MGOTO	_00498_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2511     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2512     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 2513     	.line	707, "main.c"; 	if(chrgStep <= 3)
     00B7 2104                      1- 2514     	MOVIA	0x04
                                    1- 2515     	BANKSEL	_chrgStep
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 2516     	SUBAR	_chrgStep,W
     00BA 0C03                      1- 2517     	BTRSC	STATUS,0
                                    1- 2518     	MGOTO	_00519_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2519     	.line	709, "main.c"; 	chrgStep = 3;
     00BC 2103                      1- 2520     	MOVIA	0x03
     00BD 00rr                      1- 2521     	MOVAR	_chrgStep
                                    1- 2522     	.line	710, "main.c"; 	PWM1DUTY = 18;
     00BE 2112                      1- 2523     	MOVIA	0x12
     00BF 00rr                      1- 2524     	SFUN	_PWM1DUTY
                                    1- 2525     	MGOTO	_00519_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2526     ;;unsigned compare: left < lit (0xBE=190), size=2
     00C1                           1- 2527     _00498_DS_:
                                    1- 2528     	.line	713, "main.c"; 	else if(R_AIN2_DATA < 190)
     00C1 2100                      1- 2529     	MOVIA	0x00
                                    1- 2530     	BANKSEL	_R_AIN2_DATA
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 04rr                      1- 2531     	SUBAR	(_R_AIN2_DATA + 1),W
     00C4 0903                      1- 2532     	BTRSS	STATUS,2
                                    1- 2533     	MGOTO	_00639_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6 21BE                      1- 2534     	MOVIA	0xbe
     00C7 04rr                      1- 2535     	SUBAR	_R_AIN2_DATA,W
     00C8                           1- 2536     _00639_DS_:
     00C8 0C03                      1- 2537     	BTRSC	STATUS,0
                                    1- 2538     	MGOTO	_00495_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2539     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2540     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2541     	.line	715, "main.c"; 	if(chrgStep <= 4)
     00CA 2105                      1- 2542     	MOVIA	0x05
                                    1- 2543     	BANKSEL	_chrgStep
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 04rr                      1- 2544     	SUBAR	_chrgStep,W
     00CD 0C03                      1- 2545     	BTRSC	STATUS,0
                                    1- 2546     	MGOTO	_00519_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2547     	.line	717, "main.c"; 	chrgStep = 4;
     00CF 2104                      1- 2548     	MOVIA	0x04
     00D0 00rr                      1- 2549     	MOVAR	_chrgStep
                                    1- 2550     	.line	718, "main.c"; 	PWM1DUTY = 19;
     00D1 2113                      1- 2551     	MOVIA	0x13
     00D2 00rr                      1- 2552     	SFUN	_PWM1DUTY
                                    1- 2553     	MGOTO	_00519_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2554     ;;unsigned compare: left < lit (0x104=260), size=2
     00D4                           1- 2555     _00495_DS_:
                                    1- 2556     	.line	721, "main.c"; 	else if(R_AIN2_DATA < 260)
     00D4 2101                      1- 2557     	MOVIA	0x01
                                    1- 2558     	BANKSEL	_R_AIN2_DATA
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 04rr                      1- 2559     	SUBAR	(_R_AIN2_DATA + 1),W
     00D7 0903                      1- 2560     	BTRSS	STATUS,2
                                    1- 2561     	MGOTO	_00641_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
     00D9 2104                      1- 2562     	MOVIA	0x04
     00DA 04rr                      1- 2563     	SUBAR	_R_AIN2_DATA,W
     00DB                           1- 2564     _00641_DS_:
     00DB 0C03                      1- 2565     	BTRSC	STATUS,0
                                    1- 2566     	MGOTO	_00492_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2567     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2568     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2569     	.line	723, "main.c"; 	if(chrgStep <= 5)
     00DD 2106                      1- 2570     	MOVIA	0x06
                                    1- 2571     	BANKSEL	_chrgStep
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 04rr                      1- 2572     	SUBAR	_chrgStep,W
     00E0 0C03                      1- 2573     	BTRSC	STATUS,0
                                    1- 2574     	MGOTO	_00519_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2575     	.line	725, "main.c"; 	chrgStep = 5;
     00E2 2105                      1- 2576     	MOVIA	0x05
     00E3 00rr                      1- 2577     	MOVAR	_chrgStep
                                    1- 2578     	.line	726, "main.c"; 	PWM1DUTY = 20;
     00E4 2114                      1- 2579     	MOVIA	0x14
     00E5 00rr                      1- 2580     	SFUN	_PWM1DUTY
                                    1- 2581     	MGOTO	_00519_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2582     ;;unsigned compare: left < lit (0x136=310), size=2
     00E7                           1- 2583     _00492_DS_:
                                    1- 2584     	.line	729, "main.c"; 	else if(R_AIN2_DATA < 310)
     00E7 2101                      1- 2585     	MOVIA	0x01
                                    1- 2586     	BANKSEL	_R_AIN2_DATA
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 04rr                      1- 2587     	SUBAR	(_R_AIN2_DATA + 1),W
     00EA 0903                      1- 2588     	BTRSS	STATUS,2
                                    1- 2589     	MGOTO	_00643_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
     00EC 2136                      1- 2590     	MOVIA	0x36
     00ED 04rr                      1- 2591     	SUBAR	_R_AIN2_DATA,W
     00EE                           1- 2592     _00643_DS_:
     00EE 0C03                      1- 2593     	BTRSC	STATUS,0
                                    1- 2594     	MGOTO	_00489_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2595     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2596     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2597     	.line	731, "main.c"; 	if(chrgStep <= 6)
     00F0 2107                      1- 2598     	MOVIA	0x07
                                    1- 2599     	BANKSEL	_chrgStep
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 04rr                      1- 2600     	SUBAR	_chrgStep,W
     00F3 0C03                      1- 2601     	BTRSC	STATUS,0
                                    1- 2602     	MGOTO	_00519_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2603     	.line	733, "main.c"; 	chrgStep = 6;
     00F5 2106                      1- 2604     	MOVIA	0x06
     00F6 00rr                      1- 2605     	MOVAR	_chrgStep
                                    1- 2606     	.line	734, "main.c"; 	PWM1DUTY = 21;
     00F7 2115                      1- 2607     	MOVIA	0x15
     00F8 00rr                      1- 2608     	SFUN	_PWM1DUTY
                                    1- 2609     	MGOTO	_00519_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2610     ;;unsigned compare: left < lit (0x154=340), size=2
     00FA                           1- 2611     _00489_DS_:
                                    1- 2612     	.line	737, "main.c"; 	else if(R_AIN2_DATA < 340)
     00FA 2101                      1- 2613     	MOVIA	0x01
                                    1- 2614     	BANKSEL	_R_AIN2_DATA
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 04rr                      1- 2615     	SUBAR	(_R_AIN2_DATA + 1),W
     00FD 0903                      1- 2616     	BTRSS	STATUS,2
                                    1- 2617     	MGOTO	_00645_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
     00FF 2154                      1- 2618     	MOVIA	0x54
     0100 04rr                      1- 2619     	SUBAR	_R_AIN2_DATA,W
     0101                           1- 2620     _00645_DS_:
     0101 0C03                      1- 2621     	BTRSC	STATUS,0
                                    1- 2622     	MGOTO	_00486_DS_
     0102 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2623     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2624     ;;unsigned compare: left >= lit (0x8=8), size=1
                                    1- 2625     	.line	739, "main.c"; 	if(chrgStep <= 7)
     0103 2108                      1- 2626     	MOVIA	0x08
                                    1- 2627     	BANKSEL	_chrgStep
     0104 rrrr                      3-  110 m1      .banksel ram_address
     0105 04rr                      1- 2628     	SUBAR	_chrgStep,W
     0106 0C03                      1- 2629     	BTRSC	STATUS,0
                                    1- 2630     	MGOTO	_00519_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2631     	.line	741, "main.c"; 	chrgStep = 7;
     0108 2107                      1- 2632     	MOVIA	0x07
     0109 00rr                      1- 2633     	MOVAR	_chrgStep
                                    1- 2634     	.line	742, "main.c"; 	PWM1DUTY = 22;
     010A 2116                      1- 2635     	MOVIA	0x16
     010B 00rr                      1- 2636     	SFUN	_PWM1DUTY
                                    1- 2637     	MGOTO	_00519_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2638     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2639     ;;unsigned compare: left >= lit (0x9=9), size=1
     010D                           1- 2640     _00486_DS_:
                                    1- 2641     	.line	747, "main.c"; 	if(chrgStep <= 8)
     010D 2109                      1- 2642     	MOVIA	0x09
                                    1- 2643     	BANKSEL	_chrgStep
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 04rr                      1- 2644     	SUBAR	_chrgStep,W
     0110 0C03                      1- 2645     	BTRSC	STATUS,0
                                    1- 2646     	MGOTO	_00519_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2647     	.line	749, "main.c"; 	chrgStep = 8;
     0112 2108                      1- 2648     	MOVIA	0x08
     0113 00rr                      1- 2649     	MOVAR	_chrgStep
                                    1- 2650     	.line	750, "main.c"; 	PWM1DUTY = 23;
     0114 2117                      1- 2651     	MOVIA	0x17
     0115 00rr                      1- 2652     	SFUN	_PWM1DUTY
                                    1- 2653     	MGOTO	_00519_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
     0117                           1- 2654     _00516_DS_:
                                    1- 2655     	.line	757, "main.c"; 	if(++currentChrgPWMDuty >= 11)
                                    1- 2656     	BANKSEL	_currentChrgPWMDuty
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 05rr                      1- 2657     	INCR	_currentChrgPWMDuty,F
                                    1- 2658     ;;unsigned compare: left < lit (0xB=11), size=1
     0119 210B                      1- 2659     	MOVIA	0x0b
     011A 04rr                      1- 2660     	SUBAR	_currentChrgPWMDuty,W
     011B 0803                      1- 2661     	BTRSS	STATUS,0
                                    1- 2662     	MGOTO	_00514_DS_
     011C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2663     	.line	759, "main.c"; 	currentChrgPWMDuty = 11;
     011D 210B                      1- 2664     	MOVIA	0x0b
     011E 00rr                      1- 2665     	MOVAR	_currentChrgPWMDuty
                                    1- 2666     ;;unsigned compare: left < lit (0xC8=200), size=2
                                    1- 2667     	.line	760, "main.c"; 	if(R_AIN2_DATA < 200)
     011F 2100                      1- 2668     	MOVIA	0x00
                                    1- 2669     	BANKSEL	_R_AIN2_DATA
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 04rr                      1- 2670     	SUBAR	(_R_AIN2_DATA + 1),W
     0122 0903                      1- 2671     	BTRSS	STATUS,2
                                    1- 2672     	MGOTO	_00649_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
     0124 21C8                      1- 2673     	MOVIA	0xc8
     0125 04rr                      1- 2674     	SUBAR	_R_AIN2_DATA,W
     0126                           1- 2675     _00649_DS_:
     0126 0C03                      1- 2676     	BTRSC	STATUS,0
                                    1- 2677     	MGOTO	_00511_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2678     	.line	762, "main.c"; 	if(++chrgDutyTime > 100)
                                    1- 2679     	BANKSEL	_chrgDutyTime
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 05rr                      1- 2680     	INCR	_chrgDutyTime,F
                                    1- 2681     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2682     ;;unsigned compare: left >= lit (0x65=101), size=1
     012A 2165                      1- 2683     	MOVIA	0x65
     012B 04rr                      1- 2684     	SUBAR	_chrgDutyTime,W
     012C 0803                      1- 2685     	BTRSS	STATUS,0
                                    1- 2686     	MGOTO	_00514_DS_
     012D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2687     	.line	763, "main.c"; 	chrgStep = 1;
     012E 2101                      1- 2688     	MOVIA	0x01
                                    1- 2689     	BANKSEL	_chrgStep
     012F rrrr                      3-  110 m1      .banksel ram_address
     0130 00rr                      1- 2690     	MOVAR	_chrgStep
                                    1- 2691     	MGOTO	_00514_DS_
     0131 3rrr                      3-   63 m1      LGOTO rom_address
     0132                           1- 2692     _00511_DS_:
                                    1- 2693     	.line	767, "main.c"; 	if(++chrgDutyTime > 20)
                                    1- 2694     	BANKSEL	_chrgDutyTime
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 05rr                      1- 2695     	INCR	_chrgDutyTime,F
                                    1- 2696     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2697     ;;unsigned compare: left >= lit (0x15=21), size=1
     0134 2115                      1- 2698     	MOVIA	0x15
     0135 04rr                      1- 2699     	SUBAR	_chrgDutyTime,W
     0136 0803                      1- 2700     	BTRSS	STATUS,0
                                    1- 2701     	MGOTO	_00514_DS_
     0137 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2702     	.line	768, "main.c"; 	chrgStep = 1;
     0138 2101                      1- 2703     	MOVIA	0x01
                                    1- 2704     	BANKSEL	_chrgStep
     0139 rrrr                      3-  110 m1      .banksel ram_address
     013A 00rr                      1- 2705     	MOVAR	_chrgStep
     013B                           1- 2706     _00514_DS_:
                                    1- 2707     	.line	772, "main.c"; 	PWM1DUTY = currentChrgPWMDuty;
                                    1- 2708     	BANKSEL	_currentChrgPWMDuty
     013B rrrr                      3-  110 m1      .banksel ram_address
     013C 01rr                      1- 2709     	MOVR	_currentChrgPWMDuty,W
     013D 00rr                      1- 2710     	SFUN	_PWM1DUTY
     013E                           1- 2711     _00519_DS_:
                                    1- 2712     	.line	775, "main.c"; 	pwm1Init();
                                    1- 2713     	MCALL	_pwm1Init
     013E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2714     	MGOTO	_00528_DS_
     013F 3rrr                      3-   63 m1      LGOTO rom_address
     0140                           1- 2715     _00526_DS_:
                                    1- 2716     	.line	781, "main.c"; 	currentChrgPWMDuty = 0;
                                    1- 2717     	BANKSEL	_currentChrgPWMDuty
     0140 rrrr                      3-  110 m1      .banksel ram_address
     0141 02rr                      1- 2718     	CLRR	_currentChrgPWMDuty
                                    1- 2719     	.line	782, "main.c"; 	chrgStep = 0;
                                    1- 2720     	BANKSEL	_chrgStep
     0142 rrrr                      3-  110 m1      .banksel ram_address
     0143 02rr                      1- 2721     	CLRR	_chrgStep
                                    1- 2722     	.line	783, "main.c"; 	chrgDutyTime = 0;
                                    1- 2723     	BANKSEL	_chrgDutyTime
     0144 rrrr                      3-  110 m1      .banksel ram_address
     0145 02rr                      1- 2724     	CLRR	_chrgDutyTime
                                    1- 2725     	.line	784, "main.c"; 	lockLedStep = 0;
                                    1- 2726     	BANKSEL	_lockLedStep
     0146 rrrr                      3-  110 m1      .banksel ram_address
     0147 02rr                      1- 2727     	CLRR	_lockLedStep
                                    1- 2728     	.line	785, "main.c"; 	chrgTime = 0;
                                    1- 2729     	BANKSEL	_chrgTime
     0148 rrrr                      3-  110 m1      .banksel ram_address
     0149 02rr                      1- 2730     	CLRR	_chrgTime
     014A 02rr                      1- 2731     	CLRR	(_chrgTime + 1)
                                    1- 2732     	.line	786, "main.c"; 	pwm1Stop();
                                    1- 2733     	MCALL	_pwm1Stop
     014B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2734     	.line	787, "main.c"; 	if(workStep == 0)
                                    1- 2735     	BANKSEL	_workStep
     014C rrrr                      3-  110 m1      .banksel ram_address
     014D 01rr                      1- 2736     	MOVR	_workStep,W
     014E 0903                      1- 2737     	BTRSS	STATUS,2
                                    1- 2738     	MGOTO	_00007_DS_
     014F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2739     	.line	788, "main.c"; 	ledStep = 0;
                                    1- 2740     	BANKSEL	_ledStep
     0150 rrrr                      3-  110 m1      .banksel ram_address
     0151 02rr                      1- 2741     	CLRR	_ledStep
     0152                           1- 2742     _00007_DS_:
                                    1- 2743     	.line	789, "main.c"; 	chrgFlag = 0;
                                    1- 2744     	BANKSEL	_Status
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 1Drr                      1- 2745     	BCR	_Status,3
                                    1- 2746     	.line	790, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2747     	BANKSEL	_chrgTime
     0154 rrrr                      3-  110 m1      .banksel ram_address
     0155 02rr                      1- 2748     	CLRR	_chrgTime
     0156 02rr                      1- 2749     	CLRR	(_chrgTime + 1)
     0157                           1- 2750     _00528_DS_:
                                    1- 2751     	.line	793, "main.c"; 	}
                                    1- 2752     	RETURN	
     0157 0010                      3-   40 m1      ret
                                    1- 2753     ; exit point of _chrgCtr
                                    1- 2755     ;***
                                    1- 2756     ;  pBlock Stats: dbName = C
                                    1- 2757     ;***
                                    1- 2758     ;has an exit
                                    1- 2759     ;1 compiler assigned register :
                                    1- 2760     ;   r0x1055
                                    1- 2761     ;; Starting pCode block
                                    1- 2762     .segment "code"; module=main, function=_keyRead
                                    1- 2764     ;local variable name mapping:
     0000                           1- 2766     _keyRead:
                                    1- 2767     ; 2 exit points
                                    1- 2768     	.line	602, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2769     	BANKSEL	r0x1055
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2770     	MOVAR	r0x1055
                                    1- 2771     	.line	604, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2772     	MOVR	r0x1055,W
     0003 0D03                      1- 2773     	BTRSC	STATUS,2
                                    1- 2774     	MGOTO	_00447_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2775     	.line	606, "main.c"; 	keyCount++;
                                    1- 2776     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2777     	INCR	_keyCount,F
                                    1- 2778     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2779     	.line	607, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2780     	MOVIA	0x64
     0008 04rr                      1- 2781     	SUBAR	_keyCount,W
     0009 0803                      1- 2782     	BTRSS	STATUS,0
                                    1- 2783     	MGOTO	_00448_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2784     	.line	609, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2785     	MOVIA	0x64
     000C 00rr                      1- 2786     	MOVAR	_keyCount
                                    1- 2787     	.line	610, "main.c"; 	if(!longPressFlag)
                                    1- 2788     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2789     	BTRSC	_Status,1
                                    1- 2790     	MGOTO	_00448_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2791     	.line	612, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2792     	BSR	_Status,1
                                    1- 2793     	.line	613, "main.c"; 	return 2;
     0011 2102                      1- 2794     	MOVIA	0x02
                                    1- 2795     	MGOTO	_00449_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2796     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2797     _00447_DS_:
                                    1- 2798     	.line	619, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2799     	MOVIA	0x64
                                    1- 2800     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2801     	SUBAR	_keyCount,W
     0016 0803                      1- 2802     	BTRSS	STATUS,0
                                    1- 2803     	MGOTO	_00444_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2804     	.line	621, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2805     	CLRR	_keyCount
                                    1- 2806     	.line	622, "main.c"; 	longPressFlag = 0;
                                    1- 2807     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2808     	BCR	_Status,1
                                    1- 2809     	.line	623, "main.c"; 	return	0;
     001B 2100                      1- 2810     	MOVIA	0x00
                                    1- 2811     	MGOTO	_00449_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2812     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2813     _00444_DS_:
                                    1- 2814     	.line	625, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2815     	MOVIA	0x04
                                    1- 2816     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2817     	SUBAR	_keyCount,W
     0020 0803                      1- 2818     	BTRSS	STATUS,0
                                    1- 2819     	MGOTO	_00445_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2820     	.line	627, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2821     	CLRR	_keyCount
                                    1- 2822     	.line	628, "main.c"; 	return	1;
     0023 2101                      1- 2823     	MOVIA	0x01
                                    1- 2824     	MGOTO	_00449_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2825     _00445_DS_:
                                    1- 2826     	.line	630, "main.c"; 	keyCount = 0;
                                    1- 2827     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2828     	CLRR	_keyCount
     0027                           1- 2829     _00448_DS_:
                                    1- 2830     	.line	632, "main.c"; 	return 0;
     0027 2100                      1- 2831     	MOVIA	0x00
     0028                           1- 2832     _00449_DS_:
                                    1- 2833     	.line	633, "main.c"; 	}
                                    1- 2834     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2835     ; exit point of _keyRead
                                    1- 2837     ;***
                                    1- 2838     ;  pBlock Stats: dbName = C
                                    1- 2839     ;***
                                    1- 2840     ;has an exit
                                    1- 2841     ;functions called:
                                    1- 2842     ;   _LedInput
                                    1- 2843     ;   _pwmStop
                                    1- 2844     ;   _pwm1Stop
                                    1- 2845     ;   _LedInput
                                    1- 2846     ;   _pwmStop
                                    1- 2847     ;   _pwm1Stop
                                    1- 2848     ;; Starting pCode block
                                    1- 2849     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2851     _gotoSleep:
                                    1- 2852     ; 2 exit points
                                    1- 2853     	.line	566, "main.c"; 	count900s = 0;
                                    1- 2854     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2855     	CLRR	_count900s
     0002 02rr                      1- 2856     	CLRR	(_count900s + 1)
                                    1- 2857     	.line	567, "main.c"; 	LedInput();
                                    1- 2858     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2859     	.line	568, "main.c"; 	sleepTime = 0;
                                    1- 2860     	BANKSEL	_sleepTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2861     	CLRR	_sleepTime
     0006 02rr                      1- 2862     	CLRR	(_sleepTime + 1)
                                    1- 2863     	.line	570, "main.c"; 	pwmStop();
                                    1- 2864     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2865     	.line	571, "main.c"; 	pwm1Stop();
                                    1- 2866     	MCALL	_pwm1Stop
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2867     	.line	572, "main.c"; 	IOSTA = C_PA7_Input | C_PA3_Input;
     0009 2188                      1- 2868     	MOVIA	0x88
     000A 000r                      1- 2869     	IOST	_IOSTA
                                    1- 2870     	.line	573, "main.c"; 	IOSTB = 0X00;
     000B 0200                      1- 2871     	CLRA	
     000C 000r                      1- 2872     	IOST	_IOSTB
                                    1- 2873     	.line	574, "main.c"; 	PORTA = 0x00;
                                    1- 2874     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2875     	CLRR	_PORTA
                                    1- 2876     	.line	575, "main.c"; 	PORTB = 0x00;
     000F 02rr                      1- 2877     	CLRR	_PORTB
                                    1- 2878     	.line	576, "main.c"; 	workStep = 0;
                                    1- 2879     	BANKSEL	_workStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2880     	CLRR	_workStep
                                    1- 2881     	.line	577, "main.c"; 	AWUCON = 0x88;
     0012 2188                      1- 2882     	MOVIA	0x88
     0013 00rr                      1- 2883     	MOVAR	_AWUCON
                                    1- 2884     	.line	578, "main.c"; 	BWUCON = 0x00;
     0014 02rr                      1- 2885     	CLRR	_BWUCON
                                    1- 2886     	.line	579, "main.c"; 	redLedFlag = 0;
                                    1- 2887     	BANKSEL	_Status
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 1Drr                      1- 2888     	BCR	_Status,2
                                    1- 2889     	.line	582, "main.c"; 	INTE =  C_INT_PABKey;
     0017 2102                      1- 2890     	MOVIA	0x02
     0018 00rr                      1- 2891     	MOVAR	_INTE
                                    1- 2892     	.line	583, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0019 2118                      1- 2893     	MOVIA	0x18
     001A 00rr                      1- 2894     	MOVAR	_PCON
                                    1- 2895     	.line	584, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001B 02rr                      1- 2896     	CLRR	_INTF
                                    1- 2897     	.line	585, "main.c"; 	CLRWDT();
     001C 0002                      1- 2898     	clrwdt
                                    1- 2899     	.line	586, "main.c"; 	ENI();
     001D 0004                      1- 2900     	ENI
                                    1- 2901     	.line	587, "main.c"; 	SLEEP();
     001E 0001                      1- 2902     	sleep
                                    1- 2903     	.line	588, "main.c"; 	AWUCON = 0x00;
     001F 02rr                      1- 2904     	CLRR	_AWUCON
                                    1- 2905     	.line	589, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0020 21BE                      1- 2906     	MOVIA	0xbe
     0021 000r                      1- 2907     	IOST	_IOSTA
                                    1- 2908     	.line	590, "main.c"; 	IOSTB = 0x00;
     0022 0200                      1- 2909     	CLRA	
     0023 000r                      1- 2910     	IOST	_IOSTB
                                    1- 2911     	.line	591, "main.c"; 	PORTA = 0x00;
                                    1- 2912     	BANKSEL	_PORTA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 2913     	CLRR	_PORTA
                                    1- 2914     	.line	592, "main.c"; 	APHCON = 0x7F;
     0026 217F                      1- 2915     	MOVIA	0x7f
     0027 000r                      1- 2916     	IOST	_APHCON
                                    1- 2917     	.line	593, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0028 2101                      1- 2918     	MOVIA	0x01
     0029 00rr                      1- 2919     	MOVAR	_INTE
                                    1- 2920     	.line	594, "main.c"; 	INTF = 0;
     002A 02rr                      1- 2921     	CLRR	_INTF
                                    1- 2922     	.line	596, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002B 21B8                      1- 2923     	MOVIA	0xb8
     002C 00rr                      1- 2924     	MOVAR	_PCON
                                    1- 2925     	.line	599, "main.c"; 	}
                                    1- 2926     	RETURN	
     002D 0010                      3-   40 m1      ret
                                    1- 2927     ; exit point of _gotoSleep
                                    1- 2929     ;***
                                    1- 2930     ;  pBlock Stats: dbName = C
                                    1- 2931     ;***
                                    1- 2932     ;has an exit
                                    1- 2933     ;; Starting pCode block
                                    1- 2934     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2936     _pwmStop:
                                    1- 2937     ; 2 exit points
                                    1- 2938     	.line	559, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2939     	CLRA	
     0001 00rr                      1- 2940     	SFUN	_T2CR1
                                    1- 2941     	.line	560, "main.c"; 	}
                                    1- 2942     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2943     ; exit point of _pwmStop
                                    1- 2945     ;***
                                    1- 2946     ;  pBlock Stats: dbName = C
                                    1- 2947     ;***
                                    1- 2948     ;has an exit
                                    1- 2949     ;1 compiler assigned register :
                                    1- 2950     ;   r0x1057
                                    1- 2951     ;; Starting pCode block
                                    1- 2952     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2954     _pwmInit:
                                    1- 2955     ; 2 exit points
                                    1- 2956     	.line	547, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2957     	SFUNR	_T2CR1
                                    1- 2958     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2959     	MOVAR	r0x1057
     0003 0Frr                      1- 2960     	BTRSC	r0x1057,7
                                    1- 2961     	.line	548, "main.c"; 	return;
                                    1- 2962     	MGOTO	_00424_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2963     	.line	549, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2964     	CLRR	_TMRH
                                    1- 2965     	.line	550, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2966     	MOVIA	0x64
     0007 00rr                      1- 2967     	SFUN	_TMR2
                                    1- 2968     	.line	553, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2969     	MOVIA	0x01
     0009 00rr                      1- 2970     	SFUN	_T2CR2
                                    1- 2971     	.line	554, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2972     	MOVIA	0x83
     000B 00rr                      1- 2973     	SFUN	_T2CR1
     000C                           1- 2974     _00424_DS_:
                                    1- 2975     	.line	555, "main.c"; 	}
                                    1- 2976     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2977     ; exit point of _pwmInit
                                    1- 2979     ;***
                                    1- 2980     ;  pBlock Stats: dbName = C
                                    1- 2981     ;***
                                    1- 2982     ;has an exit
                                    1- 2983     ;; Starting pCode block
                                    1- 2984     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2986     _pwm1Stop:
                                    1- 2987     ; 2 exit points
                                    1- 2988     	.line	540, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2989     	CLRA	
     0001 00rr                      1- 2990     	SFUN	_T1CR1
                                    1- 2991     	.line	541, "main.c"; 	}
                                    1- 2992     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2993     ; exit point of _pwm1Stop
                                    1- 2995     ;***
                                    1- 2996     ;  pBlock Stats: dbName = C
                                    1- 2997     ;***
                                    1- 2998     ;has an exit
                                    1- 2999     ;1 compiler assigned register :
                                    1- 3000     ;   r0x104F
                                    1- 3001     ;; Starting pCode block
                                    1- 3002     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 3004     _pwm1Init:
                                    1- 3005     ; 2 exit points
                                    1- 3006     	.line	527, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 3007     	SFUNR	_T1CR1
                                    1- 3008     	BANKSEL	r0x104F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3009     	MOVAR	r0x104F
     0003 0Frr                      1- 3010     	BTRSC	r0x104F,7
                                    1- 3011     	.line	528, "main.c"; 	return;
                                    1- 3012     	MGOTO	_00413_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3013     	.line	529, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 3014     	CLRR	_TMRH
                                    1- 3015     	.line	530, "main.c"; 	TMR1 = 48;							//频率为110K
     0006 2130                      1- 3016     	MOVIA	0x30
     0007 00rr                      1- 3017     	SFUN	_TMR1
                                    1- 3018     	.line	533, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 3019     	CLRA	
     0009 00rr                      1- 3020     	SFUN	_T1CR2
                                    1- 3021     	.line	534, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 3022     	MOVIA	0x08
     000B 00rr                      1- 3023     	SFUN	_T1CR2
                                    1- 3024     	.line	535, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 3025     	MOVIA	0x83
     000D 00rr                      1- 3026     	SFUN	_T1CR1
     000E                           1- 3027     _00413_DS_:
                                    1- 3028     	.line	536, "main.c"; 	}
                                    1- 3029     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 3030     ; exit point of _pwm1Init
                                    1- 3032     ;***
                                    1- 3033     ;  pBlock Stats: dbName = C
                                    1- 3034     ;***
                                    1- 3035     ;has an exit
                                    1- 3036     ;functions called:
                                    1- 3037     ;   _delay
                                    1- 3038     ;   _LedInput
                                    1- 3039     ;   _delay
                                    1- 3040     ;   _LedInput
                                    1- 3041     ;1 compiler assigned register :
                                    1- 3042     ;   r0x1058
                                    1- 3043     ;; Starting pCode block
                                    1- 3044     .segment "code"; module=main, function=_LED6ON
     0000                           1- 3046     _LED6ON:
                                    1- 3047     ; 2 exit points
                                    1- 3048     	.line	517, "main.c"; 	L2OUT;
     0000 001r                      1- 3049     	IOSTR	_IOSTA
                                    1- 3050     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3051     	MOVAR	r0x1058
     0003 1Crr                      1- 3052     	BCR	r0x1058,0
     0004 01rr                      1- 3053     	MOVR	r0x1058,W
     0005 000r                      1- 3054     	IOST	_IOSTA
                                    1- 3055     	.line	518, "main.c"; 	L1OUT;
     0006 001r                      1- 3056     	IOSTR	_IOSTB
     0007 00rr                      1- 3057     	MOVAR	r0x1058
     0008 1Crr                      1- 3058     	BCR	r0x1058,1
     0009 01rr                      1- 3059     	MOVR	r0x1058,W
     000A 000r                      1- 3060     	IOST	_IOSTB
                                    1- 3061     	.line	519, "main.c"; 	L1H;
     000B 18rr                      1- 3062     	BSR	_PORTB,1
                                    1- 3063     	.line	520, "main.c"; 	L2L;
                                    1- 3064     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 3065     	BCR	_PORTA,0
                                    1- 3066     	.line	521, "main.c"; 	delay(100);
     000E 2164                      1- 3067     	MOVIA	0x64
                                    1- 3068     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3069     	.line	522, "main.c"; 	LedInput();
                                    1- 3070     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3071     	.line	523, "main.c"; 	}
                                    1- 3072     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3073     ; exit point of _LED6ON
                                    1- 3075     ;***
                                    1- 3076     ;  pBlock Stats: dbName = C
                                    1- 3077     ;***
                                    1- 3078     ;has an exit
                                    1- 3079     ;functions called:
                                    1- 3080     ;   _delay
                                    1- 3081     ;   _LedInput
                                    1- 3082     ;   _delay
                                    1- 3083     ;   _LedInput
                                    1- 3084     ;1 compiler assigned register :
                                    1- 3085     ;   r0x1059
                                    1- 3086     ;; Starting pCode block
                                    1- 3087     .segment "code"; module=main, function=_LED5ON
     0000                           1- 3089     _LED5ON:
                                    1- 3090     ; 2 exit points
                                    1- 3091     	.line	506, "main.c"; 	L2OUT;
     0000 001r                      1- 3092     	IOSTR	_IOSTA
                                    1- 3093     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3094     	MOVAR	r0x1059
     0003 1Crr                      1- 3095     	BCR	r0x1059,0
     0004 01rr                      1- 3096     	MOVR	r0x1059,W
     0005 000r                      1- 3097     	IOST	_IOSTA
                                    1- 3098     	.line	507, "main.c"; 	L1OUT;
     0006 001r                      1- 3099     	IOSTR	_IOSTB
     0007 00rr                      1- 3100     	MOVAR	r0x1059
     0008 1Crr                      1- 3101     	BCR	r0x1059,1
     0009 01rr                      1- 3102     	MOVR	r0x1059,W
     000A 000r                      1- 3103     	IOST	_IOSTB
                                    1- 3104     	.line	508, "main.c"; 	L2H;
                                    1- 3105     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 3106     	BSR	_PORTA,0
                                    1- 3107     	.line	509, "main.c"; 	L1L;
     000D 1Crr                      1- 3108     	BCR	_PORTB,1
                                    1- 3109     	.line	510, "main.c"; 	delay(100);
     000E 2164                      1- 3110     	MOVIA	0x64
                                    1- 3111     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3112     	.line	511, "main.c"; 	LedInput();
                                    1- 3113     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3114     	.line	512, "main.c"; 	}
                                    1- 3115     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3116     ; exit point of _LED5ON
                                    1- 3118     ;***
                                    1- 3119     ;  pBlock Stats: dbName = C
                                    1- 3120     ;***
                                    1- 3121     ;has an exit
                                    1- 3122     ;functions called:
                                    1- 3123     ;   _delay
                                    1- 3124     ;   _LedInput
                                    1- 3125     ;   _delay
                                    1- 3126     ;   _LedInput
                                    1- 3127     ;1 compiler assigned register :
                                    1- 3128     ;   r0x105A
                                    1- 3129     ;; Starting pCode block
                                    1- 3130     .segment "code"; module=main, function=_LED4ON
     0000                           1- 3132     _LED4ON:
                                    1- 3133     ; 2 exit points
                                    1- 3134     	.line	496, "main.c"; 	L3OUT;
     0000 001r                      1- 3135     	IOSTR	_IOSTB
                                    1- 3136     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3137     	MOVAR	r0x105A
     0003 1Crr                      1- 3138     	BCR	r0x105A,0
     0004 01rr                      1- 3139     	MOVR	r0x105A,W
     0005 000r                      1- 3140     	IOST	_IOSTB
                                    1- 3141     	.line	497, "main.c"; 	L2OUT;
     0006 001r                      1- 3142     	IOSTR	_IOSTA
     0007 00rr                      1- 3143     	MOVAR	r0x105A
     0008 1Crr                      1- 3144     	BCR	r0x105A,0
     0009 01rr                      1- 3145     	MOVR	r0x105A,W
     000A 000r                      1- 3146     	IOST	_IOSTA
                                    1- 3147     	.line	498, "main.c"; 	L3H;
     000B 18rr                      1- 3148     	BSR	_PORTB,0
                                    1- 3149     	.line	499, "main.c"; 	L2L;
                                    1- 3150     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 3151     	BCR	_PORTA,0
                                    1- 3152     	.line	500, "main.c"; 	delay(100);
     000E 2164                      1- 3153     	MOVIA	0x64
                                    1- 3154     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3155     	.line	501, "main.c"; 	LedInput();
                                    1- 3156     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3157     	.line	502, "main.c"; 	}
                                    1- 3158     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3159     ; exit point of _LED4ON
                                    1- 3161     ;***
                                    1- 3162     ;  pBlock Stats: dbName = C
                                    1- 3163     ;***
                                    1- 3164     ;has an exit
                                    1- 3165     ;functions called:
                                    1- 3166     ;   _delay
                                    1- 3167     ;   _LedInput
                                    1- 3168     ;   _delay
                                    1- 3169     ;   _LedInput
                                    1- 3170     ;1 compiler assigned register :
                                    1- 3171     ;   r0x105B
                                    1- 3172     ;; Starting pCode block
                                    1- 3173     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3175     _LED3ON:
                                    1- 3176     ; 2 exit points
                                    1- 3177     	.line	486, "main.c"; 	L3OUT;
     0000 001r                      1- 3178     	IOSTR	_IOSTB
                                    1- 3179     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3180     	MOVAR	r0x105B
     0003 1Crr                      1- 3181     	BCR	r0x105B,0
     0004 01rr                      1- 3182     	MOVR	r0x105B,W
     0005 000r                      1- 3183     	IOST	_IOSTB
                                    1- 3184     	.line	487, "main.c"; 	L1OUT;
     0006 001r                      1- 3185     	IOSTR	_IOSTB
     0007 00rr                      1- 3186     	MOVAR	r0x105B
     0008 1Crr                      1- 3187     	BCR	r0x105B,1
     0009 01rr                      1- 3188     	MOVR	r0x105B,W
     000A 000r                      1- 3189     	IOST	_IOSTB
                                    1- 3190     	.line	488, "main.c"; 	L1H;
     000B 18rr                      1- 3191     	BSR	_PORTB,1
                                    1- 3192     	.line	489, "main.c"; 	L3L;
     000C 1Crr                      1- 3193     	BCR	_PORTB,0
                                    1- 3194     	.line	490, "main.c"; 	delay(100);
     000D 2164                      1- 3195     	MOVIA	0x64
                                    1- 3196     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3197     	.line	491, "main.c"; 	LedInput();
                                    1- 3198     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3199     	.line	492, "main.c"; 	}
                                    1- 3200     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3201     ; exit point of _LED3ON
                                    1- 3203     ;***
                                    1- 3204     ;  pBlock Stats: dbName = C
                                    1- 3205     ;***
                                    1- 3206     ;has an exit
                                    1- 3207     ;functions called:
                                    1- 3208     ;   _delay
                                    1- 3209     ;   _LedInput
                                    1- 3210     ;   _delay
                                    1- 3211     ;   _LedInput
                                    1- 3212     ;1 compiler assigned register :
                                    1- 3213     ;   r0x105C
                                    1- 3214     ;; Starting pCode block
                                    1- 3215     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3217     _LED2ON:
                                    1- 3218     ; 2 exit points
                                    1- 3219     	.line	476, "main.c"; 	L2OUT;
     0000 001r                      1- 3220     	IOSTR	_IOSTA
                                    1- 3221     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3222     	MOVAR	r0x105C
     0003 1Crr                      1- 3223     	BCR	r0x105C,0
     0004 01rr                      1- 3224     	MOVR	r0x105C,W
     0005 000r                      1- 3225     	IOST	_IOSTA
                                    1- 3226     	.line	477, "main.c"; 	L3OUT;
     0006 001r                      1- 3227     	IOSTR	_IOSTB
     0007 00rr                      1- 3228     	MOVAR	r0x105C
     0008 1Crr                      1- 3229     	BCR	r0x105C,0
     0009 01rr                      1- 3230     	MOVR	r0x105C,W
     000A 000r                      1- 3231     	IOST	_IOSTB
                                    1- 3232     	.line	478, "main.c"; 	L2H;
                                    1- 3233     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 3234     	BSR	_PORTA,0
                                    1- 3235     	.line	479, "main.c"; 	L3L;
     000D 1Crr                      1- 3236     	BCR	_PORTB,0
                                    1- 3237     	.line	480, "main.c"; 	delay(100);
     000E 2164                      1- 3238     	MOVIA	0x64
                                    1- 3239     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3240     	.line	481, "main.c"; 	LedInput();
                                    1- 3241     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3242     	.line	482, "main.c"; 	}
                                    1- 3243     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3244     ; exit point of _LED2ON
                                    1- 3246     ;***
                                    1- 3247     ;  pBlock Stats: dbName = C
                                    1- 3248     ;***
                                    1- 3249     ;has an exit
                                    1- 3250     ;functions called:
                                    1- 3251     ;   _delay
                                    1- 3252     ;   _LedInput
                                    1- 3253     ;   _delay
                                    1- 3254     ;   _LedInput
                                    1- 3255     ;1 compiler assigned register :
                                    1- 3256     ;   r0x105D
                                    1- 3257     ;; Starting pCode block
                                    1- 3258     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3260     _LED1ON:
                                    1- 3261     ; 2 exit points
                                    1- 3262     	.line	466, "main.c"; 	L3OUT;
     0000 001r                      1- 3263     	IOSTR	_IOSTB
                                    1- 3264     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3265     	MOVAR	r0x105D
     0003 1Crr                      1- 3266     	BCR	r0x105D,0
     0004 01rr                      1- 3267     	MOVR	r0x105D,W
     0005 000r                      1- 3268     	IOST	_IOSTB
                                    1- 3269     	.line	467, "main.c"; 	L1OUT;
     0006 001r                      1- 3270     	IOSTR	_IOSTB
     0007 00rr                      1- 3271     	MOVAR	r0x105D
     0008 1Crr                      1- 3272     	BCR	r0x105D,1
     0009 01rr                      1- 3273     	MOVR	r0x105D,W
     000A 000r                      1- 3274     	IOST	_IOSTB
                                    1- 3275     	.line	468, "main.c"; 	L3H;
     000B 18rr                      1- 3276     	BSR	_PORTB,0
                                    1- 3277     	.line	469, "main.c"; 	L1L;
     000C 1Crr                      1- 3278     	BCR	_PORTB,1
                                    1- 3279     	.line	470, "main.c"; 	delay(100);
     000D 2164                      1- 3280     	MOVIA	0x64
                                    1- 3281     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3282     	.line	471, "main.c"; 	LedInput();
                                    1- 3283     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3284     	.line	472, "main.c"; 	}
                                    1- 3285     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3286     ; exit point of _LED1ON
                                    1- 3288     ;***
                                    1- 3289     ;  pBlock Stats: dbName = C
                                    1- 3290     ;***
                                    1- 3291     ;has an exit
                                    1- 3292     ;1 compiler assigned register :
                                    1- 3293     ;   r0x1056
                                    1- 3294     ;; Starting pCode block
                                    1- 3295     .segment "code"; module=main, function=_LedInput
     0000                           1- 3297     _LedInput:
                                    1- 3298     ; 2 exit points
                                    1- 3299     	.line	458, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 3300     	IOSTR	_IOSTA
                                    1- 3301     	BANKSEL	r0x1056
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3302     	MOVAR	r0x1056
     0003 18rr                      1- 3303     	BSR	r0x1056,0
     0004 01rr                      1- 3304     	MOVR	r0x1056,W
     0005 000r                      1- 3305     	IOST	_IOSTA
                                    1- 3306     	.line	459, "main.c"; 	IOSTB |= 0x03;
     0006 001r                      1- 3307     	IOSTR	_IOSTB
     0007 00rr                      1- 3308     	MOVAR	r0x1056
     0008 2103                      1- 3309     	MOVIA	0x03
     0009 11rr                      1- 3310     	IORAR	r0x1056,F
     000A 01rr                      1- 3311     	MOVR	r0x1056,W
     000B 000r                      1- 3312     	IOST	_IOSTB
                                    1- 3313     	.line	460, "main.c"; 	PORTA &= 0xFE;
                                    1- 3314     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 3315     	BCR	_PORTA,0
                                    1- 3316     	.line	461, "main.c"; 	PORTB &= 0xFC;
     000E 21FC                      1- 3317     	MOVIA	0xfc
     000F 10rr                      1- 3318     	ANDAR	_PORTB,F
                                    1- 3319     	.line	462, "main.c"; 	}
                                    1- 3320     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3321     ; exit point of _LedInput
                                    1- 3323     ;***
                                    1- 3324     ;  pBlock Stats: dbName = C
                                    1- 3325     ;***
                                    1- 3326     ;has an exit
                                    1- 3327     ;functions called:
                                    1- 3328     ;   _LedInput
                                    1- 3329     ;   _LedInput
                                    1- 3330     ;   _LED6ON
                                    1- 3331     ;   _LED5ON
                                    1- 3332     ;   _LED4ON
                                    1- 3333     ;   _LED3ON
                                    1- 3334     ;   _LED2ON
                                    1- 3335     ;   _LED1ON
                                    1- 3336     ;   _LedInput
                                    1- 3337     ;   _LedInput
                                    1- 3338     ;   _LED6ON
                                    1- 3339     ;   _LED5ON
                                    1- 3340     ;   _LED4ON
                                    1- 3341     ;   _LED3ON
                                    1- 3342     ;   _LED2ON
                                    1- 3343     ;   _LED1ON
                                    1- 3344     ;; Starting pCode block
                                    1- 3345     .segment "code"; module=main, function=_ledShow
     0000                           1- 3347     _ledShow:
                                    1- 3348     ; 2 exit points
                                    1- 3349     	.line	393, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3350     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3351     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3352     	BTRSC	STATUS,2
                                    1- 3353     	MGOTO	_00310_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3354     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3355     	MOVR	_workStep,W
     0006 0903                      1- 3356     	BTRSS	STATUS,2
                                    1- 3357     	MGOTO	_00310_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3358     	.line	395, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3359     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3360     	BTRSC	_ledDeadTime,0
                                    1- 3361     	MGOTO	_00307_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3362     	.line	397, "main.c"; 	ledStep = 0;
                                    1- 3363     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3364     	CLRR	_ledStep
                                    1- 3365     	MGOTO	_00310_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3366     _00307_DS_:
                                    1- 3367     	.line	401, "main.c"; 	ledStep = tempLedStep;
                                    1- 3368     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3369     	MOVR	_tempLedStep,W
                                    1- 3370     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3371     	MOVAR	_ledStep
     0012                           1- 3372     _00310_DS_:
                                    1- 3373     	.line	412, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3374     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 3375     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3376     	BTRSC	STATUS,2
                                    1- 3377     	MGOTO	_00318_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3378     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3379     	MOVR	_pwStep,W
     0018 0D03                      1- 3380     	BTRSC	STATUS,2
                                    1- 3381     	MGOTO	_00318_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3382     	.line	414, "main.c"; 	if(ledLightTime > 0)
                                    1- 3383     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3384     	MOVR	_ledLightTime,W
     001C 0D03                      1- 3385     	BTRSC	STATUS,2
                                    1- 3386     	MGOTO	_00318_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3387     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3388     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3389     	.line	416, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 3390     	MOVIA	0x07
                                    1- 3391     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 3392     	SUBAR	_pwStep,W
     0021 0803                      1- 3393     	BTRSS	STATUS,0
                                    1- 3394     	MGOTO	_00313_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3395     	.line	417, "main.c"; 	ledStep = 6;
     0023 2106                      1- 3396     	MOVIA	0x06
                                    1- 3397     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 3398     	MOVAR	_ledStep
                                    1- 3399     	MGOTO	_00318_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3400     _00313_DS_:
                                    1- 3401     	.line	419, "main.c"; 	ledStep = pwStep;
                                    1- 3402     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3403     	MOVR	_pwStep,W
                                    1- 3404     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 3405     	MOVAR	_ledStep
     002B                           1- 3406     _00318_DS_:
                                    1- 3407     	.line	422, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3408     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3409     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 3410     	BTRSC	STATUS,2
                                    1- 3411     	MGOTO	_00324_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3412     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3413     	MOVR	_workStep,W
     0031 0D03                      1- 3414     	BTRSC	STATUS,2
                                    1- 3415     	MGOTO	_00324_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3416     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3417     	MOVR	_pwStep,W
     0035 0903                      1- 3418     	BTRSS	STATUS,2
                                    1- 3419     	MGOTO	_00324_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3420     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3421     	.line	424, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 3422     	MOVIA	0x32
                                    1- 3423     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3424     	SUBAR	_count1s,W
     003A 0C03                      1- 3425     	BTRSC	STATUS,0
                                    1- 3426     	MGOTO	_00321_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3427     	.line	425, "main.c"; 	ledStep = workStep;
                                    1- 3428     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3429     	MOVR	_workStep,W
                                    1- 3430     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3431     	MOVAR	_ledStep
                                    1- 3432     	MGOTO	_00324_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3433     _00321_DS_:
                                    1- 3434     	.line	427, "main.c"; 	ledStep = 0;
                                    1- 3435     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 3436     	CLRR	_ledStep
     0043                           1- 3437     _00324_DS_:
                                    1- 3438     	.line	430, "main.c"; 	LedInput();
                                    1- 3439     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3440     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3441     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3442     	.line	431, "main.c"; 	switch(ledStep)
     0044 2109                      1- 3443     	MOVIA	0x09
                                    1- 3444     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 3445     	SUBAR	_ledStep,W
     0047 0C03                      1- 3446     	BTRSC	STATUS,0
                                    1- 3447     	MGOTO	_00337_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 3448     	MOVIA	((_00378_DS_ >> 8) & 0xff)
     004A 008A                      1- 3449     	MOVAR	PCHBUF
     004B 01rr                      1- 3450     	MOVR	_ledStep,W
     004C 25rr                      1- 3451     	ADDIA	_00378_DS_
     004D 0C03                      1- 3452     	BTRSC	STATUS,0
     004E 058A                      1- 3453     	INCR	PCHBUF,F
     004F 0082                      1- 3454     	MOVAR	PCL
     0050                           1- 3455     _00378_DS_:
                                    1- 3456     	MGOTO	_00327_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3457     	MGOTO	_00335_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3458     	MGOTO	_00334_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3459     	MGOTO	_00333_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3460     	MGOTO	_00332_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3461     	MGOTO	_00331_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3462     	MGOTO	_00330_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3463     	MGOTO	_00330_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3464     	MGOTO	_00330_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3465     _00327_DS_:
                                    1- 3466     	.line	434, "main.c"; 	LedInput();
                                    1- 3467     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3468     	.line	435, "main.c"; 	break;
                                    1- 3469     	MGOTO	_00337_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3470     _00330_DS_:
                                    1- 3471     	.line	439, "main.c"; 	LED6ON();
                                    1- 3472     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3473     _00331_DS_:
                                    1- 3474     	.line	441, "main.c"; 	LED5ON();
                                    1- 3475     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3476     _00332_DS_:
                                    1- 3477     	.line	443, "main.c"; 	LED4ON();
                                    1- 3478     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3479     _00333_DS_:
                                    1- 3480     	.line	445, "main.c"; 	LED3ON();
                                    1- 3481     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3482     _00334_DS_:
                                    1- 3483     	.line	447, "main.c"; 	LED2ON();
                                    1- 3484     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3485     _00335_DS_:
                                    1- 3486     	.line	449, "main.c"; 	LED1ON();
                                    1- 3487     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3488     _00337_DS_:
                                    1- 3489     	.line	452, "main.c"; 	}
                                    1- 3490     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 3491     ; exit point of _ledShow
                                    1- 3493     ;***
                                    1- 3494     ;  pBlock Stats: dbName = C
                                    1- 3495     ;***
                                    1- 3496     ;has an exit
                                    1- 3497     ;functions called:
                                    1- 3498     ;   _LedInput
                                    1- 3499     ;   _LedInput
                                    1- 3500     ;; Starting pCode block
                                    1- 3501     .segment "code"; module=main, function=_initSys
     0000                           1- 3503     _initSys:
                                    1- 3504     ; 2 exit points
                                    1- 3505     	.line	361, "main.c"; 	DISI();
     0000 0013                      1- 3506     	DISI
                                    1- 3507     	.line	362, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3508     	MOVIA	0xbe
     0002 000r                      1- 3509     	IOST	_IOSTA
                                    1- 3510     	.line	363, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3511     	CLRA	
     0004 000r                      1- 3512     	IOST	_IOSTB
                                    1- 3513     	.line	364, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3514     	CLRR	_PORTB
                                    1- 3515     	.line	365, "main.c"; 	PORTA = 0x00;
                                    1- 3516     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3517     	CLRR	_PORTA
                                    1- 3518     	.line	366, "main.c"; 	LedInput();
                                    1- 3519     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3520     	.line	367, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 3521     	MOVIA	0x7f
     000A 000r                      1- 3522     	IOST	_APHCON
                                    1- 3523     	.line	368, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3524     	MOVIA	0xff
     000C 00rr                      1- 3525     	MOVAR	_BPHCON
                                    1- 3526     	.line	369, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3527     	MOVAR	_ABPLCON
                                    1- 3528     	.line	371, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3529     	MOVIA	0x01
     000F 00rr                      1- 3530     	MOVAR	_INTE
                                    1- 3531     	.line	373, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3532     	CLRA	
     0011 000r                      1- 3533     	IOST	_PCON1
                                    1- 3534     	.line	375, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3535     	MOVIA	0x37
     0013 00rr                      1- 3536     	MOVAR	_TMR0
                                    1- 3537     	.line	376, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3538     	MOVIA	0x01
     0015 0003                      1- 3539     	T0MD	
                                    1- 3540     	.line	378, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3541     	IOST	_PCON1
                                    1- 3542     	.line	381, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3543     	MOVIA	0x98
     0018 00rr                      1- 3544     	MOVAR	_PCON
                                    1- 3545     	.line	384, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3546     	MOVIA	0x01
     001A 000r                      1- 3547     	IOST	_PCON1
                                    1- 3548     	.line	385, "main.c"; 	ENI();
     001B 0004                      1- 3549     	ENI
                                    1- 3550     	.line	386, "main.c"; 	}
                                    1- 3551     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 3552     ; exit point of _initSys
                                    1- 3554     ;***
                                    1- 3555     ;  pBlock Stats: dbName = C
                                    1- 3556     ;***
                                    1- 3557     ;has an exit
                                    1- 3558     ;functions called:
                                    1- 3559     ;   _pwmStop
                                    1- 3560     ;   _pwmStop
                                    1- 3561     ;; Starting pCode block
                                    1- 3562     .segment "code"; module=main, function=_powerOff
     0000                           1- 3564     _powerOff:
                                    1- 3565     ; 2 exit points
                                    1- 3566     	.line	351, "main.c"; 	workStep = 0;
                                    1- 3567     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3568     	CLRR	_workStep
                                    1- 3569     	.line	352, "main.c"; 	ledStep = 0;
                                    1- 3570     	BANKSEL	_ledStep
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 3571     	CLRR	_ledStep
                                    1- 3572     	.line	353, "main.c"; 	pwmStop();
                                    1- 3573     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3574     	.line	355, "main.c"; 	}
                                    1- 3575     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3576     ; exit point of _powerOff
                                    1- 3578     ;***
                                    1- 3579     ;  pBlock Stats: dbName = C
                                    1- 3580     ;***
                                    1- 3581     ;has an exit
                                    1- 3582     ;functions called:
                                    1- 3583     ;   _keyRead
                                    1- 3584     ;   _powerOff
                                    1- 3585     ;   _powerOff
                                    1- 3586     ;   _pwmInit
                                    1- 3587     ;   _pwmInit
                                    1- 3588     ;   _powerOff
                                    1- 3589     ;   _powerOff
                                    1- 3590     ;   _pwmInit
                                    1- 3591     ;   _keyRead
                                    1- 3592     ;   _powerOff
                                    1- 3593     ;   _powerOff
                                    1- 3594     ;   _pwmInit
                                    1- 3595     ;   _pwmInit
                                    1- 3596     ;   _powerOff
                                    1- 3597     ;   _powerOff
                                    1- 3598     ;   _pwmInit
                                    1- 3599     ;1 compiler assigned register :
                                    1- 3600     ;   r0x105E
                                    1- 3601     ;; Starting pCode block
                                    1- 3602     .segment "code"; module=main, function=_keyCtr
                                    1- 3604     ;local variable name mapping:
     0000                           1- 3606     _keyCtr:
                                    1- 3607     ; 2 exit points
                                    1- 3608     	.line	277, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 3609     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3610     	COMR	_PORTA,W
                                    1- 3611     	BANKSEL	r0x105E
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3612     	MOVAR	r0x105E
     0004 2180                      1- 3613     	MOVIA	0x80
     0005 10rr                      1- 3614     	ANDAR	r0x105E,F
     0006 01rr                      1- 3615     	MOVR	r0x105E,W
                                    1- 3616     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3617     	BANKSEL	r0x105E
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3618     	MOVAR	r0x105E
                                    1- 3619     	.line	278, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3620     	XORIA	0x01
     000B 0903                      1- 3621     	BTRSS	STATUS,2
                                    1- 3622     	MGOTO	_00291_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3623     	.line	280, "main.c"; 	count500ms = 0;
                                    1- 3624     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3625     	CLRR	_count500ms
                                    1- 3626     	.line	281, "main.c"; 	ledLightTime = 0;
                                    1- 3627     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3628     	CLRR	_ledLightTime
                                    1- 3629     	.line	282, "main.c"; 	if(pwStep == 0)
                                    1- 3630     	BANKSEL	_pwStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3631     	MOVR	_pwStep,W
     0013 0903                      1- 3632     	BTRSS	STATUS,2
                                    1- 3633     	MGOTO	_00259_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3634     	.line	284, "main.c"; 	sleepTime = 0;
                                    1- 3635     	BANKSEL	_sleepTime
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3636     	CLRR	_sleepTime
     0017 02rr                      1- 3637     	CLRR	(_sleepTime + 1)
                                    1- 3638     	.line	285, "main.c"; 	powerOff();
                                    1- 3639     	MCALL	_powerOff
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3640     	.line	286, "main.c"; 	return;
                                    1- 3641     	MGOTO	_00293_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 3642     _00259_DS_:
                                    1- 3643     	.line	288, "main.c"; 	ledTime = 0;
                                    1- 3644     	BANKSEL	_ledTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 3645     	CLRR	_ledTime
                                    1- 3646     	.line	289, "main.c"; 	if(++workStep > 6)
                                    1- 3647     	BANKSEL	_workStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 3648     	INCR	_workStep,F
                                    1- 3649     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3650     ;;unsigned compare: left >= lit (0x7=7), size=1
     001E 2107                      1- 3651     	MOVIA	0x07
     001F 04rr                      1- 3652     	SUBAR	_workStep,W
     0020 0C03                      1- 3653     	BTRSC	STATUS,0
                                    1- 3654     	.line	290, "main.c"; 	workStep = 0;
     0021 02rr                      1- 3655     	CLRR	_workStep
                                    1- 3656     	.line	291, "main.c"; 	if(workStep == 0)
     0022 01rr                      1- 3657     	MOVR	_workStep,W
     0023 0D03                      1- 3658     	BTRSC	STATUS,2
                                    1- 3659     	.line	292, "main.c"; 	powerOff();;
                                    1- 3660     	MCALL	_powerOff
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3661     	.line	293, "main.c"; 	if(workStep == 1)
                                    1- 3662     	BANKSEL	_workStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 3663     	MOVR	_workStep,W
     0027 2401                      1- 3664     	XORIA	0x01
     0028 0903                      1- 3665     	BTRSS	STATUS,2
                                    1- 3666     	MGOTO	_00279_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3667     	.line	295, "main.c"; 	ledStep = 1;
     002A 2101                      1- 3668     	MOVIA	0x01
                                    1- 3669     	BANKSEL	_ledStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 3670     	MOVAR	_ledStep
                                    1- 3671     	.line	296, "main.c"; 	ledLightTime = 0;
                                    1- 3672     	BANKSEL	_ledLightTime
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1- 3673     	CLRR	_ledLightTime
                                    1- 3674     	.line	297, "main.c"; 	PWM2DUTY = 85;
     002F 2155                      1- 3675     	MOVIA	0x55
     0030 00rr                      1- 3676     	SFUN	_PWM2DUTY
                                    1- 3677     	.line	298, "main.c"; 	currentDuty = 85;
                                    1- 3678     	BANKSEL	_currentDuty
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 3679     	MOVAR	_currentDuty
                                    1- 3680     	.line	299, "main.c"; 	maxDuty = 77;
     0033 214D                      1- 3681     	MOVIA	0x4d
                                    1- 3682     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 3683     	MOVAR	_maxDuty
                                    1- 3684     	.line	300, "main.c"; 	pwmInit();
                                    1- 3685     	MCALL	_pwmInit
     0036 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3686     	MGOTO	_00280_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1- 3687     _00279_DS_:
                                    1- 3688     	.line	302, "main.c"; 	else if(workStep == 2)
                                    1- 3689     	BANKSEL	_workStep
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 3690     	MOVR	_workStep,W
     003A 2402                      1- 3691     	XORIA	0x02
     003B 0903                      1- 3692     	BTRSS	STATUS,2
                                    1- 3693     	MGOTO	_00276_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3694     	.line	303, "main.c"; 	maxDuty = 81;
     003D 2151                      1- 3695     	MOVIA	0x51
                                    1- 3696     	BANKSEL	_maxDuty
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3697     	MOVAR	_maxDuty
                                    1- 3698     	MGOTO	_00280_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3699     _00276_DS_:
                                    1- 3700     	.line	304, "main.c"; 	else if(workStep == 3)
                                    1- 3701     	BANKSEL	_workStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 3702     	MOVR	_workStep,W
     0043 2403                      1- 3703     	XORIA	0x03
     0044 0903                      1- 3704     	BTRSS	STATUS,2
                                    1- 3705     	MGOTO	_00273_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3706     	.line	305, "main.c"; 	maxDuty = 85;
     0046 2155                      1- 3707     	MOVIA	0x55
                                    1- 3708     	BANKSEL	_maxDuty
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1- 3709     	MOVAR	_maxDuty
                                    1- 3710     	MGOTO	_00280_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A                           1- 3711     _00273_DS_:
                                    1- 3712     	.line	306, "main.c"; 	else if(workStep == 4)
                                    1- 3713     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 3714     	MOVR	_workStep,W
     004C 2404                      1- 3715     	XORIA	0x04
     004D 0903                      1- 3716     	BTRSS	STATUS,2
                                    1- 3717     	MGOTO	_00270_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3718     	.line	307, "main.c"; 	maxDuty = 90;
     004F 215A                      1- 3719     	MOVIA	0x5a
                                    1- 3720     	BANKSEL	_maxDuty
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 3721     	MOVAR	_maxDuty
                                    1- 3722     	MGOTO	_00280_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1- 3723     _00270_DS_:
                                    1- 3724     	.line	308, "main.c"; 	else if(workStep == 5)
                                    1- 3725     	BANKSEL	_workStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 01rr                      1- 3726     	MOVR	_workStep,W
     0055 2405                      1- 3727     	XORIA	0x05
     0056 0903                      1- 3728     	BTRSS	STATUS,2
                                    1- 3729     	MGOTO	_00267_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3730     	.line	309, "main.c"; 	maxDuty = 93;
     0058 215D                      1- 3731     	MOVIA	0x5d
                                    1- 3732     	BANKSEL	_maxDuty
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 3733     	MOVAR	_maxDuty
                                    1- 3734     	MGOTO	_00280_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 3735     _00267_DS_:
                                    1- 3736     	.line	310, "main.c"; 	else if(workStep == 6)
                                    1- 3737     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 3738     	MOVR	_workStep,W
     005E 2406                      1- 3739     	XORIA	0x06
     005F 0903                      1- 3740     	BTRSS	STATUS,2
                                    1- 3741     	MGOTO	_00280_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3742     	.line	311, "main.c"; 	maxDuty = 97;
     0061 2161                      1- 3743     	MOVIA	0x61
                                    1- 3744     	BANKSEL	_maxDuty
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 00rr                      1- 3745     	MOVAR	_maxDuty
                                    1- 3746     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3747     ;;unsigned compare: left >= lit (0x2=2), size=1
     0064                           1- 3748     _00280_DS_:
                                    1- 3749     	.line	312, "main.c"; 	if(workStep > 1)
     0064 2102                      1- 3750     	MOVIA	0x02
                                    1- 3751     	BANKSEL	_workStep
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 3752     	SUBAR	_workStep,W
     0067 0803                      1- 3753     	BTRSS	STATUS,0
                                    1- 3754     	MGOTO	_00282_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3755     	.line	314, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3756     	BANKSEL	_maxDuty
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3757     	MOVR	_maxDuty,W
     006B 00rr                      1- 3758     	SFUN	_PWM2DUTY
                                    1- 3759     	.line	315, "main.c"; 	pwmInit();
                                    1- 3760     	MCALL	_pwmInit
     006C 2rrr                      3-   66 m1      LCALL rom_address
     006D                           1- 3761     _00282_DS_:
                                    1- 3762     	.line	317, "main.c"; 	ledStep = workStep;
                                    1- 3763     	BANKSEL	_workStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 3764     	MOVR	_workStep,W
                                    1- 3765     	BANKSEL	_ledStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 3766     	MOVAR	_ledStep
                                    1- 3767     	MGOTO	_00293_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 3768     _00291_DS_:
                                    1- 3769     	.line	319, "main.c"; 	else if(kclick == 2)
                                    1- 3770     	BANKSEL	r0x105E
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 3771     	MOVR	r0x105E,W
     0074 2402                      1- 3772     	XORIA	0x02
     0075 0903                      1- 3773     	BTRSS	STATUS,2
                                    1- 3774     	MGOTO	_00293_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3775     	.line	321, "main.c"; 	if(workStep > 0)
                                    1- 3776     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 3777     	MOVR	_workStep,W
     0079 0D03                      1- 3778     	BTRSC	STATUS,2
                                    1- 3779     	MGOTO	_00286_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3780     	.line	323, "main.c"; 	powerOff();
                                    1- 3781     	MCALL	_powerOff
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3782     	MGOTO	_00287_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 3783     _00286_DS_:
                                    1- 3784     	.line	327, "main.c"; 	if(pwStep == 0)
                                    1- 3785     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 3786     	MOVR	_pwStep,W
     007F 0903                      1- 3787     	BTRSS	STATUS,2
                                    1- 3788     	MGOTO	_00284_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3789     	.line	329, "main.c"; 	sleepTime = 0;
                                    1- 3790     	BANKSEL	_sleepTime
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 02rr                      1- 3791     	CLRR	_sleepTime
     0083 02rr                      1- 3792     	CLRR	(_sleepTime + 1)
                                    1- 3793     	.line	330, "main.c"; 	powerOff();
                                    1- 3794     	MCALL	_powerOff
     0084 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3795     	.line	331, "main.c"; 	return;
                                    1- 3796     	MGOTO	_00293_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1- 3797     _00284_DS_:
                                    1- 3798     	.line	333, "main.c"; 	ledLightTime = 0;
                                    1- 3799     	BANKSEL	_ledLightTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 02rr                      1- 3800     	CLRR	_ledLightTime
                                    1- 3801     	.line	334, "main.c"; 	ledStep = 1;
     0088 2101                      1- 3802     	MOVIA	0x01
                                    1- 3803     	BANKSEL	_ledStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 3804     	MOVAR	_ledStep
                                    1- 3805     	.line	335, "main.c"; 	workStep = 1;
                                    1- 3806     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 3807     	MOVAR	_workStep
                                    1- 3808     	.line	336, "main.c"; 	PWM2DUTY = 85;
     008D 2155                      1- 3809     	MOVIA	0x55
     008E 00rr                      1- 3810     	SFUN	_PWM2DUTY
                                    1- 3811     	.line	337, "main.c"; 	currentDuty = 85;
                                    1- 3812     	BANKSEL	_currentDuty
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 3813     	MOVAR	_currentDuty
                                    1- 3814     	.line	338, "main.c"; 	maxDuty = 77;
     0091 214D                      1- 3815     	MOVIA	0x4d
                                    1- 3816     	BANKSEL	_maxDuty
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 3817     	MOVAR	_maxDuty
                                    1- 3818     	.line	339, "main.c"; 	pwmInit();
                                    1- 3819     	MCALL	_pwmInit
     0094 2rrr                      3-   66 m1      LCALL rom_address
     0095                           1- 3820     _00287_DS_:
                                    1- 3821     	.line	344, "main.c"; 	ledStep = workStep;
                                    1- 3822     	BANKSEL	_workStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1- 3823     	MOVR	_workStep,W
                                    1- 3824     	BANKSEL	_ledStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 3825     	MOVAR	_ledStep
     0099                           1- 3826     _00293_DS_:
                                    1- 3827     	.line	346, "main.c"; 	}
                                    1- 3828     	RETURN	
     0099 0010                      3-   40 m1      ret
                                    1- 3829     ; exit point of _keyCtr
                                    1- 3832     ;	code size estimation:
                                    1- 3833     ;	 1540+  375 =  1915 instructions ( 4580 byte)
                                    1- 3835     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
