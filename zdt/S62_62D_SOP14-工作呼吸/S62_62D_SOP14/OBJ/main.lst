
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_gotoSleep
                                    1-   97     	extern	_delay
                                    1-   98     	extern	_F_wait_eoc
                                    1-   99     	extern	_F_AIN1_Convert
                                    1-  100     	extern	_checkBatAD
                                    1-  101     	extern	_initAD
                                    1-  102     	extern	_initSys
                                    1-  103     	extern	_pwmStop
                                    1-  104     	extern	_pwmInit
                                    1-  105     	extern	_rainbow
                                    1-  106     	extern	_ledOff
                                    1-  107     	extern	_ledGreen
                                    1-  108     	extern	_ledRed
                                    1-  109     	extern	_breath
                                    1-  110     	extern	_setColor
                                    1-  111     	extern	_showRGB
                                    1-  112     	extern	_keyCtr
                                    1-  113     	extern	_workCtr
                                    1-  114     	extern	_chrgCtr
                                    1-  115     	extern	_isr
                                    1-  116     	extern	_main
                                    1-  117     	extern	_keyRead
                                    1-  118     	extern	_setLastColor
                                    1-  119     	extern	_intCount
                                    1-  120     	extern	_IntFlag
                                    1-  121     	extern	_sleepTime
                                    1-  122     	extern	_workStep
                                    1-  123     	extern	_R_AIN1_DATA
                                    1-  124     	extern	_R_AIN1_DATA_LB
                                    1-  125     	extern	_lowCount
                                    1-  126     	extern	_red
                                    1-  127     	extern	_blue
                                    1-  128     	extern	_green
                                    1-  129     	extern	_ledCount
                                    1-  130     	extern	_ledFlag
                                    1-  131     	extern	_lastRed
                                    1-  132     	extern	_lastGreen
                                    1-  133     	extern	_lastBlue
                                    1-  134     	extern	_colorStep
                                    1-  135     	extern	_count250
                                    1-  136     	extern	_count10ms
                                    1-  137     	extern	_keyCount
                                    1-  138     	extern	_duty
                                    1-  139     	extern	_count900s
                                    1-  140     	extern	_longPressFlag
                                    1-  141     	extern	_breathTime
                                    1-  142     	extern	_breathFalg
                                    1-  143     	extern	_delayTime
                                    1-  144     	extern	_fullTime
                                    1-  145     	extern	_closeTime
                                    1-  146     	extern	_breathWaitTime
                                    1-  147     	extern	_count1s
                                    1-  148     	extern	_currentDuty
                                    1-  149     	extern	_preDuty
                                    1-  150     	extern	_waitRainbowTime
                                    1-  152     	extern PSAVE
                                    1-  153     	extern SSAVE
                                    1-  154     	extern WSAVE
                                    1-  155     	extern STK04
                                    1-  156     	extern STK03
                                    1-  157     	extern STK02
                                    1-  158     	extern STK01
                                    1-  159     	extern STK00
                                    1-  161     .segment "uninit", 0x20000040
 20000040                           1-  162     PSAVE:
                                    1-  163     	.res 1
 20000041                           1-  164     SSAVE:
                                    1-  165     	.res 1
 20000042                           1-  166     WSAVE:
                                    1-  167     	.res 1
 20000043                           1-  168     STK04:
                                    1-  169     	.res 1
 20000044                           1-  170     STK03:
                                    1-  171     	.res 1
 20000045                           1-  172     STK02:
                                    1-  173     	.res 1
 20000046                           1-  174     STK01:
                                    1-  175     	.res 1
 20000047                           1-  176     STK00:
                                    1-  177     	.res 1
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     ; global definitions
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; absolute symbol definitions
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ;--------------------------------------------------------
                                    1-  186     ; compiler-defined variables
                                    1-  187     ;--------------------------------------------------------
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1037:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x1038:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x1034:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x1035:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1036:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x1033:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1031:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1032:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1029:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x102A:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x102B:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x102E:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1027:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1028:
                                    1-  229     	.res	1
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ; initialized data
                                    1-  232     ;--------------------------------------------------------
                                    1-  234     .segment "idata"
     0000                           1-  235     _intCount:
     0000 0000                      1-  236     	dw	0x00
                                    1-  240     .segment "idata"
     0000                           1-  241     _IntFlag:
     0000 0000                      1-  242     	dw	0x00
                                    1-  246     .segment "idata"
     0000                           1-  247     _sleepTime:
     0000 0000                      1-  248     	dw	0x00
                                    1-  252     .segment "idata"
     0000                           1-  253     _workStep:
     0000 0000                      1-  254     	dw	0x00
                                    1-  258     .segment "idata"
     0000                           1-  259     _R_AIN1_DATA:
     0000 0000 0000                 1-  260     	dw	0x00, 0x00
                                    1-  264     .segment "idata"
     0000                           1-  265     _R_AIN1_DATA_LB:
     0000 0000                      1-  266     	dw	0x00
                                    1-  270     .segment "idata"
     0000                           1-  271     _lowCount:
     0000 0000                      1-  272     	dw	0x00
                                    1-  276     .segment "idata"
     0000                           1-  277     _red:
     0000 0000                      1-  278     	dw	0x00
                                    1-  282     .segment "idata"
     0000                           1-  283     _blue:
     0000 0000                      1-  284     	dw	0x00
                                    1-  288     .segment "idata"
     0000                           1-  289     _green:
     0000 0000                      1-  290     	dw	0x00
                                    1-  294     .segment "idata"
     0000                           1-  295     _ledCount:
     0000 0000                      1-  296     	dw	0x00
                                    1-  300     .segment "idata"
     0000                           1-  301     _ledFlag:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _lastRed:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _lastGreen:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _lastBlue:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _colorStep:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _count250:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _count10ms:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _keyCount:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _duty:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _count900s:
     0000 0000 0000                 1-  356     	dw	0x00, 0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _longPressFlag:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _breathTime:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _breathFalg:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _delayTime:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _fullTime:
     0000 0000 0000                 1-  386     	dw	0x00, 0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _closeTime:
     0000 0000 0000                 1-  392     	dw	0x00, 0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _breathWaitTime:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _count1s:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _currentDuty:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _preDuty:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _waitRainbowTime:
     0000 0000 0000                 1-  422     	dw	0x00, 0x00
                                    1-  425     ;--------------------------------------------------------
                                    1-  426     ; overlayable items in internal ram 
                                    1-  427     ;--------------------------------------------------------
                                    1-  428     ;	udata_ovr
                                    1-  429     ;--------------------------------------------------------
                                    1-  430     ; reset vector 
                                    1-  431     ;--------------------------------------------------------
                                    1-  432     ORG	0x0000
     0000 3rrr                      1-  433     	LGOTO	__nyc_ny8_startup
                                    1-  434     ;--------------------------------------------------------
                                    1-  435     ; interrupt and initialization code
                                    1-  436     ;--------------------------------------------------------
                                    1-  437     ORG 0x0008
                                    1-  438     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  440     .segment "code"
     0000                           1-  441     __sdcc_interrupt:
                                    1-  442     ;***
                                    1-  443     ;  pBlock Stats: dbName = I
                                    1-  444     ;***
                                    1-  445     ;2 compiler assigned registers:
                                    1-  446     ;   STK00
                                    1-  447     ;   STK01
                                    1-  448     ;; Starting pCode block
     0000                           1-  449     _isr:
                                    1-  450     ; 0 exit points
                                    1-  451     	.line	78, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  452     	MOVAR	WSAVE
     0001 1503                      1-  453     	SWAPR	STATUS,W
     0002 0283                      1-  454     	CLRR	STATUS
     0003 00rr                      1-  455     	MOVAR	SSAVE
     0004 010A                      1-  456     	MOVR	PCHBUF,W
     0005 028A                      1-  457     	CLRR	PCHBUF
     0006 00rr                      1-  458     	MOVAR	PSAVE
     0007 0104                      1-  459     	MOVR	FSR,W
                                    1-  460     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  461     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  462     	MOVR	STK00,W
                                    1-  463     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  464     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  465     	MOVR	STK01,W
                                    1-  466     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  467     	MOVAR	___sdcc_saved_stk01
                                    1-  468     	.line	80, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  469     	BTRSS	_INTFbits,0
                                    1-  470     	MGOTO	_00113_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  471     	.line	82, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  472     	MOVIA	0x37
     0013 03rr                      1-  473     	ADDAR	_TMR0,F
                                    1-  474     	.line	84, "main.c"; 	if(++intCount >= 100)
                                    1-  475     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  476     	INCR	_intCount,F
                                    1-  477     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  478     	MOVIA	0x64
     0017 04rr                      1-  479     	SUBAR	_intCount,W
     0018 0803                      1-  480     	BTRSS	STATUS,0
                                    1-  481     	MGOTO	_00113_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  482     	.line	86, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  483     	MOVIA	0x01
                                    1-  484     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  485     	MOVAR	_IntFlag
                                    1-  486     	.line	87, "main.c"; 	intCount = 0;
                                    1-  487     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  488     	CLRR	_intCount
                                    1-  489     	.line	88, "main.c"; 	if(++count1s >= 100)
                                    1-  490     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  491     	INCR	_count1s,F
                                    1-  492     ;;unsigned compare: left < lit (0x64=100), size=1
     0021 2164                      1-  493     	MOVIA	0x64
     0022 04rr                      1-  494     	SUBAR	_count1s,W
     0023 0803                      1-  495     	BTRSS	STATUS,0
                                    1-  496     	MGOTO	_00113_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  497     	.line	90, "main.c"; 	count1s = 0;
     0025 02rr                      1-  498     	CLRR	_count1s
                                    1-  499     	.line	91, "main.c"; 	if(workStep)
                                    1-  500     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  501     	MOVR	_workStep,W
     0028 0D03                      1-  502     	BTRSC	STATUS,2
                                    1-  503     	MGOTO	_00106_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  504     	.line	93, "main.c"; 	++count900s;
                                    1-  505     	BANKSEL	_count900s
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 05rr                      1-  506     	INCR	_count900s,F
     002C 0D03                      1-  507     	BTRSC	STATUS,2
     002D 05rr                      1-  508     	INCR	(_count900s + 1),F
                                    1-  509     	MGOTO	_00113_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  510     _00106_DS_:
                                    1-  511     	.line	97, "main.c"; 	count900s = 0;
                                    1-  512     	BANKSEL	_count900s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1-  513     	CLRR	_count900s
     0031 02rr                      1-  514     	CLRR	(_count900s + 1)
     0032                           1-  515     _00113_DS_:
                                    1-  516     	.line	105, "main.c"; 	if(INTFbits.PABIF)
     0032 08rr                      1-  517     	BTRSS	_INTFbits,1
                                    1-  518     	MGOTO	_00115_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  519     	.line	107, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0034 21FD                      1-  520     	MOVIA	0xfd
     0035 00rr                      1-  521     	MOVAR	_INTF
     0036                           1-  522     _00115_DS_:
                                    1-  523     	.line	110, "main.c"; 	INTF = 0;
     0036 02rr                      1-  524     	CLRR	_INTF
                                    1-  525     	.line	112, "main.c"; 	}
                                    1-  526     	BANKSEL	___sdcc_saved_stk01
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1-  527     	MOVR	___sdcc_saved_stk01,W
     0039 00rr                      1-  528     	MOVAR	STK01
                                    1-  529     	BANKSEL	___sdcc_saved_stk00
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  530     	MOVR	___sdcc_saved_stk00,W
     003C 00rr                      1-  531     	MOVAR	STK00
                                    1-  532     	BANKSEL	___sdcc_saved_fsr
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  533     	MOVR	___sdcc_saved_fsr,W
     003F 0084                      1-  534     	MOVAR	FSR
     0040 01rr                      1-  535     	MOVR	PSAVE,W
     0041 008A                      1-  536     	MOVAR	PCHBUF
     0042 0283                      1-  537     	CLRR	STATUS
     0043 15rr                      1-  538     	SWAPR	SSAVE,W
     0044 0083                      1-  539     	MOVAR	STATUS
     0045 15rr                      1-  540     	SWAPR	WSAVE,F
     0046 15rr                      1-  541     	SWAPR	WSAVE,W
     0047                           1-  542     END_OF_INTERRUPT:
     0047 0011                      1-  543     	RETIE	
                                    1-  545     ;--------------------------------------------------------
                                    1-  546     ; code
                                    1-  547     ;--------------------------------------------------------
                                    1-  548     ;***
                                    1-  549     ;  pBlock Stats: dbName = M
                                    1-  550     ;***
                                    1-  551     ;has an exit
                                    1-  552     ;functions called:
                                    1-  553     ;   _initSys
                                    1-  554     ;   _initAD
                                    1-  555     ;   _showRGB
                                    1-  556     ;   _checkBatAD
                                    1-  557     ;   _chrgCtr
                                    1-  558     ;   _keyCtr
                                    1-  559     ;   _workCtr
                                    1-  560     ;   _gotoSleep
                                    1-  561     ;   _initSys
                                    1-  562     ;   _initAD
                                    1-  563     ;   _showRGB
                                    1-  564     ;   _checkBatAD
                                    1-  565     ;   _chrgCtr
                                    1-  566     ;   _keyCtr
                                    1-  567     ;   _workCtr
                                    1-  568     ;   _gotoSleep
                                    1-  569     ;; Starting pCode block
                                    1-  570     .segment "code"; module=main, function=_main
     0000                           1-  572     _main:
                                    1-  573     ; 2 exit points
                                    1-  574     	.line	117, "main.c"; 	initSys();
                                    1-  575     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  576     	.line	118, "main.c"; 	initAD();
                                    1-  577     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  578     _00132_DS_:
                                    1-  579     	.line	122, "main.c"; 	CLRWDT();
     0002 0002                      1-  580     	clrwdt
                                    1-  581     	.line	123, "main.c"; 	if(ledFlag)
                                    1-  582     	BANKSEL	_ledFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 01rr                      1-  583     	MOVR	_ledFlag,W
     0005 0D03                      1-  584     	BTRSC	STATUS,2
                                    1-  585     	MGOTO	_00121_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  586     	.line	125, "main.c"; 	showRGB();
                                    1-  587     	MCALL	_showRGB
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  588     	MGOTO	_00122_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1-  589     _00121_DS_:
                                    1-  590     	.line	129, "main.c"; 	PORTB |= 0x0E;
     0009 210E                      1-  591     	MOVIA	0x0e
     000A 11rr                      1-  592     	IORAR	_PORTB,F
     000B                           1-  593     _00122_DS_:
                                    1-  594     	.line	131, "main.c"; 	if(!IntFlag)
                                    1-  595     	BANKSEL	_IntFlag
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1-  596     	MOVR	_IntFlag,W
     000D 0D03                      1-  597     	BTRSC	STATUS,2
                                    1-  598     	MGOTO	_00132_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  599     	.line	133, "main.c"; 	IntFlag = 0;  
     000F 02rr                      1-  600     	CLRR	_IntFlag
                                    1-  601     	.line	134, "main.c"; 	checkBatAD();
                                    1-  602     	MCALL	_checkBatAD
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  603     	.line	135, "main.c"; 	chrgCtr();
                                    1-  604     	MCALL	_chrgCtr
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  605     	.line	136, "main.c"; 	keyCtr();
                                    1-  606     	MCALL	_keyCtr
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  607     	.line	137, "main.c"; 	workCtr();
                                    1-  608     	MCALL	_workCtr
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  609     	.line	138, "main.c"; 	if((0x08 & PORTA) == 0 && keyCount == 0 && workStep == 0)
                                    1-  610     	BANKSEL	_PORTA
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 0Drr                      1-  611     	BTRSC	_PORTA,3
                                    1-  612     	MGOTO	_00132_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  613     	BANKSEL	_keyCount
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1-  614     	MOVR	_keyCount,W
     0019 0903                      1-  615     	BTRSS	STATUS,2
                                    1-  616     	MGOTO	_00132_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  617     	BANKSEL	_workStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1-  618     	MOVR	_workStep,W
     001D 0903                      1-  619     	BTRSS	STATUS,2
                                    1-  620     	MGOTO	_00132_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  621     	.line	140, "main.c"; 	if(++sleepTime > 200)
                                    1-  622     	BANKSEL	_sleepTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  623     	INCR	_sleepTime,F
                                    1-  624     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  625     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0021 21C9                      1-  626     	MOVIA	0xc9
     0022 04rr                      1-  627     	SUBAR	_sleepTime,W
     0023 0803                      1-  628     	BTRSS	STATUS,0
                                    1-  629     	MGOTO	_00132_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  630     	.line	141, "main.c"; 	gotoSleep();
                                    1-  631     	MCALL	_gotoSleep
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  632     	MGOTO	_00132_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  633     	.line	151, "main.c"; 	}
                                    1-  634     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1-  635     ; exit point of _main
                                    1-  637     ;***
                                    1-  638     ;  pBlock Stats: dbName = C
                                    1-  639     ;***
                                    1-  640     ;has an exit
                                    1-  641     ;functions called:
                                    1-  642     ;   _pwmStop
                                    1-  643     ;   _pwmStop
                                    1-  644     ;; Starting pCode block
                                    1-  645     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  647     _gotoSleep:
                                    1-  648     ; 2 exit points
                                    1-  649     	.line	700, "main.c"; 	count900s = 0;
                                    1-  650     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  651     	CLRR	_count900s
     0002 02rr                      1-  652     	CLRR	(_count900s + 1)
                                    1-  653     	.line	701, "main.c"; 	colorStep = 0;
                                    1-  654     	BANKSEL	_colorStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1-  655     	CLRR	_colorStep
                                    1-  656     	.line	702, "main.c"; 	ledFlag = 0;
                                    1-  657     	BANKSEL	_ledFlag
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1-  658     	CLRR	_ledFlag
                                    1-  659     	.line	703, "main.c"; 	sleepTime = 0;
                                    1-  660     	BANKSEL	_sleepTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  661     	CLRR	_sleepTime
                                    1-  662     	.line	705, "main.c"; 	pwmStop();
                                    1-  663     	MCALL	_pwmStop
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  664     	.line	706, "main.c"; 	PORTA = 0x00;
                                    1-  665     	BANKSEL	_PORTA
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1-  666     	CLRR	_PORTA
                                    1-  667     	.line	707, "main.c"; 	PORTB = 0x0E;
     000C 210E                      1-  668     	MOVIA	0x0e
     000D 00rr                      1-  669     	MOVAR	_PORTB
                                    1-  670     	.line	708, "main.c"; 	workStep = 0;
                                    1-  671     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1-  672     	CLRR	_workStep
                                    1-  673     	.line	709, "main.c"; 	AWUCON = 0x88;
     0010 2188                      1-  674     	MOVIA	0x88
     0011 00rr                      1-  675     	MOVAR	_AWUCON
                                    1-  676     	.line	710, "main.c"; 	BWUCON = 0x00;
     0012 02rr                      1-  677     	CLRR	_BWUCON
                                    1-  678     	.line	711, "main.c"; 	INTE =  C_INT_PABKey;
     0013 2102                      1-  679     	MOVIA	0x02
     0014 00rr                      1-  680     	MOVAR	_INTE
                                    1-  681     	.line	712, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0015 2118                      1-  682     	MOVIA	0x18
     0016 00rr                      1-  683     	MOVAR	_PCON
                                    1-  684     	.line	713, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0017 02rr                      1-  685     	CLRR	_INTF
                                    1-  686     	.line	714, "main.c"; 	CLRWDT();
     0018 0002                      1-  687     	clrwdt
                                    1-  688     	.line	715, "main.c"; 	ENI();
     0019 0004                      1-  689     	ENI
                                    1-  690     	.line	716, "main.c"; 	SLEEP();
     001A 0001                      1-  691     	sleep
                                    1-  692     	.line	717, "main.c"; 	AWUCON = 0x00;
     001B 02rr                      1-  693     	CLRR	_AWUCON
                                    1-  694     	.line	718, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     001C 2101                      1-  695     	MOVIA	0x01
     001D 00rr                      1-  696     	MOVAR	_INTE
                                    1-  697     	.line	719, "main.c"; 	INTF = 0;
     001E 02rr                      1-  698     	CLRR	_INTF
                                    1-  699     	.line	721, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001F 21B8                      1-  700     	MOVIA	0xb8
     0020 00rr                      1-  701     	MOVAR	_PCON
                                    1-  702     	.line	722, "main.c"; 	}
                                    1-  703     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1-  704     ; exit point of _gotoSleep
                                    1-  706     ;***
                                    1-  707     ;  pBlock Stats: dbName = C
                                    1-  708     ;***
                                    1-  709     ;has an exit
                                    1-  710     ;2 compiler assigned registers:
                                    1-  711     ;   r0x1027
                                    1-  712     ;   r0x1028
                                    1-  713     ;; Starting pCode block
                                    1-  714     .segment "code"; module=main, function=_delay
                                    1-  716     ;local variable name mapping:
     0000                           1-  719     _delay:
                                    1-  720     ; 2 exit points
                                    1-  721     	.line	692, "main.c"; 	void delay(u8t time)
                                    1-  722     	BANKSEL	r0x1027
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  723     	MOVAR	r0x1027
                                    1-  724     	.line	694, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  725     	BANKSEL	r0x1028
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  726     	CLRR	r0x1028
     0004                           1-  727     _00452_DS_:
                                    1-  728     	BANKSEL	r0x1027
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  729     	MOVR	r0x1027,W
                                    1-  730     	BANKSEL	r0x1028
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1-  731     	SUBAR	r0x1028,W
     0008 0C03                      1-  732     	BTRSC	STATUS,0
                                    1-  733     	MGOTO	_00454_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  734     	.line	695, "main.c"; 	NOP();
     000A 0000                      1-  735     	nop
                                    1-  736     	.line	694, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  737     	BANKSEL	r0x1028
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1-  738     	INCR	r0x1028,F
                                    1-  739     	MGOTO	_00452_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1-  740     _00454_DS_:
                                    1-  741     	.line	696, "main.c"; 	}
                                    1-  742     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1-  743     ; exit point of _delay
                                    1-  745     ;***
                                    1-  746     ;  pBlock Stats: dbName = C
                                    1-  747     ;***
                                    1-  748     ;has an exit
                                    1-  749     ;; Starting pCode block
                                    1-  750     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  752     _F_wait_eoc:
                                    1-  753     ; 2 exit points
     0000                           1-  754     _00445_DS_:
                                    1-  755     	.line	687, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  756     	BTRSS	_ADMDbits,5
                                    1-  757     	MGOTO	_00445_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  758     	.line	689, "main.c"; 	}
                                    1-  759     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  760     ; exit point of _F_wait_eoc
                                    1-  762     ;***
                                    1-  763     ;  pBlock Stats: dbName = C
                                    1-  764     ;***
                                    1-  765     ;has an exit
                                    1-  766     ;functions called:
                                    1-  767     ;   _delay
                                    1-  768     ;   _F_wait_eoc
                                    1-  769     ;   _delay
                                    1-  770     ;   _F_wait_eoc
                                    1-  771     ;6 compiler assigned registers:
                                    1-  772     ;   r0x1029
                                    1-  773     ;   r0x102A
                                    1-  774     ;   r0x102B
                                    1-  775     ;   r0x102C
                                    1-  776     ;   r0x102D
                                    1-  777     ;   r0x102E
                                    1-  778     ;; Starting pCode block
                                    1-  779     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1-  781     ;local variable name mapping:
     0000                           1-  784     _F_AIN1_Convert:
                                    1-  785     ; 2 exit points
                                    1-  786     	.line	670, "main.c"; 	void F_AIN1_Convert(char count)
                                    1-  787     	BANKSEL	r0x1029
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  788     	MOVAR	r0x1029
                                    1-  789     	.line	672, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1-  790     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  791     	CLRR	_R_AIN1_DATA_LB
                                    1-  792     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  793     	CLRR	_R_AIN1_DATA
     0006 02rr                      1-  794     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  795     	.line	674, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1-  796     	MOVIA	0x91
     0008 00rr                      1-  797     	MOVAR	_ADMD
                                    1-  798     	.line	675, "main.c"; 	delay(200);	
     0009 21C8                      1-  799     	MOVIA	0xc8
                                    1-  800     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  801     	.line	676, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  802     	MOVIA	0x01
                                    1-  803     	BANKSEL	r0x102A
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  804     	MOVAR	r0x102A
     000E                           1-  805     _00438_DS_:
                                    1-  806     	BANKSEL	r0x102A
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  807     	MOVR	r0x102A,W
                                    1-  808     	BANKSEL	r0x1029
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  809     	SUBAR	r0x1029,W
     0012 0803                      1-  810     	BTRSS	STATUS,0
                                    1-  811     	MGOTO	_00440_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  812     	.line	678, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  813     	BSR	_ADMDbits,6
                                    1-  814     	.line	679, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  815     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  816     	.line	680, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  817     	MOVIA	0x0f
     0017 10rr                      1-  818     	ANDAR	_ADR,W
                                    1-  819     ;;3	MOVAR	r0x102B
                                    1-  820     	BANKSEL	_R_AIN1_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  821     	ADDAR	_R_AIN1_DATA_LB,F
                                    1-  822     	.line	681, "main.c"; 	R_AIN1_DATA    += ADD; 
     001A 01rr                      1-  823     	MOVR	_ADD,W
                                    1-  824     	BANKSEL	r0x102B
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  825     	MOVAR	r0x102B
                                    1-  826     ;;1	CLRR	r0x102C
                                    1-  827     ;;102	MOVR	r0x102B,W
                                    1-  828     ;;100	MOVAR	r0x102D
     001D 2100                      1-  829     	MOVIA	0x00
                                    1-  830     	BANKSEL	r0x102E
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  831     	MOVAR	r0x102E
                                    1-  832     ;;101	MOVR	r0x102D,W
                                    1-  833     	BANKSEL	r0x102B
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  834     	MOVR	r0x102B,W
                                    1-  835     	BANKSEL	_R_AIN1_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  836     	ADDAR	_R_AIN1_DATA,F
                                    1-  837     	BANKSEL	r0x102E
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  838     	MOVR	r0x102E,W
     0026 0C03                      1-  839     	BTRSC	STATUS,0
     0027 05rr                      1-  840     	INCR	r0x102E,W
     0028 0D03                      1-  841     	BTRSC	STATUS,2
                                    1-  842     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  843     	BANKSEL	_R_AIN1_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  844     	ADDAR	(_R_AIN1_DATA + 1),F
     002C                           1-  845     _00001_DS_:
                                    1-  846     	.line	676, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  847     	BANKSEL	r0x102A
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  848     	INCR	r0x102A,F
                                    1-  849     	MGOTO	_00438_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  850     _00440_DS_:
                                    1-  851     	.line	683, "main.c"; 	}
                                    1-  852     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  853     ; exit point of _F_AIN1_Convert
                                    1-  855     ;***
                                    1-  856     ;  pBlock Stats: dbName = C
                                    1-  857     ;***
                                    1-  858     ;has an exit
                                    1-  859     ;functions called:
                                    1-  860     ;   _F_AIN1_Convert
                                    1-  861     ;   _F_AIN1_Convert
                                    1-  862     ;4 compiler assigned registers:
                                    1-  863     ;   r0x102F
                                    1-  864     ;   r0x1030
                                    1-  865     ;   r0x1031
                                    1-  866     ;   r0x1032
                                    1-  867     ;; Starting pCode block
                                    1-  868     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  870     _checkBatAD:
                                    1-  871     ; 2 exit points
                                    1-  872     	.line	641, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1-  873     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  874     	CLRR	_R_AIN1_DATA_LB
                                    1-  875     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  876     	CLRR	_R_AIN1_DATA
     0004 02rr                      1-  877     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  878     	.line	642, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  879     	MOVIA	0x08
                                    1-  880     	MCALL	_F_AIN1_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  881     	.line	643, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  882     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1-  883     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1-  884     	ANDIA	0xf0
     000A 00rr                      1-  885     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1-  886     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1-  887     	MOVAR	_R_AIN1_DATA
     000D 220F                      1-  888     	ANDIA	0x0f
     000E 11rr                      1-  889     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1-  890     	XORAR	_R_AIN1_DATA,F
                                    1-  891     	.line	644, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  892     	MOVIA	0xf0
                                    1-  893     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1-  894     	ANDAR	_R_AIN1_DATA_LB,F
                                    1-  895     	.line	645, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  896     	MOVR	_R_AIN1_DATA_LB,W
                                    1-  897     	BANKSEL	r0x1031
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  898     	MOVAR	r0x1031
                                    1-  899     ;;1	MOVAR	r0x102F
                                    1-  900     ;;1	CLRR	r0x1030
                                    1-  901     ;;99	MOVR	r0x102F,W
     0016 2100                      1-  902     	MOVIA	0x00
                                    1-  903     	BANKSEL	r0x1032
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  904     	MOVAR	r0x1032
                                    1-  905     	BANKSEL	r0x1031
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  906     	MOVR	r0x1031,W
                                    1-  907     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  908     	ADDAR	_R_AIN1_DATA,F
                                    1-  909     	BANKSEL	r0x1032
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  910     	MOVR	r0x1032,W
     001F 0C03                      1-  911     	BTRSC	STATUS,0
     0020 05rr                      1-  912     	INCR	r0x1032,W
     0021 0D03                      1-  913     	BTRSC	STATUS,2
                                    1-  914     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  915     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  916     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1-  917     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  918     _00002_DS_:
                                    1-  919     	.line	646, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1-  920     	BCR	STATUS,0
                                    1-  921     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1-  922     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1-  923     	RRR	_R_AIN1_DATA,F
                                    1-  924     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  925     	BCR	STATUS,0
     002A 13rr                      1-  926     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1-  927     	RRR	_R_AIN1_DATA,F
                                    1-  928     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  929     	BCR	STATUS,0
     002D 13rr                      1-  930     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1-  931     	RRR	_R_AIN1_DATA,F
                                    1-  932     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  933     ;;unsigned compare: left >= lit (0x5F6=1526), size=2
                                    1-  934     	.line	649, "main.c"; 	if(R_AIN1_DATA > 1525)
     002F 2105                      1-  935     	MOVIA	0x05
     0030 04rr                      1-  936     	SUBAR	(_R_AIN1_DATA + 1),W
     0031 0903                      1-  937     	BTRSS	STATUS,2
                                    1-  938     	MGOTO	_00430_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 21F6                      1-  939     	MOVIA	0xf6
     0034 04rr                      1-  940     	SUBAR	_R_AIN1_DATA,W
     0035                           1-  941     _00430_DS_:
     0035 0803                      1-  942     	BTRSS	STATUS,0
                                    1-  943     	MGOTO	_00417_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  944     	.line	652, "main.c"; 	lowCount = 0;
                                    1-  945     	BANKSEL	_lowCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1-  946     	CLRR	_lowCount
                                    1-  947     	MGOTO	_00419_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  948     ;;unsigned compare: left < lit (0x47E=1150), size=2
     003A                           1-  949     _00417_DS_:
                                    1-  950     	.line	654, "main.c"; 	else if(R_AIN1_DATA < 1150)
     003A 2104                      1-  951     	MOVIA	0x04
                                    1-  952     	BANKSEL	_R_AIN1_DATA
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1-  953     	SUBAR	(_R_AIN1_DATA + 1),W
     003D 0903                      1-  954     	BTRSS	STATUS,2
                                    1-  955     	MGOTO	_00431_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 217E                      1-  956     	MOVIA	0x7e
     0040 04rr                      1-  957     	SUBAR	_R_AIN1_DATA,W
     0041                           1-  958     _00431_DS_:
     0041 0C03                      1-  959     	BTRSC	STATUS,0
                                    1-  960     	MGOTO	_00414_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  961     	.line	656, "main.c"; 	if(++lowCount < 10)
                                    1-  962     	BANKSEL	_lowCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1-  963     	INCR	_lowCount,F
                                    1-  964     ;;unsigned compare: left < lit (0xA=10), size=1
     0045 210A                      1-  965     	MOVIA	0x0a
     0046 04rr                      1-  966     	SUBAR	_lowCount,W
     0047 0803                      1-  967     	BTRSS	STATUS,0
                                    1-  968     	.line	657, "main.c"; 	return;
                                    1-  969     	MGOTO	_00419_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  970     	.line	658, "main.c"; 	lowCount = 10;
     0049 210A                      1-  971     	MOVIA	0x0a
     004A 00rr                      1-  972     	MOVAR	_lowCount
                                    1-  973     	.line	659, "main.c"; 	R_AIN1_DATA = 1150;
     004B 217E                      1-  974     	MOVIA	0x7e
                                    1-  975     	BANKSEL	_R_AIN1_DATA
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 00rr                      1-  976     	MOVAR	_R_AIN1_DATA
     004E 2104                      1-  977     	MOVIA	0x04
     004F 00rr                      1-  978     	MOVAR	(_R_AIN1_DATA + 1)
                                    1-  979     	MGOTO	_00419_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1-  980     _00414_DS_:
                                    1-  981     	.line	663, "main.c"; 	lowCount = 0;
                                    1-  982     	BANKSEL	_lowCount
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1-  983     	CLRR	_lowCount
     0053                           1-  984     _00419_DS_:
                                    1-  985     	.line	667, "main.c"; 	}
                                    1-  986     	RETURN	
     0053 0010                      3-   40 m1      ret
                                    1-  987     ; exit point of _checkBatAD
                                    1-  989     ;***
                                    1-  990     ;  pBlock Stats: dbName = C
                                    1-  991     ;***
                                    1-  992     ;has an exit
                                    1-  993     ;functions called:
                                    1-  994     ;   _delay
                                    1-  995     ;   _delay
                                    1-  996     ;; Starting pCode block
                                    1-  997     .segment "code"; module=main, function=_initAD
     0000                           1-  999     _initAD:
                                    1- 1000     ; 2 exit points
                                    1- 1001     	.line	617, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA1 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2181                      1- 1002     	MOVIA	0x81
     0001 00rr                      1- 1003     	MOVAR	_ADMD
                                    1- 1004     	.line	622, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1005     	CLRR	_ADVREFH
                                    1- 1006     	.line	627, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1007     	MOVIA	0x10
     0004 00rr                      1- 1008     	MOVAR	_ADR
                                    1- 1009     	.line	629, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1010     	MOVIA	0x03
     0006 00rr                      1- 1011     	MOVAR	_ADCR
                                    1- 1012     	.line	632, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1013     	BSR	_ADMDbits,4
                                    1- 1014     	.line	633, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1015     	MOVIA	0x64
                                    1- 1016     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1017     	.line	636, "main.c"; 	}
                                    1- 1018     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1019     ; exit point of _initAD
                                    1- 1021     ;***
                                    1- 1022     ;  pBlock Stats: dbName = C
                                    1- 1023     ;***
                                    1- 1024     ;has an exit
                                    1- 1025     ;; Starting pCode block
                                    1- 1026     .segment "code"; module=main, function=_initSys
     0000                           1- 1028     _initSys:
                                    1- 1029     ; 2 exit points
                                    1- 1030     	.line	587, "main.c"; 	DISI();
     0000 0013                      1- 1031     	DISI
                                    1- 1032     	.line	588, "main.c"; 	IOSTA = C_PA7_Input  | C_PA3_Input | C_PA1_Input ;
     0001 218A                      1- 1033     	MOVIA	0x8a
     0002 000r                      1- 1034     	IOST	_IOSTA
                                    1- 1035     	.line	589, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 1036     	CLRA	
     0004 000r                      1- 1037     	IOST	_IOSTB
                                    1- 1038     	.line	590, "main.c"; 	PORTB = 0x0E;
     0005 210E                      1- 1039     	MOVIA	0x0e
     0006 00rr                      1- 1040     	MOVAR	_PORTB
                                    1- 1041     	.line	591, "main.c"; 	PORTA = 0x00;
                                    1- 1042     	BANKSEL	_PORTA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1043     	CLRR	_PORTA
                                    1- 1044     	.line	592, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 1045     	MOVIA	0x7f
     000A 000r                      1- 1046     	IOST	_APHCON
                                    1- 1047     	.line	593, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 1048     	MOVIA	0xff
     000C 00rr                      1- 1049     	MOVAR	_BPHCON
                                    1- 1050     	.line	594, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 1051     	MOVAR	_ABPLCON
                                    1- 1052     	.line	596, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 1053     	MOVIA	0x01
     000F 00rr                      1- 1054     	MOVAR	_INTE
                                    1- 1055     	.line	598, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 1056     	CLRA	
     0011 000r                      1- 1057     	IOST	_PCON1
                                    1- 1058     	.line	600, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 1059     	MOVIA	0x37
     0013 00rr                      1- 1060     	MOVAR	_TMR0
                                    1- 1061     	.line	601, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 1062     	MOVIA	0x01
     0015 0003                      1- 1063     	T0MD	
                                    1- 1064     	.line	603, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 1065     	IOST	_PCON1
                                    1- 1066     	.line	606, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 1067     	MOVIA	0x98
     0018 00rr                      1- 1068     	MOVAR	_PCON
                                    1- 1069     	.line	609, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 1070     	MOVIA	0x01
     001A 000r                      1- 1071     	IOST	_PCON1
                                    1- 1072     	.line	610, "main.c"; 	ENI();
     001B 0004                      1- 1073     	ENI
                                    1- 1074     	.line	611, "main.c"; 	}
                                    1- 1075     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 1076     ; exit point of _initSys
                                    1- 1078     ;***
                                    1- 1079     ;  pBlock Stats: dbName = C
                                    1- 1080     ;***
                                    1- 1081     ;has an exit
                                    1- 1082     ;; Starting pCode block
                                    1- 1083     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1085     _pwmStop:
                                    1- 1086     ; 2 exit points
                                    1- 1087     	.line	581, "main.c"; 	T3CR1 = C_TMR3_Dis;
     0000 0200                      1- 1088     	CLRA	
     0001 00rr                      1- 1089     	SFUN	_T3CR1
                                    1- 1090     	.line	582, "main.c"; 	}
                                    1- 1091     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1092     ; exit point of _pwmStop
                                    1- 1094     ;***
                                    1- 1095     ;  pBlock Stats: dbName = C
                                    1- 1096     ;***
                                    1- 1097     ;has an exit
                                    1- 1098     ;1 compiler assigned register :
                                    1- 1099     ;   r0x1033
                                    1- 1100     ;; Starting pCode block
                                    1- 1101     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1103     _pwmInit:
                                    1- 1104     ; 2 exit points
                                    1- 1105     	.line	569, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1106     	SFUNR	_T2CR1
                                    1- 1107     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1108     	MOVAR	r0x1033
     0003 0Frr                      1- 1109     	BTRSC	r0x1033,7
                                    1- 1110     	.line	570, "main.c"; 	return;
                                    1- 1111     	MGOTO	_00394_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1112     	.line	571, "main.c"; 	TM3RH = 0x00;
     0005 02rr                      1- 1113     	CLRR	_TM3RH
                                    1- 1114     	.line	572, "main.c"; 	TMR3 = 128;							//频率为110K
     0006 2180                      1- 1115     	MOVIA	0x80
     0007 00rr                      1- 1116     	SFUN	_TMR3
                                    1- 1117     	.line	575, "main.c"; 	T3CR2 = C_TMR3_ClkSrc_Inst | C_PS3_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 1118     	MOVIA	0x01
     0009 00rr                      1- 1119     	SFUN	_T3CR2
                                    1- 1120     	.line	576, "main.c"; 	T3CR1 = C_PWM3_En | C_TMR3_Reload | C_TMR3_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 1121     	MOVIA	0x83
     000B 00rr                      1- 1122     	SFUN	_T3CR1
     000C                           1- 1123     _00394_DS_:
                                    1- 1124     	.line	577, "main.c"; 	}
                                    1- 1125     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1126     ; exit point of _pwmInit
                                    1- 1128     ;***
                                    1- 1129     ;  pBlock Stats: dbName = C
                                    1- 1130     ;***
                                    1- 1131     ;has an exit
                                    1- 1132     ;; Starting pCode block
                                    1- 1133     .segment "code"; module=main, function=_rainbow
     0000                           1- 1135     _rainbow:
                                    1- 1136     ; 2 exit points
                                    1- 1137     	.line	488, "main.c"; 	if(red > lastRed)
                                    1- 1138     	BANKSEL	_red
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1139     	MOVR	_red,W
                                    1- 1140     	BANKSEL	_lastRed
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1141     	SUBAR	_lastRed,W
     0004 0C03                      1- 1142     	BTRSC	STATUS,0
                                    1- 1143     	MGOTO	_00003_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1144     	.line	489, "main.c"; 	red--;
                                    1- 1145     	BANKSEL	_red
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 06rr                      1- 1146     	DECR	_red,F
     0008                           1- 1147     _00003_DS_:
                                    1- 1148     	.line	490, "main.c"; 	if(green > lastGreen)
                                    1- 1149     	BANKSEL	_green
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1150     	MOVR	_green,W
                                    1- 1151     	BANKSEL	_lastGreen
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 1152     	SUBAR	_lastGreen,W
     000C 0C03                      1- 1153     	BTRSC	STATUS,0
                                    1- 1154     	MGOTO	_00004_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1155     	.line	491, "main.c"; 	green--;
                                    1- 1156     	BANKSEL	_green
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1- 1157     	DECR	_green,F
     0010                           1- 1158     _00004_DS_:
                                    1- 1159     	.line	492, "main.c"; 	if(blue > lastBlue)
                                    1- 1160     	BANKSEL	_blue
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1161     	MOVR	_blue,W
                                    1- 1162     	BANKSEL	_lastBlue
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1163     	SUBAR	_lastBlue,W
     0014 0C03                      1- 1164     	BTRSC	STATUS,0
                                    1- 1165     	MGOTO	_00005_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1166     	.line	493, "main.c"; 	blue--;
                                    1- 1167     	BANKSEL	_blue
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 06rr                      1- 1168     	DECR	_blue,F
     0018                           1- 1169     _00005_DS_:
                                    1- 1170     	.line	494, "main.c"; 	if(red < lastRed)
                                    1- 1171     	BANKSEL	_lastRed
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1- 1172     	MOVR	_lastRed,W
                                    1- 1173     	BANKSEL	_red
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 04rr                      1- 1174     	SUBAR	_red,W
     001C 0803                      1- 1175     	BTRSS	STATUS,0
                                    1- 1176     	.line	495, "main.c"; 	red++;
     001D 05rr                      1- 1177     	INCR	_red,F
                                    1- 1178     	.line	496, "main.c"; 	if(green < lastGreen)
                                    1- 1179     	BANKSEL	_lastGreen
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 1180     	MOVR	_lastGreen,W
                                    1- 1181     	BANKSEL	_green
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 1182     	SUBAR	_green,W
     0022 0803                      1- 1183     	BTRSS	STATUS,0
                                    1- 1184     	.line	497, "main.c"; 	green++;
     0023 05rr                      1- 1185     	INCR	_green,F
                                    1- 1186     	.line	498, "main.c"; 	if(blue < lastBlue)
                                    1- 1187     	BANKSEL	_lastBlue
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1188     	MOVR	_lastBlue,W
                                    1- 1189     	BANKSEL	_blue
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 04rr                      1- 1190     	SUBAR	_blue,W
     0028 0803                      1- 1191     	BTRSS	STATUS,0
                                    1- 1192     	.line	499, "main.c"; 	blue++;
     0029 05rr                      1- 1193     	INCR	_blue,F
                                    1- 1194     	.line	500, "main.c"; 	if(delayTime > 0)
                                    1- 1195     	BANKSEL	_delayTime
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 1196     	MOVR	_delayTime,W
     002C 0D03                      1- 1197     	BTRSC	STATUS,2
                                    1- 1198     	MGOTO	_00355_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1199     	.line	502, "main.c"; 	delayTime--;
     002E 06rr                      1- 1200     	DECR	_delayTime,F
                                    1- 1201     	.line	503, "main.c"; 	return;
                                    1- 1202     	MGOTO	_00387_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 1203     _00355_DS_:
                                    1- 1204     	.line	505, "main.c"; 	if(colorStep == 1)
                                    1- 1205     	BANKSEL	_colorStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1206     	MOVR	_colorStep,W
     0032 2401                      1- 1207     	XORIA	0x01
     0033 0903                      1- 1208     	BTRSS	STATUS,2
                                    1- 1209     	MGOTO	_00377_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1210     	.line	507, "main.c"; 	lastRed = 255;
     0035 21FF                      1- 1211     	MOVIA	0xff
                                    1- 1212     	BANKSEL	_lastRed
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1213     	MOVAR	_lastRed
                                    1- 1214     	.line	508, "main.c"; 	lastGreen = 0;
                                    1- 1215     	BANKSEL	_lastGreen
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 1216     	CLRR	_lastGreen
                                    1- 1217     	.line	509, "main.c"; 	lastBlue = 0;
                                    1- 1218     	BANKSEL	_lastBlue
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 02rr                      1- 1219     	CLRR	_lastBlue
                                    1- 1220     	MGOTO	_00378_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1- 1221     _00377_DS_:
                                    1- 1222     	.line	512, "main.c"; 	else if(colorStep == 2)
                                    1- 1223     	BANKSEL	_colorStep
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1- 1224     	MOVR	_colorStep,W
     003F 2402                      1- 1225     	XORIA	0x02
     0040 0903                      1- 1226     	BTRSS	STATUS,2
                                    1- 1227     	MGOTO	_00374_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1228     	.line	514, "main.c"; 	lastRed = 255;
     0042 21FF                      1- 1229     	MOVIA	0xff
                                    1- 1230     	BANKSEL	_lastRed
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1231     	MOVAR	_lastRed
                                    1- 1232     	.line	515, "main.c"; 	lastGreen = 255;
                                    1- 1233     	BANKSEL	_lastGreen
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1234     	MOVAR	_lastGreen
                                    1- 1235     	.line	516, "main.c"; 	lastBlue = 0;
                                    1- 1236     	BANKSEL	_lastBlue
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1237     	CLRR	_lastBlue
                                    1- 1238     	MGOTO	_00378_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A                           1- 1239     _00374_DS_:
                                    1- 1240     	.line	518, "main.c"; 	else if(colorStep == 3)
                                    1- 1241     	BANKSEL	_colorStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 1242     	MOVR	_colorStep,W
     004C 2403                      1- 1243     	XORIA	0x03
     004D 0903                      1- 1244     	BTRSS	STATUS,2
                                    1- 1245     	MGOTO	_00371_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1246     	.line	520, "main.c"; 	lastRed = 0;
                                    1- 1247     	BANKSEL	_lastRed
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1- 1248     	CLRR	_lastRed
                                    1- 1249     	.line	521, "main.c"; 	lastGreen = 255;
     0051 21FF                      1- 1250     	MOVIA	0xff
                                    1- 1251     	BANKSEL	_lastGreen
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 1252     	MOVAR	_lastGreen
                                    1- 1253     	.line	522, "main.c"; 	lastBlue = 0;
                                    1- 1254     	BANKSEL	_lastBlue
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1- 1255     	CLRR	_lastBlue
                                    1- 1256     	MGOTO	_00378_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 1257     _00371_DS_:
                                    1- 1258     	.line	524, "main.c"; 	else if(colorStep == 4)
                                    1- 1259     	BANKSEL	_colorStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 1260     	MOVR	_colorStep,W
     0059 2404                      1- 1261     	XORIA	0x04
     005A 0903                      1- 1262     	BTRSS	STATUS,2
                                    1- 1263     	MGOTO	_00368_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1264     	.line	526, "main.c"; 	lastRed = 0;
                                    1- 1265     	BANKSEL	_lastRed
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 1266     	CLRR	_lastRed
                                    1- 1267     	.line	527, "main.c"; 	lastGreen = 0;
                                    1- 1268     	BANKSEL	_lastGreen
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1269     	CLRR	_lastGreen
                                    1- 1270     	.line	528, "main.c"; 	lastBlue = 255;
     0060 21FF                      1- 1271     	MOVIA	0xff
                                    1- 1272     	BANKSEL	_lastBlue
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 1273     	MOVAR	_lastBlue
                                    1- 1274     	MGOTO	_00378_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064                           1- 1275     _00368_DS_:
                                    1- 1276     	.line	530, "main.c"; 	else if(colorStep == 5)
                                    1- 1277     	BANKSEL	_colorStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1278     	MOVR	_colorStep,W
     0066 2405                      1- 1279     	XORIA	0x05
     0067 0903                      1- 1280     	BTRSS	STATUS,2
                                    1- 1281     	MGOTO	_00365_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1282     	.line	532, "main.c"; 	lastRed = 255;
     0069 21FF                      1- 1283     	MOVIA	0xff
                                    1- 1284     	BANKSEL	_lastRed
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 00rr                      1- 1285     	MOVAR	_lastRed
                                    1- 1286     	.line	533, "main.c"; 	lastGreen = 0;
                                    1- 1287     	BANKSEL	_lastGreen
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 02rr                      1- 1288     	CLRR	_lastGreen
                                    1- 1289     	.line	534, "main.c"; 	lastBlue = 255;
     006E 21FF                      1- 1290     	MOVIA	0xff
                                    1- 1291     	BANKSEL	_lastBlue
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 1292     	MOVAR	_lastBlue
                                    1- 1293     	MGOTO	_00378_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 1294     _00365_DS_:
                                    1- 1295     	.line	536, "main.c"; 	else if(colorStep == 6)
                                    1- 1296     	BANKSEL	_colorStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 1297     	MOVR	_colorStep,W
     0074 2406                      1- 1298     	XORIA	0x06
     0075 0903                      1- 1299     	BTRSS	STATUS,2
                                    1- 1300     	MGOTO	_00362_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1301     	.line	538, "main.c"; 	lastRed = 255;
     0077 21FF                      1- 1302     	MOVIA	0xff
                                    1- 1303     	BANKSEL	_lastRed
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 1304     	MOVAR	_lastRed
                                    1- 1305     	.line	539, "main.c"; 	lastGreen = 0;
                                    1- 1306     	BANKSEL	_lastGreen
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 02rr                      1- 1307     	CLRR	_lastGreen
                                    1- 1308     	.line	540, "main.c"; 	lastBlue = 0;
                                    1- 1309     	BANKSEL	_lastBlue
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 02rr                      1- 1310     	CLRR	_lastBlue
                                    1- 1311     	MGOTO	_00378_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F                           1- 1312     _00362_DS_:
                                    1- 1313     	.line	542, "main.c"; 	else if(colorStep == 7)
                                    1- 1314     	BANKSEL	_colorStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 1315     	MOVR	_colorStep,W
     0081 2407                      1- 1316     	XORIA	0x07
     0082 0903                      1- 1317     	BTRSS	STATUS,2
                                    1- 1318     	MGOTO	_00359_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1319     	.line	544, "main.c"; 	lastRed = 255;
     0084 21FF                      1- 1320     	MOVIA	0xff
                                    1- 1321     	BANKSEL	_lastRed
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1322     	MOVAR	_lastRed
                                    1- 1323     	.line	545, "main.c"; 	lastGreen = 255;
                                    1- 1324     	BANKSEL	_lastGreen
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1325     	MOVAR	_lastGreen
                                    1- 1326     	.line	546, "main.c"; 	lastBlue = 0;
                                    1- 1327     	BANKSEL	_lastBlue
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 02rr                      1- 1328     	CLRR	_lastBlue
                                    1- 1329     	MGOTO	_00378_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
     008C                           1- 1330     _00359_DS_:
                                    1- 1331     	.line	548, "main.c"; 	else if(colorStep == 8)
                                    1- 1332     	BANKSEL	_colorStep
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1- 1333     	MOVR	_colorStep,W
     008E 2408                      1- 1334     	XORIA	0x08
     008F 0903                      1- 1335     	BTRSS	STATUS,2
                                    1- 1336     	MGOTO	_00378_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1337     	.line	550, "main.c"; 	lastRed = 0;
                                    1- 1338     	BANKSEL	_lastRed
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 02rr                      1- 1339     	CLRR	_lastRed
                                    1- 1340     	.line	551, "main.c"; 	lastGreen = 255;
     0093 21FF                      1- 1341     	MOVIA	0xff
                                    1- 1342     	BANKSEL	_lastGreen
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 00rr                      1- 1343     	MOVAR	_lastGreen
                                    1- 1344     	.line	552, "main.c"; 	lastBlue = 0;
                                    1- 1345     	BANKSEL	_lastBlue
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 02rr                      1- 1346     	CLRR	_lastBlue
     0098                           1- 1347     _00378_DS_:
                                    1- 1348     	.line	556, "main.c"; 	if(red == lastRed && blue == lastBlue && green == lastGreen)
                                    1- 1349     	BANKSEL	_lastRed
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1350     	MOVR	_lastRed,W
                                    1- 1351     	BANKSEL	_red
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 12rr                      1- 1352     	XORAR	_red,W
     009C 0903                      1- 1353     	BTRSS	STATUS,2
                                    1- 1354     	MGOTO	_00387_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1355     	BANKSEL	_lastBlue
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 01rr                      1- 1356     	MOVR	_lastBlue,W
                                    1- 1357     	BANKSEL	_blue
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 12rr                      1- 1358     	XORAR	_blue,W
     00A2 0903                      1- 1359     	BTRSS	STATUS,2
                                    1- 1360     	MGOTO	_00387_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1361     	BANKSEL	_lastGreen
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1362     	MOVR	_lastGreen,W
                                    1- 1363     	BANKSEL	_green
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 12rr                      1- 1364     	XORAR	_green,W
     00A8 0903                      1- 1365     	BTRSS	STATUS,2
                                    1- 1366     	MGOTO	_00387_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1367     	.line	558, "main.c"; 	if(++colorStep > 8)
                                    1- 1368     	BANKSEL	_colorStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 05rr                      1- 1369     	INCR	_colorStep,F
                                    1- 1370     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1371     ;;unsigned compare: left >= lit (0x9=9), size=1
     00AC 2109                      1- 1372     	MOVIA	0x09
     00AD 04rr                      1- 1373     	SUBAR	_colorStep,W
     00AE 0803                      1- 1374     	BTRSS	STATUS,0
                                    1- 1375     	MGOTO	_00380_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1376     	.line	560, "main.c"; 	colorStep = 4;
     00B0 2104                      1- 1377     	MOVIA	0x04
     00B1 00rr                      1- 1378     	MOVAR	_colorStep
     00B2                           1- 1379     _00380_DS_:
                                    1- 1380     	.line	562, "main.c"; 	if(delayTime == 0)
                                    1- 1381     	BANKSEL	_delayTime
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 1382     	MOVR	_delayTime,W
     00B4 0903                      1- 1383     	BTRSS	STATUS,2
                                    1- 1384     	MGOTO	_00387_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1385     	.line	563, "main.c"; 	delayTime = 90;
     00B6 215A                      1- 1386     	MOVIA	0x5a
     00B7 00rr                      1- 1387     	MOVAR	_delayTime
     00B8                           1- 1388     _00387_DS_:
                                    1- 1389     	.line	565, "main.c"; 	}
                                    1- 1390     	RETURN	
     00B8 0010                      3-   40 m1      ret
                                    1- 1391     ; exit point of _rainbow
                                    1- 1393     ;***
                                    1- 1394     ;  pBlock Stats: dbName = C
                                    1- 1395     ;***
                                    1- 1396     ;has an exit
                                    1- 1397     ;; Starting pCode block
                                    1- 1398     .segment "code"; module=main, function=_ledOff
     0000                           1- 1400     _ledOff:
                                    1- 1401     ; 2 exit points
                                    1- 1402     	.line	481, "main.c"; 	PORTA &= 0XFE;
                                    1- 1403     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Crr                      1- 1404     	BCR	_PORTA,0
                                    1- 1405     	.line	482, "main.c"; 	PORTB &= 0XFE;
     0002 1Crr                      1- 1406     	BCR	_PORTB,0
                                    1- 1407     	.line	483, "main.c"; 	}
                                    1- 1408     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 1409     ; exit point of _ledOff
                                    1- 1411     ;***
                                    1- 1412     ;  pBlock Stats: dbName = C
                                    1- 1413     ;***
                                    1- 1414     ;has an exit
                                    1- 1415     ;; Starting pCode block
                                    1- 1416     .segment "code"; module=main, function=_ledGreen
     0000                           1- 1418     _ledGreen:
                                    1- 1419     ; 2 exit points
                                    1- 1420     	.line	475, "main.c"; 	PORTA |= 0X01;
                                    1- 1421     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 18rr                      1- 1422     	BSR	_PORTA,0
                                    1- 1423     	.line	476, "main.c"; 	PORTB &= 0XFE;
     0002 1Crr                      1- 1424     	BCR	_PORTB,0
                                    1- 1425     	.line	477, "main.c"; 	}
                                    1- 1426     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 1427     ; exit point of _ledGreen
                                    1- 1429     ;***
                                    1- 1430     ;  pBlock Stats: dbName = C
                                    1- 1431     ;***
                                    1- 1432     ;has an exit
                                    1- 1433     ;; Starting pCode block
                                    1- 1434     .segment "code"; module=main, function=_ledRed
     0000                           1- 1436     _ledRed:
                                    1- 1437     ; 2 exit points
                                    1- 1438     	.line	469, "main.c"; 	PORTB |= 0X01;
     0000 18rr                      1- 1439     	BSR	_PORTB,0
                                    1- 1440     	.line	470, "main.c"; 	PORTA &= 0XFE;
                                    1- 1441     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 1Crr                      1- 1442     	BCR	_PORTA,0
                                    1- 1443     	.line	471, "main.c"; 	}
                                    1- 1444     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 1445     ; exit point of _ledRed
                                    1- 1447     ;***
                                    1- 1448     ;  pBlock Stats: dbName = C
                                    1- 1449     ;***
                                    1- 1450     ;5 compiler assigned registers:
                                    1- 1451     ;   r0x1034
                                    1- 1452     ;   STK00
                                    1- 1453     ;   r0x1035
                                    1- 1454     ;   STK01
                                    1- 1455     ;   r0x1036
                                    1- 1456     ;; Starting pCode block
                                    1- 1457     .segment "code"; module=main, function=_breath
                                    1- 1459     ;local variable name mapping:
     0000                           1- 1463     _breath:
                                    1- 1464     ; 0 exit points
                                    1- 1465     	.line	414, "main.c"; 	void breath(u8t color1,u8t color2,u8t color3)
                                    1- 1466     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1467     	MOVAR	r0x1034
     0002 01rr                      1- 1468     	MOVR	STK00,W
                                    1- 1469     	BANKSEL	r0x1035
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1470     	MOVAR	r0x1035
     0005 01rr                      1- 1471     	MOVR	STK01,W
                                    1- 1472     	BANKSEL	r0x1036
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1473     	MOVAR	r0x1036
                                    1- 1474     	.line	416, "main.c"; 	if(++count10ms >= 3)
                                    1- 1475     	BANKSEL	_count10ms
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 05rr                      1- 1476     	INCR	_count10ms,F
                                    1- 1477     ;;unsigned compare: left < lit (0x3=3), size=1
     000A 2103                      1- 1478     	MOVIA	0x03
     000B 04rr                      1- 1479     	SUBAR	_count10ms,W
     000C 0803                      1- 1480     	BTRSS	STATUS,0
                                    1- 1481     	MGOTO	_00325_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1482     	.line	418, "main.c"; 	count10ms = 0;
     000E 02rr                      1- 1483     	CLRR	_count10ms
                                    1- 1484     	.line	419, "main.c"; 	if(breathFalg == 0 && ++breathTime > 180)
                                    1- 1485     	BANKSEL	_breathFalg
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1486     	MOVR	_breathFalg,W
     0011 0903                      1- 1487     	BTRSS	STATUS,2
                                    1- 1488     	MGOTO	_00299_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1489     	BANKSEL	_breathTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 05rr                      1- 1490     	INCR	_breathTime,F
                                    1- 1491     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1492     ;;unsigned compare: left >= lit (0xB5=181), size=1
     0015 21B5                      1- 1493     	MOVIA	0xb5
     0016 04rr                      1- 1494     	SUBAR	_breathTime,W
     0017 0803                      1- 1495     	BTRSS	STATUS,0
                                    1- 1496     	MGOTO	_00299_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1497     	.line	421, "main.c"; 	breathTime = 180;
     0019 21B4                      1- 1498     	MOVIA	0xb4
     001A 00rr                      1- 1499     	MOVAR	_breathTime
                                    1- 1500     	.line	422, "main.c"; 	red = color1;
                                    1- 1501     	BANKSEL	r0x1034
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1502     	MOVR	r0x1034,W
                                    1- 1503     	BANKSEL	_red
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1504     	MOVAR	_red
                                    1- 1505     	.line	423, "main.c"; 	green = color2;
                                    1- 1506     	BANKSEL	r0x1035
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1507     	MOVR	r0x1035,W
                                    1- 1508     	BANKSEL	_green
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 1509     	MOVAR	_green
                                    1- 1510     	.line	424, "main.c"; 	blue = color3;
                                    1- 1511     	BANKSEL	r0x1036
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 1512     	MOVR	r0x1036,W
                                    1- 1513     	BANKSEL	_blue
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 1514     	MOVAR	_blue
                                    1- 1515     	.line	425, "main.c"; 	if(++breathWaitTime > 40)
                                    1- 1516     	BANKSEL	_breathWaitTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 05rr                      1- 1517     	INCR	_breathWaitTime,F
                                    1- 1518     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1519     ;;unsigned compare: left >= lit (0x29=41), size=1
     0029 2129                      1- 1520     	MOVIA	0x29
     002A 04rr                      1- 1521     	SUBAR	_breathWaitTime,W
     002B 0803                      1- 1522     	BTRSS	STATUS,0
                                    1- 1523     	MGOTO	_00299_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1524     	.line	427, "main.c"; 	breathFalg = 1;
     002D 2101                      1- 1525     	MOVIA	0x01
                                    1- 1526     	BANKSEL	_breathFalg
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 1527     	MOVAR	_breathFalg
                                    1- 1528     	.line	428, "main.c"; 	breathWaitTime = 0;
                                    1- 1529     	BANKSEL	_breathWaitTime
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1- 1530     	CLRR	_breathWaitTime
     0032                           1- 1531     _00299_DS_:
                                    1- 1532     	.line	431, "main.c"; 	if(breathFalg == 1)
                                    1- 1533     	BANKSEL	_breathFalg
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 1534     	MOVR	_breathFalg,W
     0034 2401                      1- 1535     	XORIA	0x01
     0035 0903                      1- 1536     	BTRSS	STATUS,2
                                    1- 1537     	MGOTO	_00307_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1538     	.line	433, "main.c"; 	if(breathTime > 0)
                                    1- 1539     	BANKSEL	_breathTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 1540     	MOVR	_breathTime,W
     0039 0D03                      1- 1541     	BTRSC	STATUS,2
                                    1- 1542     	MGOTO	_00304_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1543     	.line	434, "main.c"; 	--breathTime;
     003B 06rr                      1- 1544     	DECR	_breathTime,F
                                    1- 1545     	MGOTO	_00307_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1- 1546     _00304_DS_:
                                    1- 1547     	.line	437, "main.c"; 	if(++breathWaitTime > 40)
                                    1- 1548     	BANKSEL	_breathWaitTime
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 05rr                      1- 1549     	INCR	_breathWaitTime,F
                                    1- 1550     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1551     ;;unsigned compare: left >= lit (0x29=41), size=1
     003F 2129                      1- 1552     	MOVIA	0x29
     0040 04rr                      1- 1553     	SUBAR	_breathWaitTime,W
     0041 0803                      1- 1554     	BTRSS	STATUS,0
                                    1- 1555     	MGOTO	_00307_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1556     	.line	439, "main.c"; 	breathFalg = 0;
                                    1- 1557     	BANKSEL	_breathFalg
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1- 1558     	CLRR	_breathFalg
                                    1- 1559     	.line	440, "main.c"; 	breathWaitTime = 0;
                                    1- 1560     	BANKSEL	_breathWaitTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 1561     	CLRR	_breathWaitTime
     0047                           1- 1562     _00307_DS_:
                                    1- 1563     	.line	444, "main.c"; 	if(breathFalg)
                                    1- 1564     	BANKSEL	_breathFalg
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1- 1565     	MOVR	_breathFalg,W
     0049 0D03                      1- 1566     	BTRSC	STATUS,2
                                    1- 1567     	MGOTO	_00321_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1568     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1569     ;;unsigned compare: left >= lit (0x47=71), size=1
                                    1- 1570     	.line	447, "main.c"; 	if(red > 70)
     004B 2147                      1- 1571     	MOVIA	0x47
                                    1- 1572     	BANKSEL	_red
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 04rr                      1- 1573     	SUBAR	_red,W
     004E 0C03                      1- 1574     	BTRSC	STATUS,0
                                    1- 1575     	.line	448, "main.c"; 	red--;
     004F 06rr                      1- 1576     	DECR	_red,F
                                    1- 1577     	.line	449, "main.c"; 	if(green > 70)
     0050 2147                      1- 1578     	MOVIA	0x47
                                    1- 1579     	BANKSEL	_green
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 04rr                      1- 1580     	SUBAR	_green,W
     0053 0C03                      1- 1581     	BTRSC	STATUS,0
                                    1- 1582     	.line	450, "main.c"; 	green--;
     0054 06rr                      1- 1583     	DECR	_green,F
                                    1- 1584     	.line	451, "main.c"; 	if(blue > 70)
     0055 2147                      1- 1585     	MOVIA	0x47
                                    1- 1586     	BANKSEL	_blue
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 04rr                      1- 1587     	SUBAR	_blue,W
     0058 0803                      1- 1588     	BTRSS	STATUS,0
                                    1- 1589     	MGOTO	_00325_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1590     	.line	452, "main.c"; 	blue--;
     005A 06rr                      1- 1591     	DECR	_blue,F
                                    1- 1592     	MGOTO	_00325_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1593     _00321_DS_:
                                    1- 1594     	.line	457, "main.c"; 	if(red < color1)
                                    1- 1595     	BANKSEL	r0x1034
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1596     	MOVR	r0x1034,W
                                    1- 1597     	BANKSEL	_red
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 04rr                      1- 1598     	SUBAR	_red,W
     0060 0803                      1- 1599     	BTRSS	STATUS,0
                                    1- 1600     	.line	458, "main.c"; 	red++;
     0061 05rr                      1- 1601     	INCR	_red,F
                                    1- 1602     	.line	459, "main.c"; 	if(green < color2)
                                    1- 1603     	BANKSEL	r0x1035
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 01rr                      1- 1604     	MOVR	r0x1035,W
                                    1- 1605     	BANKSEL	_green
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 1606     	SUBAR	_green,W
     0066 0803                      1- 1607     	BTRSS	STATUS,0
                                    1- 1608     	.line	460, "main.c"; 	green++;
     0067 05rr                      1- 1609     	INCR	_green,F
                                    1- 1610     	.line	461, "main.c"; 	if(blue < color3)
                                    1- 1611     	BANKSEL	r0x1036
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 1612     	MOVR	r0x1036,W
                                    1- 1613     	BANKSEL	_blue
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1614     	SUBAR	_blue,W
     006C 0803                      1- 1615     	BTRSS	STATUS,0
                                    1- 1616     	.line	462, "main.c"; 	blue++;
     006D 05rr                      1- 1617     	INCR	_blue,F
     006E                           1- 1618     _00325_DS_:
                                    1- 1619     	.line	465, "main.c"; 	}
                                    1- 1620     	RETURN	
     006E 0010                      3-   40 m1      ret
                                    1- 1622     ;***
                                    1- 1623     ;  pBlock Stats: dbName = C
                                    1- 1624     ;***
                                    1- 1625     ;has an exit
                                    1- 1626     ;2 compiler assigned registers:
                                    1- 1627     ;   STK00
                                    1- 1628     ;   STK01
                                    1- 1629     ;; Starting pCode block
                                    1- 1630     .segment "code"; module=main, function=_setLastColor
     0000                           1- 1632     _setLastColor:
                                    1- 1633     ; 2 exit points
                                    1- 1634     	.line	406, "main.c"; 	void setLastColor(u8t red1,u8t green1,u8t blue1)
                                    1- 1635     	BANKSEL	_lastRed
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1636     	MOVAR	_lastRed
     0002 01rr                      1- 1637     	MOVR	STK00,W
                                    1- 1638     	BANKSEL	_lastGreen
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1639     	MOVAR	_lastGreen
     0005 01rr                      1- 1640     	MOVR	STK01,W
                                    1- 1641     	BANKSEL	_lastBlue
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1642     	MOVAR	_lastBlue
                                    1- 1643     	.line	411, "main.c"; 	}
                                    1- 1644     	RETURN	
     0008 0010                      3-   40 m1      ret
                                    1- 1645     ; exit point of _setLastColor
                                    1- 1647     ;***
                                    1- 1648     ;  pBlock Stats: dbName = C
                                    1- 1649     ;***
                                    1- 1650     ;has an exit
                                    1- 1651     ;2 compiler assigned registers:
                                    1- 1652     ;   STK00
                                    1- 1653     ;   STK01
                                    1- 1654     ;; Starting pCode block
                                    1- 1655     .segment "code"; module=main, function=_setColor
     0000                           1- 1657     _setColor:
                                    1- 1658     ; 2 exit points
                                    1- 1659     	.line	399, "main.c"; 	void setColor(u8t color1,u8t color2,u8t color3)
                                    1- 1660     	BANKSEL	_red
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1661     	MOVAR	_red
     0002 01rr                      1- 1662     	MOVR	STK00,W
                                    1- 1663     	BANKSEL	_green
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1664     	MOVAR	_green
     0005 01rr                      1- 1665     	MOVR	STK01,W
                                    1- 1666     	BANKSEL	_blue
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1667     	MOVAR	_blue
                                    1- 1668     	.line	404, "main.c"; 	}
                                    1- 1669     	RETURN	
     0008 0010                      3-   40 m1      ret
                                    1- 1670     ; exit point of _setColor
                                    1- 1672     ;***
                                    1- 1673     ;  pBlock Stats: dbName = C
                                    1- 1674     ;***
                                    1- 1675     ;; Starting pCode block
                                    1- 1676     .segment "code"; module=main, function=_showRGB
     0000                           1- 1678     _showRGB:
                                    1- 1679     ; 0 exit points
                                    1- 1680     	.line	369, "main.c"; 	if(green <= ledCount)
                                    1- 1681     	BANKSEL	_green
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1682     	MOVR	_green,W
                                    1- 1683     	BANKSEL	_ledCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1684     	SUBAR	_ledCount,W
     0004 0803                      1- 1685     	BTRSS	STATUS,0
                                    1- 1686     	MGOTO	_00273_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1687     	.line	371, "main.c"; 	PORTB |= 0x02;
     0006 18rr                      1- 1688     	BSR	_PORTB,1
                                    1- 1689     	MGOTO	_00274_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008                           1- 1690     _00273_DS_:
                                    1- 1691     	.line	375, "main.c"; 	PORTB &= 0xFD;
     0008 1Crr                      1- 1692     	BCR	_PORTB,1
     0009                           1- 1693     _00274_DS_:
                                    1- 1694     	.line	378, "main.c"; 	if(blue <= ledCount)
                                    1- 1695     	BANKSEL	_blue
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 1696     	MOVR	_blue,W
                                    1- 1697     	BANKSEL	_ledCount
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 1698     	SUBAR	_ledCount,W
     000D 0803                      1- 1699     	BTRSS	STATUS,0
                                    1- 1700     	MGOTO	_00276_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1701     	.line	380, "main.c"; 	PORTB |= 0x08;
     000F 19rr                      1- 1702     	BSR	_PORTB,3
                                    1- 1703     	MGOTO	_00277_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1- 1704     _00276_DS_:
                                    1- 1705     	.line	384, "main.c"; 	PORTB &= 0xF7;
     0011 1Drr                      1- 1706     	BCR	_PORTB,3
     0012                           1- 1707     _00277_DS_:
                                    1- 1708     	.line	387, "main.c"; 	if(red <= ledCount)
                                    1- 1709     	BANKSEL	_red
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1710     	MOVR	_red,W
                                    1- 1711     	BANKSEL	_ledCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1712     	SUBAR	_ledCount,W
     0016 0803                      1- 1713     	BTRSS	STATUS,0
                                    1- 1714     	MGOTO	_00279_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1715     	.line	389, "main.c"; 	PORTB |= 0x04;
     0018 19rr                      1- 1716     	BSR	_PORTB,2
                                    1- 1717     	MGOTO	_00280_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 1718     _00279_DS_:
                                    1- 1719     	.line	393, "main.c"; 	PORTB &= 0xFB;
     001A 1Drr                      1- 1720     	BCR	_PORTB,2
     001B                           1- 1721     _00280_DS_:
                                    1- 1722     	.line	395, "main.c"; 	if(++ledCount > 254)
                                    1- 1723     	BANKSEL	_ledCount
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 05rr                      1- 1724     	INCR	_ledCount,F
                                    1- 1725     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1726     ;;unsigned compare: left >= lit (0xFF=255), size=1
     001D 21FF                      1- 1727     	MOVIA	0xff
     001E 04rr                      1- 1728     	SUBAR	_ledCount,W
     001F 0C03                      1- 1729     	BTRSC	STATUS,0
                                    1- 1730     	.line	396, "main.c"; 	ledCount = 0;
     0020 02rr                      1- 1731     	CLRR	_ledCount
                                    1- 1732     	.line	397, "main.c"; 	}
                                    1- 1733     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1- 1735     ;***
                                    1- 1736     ;  pBlock Stats: dbName = C
                                    1- 1737     ;***
                                    1- 1738     ;has an exit
                                    1- 1739     ;functions called:
                                    1- 1740     ;   _keyRead
                                    1- 1741     ;   _pwmInit
                                    1- 1742     ;   _pwmStop
                                    1- 1743     ;   _pwmInit
                                    1- 1744     ;   _keyRead
                                    1- 1745     ;   _pwmInit
                                    1- 1746     ;   _pwmStop
                                    1- 1747     ;   _pwmInit
                                    1- 1748     ;1 compiler assigned register :
                                    1- 1749     ;   r0x1038
                                    1- 1750     ;; Starting pCode block
                                    1- 1751     .segment "code"; module=main, function=_keyCtr
                                    1- 1753     ;local variable name mapping:
     0000                           1- 1755     _keyCtr:
                                    1- 1756     ; 2 exit points
                                    1- 1757     	.line	313, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1758     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1759     	COMR	_PORTA,W
                                    1- 1760     	BANKSEL	r0x1038
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1761     	MOVAR	r0x1038
     0004 2180                      1- 1762     	MOVIA	0x80
     0005 10rr                      1- 1763     	ANDAR	r0x1038,F
     0006 01rr                      1- 1764     	MOVR	r0x1038,W
                                    1- 1765     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1766     	BANKSEL	r0x1038
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1767     	MOVAR	r0x1038
                                    1- 1768     	.line	314, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1769     	XORIA	0x01
     000B 0903                      1- 1770     	BTRSS	STATUS,2
                                    1- 1771     	MGOTO	_00265_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1772     	.line	316, "main.c"; 	if(workStep == 0)
                                    1- 1773     	BANKSEL	_workStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1774     	MOVR	_workStep,W
     000F 0D03                      1- 1775     	BTRSC	STATUS,2
                                    1- 1776     	.line	318, "main.c"; 	return;
                                    1- 1777     	MGOTO	_00267_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1778     	.line	320, "main.c"; 	breathFalg = 0;
                                    1- 1779     	BANKSEL	_breathFalg
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 1780     	CLRR	_breathFalg
                                    1- 1781     	.line	321, "main.c"; 	breathTime = 250;
     0013 21FA                      1- 1782     	MOVIA	0xfa
                                    1- 1783     	BANKSEL	_breathTime
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1784     	MOVAR	_breathTime
                                    1- 1785     	.line	322, "main.c"; 	waitRainbowTime = 500;
     0016 21F4                      1- 1786     	MOVIA	0xf4
                                    1- 1787     	BANKSEL	_waitRainbowTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1788     	MOVAR	_waitRainbowTime
     0019 2101                      1- 1789     	MOVIA	0x01
     001A 00rr                      1- 1790     	MOVAR	(_waitRainbowTime + 1)
                                    1- 1791     	.line	323, "main.c"; 	ledFlag = 1;
                                    1- 1792     	BANKSEL	_ledFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1793     	MOVAR	_ledFlag
                                    1- 1794     	.line	324, "main.c"; 	if(++workStep > 6)
                                    1- 1795     	BANKSEL	_workStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 05rr                      1- 1796     	INCR	_workStep,F
                                    1- 1797     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1798     ;;unsigned compare: left >= lit (0x7=7), size=1
     001F 2107                      1- 1799     	MOVIA	0x07
     0020 04rr                      1- 1800     	SUBAR	_workStep,W
     0021 0803                      1- 1801     	BTRSS	STATUS,0
                                    1- 1802     	MGOTO	_00256_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1803     	.line	326, "main.c"; 	workStep = 1;	
     0023 2101                      1- 1804     	MOVIA	0x01
     0024 00rr                      1- 1805     	MOVAR	_workStep
     0025                           1- 1806     _00256_DS_:
                                    1- 1807     	.line	328, "main.c"; 	if(workStep > 0)
                                    1- 1808     	BANKSEL	_workStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 1809     	MOVR	_workStep,W
     0027 0D03                      1- 1810     	BTRSC	STATUS,2
                                    1- 1811     	MGOTO	_00267_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1812     	.line	330, "main.c"; 	pwmInit();
                                    1- 1813     	MCALL	_pwmInit
     0029 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1814     	MGOTO	_00267_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 1815     _00265_DS_:
                                    1- 1816     	.line	333, "main.c"; 	else if(kclick == 2)
                                    1- 1817     	BANKSEL	r0x1038
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 1818     	MOVR	r0x1038,W
     002D 2402                      1- 1819     	XORIA	0x02
     002E 0903                      1- 1820     	BTRSS	STATUS,2
                                    1- 1821     	MGOTO	_00267_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1822     	.line	335, "main.c"; 	if(workStep > 0)
                                    1- 1823     	BANKSEL	_workStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1824     	MOVR	_workStep,W
     0032 0D03                      1- 1825     	BTRSC	STATUS,2
                                    1- 1826     	MGOTO	_00260_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1827     	.line	337, "main.c"; 	workStep = 0;
     0034 02rr                      1- 1828     	CLRR	_workStep
                                    1- 1829     	.line	338, "main.c"; 	pwmStop();
                                    1- 1830     	MCALL	_pwmStop
     0035 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1831     	.line	339, "main.c"; 	ledFlag  = 0;
                                    1- 1832     	BANKSEL	_ledFlag
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 1833     	CLRR	_ledFlag
                                    1- 1834     	MGOTO	_00267_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 1835     _00260_DS_:
                                    1- 1836     	.line	347, "main.c"; 	breathFalg = 0;
                                    1- 1837     	BANKSEL	_breathFalg
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1838     	CLRR	_breathFalg
                                    1- 1839     	.line	348, "main.c"; 	breathTime = 250;
     003B 21FA                      1- 1840     	MOVIA	0xfa
                                    1- 1841     	BANKSEL	_breathTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1842     	MOVAR	_breathTime
                                    1- 1843     	.line	349, "main.c"; 	waitRainbowTime = 500;
     003E 21F4                      1- 1844     	MOVIA	0xf4
                                    1- 1845     	BANKSEL	_waitRainbowTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 1846     	MOVAR	_waitRainbowTime
     0041 2101                      1- 1847     	MOVIA	0x01
     0042 00rr                      1- 1848     	MOVAR	(_waitRainbowTime + 1)
                                    1- 1849     	.line	350, "main.c"; 	ledFlag = 1;
                                    1- 1850     	BANKSEL	_ledFlag
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1851     	MOVAR	_ledFlag
                                    1- 1852     	.line	351, "main.c"; 	workStep = 1;
                                    1- 1853     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1854     	MOVAR	_workStep
                                    1- 1855     	.line	352, "main.c"; 	duty = 107;
     0047 216B                      1- 1856     	MOVIA	0x6b
                                    1- 1857     	BANKSEL	_duty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 1858     	MOVAR	_duty
                                    1- 1859     	.line	353, "main.c"; 	PWM3DUTY = 107;
     004A 00rr                      1- 1860     	SFUN	_PWM3DUTY
                                    1- 1861     	.line	354, "main.c"; 	pwmInit();
                                    1- 1862     	MCALL	_pwmInit
     004B 2rrr                      3-   66 m1      LCALL rom_address
     004C                           1- 1863     _00267_DS_:
                                    1- 1864     	.line	359, "main.c"; 	}
                                    1- 1865     	RETURN	
     004C 0010                      3-   40 m1      ret
                                    1- 1866     ; exit point of _keyCtr
                                    1- 1868     ;***
                                    1- 1869     ;  pBlock Stats: dbName = C
                                    1- 1870     ;***
                                    1- 1871     ;has an exit
                                    1- 1872     ;functions called:
                                    1- 1873     ;   _pwmStop
                                    1- 1874     ;   _setColor
                                    1- 1875     ;   _setColor
                                    1- 1876     ;   _setColor
                                    1- 1877     ;   _setColor
                                    1- 1878     ;   _setColor
                                    1- 1879     ;   _setColor
                                    1- 1880     ;   _rainbow
                                    1- 1881     ;   _pwmStop
                                    1- 1882     ;   _gotoSleep
                                    1- 1883     ;   _gotoSleep
                                    1- 1884     ;   _pwmStop
                                    1- 1885     ;   _setColor
                                    1- 1886     ;   _setColor
                                    1- 1887     ;   _setColor
                                    1- 1888     ;   _setColor
                                    1- 1889     ;   _setColor
                                    1- 1890     ;   _setColor
                                    1- 1891     ;   _rainbow
                                    1- 1892     ;   _pwmStop
                                    1- 1893     ;   _gotoSleep
                                    1- 1894     ;   _gotoSleep
                                    1- 1895     ;2 compiler assigned registers:
                                    1- 1896     ;   STK01
                                    1- 1897     ;   STK00
                                    1- 1898     ;; Starting pCode block
                                    1- 1899     .segment "code"; module=main, function=_workCtr
     0000                           1- 1901     _workCtr:
                                    1- 1902     ; 2 exit points
                                    1- 1903     	.line	232, "main.c"; 	if(waitRainbowTime > 0)
                                    1- 1904     	BANKSEL	_waitRainbowTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1905     	MOVR	_waitRainbowTime,W
     0002 11rr                      1- 1906     	IORAR	(_waitRainbowTime + 1),W
     0003 0D03                      1- 1907     	BTRSC	STATUS,2
                                    1- 1908     	MGOTO	_00202_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1909     	.line	234, "main.c"; 	waitRainbowTime--;
     0005 21FF                      1- 1910     	MOVIA	0xff
     0006 03rr                      1- 1911     	ADDAR	_waitRainbowTime,F
     0007 0803                      1- 1912     	BTRSS	STATUS,0
     0008 06rr                      1- 1913     	DECR	(_waitRainbowTime + 1),F
                                    1- 1914     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1915     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 1916     	.line	235, "main.c"; 	switch(workStep)
     0009 2107                      1- 1917     	MOVIA	0x07
                                    1- 1918     	BANKSEL	_workStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 1919     	SUBAR	_workStep,W
     000C 0C03                      1- 1920     	BTRSC	STATUS,0
                                    1- 1921     	MGOTO	_00203_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E 21rr                      1- 1922     	MOVIA	((_00243_DS_ >> 8) & 0xff)
     000F 008A                      1- 1923     	MOVAR	PCHBUF
     0010 01rr                      1- 1924     	MOVR	_workStep,W
     0011 25rr                      1- 1925     	ADDIA	_00243_DS_
     0012 0C03                      1- 1926     	BTRSC	STATUS,0
     0013 058A                      1- 1927     	INCR	PCHBUF,F
     0014 0082                      1- 1928     	MOVAR	PCL
     0015                           1- 1929     _00243_DS_:
                                    1- 1930     	MGOTO	_00185_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1931     	MGOTO	_00186_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1932     	MGOTO	_00190_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1933     	MGOTO	_00191_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1934     	MGOTO	_00192_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1935     	MGOTO	_00193_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1936     	MGOTO	_00194_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 1937     _00185_DS_:
                                    1- 1938     	.line	238, "main.c"; 	preDuty = 0;
                                    1- 1939     	BANKSEL	_preDuty
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 1940     	CLRR	_preDuty
                                    1- 1941     	.line	239, "main.c"; 	PWM3DUTY = 0;
     001E 0200                      1- 1942     	CLRA	
     001F 00rr                      1- 1943     	SFUN	_PWM3DUTY
                                    1- 1944     	.line	240, "main.c"; 	pwmStop();
                                    1- 1945     	MCALL	_pwmStop
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1946     	.line	241, "main.c"; 	break;
                                    1- 1947     	MGOTO	_00203_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 1948     _00186_DS_:
                                    1- 1949     	.line	243, "main.c"; 	setColor(250,250,250);
     0022 21FA                      1- 1950     	MOVIA	0xfa
     0023 00rr                      1- 1951     	MOVAR	STK01
     0024 00rr                      1- 1952     	MOVAR	STK00
                                    1- 1953     	MCALL	_setColor
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1954     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1955     ;;unsigned compare: left >= lit (0x5B=91), size=1
                                    1- 1956     	.line	244, "main.c"; 	if(duty > 90)
     0026 215B                      1- 1957     	MOVIA	0x5b
                                    1- 1958     	BANKSEL	_duty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1- 1959     	SUBAR	_duty,W
     0029 0803                      1- 1960     	BTRSS	STATUS,0
                                    1- 1961     	MGOTO	_00188_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1962     	.line	246, "main.c"; 	duty = duty - 1;
     002B 06rr                      1- 1963     	DECR	_duty,F
                                    1- 1964     	.line	247, "main.c"; 	currentDuty = duty;
     002C 01rr                      1- 1965     	MOVR	_duty,W
                                    1- 1966     	BANKSEL	_currentDuty
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 1967     	MOVAR	_currentDuty
                                    1- 1968     	MGOTO	_00203_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 1969     _00188_DS_:
                                    1- 1970     	.line	250, "main.c"; 	currentDuty = 90;
     0030 215A                      1- 1971     	MOVIA	0x5a
                                    1- 1972     	BANKSEL	_currentDuty
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 1973     	MOVAR	_currentDuty
                                    1- 1974     	.line	251, "main.c"; 	break;
                                    1- 1975     	MGOTO	_00203_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 1976     _00190_DS_:
                                    1- 1977     	.line	253, "main.c"; 	setColor(250,250,0);
     0034 2100                      1- 1978     	MOVIA	0x00
     0035 00rr                      1- 1979     	MOVAR	STK01
     0036 21FA                      1- 1980     	MOVIA	0xfa
     0037 00rr                      1- 1981     	MOVAR	STK00
                                    1- 1982     	MCALL	_setColor
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1983     	.line	254, "main.c"; 	currentDuty = 98;
     0039 2162                      1- 1984     	MOVIA	0x62
                                    1- 1985     	BANKSEL	_currentDuty
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 00rr                      1- 1986     	MOVAR	_currentDuty
                                    1- 1987     	.line	255, "main.c"; 	break;
                                    1- 1988     	MGOTO	_00203_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1- 1989     _00191_DS_:
                                    1- 1990     	.line	257, "main.c"; 	setColor(0,250,0);
     003D 2100                      1- 1991     	MOVIA	0x00
     003E 00rr                      1- 1992     	MOVAR	STK01
     003F 21FA                      1- 1993     	MOVIA	0xfa
     0040 00rr                      1- 1994     	MOVAR	STK00
     0041 2100                      1- 1995     	MOVIA	0x00
                                    1- 1996     	MCALL	_setColor
     0042 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1997     	.line	258, "main.c"; 	currentDuty = 105;
     0043 2169                      1- 1998     	MOVIA	0x69
                                    1- 1999     	BANKSEL	_currentDuty
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2000     	MOVAR	_currentDuty
                                    1- 2001     	.line	259, "main.c"; 	break;
                                    1- 2002     	MGOTO	_00203_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1- 2003     _00192_DS_:
                                    1- 2004     	.line	261, "main.c"; 	setColor(0,250,250);
     0047 21FA                      1- 2005     	MOVIA	0xfa
     0048 00rr                      1- 2006     	MOVAR	STK01
     0049 00rr                      1- 2007     	MOVAR	STK00
     004A 2100                      1- 2008     	MOVIA	0x00
                                    1- 2009     	MCALL	_setColor
     004B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2010     	.line	262, "main.c"; 	currentDuty = 111;
     004C 216F                      1- 2011     	MOVIA	0x6f
                                    1- 2012     	BANKSEL	_currentDuty
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 2013     	MOVAR	_currentDuty
                                    1- 2014     	.line	263, "main.c"; 	break;
                                    1- 2015     	MGOTO	_00203_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1- 2016     _00193_DS_:
                                    1- 2017     	.line	265, "main.c"; 	setColor(250,0,250);
     0050 21FA                      1- 2018     	MOVIA	0xfa
     0051 00rr                      1- 2019     	MOVAR	STK01
     0052 2100                      1- 2020     	MOVIA	0x00
     0053 00rr                      1- 2021     	MOVAR	STK00
     0054 21FA                      1- 2022     	MOVIA	0xfa
                                    1- 2023     	MCALL	_setColor
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2024     	.line	266, "main.c"; 	currentDuty = 118;
     0056 2176                      1- 2025     	MOVIA	0x76
                                    1- 2026     	BANKSEL	_currentDuty
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 2027     	MOVAR	_currentDuty
                                    1- 2028     	.line	267, "main.c"; 	break;
                                    1- 2029     	MGOTO	_00203_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A                           1- 2030     _00194_DS_:
                                    1- 2031     	.line	269, "main.c"; 	setColor(250,0,0);
     005A 2100                      1- 2032     	MOVIA	0x00
     005B 00rr                      1- 2033     	MOVAR	STK01
     005C 00rr                      1- 2034     	MOVAR	STK00
     005D 21FA                      1- 2035     	MOVIA	0xfa
                                    1- 2036     	MCALL	_setColor
     005E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2037     	.line	270, "main.c"; 	currentDuty = 124;
     005F 217C                      1- 2038     	MOVIA	0x7c
                                    1- 2039     	BANKSEL	_currentDuty
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 2040     	MOVAR	_currentDuty
                                    1- 2041     	.line	272, "main.c"; 	}
                                    1- 2042     	MGOTO	_00203_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 2043     _00202_DS_:
                                    1- 2044     	.line	276, "main.c"; 	if(workStep > 0)
                                    1- 2045     	BANKSEL	_workStep
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 2046     	MOVR	_workStep,W
     0065 0D03                      1- 2047     	BTRSC	STATUS,2
                                    1- 2048     	MGOTO	_00199_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2049     	.line	278, "main.c"; 	if(colorStep == 0)
                                    1- 2050     	BANKSEL	_colorStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 2051     	MOVR	_colorStep,W
     0069 0903                      1- 2052     	BTRSS	STATUS,2
                                    1- 2053     	MGOTO	_00197_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2054     	.line	280, "main.c"; 	colorStep = 1;
     006B 2101                      1- 2055     	MOVIA	0x01
     006C 00rr                      1- 2056     	MOVAR	_colorStep
     006D                           1- 2057     _00197_DS_:
                                    1- 2058     	.line	283, "main.c"; 	rainbow();
                                    1- 2059     	MCALL	_rainbow
     006D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2060     	MGOTO	_00203_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
     006F                           1- 2061     _00199_DS_:
                                    1- 2062     	.line	287, "main.c"; 	PWM3DUTY = 0;
     006F 0200                      1- 2063     	CLRA	
     0070 00rr                      1- 2064     	SFUN	_PWM3DUTY
                                    1- 2065     	.line	288, "main.c"; 	pwmStop();
                                    1- 2066     	MCALL	_pwmStop
     0071 2rrr                      3-   66 m1      LCALL rom_address
     0072                           1- 2067     _00203_DS_:
                                    1- 2068     	.line	291, "main.c"; 	if(currentDuty != preDuty)
                                    1- 2069     	BANKSEL	_preDuty
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 2070     	MOVR	_preDuty,W
                                    1- 2071     	BANKSEL	_currentDuty
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 12rr                      1- 2072     	XORAR	_currentDuty,W
     0076 0D03                      1- 2073     	BTRSC	STATUS,2
                                    1- 2074     	MGOTO	_00205_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2075     	.line	293, "main.c"; 	PWM3DUTY = currentDuty;
     0078 01rr                      1- 2076     	MOVR	_currentDuty,W
     0079 00rr                      1- 2077     	SFUN	_PWM3DUTY
                                    1- 2078     	.line	294, "main.c"; 	preDuty = currentDuty;
     007A 01rr                      1- 2079     	MOVR	_currentDuty,W
                                    1- 2080     	BANKSEL	_preDuty
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 2081     	MOVAR	_preDuty
                                    1- 2082     ;;unsigned compare: left < lit (0xA=10), size=1
     007D                           1- 2083     _00205_DS_:
                                    1- 2084     	.line	296, "main.c"; 	if(lowCount >= 10)
     007D 210A                      1- 2085     	MOVIA	0x0a
                                    1- 2086     	BANKSEL	_lowCount
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 04rr                      1- 2087     	SUBAR	_lowCount,W
     0080 0803                      1- 2088     	BTRSS	STATUS,0
                                    1- 2089     	MGOTO	_00209_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2090     	.line	298, "main.c"; 	if(++closeTime >= 6000)
                                    1- 2091     	BANKSEL	_closeTime
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 05rr                      1- 2092     	INCR	_closeTime,F
     0084 0D03                      1- 2093     	BTRSC	STATUS,2
     0085 05rr                      1- 2094     	INCR	(_closeTime + 1),F
                                    1- 2095     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0086 2117                      1- 2096     	MOVIA	0x17
     0087 04rr                      1- 2097     	SUBAR	(_closeTime + 1),W
     0088 0903                      1- 2098     	BTRSS	STATUS,2
                                    1- 2099     	MGOTO	_00247_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A 2170                      1- 2100     	MOVIA	0x70
     008B 04rr                      1- 2101     	SUBAR	_closeTime,W
     008C                           1- 2102     _00247_DS_:
     008C 0803                      1- 2103     	BTRSS	STATUS,0
                                    1- 2104     	MGOTO	_00210_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2105     	.line	299, "main.c"; 	gotoSleep();
                                    1- 2106     	MCALL	_gotoSleep
     008E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2107     	MGOTO	_00210_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090                           1- 2108     _00209_DS_:
                                    1- 2109     	.line	303, "main.c"; 	closeTime = 0;
                                    1- 2110     	BANKSEL	_closeTime
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 02rr                      1- 2111     	CLRR	_closeTime
     0092 02rr                      1- 2112     	CLRR	(_closeTime + 1)
                                    1- 2113     ;;unsigned compare: left < lit (0x384=900), size=2
     0093                           1- 2114     _00210_DS_:
                                    1- 2115     	.line	305, "main.c"; 	if(count900s >= 900)
     0093 2103                      1- 2116     	MOVIA	0x03
                                    1- 2117     	BANKSEL	_count900s
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 2118     	SUBAR	(_count900s + 1),W
     0096 0903                      1- 2119     	BTRSS	STATUS,2
                                    1- 2120     	MGOTO	_00248_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098 2184                      1- 2121     	MOVIA	0x84
     0099 04rr                      1- 2122     	SUBAR	_count900s,W
     009A                           1- 2123     _00248_DS_:
     009A 0803                      1- 2124     	BTRSS	STATUS,0
                                    1- 2125     	MGOTO	_00213_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2126     	.line	306, "main.c"; 	gotoSleep();
                                    1- 2127     	MCALL	_gotoSleep
     009C 2rrr                      3-   66 m1      LCALL rom_address
     009D                           1- 2128     _00213_DS_:
                                    1- 2129     	.line	307, "main.c"; 	}
                                    1- 2130     	RETURN	
     009D 0010                      3-   40 m1      ret
                                    1- 2131     ; exit point of _workCtr
                                    1- 2133     ;***
                                    1- 2134     ;  pBlock Stats: dbName = C
                                    1- 2135     ;***
                                    1- 2136     ;has an exit
                                    1- 2137     ;functions called:
                                    1- 2138     ;   _pwmStop
                                    1- 2139     ;   _ledGreen
                                    1- 2140     ;   _ledRed
                                    1- 2141     ;   _ledRed
                                    1- 2142     ;   _ledOff
                                    1- 2143     ;   _pwmStop
                                    1- 2144     ;   _ledGreen
                                    1- 2145     ;   _ledRed
                                    1- 2146     ;   _ledRed
                                    1- 2147     ;   _ledOff
                                    1- 2148     ;; Starting pCode block
                                    1- 2149     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2151     _chrgCtr:
                                    1- 2152     ; 2 exit points
                                    1- 2153     	.line	188, "main.c"; 	if(0x08 & PORTA)
                                    1- 2154     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 2155     	BTRSS	_PORTA,3
                                    1- 2156     	MGOTO	_00163_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2157     	.line	191, "main.c"; 	ledFlag = 0;
                                    1- 2158     	BANKSEL	_ledFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2159     	CLRR	_ledFlag
                                    1- 2160     	.line	192, "main.c"; 	workStep = 0;
                                    1- 2161     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2162     	CLRR	_workStep
                                    1- 2163     	.line	193, "main.c"; 	pwmStop();
                                    1- 2164     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2165     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2166     ;;unsigned compare: left >= lit (0x5F6=1526), size=2
                                    1- 2167     	.line	194, "main.c"; 	if(R_AIN1_DATA > 1525)
     0008 2105                      1- 2168     	MOVIA	0x05
                                    1- 2169     	BANKSEL	_R_AIN1_DATA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 2170     	SUBAR	(_R_AIN1_DATA + 1),W
     000B 0903                      1- 2171     	BTRSS	STATUS,2
                                    1- 2172     	MGOTO	_00179_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D 21F6                      1- 2173     	MOVIA	0xf6
     000E 04rr                      1- 2174     	SUBAR	_R_AIN1_DATA,W
     000F                           1- 2175     _00179_DS_:
     000F 0803                      1- 2176     	BTRSS	STATUS,0
                                    1- 2177     	MGOTO	_00158_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2178     	.line	196, "main.c"; 	if(++fullTime > 6000)
                                    1- 2179     	BANKSEL	_fullTime
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 05rr                      1- 2180     	INCR	_fullTime,F
     0013 0D03                      1- 2181     	BTRSC	STATUS,2
     0014 05rr                      1- 2182     	INCR	(_fullTime + 1),F
                                    1- 2183     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2184     ;;unsigned compare: left >= lit (0x1771=6001), size=2
     0015 2117                      1- 2185     	MOVIA	0x17
     0016 04rr                      1- 2186     	SUBAR	(_fullTime + 1),W
     0017 0903                      1- 2187     	BTRSS	STATUS,2
                                    1- 2188     	MGOTO	_00180_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019 2171                      1- 2189     	MOVIA	0x71
     001A 04rr                      1- 2190     	SUBAR	_fullTime,W
     001B                           1- 2191     _00180_DS_:
     001B 0803                      1- 2192     	BTRSS	STATUS,0
                                    1- 2193     	MGOTO	_00155_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2194     	.line	198, "main.c"; 	fullTime = 6000;
     001D 2170                      1- 2195     	MOVIA	0x70
                                    1- 2196     	BANKSEL	_fullTime
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2197     	MOVAR	_fullTime
     0020 2117                      1- 2198     	MOVIA	0x17
     0021 00rr                      1- 2199     	MOVAR	(_fullTime + 1)
                                    1- 2200     	.line	199, "main.c"; 	ledGreen();
                                    1- 2201     	MCALL	_ledGreen
     0022 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2202     	MGOTO	_00165_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024                           1- 2203     _00155_DS_:
                                    1- 2204     	.line	207, "main.c"; 	ledRed();
                                    1- 2205     	MCALL	_ledRed
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2206     	MGOTO	_00165_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 2207     _00158_DS_:
                                    1- 2208     	.line	215, "main.c"; 	fullTime = 0;
                                    1- 2209     	BANKSEL	_fullTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 02rr                      1- 2210     	CLRR	_fullTime
     0028 02rr                      1- 2211     	CLRR	(_fullTime + 1)
                                    1- 2212     	.line	216, "main.c"; 	ledRed();
                                    1- 2213     	MCALL	_ledRed
     0029 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2214     	MGOTO	_00165_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 2215     _00163_DS_:
                                    1- 2216     	.line	222, "main.c"; 	if(workStep == 0)
                                    1- 2217     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 2218     	MOVR	_workStep,W
     002D 0903                      1- 2219     	BTRSS	STATUS,2
                                    1- 2220     	MGOTO	_00006_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2221     	.line	223, "main.c"; 	ledFlag = 0;
                                    1- 2222     	BANKSEL	_ledFlag
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1- 2223     	CLRR	_ledFlag
     0031                           1- 2224     _00006_DS_:
                                    1- 2225     	.line	225, "main.c"; 	ledOff();
                                    1- 2226     	MCALL	_ledOff
     0031 2rrr                      3-   66 m1      LCALL rom_address
     0032                           1- 2227     _00165_DS_:
                                    1- 2228     	.line	228, "main.c"; 	}
                                    1- 2229     	RETURN	
     0032 0010                      3-   40 m1      ret
                                    1- 2230     ; exit point of _chrgCtr
                                    1- 2232     ;***
                                    1- 2233     ;  pBlock Stats: dbName = C
                                    1- 2234     ;***
                                    1- 2235     ;has an exit
                                    1- 2236     ;1 compiler assigned register :
                                    1- 2237     ;   r0x1037
                                    1- 2238     ;; Starting pCode block
                                    1- 2239     .segment "code"; module=main, function=_keyRead
                                    1- 2241     ;local variable name mapping:
     0000                           1- 2243     _keyRead:
                                    1- 2244     ; 2 exit points
                                    1- 2245     	.line	153, "main.c"; 	char keyRead(char KeyStatus)	
                                    1- 2246     	BANKSEL	r0x1037
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2247     	MOVAR	r0x1037
                                    1- 2248     	.line	155, "main.c"; 	if (KeyStatus)
     0002 01rr                      1- 2249     	MOVR	r0x1037,W
     0003 0D03                      1- 2250     	BTRSC	STATUS,2
                                    1- 2251     	MGOTO	_00147_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2252     	.line	157, "main.c"; 	if(++keyCount >= 150)
                                    1- 2253     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2254     	INCR	_keyCount,F
                                    1- 2255     ;;unsigned compare: left < lit (0x96=150), size=1
     0007 2196                      1- 2256     	MOVIA	0x96
     0008 04rr                      1- 2257     	SUBAR	_keyCount,W
     0009 0803                      1- 2258     	BTRSS	STATUS,0
                                    1- 2259     	MGOTO	_00148_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2260     	.line	159, "main.c"; 	keyCount = 150;
     000B 2196                      1- 2261     	MOVIA	0x96
     000C 00rr                      1- 2262     	MOVAR	_keyCount
                                    1- 2263     	.line	160, "main.c"; 	if(!longPressFlag)
                                    1- 2264     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2265     	MOVR	_longPressFlag,W
     000F 0903                      1- 2266     	BTRSS	STATUS,2
                                    1- 2267     	MGOTO	_00148_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2268     	.line	162, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2269     	MOVIA	0x01
     0012 00rr                      1- 2270     	MOVAR	_longPressFlag
                                    1- 2271     	.line	163, "main.c"; 	return 2;
     0013 2102                      1- 2272     	MOVIA	0x02
                                    1- 2273     	MGOTO	_00149_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2274     ;;unsigned compare: left < lit (0x96=150), size=1
     0015                           1- 2275     _00147_DS_:
                                    1- 2276     	.line	170, "main.c"; 	if(keyCount >= 150)
     0015 2196                      1- 2277     	MOVIA	0x96
                                    1- 2278     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2279     	SUBAR	_keyCount,W
     0018 0803                      1- 2280     	BTRSS	STATUS,0
                                    1- 2281     	MGOTO	_00144_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2282     	.line	172, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2283     	CLRR	_keyCount
                                    1- 2284     	.line	173, "main.c"; 	longPressFlag = 0;
                                    1- 2285     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2286     	CLRR	_longPressFlag
                                    1- 2287     	.line	174, "main.c"; 	return	0;
     001D 2100                      1- 2288     	MOVIA	0x00
                                    1- 2289     	MGOTO	_00149_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2290     ;;unsigned compare: left < lit (0x5=5), size=1
     001F                           1- 2291     _00144_DS_:
                                    1- 2292     	.line	176, "main.c"; 	else if(keyCount >= 5)
     001F 2105                      1- 2293     	MOVIA	0x05
                                    1- 2294     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2295     	SUBAR	_keyCount,W
     0022 0803                      1- 2296     	BTRSS	STATUS,0
                                    1- 2297     	MGOTO	_00145_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2298     	.line	178, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2299     	CLRR	_keyCount
                                    1- 2300     	.line	179, "main.c"; 	return	1;
     0025 2101                      1- 2301     	MOVIA	0x01
                                    1- 2302     	MGOTO	_00149_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2303     _00145_DS_:
                                    1- 2304     	.line	181, "main.c"; 	keyCount = 0;
                                    1- 2305     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2306     	CLRR	_keyCount
     0029                           1- 2307     _00148_DS_:
                                    1- 2308     	.line	183, "main.c"; 	return 0;
     0029 2100                      1- 2309     	MOVIA	0x00
     002A                           1- 2310     _00149_DS_:
                                    1- 2311     	.line	184, "main.c"; 	}
                                    1- 2312     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2313     ; exit point of _keyRead
                                    1- 2316     ;	code size estimation:
                                    1- 2317     ;	  815+  219 =  1034 instructions ( 2506 byte)
                                    1- 2319     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
