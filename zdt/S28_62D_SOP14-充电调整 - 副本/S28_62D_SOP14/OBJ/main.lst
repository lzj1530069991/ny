
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showKeyLed
                                    1-   24     	extern	_A2
                                    1-   25     	extern	_B2
                                    1-   26     	extern	_C2
                                    1-   27     	extern	_D2
                                    1-   28     	extern	_E2
                                    1-   29     	extern	_F2
                                    1-   30     	extern	_G2
                                    1-   31     	extern	_A3
                                    1-   32     	extern	_B3
                                    1-   33     	extern	_C3
                                    1-   34     	extern	_D3
                                    1-   35     	extern	_E3
                                    1-   36     	extern	_F3
                                    1-   37     	extern	_G3
                                    1-   38     	extern	_delayms
                                    1-   39     	extern	_delay
                                    1-   40     	extern	_LedCtr2
                                    1-   41     	extern	_checkInAD
                                    1-   42     	extern	_F_AIN3_Convert
                                    1-   43     	extern	_fgCtr
                                    1-   44     	extern	_ledCtr
                                    1-   45     	extern	_workCtr
                                    1-   46     	extern	__divuchar
                                    1-   47     	extern	__moduchar
                                    1-   48     	extern	_PORTAbits
                                    1-   49     	extern	_PORTBbits
                                    1-   50     	extern	_PCONbits
                                    1-   51     	extern	_BWUCONbits
                                    1-   52     	extern	_ABPLCONbits
                                    1-   53     	extern	_BPHCONbits
                                    1-   54     	extern	_INTEbits
                                    1-   55     	extern	_INTFbits
                                    1-   56     	extern	_ADMDbits
                                    1-   57     	extern	_ADRbits
                                    1-   58     	extern	_ADVREFHbits
                                    1-   59     	extern	_ADCRbits
                                    1-   60     	extern	_AWUCONbits
                                    1-   61     	extern	_PACONbits
                                    1-   62     	extern	_INTEDGbits
                                    1-   63     	extern	_ANAENbits
                                    1-   64     	extern	_RFCbits
                                    1-   65     	extern	_INTE2bits
                                    1-   66     	extern	_INDF
                                    1-   67     	extern	_TMR0
                                    1-   68     	extern	_PCL
                                    1-   69     	extern	_STATUS
                                    1-   70     	extern	_FSR
                                    1-   71     	extern	_PORTA
                                    1-   72     	extern	_PORTB
                                    1-   73     	extern	_PCON
                                    1-   74     	extern	_BWUCON
                                    1-   75     	extern	_PCHBUF
                                    1-   76     	extern	_ABPLCON
                                    1-   77     	extern	_BPHCON
                                    1-   78     	extern	_INTE
                                    1-   79     	extern	_INTF
                                    1-   80     	extern	_ADMD
                                    1-   81     	extern	_ADR
                                    1-   82     	extern	_ADD
                                    1-   83     	extern	_ADVREFH
                                    1-   84     	extern	_ADCR
                                    1-   85     	extern	_AWUCON
                                    1-   86     	extern	_PACON
                                    1-   87     	extern	_INTEDG
                                    1-   88     	extern	_TMRH
                                    1-   89     	extern	_ANAEN
                                    1-   90     	extern	_RFC
                                    1-   91     	extern	_TM3RH
                                    1-   92     	extern	_INTE2
                                    1-   93     	extern	_TMR1
                                    1-   94     	extern	_T1CR1
                                    1-   95     	extern	_T1CR2
                                    1-   96     	extern	_PWM1DUTY
                                    1-   97     	extern	_PS1CV
                                    1-   98     	extern	_BZ1CR
                                    1-   99     	extern	_IRCR
                                    1-  100     	extern	_TBHP
                                    1-  101     	extern	_TBHD
                                    1-  102     	extern	_TMR2
                                    1-  103     	extern	_T2CR1
                                    1-  104     	extern	_T2CR2
                                    1-  105     	extern	_PWM2DUTY
                                    1-  106     	extern	_PS2CV
                                    1-  107     	extern	_BZ2CR
                                    1-  108     	extern	_OSCCR
                                    1-  109     	extern	_TMR3
                                    1-  110     	extern	_T3CR1
                                    1-  111     	extern	_T3CR2
                                    1-  112     	extern	_PWM3DUTY
                                    1-  113     	extern	_PS3CV
                                    1-  114     	extern	_BZ3CR
                                    1-  115     	extern	_IOSTA
                                    1-  116     	extern	_IOSTB
                                    1-  117     	extern	_APHCON
                                    1-  118     	extern	_PS0CV
                                    1-  119     	extern	_BODCON
                                    1-  120     	extern	_CMPCR
                                    1-  121     	extern	_PCON1
                                    1-  122     	extern	_T0MD
                                    1-  123     	extern	___sdcc_saved_fsr
                                    1-  124     	extern	___sdcc_saved_stk00
                                    1-  125     	extern	___sdcc_saved_stk01
                                    1-  126     	extern	__gptrget1
                                    1-  127     	extern	__mulchar
                                    1-  128     	extern	__nyc_ny8_startup
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; global declarations
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     	extern	_F_wait_eoc
                                    1-  133     	extern	_F_AIN2_Convert
                                    1-  134     	extern	_F_AIN4_Convert
                                    1-  135     	extern	_checkOutA
                                    1-  136     	extern	_checkBatAD
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyRead
                                    1-  139     	extern	_gotoSleep
                                    1-  140     	extern	_pwmStop
                                    1-  141     	extern	_pwmInit
                                    1-  142     	extern	_pwm1Stop
                                    1-  143     	extern	_pwm1Init
                                    1-  144     	extern	_powerOff
                                    1-  145     	extern	_initSys
                                    1-  146     	extern	_keyCtr
                                    1-  147     	extern	_refreshNub
                                    1-  148     	extern	_chrgCtr
                                    1-  149     	extern	_isr
                                    1-  150     	extern	_main
                                    1-  151     	extern	_setMaxDuty
                                    1-  152     	extern	_debug
                                    1-  153     	extern	_Status
                                    1-  154     	extern	_R_AIN4_DATA
                                    1-  155     	extern	_R_AIN4_DATA_LB
                                    1-  156     	extern	_R_AIN2_DATA
                                    1-  157     	extern	_R_AIN2_DATA_LB
                                    1-  158     	extern	_intCount
                                    1-  159     	extern	_sleepTime
                                    1-  160     	extern	_count200ms
                                    1-  161     	extern	_count500ms
                                    1-  162     	extern	_count1s
                                    1-  163     	extern	_count5s
                                    1-  164     	extern	_count900s
                                    1-  165     	extern	_workStep
                                    1-  166     	extern	_keyCount
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_ledLightTime
                                    1-  169     	extern	_maxDuty
                                    1-  170     	extern	_currentDuty
                                    1-  171     	extern	_overCount
                                    1-  172     	extern	_tempDuty
                                    1-  173     	extern	_count5S
                                    1-  174     	extern	_ledDeadTime
                                    1-  175     	extern	_countFull
                                    1-  176     	extern	_tempshiweiNum
                                    1-  177     	extern	_tempgeweiNum
                                    1-  178     	extern	_refreshCount
                                    1-  179     	extern	_shiweiNum
                                    1-  180     	extern	_geweiNum
                                    1-  181     	extern	_batValue
                                    1-  182     	extern	_cDuty
                                    1-  183     	extern	_preBatValue
                                    1-  184     	extern	_closeCount
                                    1-  185     	extern	_firstShowCount
                                    1-  186     	extern	_batCount
                                    1-  187     	extern	_chrgStep
                                    1-  188     	extern	_chrgduty
                                    1-  189     	extern	_maxduty
                                    1-  190     	extern	_count50ms
                                    1-  191     	extern	_chrgFullFlag
                                    1-  193     	extern PSAVE
                                    1-  194     	extern SSAVE
                                    1-  195     	extern WSAVE
                                    1-  196     	extern STK02
                                    1-  197     	extern STK01
                                    1-  198     	extern STK00
                                    1-  200     .segment "uninit", 0x20000040
 20000040                           1-  201     PSAVE:
                                    1-  202     	.res 1
 20000041                           1-  203     SSAVE:
                                    1-  204     	.res 1
 20000042                           1-  205     WSAVE:
                                    1-  206     	.res 1
 20000043                           1-  207     STK02:
                                    1-  208     	.res 1
 20000044                           1-  209     STK01:
                                    1-  210     	.res 1
 20000045                           1-  211     STK00:
                                    1-  212     	.res 1
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ; global definitions
                                    1-  216     ;--------------------------------------------------------
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN4_DATA:
                                    1-  219     	.res	2
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_AIN4_DATA_LB:
                                    1-  224     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     _R_AIN2_DATA:
                                    1-  229     	.res	2
                                    1-  232     .segment "uninit"
     0000                           1-  233     _R_AIN2_DATA_LB:
                                    1-  234     	.res	1
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ; absolute symbol definitions
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ; compiler-defined variables
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x105A:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x105B:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x105C:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x105E:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1057:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1058:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1054:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x1056:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1053:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1052:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1051:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x104C:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x104D:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x104E:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x104F:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x1048:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x1049:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x104A:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x104B:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x1042:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x1043:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x1044:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x1047:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x103C:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x103D:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x103E:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x1041:
                                    1-  323     	.res	1
                                    1-  324     ;--------------------------------------------------------
                                    1-  325     ; initialized data
                                    1-  326     ;--------------------------------------------------------
                                    1-  328     .segment "idata"
     0000                           1-  329     _debug:
     0000 0000                      1-  330     	dw	0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _numArray:
     0000 003F                      1-  336     	dw	0x3f
     0001 0006                      1-  337     	dw	0x06
     0002 005B                      1-  338     	dw	0x5b
     0003 004F                      1-  339     	dw	0x4f
     0004 0066                      1-  340     	dw	0x66
     0005 006D                      1-  341     	dw	0x6d
     0006 007D                      1-  342     	dw	0x7d
     0007 0007                      1-  343     	dw	0x07
     0008 007F                      1-  344     	dw	0x7f
     0009 006F                      1-  345     	dw	0x6f
     000A 0071                      1-  346     	dw	0x71
     000B 0079                      1-  347     	dw	0x79
     000C 0050                      1-  348     	dw	0x50
                                    1-  352     .segment "idata"
     0000                           1-  353     _Status:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _intCount:
     0000 0000                      1-  360     	dw	0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _sleepTime:
     0000 0000 0000                 1-  366     	dw	0x00, 0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _count200ms:
     0000 0000                      1-  372     	dw	0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _count500ms:
     0000 0000                      1-  378     	dw	0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _count1s:
     0000 0000                      1-  384     	dw	0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _count5s:
     0000 0000 0000                 1-  390     	dw	0x00, 0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _count900s:
     0000 0000 0000                 1-  396     	dw	0x00, 0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _workStep:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _keyCount:
     0000 0000                      1-  408     	dw	0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _pwStep:
     0000 0000                      1-  414     	dw	0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _ledLightTime:
     0000 0000                      1-  420     	dw	0x00
                                    1-  424     .segment "idata"
     0000                           1-  425     _maxDuty:
     0000 0000                      1-  426     	dw	0x00
                                    1-  430     .segment "idata"
     0000                           1-  431     _currentDuty:
     0000 0000                      1-  432     	dw	0x00
                                    1-  436     .segment "idata"
     0000                           1-  437     _overCount:
     0000 0000                      1-  438     	dw	0x00
                                    1-  442     .segment "idata"
     0000                           1-  443     _tempDuty:
     0000 0000                      1-  444     	dw	0x00
                                    1-  448     .segment "idata"
     0000                           1-  449     _count5S:
     0000 0000 0000                 1-  450     	dw	0x00, 0x00
                                    1-  454     .segment "idata"
     0000                           1-  455     _ledDeadTime:
     0000 0000                      1-  456     	dw	0x00
                                    1-  460     .segment "idata"
     0000                           1-  461     _countFull:
     0000 0000 0000                 1-  462     	dw	0x00, 0x00
                                    1-  466     .segment "idata"
     0000                           1-  467     _tempshiweiNum:
     0000 0000                      1-  468     	dw	0x00
                                    1-  472     .segment "idata"
     0000                           1-  473     _tempgeweiNum:
     0000 0000                      1-  474     	dw	0x00
                                    1-  478     .segment "idata"
     0000                           1-  479     _refreshCount:
     0000 0000 0000                 1-  480     	dw	0x00, 0x00
                                    1-  484     .segment "idata"
     0000                           1-  485     _shiweiNum:
     0000 0000                      1-  486     	dw	0x00
                                    1-  490     .segment "idata"
     0000                           1-  491     _geweiNum:
     0000 0000                      1-  492     	dw	0x00
                                    1-  496     .segment "idata"
     0000                           1-  497     _batValue:
     0000 0000                      1-  498     	dw	0x00
                                    1-  502     .segment "idata"
     0000                           1-  503     _cDuty:
     0000 0000                      1-  504     	dw	0x00
                                    1-  508     .segment "idata"
     0000                           1-  509     _preBatValue:
     0000 0000                      1-  510     	dw	0x00
                                    1-  514     .segment "idata"
     0000                           1-  515     _closeCount:
     0000 0000 0000                 1-  516     	dw	0x00, 0x00
                                    1-  520     .segment "idata"
     0000                           1-  521     _firstShowCount:
     0000 0000                      1-  522     	dw	0x00
                                    1-  526     .segment "idata"
     0000                           1-  527     _batCount:
     0000 0000 0000                 1-  528     	dw	0x00, 0x00
                                    1-  532     .segment "idata"
     0000                           1-  533     _chrgStep:
     0000 0000                      1-  534     	dw	0x00
                                    1-  538     .segment "idata"
     0000                           1-  539     _chrgduty:
     0000 0000                      1-  540     	dw	0x00
                                    1-  544     .segment "idata"
     0000                           1-  545     _maxduty:
     0000 0000                      1-  546     	dw	0x00
                                    1-  550     .segment "idata"
     0000                           1-  551     _count50ms:
     0000 0000                      1-  552     	dw	0x00
                                    1-  556     .segment "idata"
     0000                           1-  557     _chrgFullFlag:
     0000 0000                      1-  558     	dw	0x00
                                    1-  561     ;--------------------------------------------------------
                                    1-  562     ; overlayable items in internal ram 
                                    1-  563     ;--------------------------------------------------------
                                    1-  564     ;	udata_ovr
                                    1-  565     ;--------------------------------------------------------
                                    1-  566     ; reset vector 
                                    1-  567     ;--------------------------------------------------------
                                    1-  568     ORG	0x0000
     0000 3rrr                      1-  569     	LGOTO	__nyc_ny8_startup
                                    1-  570     ;--------------------------------------------------------
                                    1-  571     ; interrupt and initialization code
                                    1-  572     ;--------------------------------------------------------
                                    1-  573     ORG 0x0008
                                    1-  574     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  576     .segment "code"
     0000                           1-  577     __sdcc_interrupt:
                                    1-  578     ;***
                                    1-  579     ;  pBlock Stats: dbName = I
                                    1-  580     ;***
                                    1-  581     ;2 compiler assigned registers:
                                    1-  582     ;   STK00
                                    1-  583     ;   STK01
                                    1-  584     ;; Starting pCode block
     0000                           1-  585     _isr:
                                    1-  586     ; 0 exit points
                                    1-  587     	.line	90, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  588     	MOVAR	WSAVE
     0001 1503                      1-  589     	SWAPR	STATUS,W
     0002 0283                      1-  590     	CLRR	STATUS
     0003 00rr                      1-  591     	MOVAR	SSAVE
     0004 010A                      1-  592     	MOVR	PCHBUF,W
     0005 028A                      1-  593     	CLRR	PCHBUF
     0006 00rr                      1-  594     	MOVAR	PSAVE
     0007 0104                      1-  595     	MOVR	FSR,W
                                    1-  596     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  597     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  598     	MOVR	STK00,W
                                    1-  599     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  600     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  601     	MOVR	STK01,W
                                    1-  602     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  603     	MOVAR	___sdcc_saved_stk01
                                    1-  604     	.line	92, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  605     	BTRSS	_INTFbits,0
                                    1-  606     	MGOTO	_00121_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  607     	.line	94, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  608     	MOVIA	0x37
     0013 03rr                      1-  609     	ADDAR	_TMR0,F
                                    1-  610     	.line	96, "main.c"; 	if(++intCount >= 100)
                                    1-  611     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  612     	INCR	_intCount,F
                                    1-  613     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  614     	MOVIA	0x64
     0017 04rr                      1-  615     	SUBAR	_intCount,W
     0018 0803                      1-  616     	BTRSS	STATUS,0
                                    1-  617     	MGOTO	_00121_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  618     	.line	98, "main.c"; 	IntFlag = 1;
                                    1-  619     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  620     	BSR	_Status,0
                                    1-  621     	.line	99, "main.c"; 	intCount = 0;
                                    1-  622     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  623     	CLRR	_intCount
                                    1-  624     	.line	101, "main.c"; 	if(++count200ms >= 20)
                                    1-  625     	BANKSEL	_count200ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  626     	INCR	_count200ms,F
                                    1-  627     ;;unsigned compare: left < lit (0x14=20), size=1
     0020 2114                      1-  628     	MOVIA	0x14
     0021 04rr                      1-  629     	SUBAR	_count200ms,W
     0022 0803                      1-  630     	BTRSS	STATUS,0
                                    1-  631     	MGOTO	_00108_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  632     	.line	103, "main.c"; 	count200ms = 0;
     0024 02rr                      1-  633     	CLRR	_count200ms
                                    1-  634     	.line	104, "main.c"; 	if(ledDeadTime > 0)
                                    1-  635     	BANKSEL	_ledDeadTime
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  636     	MOVR	_ledDeadTime,W
     0027 0903                      1-  637     	BTRSS	STATUS,2
                                    1-  638     	.line	105, "main.c"; 	--ledDeadTime;
     0028 06rr                      1-  639     	DECR	_ledDeadTime,F
     0029                           1-  640     _00108_DS_:
                                    1-  641     	.line	107, "main.c"; 	if(++count5s >= 500)
                                    1-  642     	BANKSEL	_count5s
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 05rr                      1-  643     	INCR	_count5s,F
     002B 0D03                      1-  644     	BTRSC	STATUS,2
     002C 05rr                      1-  645     	INCR	(_count5s + 1),F
                                    1-  646     ;;unsigned compare: left < lit (0x1F4=500), size=2
     002D 2101                      1-  647     	MOVIA	0x01
     002E 04rr                      1-  648     	SUBAR	(_count5s + 1),W
     002F 0903                      1-  649     	BTRSS	STATUS,2
                                    1-  650     	MGOTO	_00155_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031 21F4                      1-  651     	MOVIA	0xf4
     0032 04rr                      1-  652     	SUBAR	_count5s,W
     0033                           1-  653     _00155_DS_:
     0033 0803                      1-  654     	BTRSS	STATUS,0
                                    1-  655     	MGOTO	_00110_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  656     	.line	109, "main.c"; 	count5s = 0;
                                    1-  657     	BANKSEL	_count5s
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1-  658     	CLRR	_count5s
     0037 02rr                      1-  659     	CLRR	(_count5s + 1)
     0038                           1-  660     _00110_DS_:
                                    1-  661     	.line	111, "main.c"; 	if(++count1s >= 100)
                                    1-  662     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1-  663     	INCR	_count1s,F
                                    1-  664     ;;unsigned compare: left < lit (0x64=100), size=1
     003A 2164                      1-  665     	MOVIA	0x64
     003B 04rr                      1-  666     	SUBAR	_count1s,W
     003C 0803                      1-  667     	BTRSS	STATUS,0
                                    1-  668     	MGOTO	_00121_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  669     	.line	113, "main.c"; 	count1s = 0;
     003E 02rr                      1-  670     	CLRR	_count1s
                                    1-  671     	.line	114, "main.c"; 	if(ledLightTime > 0)
                                    1-  672     	BANKSEL	_ledLightTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  673     	MOVR	_ledLightTime,W
     0041 0903                      1-  674     	BTRSS	STATUS,2
                                    1-  675     	.line	115, "main.c"; 	ledLightTime--;
     0042 06rr                      1-  676     	DECR	_ledLightTime,F
                                    1-  677     	.line	116, "main.c"; 	if(workStep)
                                    1-  678     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  679     	MOVR	_workStep,W
     0045 0D03                      1-  680     	BTRSC	STATUS,2
                                    1-  681     	MGOTO	_00114_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  682     	.line	118, "main.c"; 	++count900s;
                                    1-  683     	BANKSEL	_count900s
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 05rr                      1-  684     	INCR	_count900s,F
     0049 0D03                      1-  685     	BTRSC	STATUS,2
     004A 05rr                      1-  686     	INCR	(_count900s + 1),F
                                    1-  687     	MGOTO	_00121_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1-  688     _00114_DS_:
                                    1-  689     	.line	122, "main.c"; 	count900s = 0;
                                    1-  690     	BANKSEL	_count900s
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1-  691     	CLRR	_count900s
     004E 02rr                      1-  692     	CLRR	(_count900s + 1)
     004F                           1-  693     _00121_DS_:
                                    1-  694     	.line	131, "main.c"; 	if(INTFbits.PABIF)
     004F 08rr                      1-  695     	BTRSS	_INTFbits,1
                                    1-  696     	MGOTO	_00123_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  697     	.line	133, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0051 21FD                      1-  698     	MOVIA	0xfd
     0052 00rr                      1-  699     	MOVAR	_INTF
     0053                           1-  700     _00123_DS_:
                                    1-  701     	.line	136, "main.c"; 	INTF = 0;
     0053 02rr                      1-  702     	CLRR	_INTF
                                    1-  703     	.line	138, "main.c"; 	}
                                    1-  704     	BANKSEL	___sdcc_saved_stk01
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  705     	MOVR	___sdcc_saved_stk01,W
     0056 00rr                      1-  706     	MOVAR	STK01
                                    1-  707     	BANKSEL	___sdcc_saved_stk00
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  708     	MOVR	___sdcc_saved_stk00,W
     0059 00rr                      1-  709     	MOVAR	STK00
                                    1-  710     	BANKSEL	___sdcc_saved_fsr
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  711     	MOVR	___sdcc_saved_fsr,W
     005C 0084                      1-  712     	MOVAR	FSR
     005D 01rr                      1-  713     	MOVR	PSAVE,W
     005E 008A                      1-  714     	MOVAR	PCHBUF
     005F 0283                      1-  715     	CLRR	STATUS
     0060 15rr                      1-  716     	SWAPR	SSAVE,W
     0061 0083                      1-  717     	MOVAR	STATUS
     0062 15rr                      1-  718     	SWAPR	WSAVE,F
     0063 15rr                      1-  719     	SWAPR	WSAVE,W
     0064                           1-  720     END_OF_INTERRUPT:
     0064 0011                      1-  721     	RETIE	
                                    1-  723     ;--------------------------------------------------------
                                    1-  724     ; code
                                    1-  725     ;--------------------------------------------------------
                                    1-  726     ;***
                                    1-  727     ;  pBlock Stats: dbName = M
                                    1-  728     ;***
                                    1-  729     ;has an exit
                                    1-  730     ;functions called:
                                    1-  731     ;   _initSys
                                    1-  732     ;   _initAD
                                    1-  733     ;   _delayms
                                    1-  734     ;   _refreshNub
                                    1-  735     ;   _setInput
                                    1-  736     ;   _pwmStop
                                    1-  737     ;   _powerOff
                                    1-  738     ;   _checkBatAD
                                    1-  739     ;   _checkOutA
                                    1-  740     ;   _chrgCtr
                                    1-  741     ;   _keyCtr
                                    1-  742     ;   _gotoSleep
                                    1-  743     ;   _powerOff
                                    1-  744     ;   _initSys
                                    1-  745     ;   _initAD
                                    1-  746     ;   _delayms
                                    1-  747     ;   _refreshNub
                                    1-  748     ;   _setInput
                                    1-  749     ;   _pwmStop
                                    1-  750     ;   _powerOff
                                    1-  751     ;   _checkBatAD
                                    1-  752     ;   _checkOutA
                                    1-  753     ;   _chrgCtr
                                    1-  754     ;   _keyCtr
                                    1-  755     ;   _gotoSleep
                                    1-  756     ;   _powerOff
                                    1-  757     ;; Starting pCode block
                                    1-  758     .segment "code"; module=main, function=_main
     0000                           1-  760     _main:
                                    1-  761     ; 2 exit points
                                    1-  762     	.line	143, "main.c"; 	initSys();
                                    1-  763     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  764     	.line	144, "main.c"; 	initAD();
                                    1-  765     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  766     	.line	145, "main.c"; 	firstShowCount = 100;
     0002 2164                      1-  767     	MOVIA	0x64
                                    1-  768     	BANKSEL	_firstShowCount
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  769     	MOVAR	_firstShowCount
                                    1-  770     	.line	146, "main.c"; 	ledLightTime = showFlag = 1;
                                    1-  771     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1-  772     	BSR	_Status,4
                                    1-  773     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  774     	CLRR	_ledLightTime
                                    1-  775     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  776     	BTRSS	_Status,4
                                    1-  777     	MGOTO	_00009_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  778     	BANKSEL	_ledLightTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  779     	INCR	_ledLightTime,F
     000E                           1-  780     _00009_DS_:
                                    1-  781     	.line	147, "main.c"; 	tempshiweiNum = shiweiNum = 8;
     000E 2108                      1-  782     	MOVIA	0x08
                                    1-  783     	BANKSEL	_shiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1-  784     	MOVAR	_shiweiNum
                                    1-  785     	BANKSEL	_tempshiweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  786     	MOVAR	_tempshiweiNum
                                    1-  787     	.line	148, "main.c"; 	tempgeweiNum = geweiNum = 8;
                                    1-  788     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  789     	MOVAR	_geweiNum
     0015 2108                      1-  790     	MOVIA	0x08
                                    1-  791     	BANKSEL	_tempgeweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  792     	MOVAR	_tempgeweiNum
                                    1-  793     	.line	149, "main.c"; 	delayms(250);
     0018 21FA                      1-  794     	MOVIA	0xfa
                                    1-  795     	MCALL	_delayms
     0019 2rrr                      3-   66 m1      LCALL rom_address
     001A                           1-  796     _00210_DS_:
                                    1-  797     	.line	152, "main.c"; 	CLRWDT();
     001A 0002                      1-  798     	clrwdt
                                    1-  799     	.line	153, "main.c"; 	if(showFlag)
                                    1-  800     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 0Arr                      1-  801     	BTRSS	_Status,4
                                    1-  802     	MGOTO	_00161_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  803     	.line	154, "main.c"; 	refreshNub();
                                    1-  804     	MCALL	_refreshNub
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  805     	MGOTO	_00162_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  806     _00161_DS_:
                                    1-  807     	.line	156, "main.c"; 	setInput();
                                    1-  808     	MCALL	_setInput
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1-  809     _00162_DS_:
                                    1-  810     	.line	157, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  811     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  812     	MOVR	_workStep,W
     0023 0D03                      1-  813     	BTRSC	STATUS,2
                                    1-  814     	MGOTO	_00169_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  815     ;;unsigned compare: left < lit (0x28=40), size=1
     0025 2128                      1-  816     	MOVIA	0x28
                                    1-  817     	BANKSEL	_tempDuty
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 04rr                      1-  818     	SUBAR	_tempDuty,W
     0028 0803                      1-  819     	BTRSS	STATUS,0
                                    1-  820     	MGOTO	_00169_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  821     	.line	159, "main.c"; 	if(cDuty > tempDuty)
                                    1-  822     	BANKSEL	_cDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1-  823     	MOVR	_cDuty,W
                                    1-  824     	BANKSEL	_tempDuty
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 04rr                      1-  825     	SUBAR	_tempDuty,W
     002E 0C03                      1-  826     	BTRSC	STATUS,0
                                    1-  827     	MGOTO	_00166_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  828     	.line	161, "main.c"; 	cDuty--;
                                    1-  829     	BANKSEL	_cDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 06rr                      1-  830     	DECR	_cDuty,F
                                    1-  831     	.line	162, "main.c"; 	PWM2DUTY = cDuty;
     0032 01rr                      1-  832     	MOVR	_cDuty,W
     0033 00rr                      1-  833     	SFUN	_PWM2DUTY
                                    1-  834     	MGOTO	_00169_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1-  835     _00166_DS_:
                                    1-  836     	.line	164, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  837     	BANKSEL	_tempDuty
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  838     	MOVR	_tempDuty,W
                                    1-  839     	BANKSEL	_cDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 04rr                      1-  840     	SUBAR	_cDuty,W
     0039 0C03                      1-  841     	BTRSC	STATUS,0
                                    1-  842     	MGOTO	_00169_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  843     	.line	166, "main.c"; 	cDuty++;
     003B 05rr                      1-  844     	INCR	_cDuty,F
                                    1-  845     	.line	167, "main.c"; 	PWM2DUTY = cDuty;
     003C 01rr                      1-  846     	MOVR	_cDuty,W
     003D 00rr                      1-  847     	SFUN	_PWM2DUTY
     003E                           1-  848     _00169_DS_:
                                    1-  849     	.line	170, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  850     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  851     	MOVR	_workStep,W
     0040 0D03                      1-  852     	BTRSC	STATUS,2
                                    1-  853     	MGOTO	_00172_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  854     	BANKSEL	_currentDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  855     	MOVR	_currentDuty,W
                                    1-  856     	BANKSEL	_maxDuty
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 04rr                      1-  857     	SUBAR	_maxDuty,W
     0046 0C03                      1-  858     	BTRSC	STATUS,0
                                    1-  859     	MGOTO	_00172_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  860     	.line	172, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  861     	BANKSEL	_currentDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 06rr                      1-  862     	DECR	_currentDuty,F
                                    1-  863     	.line	173, "main.c"; 	PWM2DUTY = currentDuty;
     004A 01rr                      1-  864     	MOVR	_currentDuty,W
     004B 00rr                      1-  865     	SFUN	_PWM2DUTY
                                    1-  866     	.line	174, "main.c"; 	cDuty = currentDuty;
     004C 01rr                      1-  867     	MOVR	_currentDuty,W
                                    1-  868     	BANKSEL	_cDuty
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1-  869     	MOVAR	_cDuty
     004F                           1-  870     _00172_DS_:
                                    1-  871     	.line	176, "main.c"; 	if(!IntFlag)
                                    1-  872     	BANKSEL	_Status
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 08rr                      1-  873     	BTRSS	_Status,0
                                    1-  874     	MGOTO	_00210_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  875     	.line	178, "main.c"; 	IntFlag = 0;
     0052 1Crr                      1-  876     	BCR	_Status,0
                                    1-  877     	.line	179, "main.c"; 	if(firstShowCount > 0)
                                    1-  878     	BANKSEL	_firstShowCount
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 01rr                      1-  879     	MOVR	_firstShowCount,W
     0055 0D03                      1-  880     	BTRSC	STATUS,2
                                    1-  881     	MGOTO	_00177_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  882     	.line	181, "main.c"; 	firstShowCount--;
     0057 06rr                      1-  883     	DECR	_firstShowCount,F
                                    1-  884     	.line	182, "main.c"; 	preBatValue = batValue;
                                    1-  885     	BANKSEL	_batValue
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 01rr                      1-  886     	MOVR	_batValue,W
                                    1-  887     	BANKSEL	_preBatValue
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1-  888     	MOVAR	_preBatValue
                                    1-  889     ;;unsigned compare: left < lit (0x5=5), size=1
     005C                           1-  890     _00177_DS_:
                                    1-  891     	.line	185, "main.c"; 	if(batValue < 5 && workStep > 0)
     005C 2105                      1-  892     	MOVIA	0x05
                                    1-  893     	BANKSEL	_batValue
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 04rr                      1-  894     	SUBAR	_batValue,W
     005F 0C03                      1-  895     	BTRSC	STATUS,0
                                    1-  896     	MGOTO	_00181_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  897     	BANKSEL	_workStep
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  898     	MOVR	_workStep,W
     0063 0D03                      1-  899     	BTRSC	STATUS,2
                                    1-  900     	MGOTO	_00181_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  901     	.line	187, "main.c"; 	if(++closeCount >= 6000)
                                    1-  902     	BANKSEL	_closeCount
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 05rr                      1-  903     	INCR	_closeCount,F
     0067 0D03                      1-  904     	BTRSC	STATUS,2
     0068 05rr                      1-  905     	INCR	(_closeCount + 1),F
                                    1-  906     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0069 2117                      1-  907     	MOVIA	0x17
     006A 04rr                      1-  908     	SUBAR	(_closeCount + 1),W
     006B 0903                      1-  909     	BTRSS	STATUS,2
                                    1-  910     	MGOTO	_00300_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D 2170                      1-  911     	MOVIA	0x70
     006E 04rr                      1-  912     	SUBAR	_closeCount,W
     006F                           1-  913     _00300_DS_:
     006F 0803                      1-  914     	BTRSS	STATUS,0
                                    1-  915     	MGOTO	_00182_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  916     	.line	189, "main.c"; 	closeCount = 0;
                                    1-  917     	BANKSEL	_closeCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1-  918     	CLRR	_closeCount
     0073 02rr                      1-  919     	CLRR	(_closeCount + 1)
                                    1-  920     	.line	190, "main.c"; 	preBatValue = 0;
                                    1-  921     	BANKSEL	_preBatValue
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 02rr                      1-  922     	CLRR	_preBatValue
                                    1-  923     	.line	191, "main.c"; 	workStep = 0;
                                    1-  924     	BANKSEL	_workStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 02rr                      1-  925     	CLRR	_workStep
                                    1-  926     	.line	192, "main.c"; 	pwmStop();
                                    1-  927     	MCALL	_pwmStop
     0078 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  928     	MGOTO	_00182_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
     007A                           1-  929     _00181_DS_:
                                    1-  930     	.line	197, "main.c"; 	closeCount = 0;
                                    1-  931     	BANKSEL	_closeCount
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 02rr                      1-  932     	CLRR	_closeCount
     007C 02rr                      1-  933     	CLRR	(_closeCount + 1)
                                    1-  934     ;;unsigned compare: left < lit (0x5=5), size=1
     007D                           1-  935     _00182_DS_:
                                    1-  936     	.line	200, "main.c"; 	if(overCount >= 5 && workStep > 0)
     007D 2105                      1-  937     	MOVIA	0x05
                                    1-  938     	BANKSEL	_overCount
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 04rr                      1-  939     	SUBAR	_overCount,W
     0080 0803                      1-  940     	BTRSS	STATUS,0
                                    1-  941     	MGOTO	_00187_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  942     	BANKSEL	_workStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1-  943     	MOVR	_workStep,W
     0084 0D03                      1-  944     	BTRSC	STATUS,2
                                    1-  945     	MGOTO	_00187_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  946     	.line	202, "main.c"; 	if(++count5S > 250)
                                    1-  947     	BANKSEL	_count5S
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 05rr                      1-  948     	INCR	_count5S,F
     0088 0D03                      1-  949     	BTRSC	STATUS,2
     0089 05rr                      1-  950     	INCR	(_count5S + 1),F
                                    1-  951     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  952     ;;unsigned compare: left >= lit (0xFB=251), size=2
     008A 2100                      1-  953     	MOVIA	0x00
     008B 04rr                      1-  954     	SUBAR	(_count5S + 1),W
     008C 0903                      1-  955     	BTRSS	STATUS,2
                                    1-  956     	MGOTO	_00302_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E 21FB                      1-  957     	MOVIA	0xfb
     008F 04rr                      1-  958     	SUBAR	_count5S,W
     0090                           1-  959     _00302_DS_:
     0090 0803                      1-  960     	BTRSS	STATUS,0
                                    1-  961     	MGOTO	_00188_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  962     	.line	204, "main.c"; 	overCount = 0;
                                    1-  963     	BANKSEL	_overCount
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 02rr                      1-  964     	CLRR	_overCount
                                    1-  965     	.line	205, "main.c"; 	count5S = 0;
                                    1-  966     	BANKSEL	_count5S
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 02rr                      1-  967     	CLRR	_count5S
     0096 02rr                      1-  968     	CLRR	(_count5S + 1)
                                    1-  969     	.line	206, "main.c"; 	ledDeadTime = 25;
     0097 2119                      1-  970     	MOVIA	0x19
                                    1-  971     	BANKSEL	_ledDeadTime
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1-  972     	MOVAR	_ledDeadTime
                                    1-  973     	.line	207, "main.c"; 	powerOff();
                                    1-  974     	MCALL	_powerOff
     009A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  975     	MGOTO	_00188_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
     009C                           1-  976     _00187_DS_:
                                    1-  977     	.line	212, "main.c"; 	count5S = 0;
                                    1-  978     	BANKSEL	_count5S
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 02rr                      1-  979     	CLRR	_count5S
     009E 02rr                      1-  980     	CLRR	(_count5S + 1)
                                    1-  981     ;;unsigned compare: left < lit (0x3=3), size=1
     009F                           1-  982     _00188_DS_:
                                    1-  983     	.line	214, "main.c"; 	if(count200ms < 3)
     009F 2103                      1-  984     	MOVIA	0x03
                                    1-  985     	BANKSEL	_count200ms
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 04rr                      1-  986     	SUBAR	_count200ms,W
     00A2 0C03                      1-  987     	BTRSC	STATUS,0
                                    1-  988     	MGOTO	_00194_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  989     	.line	216, "main.c"; 	checkBatAD();
                                    1-  990     	MCALL	_checkBatAD
     00A4 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  991     	MGOTO	_00195_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  993     ;;unsigned compare: left >= lit (0x6=6), size=1
     00A6                           1-  994     _00194_DS_:
                                    1-  995     	.line	218, "main.c"; 	else if(count200ms > 5 && count200ms < 19)
     00A6 2106                      1-  996     	MOVIA	0x06
                                    1-  997     	BANKSEL	_count200ms
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 04rr                      1-  998     	SUBAR	_count200ms,W
     00A9 0803                      1-  999     	BTRSS	STATUS,0
                                    1- 1000     	MGOTO	_00195_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1001     ;;unsigned compare: left < lit (0x13=19), size=1
     00AB 2113                      1- 1002     	MOVIA	0x13
     00AC 04rr                      1- 1003     	SUBAR	_count200ms,W
     00AD 0803                      1- 1004     	BTRSS	STATUS,0
                                    1- 1005     	.line	220, "main.c"; 	checkOutA();
                                    1- 1006     	MCALL	_checkOutA
     00AE 2rrr                      3-   66 m1      LCALL rom_address
     00AF                           1- 1007     _00195_DS_:
                                    1- 1008     	.line	222, "main.c"; 	chrgCtr();
                                    1- 1009     	MCALL	_chrgCtr
     00AF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1010     	.line	223, "main.c"; 	if(chrgFlag == 0)
                                    1- 1011     	BANKSEL	_Status
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 09rr                      1- 1012     	BTRSS	_Status,3
                                    1- 1013     	.line	224, "main.c"; 	keyCtr();
                                    1- 1014     	MCALL	_keyCtr
     00B2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1015     	.line	225, "main.c"; 	if(workStep == 0 && keyCount == 0 && chrgFlag == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1016     	BANKSEL	_workStep
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 01rr                      1- 1017     	MOVR	_workStep,W
     00B5 0903                      1- 1018     	BTRSS	STATUS,2
                                    1- 1019     	MGOTO	_00201_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1020     	BANKSEL	_keyCount
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 01rr                      1- 1021     	MOVR	_keyCount,W
     00B9 0903                      1- 1022     	BTRSS	STATUS,2
                                    1- 1023     	MGOTO	_00201_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1024     	BANKSEL	_Status
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 0Drr                      1- 1025     	BTRSC	_Status,3
                                    1- 1026     	MGOTO	_00201_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1027     	BANKSEL	_ledLightTime
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 01rr                      1- 1028     	MOVR	_ledLightTime,W
     00C0 0903                      1- 1029     	BTRSS	STATUS,2
                                    1- 1030     	MGOTO	_00201_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1031     	BANKSEL	_ledDeadTime
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 01rr                      1- 1032     	MOVR	_ledDeadTime,W
     00C4 0903                      1- 1033     	BTRSS	STATUS,2
                                    1- 1034     	MGOTO	_00201_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1035     	.line	227, "main.c"; 	showFlag = 0;
                                    1- 1036     	BANKSEL	_Status
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 1Err                      1- 1037     	BCR	_Status,4
                                    1- 1038     	.line	228, "main.c"; 	if(++sleepTime > 200)
                                    1- 1039     	BANKSEL	_sleepTime
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 05rr                      1- 1040     	INCR	_sleepTime,F
     00CA 0D03                      1- 1041     	BTRSC	STATUS,2
     00CB 05rr                      1- 1042     	INCR	(_sleepTime + 1),F
                                    1- 1043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1044     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00CC 2100                      1- 1045     	MOVIA	0x00
     00CD 04rr                      1- 1046     	SUBAR	(_sleepTime + 1),W
     00CE 0903                      1- 1047     	BTRSS	STATUS,2
                                    1- 1048     	MGOTO	_00306_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
     00D0 21C9                      1- 1049     	MOVIA	0xc9
     00D1 04rr                      1- 1050     	SUBAR	_sleepTime,W
     00D2                           1- 1051     _00306_DS_:
     00D2 0803                      1- 1052     	BTRSS	STATUS,0
                                    1- 1053     	MGOTO	_00202_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1054     	.line	229, "main.c"; 	gotoSleep();
                                    1- 1055     	MCALL	_gotoSleep
     00D4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1056     	MGOTO	_00202_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6                           1- 1057     _00201_DS_:
                                    1- 1058     	.line	234, "main.c"; 	sleepTime = 0;
                                    1- 1059     	BANKSEL	_sleepTime
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 1060     	CLRR	_sleepTime
     00D8 02rr                      1- 1061     	CLRR	(_sleepTime + 1)
                                    1- 1062     ;;unsigned compare: left < lit (0x384=900), size=2
     00D9                           1- 1063     _00202_DS_:
                                    1- 1064     	.line	237, "main.c"; 	if(count900s >= 900)
     00D9 2103                      1- 1065     	MOVIA	0x03
                                    1- 1066     	BANKSEL	_count900s
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 04rr                      1- 1067     	SUBAR	(_count900s + 1),W
     00DC 0903                      1- 1068     	BTRSS	STATUS,2
                                    1- 1069     	MGOTO	_00307_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
     00DE 2184                      1- 1070     	MOVIA	0x84
     00DF 04rr                      1- 1071     	SUBAR	_count900s,W
     00E0                           1- 1072     _00307_DS_:
     00E0 0803                      1- 1073     	BTRSS	STATUS,0
                                    1- 1074     	MGOTO	_00210_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1075     	.line	239, "main.c"; 	powerOff();
                                    1- 1076     	MCALL	_powerOff
     00E2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1077     	MGOTO	_00210_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1078     	.line	242, "main.c"; 	}
                                    1- 1079     	RETURN	
     00E4 0010                      3-   40 m1      ret
                                    1- 1080     ; exit point of _main
                                    1- 1082     ;***
                                    1- 1083     ;  pBlock Stats: dbName = C
                                    1- 1084     ;***
                                    1- 1085     ;has an exit
                                    1- 1086     ;; Starting pCode block
                                    1- 1087     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1089     _F_wait_eoc:
                                    1- 1090     ; 2 exit points
     0000                           1- 1091     _00726_DS_:
                                    1- 1092     	.line	790, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1093     	BTRSS	_ADMDbits,5
                                    1- 1094     	MGOTO	_00726_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1095     	.line	792, "main.c"; 	}
                                    1- 1096     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1097     ; exit point of _F_wait_eoc
                                    1- 1099     ;***
                                    1- 1100     ;  pBlock Stats: dbName = C
                                    1- 1101     ;***
                                    1- 1102     ;has an exit
                                    1- 1103     ;functions called:
                                    1- 1104     ;   _delayms
                                    1- 1105     ;   _F_wait_eoc
                                    1- 1106     ;   _delayms
                                    1- 1107     ;   _F_wait_eoc
                                    1- 1108     ;6 compiler assigned registers:
                                    1- 1109     ;   r0x103C
                                    1- 1110     ;   r0x103D
                                    1- 1111     ;   r0x103E
                                    1- 1112     ;   r0x103F
                                    1- 1113     ;   r0x1040
                                    1- 1114     ;   r0x1041
                                    1- 1115     ;; Starting pCode block
                                    1- 1116     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1118     ;local variable name mapping:
     0000                           1- 1121     _F_AIN2_Convert:
                                    1- 1122     ; 2 exit points
                                    1- 1123     	.line	773, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1124     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1125     	MOVAR	r0x103C
                                    1- 1126     	.line	775, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1127     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1128     	CLRR	_R_AIN2_DATA_LB
                                    1- 1129     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1130     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1131     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1132     	.line	777, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1133     	MOVIA	0x92
     0008 00rr                      1- 1134     	MOVAR	_ADMD
                                    1- 1135     	.line	778, "main.c"; 	delayms(200);	
     0009 21C8                      1- 1136     	MOVIA	0xc8
                                    1- 1137     	MCALL	_delayms
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1138     	.line	779, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1139     	MOVIA	0x01
                                    1- 1140     	BANKSEL	r0x103D
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1141     	MOVAR	r0x103D
     000E                           1- 1142     _00719_DS_:
                                    1- 1143     	BANKSEL	r0x103D
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1144     	MOVR	r0x103D,W
                                    1- 1145     	BANKSEL	r0x103C
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1146     	SUBAR	r0x103C,W
     0012 0803                      1- 1147     	BTRSS	STATUS,0
                                    1- 1148     	MGOTO	_00721_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1149     	.line	781, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1150     	BSR	_ADMDbits,6
                                    1- 1151     	.line	782, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1152     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1153     	.line	783, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1154     	MOVIA	0x0f
     0017 10rr                      1- 1155     	ANDAR	_ADR,W
                                    1- 1156     ;;3	MOVAR	r0x103E
                                    1- 1157     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1158     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1159     	.line	784, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1160     	MOVR	_ADD,W
                                    1- 1161     	BANKSEL	r0x103E
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1162     	MOVAR	r0x103E
                                    1- 1163     ;;1	CLRR	r0x103F
                                    1- 1164     ;;106	MOVR	r0x103E,W
                                    1- 1165     ;;104	MOVAR	r0x1040
     001D 2100                      1- 1166     	MOVIA	0x00
                                    1- 1167     	BANKSEL	r0x1041
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1168     	MOVAR	r0x1041
                                    1- 1169     ;;105	MOVR	r0x1040,W
                                    1- 1170     	BANKSEL	r0x103E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1171     	MOVR	r0x103E,W
                                    1- 1172     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1173     	ADDAR	_R_AIN2_DATA,F
                                    1- 1174     	BANKSEL	r0x1041
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1175     	MOVR	r0x1041,W
     0026 0C03                      1- 1176     	BTRSC	STATUS,0
     0027 05rr                      1- 1177     	INCR	r0x1041,W
     0028 0D03                      1- 1178     	BTRSC	STATUS,2
                                    1- 1179     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1180     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1181     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1182     _00001_DS_:
                                    1- 1183     	.line	779, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1184     	BANKSEL	r0x103D
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1185     	INCR	r0x103D,F
                                    1- 1186     	MGOTO	_00719_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1187     _00721_DS_:
                                    1- 1188     	.line	786, "main.c"; 	}
                                    1- 1189     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1190     ; exit point of _F_AIN2_Convert
                                    1- 1192     ;***
                                    1- 1193     ;  pBlock Stats: dbName = C
                                    1- 1194     ;***
                                    1- 1195     ;has an exit
                                    1- 1196     ;functions called:
                                    1- 1197     ;   _delayms
                                    1- 1198     ;   _F_wait_eoc
                                    1- 1199     ;   _delayms
                                    1- 1200     ;   _F_wait_eoc
                                    1- 1201     ;6 compiler assigned registers:
                                    1- 1202     ;   r0x1042
                                    1- 1203     ;   r0x1043
                                    1- 1204     ;   r0x1044
                                    1- 1205     ;   r0x1045
                                    1- 1206     ;   r0x1046
                                    1- 1207     ;   r0x1047
                                    1- 1208     ;; Starting pCode block
                                    1- 1209     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1211     ;local variable name mapping:
     0000                           1- 1214     _F_AIN4_Convert:
                                    1- 1215     ; 2 exit points
                                    1- 1216     	.line	758, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1217     	BANKSEL	r0x1042
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1218     	MOVAR	r0x1042
                                    1- 1219     	.line	760, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1220     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1221     	CLRR	_R_AIN4_DATA_LB
                                    1- 1222     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1223     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1224     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1225     	.line	762, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1226     	MOVIA	0x94
     0008 00rr                      1- 1227     	MOVAR	_ADMD
                                    1- 1228     	.line	763, "main.c"; 	delayms(200);	
     0009 21C8                      1- 1229     	MOVIA	0xc8
                                    1- 1230     	MCALL	_delayms
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1231     	.line	764, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1232     	MOVIA	0x01
                                    1- 1233     	BANKSEL	r0x1043
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1234     	MOVAR	r0x1043
     000E                           1- 1235     _00710_DS_:
                                    1- 1236     	BANKSEL	r0x1043
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1237     	MOVR	r0x1043,W
                                    1- 1238     	BANKSEL	r0x1042
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1239     	SUBAR	r0x1042,W
     0012 0803                      1- 1240     	BTRSS	STATUS,0
                                    1- 1241     	MGOTO	_00712_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1242     	.line	766, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1243     	BSR	_ADMDbits,6
                                    1- 1244     	.line	767, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1245     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1246     	.line	768, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1247     	MOVIA	0x0f
     0017 10rr                      1- 1248     	ANDAR	_ADR,W
                                    1- 1249     ;;3	MOVAR	r0x1044
                                    1- 1250     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1251     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1252     	.line	769, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1253     	MOVR	_ADD,W
                                    1- 1254     	BANKSEL	r0x1044
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1255     	MOVAR	r0x1044
                                    1- 1256     ;;1	CLRR	r0x1045
                                    1- 1257     ;;103	MOVR	r0x1044,W
                                    1- 1258     ;;101	MOVAR	r0x1046
     001D 2100                      1- 1259     	MOVIA	0x00
                                    1- 1260     	BANKSEL	r0x1047
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1261     	MOVAR	r0x1047
                                    1- 1262     ;;102	MOVR	r0x1046,W
                                    1- 1263     	BANKSEL	r0x1044
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1264     	MOVR	r0x1044,W
                                    1- 1265     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1266     	ADDAR	_R_AIN4_DATA,F
                                    1- 1267     	BANKSEL	r0x1047
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1268     	MOVR	r0x1047,W
     0026 0C03                      1- 1269     	BTRSC	STATUS,0
     0027 05rr                      1- 1270     	INCR	r0x1047,W
     0028 0D03                      1- 1271     	BTRSC	STATUS,2
                                    1- 1272     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1273     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1274     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1275     _00002_DS_:
                                    1- 1276     	.line	764, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1277     	BANKSEL	r0x1043
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1278     	INCR	r0x1043,F
                                    1- 1279     	MGOTO	_00710_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1280     _00712_DS_:
                                    1- 1281     	.line	771, "main.c"; 	}
                                    1- 1282     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1283     ; exit point of _F_AIN4_Convert
                                    1- 1285     ;***
                                    1- 1286     ;  pBlock Stats: dbName = C
                                    1- 1287     ;***
                                    1- 1288     ;has an exit
                                    1- 1289     ;functions called:
                                    1- 1290     ;   _F_AIN4_Convert
                                    1- 1291     ;   __mulchar
                                    1- 1292     ;   __mulchar
                                    1- 1293     ;   _F_AIN4_Convert
                                    1- 1294     ;   __mulchar
                                    1- 1295     ;   __mulchar
                                    1- 1296     ;5 compiler assigned registers:
                                    1- 1297     ;   r0x1048
                                    1- 1298     ;   r0x1049
                                    1- 1299     ;   r0x104A
                                    1- 1300     ;   r0x104B
                                    1- 1301     ;   STK00
                                    1- 1302     ;; Starting pCode block
                                    1- 1303     .segment "code"; module=main, function=_checkOutA
                                    1- 1305     ;local variable name mapping:
     0000                           1- 1307     _checkOutA:
                                    1- 1308     ; 2 exit points
                                    1- 1309     	.line	687, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1310     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1311     	CLRR	_R_AIN4_DATA_LB
                                    1- 1312     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1313     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1314     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1315     	.line	688, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1316     	MOVIA	0x08
                                    1- 1317     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1318     	.line	689, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1319     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1320     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1321     	ANDIA	0xf0
     000A 00rr                      1- 1322     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1323     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1324     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1325     	ANDIA	0x0f
     000E 11rr                      1- 1326     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1327     	XORAR	_R_AIN4_DATA,F
                                    1- 1328     	.line	690, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1329     	MOVIA	0xf0
                                    1- 1330     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1331     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1332     	.line	691, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1333     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1334     	BANKSEL	r0x104A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1335     	MOVAR	r0x104A
                                    1- 1336     	BANKSEL	r0x1048
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1337     	MOVAR	r0x1048
                                    1- 1338     	BANKSEL	r0x1049
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1339     	CLRR	r0x1049
                                    1- 1340     ;;108	MOVR	r0x1048,W
     001A 2100                      1- 1341     	MOVIA	0x00
                                    1- 1342     	BANKSEL	r0x104B
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1343     	MOVAR	r0x104B
                                    1- 1344     	BANKSEL	r0x104A
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1345     	MOVR	r0x104A,W
                                    1- 1346     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1347     	ADDAR	_R_AIN4_DATA,F
                                    1- 1348     	BANKSEL	r0x104B
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1349     	MOVR	r0x104B,W
     0023 0C03                      1- 1350     	BTRSC	STATUS,0
     0024 05rr                      1- 1351     	INCR	r0x104B,W
     0025 0D03                      1- 1352     	BTRSC	STATUS,2
                                    1- 1353     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1354     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1355     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1356     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1357     _00003_DS_:
                                    1- 1358     	.line	692, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1359     	BCR	STATUS,0
                                    1- 1360     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1361     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1362     	RRR	_R_AIN4_DATA,F
                                    1- 1363     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1364     	BCR	STATUS,0
     002E 13rr                      1- 1365     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1366     	RRR	_R_AIN4_DATA,F
                                    1- 1367     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1368     	BCR	STATUS,0
     0031 13rr                      1- 1369     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1370     	RRR	_R_AIN4_DATA,F
                                    1- 1371     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1372     	.line	693, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0033 2106                      1- 1373     	MOVIA	0x06
                                    1- 1374     	BANKSEL	_workStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 04rr                      1- 1375     	SUBAR	_workStep,W
     0036 0C03                      1- 1376     	BTRSC	STATUS,0
                                    1- 1377     	MGOTO	_00650_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1378     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1379     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0038 2100                      1- 1380     	MOVIA	0x00
                                    1- 1381     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1382     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1383     	BTRSS	STATUS,2
                                    1- 1384     	MGOTO	_00695_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21C9                      1- 1385     	MOVIA	0xc9
     003E 04rr                      1- 1386     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1387     _00695_DS_:
     003F 0803                      1- 1388     	BTRSS	STATUS,0
                                    1- 1389     	MGOTO	_00650_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1390     	.line	695, "main.c"; 	if(++overCount > 5)
                                    1- 1391     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 05rr                      1- 1392     	INCR	_overCount,F
                                    1- 1393     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1394     ;;unsigned compare: left >= lit (0x6=6), size=1
     0043 2106                      1- 1395     	MOVIA	0x06
     0044 04rr                      1- 1396     	SUBAR	_overCount,W
     0045 0803                      1- 1397     	BTRSS	STATUS,0
                                    1- 1398     	MGOTO	_00653_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1399     	.line	697, "main.c"; 	overCount = 5;
     0047 2105                      1- 1400     	MOVIA	0x05
     0048 00rr                      1- 1401     	MOVAR	_overCount
                                    1- 1402     	MGOTO	_00653_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1403     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1404     ;;unsigned compare: left >= lit (0x191=401), size=2
     004A                           1- 1405     _00650_DS_:
                                    1- 1406     	.line	700, "main.c"; 	else if(R_AIN4_DATA > 400)
     004A 2101                      1- 1407     	MOVIA	0x01
                                    1- 1408     	BANKSEL	_R_AIN4_DATA
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1409     	SUBAR	(_R_AIN4_DATA + 1),W
     004D 0903                      1- 1410     	BTRSS	STATUS,2
                                    1- 1411     	MGOTO	_00697_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F 2191                      1- 1412     	MOVIA	0x91
     0050 04rr                      1- 1413     	SUBAR	_R_AIN4_DATA,W
     0051                           1- 1414     _00697_DS_:
     0051 0803                      1- 1415     	BTRSS	STATUS,0
                                    1- 1416     	MGOTO	_00647_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1417     	.line	702, "main.c"; 	if(++overCount > 5)
                                    1- 1418     	BANKSEL	_overCount
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 05rr                      1- 1419     	INCR	_overCount,F
                                    1- 1420     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1421     ;;unsigned compare: left >= lit (0x6=6), size=1
     0055 2106                      1- 1422     	MOVIA	0x06
     0056 04rr                      1- 1423     	SUBAR	_overCount,W
     0057 0803                      1- 1424     	BTRSS	STATUS,0
                                    1- 1425     	MGOTO	_00653_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1426     	.line	704, "main.c"; 	overCount = 5;
     0059 2105                      1- 1427     	MOVIA	0x05
     005A 00rr                      1- 1428     	MOVAR	_overCount
                                    1- 1429     	MGOTO	_00653_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1430     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1431     ;;unsigned compare: left >= lit (0x4E=78), size=2
     005C                           1- 1432     _00647_DS_:
                                    1- 1433     	.line	712, "main.c"; 	else if(R_AIN4_DATA > 77)
     005C 2100                      1- 1434     	MOVIA	0x00
                                    1- 1435     	BANKSEL	_R_AIN4_DATA
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 04rr                      1- 1436     	SUBAR	(_R_AIN4_DATA + 1),W
     005F 0903                      1- 1437     	BTRSS	STATUS,2
                                    1- 1438     	MGOTO	_00699_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
     0061 214E                      1- 1439     	MOVIA	0x4e
     0062 04rr                      1- 1440     	SUBAR	_R_AIN4_DATA,W
     0063                           1- 1441     _00699_DS_:
     0063 0803                      1- 1442     	BTRSS	STATUS,0
                                    1- 1443     	MGOTO	_00644_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1444     	.line	714, "main.c"; 	if(overCount > 0)
                                    1- 1445     	BANKSEL	_overCount
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 1446     	MOVR	_overCount,W
     0067 0903                      1- 1447     	BTRSS	STATUS,2
                                    1- 1448     	.line	716, "main.c"; 	overCount--;
     0068 06rr                      1- 1449     	DECR	_overCount,F
                                    1- 1450     	.line	719, "main.c"; 	tempDuty = 70 + workStep*5;
     0069 2105                      1- 1451     	MOVIA	0x05
     006A 00rr                      1- 1452     	MOVAR	STK00
                                    1- 1453     	BANKSEL	_workStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 1454     	MOVR	_workStep,W
                                    1- 1455     	MCALL	__mulchar
     006D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1456     	BANKSEL	r0x1048
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1457     	MOVAR	r0x1048
     0070 2146                      1- 1458     	MOVIA	0x46
     0071 03rr                      1- 1459     	ADDAR	r0x1048,W
                                    1- 1460     	BANKSEL	_tempDuty
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1461     	MOVAR	_tempDuty
                                    1- 1462     	.line	722, "main.c"; 	if(workStep == 1)
                                    1- 1463     	BANKSEL	_workStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 1464     	MOVR	_workStep,W
     0076 2401                      1- 1465     	XORIA	0x01
     0077 0903                      1- 1466     	BTRSS	STATUS,2
                                    1- 1467     	MGOTO	_00653_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1468     	.line	723, "main.c"; 	tempDuty = tempDuty + 2;
                                    1- 1469     	BANKSEL	_tempDuty
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 05rr                      1- 1470     	INCR	_tempDuty,F
     007B 05rr                      1- 1471     	INCR	_tempDuty,F
                                    1- 1472     	MGOTO	_00653_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 1473     _00644_DS_:
                                    1- 1474     	.line	727, "main.c"; 	u8t maxAout = 40;
     007D 2128                      1- 1475     	MOVIA	0x28
                                    1- 1476     	BANKSEL	r0x1048
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 1477     	MOVAR	r0x1048
                                    1- 1478     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1479     ;;unsigned compare: left >= lit (0x47=71), size=1
                                    1- 1480     	.line	728, "main.c"; 	if(batValue > 70)
     0080 2147                      1- 1481     	MOVIA	0x47
                                    1- 1482     	BANKSEL	_batValue
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1- 1483     	SUBAR	_batValue,W
     0083 0803                      1- 1484     	BTRSS	STATUS,0
                                    1- 1485     	MGOTO	_00634_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1486     	.line	730, "main.c"; 	maxAout = 58;
     0085 213A                      1- 1487     	MOVIA	0x3a
                                    1- 1488     	BANKSEL	r0x1048
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 1489     	MOVAR	r0x1048
     0088                           1- 1490     _00634_DS_:
                                    1- 1491     	.line	732, "main.c"; 	if(overCount > 0)
                                    1- 1492     	BANKSEL	_overCount
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 1493     	MOVR	_overCount,W
     008A 0903                      1- 1494     	BTRSS	STATUS,2
                                    1- 1495     	.line	734, "main.c"; 	overCount--;
     008B 06rr                      1- 1496     	DECR	_overCount,F
                                    1- 1497     	.line	736, "main.c"; 	if(R_AIN4_DATA > maxAout && workStep < 4)
                                    1- 1498     	BANKSEL	r0x1048
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1- 1499     	MOVR	r0x1048,W
                                    1- 1500     	BANKSEL	r0x1049
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1501     	MOVAR	r0x1049
                                    1- 1502     	BANKSEL	r0x104A
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 02rr                      1- 1503     	CLRR	r0x104A
                                    1- 1504     	BANKSEL	_R_AIN4_DATA
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1- 1505     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1506     	BANKSEL	r0x104A
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 1507     	SUBAR	r0x104A,W
     0096 0903                      1- 1508     	BTRSS	STATUS,2
                                    1- 1509     	MGOTO	_00701_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1510     	BANKSEL	_R_AIN4_DATA
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1511     	MOVR	_R_AIN4_DATA,W
                                    1- 1512     	BANKSEL	r0x1049
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 04rr                      1- 1513     	SUBAR	r0x1049,W
     009C                           1- 1514     _00701_DS_:
     009C 0C03                      1- 1515     	BTRSC	STATUS,0
                                    1- 1516     	MGOTO	_00640_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1517     ;;unsigned compare: left < lit (0x4=4), size=1
     009E 2104                      1- 1518     	MOVIA	0x04
                                    1- 1519     	BANKSEL	_workStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 04rr                      1- 1520     	SUBAR	_workStep,W
     00A1 0C03                      1- 1521     	BTRSC	STATUS,0
                                    1- 1522     	MGOTO	_00640_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1523     	.line	738, "main.c"; 	tempDuty = 70 + workStep*5;
     00A3 2105                      1- 1524     	MOVIA	0x05
     00A4 00rr                      1- 1525     	MOVAR	STK00
     00A5 01rr                      1- 1526     	MOVR	_workStep,W
                                    1- 1527     	MCALL	__mulchar
     00A6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1528     	BANKSEL	r0x1048
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 00rr                      1- 1529     	MOVAR	r0x1048
     00A9 2146                      1- 1530     	MOVIA	0x46
     00AA 03rr                      1- 1531     	ADDAR	r0x1048,W
                                    1- 1532     	BANKSEL	_tempDuty
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1- 1533     	MOVAR	_tempDuty
                                    1- 1534     	MGOTO	_00653_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1535     ;;unsigned compare: left < lit (0x4B=75), size=2
     00AE                           1- 1536     _00640_DS_:
                                    1- 1537     	.line	741, "main.c"; 	else if(R_AIN4_DATA < 75)
     00AE 2100                      1- 1538     	MOVIA	0x00
                                    1- 1539     	BANKSEL	_R_AIN4_DATA
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 1540     	SUBAR	(_R_AIN4_DATA + 1),W
     00B1 0903                      1- 1541     	BTRSS	STATUS,2
                                    1- 1542     	MGOTO	_00703_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
     00B3 214B                      1- 1543     	MOVIA	0x4b
     00B4 04rr                      1- 1544     	SUBAR	_R_AIN4_DATA,W
     00B5                           1- 1545     _00703_DS_:
     00B5 0C03                      1- 1546     	BTRSC	STATUS,0
                                    1- 1547     	MGOTO	_00653_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1548     	.line	744, "main.c"; 	tempDuty = maxDuty;
                                    1- 1549     	BANKSEL	_maxDuty
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 01rr                      1- 1550     	MOVR	_maxDuty,W
                                    1- 1551     	BANKSEL	_tempDuty
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 1552     	MOVAR	_tempDuty
     00BB                           1- 1553     _00653_DS_:
                                    1- 1554     	.line	752, "main.c"; 	}
                                    1- 1555     	RETURN	
     00BB 0010                      3-   40 m1      ret
                                    1- 1556     ; exit point of _checkOutA
                                    1- 1558     ;***
                                    1- 1559     ;  pBlock Stats: dbName = C
                                    1- 1560     ;***
                                    1- 1561     ;has an exit
                                    1- 1562     ;functions called:
                                    1- 1563     ;   _F_AIN2_Convert
                                    1- 1564     ;   __mulchar
                                    1- 1565     ;   _F_AIN2_Convert
                                    1- 1566     ;   __mulchar
                                    1- 1567     ;6 compiler assigned registers:
                                    1- 1568     ;   r0x104C
                                    1- 1569     ;   r0x104D
                                    1- 1570     ;   r0x104E
                                    1- 1571     ;   r0x104F
                                    1- 1572     ;   r0x1050
                                    1- 1573     ;   STK00
                                    1- 1574     ;; Starting pCode block
                                    1- 1575     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1577     _checkBatAD:
                                    1- 1578     ; 2 exit points
                                    1- 1579     	.line	639, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1580     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1581     	CLRR	_R_AIN2_DATA_LB
                                    1- 1582     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1583     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1584     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1585     	.line	640, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1586     	MOVIA	0x08
                                    1- 1587     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1588     	.line	641, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1589     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1590     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1591     	ANDIA	0xf0
     000A 00rr                      1- 1592     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1593     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1594     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1595     	ANDIA	0x0f
     000E 11rr                      1- 1596     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1597     	XORAR	_R_AIN2_DATA,F
                                    1- 1598     	.line	642, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1599     	MOVIA	0xf0
                                    1- 1600     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1601     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1602     	.line	643, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1603     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1604     	BANKSEL	r0x104E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1605     	MOVAR	r0x104E
                                    1- 1606     	BANKSEL	r0x104C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1607     	MOVAR	r0x104C
                                    1- 1608     	BANKSEL	r0x104D
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1609     	CLRR	r0x104D
                                    1- 1610     ;;107	MOVR	r0x104C,W
     001A 2100                      1- 1611     	MOVIA	0x00
                                    1- 1612     	BANKSEL	r0x104F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1613     	MOVAR	r0x104F
                                    1- 1614     	BANKSEL	r0x104E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1615     	MOVR	r0x104E,W
                                    1- 1616     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1617     	ADDAR	_R_AIN2_DATA,F
                                    1- 1618     	BANKSEL	r0x104F
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1619     	MOVR	r0x104F,W
     0023 0C03                      1- 1620     	BTRSC	STATUS,0
     0024 05rr                      1- 1621     	INCR	r0x104F,W
     0025 0D03                      1- 1622     	BTRSC	STATUS,2
                                    1- 1623     	MGOTO	_00004_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1624     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1625     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1626     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1627     _00004_DS_:
                                    1- 1628     	.line	644, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1629     	BCR	STATUS,0
                                    1- 1630     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1631     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1632     	RRR	_R_AIN2_DATA,F
                                    1- 1633     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1634     	BCR	STATUS,0
     002E 13rr                      1- 1635     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1636     	RRR	_R_AIN2_DATA,F
                                    1- 1637     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1638     	BCR	STATUS,0
     0031 13rr                      1- 1639     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1640     	RRR	_R_AIN2_DATA,F
                                    1- 1641     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1642     ;;unsigned compare: left >= lit (0x49B=1179), size=2
                                    1- 1643     	.line	645, "main.c"; 	if(R_AIN2_DATA <= 1178)
     0033 2104                      1- 1644     	MOVIA	0x04
     0034 04rr                      1- 1645     	SUBAR	(_R_AIN2_DATA + 1),W
     0035 0903                      1- 1646     	BTRSS	STATUS,2
                                    1- 1647     	MGOTO	_00618_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 219B                      1- 1648     	MOVIA	0x9b
     0038 04rr                      1- 1649     	SUBAR	_R_AIN2_DATA,W
     0039                           1- 1650     _00618_DS_:
     0039 0C03                      1- 1651     	BTRSC	STATUS,0
                                    1- 1652     	MGOTO	_00563_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1653     	.line	647, "main.c"; 	pwStep = 0;
                                    1- 1654     	BANKSEL	_pwStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 1655     	CLRR	_pwStep
                                    1- 1656     	.line	648, "main.c"; 	R_AIN2_DATA = 1170;
     003D 2192                      1- 1657     	MOVIA	0x92
                                    1- 1658     	BANKSEL	_R_AIN2_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 1659     	MOVAR	_R_AIN2_DATA
     0040 2104                      1- 1660     	MOVIA	0x04
     0041 00rr                      1- 1661     	MOVAR	(_R_AIN2_DATA + 1)
     0042                           1- 1662     _00563_DS_:
                                    1- 1663     	.line	651, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1170;
     0042 216E                      1- 1664     	MOVIA	0x6e
                                    1- 1665     	BANKSEL	_R_AIN2_DATA
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 03rr                      1- 1666     	ADDAR	_R_AIN2_DATA,F
     0045 21FB                      1- 1667     	MOVIA	0xfb
     0046 0C03                      1- 1668     	BTRSC	STATUS,0
     0047 21FC                      1- 1669     	MOVIA	0xfc
     0048 03rr                      1- 1670     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1671     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 1672     	.line	652, "main.c"; 	if(R_AIN2_DATA >= 340)
     0049 2101                      1- 1673     	MOVIA	0x01
     004A 04rr                      1- 1674     	SUBAR	(_R_AIN2_DATA + 1),W
     004B 0903                      1- 1675     	BTRSS	STATUS,2
                                    1- 1676     	MGOTO	_00619_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 2154                      1- 1677     	MOVIA	0x54
     004E 04rr                      1- 1678     	SUBAR	_R_AIN2_DATA,W
     004F                           1- 1679     _00619_DS_:
     004F 0803                      1- 1680     	BTRSS	STATUS,0
                                    1- 1681     	MGOTO	_00570_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1682     	.line	654, "main.c"; 	batValue = 80+(R_AIN2_DATA-300)/4;
     0051 21D4                      1- 1683     	MOVIA	0xd4
                                    1- 1684     	BANKSEL	_R_AIN2_DATA
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 03rr                      1- 1685     	ADDAR	_R_AIN2_DATA,W
                                    1- 1686     	BANKSEL	r0x104C
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 1687     	MOVAR	r0x104C
     0056 21FE                      1- 1688     	MOVIA	0xfe
                                    1- 1689     	BANKSEL	r0x104D
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 1690     	MOVAR	r0x104D
                                    1- 1691     	BANKSEL	_R_AIN2_DATA
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1- 1692     	MOVR	(_R_AIN2_DATA + 1),W
     005B 0C03                      1- 1693     	BTRSC	STATUS,0
     005C 05rr                      1- 1694     	INCR	(_R_AIN2_DATA + 1),W
     005D 0D03                      1- 1695     	BTRSC	STATUS,2
                                    1- 1696     	MGOTO	_00005_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1697     	BANKSEL	r0x104D
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 03rr                      1- 1698     	ADDAR	r0x104D,F
                                    1- 1699     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0061                           1- 1700     _00005_DS_:
     0061 1C03                      1- 1701     	BCR	STATUS,0
                                    1- 1702     	BANKSEL	r0x104D
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 13rr                      1- 1703     	RRR	r0x104D,W
                                    1- 1704     	BANKSEL	r0x104F
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 00rr                      1- 1705     	MOVAR	r0x104F
                                    1- 1706     	BANKSEL	r0x104C
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 13rr                      1- 1707     	RRR	r0x104C,W
                                    1- 1708     	BANKSEL	r0x104E
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 1709     	MOVAR	r0x104E
                                    1- 1710     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     006A 1C03                      1- 1711     	BCR	STATUS,0
                                    1- 1712     	BANKSEL	r0x104F
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 13rr                      1- 1713     	RRR	r0x104F,F
                                    1- 1714     	BANKSEL	r0x104E
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 13rr                      1- 1715     	RRR	r0x104E,F
     006F 01rr                      1- 1716     	MOVR	r0x104E,W
                                    1- 1717     	BANKSEL	r0x104C
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 00rr                      1- 1718     	MOVAR	r0x104C
     0072 2150                      1- 1719     	MOVIA	0x50
     0073 03rr                      1- 1720     	ADDAR	r0x104C,W
                                    1- 1721     	BANKSEL	_batValue
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1722     	MOVAR	_batValue
                                    1- 1723     	MGOTO	_00571_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1724     ;;unsigned compare: left < lit (0xC8=200), size=2
     0077                           1- 1725     _00570_DS_:
                                    1- 1726     	.line	656, "main.c"; 	else if(R_AIN2_DATA >= 200)
     0077 2100                      1- 1727     	MOVIA	0x00
                                    1- 1728     	BANKSEL	_R_AIN2_DATA
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 04rr                      1- 1729     	SUBAR	(_R_AIN2_DATA + 1),W
     007A 0903                      1- 1730     	BTRSS	STATUS,2
                                    1- 1731     	MGOTO	_00620_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C 21C8                      1- 1732     	MOVIA	0xc8
     007D 04rr                      1- 1733     	SUBAR	_R_AIN2_DATA,W
     007E                           1- 1734     _00620_DS_:
     007E 0803                      1- 1735     	BTRSS	STATUS,0
                                    1- 1736     	MGOTO	_00567_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1737     	.line	658, "main.c"; 	batValue = 25 + (R_AIN2_DATA-200)/2;
     0080 2138                      1- 1738     	MOVIA	0x38
                                    1- 1739     	BANKSEL	_R_AIN2_DATA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 03rr                      1- 1740     	ADDAR	_R_AIN2_DATA,W
                                    1- 1741     	BANKSEL	r0x104C
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1- 1742     	MOVAR	r0x104C
     0085 21FF                      1- 1743     	MOVIA	0xff
                                    1- 1744     	BANKSEL	r0x104E
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 1745     	MOVAR	r0x104E
                                    1- 1746     	BANKSEL	_R_AIN2_DATA
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 1747     	MOVR	(_R_AIN2_DATA + 1),W
     008A 0C03                      1- 1748     	BTRSC	STATUS,0
     008B 05rr                      1- 1749     	INCR	(_R_AIN2_DATA + 1),W
     008C 0D03                      1- 1750     	BTRSC	STATUS,2
                                    1- 1751     	MGOTO	_00006_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1752     	BANKSEL	r0x104E
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 03rr                      1- 1753     	ADDAR	r0x104E,F
                                    1- 1754     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0090                           1- 1755     _00006_DS_:
     0090 1C03                      1- 1756     	BCR	STATUS,0
                                    1- 1757     	BANKSEL	r0x104E
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 13rr                      1- 1758     	RRR	r0x104E,W
                                    1- 1759     ;;1	MOVAR	r0x1050
                                    1- 1760     	BANKSEL	r0x104C
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 13rr                      1- 1761     	RRR	r0x104C,W
                                    1- 1762     	BANKSEL	r0x104F
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1763     	MOVAR	r0x104F
                                    1- 1764     	BANKSEL	r0x104C
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1765     	MOVAR	r0x104C
     0099 2119                      1- 1766     	MOVIA	0x19
     009A 03rr                      1- 1767     	ADDAR	r0x104C,W
                                    1- 1768     	BANKSEL	_batValue
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 00rr                      1- 1769     	MOVAR	_batValue
                                    1- 1770     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1771     ;;unsigned compare: left >= lit (0x60=96), size=1
                                    1- 1772     	.line	659, "main.c"; 	if(batValue > 95)
     009D 2160                      1- 1773     	MOVIA	0x60
     009E 04rr                      1- 1774     	SUBAR	_batValue,W
     009F 0803                      1- 1775     	BTRSS	STATUS,0
                                    1- 1776     	MGOTO	_00571_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1777     	.line	660, "main.c"; 	batValue = 90;
     00A1 215A                      1- 1778     	MOVIA	0x5a
     00A2 00rr                      1- 1779     	MOVAR	_batValue
                                    1- 1780     	MGOTO	_00571_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1781     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00A4                           1- 1782     _00567_DS_:
                                    1- 1783     	.line	664, "main.c"; 	batValue = R_AIN2_DATA/8;
     00A4 1C03                      1- 1784     	BCR	STATUS,0
                                    1- 1785     	BANKSEL	_R_AIN2_DATA
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 13rr                      1- 1786     	RRR	(_R_AIN2_DATA + 1),W
                                    1- 1787     	BANKSEL	r0x104F
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 00rr                      1- 1788     	MOVAR	r0x104F
                                    1- 1789     	BANKSEL	_R_AIN2_DATA
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 13rr                      1- 1790     	RRR	_R_AIN2_DATA,W
                                    1- 1791     	BANKSEL	r0x104C
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1- 1792     	MOVAR	r0x104C
                                    1- 1793     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00AD 1C03                      1- 1794     	BCR	STATUS,0
                                    1- 1795     	BANKSEL	r0x104F
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 13rr                      1- 1796     	RRR	r0x104F,F
                                    1- 1797     	BANKSEL	r0x104C
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 13rr                      1- 1798     	RRR	r0x104C,F
                                    1- 1799     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00B2 1C03                      1- 1800     	BCR	STATUS,0
                                    1- 1801     	BANKSEL	r0x104F
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 13rr                      1- 1802     	RRR	r0x104F,F
                                    1- 1803     	BANKSEL	r0x104C
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 13rr                      1- 1804     	RRR	r0x104C,F
     00B7 01rr                      1- 1805     	MOVR	r0x104C,W
                                    1- 1806     	BANKSEL	_batValue
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 00rr                      1- 1807     	MOVAR	_batValue
     00BA                           1- 1808     _00571_DS_:
                                    1- 1809     	.line	666, "main.c"; 	if(0x08 & PORTA)
                                    1- 1810     	BANKSEL	_PORTA
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 09rr                      1- 1811     	BTRSS	_PORTA,3
                                    1- 1812     	MGOTO	_00584_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1813     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1814     ;;unsigned compare: left >= lit (0x1F=31), size=1
                                    1- 1815     	.line	669, "main.c"; 	if(batValue > 30)
     00BD 211F                      1- 1816     	MOVIA	0x1f
                                    1- 1817     	BANKSEL	_batValue
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 04rr                      1- 1818     	SUBAR	_batValue,W
     00C0 0803                      1- 1819     	BTRSS	STATUS,0
                                    1- 1820     	MGOTO	_00578_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1821     	.line	670, "main.c"; 	batValue = batValue - 20 +  shiweiNum*2;
     00C2 21EC                      1- 1822     	MOVIA	0xec
     00C3 03rr                      1- 1823     	ADDAR	_batValue,W
                                    1- 1824     	BANKSEL	r0x104C
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 00rr                      1- 1825     	MOVAR	r0x104C
     00C6 2102                      1- 1826     	MOVIA	0x02
     00C7 00rr                      1- 1827     	MOVAR	STK00
                                    1- 1828     	BANKSEL	_shiweiNum
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 01rr                      1- 1829     	MOVR	_shiweiNum,W
                                    1- 1830     	MCALL	__mulchar
     00CA 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1831     	BANKSEL	r0x104F
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 00rr                      1- 1832     	MOVAR	r0x104F
                                    1- 1833     	BANKSEL	r0x104C
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 03rr                      1- 1834     	ADDAR	r0x104C,W
                                    1- 1835     	BANKSEL	_batValue
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 00rr                      1- 1836     	MOVAR	_batValue
                                    1- 1837     	MGOTO	_00586_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1838     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1839     ;;unsigned compare: left >= lit (0xB=11), size=1
     00D2                           1- 1840     _00578_DS_:
                                    1- 1841     	.line	671, "main.c"; 	else if(batValue > 10)
     00D2 210B                      1- 1842     	MOVIA	0x0b
                                    1- 1843     	BANKSEL	_batValue
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 04rr                      1- 1844     	SUBAR	_batValue,W
     00D5 0803                      1- 1845     	BTRSS	STATUS,0
                                    1- 1846     	MGOTO	_00575_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1847     	.line	672, "main.c"; 	batValue = batValue - 10 +  shiweiNum;
     00D7 21F6                      1- 1848     	MOVIA	0xf6
     00D8 03rr                      1- 1849     	ADDAR	_batValue,W
                                    1- 1850     	BANKSEL	r0x104C
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 1851     	MOVAR	r0x104C
                                    1- 1852     	BANKSEL	_shiweiNum
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 01rr                      1- 1853     	MOVR	_shiweiNum,W
                                    1- 1854     	BANKSEL	r0x104C
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 03rr                      1- 1855     	ADDAR	r0x104C,W
                                    1- 1856     	BANKSEL	_batValue
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 00rr                      1- 1857     	MOVAR	_batValue
                                    1- 1858     	MGOTO	_00586_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
     00E2                           1- 1859     _00575_DS_:
                                    1- 1860     	.line	673, "main.c"; 	else if(batValue > 0)
                                    1- 1861     	BANKSEL	_batValue
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 01rr                      1- 1862     	MOVR	_batValue,W
     00E4 0D03                      1- 1863     	BTRSC	STATUS,2
                                    1- 1864     	MGOTO	_00586_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1865     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=0, offr=0
                                    1- 1866     	.line	674, "main.c"; 	batValue = batValue/2 + 1;
     00E6 1C03                      1- 1867     	BCR	STATUS,0
     00E7 13rr                      1- 1868     	RRR	_batValue,W
                                    1- 1869     	BANKSEL	r0x104C
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 00rr                      1- 1870     	MOVAR	r0x104C
     00EA 05rr                      1- 1871     	INCR	r0x104C,W
                                    1- 1872     	BANKSEL	_batValue
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 00rr                      1- 1873     	MOVAR	_batValue
                                    1- 1874     	MGOTO	_00586_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1875     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1876     ;;unsigned compare: left >= lit (0x15=21), size=1
     00EE                           1- 1877     _00584_DS_:
                                    1- 1878     	.line	676, "main.c"; 	else if(batValue > 20 && batValue < 98)
     00EE 2115                      1- 1879     	MOVIA	0x15
                                    1- 1880     	BANKSEL	_batValue
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 04rr                      1- 1881     	SUBAR	_batValue,W
     00F1 0803                      1- 1882     	BTRSS	STATUS,0
                                    1- 1883     	MGOTO	_00586_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1884     ;;unsigned compare: left < lit (0x62=98), size=1
     00F3 2162                      1- 1885     	MOVIA	0x62
     00F4 04rr                      1- 1886     	SUBAR	_batValue,W
     00F5 0C03                      1- 1887     	BTRSC	STATUS,0
                                    1- 1888     	MGOTO	_00586_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1889     	.line	678, "main.c"; 	batValue = batValue + 7;
     00F7 2107                      1- 1890     	MOVIA	0x07
     00F8 03rr                      1- 1891     	ADDAR	_batValue,F
     00F9                           1- 1892     _00586_DS_:
                                    1- 1893     	.line	681, "main.c"; 	}
                                    1- 1894     	RETURN	
     00F9 0010                      3-   40 m1      ret
                                    1- 1895     ; exit point of _checkBatAD
                                    1- 1897     ;***
                                    1- 1898     ;  pBlock Stats: dbName = C
                                    1- 1899     ;***
                                    1- 1900     ;has an exit
                                    1- 1901     ;functions called:
                                    1- 1902     ;   _delayms
                                    1- 1903     ;   _delayms
                                    1- 1904     ;; Starting pCode block
                                    1- 1905     .segment "code"; module=main, function=_initAD
     0000                           1- 1907     _initAD:
                                    1- 1908     ; 2 exit points
                                    1- 1909     	.line	615, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1910     	MOVIA	0x84
     0001 00rr                      1- 1911     	MOVAR	_ADMD
                                    1- 1912     	.line	620, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1913     	CLRR	_ADVREFH
                                    1- 1914     	.line	625, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1915     	MOVIA	0x10
     0004 00rr                      1- 1916     	MOVAR	_ADR
                                    1- 1917     	.line	627, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1918     	MOVIA	0x03
     0006 00rr                      1- 1919     	MOVAR	_ADCR
                                    1- 1920     	.line	629, "main.c"; 	PACON = C_PA2_AIN2 | C_PA1_AIN1 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2116                      1- 1921     	MOVIA	0x16
     0008 00rr                      1- 1922     	MOVAR	_PACON
                                    1- 1923     	.line	630, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 1924     	BSR	_ADMDbits,4
                                    1- 1925     	.line	631, "main.c"; 	delayms(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 1926     	MOVIA	0x64
                                    1- 1927     	MCALL	_delayms
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1928     	.line	634, "main.c"; 	}
                                    1- 1929     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1930     ; exit point of _initAD
                                    1- 1932     ;***
                                    1- 1933     ;  pBlock Stats: dbName = C
                                    1- 1934     ;***
                                    1- 1935     ;has an exit
                                    1- 1936     ;1 compiler assigned register :
                                    1- 1937     ;   r0x1051
                                    1- 1938     ;; Starting pCode block
                                    1- 1939     .segment "code"; module=main, function=_keyRead
                                    1- 1941     ;local variable name mapping:
     0000                           1- 1943     _keyRead:
                                    1- 1944     ; 2 exit points
                                    1- 1945     	.line	577, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1946     	BANKSEL	r0x1051
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1947     	MOVAR	r0x1051
                                    1- 1948     	.line	579, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1949     	MOVR	r0x1051,W
     0003 0D03                      1- 1950     	BTRSC	STATUS,2
                                    1- 1951     	MGOTO	_00551_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1952     	.line	581, "main.c"; 	keyCount++;
                                    1- 1953     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1954     	INCR	_keyCount,F
                                    1- 1955     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1956     	.line	583, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1957     	MOVIA	0xc8
     0008 04rr                      1- 1958     	SUBAR	_keyCount,W
     0009 0803                      1- 1959     	BTRSS	STATUS,0
                                    1- 1960     	MGOTO	_00552_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1961     	.line	585, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1962     	MOVIA	0xc8
     000C 00rr                      1- 1963     	MOVAR	_keyCount
                                    1- 1964     	.line	586, "main.c"; 	if(!longPressFlag)
                                    1- 1965     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 1966     	BTRSC	_Status,1
                                    1- 1967     	MGOTO	_00552_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1968     	.line	588, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1969     	BSR	_Status,1
                                    1- 1970     	.line	589, "main.c"; 	return 2;
     0011 2102                      1- 1971     	MOVIA	0x02
                                    1- 1972     	MGOTO	_00553_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1973     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 1974     _00551_DS_:
                                    1- 1975     	.line	595, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 1976     	MOVIA	0xc8
                                    1- 1977     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1978     	SUBAR	_keyCount,W
     0016 0803                      1- 1979     	BTRSS	STATUS,0
                                    1- 1980     	MGOTO	_00548_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1981     	.line	597, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1982     	CLRR	_keyCount
                                    1- 1983     	.line	598, "main.c"; 	longPressFlag = 0;
                                    1- 1984     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 1985     	BCR	_Status,1
                                    1- 1986     	.line	599, "main.c"; 	return	0;
     001B 2100                      1- 1987     	MOVIA	0x00
                                    1- 1988     	MGOTO	_00553_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1989     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 1990     _00548_DS_:
                                    1- 1991     	.line	601, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 1992     	MOVIA	0x04
                                    1- 1993     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 1994     	SUBAR	_keyCount,W
     0020 0803                      1- 1995     	BTRSS	STATUS,0
                                    1- 1996     	MGOTO	_00549_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1997     	.line	603, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1998     	CLRR	_keyCount
                                    1- 1999     	.line	604, "main.c"; 	return	1;
     0023 2101                      1- 2000     	MOVIA	0x01
                                    1- 2001     	MGOTO	_00553_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2002     _00549_DS_:
                                    1- 2003     	.line	606, "main.c"; 	keyCount = 0;
                                    1- 2004     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2005     	CLRR	_keyCount
     0027                           1- 2006     _00552_DS_:
                                    1- 2007     	.line	608, "main.c"; 	return 0;
     0027 2100                      1- 2008     	MOVIA	0x00
     0028                           1- 2009     _00553_DS_:
                                    1- 2010     	.line	609, "main.c"; 	}
                                    1- 2011     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2012     ; exit point of _keyRead
                                    1- 2014     ;***
                                    1- 2015     ;  pBlock Stats: dbName = C
                                    1- 2016     ;***
                                    1- 2017     ;has an exit
                                    1- 2018     ;functions called:
                                    1- 2019     ;   _checkBatAD
                                    1- 2020     ;   _setInput
                                    1- 2021     ;   _pwmStop
                                    1- 2022     ;   _pwm1Stop
                                    1- 2023     ;   _checkBatAD
                                    1- 2024     ;   _setInput
                                    1- 2025     ;   _pwmStop
                                    1- 2026     ;   _pwm1Stop
                                    1- 2027     ;; Starting pCode block
                                    1- 2028     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2030     _gotoSleep:
                                    1- 2031     ; 2 exit points
                                    1- 2032     	.line	545, "main.c"; 	checkBatAD();
                                    1- 2033     	MCALL	_checkBatAD
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2034     	.line	546, "main.c"; 	setInput();
                                    1- 2035     	MCALL	_setInput
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2036     	.line	547, "main.c"; 	count5s = 0;
                                    1- 2037     	BANKSEL	_count5s
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2038     	CLRR	_count5s
     0004 02rr                      1- 2039     	CLRR	(_count5s + 1)
                                    1- 2040     	.line	548, "main.c"; 	showFlag = 0;
                                    1- 2041     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Err                      1- 2042     	BCR	_Status,4
                                    1- 2043     	.line	549, "main.c"; 	IOSTA = C_PA5_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0007 212E                      1- 2044     	MOVIA	0x2e
     0008 000r                      1- 2045     	IOST	_IOSTA
                                    1- 2046     	.line	551, "main.c"; 	IOSTB = 0x00;
     0009 0200                      1- 2047     	CLRA	
     000A 000r                      1- 2048     	IOST	_IOSTB
                                    1- 2049     	.line	552, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2050     	CLRR	_PORTB
                                    1- 2051     	.line	553, "main.c"; 	PORTA = 0x00;
                                    1- 2052     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2053     	CLRR	_PORTA
                                    1- 2054     	.line	554, "main.c"; 	sleepTime = 0;
                                    1- 2055     	BANKSEL	_sleepTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2056     	CLRR	_sleepTime
     0010 02rr                      1- 2057     	CLRR	(_sleepTime + 1)
                                    1- 2058     	.line	556, "main.c"; 	pwmStop();
                                    1- 2059     	MCALL	_pwmStop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2060     	.line	557, "main.c"; 	pwm1Stop();
                                    1- 2061     	MCALL	_pwm1Stop
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2062     	.line	558, "main.c"; 	workStep = 0;
                                    1- 2063     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2064     	CLRR	_workStep
                                    1- 2065     	.line	559, "main.c"; 	AWUCON = 0x28;
     0015 2128                      1- 2066     	MOVIA	0x28
     0016 00rr                      1- 2067     	MOVAR	_AWUCON
                                    1- 2068     	.line	560, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0017 210B                      1- 2069     	MOVIA	0x0b
     0018 00rr                      1- 2070     	MOVAR	_INTE
                                    1- 2071     	.line	561, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0019 2118                      1- 2072     	MOVIA	0x18
     001A 00rr                      1- 2073     	MOVAR	_PCON
                                    1- 2074     	.line	562, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001B 02rr                      1- 2075     	CLRR	_INTF
                                    1- 2076     	.line	563, "main.c"; 	CLRWDT();
     001C 0002                      1- 2077     	clrwdt
                                    1- 2078     	.line	564, "main.c"; 	ENI();
     001D 0004                      1- 2079     	ENI
                                    1- 2080     	.line	565, "main.c"; 	SLEEP();
     001E 0001                      1- 2081     	sleep
                                    1- 2082     	.line	566, "main.c"; 	AWUCON = 0x00;
     001F 02rr                      1- 2083     	CLRR	_AWUCON
                                    1- 2084     	.line	568, "main.c"; 	IOSTA =  C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0020 213E                      1- 2085     	MOVIA	0x3e
     0021 000r                      1- 2086     	IOST	_IOSTA
                                    1- 2087     	.line	569, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2088     	MOVIA	0x01
     0023 00rr                      1- 2089     	MOVAR	_INTE
                                    1- 2090     	.line	570, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2091     	CLRR	_INTF
                                    1- 2092     	.line	572, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0025 21A8                      1- 2093     	MOVIA	0xa8
     0026 00rr                      1- 2094     	MOVAR	_PCON
                                    1- 2095     	.line	574, "main.c"; 	}
                                    1- 2096     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2097     ; exit point of _gotoSleep
                                    1- 2099     ;***
                                    1- 2100     ;  pBlock Stats: dbName = C
                                    1- 2101     ;***
                                    1- 2102     ;has an exit
                                    1- 2103     ;; Starting pCode block
                                    1- 2104     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2106     _pwmStop:
                                    1- 2107     ; 2 exit points
                                    1- 2108     	.line	539, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2109     	CLRA	
     0001 00rr                      1- 2110     	SFUN	_T2CR1
                                    1- 2111     	.line	540, "main.c"; 	}
                                    1- 2112     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2113     ; exit point of _pwmStop
                                    1- 2115     ;***
                                    1- 2116     ;  pBlock Stats: dbName = C
                                    1- 2117     ;***
                                    1- 2118     ;has an exit
                                    1- 2119     ;1 compiler assigned register :
                                    1- 2120     ;   r0x1052
                                    1- 2121     ;; Starting pCode block
                                    1- 2122     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2124     _pwmInit:
                                    1- 2125     ; 2 exit points
                                    1- 2126     	.line	527, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2127     	SFUNR	_T2CR1
                                    1- 2128     	BANKSEL	r0x1052
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2129     	MOVAR	r0x1052
     0003 0Frr                      1- 2130     	BTRSC	r0x1052,7
                                    1- 2131     	.line	528, "main.c"; 	return;
                                    1- 2132     	MGOTO	_00528_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2133     	.line	529, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2134     	CLRR	_TMRH
                                    1- 2135     	.line	530, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2136     	MOVIA	0x64
     0007 00rr                      1- 2137     	SFUN	_TMR2
                                    1- 2138     	.line	533, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2139     	MOVIA	0x01
     0009 00rr                      1- 2140     	SFUN	_T2CR2
                                    1- 2141     	.line	534, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2142     	MOVIA	0x83
     000B 00rr                      1- 2143     	SFUN	_T2CR1
     000C                           1- 2144     _00528_DS_:
                                    1- 2145     	.line	535, "main.c"; 	}
                                    1- 2146     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2147     ; exit point of _pwmInit
                                    1- 2149     ;***
                                    1- 2150     ;  pBlock Stats: dbName = C
                                    1- 2151     ;***
                                    1- 2152     ;has an exit
                                    1- 2153     ;; Starting pCode block
                                    1- 2154     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2156     _pwm1Stop:
                                    1- 2157     ; 2 exit points
                                    1- 2158     	.line	520, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2159     	CLRA	
     0001 00rr                      1- 2160     	SFUN	_T1CR1
                                    1- 2161     	.line	521, "main.c"; 	}
                                    1- 2162     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2163     ; exit point of _pwm1Stop
                                    1- 2165     ;***
                                    1- 2166     ;  pBlock Stats: dbName = C
                                    1- 2167     ;***
                                    1- 2168     ;has an exit
                                    1- 2169     ;1 compiler assigned register :
                                    1- 2170     ;   r0x1053
                                    1- 2171     ;; Starting pCode block
                                    1- 2172     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2174     _pwm1Init:
                                    1- 2175     ; 2 exit points
                                    1- 2176     	.line	507, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2177     	SFUNR	_T1CR1
                                    1- 2178     	BANKSEL	r0x1053
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2179     	MOVAR	r0x1053
     0003 0Frr                      1- 2180     	BTRSC	r0x1053,7
                                    1- 2181     	.line	508, "main.c"; 	return;
                                    1- 2182     	MGOTO	_00517_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2183     	.line	509, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2184     	CLRR	_TMRH
                                    1- 2185     	.line	510, "main.c"; 	TMR1 = 48;							//频率为110K
     0006 2130                      1- 2186     	MOVIA	0x30
     0007 00rr                      1- 2187     	SFUN	_TMR1
                                    1- 2188     	.line	513, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2189     	CLRA	
     0009 00rr                      1- 2190     	SFUN	_T1CR2
                                    1- 2191     	.line	514, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2192     	MOVIA	0x08
     000B 00rr                      1- 2193     	SFUN	_T1CR2
                                    1- 2194     	.line	515, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2195     	MOVIA	0x83
     000D 00rr                      1- 2196     	SFUN	_T1CR1
     000E                           1- 2197     _00517_DS_:
                                    1- 2198     	.line	516, "main.c"; 	}
                                    1- 2199     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2200     ; exit point of _pwm1Init
                                    1- 2202     ;***
                                    1- 2203     ;  pBlock Stats: dbName = C
                                    1- 2204     ;***
                                    1- 2205     ;has an exit
                                    1- 2206     ;functions called:
                                    1- 2207     ;   _pwmStop
                                    1- 2208     ;   _pwmStop
                                    1- 2209     ;; Starting pCode block
                                    1- 2210     .segment "code"; module=main, function=_powerOff
     0000                           1- 2212     _powerOff:
                                    1- 2213     ; 2 exit points
                                    1- 2214     	.line	500, "main.c"; 	workStep = 0;
                                    1- 2215     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2216     	CLRR	_workStep
                                    1- 2217     	.line	501, "main.c"; 	pwmStop();
                                    1- 2218     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2219     	.line	502, "main.c"; 	}
                                    1- 2220     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2221     ; exit point of _powerOff
                                    1- 2223     ;***
                                    1- 2224     ;  pBlock Stats: dbName = C
                                    1- 2225     ;***
                                    1- 2226     ;has an exit
                                    1- 2227     ;; Starting pCode block
                                    1- 2228     .segment "code"; module=main, function=_initSys
     0000                           1- 2230     _initSys:
                                    1- 2231     ; 2 exit points
                                    1- 2232     	.line	472, "main.c"; 	DISI();
     0000 0013                      1- 2233     	DISI
                                    1- 2234     	.line	473, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2235     	MOVIA	0x3e
     0002 000r                      1- 2236     	IOST	_IOSTA
                                    1- 2237     	.line	474, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2238     	CLRA	
     0004 000r                      1- 2239     	IOST	_IOSTB
                                    1- 2240     	.line	475, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2241     	CLRR	_PORTB
                                    1- 2242     	.line	476, "main.c"; 	PORTA = 0x00;
                                    1- 2243     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2244     	CLRR	_PORTA
                                    1- 2245     	.line	477, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2246     	MOVIA	0xff
     0009 000r                      1- 2247     	IOST	_APHCON
                                    1- 2248     	.line	478, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2249     	MOVAR	_BPHCON
                                    1- 2250     	.line	479, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2251     	MOVAR	_ABPLCON
                                    1- 2252     	.line	481, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2253     	MOVIA	0x01
     000D 00rr                      1- 2254     	MOVAR	_INTE
                                    1- 2255     	.line	483, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2256     	CLRA	
     000F 000r                      1- 2257     	IOST	_PCON1
                                    1- 2258     	.line	485, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2259     	MOVIA	0x37
     0011 00rr                      1- 2260     	MOVAR	_TMR0
                                    1- 2261     	.line	486, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2262     	MOVIA	0x01
     0013 0003                      1- 2263     	T0MD	
                                    1- 2264     	.line	488, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2265     	IOST	_PCON1
                                    1- 2266     	.line	491, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2267     	MOVIA	0x88
     0016 00rr                      1- 2268     	MOVAR	_PCON
                                    1- 2269     	.line	494, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2270     	MOVIA	0x01
     0018 000r                      1- 2271     	IOST	_PCON1
                                    1- 2272     	.line	495, "main.c"; 	ENI();
     0019 0004                      1- 2273     	ENI
                                    1- 2274     	.line	496, "main.c"; 	}
                                    1- 2275     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2276     ; exit point of _initSys
                                    1- 2278     ;***
                                    1- 2279     ;  pBlock Stats: dbName = C
                                    1- 2280     ;***
                                    1- 2281     ;has an exit
                                    1- 2282     ;functions called:
                                    1- 2283     ;   _keyRead
                                    1- 2284     ;   _setMaxDuty
                                    1- 2285     ;   _powerOff
                                    1- 2286     ;   _setMaxDuty
                                    1- 2287     ;   _keyRead
                                    1- 2288     ;   _setMaxDuty
                                    1- 2289     ;   _powerOff
                                    1- 2290     ;   _setMaxDuty
                                    1- 2291     ;1 compiler assigned register :
                                    1- 2292     ;   r0x1056
                                    1- 2293     ;; Starting pCode block
                                    1- 2294     .segment "code"; module=main, function=_keyCtr
                                    1- 2296     ;local variable name mapping:
     0000                           1- 2298     _keyCtr:
                                    1- 2299     ; 2 exit points
                                    1- 2300     	.line	403, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2301     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2302     	COMR	_PORTA,W
                                    1- 2303     	BANKSEL	r0x1056
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2304     	MOVAR	r0x1056
     0004 2120                      1- 2305     	MOVIA	0x20
     0005 10rr                      1- 2306     	ANDAR	r0x1056,F
     0006 01rr                      1- 2307     	MOVR	r0x1056,W
                                    1- 2308     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2309     	BANKSEL	r0x1056
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2310     	MOVAR	r0x1056
                                    1- 2311     	.line	404, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2312     	XORIA	0x01
     000B 0903                      1- 2313     	BTRSS	STATUS,2
                                    1- 2314     	MGOTO	_00500_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2315     	.line	407, "main.c"; 	ledLightTime = 0;
                                    1- 2316     	BANKSEL	_ledLightTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2317     	CLRR	_ledLightTime
                                    1- 2318     	.line	408, "main.c"; 	count5S = 0;
                                    1- 2319     	BANKSEL	_count5S
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2320     	CLRR	_count5S
     0011 02rr                      1- 2321     	CLRR	(_count5S + 1)
                                    1- 2322     	.line	409, "main.c"; 	if(workStep == 0)
                                    1- 2323     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2324     	MOVR	_workStep,W
     0014 0903                      1- 2325     	BTRSS	STATUS,2
                                    1- 2326     	MGOTO	_00471_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2327     	.line	411, "main.c"; 	if(showFlag)
                                    1- 2328     	BANKSEL	_Status
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 0Arr                      1- 2329     	BTRSS	_Status,4
                                    1- 2330     	MGOTO	_00468_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2331     	.line	413, "main.c"; 	ledLightTime = 0;
                                    1- 2332     	BANKSEL	_ledLightTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 2333     	CLRR	_ledLightTime
                                    1- 2334     	.line	414, "main.c"; 	showFlag = 0;
                                    1- 2335     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 1Err                      1- 2336     	BCR	_Status,4
                                    1- 2337     	MGOTO	_00469_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 2338     _00468_DS_:
                                    1- 2339     	.line	418, "main.c"; 	count1s = 0;
                                    1- 2340     	BANKSEL	_count1s
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 02rr                      1- 2341     	CLRR	_count1s
                                    1- 2342     	.line	419, "main.c"; 	ledLightTime = 3;
     0020 2103                      1- 2343     	MOVIA	0x03
                                    1- 2344     	BANKSEL	_ledLightTime
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2345     	MOVAR	_ledLightTime
                                    1- 2346     	.line	420, "main.c"; 	showFlag = 1;
                                    1- 2347     	BANKSEL	_Status
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 1Arr                      1- 2348     	BSR	_Status,4
     0025                           1- 2349     _00469_DS_:
                                    1- 2350     	.line	422, "main.c"; 	return;
                                    1- 2351     	MGOTO	_00502_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 2352     _00471_DS_:
                                    1- 2353     	.line	424, "main.c"; 	if(++workStep > 6)
                                    1- 2354     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1- 2355     	INCR	_workStep,F
                                    1- 2356     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2357     ;;unsigned compare: left >= lit (0x7=7), size=1
     0028 2107                      1- 2358     	MOVIA	0x07
     0029 04rr                      1- 2359     	SUBAR	_workStep,W
     002A 0803                      1- 2360     	BTRSS	STATUS,0
                                    1- 2361     	MGOTO	_00473_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2362     	.line	425, "main.c"; 	workStep = 1;
     002C 2101                      1- 2363     	MOVIA	0x01
     002D 00rr                      1- 2364     	MOVAR	_workStep
     002E                           1- 2365     _00473_DS_:
                                    1- 2366     	.line	426, "main.c"; 	if(workStep == 1)
                                    1- 2367     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2368     	MOVR	_workStep,W
     0030 2401                      1- 2369     	XORIA	0x01
     0031 0903                      1- 2370     	BTRSS	STATUS,2
                                    1- 2371     	MGOTO	_00489_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2372     	.line	427, "main.c"; 	maxDuty = 40;
     0033 2128                      1- 2373     	MOVIA	0x28
                                    1- 2374     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2375     	MOVAR	_maxDuty
                                    1- 2376     	MGOTO	_00490_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 2377     _00489_DS_:
                                    1- 2378     	.line	428, "main.c"; 	else if(workStep == 2)
                                    1- 2379     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 2380     	MOVR	_workStep,W
     0039 2402                      1- 2381     	XORIA	0x02
     003A 0903                      1- 2382     	BTRSS	STATUS,2
                                    1- 2383     	MGOTO	_00486_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2384     	.line	429, "main.c"; 	maxDuty = 42;
     003C 212A                      1- 2385     	MOVIA	0x2a
                                    1- 2386     	BANKSEL	_maxDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 2387     	MOVAR	_maxDuty
                                    1- 2388     	MGOTO	_00490_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 2389     _00486_DS_:
                                    1- 2390     	.line	430, "main.c"; 	else if(workStep == 3)
                                    1- 2391     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 2392     	MOVR	_workStep,W
     0042 2403                      1- 2393     	XORIA	0x03
     0043 0903                      1- 2394     	BTRSS	STATUS,2
                                    1- 2395     	MGOTO	_00483_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2396     	.line	431, "main.c"; 	maxDuty = 44;
     0045 212C                      1- 2397     	MOVIA	0x2c
                                    1- 2398     	BANKSEL	_maxDuty
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 2399     	MOVAR	_maxDuty
                                    1- 2400     	MGOTO	_00490_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 2401     _00483_DS_:
                                    1- 2402     	.line	432, "main.c"; 	else if(workStep == 4)
                                    1- 2403     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 2404     	MOVR	_workStep,W
     004B 2404                      1- 2405     	XORIA	0x04
     004C 0903                      1- 2406     	BTRSS	STATUS,2
                                    1- 2407     	MGOTO	_00480_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2408     	.line	433, "main.c"; 	maxDuty = 46;
     004E 212E                      1- 2409     	MOVIA	0x2e
                                    1- 2410     	BANKSEL	_maxDuty
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 2411     	MOVAR	_maxDuty
                                    1- 2412     	MGOTO	_00490_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 2413     _00480_DS_:
                                    1- 2414     	.line	434, "main.c"; 	else if(workStep == 5)
                                    1- 2415     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2416     	MOVR	_workStep,W
     0054 2405                      1- 2417     	XORIA	0x05
     0055 0903                      1- 2418     	BTRSS	STATUS,2
                                    1- 2419     	MGOTO	_00477_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2420     	.line	435, "main.c"; 	maxDuty = 48;
     0057 2130                      1- 2421     	MOVIA	0x30
                                    1- 2422     	BANKSEL	_maxDuty
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 2423     	MOVAR	_maxDuty
                                    1- 2424     	MGOTO	_00490_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 2425     _00477_DS_:
                                    1- 2426     	.line	436, "main.c"; 	else if(workStep == 6)
                                    1- 2427     	BANKSEL	_workStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 2428     	MOVR	_workStep,W
     005D 2406                      1- 2429     	XORIA	0x06
     005E 0903                      1- 2430     	BTRSS	STATUS,2
                                    1- 2431     	MGOTO	_00490_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2432     	.line	437, "main.c"; 	maxDuty = 50;
     0060 2132                      1- 2433     	MOVIA	0x32
                                    1- 2434     	BANKSEL	_maxDuty
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 2435     	MOVAR	_maxDuty
     0063                           1- 2436     _00490_DS_:
                                    1- 2437     	.line	438, "main.c"; 	setMaxDuty();
                                    1- 2438     	MCALL	_setMaxDuty
     0063 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2439     	MGOTO	_00502_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
     0065                           1- 2440     _00500_DS_:
                                    1- 2441     	.line	440, "main.c"; 	else if(kclick == 2)
                                    1- 2442     	BANKSEL	r0x1056
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 2443     	MOVR	r0x1056,W
     0067 2402                      1- 2444     	XORIA	0x02
     0068 0903                      1- 2445     	BTRSS	STATUS,2
                                    1- 2446     	MGOTO	_00502_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2447     	.line	442, "main.c"; 	if(workStep > 0)
                                    1- 2448     	BANKSEL	_workStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 2449     	MOVR	_workStep,W
     006C 0D03                      1- 2450     	BTRSC	STATUS,2
                                    1- 2451     	MGOTO	_00495_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2452     	.line	444, "main.c"; 	workStep = 0;
     006E 02rr                      1- 2453     	CLRR	_workStep
                                    1- 2454     	.line	445, "main.c"; 	powerOff();
                                    1- 2455     	MCALL	_powerOff
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2456     	.line	446, "main.c"; 	showFlag = 0;
                                    1- 2457     	BANKSEL	_Status
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 1Err                      1- 2458     	BCR	_Status,4
                                    1- 2459     	MGOTO	_00502_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
     0073                           1- 2460     _00495_DS_:
                                    1- 2461     	.line	450, "main.c"; 	if(batValue == 0 || preBatValue == 0)
                                    1- 2462     	BANKSEL	_batValue
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 2463     	MOVR	_batValue,W
     0075 0D03                      1- 2464     	BTRSC	STATUS,2
                                    1- 2465     	MGOTO	_00491_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2466     	BANKSEL	_preBatValue
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 2467     	MOVR	_preBatValue,W
     0079 0903                      1- 2468     	BTRSS	STATUS,2
                                    1- 2469     	MGOTO	_00492_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1- 2470     _00491_DS_:
                                    1- 2471     	.line	452, "main.c"; 	ledLightTime = 3;
     007B 2103                      1- 2472     	MOVIA	0x03
                                    1- 2473     	BANKSEL	_ledLightTime
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2474     	MOVAR	_ledLightTime
                                    1- 2475     	.line	453, "main.c"; 	preBatValue = 0;
                                    1- 2476     	BANKSEL	_preBatValue
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 02rr                      1- 2477     	CLRR	_preBatValue
                                    1- 2478     	.line	454, "main.c"; 	showFlag = 1;
                                    1- 2479     	BANKSEL	_Status
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 1Arr                      1- 2480     	BSR	_Status,4
                                    1- 2481     	.line	455, "main.c"; 	return;
                                    1- 2482     	MGOTO	_00502_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083                           1- 2483     _00492_DS_:
                                    1- 2484     	.line	457, "main.c"; 	workStep = 1;
     0083 2101                      1- 2485     	MOVIA	0x01
                                    1- 2486     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 00rr                      1- 2487     	MOVAR	_workStep
                                    1- 2488     	.line	458, "main.c"; 	PWM2DUTY = 60;
     0086 213C                      1- 2489     	MOVIA	0x3c
     0087 00rr                      1- 2490     	SFUN	_PWM2DUTY
                                    1- 2491     	.line	459, "main.c"; 	currentDuty = 60;
                                    1- 2492     	BANKSEL	_currentDuty
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 2493     	MOVAR	_currentDuty
                                    1- 2494     	.line	460, "main.c"; 	maxDuty = 40;
     008A 2128                      1- 2495     	MOVIA	0x28
                                    1- 2496     	BANKSEL	_maxDuty
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 2497     	MOVAR	_maxDuty
                                    1- 2498     	.line	461, "main.c"; 	setMaxDuty();
                                    1- 2499     	MCALL	_setMaxDuty
     008D 2rrr                      3-   66 m1      LCALL rom_address
     008E                           1- 2500     _00502_DS_:
                                    1- 2501     	.line	465, "main.c"; 	}
                                    1- 2502     	RETURN	
     008E 0010                      3-   40 m1      ret
                                    1- 2503     ; exit point of _keyCtr
                                    1- 2505     ;***
                                    1- 2506     ;  pBlock Stats: dbName = C
                                    1- 2507     ;***
                                    1- 2508     ;has an exit
                                    1- 2509     ;functions called:
                                    1- 2510     ;   __divuchar
                                    1- 2511     ;   _pwmInit
                                    1- 2512     ;   __divuchar
                                    1- 2513     ;   _pwmInit
                                    1- 2514     ;3 compiler assigned registers:
                                    1- 2515     ;   r0x1054
                                    1- 2516     ;   STK00
                                    1- 2517     ;   r0x1055
                                    1- 2518     ;; Starting pCode block
                                    1- 2519     .segment "code"; module=main, function=_setMaxDuty
     0000                           1- 2521     _setMaxDuty:
                                    1- 2522     ; 2 exit points
                                    1- 2523     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2524     	.line	394, "main.c"; 	if(batValue < 50)
     0000 2132                      1- 2525     	MOVIA	0x32
                                    1- 2526     	BANKSEL	_batValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2527     	SUBAR	_batValue,W
     0003 0C03                      1- 2528     	BTRSC	STATUS,0
                                    1- 2529     	MGOTO	_00462_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2530     	.line	395, "main.c"; 	maxDuty = maxDuty + 10 - (batValue/10);
     0005 210A                      1- 2531     	MOVIA	0x0a
                                    1- 2532     	BANKSEL	_maxDuty
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 03rr                      1- 2533     	ADDAR	_maxDuty,W
                                    1- 2534     	BANKSEL	r0x1054
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2535     	MOVAR	r0x1054
     000A 210A                      1- 2536     	MOVIA	0x0a
     000B 00rr                      1- 2537     	MOVAR	STK00
                                    1- 2538     	BANKSEL	_batValue
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2539     	MOVR	_batValue,W
                                    1- 2540     	MCALL	__divuchar
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2541     ;;1	MOVAR	r0x1055
                                    1- 2542     	BANKSEL	r0x1054
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 2543     	SUBAR	r0x1054,W
                                    1- 2544     	BANKSEL	_maxDuty
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2545     	MOVAR	_maxDuty
     0013                           1- 2546     _00462_DS_:
                                    1- 2547     	.line	396, "main.c"; 	tempDuty = maxDuty;
                                    1- 2548     	BANKSEL	_maxDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2549     	MOVR	_maxDuty,W
                                    1- 2550     	BANKSEL	_tempDuty
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 2551     	MOVAR	_tempDuty
                                    1- 2552     	.line	397, "main.c"; 	pwmInit();
                                    1- 2553     	MCALL	_pwmInit
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2554     	.line	398, "main.c"; 	}
                                    1- 2555     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1- 2556     ; exit point of _setMaxDuty
                                    1- 2558     ;***
                                    1- 2559     ;  pBlock Stats: dbName = C
                                    1- 2560     ;***
                                    1- 2561     ;has an exit
                                    1- 2562     ;functions called:
                                    1- 2563     ;   _setInput
                                    1- 2564     ;   _showKeyLed
                                    1- 2565     ;   __gptrget1
                                    1- 2566     ;   _showNubShiwei
                                    1- 2567     ;   __gptrget1
                                    1- 2568     ;   _showNubGewei
                                    1- 2569     ;   _setInput
                                    1- 2570     ;   _showKeyLed
                                    1- 2571     ;   __gptrget1
                                    1- 2572     ;   _showNubShiwei
                                    1- 2573     ;   __gptrget1
                                    1- 2574     ;   _showNubGewei
                                    1- 2575     ;5 compiler assigned registers:
                                    1- 2576     ;   r0x1057
                                    1- 2577     ;   r0x1058
                                    1- 2578     ;   STK01
                                    1- 2579     ;   STK00
                                    1- 2580     ;   r0x1059
                                    1- 2581     ;; Starting pCode block
                                    1- 2582     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2584     _refreshNub:
                                    1- 2585     ; 2 exit points
                                    1- 2586     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2587     	.line	350, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2588     	MOVIA	0x03
                                    1- 2589     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2590     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2591     	BTRSS	STATUS,2
                                    1- 2592     	MGOTO	_00456_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2593     	MOVIA	0x84
     0006 04rr                      1- 2594     	SUBAR	_count900s,W
     0007                           1- 2595     _00456_DS_:
     0007 0803                      1- 2596     	BTRSS	STATUS,0
                                    1- 2597     	MGOTO	_00434_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2598     	.line	352, "main.c"; 	setInput();
                                    1- 2599     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2600     	.line	353, "main.c"; 	return;
                                    1- 2601     	MGOTO	_00442_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2602     _00434_DS_:
                                    1- 2603     	.line	373, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2604     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2605     	MOVR	_shiweiNum,W
                                    1- 2606     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2607     	MOVAR	_tempshiweiNum
                                    1- 2608     	.line	374, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2609     	BANKSEL	_geweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2610     	MOVR	_geweiNum,W
                                    1- 2611     	BANKSEL	_tempgeweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2612     	MOVAR	_tempgeweiNum
                                    1- 2613     	.line	375, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2614     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2615     	MOVR	_workStep,W
     0015 0903                      1- 2616     	BTRSS	STATUS,2
                                    1- 2617     	MGOTO	_00435_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2618     	BANKSEL	_ledLightTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2619     	MOVR	_ledLightTime,W
     0019 0903                      1- 2620     	BTRSS	STATUS,2
     001A                           1- 2621     _00435_DS_:
                                    1- 2622     	.line	377, "main.c"; 	showKeyLed();
                                    1- 2623     	MCALL	_showKeyLed
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2624     	.line	380, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2625     	BANKSEL	_ledDeadTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2626     	MOVR	_ledDeadTime,W
     001D 0D03                      1- 2627     	BTRSC	STATUS,2
                                    1- 2628     	MGOTO	_00439_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2629     	.line	382, "main.c"; 	tempshiweiNum = 11;
     001F 210B                      1- 2630     	MOVIA	0x0b
                                    1- 2631     	BANKSEL	_tempshiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2632     	MOVAR	_tempshiweiNum
                                    1- 2633     	.line	383, "main.c"; 	tempgeweiNum = 12;
     0022 210C                      1- 2634     	MOVIA	0x0c
                                    1- 2635     	BANKSEL	_tempgeweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2636     	MOVAR	_tempgeweiNum
     0025                           1- 2637     _00439_DS_:
                                    1- 2638     	.line	386, "main.c"; 	if(firstShowCount > 0)
                                    1- 2639     	BANKSEL	_firstShowCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2640     	MOVR	_firstShowCount,W
     0027 0D03                      1- 2641     	BTRSC	STATUS,2
                                    1- 2642     	MGOTO	_00441_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2643     	.line	387, "main.c"; 	tempshiweiNum = tempgeweiNum = 8;
     0029 2108                      1- 2644     	MOVIA	0x08
                                    1- 2645     	BANKSEL	_tempgeweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2646     	MOVAR	_tempgeweiNum
                                    1- 2647     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2648     	MOVAR	_tempshiweiNum
     002E                           1- 2649     _00441_DS_:
                                    1- 2650     	.line	388, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2651     	BANKSEL	_tempshiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2652     	MOVR	_tempshiweiNum,W
     0030 25rr                      1- 2653     	ADDIA	(_numArray + 0)
                                    1- 2654     	BANKSEL	r0x1057
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2655     	MOVAR	r0x1057
     0033 21rr                      1- 2656     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0034 0C03                      1- 2657     	BTRSC	STATUS,0
     0035 2501                      1- 2658     	ADDIA	0x01
                                    1- 2659     	BANKSEL	r0x1058
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2660     	MOVAR	r0x1058
                                    1- 2661     	BANKSEL	r0x1057
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2662     	MOVR	r0x1057,W
     003A 00rr                      1- 2663     	MOVAR	STK01
                                    1- 2664     	BANKSEL	r0x1058
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2665     	MOVR	r0x1058,W
     003D 00rr                      1- 2666     	MOVAR	STK00
     003E 2100                      1- 2667     	MOVIA	0x00
                                    1- 2668     	MCALL	__gptrget1
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2669     ;;100	MOVAR	r0x1059
                                    1- 2670     	MCALL	_showNubShiwei
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2671     	.line	389, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2672     	BANKSEL	_tempgeweiNum
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2673     	MOVR	_tempgeweiNum,W
     0043 25rr                      1- 2674     	ADDIA	(_numArray + 0)
                                    1- 2675     	BANKSEL	r0x1057
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2676     	MOVAR	r0x1057
     0046 21rr                      1- 2677     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0047 0C03                      1- 2678     	BTRSC	STATUS,0
     0048 2501                      1- 2679     	ADDIA	0x01
                                    1- 2680     	BANKSEL	r0x1058
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2681     	MOVAR	r0x1058
                                    1- 2682     	BANKSEL	r0x1057
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 2683     	MOVR	r0x1057,W
     004D 00rr                      1- 2684     	MOVAR	STK01
                                    1- 2685     	BANKSEL	r0x1058
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2686     	MOVR	r0x1058,W
     0050 00rr                      1- 2687     	MOVAR	STK00
     0051 2100                      1- 2688     	MOVIA	0x00
                                    1- 2689     	MCALL	__gptrget1
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2690     ;;99	MOVAR	r0x1059
                                    1- 2691     	MCALL	_showNubGewei
     0053 2rrr                      3-   66 m1      LCALL rom_address
     0054                           1- 2692     _00442_DS_:
                                    1- 2693     	.line	390, "main.c"; 	}
                                    1- 2694     	RETURN	
     0054 0010                      3-   40 m1      ret
                                    1- 2695     ; exit point of _refreshNub
                                    1- 2697     ;***
                                    1- 2698     ;  pBlock Stats: dbName = C
                                    1- 2699     ;***
                                    1- 2700     ;has an exit
                                    1- 2701     ;functions called:
                                    1- 2702     ;   __divuchar
                                    1- 2703     ;   __moduchar
                                    1- 2704     ;   _pwmStop
                                    1- 2705     ;   _pwm1Stop
                                    1- 2706     ;   _pwm1Init
                                    1- 2707     ;   _pwm1Stop
                                    1- 2708     ;   __divuchar
                                    1- 2709     ;   __moduchar
                                    1- 2710     ;   _pwmStop
                                    1- 2711     ;   _pwm1Stop
                                    1- 2712     ;   _pwm1Init
                                    1- 2713     ;   _pwm1Stop
                                    1- 2714     ;6 compiler assigned registers:
                                    1- 2715     ;   STK00
                                    1- 2716     ;   r0x105A
                                    1- 2717     ;   r0x105B
                                    1- 2718     ;   r0x105C
                                    1- 2719     ;   r0x105D
                                    1- 2720     ;   r0x105E
                                    1- 2721     ;; Starting pCode block
                                    1- 2722     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2724     _chrgCtr:
                                    1- 2725     ; 2 exit points
                                    1- 2726     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2727     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2728     	.line	248, "main.c"; 	if(preBatValue > 99)
     0000 2164                      1- 2729     	MOVIA	0x64
                                    1- 2730     	BANKSEL	_preBatValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2731     	SUBAR	_preBatValue,W
     0003 0803                      1- 2732     	BTRSS	STATUS,0
                                    1- 2733     	MGOTO	_00313_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2734     	.line	250, "main.c"; 	shiweiNum = geweiNum = 9;
     0005 2109                      1- 2735     	MOVIA	0x09
                                    1- 2736     	BANKSEL	_geweiNum
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2737     	MOVAR	_geweiNum
                                    1- 2738     	BANKSEL	_shiweiNum
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2739     	MOVAR	_shiweiNum
                                    1- 2740     	MGOTO	_00314_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2741     _00313_DS_:
                                    1- 2742     	.line	254, "main.c"; 	shiweiNum = preBatValue/10;
     000B 210A                      1- 2743     	MOVIA	0x0a
     000C 00rr                      1- 2744     	MOVAR	STK00
                                    1- 2745     	BANKSEL	_preBatValue
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2746     	MOVR	_preBatValue,W
                                    1- 2747     	MCALL	__divuchar
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2748     	BANKSEL	_shiweiNum
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2749     	MOVAR	_shiweiNum
                                    1- 2750     	.line	255, "main.c"; 	geweiNum = preBatValue%10;
     0012 210A                      1- 2751     	MOVIA	0x0a
     0013 00rr                      1- 2752     	MOVAR	STK00
                                    1- 2753     	BANKSEL	_preBatValue
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2754     	MOVR	_preBatValue,W
                                    1- 2755     	MCALL	__moduchar
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2756     	BANKSEL	_geweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2757     	MOVAR	_geweiNum
     0019                           1- 2758     _00314_DS_:
                                    1- 2759     	.line	257, "main.c"; 	if(workStep > 0)
                                    1- 2760     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2761     	MOVR	_workStep,W
     001B 0D03                      1- 2762     	BTRSC	STATUS,2
                                    1- 2763     	MGOTO	_00316_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2764     	.line	259, "main.c"; 	showFlag = 1;
                                    1- 2765     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2766     	BSR	_Status,4
                                    1- 2767     	.line	260, "main.c"; 	shiweiNum = 0;
                                    1- 2768     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 2769     	CLRR	_shiweiNum
                                    1- 2770     	.line	261, "main.c"; 	geweiNum = workStep;
                                    1- 2771     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2772     	MOVR	_workStep,W
                                    1- 2773     	BANKSEL	_geweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2774     	MOVAR	_geweiNum
     0025                           1- 2775     _00316_DS_:
                                    1- 2776     	.line	263, "main.c"; 	if(0x08 & PORTA)
                                    1- 2777     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 09rr                      1- 2778     	BTRSS	_PORTA,3
                                    1- 2779     	MGOTO	_00351_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2780     	.line	266, "main.c"; 	chrgFlag = 1;
                                    1- 2781     	BANKSEL	_Status
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 19rr                      1- 2782     	BSR	_Status,3
                                    1- 2783     	.line	267, "main.c"; 	showFlag = 1;
     002A 1Arr                      1- 2784     	BSR	_Status,4
                                    1- 2785     	.line	268, "main.c"; 	workStep = 0;
                                    1- 2786     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1- 2787     	CLRR	_workStep
                                    1- 2788     	.line	269, "main.c"; 	ledLightTime = 0;
                                    1- 2789     	BANKSEL	_ledLightTime
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1- 2790     	CLRR	_ledLightTime
                                    1- 2791     	.line	270, "main.c"; 	pwmStop();
                                    1- 2792     	MCALL	_pwmStop
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2793     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 2794     	.line	271, "main.c"; 	if(preBatValue < 99 && batValue >= preBatValue && count5s == 1)
     0030 2163                      1- 2795     	MOVIA	0x63
                                    1- 2796     	BANKSEL	_preBatValue
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 04rr                      1- 2797     	SUBAR	_preBatValue,W
     0033 0C03                      1- 2798     	BTRSC	STATUS,0
                                    1- 2799     	MGOTO	_00007_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 01rr                      1- 2800     	MOVR	_preBatValue,W
                                    1- 2801     	BANKSEL	_batValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 04rr                      1- 2802     	SUBAR	_batValue,W
     0038 0803                      1- 2803     	BTRSS	STATUS,0
                                    1- 2804     	MGOTO	_00007_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2805     	BANKSEL	_count5s
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2806     	MOVR	_count5s,W
     003C 2401                      1- 2807     	XORIA	0x01
     003D 0903                      1- 2808     	BTRSS	STATUS,2
                                    1- 2809     	MGOTO	_00007_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 01rr                      1- 2810     	MOVR	(_count5s + 1),W
     0040 2400                      1- 2811     	XORIA	0x00
     0041 0903                      1- 2812     	BTRSS	STATUS,2
                                    1- 2813     	MGOTO	_00007_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2814     	.line	273, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2815     	BANKSEL	_preBatValue
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 2816     	INCR	_preBatValue,F
     0045                           1- 2817     _00007_DS_:
                                    1- 2818     	.line	275, "main.c"; 	if(batValue >= 99 || chrgFullFlag)
     0045 2163                      1- 2819     	MOVIA	0x63
                                    1- 2820     	BANKSEL	_batValue
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2821     	SUBAR	_batValue,W
     0048 0C03                      1- 2822     	BTRSC	STATUS,0
                                    1- 2823     	MGOTO	_00340_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2824     	BANKSEL	_chrgFullFlag
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 2825     	MOVR	_chrgFullFlag,W
     004C 0D03                      1- 2826     	BTRSC	STATUS,2
                                    1- 2827     	MGOTO	_00341_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2828     _00340_DS_:
                                    1- 2829     	.line	279, "main.c"; 	if(shiweiNum == 9 &&  geweiNum == 9 && batValue >= 101 && ++countFull > 2000)
                                    1- 2830     	BANKSEL	_shiweiNum
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2831     	MOVR	_shiweiNum,W
     0050 2409                      1- 2832     	XORIA	0x09
     0051 0903                      1- 2833     	BTRSS	STATUS,2
                                    1- 2834     	MGOTO	_00353_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2835     	BANKSEL	_geweiNum
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 01rr                      1- 2836     	MOVR	_geweiNum,W
     0055 2409                      1- 2837     	XORIA	0x09
     0056 0903                      1- 2838     	BTRSS	STATUS,2
                                    1- 2839     	MGOTO	_00353_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2840     ;;unsigned compare: left < lit (0x65=101), size=1
     0058 2165                      1- 2841     	MOVIA	0x65
                                    1- 2842     	BANKSEL	_batValue
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 04rr                      1- 2843     	SUBAR	_batValue,W
     005B 0803                      1- 2844     	BTRSS	STATUS,0
                                    1- 2845     	MGOTO	_00353_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2846     	BANKSEL	_countFull
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 05rr                      1- 2847     	INCR	_countFull,F
     005F 0D03                      1- 2848     	BTRSC	STATUS,2
     0060 05rr                      1- 2849     	INCR	(_countFull + 1),F
                                    1- 2850     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2851     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0061 2107                      1- 2852     	MOVIA	0x07
     0062 04rr                      1- 2853     	SUBAR	(_countFull + 1),W
     0063 0903                      1- 2854     	BTRSS	STATUS,2
                                    1- 2855     	MGOTO	_00420_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
     0065 21D1                      1- 2856     	MOVIA	0xd1
     0066 04rr                      1- 2857     	SUBAR	_countFull,W
     0067                           1- 2858     _00420_DS_:
     0067 0803                      1- 2859     	BTRSS	STATUS,0
                                    1- 2860     	MGOTO	_00353_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2861     	.line	281, "main.c"; 	pwm1Stop();
                                    1- 2862     	MCALL	_pwm1Stop
     0069 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2863     	.line	282, "main.c"; 	chrgFullFlag = 1;
     006A 2101                      1- 2864     	MOVIA	0x01
                                    1- 2865     	BANKSEL	_chrgFullFlag
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 2866     	MOVAR	_chrgFullFlag
                                    1- 2867     	.line	284, "main.c"; 	PORTB &= 0xF7;
     006D 1Drr                      1- 2868     	BCR	_PORTB,3
                                    1- 2869     	.line	285, "main.c"; 	IOSTB |= 0X08;
     006E 001r                      1- 2870     	IOSTR	_IOSTB
                                    1- 2871     	BANKSEL	r0x105A
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 2872     	MOVAR	r0x105A
     0071 19rr                      1- 2873     	BSR	r0x105A,3
     0072 01rr                      1- 2874     	MOVR	r0x105A,W
     0073 000r                      1- 2875     	IOST	_IOSTB
                                    1- 2876     	MGOTO	_00353_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 2877     _00341_DS_:
                                    1- 2878     	.line	291, "main.c"; 	countFull = 0;
                                    1- 2879     	BANKSEL	_countFull
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 02rr                      1- 2880     	CLRR	_countFull
     0077 02rr                      1- 2881     	CLRR	(_countFull + 1)
                                    1- 2882     	.line	292, "main.c"; 	IOSTB &= 0xF7;
     0078 001r                      1- 2883     	IOSTR	_IOSTB
                                    1- 2884     	BANKSEL	r0x105A
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 2885     	MOVAR	r0x105A
     007B 1Drr                      1- 2886     	BCR	r0x105A,3
     007C 01rr                      1- 2887     	MOVR	r0x105A,W
     007D 000r                      1- 2888     	IOST	_IOSTB
                                    1- 2889     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2890     ;;unsigned compare: left >= lit (0x1D=29), size=1
                                    1- 2891     	.line	294, "main.c"; 	if(chrgduty > 28)
     007E 211D                      1- 2892     	MOVIA	0x1d
                                    1- 2893     	BANKSEL	_chrgduty
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 2894     	SUBAR	_chrgduty,W
     0081 0803                      1- 2895     	BTRSS	STATUS,0
                                    1- 2896     	MGOTO	_00327_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2897     	.line	295, "main.c"; 	chrgduty = 28;
     0083 211C                      1- 2898     	MOVIA	0x1c
     0084 00rr                      1- 2899     	MOVAR	_chrgduty
     0085                           1- 2900     _00327_DS_:
                                    1- 2901     	.line	296, "main.c"; 	PWM1DUTY = chrgduty;
                                    1- 2902     	BANKSEL	_chrgduty
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 01rr                      1- 2903     	MOVR	_chrgduty,W
     0087 00rr                      1- 2904     	SFUN	_PWM1DUTY
                                    1- 2905     	.line	298, "main.c"; 	pwm1Init();
                                    1- 2906     	MCALL	_pwm1Init
     0088 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2907     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2908     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2909     	.line	299, "main.c"; 	if(count200ms > 5)
     0089 2106                      1- 2910     	MOVIA	0x06
                                    1- 2911     	BANKSEL	_count200ms
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 2912     	SUBAR	_count200ms,W
     008C 0803                      1- 2913     	BTRSS	STATUS,0
                                    1- 2914     	MGOTO	_00353_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2915     	.line	301, "main.c"; 	if(++count50ms > 5)
                                    1- 2916     	BANKSEL	_count50ms
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 05rr                      1- 2917     	INCR	_count50ms,F
                                    1- 2918     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2919     ;;unsigned compare: left >= lit (0x6=6), size=1
     0090 2106                      1- 2920     	MOVIA	0x06
     0091 04rr                      1- 2921     	SUBAR	_count50ms,W
     0092 0803                      1- 2922     	BTRSS	STATUS,0
                                    1- 2923     	MGOTO	_00353_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2924     	.line	303, "main.c"; 	count50ms = 0;
     0094 02rr                      1- 2925     	CLRR	_count50ms
                                    1- 2926     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2927     ;;unsigned compare: left >= lit (0xD=13), size=2
                                    1- 2928     	.line	304, "main.c"; 	if(R_AIN4_DATA > 12)
     0095 2100                      1- 2929     	MOVIA	0x00
                                    1- 2930     	BANKSEL	_R_AIN4_DATA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 04rr                      1- 2931     	SUBAR	(_R_AIN4_DATA + 1),W
     0098 0903                      1- 2932     	BTRSS	STATUS,2
                                    1- 2933     	MGOTO	_00424_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A 210D                      1- 2934     	MOVIA	0x0d
     009B 04rr                      1- 2935     	SUBAR	_R_AIN4_DATA,W
     009C                           1- 2936     _00424_DS_:
     009C 0803                      1- 2937     	BTRSS	STATUS,0
                                    1- 2938     	MGOTO	_00331_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2939     	.line	306, "main.c"; 	maxduty = maxduty - 1;
                                    1- 2940     	BANKSEL	_maxduty
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 06rr                      1- 2941     	DECR	_maxduty,F
                                    1- 2942     	MGOTO	_00332_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2943     ;;unsigned compare: left < lit (0xB=11), size=2
     00A1                           1- 2944     _00331_DS_:
                                    1- 2945     	.line	308, "main.c"; 	else if(R_AIN4_DATA < 11)
     00A1 2100                      1- 2946     	MOVIA	0x00
                                    1- 2947     	BANKSEL	_R_AIN4_DATA
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 04rr                      1- 2948     	SUBAR	(_R_AIN4_DATA + 1),W
     00A4 0903                      1- 2949     	BTRSS	STATUS,2
                                    1- 2950     	MGOTO	_00425_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
     00A6 210B                      1- 2951     	MOVIA	0x0b
     00A7 04rr                      1- 2952     	SUBAR	_R_AIN4_DATA,W
     00A8                           1- 2953     _00425_DS_:
     00A8 0C03                      1- 2954     	BTRSC	STATUS,0
                                    1- 2955     	MGOTO	_00332_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2956     	.line	310, "main.c"; 	maxduty = maxduty + 1;
                                    1- 2957     	BANKSEL	_maxduty
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 05rr                      1- 2958     	INCR	_maxduty,F
     00AC                           1- 2959     _00332_DS_:
                                    1- 2960     	.line	312, "main.c"; 	if(chrgduty < maxduty)
                                    1- 2961     	BANKSEL	_maxduty
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 2962     	MOVR	_maxduty,W
                                    1- 2963     	BANKSEL	_chrgduty
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 04rr                      1- 2964     	SUBAR	_chrgduty,W
     00B0 0C03                      1- 2965     	BTRSC	STATUS,0
                                    1- 2966     	MGOTO	_00334_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2967     	.line	313, "main.c"; 	chrgduty++;
     00B2 05rr                      1- 2968     	INCR	_chrgduty,F
                                    1- 2969     	MGOTO	_00353_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 2970     _00334_DS_:
                                    1- 2971     	.line	315, "main.c"; 	chrgduty = maxduty;
                                    1- 2972     	BANKSEL	_maxduty
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 2973     	MOVR	_maxduty,W
                                    1- 2974     	BANKSEL	_chrgduty
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 2975     	MOVAR	_chrgduty
                                    1- 2976     	MGOTO	_00353_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
     00B9                           1- 2977     _00351_DS_:
                                    1- 2978     	.line	322, "main.c"; 	chrgFullFlag = 0;
                                    1- 2979     	BANKSEL	_chrgFullFlag
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 02rr                      1- 2980     	CLRR	_chrgFullFlag
                                    1- 2981     	.line	323, "main.c"; 	countFull = 0;
                                    1- 2982     	BANKSEL	_countFull
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 02rr                      1- 2983     	CLRR	_countFull
     00BD 02rr                      1- 2984     	CLRR	(_countFull + 1)
                                    1- 2985     	.line	324, "main.c"; 	pwm1Stop();
                                    1- 2986     	MCALL	_pwm1Stop
     00BE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2987     	.line	325, "main.c"; 	chrgFlag = 0;
                                    1- 2988     	BANKSEL	_Status
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 1Drr                      1- 2989     	BCR	_Status,3
                                    1- 2990     	.line	328, "main.c"; 	if(workStep == 0 && (preBatValue > batValue + 1))
                                    1- 2991     	BANKSEL	_workStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 2992     	MOVR	_workStep,W
     00C3 0903                      1- 2993     	BTRSS	STATUS,2
                                    1- 2994     	MGOTO	_00347_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2995     	BANKSEL	_batValue
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 2996     	MOVR	_batValue,W
                                    1- 2997     	BANKSEL	r0x105A
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 2998     	MOVAR	r0x105A
                                    1- 2999     	BANKSEL	r0x105B
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 02rr                      1- 3000     	CLRR	r0x105B
                                    1- 3001     	BANKSEL	r0x105A
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 05rr                      1- 3002     	INCR	r0x105A,F
     00CD 0903                      1- 3003     	BTRSS	STATUS,2
                                    1- 3004     	MGOTO	_00008_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3005     	BANKSEL	r0x105B
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 05rr                      1- 3006     	INCR	r0x105B,F
     00D1                           1- 3007     _00008_DS_:
                                    1- 3008     	BANKSEL	_preBatValue
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 3009     	MOVR	_preBatValue,W
                                    1- 3010     	BANKSEL	r0x105C
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 3011     	MOVAR	r0x105C
                                    1- 3012     ;;1	CLRR	r0x105D
                                    1- 3013     	BANKSEL	r0x105B
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 3014     	MOVR	r0x105B,W
     00D7 2580                      1- 3015     	ADDIA	0x80
                                    1- 3016     	BANKSEL	r0x105E
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 00rr                      1- 3017     	MOVAR	r0x105E
     00DA 2100                      1- 3018     	MOVIA	0x00
     00DB 2580                      1- 3019     	ADDIA	0x80
     00DC 04rr                      1- 3020     	SUBAR	r0x105E,W
     00DD 0903                      1- 3021     	BTRSS	STATUS,2
                                    1- 3022     	MGOTO	_00427_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3023     	BANKSEL	r0x105C
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 3024     	MOVR	r0x105C,W
                                    1- 3025     	BANKSEL	r0x105A
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 04rr                      1- 3026     	SUBAR	r0x105A,W
     00E3                           1- 3027     _00427_DS_:
     00E3 0C03                      1- 3028     	BTRSC	STATUS,0
                                    1- 3029     	MGOTO	_00347_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3030     	.line	330, "main.c"; 	if(++batCount > 30)
                                    1- 3031     	BANKSEL	_batCount
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 05rr                      1- 3032     	INCR	_batCount,F
     00E7 0D03                      1- 3033     	BTRSC	STATUS,2
     00E8 05rr                      1- 3034     	INCR	(_batCount + 1),F
                                    1- 3035     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3036     ;;unsigned compare: left >= lit (0x1F=31), size=2
     00E9 2100                      1- 3037     	MOVIA	0x00
     00EA 04rr                      1- 3038     	SUBAR	(_batCount + 1),W
     00EB 0903                      1- 3039     	BTRSS	STATUS,2
                                    1- 3040     	MGOTO	_00428_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
     00ED 211F                      1- 3041     	MOVIA	0x1f
     00EE 04rr                      1- 3042     	SUBAR	_batCount,W
     00EF                           1- 3043     _00428_DS_:
     00EF 0803                      1- 3044     	BTRSS	STATUS,0
                                    1- 3045     	MGOTO	_00353_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3046     	.line	332, "main.c"; 	batCount = 0;
                                    1- 3047     	BANKSEL	_batCount
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 02rr                      1- 3048     	CLRR	_batCount
     00F3 02rr                      1- 3049     	CLRR	(_batCount + 1)
                                    1- 3050     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 3051     	.line	333, "main.c"; 	preBatValue = preBatValue/2;
     00F4 1C03                      1- 3052     	BCR	STATUS,0
                                    1- 3053     	BANKSEL	_preBatValue
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 13rr                      1- 3054     	RRR	_preBatValue,F
                                    1- 3055     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=0, offr=0
                                    1- 3056     	.line	334, "main.c"; 	preBatValue = preBatValue + batValue/2;
     00F7 1C03                      1- 3057     	BCR	STATUS,0
                                    1- 3058     	BANKSEL	_batValue
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 13rr                      1- 3059     	RRR	_batValue,W
                                    1- 3060     	BANKSEL	r0x105A
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 00rr                      1- 3061     	MOVAR	r0x105A
                                    1- 3062     	BANKSEL	_preBatValue
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 03rr                      1- 3063     	ADDAR	_preBatValue,F
                                    1- 3064     	MGOTO	_00353_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
     00FF                           1- 3065     _00347_DS_:
                                    1- 3066     	.line	339, "main.c"; 	batCount = 0;
                                    1- 3067     	BANKSEL	_batCount
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 02rr                      1- 3068     	CLRR	_batCount
     0101 02rr                      1- 3069     	CLRR	(_batCount + 1)
     0102                           1- 3070     _00353_DS_:
                                    1- 3071     	.line	343, "main.c"; 	}
                                    1- 3072     	RETURN	
     0102 0010                      3-   40 m1      ret
                                    1- 3073     ; exit point of _chrgCtr
                                    1- 3076     ;	code size estimation:
                                    1- 3077     ;	 1180+  352 =  1532 instructions ( 3768 byte)
                                    1- 3079     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
