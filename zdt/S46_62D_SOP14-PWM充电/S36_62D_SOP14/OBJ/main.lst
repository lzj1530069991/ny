
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	___sdcc_saved_stk02
                                    1-   99     	extern	___sdcc_saved_stk03
                                    1-  100     	extern	__nyc_ny8_startup
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     ; global declarations
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     	extern	_F_wait_eoc
                                    1-  105     	extern	_F_AIN2_Convert
                                    1-  106     	extern	_F_AIN3_Convert
                                    1-  107     	extern	_F_AIN4_Convert
                                    1-  108     	extern	_checkOutA
                                    1-  109     	extern	_checkBatAD
                                    1-  110     	extern	_initAD
                                    1-  111     	extern	_delay
                                    1-  112     	extern	_chrgCtr
                                    1-  113     	extern	_keyRead
                                    1-  114     	extern	_gotoSleep
                                    1-  115     	extern	_pwmStop
                                    1-  116     	extern	_pwmInit
                                    1-  117     	extern	_pwm1Stop
                                    1-  118     	extern	_pwm1Init
                                    1-  119     	extern	_LED8ON
                                    1-  120     	extern	_LED7ON
                                    1-  121     	extern	_LED6ON
                                    1-  122     	extern	_LED5ON
                                    1-  123     	extern	_LED4ON
                                    1-  124     	extern	_LED3ON
                                    1-  125     	extern	_LED2ON
                                    1-  126     	extern	_LED1ON
                                    1-  127     	extern	_LedInput
                                    1-  128     	extern	_ledShow
                                    1-  129     	extern	_initSys
                                    1-  130     	extern	_powerOff
                                    1-  131     	extern	_keyCtr
                                    1-  132     	extern	_isr
                                    1-  133     	extern	_main
                                    1-  134     	extern	_Status
                                    1-  135     	extern	_duty
                                    1-  136     	extern	_intCount
                                    1-  137     	extern	_count500ms
                                    1-  138     	extern	_keyCount
                                    1-  139     	extern	_workStep
                                    1-  140     	extern	_ledStep
                                    1-  141     	extern	_fgCount
                                    1-  142     	extern	_fgPRD
                                    1-  143     	extern	_preFG
                                    1-  144     	extern	_maxDuty
                                    1-  145     	extern	_pwStep
                                    1-  146     	extern	_R_AIN4_DATA
                                    1-  147     	extern	_R_AIN4_DATA_LB
                                    1-  148     	extern	_R_AIN3_DATA
                                    1-  149     	extern	_R_AIN3_DATA_LB
                                    1-  150     	extern	_R_AIN2_DATA
                                    1-  151     	extern	_R_AIN2_DATA_LB
                                    1-  152     	extern	_startStep
                                    1-  153     	extern	_sleepTime
                                    1-  154     	extern	_count200ms
                                    1-  155     	extern	_count1s
                                    1-  156     	extern	_count900s
                                    1-  157     	extern	_lowBatTime
                                    1-  158     	extern	_ledTime
                                    1-  159     	extern	_overCount
                                    1-  160     	extern	_chrgCount
                                    1-  161     	extern	_ledLightTime
                                    1-  162     	extern	_currentDuty
                                    1-  163     	extern	_fullCount
                                    1-  164     	extern	_shanshuoTime
                                    1-  165     	extern	_firstTime
                                    1-  166     	extern	_tempDuty
                                    1-  167     	extern	_lowCount
                                    1-  168     	extern	_longPressFlag
                                    1-  169     	extern	_IntFlag
                                    1-  170     	extern	_chrgFlag
                                    1-  171     	extern	_redLedFlag
                                    1-  172     	extern	_tempLedStep
                                    1-  173     	extern	_count5S
                                    1-  174     	extern	_ledDeadTime
                                    1-  175     	extern	_lockLedStep
                                    1-  176     	extern	_shandengTime
                                    1-  177     	extern	_lowBat
                                    1-  178     	extern	_lockStart
                                    1-  179     	extern	_fullLock
                                    1-  180     	extern	_fullLockCount
                                    1-  181     	extern	_ledCount
                                    1-  182     	extern	_maxOut
                                    1-  183     	extern	_subMin
                                    1-  184     	extern	_subTime
                                    1-  185     	extern	_addFlag
                                    1-  186     	extern	_addTime
                                    1-  187     	extern	_chrgWaitTime
                                    1-  188     	extern	_maxduty
                                    1-  189     	extern	_batValue
                                    1-  190     	extern	_subBatTime
                                    1-  191     	extern	_batTime
                                    1-  192     	extern	_batFullTime
                                    1-  193     	extern	_batZeorTime
                                    1-  194     	extern	_count99
                                    1-  195     	extern	_preBatValue
                                    1-  196     	extern	_ledLock
                                    1-  197     	extern	_countLedLock
                                    1-  198     	extern	_preChrgBatValue
                                    1-  199     	extern	_protectFlag
                                    1-  200     	extern	_firstChrgTime
                                    1-  201     	extern	_debug
                                    1-  203     	extern PSAVE
                                    1-  204     	extern SSAVE
                                    1-  205     	extern WSAVE
                                    1-  206     	extern STK12
                                    1-  207     	extern STK11
                                    1-  208     	extern STK10
                                    1-  209     	extern STK09
                                    1-  210     	extern STK08
                                    1-  211     	extern STK07
                                    1-  212     	extern STK06
                                    1-  213     	extern STK05
                                    1-  214     	extern STK04
                                    1-  215     	extern STK03
                                    1-  216     	extern STK02
                                    1-  217     	extern STK01
                                    1-  218     	extern STK00
                                    1-  220     .segment "uninit", 0x20000040
 20000040                           1-  221     PSAVE:
                                    1-  222     	.res 1
 20000041                           1-  223     SSAVE:
                                    1-  224     	.res 1
 20000042                           1-  225     WSAVE:
                                    1-  226     	.res 1
 20000043                           1-  227     STK12:
                                    1-  228     	.res 1
 20000044                           1-  229     STK11:
                                    1-  230     	.res 1
 20000045                           1-  231     STK10:
                                    1-  232     	.res 1
 20000046                           1-  233     STK09:
                                    1-  234     	.res 1
 20000047                           1-  235     STK08:
                                    1-  236     	.res 1
 20000048                           1-  237     STK07:
                                    1-  238     	.res 1
 20000049                           1-  239     STK06:
                                    1-  240     	.res 1
 2000004A                           1-  241     STK05:
                                    1-  242     	.res 1
 2000004B                           1-  243     STK04:
                                    1-  244     	.res 1
 2000004C                           1-  245     STK03:
                                    1-  246     	.res 1
 2000004D                           1-  247     STK02:
                                    1-  248     	.res 1
 2000004E                           1-  249     STK01:
                                    1-  250     	.res 1
 2000004F                           1-  251     STK00:
                                    1-  252     	.res 1
                                    1-  254     ;--------------------------------------------------------
                                    1-  255     ; global definitions
                                    1-  256     ;--------------------------------------------------------
                                    1-  257     .segment "uninit"
     0000                           1-  258     _R_AIN4_DATA:
                                    1-  259     	.res	2
                                    1-  262     .segment "uninit"
     0000                           1-  263     _R_AIN4_DATA_LB:
                                    1-  264     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     _R_AIN3_DATA:
                                    1-  269     	.res	2
                                    1-  272     .segment "uninit"
     0000                           1-  273     _R_AIN3_DATA_LB:
                                    1-  274     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     _R_AIN2_DATA:
                                    1-  279     	.res	2
                                    1-  282     .segment "uninit"
     0000                           1-  283     _R_AIN2_DATA_LB:
                                    1-  284     	.res	1
                                    1-  287     ;--------------------------------------------------------
                                    1-  288     ; absolute symbol definitions
                                    1-  289     ;--------------------------------------------------------
                                    1-  290     ;--------------------------------------------------------
                                    1-  291     ; compiler-defined variables
                                    1-  292     ;--------------------------------------------------------
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1070:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1066:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x106F:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x106E:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x106D:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x106C:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x106B:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x106A:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1069:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1068:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x1062:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1067:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1065:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1063:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x1046:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x1047:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x1060:
                                    1-  343     	.res	1
                                    1-  344     .segment "uninit"
     0000                           1-  345     r0x1061:
                                    1-  346     	.res	1
                                    1-  347     .segment "uninit"
     0000                           1-  348     r0x105A:
                                    1-  349     	.res	1
                                    1-  350     .segment "uninit"
     0000                           1-  351     r0x105B:
                                    1-  352     	.res	1
                                    1-  353     .segment "uninit"
     0000                           1-  354     r0x105D:
                                    1-  355     	.res	1
                                    1-  356     .segment "uninit"
     0000                           1-  357     r0x1054:
                                    1-  358     	.res	1
                                    1-  359     .segment "uninit"
     0000                           1-  360     r0x1055:
                                    1-  361     	.res	1
                                    1-  362     .segment "uninit"
     0000                           1-  363     r0x1056:
                                    1-  364     	.res	1
                                    1-  365     .segment "uninit"
     0000                           1-  366     r0x1059:
                                    1-  367     	.res	1
                                    1-  368     .segment "uninit"
     0000                           1-  369     r0x104E:
                                    1-  370     	.res	1
                                    1-  371     .segment "uninit"
     0000                           1-  372     r0x104F:
                                    1-  373     	.res	1
                                    1-  374     .segment "uninit"
     0000                           1-  375     r0x1050:
                                    1-  376     	.res	1
                                    1-  377     .segment "uninit"
     0000                           1-  378     r0x1053:
                                    1-  379     	.res	1
                                    1-  380     .segment "uninit"
     0000                           1-  381     r0x1048:
                                    1-  382     	.res	1
                                    1-  383     .segment "uninit"
     0000                           1-  384     r0x1049:
                                    1-  385     	.res	1
                                    1-  386     .segment "uninit"
     0000                           1-  387     r0x104A:
                                    1-  388     	.res	1
                                    1-  389     .segment "uninit"
     0000                           1-  390     r0x104D:
                                    1-  391     	.res	1
                                    1-  392     ;--------------------------------------------------------
                                    1-  393     ; initialized data
                                    1-  394     ;--------------------------------------------------------
                                    1-  396     .segment "idata"
     0000                           1-  397     _Status:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _duty:
     0000 0000 0000                 1-  404     	dw	0x00, 0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _intCount:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _count500ms:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _keyCount:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _workStep:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _ledStep:
     0000 0000                      1-  434     	dw	0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _fgCount:
     0000 0000 0000                 1-  440     	dw	0x00, 0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _fgPRD:
     0000 0000 0000                 1-  446     	dw	0x00, 0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _preFG:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _maxDuty:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _pwStep:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _startStep:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _sleepTime:
     0000 0000 0000                 1-  476     	dw	0x00, 0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _count200ms:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _count1s:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _count900s:
     0000 0000 0000                 1-  494     	dw	0x00, 0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _lowBatTime:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _ledTime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _overCount:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _chrgCount:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _ledLightTime:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _currentDuty:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _fullCount:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _shanshuoTime:
     0000 0000                      1-  542     	dw	0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _firstTime:
     0000 0000                      1-  548     	dw	0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _tempDuty:
     0000 0000                      1-  554     	dw	0x00
                                    1-  558     .segment "idata"
     0000                           1-  559     _lowCount:
     0000 0000                      1-  560     	dw	0x00
                                    1-  564     .segment "idata"
     0000                           1-  565     _longPressFlag:
     0000 0000                      1-  566     	dw	0x00
                                    1-  570     .segment "idata"
     0000                           1-  571     _IntFlag:
     0000 0000                      1-  572     	dw	0x00
                                    1-  576     .segment "idata"
     0000                           1-  577     _chrgFlag:
     0000 0000                      1-  578     	dw	0x00
                                    1-  582     .segment "idata"
     0000                           1-  583     _redLedFlag:
     0000 0000                      1-  584     	dw	0x00
                                    1-  588     .segment "idata"
     0000                           1-  589     _tempLedStep:
     0000 0000                      1-  590     	dw	0x00
                                    1-  594     .segment "idata"
     0000                           1-  595     _count5S:
     0000 0000 0000                 1-  596     	dw	0x00, 0x00
                                    1-  600     .segment "idata"
     0000                           1-  601     _ledDeadTime:
     0000 0000                      1-  602     	dw	0x00
                                    1-  606     .segment "idata"
     0000                           1-  607     _lockLedStep:
     0000 0000                      1-  608     	dw	0x00
                                    1-  612     .segment "idata"
     0000                           1-  613     _shandengTime:
     0000 0000 0000                 1-  614     	dw	0x00, 0x00
                                    1-  618     .segment "idata"
     0000                           1-  619     _lowBat:
     0000 0000 0000                 1-  620     	dw	0x00, 0x00
                                    1-  624     .segment "idata"
     0000                           1-  625     _lockStart:
     0000 0000                      1-  626     	dw	0x00
                                    1-  630     .segment "idata"
     0000                           1-  631     _fullLock:
     0000 0000                      1-  632     	dw	0x00
                                    1-  636     .segment "idata"
     0000                           1-  637     _fullLockCount:
     0000 0000                      1-  638     	dw	0x00
                                    1-  642     .segment "idata"
     0000                           1-  643     _ledCount:
     0000 0000                      1-  644     	dw	0x00
                                    1-  648     .segment "idata"
     0000                           1-  649     _maxOut:
     0000 0000                      1-  650     	dw	0x00
                                    1-  654     .segment "idata"
     0000                           1-  655     _subMin:
     0000 0000                      1-  656     	dw	0x00
                                    1-  660     .segment "idata"
     0000                           1-  661     _subTime:
     0000 0000                      1-  662     	dw	0x00
                                    1-  666     .segment "idata"
     0000                           1-  667     _addFlag:
     0000 0000                      1-  668     	dw	0x00
                                    1-  672     .segment "idata"
     0000                           1-  673     _addTime:
     0000 0000                      1-  674     	dw	0x00
                                    1-  678     .segment "idata"
     0000                           1-  679     _chrgWaitTime:
     0000 0000                      1-  680     	dw	0x00
                                    1-  684     .segment "idata"
     0000                           1-  685     _maxduty:
     0000 0000                      1-  686     	dw	0x00
                                    1-  690     .segment "idata"
     0000                           1-  691     _batValue:
     0000 0000                      1-  692     	dw	0x00
                                    1-  696     .segment "idata"
     0000                           1-  697     _subBatTime:
     0000 0000 0000                 1-  698     	dw	0x00, 0x00
                                    1-  702     .segment "idata"
     0000                           1-  703     _batTime:
     0000 0000 0000                 1-  704     	dw	0x00, 0x00
                                    1-  708     .segment "idata"
     0000                           1-  709     _batFullTime:
     0000 0000 0000                 1-  710     	dw	0x00, 0x00
                                    1-  714     .segment "idata"
     0000                           1-  715     _batZeorTime:
     0000 0000                      1-  716     	dw	0x00
                                    1-  720     .segment "idata"
     0000                           1-  721     _count99:
     0000 0000 0000                 1-  722     	dw	0x00, 0x00
                                    1-  726     .segment "idata"
     0000                           1-  727     _preBatValue:
     0000 0000 0000                 1-  728     	dw	0x00, 0x00
                                    1-  732     .segment "idata"
     0000                           1-  733     _ledLock:
     0000 0000                      1-  734     	dw	0x00
                                    1-  738     .segment "idata"
     0000                           1-  739     _countLedLock:
     0000 0000 0000                 1-  740     	dw	0x00, 0x00
                                    1-  744     .segment "idata"
     0000                           1-  745     _preChrgBatValue:
     0000 0000 0000                 1-  746     	dw	0x00, 0x00
                                    1-  750     .segment "idata"
     0000                           1-  751     _protectFlag:
     0000 0000                      1-  752     	dw	0x00
                                    1-  756     .segment "idata"
     0000                           1-  757     _firstChrgTime:
     0000 0000                      1-  758     	dw	0x00
                                    1-  762     .segment "idata"
     0000                           1-  763     _debug:
     0000 0000                      1-  764     	dw	0x00
                                    1-  767     ;--------------------------------------------------------
                                    1-  768     ; overlayable items in internal ram 
                                    1-  769     ;--------------------------------------------------------
                                    1-  770     ;	udata_ovr
                                    1-  771     ;--------------------------------------------------------
                                    1-  772     ; reset vector 
                                    1-  773     ;--------------------------------------------------------
                                    1-  774     ORG	0x0000
     0000 3rrr                      1-  775     	LGOTO	__nyc_ny8_startup
                                    1-  776     ;--------------------------------------------------------
                                    1-  777     ; interrupt and initialization code
                                    1-  778     ;--------------------------------------------------------
                                    1-  779     ORG 0x0008
                                    1-  780     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  782     .segment "code"
     0000                           1-  783     __sdcc_interrupt:
                                    1-  784     ;***
                                    1-  785     ;  pBlock Stats: dbName = I
                                    1-  786     ;***
                                    1-  787     ;4 compiler assigned registers:
                                    1-  788     ;   STK00
                                    1-  789     ;   STK01
                                    1-  790     ;   STK02
                                    1-  791     ;   STK03
                                    1-  792     ;; Starting pCode block
     0000                           1-  793     _isr:
                                    1-  794     ; 0 exit points
                                    1-  795     	.line	143, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  796     	MOVAR	WSAVE
     0001 1503                      1-  797     	SWAPR	STATUS,W
     0002 0283                      1-  798     	CLRR	STATUS
     0003 00rr                      1-  799     	MOVAR	SSAVE
     0004 010A                      1-  800     	MOVR	PCHBUF,W
     0005 028A                      1-  801     	CLRR	PCHBUF
     0006 00rr                      1-  802     	MOVAR	PSAVE
     0007 0104                      1-  803     	MOVR	FSR,W
                                    1-  804     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  805     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  806     	MOVR	STK00,W
                                    1-  807     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  808     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  809     	MOVR	STK01,W
                                    1-  810     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  811     	MOVAR	___sdcc_saved_stk01
     0010 01rr                      1-  812     	MOVR	STK02,W
                                    1-  813     	BANKSEL	___sdcc_saved_stk02
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  814     	MOVAR	___sdcc_saved_stk02
     0013 01rr                      1-  815     	MOVR	STK03,W
                                    1-  816     	BANKSEL	___sdcc_saved_stk03
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  817     	MOVAR	___sdcc_saved_stk03
                                    1-  818     	.line	145, "main.c"; 	if(INTFbits.T0IF)
     0016 08rr                      1-  819     	BTRSS	_INTFbits,0
                                    1-  820     	MGOTO	_00125_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  821     	.line	147, "main.c"; 	TMR0 += 55;
     0018 2137                      1-  822     	MOVIA	0x37
     0019 03rr                      1-  823     	ADDAR	_TMR0,F
                                    1-  824     	.line	149, "main.c"; 	if(++intCount >= 100)
                                    1-  825     	BANKSEL	_intCount
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1-  826     	INCR	_intCount,F
                                    1-  827     ;;unsigned compare: left < lit (0x64=100), size=1
     001C 2164                      1-  828     	MOVIA	0x64
     001D 04rr                      1-  829     	SUBAR	_intCount,W
     001E 0803                      1-  830     	BTRSS	STATUS,0
                                    1-  831     	MGOTO	_00125_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  832     	.line	151, "main.c"; 	IntFlag = 1;
     0020 2101                      1-  833     	MOVIA	0x01
                                    1-  834     	BANKSEL	_IntFlag
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1-  835     	MOVAR	_IntFlag
                                    1-  836     	.line	152, "main.c"; 	intCount = 0;
                                    1-  837     	BANKSEL	_intCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1-  838     	CLRR	_intCount
                                    1-  839     	.line	153, "main.c"; 	if(workStep)
                                    1-  840     	BANKSEL	_workStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  841     	MOVR	_workStep,W
     0027 0D03                      1-  842     	BTRSC	STATUS,2
                                    1-  843     	MGOTO	_00106_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  844     	.line	154, "main.c"; 	++fgCount;
                                    1-  845     	BANKSEL	_fgCount
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 05rr                      1-  846     	INCR	_fgCount,F
     002B 0D03                      1-  847     	BTRSC	STATUS,2
     002C 05rr                      1-  848     	INCR	(_fgCount + 1),F
     002D                           1-  849     _00106_DS_:
                                    1-  850     	.line	155, "main.c"; 	if(++count500ms >= 72)
                                    1-  851     	BANKSEL	_count500ms
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1-  852     	INCR	_count500ms,F
                                    1-  853     ;;unsigned compare: left < lit (0x48=72), size=1
     002F 2148                      1-  854     	MOVIA	0x48
     0030 04rr                      1-  855     	SUBAR	_count500ms,W
     0031 0C03                      1-  856     	BTRSC	STATUS,0
                                    1-  857     	.line	156, "main.c"; 	count500ms = 0;
     0032 02rr                      1-  858     	CLRR	_count500ms
                                    1-  859     	.line	157, "main.c"; 	if(++count200ms >= 20)
                                    1-  860     	BANKSEL	_count200ms
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 05rr                      1-  861     	INCR	_count200ms,F
     0035 2114                      1-  862     	MOVIA	0x14
     0036 04rr                      1-  863     	SUBAR	_count200ms,W
     0037 0803                      1-  864     	BTRSS	STATUS,0
                                    1-  865     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  866     	.line	159, "main.c"; 	count200ms = 0;
     0039 02rr                      1-  867     	CLRR	_count200ms
                                    1-  868     	.line	160, "main.c"; 	if(ledDeadTime > 0)
                                    1-  869     	BANKSEL	_ledDeadTime
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  870     	MOVR	_ledDeadTime,W
     003C 0903                      1-  871     	BTRSS	STATUS,2
                                    1-  872     	.line	161, "main.c"; 	--ledDeadTime;
     003D 06rr                      1-  873     	DECR	_ledDeadTime,F
     003E                           1-  874     _00112_DS_:
                                    1-  875     	.line	163, "main.c"; 	if(++count1s >= 125)
                                    1-  876     	BANKSEL	_count1s
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  877     	INCR	_count1s,F
     0040 217D                      1-  878     	MOVIA	0x7d
     0041 04rr                      1-  879     	SUBAR	_count1s,W
     0042 0803                      1-  880     	BTRSS	STATUS,0
                                    1-  881     	MGOTO	_00125_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  882     	.line	165, "main.c"; 	count1s = 0;
     0044 02rr                      1-  883     	CLRR	_count1s
                                    1-  884     	.line	166, "main.c"; 	if(ledLightTime > 0)
                                    1-  885     	BANKSEL	_ledLightTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  886     	MOVR	_ledLightTime,W
     0047 0903                      1-  887     	BTRSS	STATUS,2
                                    1-  888     	.line	167, "main.c"; 	--ledLightTime;
     0048 06rr                      1-  889     	DECR	_ledLightTime,F
                                    1-  890     	.line	168, "main.c"; 	if(shanshuoTime > 0)
                                    1-  891     	BANKSEL	_shanshuoTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  892     	MOVR	_shanshuoTime,W
     004B 0903                      1-  893     	BTRSS	STATUS,2
                                    1-  894     	.line	169, "main.c"; 	--shanshuoTime;
     004C 06rr                      1-  895     	DECR	_shanshuoTime,F
                                    1-  896     	.line	170, "main.c"; 	if(workStep)
                                    1-  897     	BANKSEL	_workStep
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  898     	MOVR	_workStep,W
     004F 0D03                      1-  899     	BTRSC	STATUS,2
                                    1-  900     	MGOTO	_00118_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  901     	.line	172, "main.c"; 	++count900s;
                                    1-  902     	BANKSEL	_count900s
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 05rr                      1-  903     	INCR	_count900s,F
     0053 0D03                      1-  904     	BTRSC	STATUS,2
     0054 05rr                      1-  905     	INCR	(_count900s + 1),F
                                    1-  906     	MGOTO	_00125_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1-  907     _00118_DS_:
                                    1-  908     	.line	176, "main.c"; 	count900s = 0;
                                    1-  909     	BANKSEL	_count900s
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 02rr                      1-  910     	CLRR	_count900s
     0058 02rr                      1-  911     	CLRR	(_count900s + 1)
     0059                           1-  912     _00125_DS_:
                                    1-  913     	.line	185, "main.c"; 	if(INTFbits.PABIF)
     0059 08rr                      1-  914     	BTRSS	_INTFbits,1
                                    1-  915     	MGOTO	_00127_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  916     	.line	187, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005B 21FD                      1-  917     	MOVIA	0xfd
     005C 00rr                      1-  918     	MOVAR	_INTF
     005D                           1-  919     _00127_DS_:
                                    1-  920     	.line	190, "main.c"; 	INTF = 0;
     005D 02rr                      1-  921     	CLRR	_INTF
                                    1-  922     	.line	192, "main.c"; 	}
                                    1-  923     	BANKSEL	___sdcc_saved_stk03
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  924     	MOVR	___sdcc_saved_stk03,W
     0060 00rr                      1-  925     	MOVAR	STK03
                                    1-  926     	BANKSEL	___sdcc_saved_stk02
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  927     	MOVR	___sdcc_saved_stk02,W
     0063 00rr                      1-  928     	MOVAR	STK02
                                    1-  929     	BANKSEL	___sdcc_saved_stk01
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  930     	MOVR	___sdcc_saved_stk01,W
     0066 00rr                      1-  931     	MOVAR	STK01
                                    1-  932     	BANKSEL	___sdcc_saved_stk00
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  933     	MOVR	___sdcc_saved_stk00,W
     0069 00rr                      1-  934     	MOVAR	STK00
                                    1-  935     	BANKSEL	___sdcc_saved_fsr
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1-  936     	MOVR	___sdcc_saved_fsr,W
     006C 0084                      1-  937     	MOVAR	FSR
     006D 01rr                      1-  938     	MOVR	PSAVE,W
     006E 008A                      1-  939     	MOVAR	PCHBUF
     006F 0283                      1-  940     	CLRR	STATUS
     0070 15rr                      1-  941     	SWAPR	SSAVE,W
     0071 0083                      1-  942     	MOVAR	STATUS
     0072 15rr                      1-  943     	SWAPR	WSAVE,F
     0073 15rr                      1-  944     	SWAPR	WSAVE,W
     0074                           1-  945     END_OF_INTERRUPT:
     0074 0011                      1-  946     	RETIE	
                                    1-  948     ;--------------------------------------------------------
                                    1-  949     ; code
                                    1-  950     ;--------------------------------------------------------
                                    1-  951     ;***
                                    1-  952     ;  pBlock Stats: dbName = M
                                    1-  953     ;***
                                    1-  954     ;has an exit
                                    1-  955     ;functions called:
                                    1-  956     ;   _initSys
                                    1-  957     ;   _initAD
                                    1-  958     ;   _ledShow
                                    1-  959     ;   _keyCtr
                                    1-  960     ;   _checkBatAD
                                    1-  961     ;   _chrgCtr
                                    1-  962     ;   _checkOutA
                                    1-  963     ;   _ledShow
                                    1-  964     ;   _powerOff
                                    1-  965     ;   _gotoSleep
                                    1-  966     ;   _powerOff
                                    1-  967     ;   _initSys
                                    1-  968     ;   _initAD
                                    1-  969     ;   _ledShow
                                    1-  970     ;   _keyCtr
                                    1-  971     ;   _checkBatAD
                                    1-  972     ;   _chrgCtr
                                    1-  973     ;   _checkOutA
                                    1-  974     ;   _ledShow
                                    1-  975     ;   _powerOff
                                    1-  976     ;   _gotoSleep
                                    1-  977     ;   _powerOff
                                    1-  978     ;; Starting pCode block
                                    1-  979     .segment "code"; module=main, function=_main
     0000                           1-  981     _main:
                                    1-  982     ; 2 exit points
                                    1-  983     	.line	196, "main.c"; 	initSys();
                                    1-  984     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  985     	.line	197, "main.c"; 	initAD();
                                    1-  986     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  987     _00160_DS_:
                                    1-  988     	.line	200, "main.c"; 	CLRWDT();
     0002 0002                      1-  989     	clrwdt
                                    1-  990     	.line	201, "main.c"; 	ledShow();
                                    1-  991     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  992     	.line	202, "main.c"; 	if(!IntFlag)
                                    1-  993     	BANKSEL	_IntFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  994     	MOVR	_IntFlag,W
     0006 0D03                      1-  995     	BTRSC	STATUS,2
                                    1-  996     	MGOTO	_00160_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  997     	.line	204, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  998     	CLRR	_IntFlag
                                    1-  999     	.line	205, "main.c"; 	if(chrgFlag == 0)
                                    1- 1000     	BANKSEL	_chrgFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 1001     	MOVR	_chrgFlag,W
     000B 0D03                      1- 1002     	BTRSC	STATUS,2
                                    1- 1003     	.line	206, "main.c"; 	keyCtr();
                                    1- 1004     	MCALL	_keyCtr
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1005     	.line	207, "main.c"; 	checkBatAD();
                                    1- 1006     	MCALL	_checkBatAD
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1007     	.line	208, "main.c"; 	chrgCtr();
                                    1- 1008     	MCALL	_chrgCtr
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1009     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1010     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 1011     	.line	209, "main.c"; 	if(count200ms > 8 && count200ms < 11)
     000F 2109                      1- 1012     	MOVIA	0x09
                                    1- 1013     	BANKSEL	_count200ms
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1014     	SUBAR	_count200ms,W
     0012 0803                      1- 1015     	BTRSS	STATUS,0
                                    1- 1016     	MGOTO	_00137_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1017     ;;unsigned compare: left < lit (0xB=11), size=1
     0014 210B                      1- 1018     	MOVIA	0x0b
     0015 04rr                      1- 1019     	SUBAR	_count200ms,W
     0016 0803                      1- 1020     	BTRSS	STATUS,0
                                    1- 1021     	.line	211, "main.c"; 	checkOutA();
                                    1- 1022     	MCALL	_checkOutA
     0017 2rrr                      3-   66 m1      LCALL rom_address
     0018                           1- 1023     _00137_DS_:
                                    1- 1024     	.line	214, "main.c"; 	ledShow();
                                    1- 1025     	MCALL	_ledShow
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1026     	.line	215, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1- 1027     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1028     	MOVR	_workStep,W
     001B 0D03                      1- 1029     	BTRSC	STATUS,2
                                    1- 1030     	MGOTO	_00140_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1031     	BANKSEL	_currentDuty
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1032     	MOVR	_currentDuty,W
                                    1- 1033     	BANKSEL	_maxDuty
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 1034     	SUBAR	_maxDuty,W
     0021 0C03                      1- 1035     	BTRSC	STATUS,0
                                    1- 1036     	MGOTO	_00140_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1037     	.line	217, "main.c"; 	currentDuty = currentDuty - 10;
     0023 21F6                      1- 1038     	MOVIA	0xf6
                                    1- 1039     	BANKSEL	_currentDuty
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1040     	ADDAR	_currentDuty,F
                                    1- 1041     	.line	218, "main.c"; 	PWM2DUTY = currentDuty;
     0026 01rr                      1- 1042     	MOVR	_currentDuty,W
     0027 00rr                      1- 1043     	SFUN	_PWM2DUTY
                                    1- 1044     ;;unsigned compare: left < lit (0x5=5), size=1
     0028                           1- 1045     _00140_DS_:
                                    1- 1046     	.line	221, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0028 2105                      1- 1047     	MOVIA	0x05
                                    1- 1048     	BANKSEL	_overCount
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 04rr                      1- 1049     	SUBAR	_overCount,W
     002B 0803                      1- 1050     	BTRSS	STATUS,0
                                    1- 1051     	MGOTO	_00145_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1052     	BANKSEL	_workStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 1053     	MOVR	_workStep,W
     002F 0D03                      1- 1054     	BTRSC	STATUS,2
                                    1- 1055     	MGOTO	_00145_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1056     	.line	223, "main.c"; 	if(++count5S > 500)
                                    1- 1057     	BANKSEL	_count5S
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 05rr                      1- 1058     	INCR	_count5S,F
     0033 0D03                      1- 1059     	BTRSC	STATUS,2
     0034 05rr                      1- 1060     	INCR	(_count5S + 1),F
                                    1- 1061     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1062     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0035 2101                      1- 1063     	MOVIA	0x01
     0036 04rr                      1- 1064     	SUBAR	(_count5S + 1),W
     0037 0903                      1- 1065     	BTRSS	STATUS,2
                                    1- 1066     	MGOTO	_00222_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039 21F5                      1- 1067     	MOVIA	0xf5
     003A 04rr                      1- 1068     	SUBAR	_count5S,W
     003B                           1- 1069     _00222_DS_:
     003B 0803                      1- 1070     	BTRSS	STATUS,0
                                    1- 1071     	MGOTO	_00146_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1072     	.line	225, "main.c"; 	overCount = 0;
                                    1- 1073     	BANKSEL	_overCount
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1- 1074     	CLRR	_overCount
                                    1- 1075     	.line	226, "main.c"; 	count5S = 0;
                                    1- 1076     	BANKSEL	_count5S
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 02rr                      1- 1077     	CLRR	_count5S
     0041 02rr                      1- 1078     	CLRR	(_count5S + 1)
                                    1- 1079     	.line	227, "main.c"; 	ledDeadTime = 25;
     0042 2119                      1- 1080     	MOVIA	0x19
                                    1- 1081     	BANKSEL	_ledDeadTime
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1082     	MOVAR	_ledDeadTime
                                    1- 1083     	.line	228, "main.c"; 	powerOff();
                                    1- 1084     	MCALL	_powerOff
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1085     	MGOTO	_00146_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1- 1086     _00145_DS_:
                                    1- 1087     	.line	233, "main.c"; 	count5S = 0;
                                    1- 1088     	BANKSEL	_count5S
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1089     	CLRR	_count5S
     0049 02rr                      1- 1090     	CLRR	(_count5S + 1)
     004A                           1- 1091     _00146_DS_:
                                    1- 1092     	.line	235, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shandengTime == 0)
                                    1- 1093     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 1094     	MOVR	_workStep,W
     004C 0903                      1- 1095     	BTRSS	STATUS,2
                                    1- 1096     	MGOTO	_00151_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1097     	BANKSEL	_keyCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 1098     	MOVR	_keyCount,W
     0050 0903                      1- 1099     	BTRSS	STATUS,2
                                    1- 1100     	MGOTO	_00151_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1101     	BANKSEL	_PORTA
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 0Err                      1- 1102     	BTRSC	_PORTA,5
                                    1- 1103     	MGOTO	_00151_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1104     	BANKSEL	_ledLightTime
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 1105     	MOVR	_ledLightTime,W
     0057 0903                      1- 1106     	BTRSS	STATUS,2
                                    1- 1107     	MGOTO	_00151_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1108     	BANKSEL	_ledDeadTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1- 1109     	MOVR	_ledDeadTime,W
     005B 0903                      1- 1110     	BTRSS	STATUS,2
                                    1- 1111     	MGOTO	_00151_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1112     	BANKSEL	_shandengTime
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 1113     	MOVR	_shandengTime,W
     005F 11rr                      1- 1114     	IORAR	(_shandengTime + 1),W
     0060 0903                      1- 1115     	BTRSS	STATUS,2
                                    1- 1116     	MGOTO	_00151_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1117     	.line	237, "main.c"; 	if(++sleepTime > 30)
                                    1- 1118     	BANKSEL	_sleepTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 05rr                      1- 1119     	INCR	_sleepTime,F
     0064 0D03                      1- 1120     	BTRSC	STATUS,2
     0065 05rr                      1- 1121     	INCR	(_sleepTime + 1),F
                                    1- 1122     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1123     ;;unsigned compare: left >= lit (0x1F=31), size=2
     0066 2100                      1- 1124     	MOVIA	0x00
     0067 04rr                      1- 1125     	SUBAR	(_sleepTime + 1),W
     0068 0903                      1- 1126     	BTRSS	STATUS,2
                                    1- 1127     	MGOTO	_00223_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 211F                      1- 1128     	MOVIA	0x1f
     006B 04rr                      1- 1129     	SUBAR	_sleepTime,W
     006C                           1- 1130     _00223_DS_:
     006C 0803                      1- 1131     	BTRSS	STATUS,0
                                    1- 1132     	MGOTO	_00151_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1133     	.line	239, "main.c"; 	gotoSleep();
                                    1- 1134     	MCALL	_gotoSleep
     006E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1135     ;;unsigned compare: left < lit (0x384=900), size=2
     006F                           1- 1136     _00151_DS_:
                                    1- 1137     	.line	243, "main.c"; 	if(count900s >= 900)
     006F 2103                      1- 1138     	MOVIA	0x03
                                    1- 1139     	BANKSEL	_count900s
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 04rr                      1- 1140     	SUBAR	(_count900s + 1),W
     0072 0903                      1- 1141     	BTRSS	STATUS,2
                                    1- 1142     	MGOTO	_00224_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074 2184                      1- 1143     	MOVIA	0x84
     0075 04rr                      1- 1144     	SUBAR	_count900s,W
     0076                           1- 1145     _00224_DS_:
     0076 0803                      1- 1146     	BTRSS	STATUS,0
                                    1- 1147     	MGOTO	_00160_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1148     	.line	245, "main.c"; 	powerOff();
                                    1- 1149     	MCALL	_powerOff
     0078 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1150     	MGOTO	_00160_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1151     	.line	249, "main.c"; 	}
                                    1- 1152     	RETURN	
     007A 0010                      3-   40 m1      ret
                                    1- 1153     ; exit point of _main
                                    1- 1155     ;***
                                    1- 1156     ;  pBlock Stats: dbName = C
                                    1- 1157     ;***
                                    1- 1158     ;has an exit
                                    1- 1159     ;; Starting pCode block
                                    1- 1160     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1162     _F_wait_eoc:
                                    1- 1163     ; 2 exit points
     0000                           1- 1164     _00855_DS_:
                                    1- 1165     	.line	1181, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1166     	BTRSS	_ADMDbits,5
                                    1- 1167     	MGOTO	_00855_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1168     	.line	1183, "main.c"; 	}
                                    1- 1169     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1170     ; exit point of _F_wait_eoc
                                    1- 1172     ;***
                                    1- 1173     ;  pBlock Stats: dbName = C
                                    1- 1174     ;***
                                    1- 1175     ;has an exit
                                    1- 1176     ;functions called:
                                    1- 1177     ;   _delay
                                    1- 1178     ;   _F_wait_eoc
                                    1- 1179     ;   _delay
                                    1- 1180     ;   _F_wait_eoc
                                    1- 1181     ;6 compiler assigned registers:
                                    1- 1182     ;   r0x1048
                                    1- 1183     ;   r0x1049
                                    1- 1184     ;   r0x104A
                                    1- 1185     ;   r0x104B
                                    1- 1186     ;   r0x104C
                                    1- 1187     ;   r0x104D
                                    1- 1188     ;; Starting pCode block
                                    1- 1189     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1191     ;local variable name mapping:
     0000                           1- 1194     _F_AIN2_Convert:
                                    1- 1195     ; 2 exit points
                                    1- 1196     	.line	1164, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1197     	BANKSEL	r0x1048
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1198     	MOVAR	r0x1048
                                    1- 1199     	.line	1166, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1200     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1201     	CLRR	_R_AIN2_DATA_LB
                                    1- 1202     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1203     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1204     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1205     	.line	1168, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1206     	MOVIA	0x92
     0008 00rr                      1- 1207     	MOVAR	_ADMD
                                    1- 1208     	.line	1169, "main.c"; 	delay(200);	
     0009 21C8                      1- 1209     	MOVIA	0xc8
                                    1- 1210     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1211     	.line	1170, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1212     	MOVIA	0x01
                                    1- 1213     	BANKSEL	r0x1049
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1214     	MOVAR	r0x1049
     000E                           1- 1215     _00848_DS_:
                                    1- 1216     	BANKSEL	r0x1049
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1217     	MOVR	r0x1049,W
                                    1- 1218     	BANKSEL	r0x1048
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1219     	SUBAR	r0x1048,W
     0012 0803                      1- 1220     	BTRSS	STATUS,0
                                    1- 1221     	MGOTO	_00850_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1222     	.line	1172, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1223     	BSR	_ADMDbits,6
                                    1- 1224     	.line	1173, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1225     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1226     	.line	1174, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1227     	MOVIA	0x0f
     0017 10rr                      1- 1228     	ANDAR	_ADR,W
                                    1- 1229     ;;3	MOVAR	r0x104A
                                    1- 1230     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1231     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1232     	.line	1175, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1233     	MOVR	_ADD,W
                                    1- 1234     	BANKSEL	r0x104A
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1235     	MOVAR	r0x104A
                                    1- 1236     ;;1	CLRR	r0x104B
                                    1- 1237     ;;111	MOVR	r0x104A,W
                                    1- 1238     ;;109	MOVAR	r0x104C
     001D 2100                      1- 1239     	MOVIA	0x00
                                    1- 1240     	BANKSEL	r0x104D
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1241     	MOVAR	r0x104D
                                    1- 1242     ;;110	MOVR	r0x104C,W
                                    1- 1243     	BANKSEL	r0x104A
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1244     	MOVR	r0x104A,W
                                    1- 1245     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1246     	ADDAR	_R_AIN2_DATA,F
                                    1- 1247     	BANKSEL	r0x104D
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1248     	MOVR	r0x104D,W
     0026 0C03                      1- 1249     	BTRSC	STATUS,0
     0027 05rr                      1- 1250     	INCR	r0x104D,W
     0028 0D03                      1- 1251     	BTRSC	STATUS,2
                                    1- 1252     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1253     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1254     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1255     _00001_DS_:
                                    1- 1256     	.line	1170, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1257     	BANKSEL	r0x1049
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1258     	INCR	r0x1049,F
                                    1- 1259     	MGOTO	_00848_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1260     _00850_DS_:
                                    1- 1261     	.line	1177, "main.c"; 	}
                                    1- 1262     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1263     ; exit point of _F_AIN2_Convert
                                    1- 1265     ;***
                                    1- 1266     ;  pBlock Stats: dbName = C
                                    1- 1267     ;***
                                    1- 1268     ;has an exit
                                    1- 1269     ;functions called:
                                    1- 1270     ;   _delay
                                    1- 1271     ;   _F_wait_eoc
                                    1- 1272     ;   _delay
                                    1- 1273     ;   _F_wait_eoc
                                    1- 1274     ;6 compiler assigned registers:
                                    1- 1275     ;   r0x104E
                                    1- 1276     ;   r0x104F
                                    1- 1277     ;   r0x1050
                                    1- 1278     ;   r0x1051
                                    1- 1279     ;   r0x1052
                                    1- 1280     ;   r0x1053
                                    1- 1281     ;; Starting pCode block
                                    1- 1282     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1284     ;local variable name mapping:
     0000                           1- 1287     _F_AIN3_Convert:
                                    1- 1288     ; 2 exit points
                                    1- 1289     	.line	1149, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1290     	BANKSEL	r0x104E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1291     	MOVAR	r0x104E
                                    1- 1292     	.line	1151, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1293     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1294     	CLRR	_R_AIN3_DATA_LB
                                    1- 1295     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1296     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1297     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1298     	.line	1153, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1299     	MOVIA	0x93
     0008 00rr                      1- 1300     	MOVAR	_ADMD
                                    1- 1301     	.line	1154, "main.c"; 	delay(200);	
     0009 21C8                      1- 1302     	MOVIA	0xc8
                                    1- 1303     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1304     	.line	1155, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1305     	MOVIA	0x01
                                    1- 1306     	BANKSEL	r0x104F
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1307     	MOVAR	r0x104F
     000E                           1- 1308     _00839_DS_:
                                    1- 1309     	BANKSEL	r0x104F
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1310     	MOVR	r0x104F,W
                                    1- 1311     	BANKSEL	r0x104E
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1312     	SUBAR	r0x104E,W
     0012 0803                      1- 1313     	BTRSS	STATUS,0
                                    1- 1314     	MGOTO	_00841_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1315     	.line	1157, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1316     	BSR	_ADMDbits,6
                                    1- 1317     	.line	1158, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1318     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1319     	.line	1159, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1320     	MOVIA	0x0f
     0017 10rr                      1- 1321     	ANDAR	_ADR,W
                                    1- 1322     ;;3	MOVAR	r0x1050
                                    1- 1323     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1324     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1325     	.line	1160, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1326     	MOVR	_ADD,W
                                    1- 1327     	BANKSEL	r0x1050
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1328     	MOVAR	r0x1050
                                    1- 1329     ;;1	CLRR	r0x1051
                                    1- 1330     ;;108	MOVR	r0x1050,W
                                    1- 1331     ;;106	MOVAR	r0x1052
     001D 2100                      1- 1332     	MOVIA	0x00
                                    1- 1333     	BANKSEL	r0x1053
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1334     	MOVAR	r0x1053
                                    1- 1335     ;;107	MOVR	r0x1052,W
                                    1- 1336     	BANKSEL	r0x1050
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1337     	MOVR	r0x1050,W
                                    1- 1338     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1339     	ADDAR	_R_AIN3_DATA,F
                                    1- 1340     	BANKSEL	r0x1053
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1341     	MOVR	r0x1053,W
     0026 0C03                      1- 1342     	BTRSC	STATUS,0
     0027 05rr                      1- 1343     	INCR	r0x1053,W
     0028 0D03                      1- 1344     	BTRSC	STATUS,2
                                    1- 1345     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1346     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1347     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1348     _00002_DS_:
                                    1- 1349     	.line	1155, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1350     	BANKSEL	r0x104F
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1351     	INCR	r0x104F,F
                                    1- 1352     	MGOTO	_00839_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1353     _00841_DS_:
                                    1- 1354     	.line	1162, "main.c"; 	}
                                    1- 1355     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1356     ; exit point of _F_AIN3_Convert
                                    1- 1358     ;***
                                    1- 1359     ;  pBlock Stats: dbName = C
                                    1- 1360     ;***
                                    1- 1361     ;has an exit
                                    1- 1362     ;functions called:
                                    1- 1363     ;   _delay
                                    1- 1364     ;   _F_wait_eoc
                                    1- 1365     ;   _delay
                                    1- 1366     ;   _F_wait_eoc
                                    1- 1367     ;6 compiler assigned registers:
                                    1- 1368     ;   r0x1054
                                    1- 1369     ;   r0x1055
                                    1- 1370     ;   r0x1056
                                    1- 1371     ;   r0x1057
                                    1- 1372     ;   r0x1058
                                    1- 1373     ;   r0x1059
                                    1- 1374     ;; Starting pCode block
                                    1- 1375     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1377     ;local variable name mapping:
     0000                           1- 1380     _F_AIN4_Convert:
                                    1- 1381     ; 2 exit points
                                    1- 1382     	.line	1134, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1383     	BANKSEL	r0x1054
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1384     	MOVAR	r0x1054
                                    1- 1385     	.line	1136, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1386     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1387     	CLRR	_R_AIN4_DATA_LB
                                    1- 1388     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1389     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1390     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1391     	.line	1138, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1392     	MOVIA	0x94
     0008 00rr                      1- 1393     	MOVAR	_ADMD
                                    1- 1394     	.line	1139, "main.c"; 	delay(200);	
     0009 21C8                      1- 1395     	MOVIA	0xc8
                                    1- 1396     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1397     	.line	1140, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1398     	MOVIA	0x01
                                    1- 1399     	BANKSEL	r0x1055
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1400     	MOVAR	r0x1055
     000E                           1- 1401     _00830_DS_:
                                    1- 1402     	BANKSEL	r0x1055
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1403     	MOVR	r0x1055,W
                                    1- 1404     	BANKSEL	r0x1054
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1405     	SUBAR	r0x1054,W
     0012 0803                      1- 1406     	BTRSS	STATUS,0
                                    1- 1407     	MGOTO	_00832_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1408     	.line	1142, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1409     	BSR	_ADMDbits,6
                                    1- 1410     	.line	1143, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1411     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1412     	.line	1144, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1413     	MOVIA	0x0f
     0017 10rr                      1- 1414     	ANDAR	_ADR,W
                                    1- 1415     ;;3	MOVAR	r0x1056
                                    1- 1416     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1417     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1418     	.line	1145, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1419     	MOVR	_ADD,W
                                    1- 1420     	BANKSEL	r0x1056
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1421     	MOVAR	r0x1056
                                    1- 1422     ;;1	CLRR	r0x1057
                                    1- 1423     ;;105	MOVR	r0x1056,W
                                    1- 1424     ;;103	MOVAR	r0x1058
     001D 2100                      1- 1425     	MOVIA	0x00
                                    1- 1426     	BANKSEL	r0x1059
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1427     	MOVAR	r0x1059
                                    1- 1428     ;;104	MOVR	r0x1058,W
                                    1- 1429     	BANKSEL	r0x1056
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1430     	MOVR	r0x1056,W
                                    1- 1431     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1432     	ADDAR	_R_AIN4_DATA,F
                                    1- 1433     	BANKSEL	r0x1059
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1434     	MOVR	r0x1059,W
     0026 0C03                      1- 1435     	BTRSC	STATUS,0
     0027 05rr                      1- 1436     	INCR	r0x1059,W
     0028 0D03                      1- 1437     	BTRSC	STATUS,2
                                    1- 1438     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1439     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1440     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1441     _00003_DS_:
                                    1- 1442     	.line	1140, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1443     	BANKSEL	r0x1055
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1444     	INCR	r0x1055,F
                                    1- 1445     	MGOTO	_00830_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1446     _00832_DS_:
                                    1- 1447     	.line	1147, "main.c"; 	}
                                    1- 1448     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1449     ; exit point of _F_AIN4_Convert
                                    1- 1451     ;***
                                    1- 1452     ;  pBlock Stats: dbName = C
                                    1- 1453     ;***
                                    1- 1454     ;has an exit
                                    1- 1455     ;functions called:
                                    1- 1456     ;   _F_AIN3_Convert
                                    1- 1457     ;   _F_AIN3_Convert
                                    1- 1458     ;4 compiler assigned registers:
                                    1- 1459     ;   r0x105A
                                    1- 1460     ;   r0x105B
                                    1- 1461     ;   r0x105C
                                    1- 1462     ;   r0x105D
                                    1- 1463     ;; Starting pCode block
                                    1- 1464     .segment "code"; module=main, function=_checkOutA
                                    1- 1466     ;local variable name mapping:
     0000                           1- 1469     _checkOutA:
                                    1- 1470     ; 2 exit points
                                    1- 1471     	.line	1032, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1472     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1473     	CLRR	_R_AIN3_DATA_LB
                                    1- 1474     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1475     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1476     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1477     	.line	1033, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1478     	MOVIA	0x08
                                    1- 1479     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1480     	.line	1034, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1481     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1482     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1483     	ANDIA	0xf0
     000A 00rr                      1- 1484     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1485     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1486     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1487     	ANDIA	0x0f
     000E 11rr                      1- 1488     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1489     	XORAR	_R_AIN3_DATA,F
                                    1- 1490     	.line	1035, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1491     	MOVIA	0xf0
                                    1- 1492     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1493     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1494     	.line	1036, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1495     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1496     	BANKSEL	r0x105A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1497     	MOVAR	r0x105A
                                    1- 1498     	BANKSEL	r0x105B
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 1499     	CLRR	r0x105B
                                    1- 1500     ;;102	MOVR	r0x105A,W
                                    1- 1501     ;;100	MOVAR	r0x105C
     0018 2100                      1- 1502     	MOVIA	0x00
                                    1- 1503     	BANKSEL	r0x105D
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 1504     	MOVAR	r0x105D
                                    1- 1505     ;;101	MOVR	r0x105C,W
                                    1- 1506     	BANKSEL	r0x105A
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1507     	MOVR	r0x105A,W
                                    1- 1508     	BANKSEL	_R_AIN3_DATA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 03rr                      1- 1509     	ADDAR	_R_AIN3_DATA,F
                                    1- 1510     	BANKSEL	r0x105D
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1511     	MOVR	r0x105D,W
     0021 0C03                      1- 1512     	BTRSC	STATUS,0
     0022 05rr                      1- 1513     	INCR	r0x105D,W
     0023 0D03                      1- 1514     	BTRSC	STATUS,2
                                    1- 1515     	MGOTO	_00004_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1516     	BANKSEL	_R_AIN3_DATA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 03rr                      1- 1517     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1518     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1519     _00004_DS_:
                                    1- 1520     	.line	1037, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1- 1521     	BCR	STATUS,0
                                    1- 1522     	BANKSEL	_R_AIN3_DATA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 13rr                      1- 1523     	RRR	(_R_AIN3_DATA + 1),F
     002A 13rr                      1- 1524     	RRR	_R_AIN3_DATA,F
                                    1- 1525     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1526     	BCR	STATUS,0
     002C 13rr                      1- 1527     	RRR	(_R_AIN3_DATA + 1),F
     002D 13rr                      1- 1528     	RRR	_R_AIN3_DATA,F
                                    1- 1529     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1530     	BCR	STATUS,0
     002F 13rr                      1- 1531     	RRR	(_R_AIN3_DATA + 1),F
     0030 13rr                      1- 1532     	RRR	_R_AIN3_DATA,F
                                    1- 1533     	.line	1038, "main.c"; 	if(debug)
                                    1- 1534     	BANKSEL	_debug
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 1535     	MOVR	_debug,W
     0033 0D03                      1- 1536     	BTRSC	STATUS,2
                                    1- 1537     	MGOTO	_00716_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1538     	.line	1039, "main.c"; 	R_AIN3_DATA = OUTA;
     0035 212D                      1- 1539     	MOVIA	0x2d
                                    1- 1540     	BANKSEL	_R_AIN3_DATA
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1541     	MOVAR	_R_AIN3_DATA
     0038 2101                      1- 1542     	MOVIA	0x01
     0039 00rr                      1- 1543     	MOVAR	(_R_AIN3_DATA + 1)
     003A                           1- 1544     _00716_DS_:
                                    1- 1545     	.line	1040, "main.c"; 	u16t tempData = 200;
     003A 21C8                      1- 1546     	MOVIA	0xc8
                                    1- 1547     	BANKSEL	r0x105A
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 1548     	MOVAR	r0x105A
                                    1- 1549     	BANKSEL	r0x105B
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1- 1550     	CLRR	r0x105B
                                    1- 1551     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1552     ;;unsigned compare: left >= lit (0x8=8), size=1
                                    1- 1553     	.line	1041, "main.c"; 	if(workStep > 7)
     003F 2108                      1- 1554     	MOVIA	0x08
                                    1- 1555     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 1556     	SUBAR	_workStep,W
     0042 0803                      1- 1557     	BTRSS	STATUS,0
                                    1- 1558     	MGOTO	_00718_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1559     	.line	1043, "main.c"; 	tempData = 300;
     0044 212C                      1- 1560     	MOVIA	0x2c
                                    1- 1561     	BANKSEL	r0x105A
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1562     	MOVAR	r0x105A
     0047 2101                      1- 1563     	MOVIA	0x01
                                    1- 1564     	BANKSEL	r0x105B
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 1565     	MOVAR	r0x105B
                                    1- 1566     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1567     ;;unsigned compare: left >= lit (0x5=5), size=1
     004A                           1- 1568     _00718_DS_:
                                    1- 1569     	.line	1046, "main.c"; 	if(pwStep > 4)
     004A 2105                      1- 1570     	MOVIA	0x05
                                    1- 1571     	BANKSEL	_pwStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1572     	SUBAR	_pwStep,W
     004D 0803                      1- 1573     	BTRSS	STATUS,0
                                    1- 1574     	MGOTO	_00723_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1575     	.line	1048, "main.c"; 	maxOut = 60;
     004F 213C                      1- 1576     	MOVIA	0x3c
                                    1- 1577     	BANKSEL	_maxOut
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 1578     	MOVAR	_maxOut
                                    1- 1579     	MGOTO	_00724_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1580     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1581     ;;unsigned compare: left >= lit (0x3=3), size=1
     0053                           1- 1582     _00723_DS_:
                                    1- 1583     	.line	1050, "main.c"; 	else if(pwStep > 2)
     0053 2103                      1- 1584     	MOVIA	0x03
                                    1- 1585     	BANKSEL	_pwStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 1586     	SUBAR	_pwStep,W
     0056 0803                      1- 1587     	BTRSS	STATUS,0
                                    1- 1588     	MGOTO	_00720_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1589     	.line	1052, "main.c"; 	maxOut = 55;
     0058 2137                      1- 1590     	MOVIA	0x37
                                    1- 1591     	BANKSEL	_maxOut
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1592     	MOVAR	_maxOut
                                    1- 1593     	MGOTO	_00724_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1594     _00720_DS_:
                                    1- 1595     	.line	1056, "main.c"; 	maxOut = 50;
     005C 2132                      1- 1596     	MOVIA	0x32
                                    1- 1597     	BANKSEL	_maxOut
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1598     	MOVAR	_maxOut
     005F                           1- 1599     _00724_DS_:
                                    1- 1600     	.line	1059, "main.c"; 	if(workStep == 1)
                                    1- 1601     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 1602     	MOVR	_workStep,W
     0061 2401                      1- 1603     	XORIA	0x01
     0062 0903                      1- 1604     	BTRSS	STATUS,2
                                    1- 1605     	MGOTO	_00746_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1606     	.line	1061, "main.c"; 	tempDuty = 79;
     0064 214F                      1- 1607     	MOVIA	0x4f
                                    1- 1608     	BANKSEL	_tempDuty
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1609     	MOVAR	_tempDuty
                                    1- 1610     	.line	1062, "main.c"; 	maxOut = maxOut - 25;
     0067 21E7                      1- 1611     	MOVIA	0xe7
                                    1- 1612     	BANKSEL	_maxOut
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 03rr                      1- 1613     	ADDAR	_maxOut,F
                                    1- 1614     	MGOTO	_00747_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B                           1- 1615     _00746_DS_:
                                    1- 1616     	.line	1064, "main.c"; 	else if(workStep == 2)
                                    1- 1617     	BANKSEL	_workStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 1618     	MOVR	_workStep,W
     006D 2402                      1- 1619     	XORIA	0x02
     006E 0903                      1- 1620     	BTRSS	STATUS,2
                                    1- 1621     	MGOTO	_00743_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1622     	.line	1066, "main.c"; 	tempDuty = 82;
     0070 2152                      1- 1623     	MOVIA	0x52
                                    1- 1624     	BANKSEL	_tempDuty
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1625     	MOVAR	_tempDuty
                                    1- 1626     	.line	1067, "main.c"; 	maxOut = maxOut - 20;
     0073 21EC                      1- 1627     	MOVIA	0xec
                                    1- 1628     	BANKSEL	_maxOut
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 03rr                      1- 1629     	ADDAR	_maxOut,F
                                    1- 1630     	MGOTO	_00747_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
     0077                           1- 1631     _00743_DS_:
                                    1- 1632     	.line	1069, "main.c"; 	else if(workStep == 3)
                                    1- 1633     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1634     	MOVR	_workStep,W
     0079 2403                      1- 1635     	XORIA	0x03
     007A 0903                      1- 1636     	BTRSS	STATUS,2
                                    1- 1637     	MGOTO	_00740_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1638     	.line	1071, "main.c"; 	tempDuty = 85;
     007C 2155                      1- 1639     	MOVIA	0x55
                                    1- 1640     	BANKSEL	_tempDuty
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1641     	MOVAR	_tempDuty
                                    1- 1642     	.line	1072, "main.c"; 	maxOut = maxOut - 10;
     007F 21F6                      1- 1643     	MOVIA	0xf6
                                    1- 1644     	BANKSEL	_maxOut
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 03rr                      1- 1645     	ADDAR	_maxOut,F
                                    1- 1646     	MGOTO	_00747_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083                           1- 1647     _00740_DS_:
                                    1- 1648     	.line	1074, "main.c"; 	else if(workStep == 4)
                                    1- 1649     	BANKSEL	_workStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1- 1650     	MOVR	_workStep,W
     0085 2404                      1- 1651     	XORIA	0x04
     0086 0903                      1- 1652     	BTRSS	STATUS,2
                                    1- 1653     	MGOTO	_00737_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1654     	.line	1076, "main.c"; 	tempDuty = 88;
     0088 2158                      1- 1655     	MOVIA	0x58
                                    1- 1656     	BANKSEL	_tempDuty
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 1657     	MOVAR	_tempDuty
                                    1- 1658     	.line	1077, "main.c"; 	maxOut = maxOut - 5;
     008B 21FB                      1- 1659     	MOVIA	0xfb
                                    1- 1660     	BANKSEL	_maxOut
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 03rr                      1- 1661     	ADDAR	_maxOut,F
                                    1- 1662     	MGOTO	_00747_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F                           1- 1663     _00737_DS_:
                                    1- 1664     	.line	1079, "main.c"; 	else if(workStep == 5)
                                    1- 1665     	BANKSEL	_workStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 01rr                      1- 1666     	MOVR	_workStep,W
     0091 2405                      1- 1667     	XORIA	0x05
     0092 0903                      1- 1668     	BTRSS	STATUS,2
                                    1- 1669     	MGOTO	_00734_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1670     	.line	1081, "main.c"; 	tempDuty = 90;
     0094 215A                      1- 1671     	MOVIA	0x5a
                                    1- 1672     	BANKSEL	_tempDuty
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1673     	MOVAR	_tempDuty
                                    1- 1674     	MGOTO	_00747_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098                           1- 1675     _00734_DS_:
                                    1- 1676     	.line	1083, "main.c"; 	else if(workStep == 6)
                                    1- 1677     	BANKSEL	_workStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1678     	MOVR	_workStep,W
     009A 2406                      1- 1679     	XORIA	0x06
     009B 0903                      1- 1680     	BTRSS	STATUS,2
                                    1- 1681     	MGOTO	_00731_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1682     	.line	1085, "main.c"; 	tempDuty = 93;
     009D 215D                      1- 1683     	MOVIA	0x5d
                                    1- 1684     	BANKSEL	_tempDuty
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 1685     	MOVAR	_tempDuty
                                    1- 1686     	.line	1086, "main.c"; 	maxOut = maxOut + 10;
     00A0 210A                      1- 1687     	MOVIA	0x0a
                                    1- 1688     	BANKSEL	_maxOut
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 03rr                      1- 1689     	ADDAR	_maxOut,F
                                    1- 1690     	MGOTO	_00747_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
     00A4                           1- 1691     _00731_DS_:
                                    1- 1692     	.line	1088, "main.c"; 	else if(workStep == 7)
                                    1- 1693     	BANKSEL	_workStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1694     	MOVR	_workStep,W
     00A6 2407                      1- 1695     	XORIA	0x07
     00A7 0903                      1- 1696     	BTRSS	STATUS,2
                                    1- 1697     	MGOTO	_00728_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1698     	.line	1090, "main.c"; 	tempDuty = 96;
     00A9 2160                      1- 1699     	MOVIA	0x60
                                    1- 1700     	BANKSEL	_tempDuty
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 1701     	MOVAR	_tempDuty
                                    1- 1702     	.line	1091, "main.c"; 	maxOut = maxOut + 18;
     00AC 2112                      1- 1703     	MOVIA	0x12
                                    1- 1704     	BANKSEL	_maxOut
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 03rr                      1- 1705     	ADDAR	_maxOut,F
                                    1- 1706     	MGOTO	_00747_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
     00B0                           1- 1707     _00728_DS_:
                                    1- 1708     	.line	1093, "main.c"; 	else if(workStep == 8)
                                    1- 1709     	BANKSEL	_workStep
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 01rr                      1- 1710     	MOVR	_workStep,W
     00B2 2408                      1- 1711     	XORIA	0x08
     00B3 0903                      1- 1712     	BTRSS	STATUS,2
                                    1- 1713     	MGOTO	_00747_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1714     	.line	1095, "main.c"; 	tempDuty = 99;
     00B5 2163                      1- 1715     	MOVIA	0x63
                                    1- 1716     	BANKSEL	_tempDuty
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1717     	MOVAR	_tempDuty
                                    1- 1718     	.line	1096, "main.c"; 	maxOut = maxOut + 22;
     00B8 2116                      1- 1719     	MOVIA	0x16
                                    1- 1720     	BANKSEL	_maxOut
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 03rr                      1- 1721     	ADDAR	_maxOut,F
     00BB                           1- 1722     _00747_DS_:
                                    1- 1723     	.line	1098, "main.c"; 	if(R_AIN3_DATA > tempData)
                                    1- 1724     	BANKSEL	_R_AIN3_DATA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 01rr                      1- 1725     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 1726     	BANKSEL	r0x105B
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 04rr                      1- 1727     	SUBAR	r0x105B,W
     00BF 0903                      1- 1728     	BTRSS	STATUS,2
                                    1- 1729     	MGOTO	_00821_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1730     	BANKSEL	_R_AIN3_DATA
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 1731     	MOVR	_R_AIN3_DATA,W
                                    1- 1732     	BANKSEL	r0x105A
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 04rr                      1- 1733     	SUBAR	r0x105A,W
     00C5                           1- 1734     _00821_DS_:
     00C5 0C03                      1- 1735     	BTRSC	STATUS,0
                                    1- 1736     	MGOTO	_00758_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1737     	.line	1100, "main.c"; 	if(++overCount > 5)
                                    1- 1738     	BANKSEL	_overCount
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 05rr                      1- 1739     	INCR	_overCount,F
                                    1- 1740     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1741     ;;unsigned compare: left >= lit (0x6=6), size=1
     00C9 2106                      1- 1742     	MOVIA	0x06
     00CA 04rr                      1- 1743     	SUBAR	_overCount,W
     00CB 0803                      1- 1744     	BTRSS	STATUS,0
                                    1- 1745     	MGOTO	_00759_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1746     	.line	1102, "main.c"; 	overCount = 5;
     00CD 2105                      1- 1747     	MOVIA	0x05
     00CE 00rr                      1- 1748     	MOVAR	_overCount
                                    1- 1749     	MGOTO	_00759_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
     00D0                           1- 1750     _00758_DS_:
                                    1- 1751     	.line	1105, "main.c"; 	else if(R_AIN3_DATA > maxOut)
                                    1- 1752     	BANKSEL	_maxOut
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 1753     	MOVR	_maxOut,W
                                    1- 1754     	BANKSEL	r0x105A
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 1755     	MOVAR	r0x105A
                                    1- 1756     	BANKSEL	r0x105B
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 02rr                      1- 1757     	CLRR	r0x105B
                                    1- 1758     	BANKSEL	_R_AIN3_DATA
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 01rr                      1- 1759     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 1760     	BANKSEL	r0x105B
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 04rr                      1- 1761     	SUBAR	r0x105B,W
     00DA 0903                      1- 1762     	BTRSS	STATUS,2
                                    1- 1763     	MGOTO	_00823_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1764     	BANKSEL	_R_AIN3_DATA
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 01rr                      1- 1765     	MOVR	_R_AIN3_DATA,W
                                    1- 1766     	BANKSEL	r0x105A
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 04rr                      1- 1767     	SUBAR	r0x105A,W
     00E0                           1- 1768     _00823_DS_:
     00E0 0C03                      1- 1769     	BTRSC	STATUS,0
                                    1- 1770     	MGOTO	_00755_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1771     	.line	1107, "main.c"; 	if(overCount > 0)
                                    1- 1772     	BANKSEL	_overCount
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 01rr                      1- 1773     	MOVR	_overCount,W
     00E4 0903                      1- 1774     	BTRSS	STATUS,2
                                    1- 1775     	.line	1109, "main.c"; 	overCount--;
     00E5 06rr                      1- 1776     	DECR	_overCount,F
                                    1- 1777     	.line	1114, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1778     	BANKSEL	_tempDuty
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 01rr                      1- 1779     	MOVR	_tempDuty,W
     00E8 00rr                      1- 1780     	SFUN	_PWM2DUTY
                                    1- 1781     	MGOTO	_00759_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
     00EA                           1- 1782     _00755_DS_:
                                    1- 1783     	.line	1118, "main.c"; 	if(overCount > 0)
                                    1- 1784     	BANKSEL	_overCount
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 01rr                      1- 1785     	MOVR	_overCount,W
     00EC 0903                      1- 1786     	BTRSS	STATUS,2
                                    1- 1787     	.line	1120, "main.c"; 	overCount--;
     00ED 06rr                      1- 1788     	DECR	_overCount,F
                                    1- 1789     	.line	1122, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1790     	BANKSEL	_maxDuty
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 01rr                      1- 1791     	MOVR	_maxDuty,W
     00F0 00rr                      1- 1792     	SFUN	_PWM2DUTY
     00F1                           1- 1793     _00759_DS_:
                                    1- 1794     	.line	1126, "main.c"; 	if(workStep > 0)
                                    1- 1795     	BANKSEL	_workStep
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 1796     	MOVR	_workStep,W
     00F3 0D03                      1- 1797     	BTRSC	STATUS,2
                                    1- 1798     	MGOTO	_00762_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1799     	.line	1127, "main.c"; 	tempLedStep = ledStep = workStep;
     00F5 01rr                      1- 1800     	MOVR	_workStep,W
                                    1- 1801     	BANKSEL	r0x105A
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 00rr                      1- 1802     	MOVAR	r0x105A
                                    1- 1803     	BANKSEL	_ledStep
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 00rr                      1- 1804     	MOVAR	_ledStep
                                    1- 1805     	BANKSEL	r0x105A
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 01rr                      1- 1806     	MOVR	r0x105A,W
                                    1- 1807     	BANKSEL	_tempLedStep
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 00rr                      1- 1808     	MOVAR	_tempLedStep
     00FE                           1- 1809     _00762_DS_:
                                    1- 1810     	.line	1128, "main.c"; 	}
                                    1- 1811     	RETURN	
     00FE 0010                      3-   40 m1      ret
                                    1- 1812     ; exit point of _checkOutA
                                    1- 1814     ;***
                                    1- 1815     ;  pBlock Stats: dbName = C
                                    1- 1816     ;***
                                    1- 1817     ;has an exit
                                    1- 1818     ;functions called:
                                    1- 1819     ;   _F_AIN4_Convert
                                    1- 1820     ;   _F_AIN4_Convert
                                    1- 1821     ;4 compiler assigned registers:
                                    1- 1822     ;   r0x105E
                                    1- 1823     ;   r0x105F
                                    1- 1824     ;   r0x1060
                                    1- 1825     ;   r0x1061
                                    1- 1826     ;; Starting pCode block
                                    1- 1827     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1829     _checkBatAD:
                                    1- 1830     ; 2 exit points
                                    1- 1831     	.line	859, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1832     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1833     	CLRR	_R_AIN4_DATA_LB
                                    1- 1834     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1835     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1836     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1837     	.line	860, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1838     	MOVIA	0x08
                                    1- 1839     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1840     	.line	861, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1841     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1842     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1843     	ANDIA	0xf0
     000A 00rr                      1- 1844     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1845     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1846     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1847     	ANDIA	0x0f
     000E 11rr                      1- 1848     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1849     	XORAR	_R_AIN4_DATA,F
                                    1- 1850     	.line	862, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1851     	MOVIA	0xf0
                                    1- 1852     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1853     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1854     	.line	863, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1855     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1856     	BANKSEL	r0x1060
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1857     	MOVAR	r0x1060
                                    1- 1858     ;;1	MOVAR	r0x105E
                                    1- 1859     ;;1	CLRR	r0x105F
                                    1- 1860     ;;99	MOVR	r0x105E,W
     0016 2100                      1- 1861     	MOVIA	0x00
                                    1- 1862     	BANKSEL	r0x1061
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1863     	MOVAR	r0x1061
                                    1- 1864     	BANKSEL	r0x1060
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1865     	MOVR	r0x1060,W
                                    1- 1866     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1867     	ADDAR	_R_AIN4_DATA,F
                                    1- 1868     	BANKSEL	r0x1061
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1869     	MOVR	r0x1061,W
     001F 0C03                      1- 1870     	BTRSC	STATUS,0
     0020 05rr                      1- 1871     	INCR	r0x1061,W
     0021 0D03                      1- 1872     	BTRSC	STATUS,2
                                    1- 1873     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1874     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1875     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1876     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1877     _00005_DS_:
                                    1- 1878     	.line	864, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1879     	BCR	STATUS,0
                                    1- 1880     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1881     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1882     	RRR	_R_AIN4_DATA,F
                                    1- 1883     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1884     	BCR	STATUS,0
     002A 13rr                      1- 1885     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1886     	RRR	_R_AIN4_DATA,F
                                    1- 1887     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1888     	BCR	STATUS,0
     002D 13rr                      1- 1889     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1890     	RRR	_R_AIN4_DATA,F
                                    1- 1891     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1892     ;;unsigned compare: left >= lit (0x641=1601), size=2
                                    1- 1893     	.line	866, "main.c"; 	if(R_AIN4_DATA > 1600)
     002F 2106                      1- 1894     	MOVIA	0x06
     0030 04rr                      1- 1895     	SUBAR	(_R_AIN4_DATA + 1),W
     0031 0903                      1- 1896     	BTRSS	STATUS,2
                                    1- 1897     	MGOTO	_00699_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 2141                      1- 1898     	MOVIA	0x41
     0034 04rr                      1- 1899     	SUBAR	_R_AIN4_DATA,W
     0035                           1- 1900     _00699_DS_:
     0035 0803                      1- 1901     	BTRSS	STATUS,0
                                    1- 1902     	MGOTO	_00623_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1903     	.line	868, "main.c"; 	protectFlag = 1;
     0037 2101                      1- 1904     	MOVIA	0x01
                                    1- 1905     	BANKSEL	_protectFlag
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1906     	MOVAR	_protectFlag
                                    1- 1907     	.line	869, "main.c"; 	PWM3DUTY = 1;
     003A 00rr                      1- 1908     	SFUN	_PWM3DUTY
                                    1- 1909     	.line	870, "main.c"; 	maxduty = 1;
                                    1- 1910     	BANKSEL	_maxduty
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 1911     	MOVAR	_maxduty
     003D                           1- 1912     _00623_DS_:
                                    1- 1913     	.line	879, "main.c"; 	if(R_AIN4_DATA > preBatValue)
                                    1- 1914     	BANKSEL	_R_AIN4_DATA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1- 1915     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1916     	BANKSEL	_preBatValue
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 04rr                      1- 1917     	SUBAR	(_preBatValue + 1),W
     0041 0903                      1- 1918     	BTRSS	STATUS,2
                                    1- 1919     	MGOTO	_00700_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1920     	BANKSEL	_R_AIN4_DATA
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 1921     	MOVR	_R_AIN4_DATA,W
                                    1- 1922     	BANKSEL	_preBatValue
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1923     	SUBAR	_preBatValue,W
     0047                           1- 1924     _00700_DS_:
     0047 0C03                      1- 1925     	BTRSC	STATUS,0
                                    1- 1926     	MGOTO	_00625_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1927     	.line	880, "main.c"; 	preBatValue = R_AIN4_DATA;
                                    1- 1928     	BANKSEL	_R_AIN4_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 1929     	MOVR	_R_AIN4_DATA,W
                                    1- 1930     	BANKSEL	_preBatValue
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 1931     	MOVAR	_preBatValue
                                    1- 1932     	BANKSEL	_R_AIN4_DATA
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 1933     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1934     	BANKSEL	_preBatValue
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 1935     	MOVAR	(_preBatValue + 1)
                                    1- 1936     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1937     ;;unsigned compare: left >= lit (0x614=1556), size=2
     0051                           1- 1938     _00625_DS_:
                                    1- 1939     	.line	881, "main.c"; 	if(R_AIN4_DATA > 1555)				//8.35
     0051 2106                      1- 1940     	MOVIA	0x06
                                    1- 1941     	BANKSEL	_R_AIN4_DATA
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 1942     	SUBAR	(_R_AIN4_DATA + 1),W
     0054 0903                      1- 1943     	BTRSS	STATUS,2
                                    1- 1944     	MGOTO	_00701_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 2114                      1- 1945     	MOVIA	0x14
     0057 04rr                      1- 1946     	SUBAR	_R_AIN4_DATA,W
     0058                           1- 1947     _00701_DS_:
     0058 0803                      1- 1948     	BTRSS	STATUS,0
                                    1- 1949     	MGOTO	_00630_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1950     	.line	883, "main.c"; 	if(++batFullTime > 2500)
                                    1- 1951     	BANKSEL	_batFullTime
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 05rr                      1- 1952     	INCR	_batFullTime,F
     005C 0D03                      1- 1953     	BTRSC	STATUS,2
     005D 05rr                      1- 1954     	INCR	(_batFullTime + 1),F
                                    1- 1955     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1956     ;;unsigned compare: left >= lit (0x9C5=2501), size=2
     005E 2109                      1- 1957     	MOVIA	0x09
     005F 04rr                      1- 1958     	SUBAR	(_batFullTime + 1),W
     0060 0903                      1- 1959     	BTRSS	STATUS,2
                                    1- 1960     	MGOTO	_00702_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
     0062 21C5                      1- 1961     	MOVIA	0xc5
     0063 04rr                      1- 1962     	SUBAR	_batFullTime,W
     0064                           1- 1963     _00702_DS_:
     0064 0803                      1- 1964     	BTRSS	STATUS,0
                                    1- 1965     	MGOTO	_00627_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1966     	.line	885, "main.c"; 	batFullTime = 2500;
     0066 21C4                      1- 1967     	MOVIA	0xc4
                                    1- 1968     	BANKSEL	_batFullTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1969     	MOVAR	_batFullTime
     0069 2109                      1- 1970     	MOVIA	0x09
     006A 00rr                      1- 1971     	MOVAR	(_batFullTime + 1)
                                    1- 1972     	.line	886, "main.c"; 	pwStep = 9;
                                    1- 1973     	BANKSEL	_pwStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 1974     	MOVAR	_pwStep
                                    1- 1975     	.line	887, "main.c"; 	return;
                                    1- 1976     	MGOTO	_00658_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E                           1- 1977     _00627_DS_:
                                    1- 1978     	.line	891, "main.c"; 	batValue = 99;
     006E 2163                      1- 1979     	MOVIA	0x63
                                    1- 1980     	BANKSEL	_batValue
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 1981     	MOVAR	_batValue
                                    1- 1982     	.line	892, "main.c"; 	pwStep = 8;
     0071 2108                      1- 1983     	MOVIA	0x08
                                    1- 1984     	BANKSEL	_pwStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1985     	MOVAR	_pwStep
                                    1- 1986     	MGOTO	_00631_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 1987     _00630_DS_:
                                    1- 1988     	.line	898, "main.c"; 	batFullTime = 0;
                                    1- 1989     	BANKSEL	_batFullTime
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 02rr                      1- 1990     	CLRR	_batFullTime
     0077 02rr                      1- 1991     	CLRR	(_batFullTime + 1)
                                    1- 1992     ;;unsigned compare: left < lit (0x609=1545), size=2
     0078                           1- 1993     _00631_DS_:
                                    1- 1994     	.line	981, "main.c"; 	if(R_AIN4_DATA >= 1545)			//8.3
     0078 2106                      1- 1995     	MOVIA	0x06
                                    1- 1996     	BANKSEL	_R_AIN4_DATA
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 04rr                      1- 1997     	SUBAR	(_R_AIN4_DATA + 1),W
     007B 0903                      1- 1998     	BTRSS	STATUS,2
                                    1- 1999     	MGOTO	_00703_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D 2109                      1- 2000     	MOVIA	0x09
     007E 04rr                      1- 2001     	SUBAR	_R_AIN4_DATA,W
     007F                           1- 2002     _00703_DS_:
     007F 0803                      1- 2003     	BTRSS	STATUS,0
                                    1- 2004     	MGOTO	_00654_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2005     	.line	983, "main.c"; 	pwStep = 8;
     0081 2108                      1- 2006     	MOVIA	0x08
                                    1- 2007     	BANKSEL	_pwStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 2008     	MOVAR	_pwStep
                                    1- 2009     	MGOTO	_00655_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2010     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2011     ;;unsigned compare: left >= lit (0x5FB=1531), size=2
     0085                           1- 2012     _00654_DS_:
                                    1- 2013     	.line	985, "main.c"; 	else if(R_AIN4_DATA > 1530)		//8.14
     0085 2105                      1- 2014     	MOVIA	0x05
                                    1- 2015     	BANKSEL	_R_AIN4_DATA
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 04rr                      1- 2016     	SUBAR	(_R_AIN4_DATA + 1),W
     0088 0903                      1- 2017     	BTRSS	STATUS,2
                                    1- 2018     	MGOTO	_00704_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A 21FB                      1- 2019     	MOVIA	0xfb
     008B 04rr                      1- 2020     	SUBAR	_R_AIN4_DATA,W
     008C                           1- 2021     _00704_DS_:
     008C 0803                      1- 2022     	BTRSS	STATUS,0
                                    1- 2023     	MGOTO	_00651_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2024     	.line	987, "main.c"; 	pwStep = 7;
     008E 2107                      1- 2025     	MOVIA	0x07
                                    1- 2026     	BANKSEL	_pwStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 2027     	MOVAR	_pwStep
                                    1- 2028     	.line	988, "main.c"; 	fullLock = 0;
                                    1- 2029     	BANKSEL	_fullLock
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 02rr                      1- 2030     	CLRR	_fullLock
                                    1- 2031     	MGOTO	_00655_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2032     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2033     ;;unsigned compare: left >= lit (0x5E2=1506), size=2
     0094                           1- 2034     _00651_DS_:
                                    1- 2035     	.line	990, "main.c"; 	else if(R_AIN4_DATA > 1505)		//8.0
     0094 2105                      1- 2036     	MOVIA	0x05
                                    1- 2037     	BANKSEL	_R_AIN4_DATA
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 04rr                      1- 2038     	SUBAR	(_R_AIN4_DATA + 1),W
     0097 0903                      1- 2039     	BTRSS	STATUS,2
                                    1- 2040     	MGOTO	_00705_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
     0099 21E2                      1- 2041     	MOVIA	0xe2
     009A 04rr                      1- 2042     	SUBAR	_R_AIN4_DATA,W
     009B                           1- 2043     _00705_DS_:
     009B 0803                      1- 2044     	BTRSS	STATUS,0
                                    1- 2045     	MGOTO	_00648_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2046     	.line	992, "main.c"; 	pwStep = 6;
     009D 2106                      1- 2047     	MOVIA	0x06
                                    1- 2048     	BANKSEL	_pwStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 2049     	MOVAR	_pwStep
                                    1- 2050     	.line	993, "main.c"; 	fullLock = 0;
                                    1- 2051     	BANKSEL	_fullLock
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 2052     	CLRR	_fullLock
                                    1- 2053     	MGOTO	_00655_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2054     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2055     ;;unsigned compare: left >= lit (0x5CE=1486), size=2
     00A3                           1- 2056     _00648_DS_:
                                    1- 2057     	.line	995, "main.c"; 	else if(R_AIN4_DATA > 1485)		//8.0
     00A3 2105                      1- 2058     	MOVIA	0x05
                                    1- 2059     	BANKSEL	_R_AIN4_DATA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 04rr                      1- 2060     	SUBAR	(_R_AIN4_DATA + 1),W
     00A6 0903                      1- 2061     	BTRSS	STATUS,2
                                    1- 2062     	MGOTO	_00706_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8 21CE                      1- 2063     	MOVIA	0xce
     00A9 04rr                      1- 2064     	SUBAR	_R_AIN4_DATA,W
     00AA                           1- 2065     _00706_DS_:
     00AA 0803                      1- 2066     	BTRSS	STATUS,0
                                    1- 2067     	MGOTO	_00645_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2068     	.line	997, "main.c"; 	pwStep = 5;
     00AC 2105                      1- 2069     	MOVIA	0x05
                                    1- 2070     	BANKSEL	_pwStep
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 00rr                      1- 2071     	MOVAR	_pwStep
                                    1- 2072     	.line	998, "main.c"; 	fullLock = 0;
                                    1- 2073     	BANKSEL	_fullLock
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 02rr                      1- 2074     	CLRR	_fullLock
                                    1- 2075     	MGOTO	_00655_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2076     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2077     ;;unsigned compare: left >= lit (0x5B0=1456), size=2
     00B2                           1- 2078     _00645_DS_:
                                    1- 2079     	.line	1000, "main.c"; 	else if(R_AIN4_DATA > 1455)		//7.89
     00B2 2105                      1- 2080     	MOVIA	0x05
                                    1- 2081     	BANKSEL	_R_AIN4_DATA
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 04rr                      1- 2082     	SUBAR	(_R_AIN4_DATA + 1),W
     00B5 0903                      1- 2083     	BTRSS	STATUS,2
                                    1- 2084     	MGOTO	_00707_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
     00B7 21B0                      1- 2085     	MOVIA	0xb0
     00B8 04rr                      1- 2086     	SUBAR	_R_AIN4_DATA,W
     00B9                           1- 2087     _00707_DS_:
     00B9 0803                      1- 2088     	BTRSS	STATUS,0
                                    1- 2089     	MGOTO	_00642_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2090     	.line	1002, "main.c"; 	pwStep = 4;
     00BB 2104                      1- 2091     	MOVIA	0x04
                                    1- 2092     	BANKSEL	_pwStep
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 2093     	MOVAR	_pwStep
                                    1- 2094     	.line	1003, "main.c"; 	fullLock = 0;
                                    1- 2095     	BANKSEL	_fullLock
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 02rr                      1- 2096     	CLRR	_fullLock
                                    1- 2097     	MGOTO	_00655_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2098     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2099     ;;unsigned compare: left >= lit (0x583=1411), size=2
     00C1                           1- 2100     _00642_DS_:
                                    1- 2101     	.line	1005, "main.c"; 	else if(R_AIN4_DATA > 1410)		//7.73
     00C1 2105                      1- 2102     	MOVIA	0x05
                                    1- 2103     	BANKSEL	_R_AIN4_DATA
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 04rr                      1- 2104     	SUBAR	(_R_AIN4_DATA + 1),W
     00C4 0903                      1- 2105     	BTRSS	STATUS,2
                                    1- 2106     	MGOTO	_00708_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6 2183                      1- 2107     	MOVIA	0x83
     00C7 04rr                      1- 2108     	SUBAR	_R_AIN4_DATA,W
     00C8                           1- 2109     _00708_DS_:
     00C8 0803                      1- 2110     	BTRSS	STATUS,0
                                    1- 2111     	MGOTO	_00639_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2112     	.line	1007, "main.c"; 	pwStep = 3;
     00CA 2103                      1- 2113     	MOVIA	0x03
                                    1- 2114     	BANKSEL	_pwStep
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 00rr                      1- 2115     	MOVAR	_pwStep
                                    1- 2116     	.line	1008, "main.c"; 	fullLock = 0;
                                    1- 2117     	BANKSEL	_fullLock
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 02rr                      1- 2118     	CLRR	_fullLock
                                    1- 2119     	MGOTO	_00655_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2120     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2121     ;;unsigned compare: left >= lit (0x551=1361), size=2
     00D0                           1- 2122     _00639_DS_:
                                    1- 2123     	.line	1010, "main.c"; 	else if(R_AIN4_DATA > 1360)		//7.41
     00D0 2105                      1- 2124     	MOVIA	0x05
                                    1- 2125     	BANKSEL	_R_AIN4_DATA
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 04rr                      1- 2126     	SUBAR	(_R_AIN4_DATA + 1),W
     00D3 0903                      1- 2127     	BTRSS	STATUS,2
                                    1- 2128     	MGOTO	_00709_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
     00D5 2151                      1- 2129     	MOVIA	0x51
     00D6 04rr                      1- 2130     	SUBAR	_R_AIN4_DATA,W
     00D7                           1- 2131     _00709_DS_:
     00D7 0803                      1- 2132     	BTRSS	STATUS,0
                                    1- 2133     	MGOTO	_00636_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2134     	.line	1012, "main.c"; 	pwStep = 2;
     00D9 2102                      1- 2135     	MOVIA	0x02
                                    1- 2136     	BANKSEL	_pwStep
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 2137     	MOVAR	_pwStep
                                    1- 2138     	.line	1013, "main.c"; 	fullLock = 0;
                                    1- 2139     	BANKSEL	_fullLock
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 02rr                      1- 2140     	CLRR	_fullLock
                                    1- 2141     	MGOTO	_00655_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2142     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2143     ;;unsigned compare: left >= lit (0x4F9=1273), size=2
     00DF                           1- 2144     _00636_DS_:
                                    1- 2145     	.line	1015, "main.c"; 	else if(R_AIN4_DATA > 1272)  //6.83
     00DF 2104                      1- 2146     	MOVIA	0x04
                                    1- 2147     	BANKSEL	_R_AIN4_DATA
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 04rr                      1- 2148     	SUBAR	(_R_AIN4_DATA + 1),W
     00E2 0903                      1- 2149     	BTRSS	STATUS,2
                                    1- 2150     	MGOTO	_00710_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
     00E4 21F9                      1- 2151     	MOVIA	0xf9
     00E5 04rr                      1- 2152     	SUBAR	_R_AIN4_DATA,W
     00E6                           1- 2153     _00710_DS_:
     00E6 0803                      1- 2154     	BTRSS	STATUS,0
                                    1- 2155     	MGOTO	_00633_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2156     	.line	1016, "main.c"; 	pwStep = 1;
     00E8 2101                      1- 2157     	MOVIA	0x01
                                    1- 2158     	BANKSEL	_pwStep
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 00rr                      1- 2159     	MOVAR	_pwStep
                                    1- 2160     	MGOTO	_00655_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
     00EC                           1- 2161     _00633_DS_:
                                    1- 2162     	.line	1018, "main.c"; 	pwStep = 0;
                                    1- 2163     	BANKSEL	_pwStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 02rr                      1- 2164     	CLRR	_pwStep
     00EE                           1- 2165     _00655_DS_:
                                    1- 2166     	.line	1020, "main.c"; 	if(workStep > 0)
                                    1- 2167     	BANKSEL	_workStep
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 01rr                      1- 2168     	MOVR	_workStep,W
     00F0 0D03                      1- 2169     	BTRSC	STATUS,2
                                    1- 2170     	MGOTO	_00658_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2171     	.line	1021, "main.c"; 	ledStep = workStep;
     00F2 01rr                      1- 2172     	MOVR	_workStep,W
                                    1- 2173     	BANKSEL	_ledStep
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 00rr                      1- 2174     	MOVAR	_ledStep
     00F5                           1- 2175     _00658_DS_:
                                    1- 2176     	.line	1023, "main.c"; 	}
                                    1- 2177     	RETURN	
     00F5 0010                      3-   40 m1      ret
                                    1- 2178     ; exit point of _checkBatAD
                                    1- 2180     ;***
                                    1- 2181     ;  pBlock Stats: dbName = C
                                    1- 2182     ;***
                                    1- 2183     ;has an exit
                                    1- 2184     ;functions called:
                                    1- 2185     ;   _delay
                                    1- 2186     ;   _delay
                                    1- 2187     ;; Starting pCode block
                                    1- 2188     .segment "code"; module=main, function=_initAD
     0000                           1- 2190     _initAD:
                                    1- 2191     ; 2 exit points
                                    1- 2192     	.line	834, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2193     	MOVIA	0x84
     0001 00rr                      1- 2194     	MOVAR	_ADMD
                                    1- 2195     	.line	839, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2196     	CLRR	_ADVREFH
                                    1- 2197     	.line	844, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2198     	MOVIA	0x10
     0004 00rr                      1- 2199     	MOVAR	_ADR
                                    1- 2200     	.line	846, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2201     	MOVIA	0x03
     0006 00rr                      1- 2202     	MOVAR	_ADCR
                                    1- 2203     	.line	849, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2204     	BSR	_ADMDbits,4
                                    1- 2205     	.line	850, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2206     	MOVIA	0x64
                                    1- 2207     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2208     	.line	853, "main.c"; 	}
                                    1- 2209     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2210     ; exit point of _initAD
                                    1- 2212     ;***
                                    1- 2213     ;  pBlock Stats: dbName = C
                                    1- 2214     ;***
                                    1- 2215     ;has an exit
                                    1- 2216     ;2 compiler assigned registers:
                                    1- 2217     ;   r0x1046
                                    1- 2218     ;   r0x1047
                                    1- 2219     ;; Starting pCode block
                                    1- 2220     .segment "code"; module=main, function=_delay
                                    1- 2222     ;local variable name mapping:
     0000                           1- 2225     _delay:
                                    1- 2226     ; 2 exit points
                                    1- 2227     	.line	824, "main.c"; 	void delay(u8t time)
                                    1- 2228     	BANKSEL	r0x1046
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2229     	MOVAR	r0x1046
                                    1- 2230     	.line	826, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2231     	BANKSEL	r0x1047
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2232     	CLRR	r0x1047
     0004                           1- 2233     _00611_DS_:
                                    1- 2234     	BANKSEL	r0x1046
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2235     	MOVR	r0x1046,W
                                    1- 2236     	BANKSEL	r0x1047
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2237     	SUBAR	r0x1047,W
     0008 0C03                      1- 2238     	BTRSC	STATUS,0
                                    1- 2239     	MGOTO	_00613_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2240     	.line	827, "main.c"; 	NOP();
     000A 0000                      1- 2241     	nop
                                    1- 2242     	.line	826, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2243     	BANKSEL	r0x1047
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2244     	INCR	r0x1047,F
                                    1- 2245     	MGOTO	_00611_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2246     _00613_DS_:
                                    1- 2247     	.line	828, "main.c"; 	}
                                    1- 2248     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2249     ; exit point of _delay
                                    1- 2251     ;***
                                    1- 2252     ;  pBlock Stats: dbName = C
                                    1- 2253     ;***
                                    1- 2254     ;has an exit
                                    1- 2255     ;functions called:
                                    1- 2256     ;   _checkBatAD
                                    1- 2257     ;   _pwmStop
                                    1- 2258     ;   _pwm1Stop
                                    1- 2259     ;   _pwm1Stop
                                    1- 2260     ;   _pwm1Init
                                    1- 2261     ;   _pwm1Stop
                                    1- 2262     ;   _powerOff
                                    1- 2263     ;   _checkBatAD
                                    1- 2264     ;   _pwmStop
                                    1- 2265     ;   _pwm1Stop
                                    1- 2266     ;   _pwm1Stop
                                    1- 2267     ;   _pwm1Init
                                    1- 2268     ;   _pwm1Stop
                                    1- 2269     ;   _powerOff
                                    1- 2270     ;2 compiler assigned registers:
                                    1- 2271     ;   r0x1063
                                    1- 2272     ;   r0x1064
                                    1- 2273     ;; Starting pCode block
                                    1- 2274     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2276     _chrgCtr:
                                    1- 2277     ; 2 exit points
                                    1- 2278     	.line	639, "main.c"; 	if(firstChrgTime > 0)
                                    1- 2279     	BANKSEL	_firstChrgTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2280     	MOVR	_firstChrgTime,W
     0002 0903                      1- 2281     	BTRSS	STATUS,2
                                    1- 2282     	.line	641, "main.c"; 	firstChrgTime--;
     0003 06rr                      1- 2283     	DECR	_firstChrgTime,F
                                    1- 2284     	.line	643, "main.c"; 	if(PORTA & 0x20)
                                    1- 2285     	BANKSEL	_PORTA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 0Arr                      1- 2286     	BTRSS	_PORTA,5
                                    1- 2287     	MGOTO	_00504_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2288     	.line	646, "main.c"; 	lockStart = 0;
                                    1- 2289     	BANKSEL	_lockStart
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 2290     	CLRR	_lockStart
                                    1- 2291     	.line	647, "main.c"; 	if(chrgFlag == 0)
                                    1- 2292     	BANKSEL	_chrgFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 2293     	MOVR	_chrgFlag,W
     000B 0903                      1- 2294     	BTRSS	STATUS,2
                                    1- 2295     	MGOTO	_00446_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2296     	.line	649, "main.c"; 	firstChrgTime = 100;
     000D 2164                      1- 2297     	MOVIA	0x64
                                    1- 2298     	BANKSEL	_firstChrgTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 2299     	MOVAR	_firstChrgTime
                                    1- 2300     	.line	650, "main.c"; 	batFullTime = 0;
                                    1- 2301     	BANKSEL	_batFullTime
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2302     	CLRR	_batFullTime
     0012 02rr                      1- 2303     	CLRR	(_batFullTime + 1)
                                    1- 2304     	.line	651, "main.c"; 	preBatValue = 0;
                                    1- 2305     	BANKSEL	_preBatValue
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2306     	CLRR	_preBatValue
     0015 02rr                      1- 2307     	CLRR	(_preBatValue + 1)
                                    1- 2308     	.line	652, "main.c"; 	pwStep = 0;
                                    1- 2309     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 2310     	CLRR	_pwStep
                                    1- 2311     	.line	653, "main.c"; 	checkBatAD();
                                    1- 2312     	MCALL	_checkBatAD
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2313     	.line	654, "main.c"; 	preChrgBatValue = R_AIN4_DATA;
                                    1- 2314     	BANKSEL	_R_AIN4_DATA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2315     	MOVR	_R_AIN4_DATA,W
                                    1- 2316     	BANKSEL	_preChrgBatValue
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2317     	MOVAR	_preChrgBatValue
                                    1- 2318     	BANKSEL	_R_AIN4_DATA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2319     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 2320     	BANKSEL	_preChrgBatValue
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 2321     	MOVAR	(_preChrgBatValue + 1)
                                    1- 2322     	.line	655, "main.c"; 	ledLock = 0;
                                    1- 2323     	BANKSEL	_ledLock
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1- 2324     	CLRR	_ledLock
                                    1- 2325     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2326     ;;unsigned compare: left >= lit (0x60A=1546), size=2
                                    1- 2327     	.line	656, "main.c"; 	if(R_AIN4_DATA > 1545)
     0023 2106                      1- 2328     	MOVIA	0x06
                                    1- 2329     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 04rr                      1- 2330     	SUBAR	(_R_AIN4_DATA + 1),W
     0026 0903                      1- 2331     	BTRSS	STATUS,2
                                    1- 2332     	MGOTO	_00589_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028 210A                      1- 2333     	MOVIA	0x0a
     0029 04rr                      1- 2334     	SUBAR	_R_AIN4_DATA,W
     002A                           1- 2335     _00589_DS_:
     002A 0803                      1- 2336     	BTRSS	STATUS,0
                                    1- 2337     	MGOTO	_00443_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2338     	.line	659, "main.c"; 	fullLock = 1;
     002C 2101                      1- 2339     	MOVIA	0x01
                                    1- 2340     	BANKSEL	_fullLock
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2341     	MOVAR	_fullLock
                                    1- 2342     	MGOTO	_00444_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 2343     _00443_DS_:
                                    1- 2344     	.line	663, "main.c"; 	fullLock = 0;
                                    1- 2345     	BANKSEL	_fullLock
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1- 2346     	CLRR	_fullLock
     0032                           1- 2347     _00444_DS_:
                                    1- 2348     	.line	665, "main.c"; 	chrgFlag = 1;
     0032 2101                      1- 2349     	MOVIA	0x01
                                    1- 2350     	BANKSEL	_chrgFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2351     	MOVAR	_chrgFlag
     0035                           1- 2352     _00446_DS_:
                                    1- 2353     	.line	668, "main.c"; 	workStep = 0;
                                    1- 2354     	BANKSEL	_workStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 2355     	CLRR	_workStep
                                    1- 2356     	.line	669, "main.c"; 	ledLightTime = 0;
                                    1- 2357     	BANKSEL	_ledLightTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1- 2358     	CLRR	_ledLightTime
                                    1- 2359     	.line	670, "main.c"; 	pwmStop();
                                    1- 2360     	MCALL	_pwmStop
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2361     	.line	671, "main.c"; 	if(fullLock || pwStep == 9)
                                    1- 2362     	BANKSEL	_fullLock
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2363     	MOVR	_fullLock,W
     003C 0903                      1- 2364     	BTRSS	STATUS,2
                                    1- 2365     	MGOTO	_00485_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2366     	BANKSEL	_pwStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 2367     	MOVR	_pwStep,W
     0040 2409                      1- 2368     	XORIA	0x09
     0041 0903                      1- 2369     	BTRSS	STATUS,2
                                    1- 2370     	MGOTO	_00486_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 2371     _00485_DS_:
                                    1- 2372     	.line	674, "main.c"; 	ledStep = 8;
     0043 2108                      1- 2373     	MOVIA	0x08
                                    1- 2374     	BANKSEL	_ledStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2375     	MOVAR	_ledStep
                                    1- 2376     	.line	675, "main.c"; 	PORTA |= 0x01;		//打开充满提示灯
                                    1- 2377     	BANKSEL	_PORTA
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 18rr                      1- 2378     	BSR	_PORTA,0
                                    1- 2379     	.line	676, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
     0048 1Crr                      1- 2380     	BCR	_PORTA,1
                                    1- 2381     	.line	677, "main.c"; 	pwm1Stop();
                                    1- 2382     	MCALL	_pwm1Stop
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2383     	.line	678, "main.c"; 	fullLock = 1;
     004A 2101                      1- 2384     	MOVIA	0x01
                                    1- 2385     	BANKSEL	_fullLock
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2386     	MOVAR	_fullLock
                                    1- 2387     	MGOTO	_00506_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2388     _00486_DS_:
                                    1- 2389     	.line	683, "main.c"; 	fullLockCount = 0;
                                    1- 2390     	BANKSEL	_fullLockCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 2391     	CLRR	_fullLockCount
                                    1- 2392     	.line	685, "main.c"; 	if(ledLock < pwStep)
                                    1- 2393     	BANKSEL	_pwStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1- 2394     	MOVR	_pwStep,W
                                    1- 2395     	BANKSEL	_ledLock
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 2396     	SUBAR	_ledLock,W
     0054 0C03                      1- 2397     	BTRSC	STATUS,0
                                    1- 2398     	MGOTO	_00453_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2399     	.line	687, "main.c"; 	if(++countLedLock > 10000)
                                    1- 2400     	BANKSEL	_countLedLock
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1- 2401     	INCR	_countLedLock,F
     0058 0D03                      1- 2402     	BTRSC	STATUS,2
     0059 05rr                      1- 2403     	INCR	(_countLedLock + 1),F
                                    1- 2404     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2405     ;;unsigned compare: left >= lit (0x2711=10001), size=2
     005A 2127                      1- 2406     	MOVIA	0x27
     005B 04rr                      1- 2407     	SUBAR	(_countLedLock + 1),W
     005C 0903                      1- 2408     	BTRSS	STATUS,2
                                    1- 2409     	MGOTO	_00591_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E 2111                      1- 2410     	MOVIA	0x11
     005F 04rr                      1- 2411     	SUBAR	_countLedLock,W
     0060                           1- 2412     _00591_DS_:
     0060 0803                      1- 2413     	BTRSS	STATUS,0
                                    1- 2414     	MGOTO	_00454_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2415     	.line	689, "main.c"; 	countLedLock = 0;
                                    1- 2416     	BANKSEL	_countLedLock
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 2417     	CLRR	_countLedLock
     0064 02rr                      1- 2418     	CLRR	(_countLedLock + 1)
                                    1- 2419     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 2420     	.line	690, "main.c"; 	if(pwStep < 8)
     0065 2108                      1- 2421     	MOVIA	0x08
                                    1- 2422     	BANKSEL	_pwStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 2423     	SUBAR	_pwStep,W
     0068 0C03                      1- 2424     	BTRSC	STATUS,0
                                    1- 2425     	MGOTO	_00448_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2426     	.line	692, "main.c"; 	ledLock = pwStep;
     006A 01rr                      1- 2427     	MOVR	_pwStep,W
                                    1- 2428     	BANKSEL	_ledLock
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 2429     	MOVAR	_ledLock
                                    1- 2430     	MGOTO	_00454_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E                           1- 2431     _00448_DS_:
                                    1- 2432     	.line	696, "main.c"; 	ledLock = 7;
     006E 2107                      1- 2433     	MOVIA	0x07
                                    1- 2434     	BANKSEL	_ledLock
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 2435     	MOVAR	_ledLock
                                    1- 2436     	MGOTO	_00454_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 2437     _00453_DS_:
                                    1- 2438     	.line	702, "main.c"; 	countLedLock = 0;
                                    1- 2439     	BANKSEL	_countLedLock
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 02rr                      1- 2440     	CLRR	_countLedLock
     0074 02rr                      1- 2441     	CLRR	(_countLedLock + 1)
     0075                           1- 2442     _00454_DS_:
                                    1- 2443     	.line	704, "main.c"; 	if(ledLock == 0)
                                    1- 2444     	BANKSEL	_ledLock
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 2445     	MOVR	_ledLock,W
     0077 0903                      1- 2446     	BTRSS	STATUS,2
                                    1- 2447     	MGOTO	_00459_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2448     	.line	706, "main.c"; 	ledStep = pwStep;
                                    1- 2449     	BANKSEL	_pwStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 2450     	MOVR	_pwStep,W
                                    1- 2451     	BANKSEL	_ledStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 2452     	MOVAR	_ledStep
                                    1- 2453     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 2454     	.line	707, "main.c"; 	if(pwStep < 6)
     007D 2106                      1- 2455     	MOVIA	0x06
                                    1- 2456     	BANKSEL	_pwStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 04rr                      1- 2457     	SUBAR	_pwStep,W
     0080 0C03                      1- 2458     	BTRSC	STATUS,0
                                    1- 2459     	MGOTO	_00456_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2460     	.line	709, "main.c"; 	ledLock = ledStep + 1;
                                    1- 2461     	BANKSEL	_ledStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 05rr                      1- 2462     	INCR	_ledStep,W
                                    1- 2463     	BANKSEL	_ledLock
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 00rr                      1- 2464     	MOVAR	_ledLock
                                    1- 2465     	MGOTO	_00460_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
     0087                           1- 2466     _00456_DS_:
                                    1- 2467     	.line	713, "main.c"; 	ledLock = 7;
     0087 2107                      1- 2468     	MOVIA	0x07
                                    1- 2469     	BANKSEL	_ledLock
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 2470     	MOVAR	_ledLock
                                    1- 2471     	MGOTO	_00460_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
     008B                           1- 2472     _00459_DS_:
                                    1- 2473     	.line	717, "main.c"; 	ledStep = ledLock;
                                    1- 2474     	BANKSEL	_ledLock
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1- 2475     	MOVR	_ledLock,W
                                    1- 2476     	BANKSEL	_ledStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 2477     	MOVAR	_ledStep
     008F                           1- 2478     _00460_DS_:
                                    1- 2479     	.line	718, "main.c"; 	PORTA &= 0xFE;		//关闭充满提示灯
                                    1- 2480     	BANKSEL	_PORTA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 1Crr                      1- 2481     	BCR	_PORTA,0
                                    1- 2482     ;;unsigned compare: left < lit (0x24=36), size=1
                                    1- 2483     	.line	720, "main.c"; 	if(count500ms < 36)
     0091 2124                      1- 2484     	MOVIA	0x24
                                    1- 2485     	BANKSEL	_count500ms
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 04rr                      1- 2486     	SUBAR	_count500ms,W
     0094 0C03                      1- 2487     	BTRSC	STATUS,0
                                    1- 2488     	MGOTO	_00462_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2489     	.line	722, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2490     	BANKSEL	_PORTA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 18rr                      1- 2491     	BSR	_PORTA,1
                                    1- 2492     	MGOTO	_00463_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
     0099                           1- 2493     _00462_DS_:
                                    1- 2494     	.line	726, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2495     	BANKSEL	_PORTA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 1Crr                      1- 2496     	BCR	_PORTA,1
     009B                           1- 2497     _00463_DS_:
                                    1- 2498     	.line	728, "main.c"; 	if(protectFlag)
                                    1- 2499     	BANKSEL	_protectFlag
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 2500     	MOVR	_protectFlag,W
     009D 0D03                      1- 2501     	BTRSC	STATUS,2
                                    1- 2502     	MGOTO	_00465_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2503     	.line	730, "main.c"; 	pwm1Stop();
                                    1- 2504     	MCALL	_pwm1Stop
     009F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2505     	.line	731, "main.c"; 	return;
                                    1- 2506     	MGOTO	_00506_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2507     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2508     ;;unsigned compare: left >= lit (0x6=6), size=1
     00A1                           1- 2509     _00465_DS_:
                                    1- 2510     	.line	734, "main.c"; 	if(count200ms > 5)
     00A1 2106                      1- 2511     	MOVIA	0x06
                                    1- 2512     	BANKSEL	_count200ms
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 04rr                      1- 2513     	SUBAR	_count200ms,W
     00A4 0803                      1- 2514     	BTRSS	STATUS,0
                                    1- 2515     	MGOTO	_00506_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2516     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2517     ;;unsigned compare: left >= lit (0x1A=26), size=2
                                    1- 2518     	.line	736, "main.c"; 	if(R_AIN3_DATA <= 25 && R_AIN3_DATA >=subMin)
     00A6 2100                      1- 2519     	MOVIA	0x00
                                    1- 2520     	BANKSEL	_R_AIN3_DATA
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 04rr                      1- 2521     	SUBAR	(_R_AIN3_DATA + 1),W
     00A9 0903                      1- 2522     	BTRSS	STATUS,2
                                    1- 2523     	MGOTO	_00596_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
     00AB 211A                      1- 2524     	MOVIA	0x1a
     00AC 04rr                      1- 2525     	SUBAR	_R_AIN3_DATA,W
     00AD                           1- 2526     _00596_DS_:
     00AD 0C03                      1- 2527     	BTRSC	STATUS,0
                                    1- 2528     	MGOTO	_00467_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2529     	BANKSEL	_subMin
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 01rr                      1- 2530     	MOVR	_subMin,W
                                    1- 2531     	BANKSEL	r0x1063
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 2532     	MOVAR	r0x1063
                                    1- 2533     ;;113	CLRR	r0x1064
     00B3 2100                      1- 2534     	MOVIA	0x00
                                    1- 2535     	BANKSEL	_R_AIN3_DATA
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 04rr                      1- 2536     	SUBAR	(_R_AIN3_DATA + 1),W
     00B6 0903                      1- 2537     	BTRSS	STATUS,2
                                    1- 2538     	MGOTO	_00597_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2539     	BANKSEL	r0x1063
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 01rr                      1- 2540     	MOVR	r0x1063,W
                                    1- 2541     	BANKSEL	_R_AIN3_DATA
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 04rr                      1- 2542     	SUBAR	_R_AIN3_DATA,W
     00BC                           1- 2543     _00597_DS_:
     00BC 0803                      1- 2544     	BTRSS	STATUS,0
                                    1- 2545     	MGOTO	_00467_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2546     	.line	738, "main.c"; 	addTime = subTime = 0;
                                    1- 2547     	BANKSEL	_subTime
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 02rr                      1- 2548     	CLRR	_subTime
                                    1- 2549     	BANKSEL	_addTime
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 02rr                      1- 2550     	CLRR	_addTime
                                    1- 2551     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2552     ;;unsigned compare: left >= lit (0x1A=26), size=2
     00C2                           1- 2553     _00467_DS_:
                                    1- 2554     	.line	740, "main.c"; 	if(R_AIN3_DATA > 25)
     00C2 2100                      1- 2555     	MOVIA	0x00
                                    1- 2556     	BANKSEL	_R_AIN3_DATA
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 04rr                      1- 2557     	SUBAR	(_R_AIN3_DATA + 1),W
     00C5 0903                      1- 2558     	BTRSS	STATUS,2
                                    1- 2559     	MGOTO	_00598_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
     00C7 211A                      1- 2560     	MOVIA	0x1a
     00C8 04rr                      1- 2561     	SUBAR	_R_AIN3_DATA,W
     00C9                           1- 2562     _00598_DS_:
     00C9 0803                      1- 2563     	BTRSS	STATUS,0
                                    1- 2564     	MGOTO	_00477_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2565     	.line	742, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 2566     	BANKSEL	_subTime
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 05rr                      1- 2567     	INCR	_subTime,F
     00CD 01rr                      1- 2568     	MOVR	_subTime,W
                                    1- 2569     	BANKSEL	_chrgWaitTime
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 04rr                      1- 2570     	SUBAR	_chrgWaitTime,W
     00D0 0C03                      1- 2571     	BTRSC	STATUS,0
                                    1- 2572     	MGOTO	_00470_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2573     	.line	744, "main.c"; 	addFlag = 1;
     00D2 2101                      1- 2574     	MOVIA	0x01
                                    1- 2575     	BANKSEL	_addFlag
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 2576     	MOVAR	_addFlag
                                    1- 2577     	.line	745, "main.c"; 	maxduty = maxduty - 1;
                                    1- 2578     	BANKSEL	_maxduty
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 06rr                      1- 2579     	DECR	_maxduty,F
                                    1- 2580     	.line	746, "main.c"; 	subTime = 0;
                                    1- 2581     	BANKSEL	_subTime
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 02rr                      1- 2582     	CLRR	_subTime
                                    1- 2583     	.line	747, "main.c"; 	subMin = 24;
     00D9 2118                      1- 2584     	MOVIA	0x18
                                    1- 2585     	BANKSEL	_subMin
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 2586     	MOVAR	_subMin
                                    1- 2587     	.line	748, "main.c"; 	chrgWaitTime = 250;
     00DC 21FA                      1- 2588     	MOVIA	0xfa
                                    1- 2589     	BANKSEL	_chrgWaitTime
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 00rr                      1- 2590     	MOVAR	_chrgWaitTime
     00DF                           1- 2591     _00470_DS_:
                                    1- 2592     	.line	750, "main.c"; 	addTime = 0;
                                    1- 2593     	BANKSEL	_addTime
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 02rr                      1- 2594     	CLRR	_addTime
                                    1- 2595     	MGOTO	_00478_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
     00E2                           1- 2596     _00477_DS_:
                                    1- 2597     	.line	752, "main.c"; 	else if(R_AIN3_DATA < subMin || addFlag == 0)
                                    1- 2598     	BANKSEL	_subMin
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 01rr                      1- 2599     	MOVR	_subMin,W
                                    1- 2600     	BANKSEL	r0x1063
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 2601     	MOVAR	r0x1063
                                    1- 2602     ;;112	CLRR	r0x1064
     00E6 2100                      1- 2603     	MOVIA	0x00
                                    1- 2604     	BANKSEL	_R_AIN3_DATA
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 04rr                      1- 2605     	SUBAR	(_R_AIN3_DATA + 1),W
     00E9 0903                      1- 2606     	BTRSS	STATUS,2
                                    1- 2607     	MGOTO	_00600_DS_
     00EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2608     	BANKSEL	r0x1063
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 01rr                      1- 2609     	MOVR	r0x1063,W
                                    1- 2610     	BANKSEL	_R_AIN3_DATA
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 04rr                      1- 2611     	SUBAR	_R_AIN3_DATA,W
     00EF                           1- 2612     _00600_DS_:
     00EF 0803                      1- 2613     	BTRSS	STATUS,0
                                    1- 2614     	MGOTO	_00473_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2615     	BANKSEL	_addFlag
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 2616     	MOVR	_addFlag,W
     00F3 0903                      1- 2617     	BTRSS	STATUS,2
                                    1- 2618     	MGOTO	_00478_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
     00F5                           1- 2619     _00473_DS_:
                                    1- 2620     	.line	754, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 2621     	BANKSEL	_addTime
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 05rr                      1- 2622     	INCR	_addTime,F
     00F7 01rr                      1- 2623     	MOVR	_addTime,W
                                    1- 2624     	BANKSEL	_chrgWaitTime
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 04rr                      1- 2625     	SUBAR	_chrgWaitTime,W
     00FA 0C03                      1- 2626     	BTRSC	STATUS,0
                                    1- 2627     	MGOTO	_00472_DS_
     00FB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2628     	.line	756, "main.c"; 	maxduty = maxduty + 1;
                                    1- 2629     	BANKSEL	_maxduty
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 05rr                      1- 2630     	INCR	_maxduty,F
                                    1- 2631     	.line	757, "main.c"; 	addTime = 0;
                                    1- 2632     	BANKSEL	_addTime
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 02rr                      1- 2633     	CLRR	_addTime
     0100                           1- 2634     _00472_DS_:
                                    1- 2635     	.line	759, "main.c"; 	subTime = 0;
                                    1- 2636     	BANKSEL	_subTime
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 02rr                      1- 2637     	CLRR	_subTime
                                    1- 2638     ;;unsigned compare: left < lit (0x1=1), size=1
     0102                           1- 2639     _00478_DS_:
                                    1- 2640     	.line	761, "main.c"; 	if(maxduty < 1)
     0102 2101                      1- 2641     	MOVIA	0x01
                                    1- 2642     	BANKSEL	_maxduty
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 04rr                      1- 2643     	SUBAR	_maxduty,W
     0105 0C03                      1- 2644     	BTRSC	STATUS,0
                                    1- 2645     	MGOTO	_00480_DS_
     0106 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2646     	.line	762, "main.c"; 	maxduty = 1;
     0107 2101                      1- 2647     	MOVIA	0x01
     0108 00rr                      1- 2648     	MOVAR	_maxduty
                                    1- 2649     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2650     ;;unsigned compare: left >= lit (0x21=33), size=1
     0109                           1- 2651     _00480_DS_:
                                    1- 2652     	.line	763, "main.c"; 	if(maxduty > 32)
     0109 2121                      1- 2653     	MOVIA	0x21
                                    1- 2654     	BANKSEL	_maxduty
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 04rr                      1- 2655     	SUBAR	_maxduty,W
     010C 0803                      1- 2656     	BTRSS	STATUS,0
                                    1- 2657     	MGOTO	_00482_DS_
     010D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2658     	.line	764, "main.c"; 	maxduty = 32;
     010E 2120                      1- 2659     	MOVIA	0x20
     010F 00rr                      1- 2660     	MOVAR	_maxduty
     0110                           1- 2661     _00482_DS_:
                                    1- 2662     	.line	765, "main.c"; 	PWM3DUTY = maxduty;
                                    1- 2663     	BANKSEL	_maxduty
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 01rr                      1- 2664     	MOVR	_maxduty,W
     0112 00rr                      1- 2665     	SFUN	_PWM3DUTY
                                    1- 2666     	.line	766, "main.c"; 	pwm1Init();			
                                    1- 2667     	MCALL	_pwm1Init
     0113 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2668     	MGOTO	_00506_DS_
     0114 3rrr                      3-   63 m1      LGOTO rom_address
     0115                           1- 2669     _00504_DS_:
                                    1- 2670     	.line	775, "main.c"; 	protectFlag = 0;
                                    1- 2671     	BANKSEL	_protectFlag
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 02rr                      1- 2672     	CLRR	_protectFlag
                                    1- 2673     	.line	776, "main.c"; 	addFlag = 0;
                                    1- 2674     	BANKSEL	_addFlag
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 02rr                      1- 2675     	CLRR	_addFlag
                                    1- 2676     	.line	777, "main.c"; 	chrgWaitTime = 10;
     0119 210A                      1- 2677     	MOVIA	0x0a
                                    1- 2678     	BANKSEL	_chrgWaitTime
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 00rr                      1- 2679     	MOVAR	_chrgWaitTime
                                    1- 2680     	.line	778, "main.c"; 	subMin = 24;
     011C 2118                      1- 2681     	MOVIA	0x18
                                    1- 2682     	BANKSEL	_subMin
     011D rrrr                      3-  110 m1      .banksel ram_address
     011E 00rr                      1- 2683     	MOVAR	_subMin
                                    1- 2684     	.line	779, "main.c"; 	maxduty = 0;
                                    1- 2685     	BANKSEL	_maxduty
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 02rr                      1- 2686     	CLRR	_maxduty
                                    1- 2687     	.line	780, "main.c"; 	pwm1Stop();
                                    1- 2688     	MCALL	_pwm1Stop
     0121 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2689     	.line	781, "main.c"; 	fullLock = 0;
                                    1- 2690     	BANKSEL	_fullLock
     0122 rrrr                      3-  110 m1      .banksel ram_address
     0123 02rr                      1- 2691     	CLRR	_fullLock
                                    1- 2692     	.line	782, "main.c"; 	fullLockCount = 0;
                                    1- 2693     	BANKSEL	_fullLockCount
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 02rr                      1- 2694     	CLRR	_fullLockCount
                                    1- 2695     	.line	783, "main.c"; 	lockLedStep = 0;
                                    1- 2696     	BANKSEL	_lockLedStep
     0126 rrrr                      3-  110 m1      .banksel ram_address
     0127 02rr                      1- 2697     	CLRR	_lockLedStep
                                    1- 2698     	.line	784, "main.c"; 	if(workStep > 0 && pwStep == 0)
                                    1- 2699     	BANKSEL	_workStep
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 01rr                      1- 2700     	MOVR	_workStep,W
     012A 0D03                      1- 2701     	BTRSC	STATUS,2
                                    1- 2702     	MGOTO	_00492_DS_
     012B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2703     	BANKSEL	_pwStep
     012C rrrr                      3-  110 m1      .banksel ram_address
     012D 01rr                      1- 2704     	MOVR	_pwStep,W
     012E 0903                      1- 2705     	BTRSS	STATUS,2
                                    1- 2706     	MGOTO	_00492_DS_
     012F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2707     	.line	786, "main.c"; 	if(++lowBat > 6000)
                                    1- 2708     	BANKSEL	_lowBat
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 05rr                      1- 2709     	INCR	_lowBat,F
     0132 0D03                      1- 2710     	BTRSC	STATUS,2
     0133 05rr                      1- 2711     	INCR	(_lowBat + 1),F
                                    1- 2712     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2713     ;;unsigned compare: left >= lit (0x1771=6001), size=2
     0134 2117                      1- 2714     	MOVIA	0x17
     0135 04rr                      1- 2715     	SUBAR	(_lowBat + 1),W
     0136 0903                      1- 2716     	BTRSS	STATUS,2
                                    1- 2717     	MGOTO	_00604_DS_
     0137 3rrr                      3-   63 m1      LGOTO rom_address
     0138 2171                      1- 2718     	MOVIA	0x71
     0139 04rr                      1- 2719     	SUBAR	_lowBat,W
     013A                           1- 2720     _00604_DS_:
     013A 0803                      1- 2721     	BTRSS	STATUS,0
                                    1- 2722     	MGOTO	_00493_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2723     	.line	788, "main.c"; 	shandengTime = 500;
     013C 21F4                      1- 2724     	MOVIA	0xf4
                                    1- 2725     	BANKSEL	_shandengTime
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 00rr                      1- 2726     	MOVAR	_shandengTime
     013F 2101                      1- 2727     	MOVIA	0x01
     0140 00rr                      1- 2728     	MOVAR	(_shandengTime + 1)
                                    1- 2729     	.line	789, "main.c"; 	lockStart = 1;
                                    1- 2730     	BANKSEL	_lockStart
     0141 rrrr                      3-  110 m1      .banksel ram_address
     0142 00rr                      1- 2731     	MOVAR	_lockStart
                                    1- 2732     	.line	790, "main.c"; 	lowBat = 0;
                                    1- 2733     	BANKSEL	_lowBat
     0143 rrrr                      3-  110 m1      .banksel ram_address
     0144 02rr                      1- 2734     	CLRR	_lowBat
     0145 02rr                      1- 2735     	CLRR	(_lowBat + 1)
                                    1- 2736     	.line	791, "main.c"; 	powerOff();
                                    1- 2737     	MCALL	_powerOff
     0146 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2738     	MGOTO	_00493_DS_
     0147 3rrr                      3-   63 m1      LGOTO rom_address
     0148                           1- 2739     _00492_DS_:
                                    1- 2740     	.line	796, "main.c"; 	lowBat = 0;
                                    1- 2741     	BANKSEL	_lowBat
     0148 rrrr                      3-  110 m1      .banksel ram_address
     0149 02rr                      1- 2742     	CLRR	_lowBat
     014A 02rr                      1- 2743     	CLRR	(_lowBat + 1)
     014B                           1- 2744     _00493_DS_:
                                    1- 2745     	.line	798, "main.c"; 	if(shandengTime > 0)
                                    1- 2746     	BANKSEL	_shandengTime
     014B rrrr                      3-  110 m1      .banksel ram_address
     014C 01rr                      1- 2747     	MOVR	_shandengTime,W
     014D 11rr                      1- 2748     	IORAR	(_shandengTime + 1),W
     014E 0D03                      1- 2749     	BTRSC	STATUS,2
                                    1- 2750     	MGOTO	_00499_DS_
     014F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2751     	.line	800, "main.c"; 	shandengTime--;
     0150 21FF                      1- 2752     	MOVIA	0xff
     0151 03rr                      1- 2753     	ADDAR	_shandengTime,F
     0152 0803                      1- 2754     	BTRSS	STATUS,0
     0153 06rr                      1- 2755     	DECR	(_shandengTime + 1),F
                                    1- 2756     ;;unsigned compare: left < lit (0x1E=30), size=1
                                    1- 2757     	.line	801, "main.c"; 	if(count500ms < 30)
     0154 211E                      1- 2758     	MOVIA	0x1e
                                    1- 2759     	BANKSEL	_count500ms
     0155 rrrr                      3-  110 m1      .banksel ram_address
     0156 04rr                      1- 2760     	SUBAR	_count500ms,W
     0157 0C03                      1- 2761     	BTRSC	STATUS,0
                                    1- 2762     	MGOTO	_00496_DS_
     0158 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2763     	.line	803, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2764     	BANKSEL	_PORTA
     0159 rrrr                      3-  110 m1      .banksel ram_address
     015A 18rr                      1- 2765     	BSR	_PORTA,1
                                    1- 2766     	MGOTO	_00500_DS_
     015B 3rrr                      3-   63 m1      LGOTO rom_address
     015C                           1- 2767     _00496_DS_:
                                    1- 2768     	.line	807, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2769     	BANKSEL	_PORTA
     015C rrrr                      3-  110 m1      .banksel ram_address
     015D 1Crr                      1- 2770     	BCR	_PORTA,1
                                    1- 2771     	MGOTO	_00500_DS_
     015E 3rrr                      3-   63 m1      LGOTO rom_address
     015F                           1- 2772     _00499_DS_:
                                    1- 2773     	.line	811, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2774     	BANKSEL	_PORTA
     015F rrrr                      3-  110 m1      .banksel ram_address
     0160 1Crr                      1- 2775     	BCR	_PORTA,1
     0161                           1- 2776     _00500_DS_:
                                    1- 2777     	.line	812, "main.c"; 	PORTA &= 0xFE;		//关闭充满提示灯
                                    1- 2778     	BANKSEL	_PORTA
     0161 rrrr                      3-  110 m1      .banksel ram_address
     0162 1Crr                      1- 2779     	BCR	_PORTA,0
                                    1- 2780     	.line	815, "main.c"; 	if(workStep == 0)
                                    1- 2781     	BANKSEL	_workStep
     0163 rrrr                      3-  110 m1      .banksel ram_address
     0164 01rr                      1- 2782     	MOVR	_workStep,W
     0165 0903                      1- 2783     	BTRSS	STATUS,2
                                    1- 2784     	MGOTO	_00006_DS_
     0166 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2785     	.line	816, "main.c"; 	ledStep = 0;
                                    1- 2786     	BANKSEL	_ledStep
     0167 rrrr                      3-  110 m1      .banksel ram_address
     0168 02rr                      1- 2787     	CLRR	_ledStep
     0169                           1- 2788     _00006_DS_:
                                    1- 2789     	.line	817, "main.c"; 	chrgFlag = 0;
                                    1- 2790     	BANKSEL	_chrgFlag
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 02rr                      1- 2791     	CLRR	_chrgFlag
     016B                           1- 2792     _00506_DS_:
                                    1- 2793     	.line	821, "main.c"; 	}
                                    1- 2794     	RETURN	
     016B 0010                      3-   40 m1      ret
                                    1- 2795     ; exit point of _chrgCtr
                                    1- 2797     ;***
                                    1- 2798     ;  pBlock Stats: dbName = C
                                    1- 2799     ;***
                                    1- 2800     ;has an exit
                                    1- 2801     ;1 compiler assigned register :
                                    1- 2802     ;   r0x1065
                                    1- 2803     ;; Starting pCode block
                                    1- 2804     .segment "code"; module=main, function=_keyRead
                                    1- 2806     ;local variable name mapping:
     0000                           1- 2808     _keyRead:
                                    1- 2809     ; 2 exit points
                                    1- 2810     	.line	602, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2811     	BANKSEL	r0x1065
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2812     	MOVAR	r0x1065
                                    1- 2813     	.line	604, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2814     	MOVR	r0x1065,W
     0003 0D03                      1- 2815     	BTRSC	STATUS,2
                                    1- 2816     	MGOTO	_00433_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2817     	.line	606, "main.c"; 	keyCount++;
                                    1- 2818     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2819     	INCR	_keyCount,F
                                    1- 2820     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2821     	.line	607, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2822     	MOVIA	0x64
     0008 04rr                      1- 2823     	SUBAR	_keyCount,W
     0009 0803                      1- 2824     	BTRSS	STATUS,0
                                    1- 2825     	MGOTO	_00434_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2826     	.line	609, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2827     	MOVIA	0x64
     000C 00rr                      1- 2828     	MOVAR	_keyCount
                                    1- 2829     	.line	610, "main.c"; 	if(!longPressFlag)
                                    1- 2830     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2831     	MOVR	_longPressFlag,W
     000F 0903                      1- 2832     	BTRSS	STATUS,2
                                    1- 2833     	MGOTO	_00434_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2834     	.line	612, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2835     	MOVIA	0x01
     0012 00rr                      1- 2836     	MOVAR	_longPressFlag
                                    1- 2837     	.line	613, "main.c"; 	return 2;
     0013 2102                      1- 2838     	MOVIA	0x02
                                    1- 2839     	MGOTO	_00435_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2840     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 2841     _00433_DS_:
                                    1- 2842     	.line	619, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 2843     	MOVIA	0x64
                                    1- 2844     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2845     	SUBAR	_keyCount,W
     0018 0803                      1- 2846     	BTRSS	STATUS,0
                                    1- 2847     	MGOTO	_00430_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2848     	.line	621, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2849     	CLRR	_keyCount
                                    1- 2850     	.line	622, "main.c"; 	longPressFlag = 0;
                                    1- 2851     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2852     	CLRR	_longPressFlag
                                    1- 2853     	.line	623, "main.c"; 	return	0;
     001D 2100                      1- 2854     	MOVIA	0x00
                                    1- 2855     	MGOTO	_00435_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2856     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2857     _00430_DS_:
                                    1- 2858     	.line	625, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2859     	MOVIA	0x04
                                    1- 2860     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2861     	SUBAR	_keyCount,W
     0022 0803                      1- 2862     	BTRSS	STATUS,0
                                    1- 2863     	MGOTO	_00431_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2864     	.line	627, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2865     	CLRR	_keyCount
                                    1- 2866     	.line	628, "main.c"; 	return	1;
     0025 2101                      1- 2867     	MOVIA	0x01
                                    1- 2868     	MGOTO	_00435_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2869     _00431_DS_:
                                    1- 2870     	.line	630, "main.c"; 	keyCount = 0;
                                    1- 2871     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2872     	CLRR	_keyCount
     0029                           1- 2873     _00434_DS_:
                                    1- 2874     	.line	632, "main.c"; 	return 0;
     0029 2100                      1- 2875     	MOVIA	0x00
     002A                           1- 2876     _00435_DS_:
                                    1- 2877     	.line	633, "main.c"; 	}
                                    1- 2878     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2879     ; exit point of _keyRead
                                    1- 2881     ;***
                                    1- 2882     ;  pBlock Stats: dbName = C
                                    1- 2883     ;***
                                    1- 2884     ;has an exit
                                    1- 2885     ;functions called:
                                    1- 2886     ;   _LedInput
                                    1- 2887     ;   _pwmStop
                                    1- 2888     ;   _LedInput
                                    1- 2889     ;   _pwmStop
                                    1- 2890     ;; Starting pCode block
                                    1- 2891     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2893     _gotoSleep:
                                    1- 2894     ; 2 exit points
                                    1- 2895     	.line	573, "main.c"; 	count900s = 0;
                                    1- 2896     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2897     	CLRR	_count900s
     0002 02rr                      1- 2898     	CLRR	(_count900s + 1)
                                    1- 2899     	.line	574, "main.c"; 	LedInput();
                                    1- 2900     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2901     	.line	575, "main.c"; 	pwmStop();
                                    1- 2902     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2903     	.line	576, "main.c"; 	APHCON = 0x9F;
     0005 219F                      1- 2904     	MOVIA	0x9f
     0006 000r                      1- 2905     	IOST	_APHCON
                                    1- 2906     	.line	577, "main.c"; 	PORTB = 0x00;
     0007 02rr                      1- 2907     	CLRR	_PORTB
                                    1- 2908     	.line	578, "main.c"; 	PORTA = 0x00;
                                    1- 2909     	BANKSEL	_PORTA
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2910     	CLRR	_PORTA
                                    1- 2911     	.line	579, "main.c"; 	sleepTime = 0;
                                    1- 2912     	BANKSEL	_sleepTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2913     	CLRR	_sleepTime
     000C 02rr                      1- 2914     	CLRR	(_sleepTime + 1)
                                    1- 2915     	.line	581, "main.c"; 	workStep = 0;
                                    1- 2916     	BANKSEL	_workStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2917     	CLRR	_workStep
                                    1- 2918     	.line	582, "main.c"; 	AWUCON = 0x60;
     000F 2160                      1- 2919     	MOVIA	0x60
     0010 00rr                      1- 2920     	MOVAR	_AWUCON
                                    1- 2921     	.line	583, "main.c"; 	INTE =  C_INT_PABKey;
     0011 2102                      1- 2922     	MOVIA	0x02
     0012 00rr                      1- 2923     	MOVAR	_INTE
                                    1- 2924     	.line	584, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 2925     	MOVIA	0x18
     0014 00rr                      1- 2926     	MOVAR	_PCON
                                    1- 2927     	.line	585, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 2928     	CLRR	_INTF
                                    1- 2929     	.line	586, "main.c"; 	CLRWDT();
     0016 0002                      1- 2930     	clrwdt
                                    1- 2931     	.line	587, "main.c"; 	ENI();
     0017 0004                      1- 2932     	ENI
                                    1- 2933     	.line	588, "main.c"; 	SLEEP();
     0018 0001                      1- 2934     	sleep
                                    1- 2935     	.line	589, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 2936     	CLRR	_AWUCON
                                    1- 2937     	.line	590, "main.c"; 	APHCON = 0xBF;
     001A 21BF                      1- 2938     	MOVIA	0xbf
     001B 000r                      1- 2939     	IOST	_APHCON
                                    1- 2940     	.line	591, "main.c"; 	PORTB = 0x00;
     001C 02rr                      1- 2941     	CLRR	_PORTB
                                    1- 2942     	.line	592, "main.c"; 	PORTA = 0x40;
     001D 2140                      1- 2943     	MOVIA	0x40
                                    1- 2944     	BANKSEL	_PORTA
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2945     	MOVAR	_PORTA
                                    1- 2946     	.line	593, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0020 2178                      1- 2947     	MOVIA	0x78
     0021 000r                      1- 2948     	IOST	_IOSTA
                                    1- 2949     	.line	594, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2950     	MOVIA	0x01
     0023 00rr                      1- 2951     	MOVAR	_INTE
                                    1- 2952     	.line	595, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2953     	CLRR	_INTF
                                    1- 2954     	.line	597, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0025 21B8                      1- 2955     	MOVIA	0xb8
     0026 00rr                      1- 2956     	MOVAR	_PCON
                                    1- 2957     	.line	599, "main.c"; 	}
                                    1- 2958     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2959     ; exit point of _gotoSleep
                                    1- 2961     ;***
                                    1- 2962     ;  pBlock Stats: dbName = C
                                    1- 2963     ;***
                                    1- 2964     ;has an exit
                                    1- 2965     ;; Starting pCode block
                                    1- 2966     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2968     _pwmStop:
                                    1- 2969     ; 2 exit points
                                    1- 2970     	.line	567, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2971     	CLRA	
     0001 00rr                      1- 2972     	SFUN	_T2CR1
                                    1- 2973     	.line	568, "main.c"; 	}
                                    1- 2974     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2975     ; exit point of _pwmStop
                                    1- 2977     ;***
                                    1- 2978     ;  pBlock Stats: dbName = C
                                    1- 2979     ;***
                                    1- 2980     ;has an exit
                                    1- 2981     ;1 compiler assigned register :
                                    1- 2982     ;   r0x1067
                                    1- 2983     ;; Starting pCode block
                                    1- 2984     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2986     _pwmInit:
                                    1- 2987     ; 2 exit points
                                    1- 2988     	.line	555, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2989     	SFUNR	_T2CR1
                                    1- 2990     	BANKSEL	r0x1067
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2991     	MOVAR	r0x1067
     0003 0Frr                      1- 2992     	BTRSC	r0x1067,7
                                    1- 2993     	.line	556, "main.c"; 	return;
                                    1- 2994     	MGOTO	_00410_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2995     	.line	557, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2996     	CLRR	_TMRH
                                    1- 2997     	.line	558, "main.c"; 	TMR2 = 99;							//频率为110K
     0006 2163                      1- 2998     	MOVIA	0x63
     0007 00rr                      1- 2999     	SFUN	_TMR2
                                    1- 3000     	.line	561, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 3001     	MOVIA	0x01
     0009 00rr                      1- 3002     	SFUN	_T2CR2
                                    1- 3003     	.line	562, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 3004     	MOVIA	0x83
     000B 00rr                      1- 3005     	SFUN	_T2CR1
     000C                           1- 3006     _00410_DS_:
                                    1- 3007     	.line	563, "main.c"; 	}
                                    1- 3008     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3009     ; exit point of _pwmInit
                                    1- 3011     ;***
                                    1- 3012     ;  pBlock Stats: dbName = C
                                    1- 3013     ;***
                                    1- 3014     ;has an exit
                                    1- 3015     ;; Starting pCode block
                                    1- 3016     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 3018     _pwm1Stop:
                                    1- 3019     ; 2 exit points
                                    1- 3020     	.line	547, "main.c"; 	T3CR1 = C_TMR3_Dis;
     0000 0200                      1- 3021     	CLRA	
     0001 00rr                      1- 3022     	SFUN	_T3CR1
                                    1- 3023     	.line	548, "main.c"; 	PORTA &= 0XFB;
                                    1- 3024     	BANKSEL	_PORTA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 1Drr                      1- 3025     	BCR	_PORTA,2
                                    1- 3026     	.line	549, "main.c"; 	}
                                    1- 3027     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1- 3028     ; exit point of _pwm1Stop
                                    1- 3030     ;***
                                    1- 3031     ;  pBlock Stats: dbName = C
                                    1- 3032     ;***
                                    1- 3033     ;has an exit
                                    1- 3034     ;1 compiler assigned register :
                                    1- 3035     ;   r0x1062
                                    1- 3036     ;; Starting pCode block
                                    1- 3037     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 3039     _pwm1Init:
                                    1- 3040     ; 2 exit points
                                    1- 3041     	.line	535, "main.c"; 	if(0x80&T3CR1)
     0000 00rr                      1- 3042     	SFUNR	_T3CR1
                                    1- 3043     	BANKSEL	r0x1062
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3044     	MOVAR	r0x1062
     0003 0Frr                      1- 3045     	BTRSC	r0x1062,7
                                    1- 3046     	.line	536, "main.c"; 	return;
                                    1- 3047     	MGOTO	_00399_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3048     	.line	537, "main.c"; 	TM3RH = 0x00;
     0005 02rr                      1- 3049     	CLRR	_TM3RH
                                    1- 3050     	.line	538, "main.c"; 	TMR3 = 60;							//频率为110K
     0006 213C                      1- 3051     	MOVIA	0x3c
     0007 00rr                      1- 3052     	SFUN	_TMR3
                                    1- 3053     	.line	541, "main.c"; 	T3CR2 = C_TMR3_ClkSrc_Inst | C_PS3_Dis;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2108                      1- 3054     	MOVIA	0x08
     0009 00rr                      1- 3055     	SFUN	_T3CR2
                                    1- 3056     	.line	542, "main.c"; 	T3CR1 = C_PWM3_En | C_TMR3_Reload | C_TMR3_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 3057     	MOVIA	0x83
     000B 00rr                      1- 3058     	SFUN	_T3CR1
     000C                           1- 3059     _00399_DS_:
                                    1- 3060     	.line	543, "main.c"; 	}
                                    1- 3061     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3062     ; exit point of _pwm1Init
                                    1- 3064     ;***
                                    1- 3065     ;  pBlock Stats: dbName = C
                                    1- 3066     ;***
                                    1- 3067     ;has an exit
                                    1- 3068     ;functions called:
                                    1- 3069     ;   _delay
                                    1- 3070     ;   _LedInput
                                    1- 3071     ;   _delay
                                    1- 3072     ;   _LedInput
                                    1- 3073     ;1 compiler assigned register :
                                    1- 3074     ;   r0x1068
                                    1- 3075     ;; Starting pCode block
                                    1- 3076     .segment "code"; module=main, function=_LED8ON
     0000                           1- 3078     _LED8ON:
                                    1- 3079     ; 2 exit points
                                    1- 3080     	.line	525, "main.c"; 	L4OUT;
     0000 001r                      1- 3081     	IOSTR	_IOSTB
                                    1- 3082     	BANKSEL	r0x1068
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3083     	MOVAR	r0x1068
     0003 1Crr                      1- 3084     	BCR	r0x1068,0
     0004 01rr                      1- 3085     	MOVR	r0x1068,W
     0005 000r                      1- 3086     	IOST	_IOSTB
                                    1- 3087     	.line	526, "main.c"; 	L2OUT;
     0006 001r                      1- 3088     	IOSTR	_IOSTB
     0007 00rr                      1- 3089     	MOVAR	r0x1068
     0008 1Drr                      1- 3090     	BCR	r0x1068,3
     0009 01rr                      1- 3091     	MOVR	r0x1068,W
     000A 000r                      1- 3092     	IOST	_IOSTB
                                    1- 3093     	.line	527, "main.c"; 	L4H;
     000B 18rr                      1- 3094     	BSR	_PORTB,0
                                    1- 3095     	.line	528, "main.c"; 	L2L;
     000C 1Drr                      1- 3096     	BCR	_PORTB,3
                                    1- 3097     	.line	529, "main.c"; 	delay(80);
     000D 2150                      1- 3098     	MOVIA	0x50
                                    1- 3099     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3100     	.line	530, "main.c"; 	LedInput();
                                    1- 3101     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3102     	.line	531, "main.c"; 	}
                                    1- 3103     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3104     ; exit point of _LED8ON
                                    1- 3106     ;***
                                    1- 3107     ;  pBlock Stats: dbName = C
                                    1- 3108     ;***
                                    1- 3109     ;has an exit
                                    1- 3110     ;functions called:
                                    1- 3111     ;   _delay
                                    1- 3112     ;   _LedInput
                                    1- 3113     ;   _delay
                                    1- 3114     ;   _LedInput
                                    1- 3115     ;1 compiler assigned register :
                                    1- 3116     ;   r0x1069
                                    1- 3117     ;; Starting pCode block
                                    1- 3118     .segment "code"; module=main, function=_LED7ON
     0000                           1- 3120     _LED7ON:
                                    1- 3121     ; 2 exit points
                                    1- 3122     	.line	515, "main.c"; 	L4OUT;
     0000 001r                      1- 3123     	IOSTR	_IOSTB
                                    1- 3124     	BANKSEL	r0x1069
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3125     	MOVAR	r0x1069
     0003 1Crr                      1- 3126     	BCR	r0x1069,0
     0004 01rr                      1- 3127     	MOVR	r0x1069,W
     0005 000r                      1- 3128     	IOST	_IOSTB
                                    1- 3129     	.line	516, "main.c"; 	L2OUT;
     0006 001r                      1- 3130     	IOSTR	_IOSTB
     0007 00rr                      1- 3131     	MOVAR	r0x1069
     0008 1Drr                      1- 3132     	BCR	r0x1069,3
     0009 01rr                      1- 3133     	MOVR	r0x1069,W
     000A 000r                      1- 3134     	IOST	_IOSTB
                                    1- 3135     	.line	517, "main.c"; 	L2H;
     000B 19rr                      1- 3136     	BSR	_PORTB,3
                                    1- 3137     	.line	518, "main.c"; 	L4L;
     000C 1Crr                      1- 3138     	BCR	_PORTB,0
                                    1- 3139     	.line	519, "main.c"; 	delay(80);
     000D 2150                      1- 3140     	MOVIA	0x50
                                    1- 3141     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3142     	.line	520, "main.c"; 	LedInput();
                                    1- 3143     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3144     	.line	521, "main.c"; 	}
                                    1- 3145     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3146     ; exit point of _LED7ON
                                    1- 3148     ;***
                                    1- 3149     ;  pBlock Stats: dbName = C
                                    1- 3150     ;***
                                    1- 3151     ;has an exit
                                    1- 3152     ;functions called:
                                    1- 3153     ;   _delay
                                    1- 3154     ;   _LedInput
                                    1- 3155     ;   _delay
                                    1- 3156     ;   _LedInput
                                    1- 3157     ;1 compiler assigned register :
                                    1- 3158     ;   r0x106A
                                    1- 3159     ;; Starting pCode block
                                    1- 3160     .segment "code"; module=main, function=_LED6ON
     0000                           1- 3162     _LED6ON:
                                    1- 3163     ; 2 exit points
                                    1- 3164     	.line	505, "main.c"; 	L4OUT;
     0000 001r                      1- 3165     	IOSTR	_IOSTB
                                    1- 3166     	BANKSEL	r0x106A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3167     	MOVAR	r0x106A
     0003 1Crr                      1- 3168     	BCR	r0x106A,0
     0004 01rr                      1- 3169     	MOVR	r0x106A,W
     0005 000r                      1- 3170     	IOST	_IOSTB
                                    1- 3171     	.line	506, "main.c"; 	L1OUT;
     0006 001r                      1- 3172     	IOSTR	_IOSTA
     0007 00rr                      1- 3173     	MOVAR	r0x106A
     0008 1Frr                      1- 3174     	BCR	r0x106A,7
     0009 01rr                      1- 3175     	MOVR	r0x106A,W
     000A 000r                      1- 3176     	IOST	_IOSTA
                                    1- 3177     	.line	507, "main.c"; 	L1H;
                                    1- 3178     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3179     	BSR	_PORTA,7
                                    1- 3180     	.line	508, "main.c"; 	L4L;
     000D 1Crr                      1- 3181     	BCR	_PORTB,0
                                    1- 3182     	.line	509, "main.c"; 	delay(80);
     000E 2150                      1- 3183     	MOVIA	0x50
                                    1- 3184     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3185     	.line	510, "main.c"; 	LedInput();
                                    1- 3186     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3187     	.line	511, "main.c"; 	}
                                    1- 3188     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3189     ; exit point of _LED6ON
                                    1- 3191     ;***
                                    1- 3192     ;  pBlock Stats: dbName = C
                                    1- 3193     ;***
                                    1- 3194     ;has an exit
                                    1- 3195     ;functions called:
                                    1- 3196     ;   _delay
                                    1- 3197     ;   _LedInput
                                    1- 3198     ;   _delay
                                    1- 3199     ;   _LedInput
                                    1- 3200     ;1 compiler assigned register :
                                    1- 3201     ;   r0x106B
                                    1- 3202     ;; Starting pCode block
                                    1- 3203     .segment "code"; module=main, function=_LED5ON
     0000                           1- 3205     _LED5ON:
                                    1- 3206     ; 2 exit points
                                    1- 3207     	.line	494, "main.c"; 	L4OUT;
     0000 001r                      1- 3208     	IOSTR	_IOSTB
                                    1- 3209     	BANKSEL	r0x106B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3210     	MOVAR	r0x106B
     0003 1Crr                      1- 3211     	BCR	r0x106B,0
     0004 01rr                      1- 3212     	MOVR	r0x106B,W
     0005 000r                      1- 3213     	IOST	_IOSTB
                                    1- 3214     	.line	495, "main.c"; 	L1OUT;
     0006 001r                      1- 3215     	IOSTR	_IOSTA
     0007 00rr                      1- 3216     	MOVAR	r0x106B
     0008 1Frr                      1- 3217     	BCR	r0x106B,7
     0009 01rr                      1- 3218     	MOVR	r0x106B,W
     000A 000r                      1- 3219     	IOST	_IOSTA
                                    1- 3220     	.line	496, "main.c"; 	L4H;
     000B 18rr                      1- 3221     	BSR	_PORTB,0
                                    1- 3222     	.line	497, "main.c"; 	L1L;
                                    1- 3223     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3224     	BCR	_PORTA,7
                                    1- 3225     	.line	498, "main.c"; 	delay(80);
     000E 2150                      1- 3226     	MOVIA	0x50
                                    1- 3227     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3228     	.line	499, "main.c"; 	LedInput();
                                    1- 3229     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3230     	.line	500, "main.c"; 	}
                                    1- 3231     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3232     ; exit point of _LED5ON
                                    1- 3234     ;***
                                    1- 3235     ;  pBlock Stats: dbName = C
                                    1- 3236     ;***
                                    1- 3237     ;has an exit
                                    1- 3238     ;functions called:
                                    1- 3239     ;   _delay
                                    1- 3240     ;   _LedInput
                                    1- 3241     ;   _delay
                                    1- 3242     ;   _LedInput
                                    1- 3243     ;1 compiler assigned register :
                                    1- 3244     ;   r0x106C
                                    1- 3245     ;; Starting pCode block
                                    1- 3246     .segment "code"; module=main, function=_LED4ON
     0000                           1- 3248     _LED4ON:
                                    1- 3249     ; 2 exit points
                                    1- 3250     	.line	484, "main.c"; 	L3OUT;
     0000 001r                      1- 3251     	IOSTR	_IOSTB
                                    1- 3252     	BANKSEL	r0x106C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3253     	MOVAR	r0x106C
     0003 1Crr                      1- 3254     	BCR	r0x106C,1
     0004 01rr                      1- 3255     	MOVR	r0x106C,W
     0005 000r                      1- 3256     	IOST	_IOSTB
                                    1- 3257     	.line	485, "main.c"; 	L2OUT;
     0006 001r                      1- 3258     	IOSTR	_IOSTB
     0007 00rr                      1- 3259     	MOVAR	r0x106C
     0008 1Drr                      1- 3260     	BCR	r0x106C,3
     0009 01rr                      1- 3261     	MOVR	r0x106C,W
     000A 000r                      1- 3262     	IOST	_IOSTB
                                    1- 3263     	.line	486, "main.c"; 	L3H;
     000B 18rr                      1- 3264     	BSR	_PORTB,1
                                    1- 3265     	.line	487, "main.c"; 	L2L;
     000C 1Drr                      1- 3266     	BCR	_PORTB,3
                                    1- 3267     	.line	488, "main.c"; 	delay(80);
     000D 2150                      1- 3268     	MOVIA	0x50
                                    1- 3269     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3270     	.line	489, "main.c"; 	LedInput();
                                    1- 3271     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3272     	.line	490, "main.c"; 	}
                                    1- 3273     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3274     ; exit point of _LED4ON
                                    1- 3276     ;***
                                    1- 3277     ;  pBlock Stats: dbName = C
                                    1- 3278     ;***
                                    1- 3279     ;has an exit
                                    1- 3280     ;functions called:
                                    1- 3281     ;   _delay
                                    1- 3282     ;   _LedInput
                                    1- 3283     ;   _delay
                                    1- 3284     ;   _LedInput
                                    1- 3285     ;1 compiler assigned register :
                                    1- 3286     ;   r0x106D
                                    1- 3287     ;; Starting pCode block
                                    1- 3288     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3290     _LED3ON:
                                    1- 3291     ; 2 exit points
                                    1- 3292     	.line	474, "main.c"; 	L3OUT;
     0000 001r                      1- 3293     	IOSTR	_IOSTB
                                    1- 3294     	BANKSEL	r0x106D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3295     	MOVAR	r0x106D
     0003 1Crr                      1- 3296     	BCR	r0x106D,1
     0004 01rr                      1- 3297     	MOVR	r0x106D,W
     0005 000r                      1- 3298     	IOST	_IOSTB
                                    1- 3299     	.line	475, "main.c"; 	L2OUT;
     0006 001r                      1- 3300     	IOSTR	_IOSTB
     0007 00rr                      1- 3301     	MOVAR	r0x106D
     0008 1Drr                      1- 3302     	BCR	r0x106D,3
     0009 01rr                      1- 3303     	MOVR	r0x106D,W
     000A 000r                      1- 3304     	IOST	_IOSTB
                                    1- 3305     	.line	476, "main.c"; 	L2H;
     000B 19rr                      1- 3306     	BSR	_PORTB,3
                                    1- 3307     	.line	477, "main.c"; 	L3L;
     000C 1Crr                      1- 3308     	BCR	_PORTB,1
                                    1- 3309     	.line	478, "main.c"; 	delay(80);
     000D 2150                      1- 3310     	MOVIA	0x50
                                    1- 3311     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3312     	.line	479, "main.c"; 	LedInput();
                                    1- 3313     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3314     	.line	480, "main.c"; 	}
                                    1- 3315     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3316     ; exit point of _LED3ON
                                    1- 3318     ;***
                                    1- 3319     ;  pBlock Stats: dbName = C
                                    1- 3320     ;***
                                    1- 3321     ;has an exit
                                    1- 3322     ;functions called:
                                    1- 3323     ;   _delay
                                    1- 3324     ;   _LedInput
                                    1- 3325     ;   _delay
                                    1- 3326     ;   _LedInput
                                    1- 3327     ;1 compiler assigned register :
                                    1- 3328     ;   r0x106E
                                    1- 3329     ;; Starting pCode block
                                    1- 3330     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3332     _LED2ON:
                                    1- 3333     ; 2 exit points
                                    1- 3334     	.line	464, "main.c"; 	L1OUT;
     0000 001r                      1- 3335     	IOSTR	_IOSTA
                                    1- 3336     	BANKSEL	r0x106E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3337     	MOVAR	r0x106E
     0003 1Frr                      1- 3338     	BCR	r0x106E,7
     0004 01rr                      1- 3339     	MOVR	r0x106E,W
     0005 000r                      1- 3340     	IOST	_IOSTA
                                    1- 3341     	.line	465, "main.c"; 	L3OUT;
     0006 001r                      1- 3342     	IOSTR	_IOSTB
     0007 00rr                      1- 3343     	MOVAR	r0x106E
     0008 1Crr                      1- 3344     	BCR	r0x106E,1
     0009 01rr                      1- 3345     	MOVR	r0x106E,W
     000A 000r                      1- 3346     	IOST	_IOSTB
                                    1- 3347     	.line	466, "main.c"; 	L3H;
     000B 18rr                      1- 3348     	BSR	_PORTB,1
                                    1- 3349     	.line	467, "main.c"; 	L1L;
                                    1- 3350     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3351     	BCR	_PORTA,7
                                    1- 3352     	.line	468, "main.c"; 	delay(80);
     000E 2150                      1- 3353     	MOVIA	0x50
                                    1- 3354     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3355     	.line	469, "main.c"; 	LedInput();
                                    1- 3356     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3357     	.line	470, "main.c"; 	}
                                    1- 3358     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3359     ; exit point of _LED2ON
                                    1- 3361     ;***
                                    1- 3362     ;  pBlock Stats: dbName = C
                                    1- 3363     ;***
                                    1- 3364     ;has an exit
                                    1- 3365     ;functions called:
                                    1- 3366     ;   _delay
                                    1- 3367     ;   _LedInput
                                    1- 3368     ;   _delay
                                    1- 3369     ;   _LedInput
                                    1- 3370     ;1 compiler assigned register :
                                    1- 3371     ;   r0x106F
                                    1- 3372     ;; Starting pCode block
                                    1- 3373     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3375     _LED1ON:
                                    1- 3376     ; 2 exit points
                                    1- 3377     	.line	454, "main.c"; 	L3OUT;
     0000 001r                      1- 3378     	IOSTR	_IOSTB
                                    1- 3379     	BANKSEL	r0x106F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3380     	MOVAR	r0x106F
     0003 1Crr                      1- 3381     	BCR	r0x106F,1
     0004 01rr                      1- 3382     	MOVR	r0x106F,W
     0005 000r                      1- 3383     	IOST	_IOSTB
                                    1- 3384     	.line	455, "main.c"; 	L1OUT;
     0006 001r                      1- 3385     	IOSTR	_IOSTA
     0007 00rr                      1- 3386     	MOVAR	r0x106F
     0008 1Frr                      1- 3387     	BCR	r0x106F,7
     0009 01rr                      1- 3388     	MOVR	r0x106F,W
     000A 000r                      1- 3389     	IOST	_IOSTA
                                    1- 3390     	.line	456, "main.c"; 	L1H;
                                    1- 3391     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3392     	BSR	_PORTA,7
                                    1- 3393     	.line	457, "main.c"; 	L3L;
     000D 1Crr                      1- 3394     	BCR	_PORTB,1
                                    1- 3395     	.line	458, "main.c"; 	delay(80);
     000E 2150                      1- 3396     	MOVIA	0x50
                                    1- 3397     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3398     	.line	459, "main.c"; 	LedInput();
                                    1- 3399     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3400     	.line	460, "main.c"; 	}
                                    1- 3401     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3402     ; exit point of _LED1ON
                                    1- 3404     ;***
                                    1- 3405     ;  pBlock Stats: dbName = C
                                    1- 3406     ;***
                                    1- 3407     ;has an exit
                                    1- 3408     ;1 compiler assigned register :
                                    1- 3409     ;   r0x1066
                                    1- 3410     ;; Starting pCode block
                                    1- 3411     .segment "code"; module=main, function=_LedInput
     0000                           1- 3413     _LedInput:
                                    1- 3414     ; 2 exit points
                                    1- 3415     	.line	446, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 3416     	IOSTR	_IOSTA
                                    1- 3417     	BANKSEL	r0x1066
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3418     	MOVAR	r0x1066
     0003 1Brr                      1- 3419     	BSR	r0x1066,7
     0004 01rr                      1- 3420     	MOVR	r0x1066,W
     0005 000r                      1- 3421     	IOST	_IOSTA
                                    1- 3422     	.line	447, "main.c"; 	IOSTB |= 0x0B;
     0006 001r                      1- 3423     	IOSTR	_IOSTB
     0007 00rr                      1- 3424     	MOVAR	r0x1066
     0008 210B                      1- 3425     	MOVIA	0x0b
     0009 11rr                      1- 3426     	IORAR	r0x1066,F
     000A 01rr                      1- 3427     	MOVR	r0x1066,W
     000B 000r                      1- 3428     	IOST	_IOSTB
                                    1- 3429     	.line	448, "main.c"; 	PORTA &= 0x7F;
                                    1- 3430     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3431     	BCR	_PORTA,7
                                    1- 3432     	.line	449, "main.c"; 	PORTB &= 0xF4;
     000E 21F4                      1- 3433     	MOVIA	0xf4
     000F 10rr                      1- 3434     	ANDAR	_PORTB,F
                                    1- 3435     	.line	450, "main.c"; 	}
                                    1- 3436     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3437     ; exit point of _LedInput
                                    1- 3439     ;***
                                    1- 3440     ;  pBlock Stats: dbName = C
                                    1- 3441     ;***
                                    1- 3442     ;has an exit
                                    1- 3443     ;functions called:
                                    1- 3444     ;   _LedInput
                                    1- 3445     ;   _LedInput
                                    1- 3446     ;   _LED8ON
                                    1- 3447     ;   _LED7ON
                                    1- 3448     ;   _LED6ON
                                    1- 3449     ;   _LED5ON
                                    1- 3450     ;   _LED4ON
                                    1- 3451     ;   _LED3ON
                                    1- 3452     ;   _LED2ON
                                    1- 3453     ;   _LED1ON
                                    1- 3454     ;   _LedInput
                                    1- 3455     ;   _LedInput
                                    1- 3456     ;   _LED8ON
                                    1- 3457     ;   _LED7ON
                                    1- 3458     ;   _LED6ON
                                    1- 3459     ;   _LED5ON
                                    1- 3460     ;   _LED4ON
                                    1- 3461     ;   _LED3ON
                                    1- 3462     ;   _LED2ON
                                    1- 3463     ;   _LED1ON
                                    1- 3464     ;; Starting pCode block
                                    1- 3465     .segment "code"; module=main, function=_ledShow
     0000                           1- 3467     _ledShow:
                                    1- 3468     ; 2 exit points
                                    1- 3469     	.line	394, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3470     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3471     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3472     	BTRSC	STATUS,2
                                    1- 3473     	MGOTO	_00320_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3474     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3475     	MOVR	_workStep,W
     0006 0903                      1- 3476     	BTRSS	STATUS,2
                                    1- 3477     	MGOTO	_00320_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3478     	.line	396, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3479     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3480     	BTRSC	_ledDeadTime,0
                                    1- 3481     	MGOTO	_00312_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3482     	.line	398, "main.c"; 	ledStep = 0;
                                    1- 3483     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3484     	CLRR	_ledStep
                                    1- 3485     	MGOTO	_00007_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3486     _00312_DS_:
                                    1- 3487     	.line	402, "main.c"; 	ledStep = tempLedStep;
                                    1- 3488     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3489     	MOVR	_tempLedStep,W
                                    1- 3490     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3491     	MOVAR	_ledStep
                                    1- 3492     	MGOTO	_00007_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 3493     _00320_DS_:
                                    1- 3494     	.line	405, "main.c"; 	else if(workStep > 0)
                                    1- 3495     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 3496     	MOVR	_workStep,W
     0015 0D03                      1- 3497     	BTRSC	STATUS,2
                                    1- 3498     	MGOTO	_00317_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3499     	.line	407, "main.c"; 	ledStep = workStep;
     0017 01rr                      1- 3500     	MOVR	_workStep,W
                                    1- 3501     	BANKSEL	_ledStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3502     	MOVAR	_ledStep
                                    1- 3503     	MGOTO	_00007_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1- 3504     _00317_DS_:
                                    1- 3505     	.line	409, "main.c"; 	else if(chrgFlag == 0)
                                    1- 3506     	BANKSEL	_chrgFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 3507     	MOVR	_chrgFlag,W
     001D 0903                      1- 3508     	BTRSS	STATUS,2
                                    1- 3509     	MGOTO	_00007_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3510     	.line	411, "main.c"; 	ledStep = 0;
                                    1- 3511     	BANKSEL	_ledStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 3512     	CLRR	_ledStep
     0021                           1- 3513     _00007_DS_:
                                    1- 3514     	.line	414, "main.c"; 	LedInput();
                                    1- 3515     	MCALL	_LedInput
     0021 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3516     	.line	415, "main.c"; 	switch(ledStep)
     0022 210B                      1- 3517     	MOVIA	0x0b
                                    1- 3518     	BANKSEL	_ledStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 04rr                      1- 3519     	SUBAR	_ledStep,W
     0025 0C03                      1- 3520     	BTRSC	STATUS,0
                                    1- 3521     	MGOTO	_00335_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027 21rr                      1- 3522     	MOVIA	((_00356_DS_ >> 8) & 0xff)
     0028 008A                      1- 3523     	MOVAR	PCHBUF
     0029 01rr                      1- 3524     	MOVR	_ledStep,W
     002A 25rr                      1- 3525     	ADDIA	_00356_DS_
     002B 0C03                      1- 3526     	BTRSC	STATUS,0
     002C 058A                      1- 3527     	INCR	PCHBUF,F
     002D 0082                      1- 3528     	MOVAR	PCL
     002E                           1- 3529     _00356_DS_:
                                    1- 3530     	MGOTO	_00323_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3531     	MGOTO	_00333_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3532     	MGOTO	_00332_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3533     	MGOTO	_00331_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3534     	MGOTO	_00330_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3535     	MGOTO	_00329_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3536     	MGOTO	_00328_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3537     	MGOTO	_00327_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3538     	MGOTO	_00326_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3539     	MGOTO	_00326_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3540     	MGOTO	_00326_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 3541     _00323_DS_:
                                    1- 3542     	.line	418, "main.c"; 	LedInput();
                                    1- 3543     	MCALL	_LedInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3544     	.line	419, "main.c"; 	break;
                                    1- 3545     	MGOTO	_00335_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1- 3546     _00326_DS_:
                                    1- 3547     	.line	423, "main.c"; 	LED8ON();
                                    1- 3548     	MCALL	_LED8ON
     003B 2rrr                      3-   66 m1      LCALL rom_address
     003C                           1- 3549     _00327_DS_:
                                    1- 3550     	.line	425, "main.c"; 	LED7ON();
                                    1- 3551     	MCALL	_LED7ON
     003C 2rrr                      3-   66 m1      LCALL rom_address
     003D                           1- 3552     _00328_DS_:
                                    1- 3553     	.line	427, "main.c"; 	LED6ON();
                                    1- 3554     	MCALL	_LED6ON
     003D 2rrr                      3-   66 m1      LCALL rom_address
     003E                           1- 3555     _00329_DS_:
                                    1- 3556     	.line	429, "main.c"; 	LED5ON();
                                    1- 3557     	MCALL	_LED5ON
     003E 2rrr                      3-   66 m1      LCALL rom_address
     003F                           1- 3558     _00330_DS_:
                                    1- 3559     	.line	431, "main.c"; 	LED4ON();
                                    1- 3560     	MCALL	_LED4ON
     003F 2rrr                      3-   66 m1      LCALL rom_address
     0040                           1- 3561     _00331_DS_:
                                    1- 3562     	.line	433, "main.c"; 	LED3ON();
                                    1- 3563     	MCALL	_LED3ON
     0040 2rrr                      3-   66 m1      LCALL rom_address
     0041                           1- 3564     _00332_DS_:
                                    1- 3565     	.line	435, "main.c"; 	LED2ON();
                                    1- 3566     	MCALL	_LED2ON
     0041 2rrr                      3-   66 m1      LCALL rom_address
     0042                           1- 3567     _00333_DS_:
                                    1- 3568     	.line	437, "main.c"; 	LED1ON();
                                    1- 3569     	MCALL	_LED1ON
     0042 2rrr                      3-   66 m1      LCALL rom_address
     0043                           1- 3570     _00335_DS_:
                                    1- 3571     	.line	440, "main.c"; 	}
                                    1- 3572     	RETURN	
     0043 0010                      3-   40 m1      ret
                                    1- 3573     ; exit point of _ledShow
                                    1- 3575     ;***
                                    1- 3576     ;  pBlock Stats: dbName = C
                                    1- 3577     ;***
                                    1- 3578     ;has an exit
                                    1- 3579     ;functions called:
                                    1- 3580     ;   _LedInput
                                    1- 3581     ;   _LedInput
                                    1- 3582     ;; Starting pCode block
                                    1- 3583     .segment "code"; module=main, function=_initSys
     0000                           1- 3585     _initSys:
                                    1- 3586     ; 2 exit points
                                    1- 3587     	.line	362, "main.c"; 	DISI();
     0000 0013                      1- 3588     	DISI
                                    1- 3589     	.line	363, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0001 2178                      1- 3590     	MOVIA	0x78
     0002 000r                      1- 3591     	IOST	_IOSTA
                                    1- 3592     	.line	364, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3593     	CLRA	
     0004 000r                      1- 3594     	IOST	_IOSTB
                                    1- 3595     	.line	365, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3596     	CLRR	_PORTB
                                    1- 3597     	.line	366, "main.c"; 	PORTA = 0x00;
                                    1- 3598     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3599     	CLRR	_PORTA
                                    1- 3600     	.line	367, "main.c"; 	LedInput();
                                    1- 3601     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3602     	.line	368, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3603     	MOVIA	0xbf
     000A 000r                      1- 3604     	IOST	_APHCON
                                    1- 3605     	.line	369, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3606     	MOVIA	0xff
     000C 00rr                      1- 3607     	MOVAR	_BPHCON
                                    1- 3608     	.line	370, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3609     	MOVAR	_ABPLCON
                                    1- 3610     	.line	372, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3611     	MOVIA	0x01
     000F 00rr                      1- 3612     	MOVAR	_INTE
                                    1- 3613     	.line	374, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3614     	CLRA	
     0011 000r                      1- 3615     	IOST	_PCON1
                                    1- 3616     	.line	376, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3617     	MOVIA	0x37
     0013 00rr                      1- 3618     	MOVAR	_TMR0
                                    1- 3619     	.line	377, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3620     	MOVIA	0x01
     0015 0003                      1- 3621     	T0MD	
                                    1- 3622     	.line	379, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3623     	IOST	_PCON1
                                    1- 3624     	.line	382, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3625     	MOVIA	0x98
     0018 00rr                      1- 3626     	MOVAR	_PCON
                                    1- 3627     	.line	385, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3628     	MOVIA	0x01
     001A 000r                      1- 3629     	IOST	_PCON1
                                    1- 3630     	.line	386, "main.c"; 	ENI();
     001B 0004                      1- 3631     	ENI
                                    1- 3632     	.line	387, "main.c"; 	}
                                    1- 3633     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 3634     ; exit point of _initSys
                                    1- 3636     ;***
                                    1- 3637     ;  pBlock Stats: dbName = C
                                    1- 3638     ;***
                                    1- 3639     ;has an exit
                                    1- 3640     ;functions called:
                                    1- 3641     ;   _pwmStop
                                    1- 3642     ;   _pwmStop
                                    1- 3643     ;; Starting pCode block
                                    1- 3644     .segment "code"; module=main, function=_powerOff
     0000                           1- 3646     _powerOff:
                                    1- 3647     ; 2 exit points
                                    1- 3648     	.line	353, "main.c"; 	workStep = 0;
                                    1- 3649     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3650     	CLRR	_workStep
                                    1- 3651     	.line	354, "main.c"; 	pwmStop();
                                    1- 3652     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3653     	.line	355, "main.c"; 	ledStep = 0;
                                    1- 3654     	BANKSEL	_ledStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3655     	CLRR	_ledStep
                                    1- 3656     	.line	356, "main.c"; 	}
                                    1- 3657     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3658     ; exit point of _powerOff
                                    1- 3660     ;***
                                    1- 3661     ;  pBlock Stats: dbName = C
                                    1- 3662     ;***
                                    1- 3663     ;has an exit
                                    1- 3664     ;functions called:
                                    1- 3665     ;   _keyRead
                                    1- 3666     ;   _pwmInit
                                    1- 3667     ;   _powerOff
                                    1- 3668     ;   _pwmInit
                                    1- 3669     ;   _keyRead
                                    1- 3670     ;   _pwmInit
                                    1- 3671     ;   _powerOff
                                    1- 3672     ;   _pwmInit
                                    1- 3673     ;1 compiler assigned register :
                                    1- 3674     ;   r0x1070
                                    1- 3675     ;; Starting pCode block
                                    1- 3676     .segment "code"; module=main, function=_keyCtr
                                    1- 3678     ;local variable name mapping:
     0000                           1- 3680     _keyCtr:
                                    1- 3681     ; 2 exit points
                                    1- 3682     	.line	254, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3683     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3684     	COMR	_PORTA,W
                                    1- 3685     	BANKSEL	r0x1070
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3686     	MOVAR	r0x1070
     0004 2140                      1- 3687     	MOVIA	0x40
     0005 10rr                      1- 3688     	ANDAR	r0x1070,F
     0006 01rr                      1- 3689     	MOVR	r0x1070,W
                                    1- 3690     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3691     	BANKSEL	r0x1070
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3692     	MOVAR	r0x1070
                                    1- 3693     	.line	255, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3694     	XORIA	0x01
     000B 0903                      1- 3695     	BTRSS	STATUS,2
                                    1- 3696     	MGOTO	_00296_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3697     	.line	257, "main.c"; 	count500ms = 0;
                                    1- 3698     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3699     	CLRR	_count500ms
                                    1- 3700     	.line	258, "main.c"; 	ledLightTime = 0;
                                    1- 3701     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3702     	CLRR	_ledLightTime
                                    1- 3703     	.line	259, "main.c"; 	if(workStep == 0)
                                    1- 3704     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3705     	MOVR	_workStep,W
     0013 0903                      1- 3706     	BTRSS	STATUS,2
                                    1- 3707     	MGOTO	_00230_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3708     	.line	261, "main.c"; 	count1s = 0;
                                    1- 3709     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3710     	CLRR	_count1s
                                    1- 3711     	.line	267, "main.c"; 	return;
                                    1- 3712     	MGOTO	_00298_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 3713     _00230_DS_:
                                    1- 3714     	.line	269, "main.c"; 	ledTime = 0;
                                    1- 3715     	BANKSEL	_ledTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 3716     	CLRR	_ledTime
                                    1- 3717     	.line	270, "main.c"; 	if(++workStep > 8)
                                    1- 3718     	BANKSEL	_workStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 3719     	INCR	_workStep,F
                                    1- 3720     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3721     ;;unsigned compare: left >= lit (0x9=9), size=1
     001C 2109                      1- 3722     	MOVIA	0x09
     001D 04rr                      1- 3723     	SUBAR	_workStep,W
     001E 0803                      1- 3724     	BTRSS	STATUS,0
                                    1- 3725     	MGOTO	_00232_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3726     	.line	271, "main.c"; 	workStep = 1;
     0020 2101                      1- 3727     	MOVIA	0x01
     0021 00rr                      1- 3728     	MOVAR	_workStep
     0022                           1- 3729     _00232_DS_:
                                    1- 3730     	.line	272, "main.c"; 	shanshuoTime = 6;
     0022 2106                      1- 3731     	MOVIA	0x06
                                    1- 3732     	BANKSEL	_shanshuoTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 3733     	MOVAR	_shanshuoTime
                                    1- 3734     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3735     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 3736     	.line	274, "main.c"; 	if(pwStep <= 4)
     0025 2105                      1- 3737     	MOVIA	0x05
                                    1- 3738     	BANKSEL	_pwStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 04rr                      1- 3739     	SUBAR	_pwStep,W
     0028 0C03                      1- 3740     	BTRSC	STATUS,0
                                    1- 3741     	MGOTO	_00280_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3742     	.line	276, "main.c"; 	if(workStep == 1)
                                    1- 3743     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 3744     	MOVR	_workStep,W
     002C 2401                      1- 3745     	XORIA	0x01
     002D 0903                      1- 3746     	BTRSS	STATUS,2
                                    1- 3747     	MGOTO	_00254_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3748     	.line	277, "main.c"; 	maxDuty = 50;
     002F 2132                      1- 3749     	MOVIA	0x32
                                    1- 3750     	BANKSEL	_maxDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 3751     	MOVAR	_maxDuty
                                    1- 3752     	MGOTO	_00281_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 3753     _00254_DS_:
                                    1- 3754     	.line	278, "main.c"; 	else if(workStep == 2)
                                    1- 3755     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3756     	MOVR	_workStep,W
     0035 2402                      1- 3757     	XORIA	0x02
     0036 0903                      1- 3758     	BTRSS	STATUS,2
                                    1- 3759     	MGOTO	_00251_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3760     	.line	279, "main.c"; 	maxDuty = 52;
     0038 2134                      1- 3761     	MOVIA	0x34
                                    1- 3762     	BANKSEL	_maxDuty
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 3763     	MOVAR	_maxDuty
                                    1- 3764     	MGOTO	_00281_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 3765     _00251_DS_:
                                    1- 3766     	.line	280, "main.c"; 	else if(workStep == 3)
                                    1- 3767     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3768     	MOVR	_workStep,W
     003E 2403                      1- 3769     	XORIA	0x03
     003F 0903                      1- 3770     	BTRSS	STATUS,2
                                    1- 3771     	MGOTO	_00248_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3772     	.line	281, "main.c"; 	maxDuty = 54;
     0041 2136                      1- 3773     	MOVIA	0x36
                                    1- 3774     	BANKSEL	_maxDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3775     	MOVAR	_maxDuty
                                    1- 3776     	MGOTO	_00281_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 3777     _00248_DS_:
                                    1- 3778     	.line	282, "main.c"; 	else if(workStep == 4)
                                    1- 3779     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 3780     	MOVR	_workStep,W
     0047 2404                      1- 3781     	XORIA	0x04
     0048 0903                      1- 3782     	BTRSS	STATUS,2
                                    1- 3783     	MGOTO	_00245_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3784     	.line	283, "main.c"; 	maxDuty = 56;
     004A 2138                      1- 3785     	MOVIA	0x38
                                    1- 3786     	BANKSEL	_maxDuty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 3787     	MOVAR	_maxDuty
                                    1- 3788     	MGOTO	_00281_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 3789     _00245_DS_:
                                    1- 3790     	.line	284, "main.c"; 	else if(workStep == 5)
                                    1- 3791     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 3792     	MOVR	_workStep,W
     0050 2405                      1- 3793     	XORIA	0x05
     0051 0903                      1- 3794     	BTRSS	STATUS,2
                                    1- 3795     	MGOTO	_00242_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3796     	.line	285, "main.c"; 	maxDuty = 58;
     0053 213A                      1- 3797     	MOVIA	0x3a
                                    1- 3798     	BANKSEL	_maxDuty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 3799     	MOVAR	_maxDuty
                                    1- 3800     	MGOTO	_00281_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 3801     _00242_DS_:
                                    1- 3802     	.line	286, "main.c"; 	else if(workStep == 6)
                                    1- 3803     	BANKSEL	_workStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 3804     	MOVR	_workStep,W
     0059 2406                      1- 3805     	XORIA	0x06
     005A 0903                      1- 3806     	BTRSS	STATUS,2
                                    1- 3807     	MGOTO	_00239_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3808     	.line	287, "main.c"; 	maxDuty = 60;
     005C 213C                      1- 3809     	MOVIA	0x3c
                                    1- 3810     	BANKSEL	_maxDuty
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 3811     	MOVAR	_maxDuty
                                    1- 3812     	MGOTO	_00281_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 3813     _00239_DS_:
                                    1- 3814     	.line	288, "main.c"; 	else if(workStep == 7)
                                    1- 3815     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 3816     	MOVR	_workStep,W
     0062 2407                      1- 3817     	XORIA	0x07
     0063 0903                      1- 3818     	BTRSS	STATUS,2
                                    1- 3819     	MGOTO	_00236_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3820     	.line	289, "main.c"; 	maxDuty = 62;
     0065 213E                      1- 3821     	MOVIA	0x3e
                                    1- 3822     	BANKSEL	_maxDuty
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 3823     	MOVAR	_maxDuty
                                    1- 3824     	MGOTO	_00281_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069                           1- 3825     _00236_DS_:
                                    1- 3826     	.line	290, "main.c"; 	else if(workStep == 8)
                                    1- 3827     	BANKSEL	_workStep
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3828     	MOVR	_workStep,W
     006B 2408                      1- 3829     	XORIA	0x08
     006C 0903                      1- 3830     	BTRSS	STATUS,2
                                    1- 3831     	MGOTO	_00281_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3832     	.line	291, "main.c"; 	maxDuty = 64;
     006E 2140                      1- 3833     	MOVIA	0x40
                                    1- 3834     	BANKSEL	_maxDuty
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 3835     	MOVAR	_maxDuty
                                    1- 3836     	MGOTO	_00281_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 3837     _00280_DS_:
                                    1- 3838     	.line	295, "main.c"; 	if(workStep == 1)
                                    1- 3839     	BANKSEL	_workStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 3840     	MOVR	_workStep,W
     0074 2401                      1- 3841     	XORIA	0x01
     0075 0903                      1- 3842     	BTRSS	STATUS,2
                                    1- 3843     	MGOTO	_00277_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3844     	.line	296, "main.c"; 	maxDuty = 40;
     0077 2128                      1- 3845     	MOVIA	0x28
                                    1- 3846     	BANKSEL	_maxDuty
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 3847     	MOVAR	_maxDuty
                                    1- 3848     	MGOTO	_00281_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1- 3849     _00277_DS_:
                                    1- 3850     	.line	297, "main.c"; 	else if(workStep == 2)
                                    1- 3851     	BANKSEL	_workStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 3852     	MOVR	_workStep,W
     007D 2402                      1- 3853     	XORIA	0x02
     007E 0903                      1- 3854     	BTRSS	STATUS,2
                                    1- 3855     	MGOTO	_00274_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3856     	.line	298, "main.c"; 	maxDuty = 44;
     0080 212C                      1- 3857     	MOVIA	0x2c
                                    1- 3858     	BANKSEL	_maxDuty
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 3859     	MOVAR	_maxDuty
                                    1- 3860     	MGOTO	_00281_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084                           1- 3861     _00274_DS_:
                                    1- 3862     	.line	299, "main.c"; 	else if(workStep == 3)
                                    1- 3863     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1- 3864     	MOVR	_workStep,W
     0086 2403                      1- 3865     	XORIA	0x03
     0087 0903                      1- 3866     	BTRSS	STATUS,2
                                    1- 3867     	MGOTO	_00271_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3868     	.line	300, "main.c"; 	maxDuty = 48;
     0089 2130                      1- 3869     	MOVIA	0x30
                                    1- 3870     	BANKSEL	_maxDuty
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 3871     	MOVAR	_maxDuty
                                    1- 3872     	MGOTO	_00281_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D                           1- 3873     _00271_DS_:
                                    1- 3874     	.line	301, "main.c"; 	else if(workStep == 4)
                                    1- 3875     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 3876     	MOVR	_workStep,W
     008F 2404                      1- 3877     	XORIA	0x04
     0090 0903                      1- 3878     	BTRSS	STATUS,2
                                    1- 3879     	MGOTO	_00268_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3880     	.line	302, "main.c"; 	maxDuty = 52;
     0092 2134                      1- 3881     	MOVIA	0x34
                                    1- 3882     	BANKSEL	_maxDuty
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 3883     	MOVAR	_maxDuty
                                    1- 3884     	MGOTO	_00281_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 3885     _00268_DS_:
                                    1- 3886     	.line	303, "main.c"; 	else if(workStep == 5)
                                    1- 3887     	BANKSEL	_workStep
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 01rr                      1- 3888     	MOVR	_workStep,W
     0098 2405                      1- 3889     	XORIA	0x05
     0099 0903                      1- 3890     	BTRSS	STATUS,2
                                    1- 3891     	MGOTO	_00265_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3892     	.line	304, "main.c"; 	maxDuty = 55;
     009B 2137                      1- 3893     	MOVIA	0x37
                                    1- 3894     	BANKSEL	_maxDuty
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 3895     	MOVAR	_maxDuty
                                    1- 3896     	MGOTO	_00281_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F                           1- 3897     _00265_DS_:
                                    1- 3898     	.line	305, "main.c"; 	else if(workStep == 6)
                                    1- 3899     	BANKSEL	_workStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 3900     	MOVR	_workStep,W
     00A1 2406                      1- 3901     	XORIA	0x06
     00A2 0903                      1- 3902     	BTRSS	STATUS,2
                                    1- 3903     	MGOTO	_00262_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3904     	.line	306, "main.c"; 	maxDuty = 58;
     00A4 213A                      1- 3905     	MOVIA	0x3a
                                    1- 3906     	BANKSEL	_maxDuty
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 3907     	MOVAR	_maxDuty
                                    1- 3908     	MGOTO	_00281_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8                           1- 3909     _00262_DS_:
                                    1- 3910     	.line	307, "main.c"; 	else if(workStep == 7)
                                    1- 3911     	BANKSEL	_workStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 3912     	MOVR	_workStep,W
     00AA 2407                      1- 3913     	XORIA	0x07
     00AB 0903                      1- 3914     	BTRSS	STATUS,2
                                    1- 3915     	MGOTO	_00259_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3916     	.line	308, "main.c"; 	maxDuty = 61;
     00AD 213D                      1- 3917     	MOVIA	0x3d
                                    1- 3918     	BANKSEL	_maxDuty
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 3919     	MOVAR	_maxDuty
                                    1- 3920     	MGOTO	_00281_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1                           1- 3921     _00259_DS_:
                                    1- 3922     	.line	309, "main.c"; 	else if(workStep == 8)
                                    1- 3923     	BANKSEL	_workStep
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 01rr                      1- 3924     	MOVR	_workStep,W
     00B3 2408                      1- 3925     	XORIA	0x08
     00B4 0903                      1- 3926     	BTRSS	STATUS,2
                                    1- 3927     	MGOTO	_00281_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3928     	.line	310, "main.c"; 	maxDuty = 64;
     00B6 2140                      1- 3929     	MOVIA	0x40
                                    1- 3930     	BANKSEL	_maxDuty
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 3931     	MOVAR	_maxDuty
     00B9                           1- 3932     _00281_DS_:
                                    1- 3933     	.line	312, "main.c"; 	if(workStep > 0)
                                    1- 3934     	BANKSEL	_workStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 3935     	MOVR	_workStep,W
     00BB 0D03                      1- 3936     	BTRSC	STATUS,2
                                    1- 3937     	MGOTO	_00283_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3938     	.line	314, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3939     	BANKSEL	_maxDuty
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 3940     	MOVR	_maxDuty,W
     00BF 00rr                      1- 3941     	SFUN	_PWM2DUTY
                                    1- 3942     	.line	315, "main.c"; 	pwmInit();
                                    1- 3943     	MCALL	_pwmInit
     00C0 2rrr                      3-   66 m1      LCALL rom_address
     00C1                           1- 3944     _00283_DS_:
                                    1- 3945     	.line	317, "main.c"; 	ledStep = workStep;
                                    1- 3946     	BANKSEL	_workStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 3947     	MOVR	_workStep,W
                                    1- 3948     	BANKSEL	_ledStep
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 00rr                      1- 3949     	MOVAR	_ledStep
                                    1- 3950     	MGOTO	_00298_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6                           1- 3951     _00296_DS_:
                                    1- 3952     	.line	319, "main.c"; 	else if(kclick == 2)
                                    1- 3953     	BANKSEL	r0x1070
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 01rr                      1- 3954     	MOVR	r0x1070,W
     00C8 2402                      1- 3955     	XORIA	0x02
     00C9 0903                      1- 3956     	BTRSS	STATUS,2
                                    1- 3957     	MGOTO	_00298_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3958     	.line	321, "main.c"; 	if(workStep > 0)
                                    1- 3959     	BANKSEL	_workStep
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 01rr                      1- 3960     	MOVR	_workStep,W
     00CD 0D03                      1- 3961     	BTRSC	STATUS,2
                                    1- 3962     	MGOTO	_00291_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3963     	.line	323, "main.c"; 	powerOff();
                                    1- 3964     	MCALL	_powerOff
     00CF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3965     	MGOTO	_00292_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
     00D1                           1- 3966     _00291_DS_:
                                    1- 3967     	.line	327, "main.c"; 	if(pwStep == 0 || lockStart)
                                    1- 3968     	BANKSEL	_pwStep
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 3969     	MOVR	_pwStep,W
     00D3 0D03                      1- 3970     	BTRSC	STATUS,2
                                    1- 3971     	MGOTO	_00284_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3972     	BANKSEL	_lockStart
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 3973     	MOVR	_lockStart,W
     00D7 0D03                      1- 3974     	BTRSC	STATUS,2
                                    1- 3975     	MGOTO	_00285_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
     00D9                           1- 3976     _00284_DS_:
                                    1- 3977     	.line	330, "main.c"; 	lockStart = 1;
     00D9 2101                      1- 3978     	MOVIA	0x01
                                    1- 3979     	BANKSEL	_lockStart
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 3980     	MOVAR	_lockStart
                                    1- 3981     	.line	331, "main.c"; 	shandengTime = 500;
     00DC 21F4                      1- 3982     	MOVIA	0xf4
                                    1- 3983     	BANKSEL	_shandengTime
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 00rr                      1- 3984     	MOVAR	_shandengTime
     00DF 2101                      1- 3985     	MOVIA	0x01
     00E0 00rr                      1- 3986     	MOVAR	(_shandengTime + 1)
                                    1- 3987     	.line	332, "main.c"; 	return;	
                                    1- 3988     	MGOTO	_00298_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
     00E2                           1- 3989     _00285_DS_:
                                    1- 3990     	.line	334, "main.c"; 	ledLightTime = 0;
                                    1- 3991     	BANKSEL	_ledLightTime
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 02rr                      1- 3992     	CLRR	_ledLightTime
                                    1- 3993     	.line	335, "main.c"; 	workStep = 1;
     00E4 2101                      1- 3994     	MOVIA	0x01
                                    1- 3995     	BANKSEL	_workStep
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 3996     	MOVAR	_workStep
                                    1- 3997     	.line	336, "main.c"; 	PWM2DUTY = 80;
     00E7 2150                      1- 3998     	MOVIA	0x50
     00E8 00rr                      1- 3999     	SFUN	_PWM2DUTY
                                    1- 4000     	.line	337, "main.c"; 	currentDuty = 80;
                                    1- 4001     	BANKSEL	_currentDuty
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 00rr                      1- 4002     	MOVAR	_currentDuty
                                    1- 4003     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 4004     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 4005     	.line	338, "main.c"; 	if(pwStep <= 4)
     00EB 2105                      1- 4006     	MOVIA	0x05
                                    1- 4007     	BANKSEL	_pwStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 4008     	SUBAR	_pwStep,W
     00EE 0C03                      1- 4009     	BTRSC	STATUS,0
                                    1- 4010     	MGOTO	_00288_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4011     	.line	339, "main.c"; 	maxDuty = 50;
     00F0 2132                      1- 4012     	MOVIA	0x32
                                    1- 4013     	BANKSEL	_maxDuty
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 00rr                      1- 4014     	MOVAR	_maxDuty
                                    1- 4015     	MGOTO	_00289_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
     00F4                           1- 4016     _00288_DS_:
                                    1- 4017     	.line	341, "main.c"; 	maxDuty = 40;
     00F4 2128                      1- 4018     	MOVIA	0x28
                                    1- 4019     	BANKSEL	_maxDuty
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 4020     	MOVAR	_maxDuty
     00F7                           1- 4021     _00289_DS_:
                                    1- 4022     	.line	342, "main.c"; 	pwmInit();
                                    1- 4023     	MCALL	_pwmInit
     00F7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 4024     	.line	343, "main.c"; 	shanshuoTime = 16;
     00F8 2110                      1- 4025     	MOVIA	0x10
                                    1- 4026     	BANKSEL	_shanshuoTime
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 4027     	MOVAR	_shanshuoTime
     00FB                           1- 4028     _00292_DS_:
                                    1- 4029     	.line	346, "main.c"; 	ledStep = workStep;
                                    1- 4030     	BANKSEL	_workStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 4031     	MOVR	_workStep,W
                                    1- 4032     	BANKSEL	_ledStep
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 4033     	MOVAR	_ledStep
     00FF                           1- 4034     _00298_DS_:
                                    1- 4035     	.line	348, "main.c"; 	}
                                    1- 4036     	RETURN	
     00FF 0010                      3-   40 m1      ret
                                    1- 4037     ; exit point of _keyCtr
                                    1- 4040     ;	code size estimation:
                                    1- 4041     ;	 1482+  422 =  1904 instructions ( 4652 byte)
                                    1- 4043     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
