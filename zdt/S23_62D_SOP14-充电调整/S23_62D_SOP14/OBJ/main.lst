
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_F_AIN3_Convert
                                    1-   21     	extern	_PORTAbits
                                    1-   22     	extern	_PORTBbits
                                    1-   23     	extern	_PCONbits
                                    1-   24     	extern	_BWUCONbits
                                    1-   25     	extern	_ABPLCONbits
                                    1-   26     	extern	_BPHCONbits
                                    1-   27     	extern	_INTEbits
                                    1-   28     	extern	_INTFbits
                                    1-   29     	extern	_ADMDbits
                                    1-   30     	extern	_ADRbits
                                    1-   31     	extern	_ADVREFHbits
                                    1-   32     	extern	_ADCRbits
                                    1-   33     	extern	_AWUCONbits
                                    1-   34     	extern	_PACONbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PCON
                                    1-   47     	extern	_BWUCON
                                    1-   48     	extern	_PCHBUF
                                    1-   49     	extern	_ABPLCON
                                    1-   50     	extern	_BPHCON
                                    1-   51     	extern	_INTE
                                    1-   52     	extern	_INTF
                                    1-   53     	extern	_ADMD
                                    1-   54     	extern	_ADR
                                    1-   55     	extern	_ADD
                                    1-   56     	extern	_ADVREFH
                                    1-   57     	extern	_ADCR
                                    1-   58     	extern	_AWUCON
                                    1-   59     	extern	_PACON
                                    1-   60     	extern	_INTEDG
                                    1-   61     	extern	_TMRH
                                    1-   62     	extern	_ANAEN
                                    1-   63     	extern	_RFC
                                    1-   64     	extern	_TM3RH
                                    1-   65     	extern	_INTE2
                                    1-   66     	extern	_TMR1
                                    1-   67     	extern	_T1CR1
                                    1-   68     	extern	_T1CR2
                                    1-   69     	extern	_PWM1DUTY
                                    1-   70     	extern	_PS1CV
                                    1-   71     	extern	_BZ1CR
                                    1-   72     	extern	_IRCR
                                    1-   73     	extern	_TBHP
                                    1-   74     	extern	_TBHD
                                    1-   75     	extern	_TMR2
                                    1-   76     	extern	_T2CR1
                                    1-   77     	extern	_T2CR2
                                    1-   78     	extern	_PWM2DUTY
                                    1-   79     	extern	_PS2CV
                                    1-   80     	extern	_BZ2CR
                                    1-   81     	extern	_OSCCR
                                    1-   82     	extern	_TMR3
                                    1-   83     	extern	_T3CR1
                                    1-   84     	extern	_T3CR2
                                    1-   85     	extern	_PWM3DUTY
                                    1-   86     	extern	_PS3CV
                                    1-   87     	extern	_BZ3CR
                                    1-   88     	extern	_IOSTA
                                    1-   89     	extern	_IOSTB
                                    1-   90     	extern	_APHCON
                                    1-   91     	extern	_PS0CV
                                    1-   92     	extern	_BODCON
                                    1-   93     	extern	_CMPCR
                                    1-   94     	extern	_PCON1
                                    1-   95     	extern	_T0MD
                                    1-   96     	extern	___sdcc_saved_fsr
                                    1-   97     	extern	___sdcc_saved_stk00
                                    1-   98     	extern	___sdcc_saved_stk01
                                    1-   99     	extern	__mulchar
                                    1-  100     	extern	__nyc_ny8_startup
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     ; global declarations
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     	extern	_F_wait_eoc
                                    1-  105     	extern	_F_AIN2_Convert
                                    1-  106     	extern	_F_AIN4_Convert
                                    1-  107     	extern	_checkOutA
                                    1-  108     	extern	_checkBatAD
                                    1-  109     	extern	_initAD
                                    1-  110     	extern	_delay
                                    1-  111     	extern	_chrgCtr
                                    1-  112     	extern	_keyRead
                                    1-  113     	extern	_gotoSleep
                                    1-  114     	extern	_pwmStop
                                    1-  115     	extern	_pwmInit
                                    1-  116     	extern	_pwm1Stop
                                    1-  117     	extern	_pwm1Init
                                    1-  118     	extern	_LED6ON
                                    1-  119     	extern	_LED5ON
                                    1-  120     	extern	_LED4ON
                                    1-  121     	extern	_LED3ON
                                    1-  122     	extern	_LED2ON
                                    1-  123     	extern	_LED1ON
                                    1-  124     	extern	_LedInput
                                    1-  125     	extern	_ledShow
                                    1-  126     	extern	_initSys
                                    1-  127     	extern	_powerOff
                                    1-  128     	extern	_keyCtr
                                    1-  129     	extern	_isr
                                    1-  130     	extern	_main
                                    1-  131     	extern	_Status
                                    1-  132     	extern	_duty
                                    1-  133     	extern	_intCount
                                    1-  134     	extern	_count500ms
                                    1-  135     	extern	_keyCount
                                    1-  136     	extern	_workStep
                                    1-  137     	extern	_ledStep
                                    1-  138     	extern	_preFG
                                    1-  139     	extern	_maxDuty
                                    1-  140     	extern	_pwStep
                                    1-  141     	extern	_R_AIN4_DATA
                                    1-  142     	extern	_R_AIN4_DATA_LB
                                    1-  143     	extern	_R_AIN2_DATA
                                    1-  144     	extern	_R_AIN2_DATA_LB
                                    1-  145     	extern	_chrgTime
                                    1-  146     	extern	_startStep
                                    1-  147     	extern	_sleepTime
                                    1-  148     	extern	_count200ms
                                    1-  149     	extern	_count1s
                                    1-  150     	extern	_count900s
                                    1-  151     	extern	_lowBatTime
                                    1-  152     	extern	_ledTime
                                    1-  153     	extern	_overCount
                                    1-  154     	extern	_chrgCount
                                    1-  155     	extern	_ledLightTime
                                    1-  156     	extern	_currentDuty
                                    1-  157     	extern	_fullCount
                                    1-  158     	extern	_shanshuoTime
                                    1-  159     	extern	_firstTime
                                    1-  160     	extern	_tempDuty
                                    1-  161     	extern	_lowCount
                                    1-  162     	extern	_cDuty
                                    1-  163     	extern	_tempLedStep
                                    1-  164     	extern	_count5S
                                    1-  165     	extern	_ledDeadTime
                                    1-  166     	extern	_lockLedStep
                                    1-  167     	extern	_closeCount
                                    1-  168     	extern	_chrgStep
                                    1-  169     	extern	_prePwStep
                                    1-  170     	extern	_chrgduty
                                    1-  171     	extern	_maxduty
                                    1-  172     	extern	_count50ms
                                    1-  173     	extern	_chrgFullFlag
                                    1-  174     	extern	_preR_AIN4_DATA
                                    1-  175     	extern	_pwmTime
                                    1-  176     	extern	_limitDuty
                                    1-  177     	extern	_addTime
                                    1-  178     	extern	_subTime
                                    1-  179     	extern	_subMin
                                    1-  180     	extern	_ledCount
                                    1-  181     	extern	_debug
                                    1-  183     	extern PSAVE
                                    1-  184     	extern SSAVE
                                    1-  185     	extern WSAVE
                                    1-  186     	extern STK04
                                    1-  187     	extern STK03
                                    1-  188     	extern STK02
                                    1-  189     	extern STK01
                                    1-  190     	extern STK00
                                    1-  192     .segment "uninit", 0x20000040
 20000040                           1-  193     PSAVE:
                                    1-  194     	.res 1
 20000041                           1-  195     SSAVE:
                                    1-  196     	.res 1
 20000042                           1-  197     WSAVE:
                                    1-  198     	.res 1
 20000043                           1-  199     STK04:
                                    1-  200     	.res 1
 20000044                           1-  201     STK03:
                                    1-  202     	.res 1
 20000045                           1-  203     STK02:
                                    1-  204     	.res 1
 20000046                           1-  205     STK01:
                                    1-  206     	.res 1
 20000047                           1-  207     STK00:
                                    1-  208     	.res 1
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     ; global definitions
                                    1-  212     ;--------------------------------------------------------
                                    1-  213     .segment "uninit"
     0000                           1-  214     _R_AIN4_DATA:
                                    1-  215     	.res	2
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN4_DATA_LB:
                                    1-  220     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN2_DATA:
                                    1-  225     	.res	2
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN2_DATA_LB:
                                    1-  230     	.res	1
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; absolute symbol definitions
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; compiler-defined variables
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1059:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1051:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1058:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1057:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1056:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1055:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1054:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1053:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x104A:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1052:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1050:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x104B:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x104C:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x104D:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x104F:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1034:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1035:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1048:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1049:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1042:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1043:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1044:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1045:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x103C:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x103D:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x103E:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1041:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1036:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x1037:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1038:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x103B:
                                    1-  331     	.res	1
                                    1-  332     ;--------------------------------------------------------
                                    1-  333     ; initialized data
                                    1-  334     ;--------------------------------------------------------
                                    1-  336     .segment "idata"
     0000                           1-  337     _Status:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _duty:
     0000 0000 0000                 1-  344     	dw	0x00, 0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _intCount:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _count500ms:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _keyCount:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _workStep:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _ledStep:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _preFG:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _maxDuty:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _pwStep:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _chrgTime:
     0000 0000 0000                 1-  398     	dw	0x00, 0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _startStep:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _sleepTime:
     0000 0000 0000                 1-  410     	dw	0x00, 0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _count200ms:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _count1s:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _count900s:
     0000 0000 0000                 1-  428     	dw	0x00, 0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _lowBatTime:
     0000 0000                      1-  434     	dw	0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _ledTime:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _overCount:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _chrgCount:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _ledLightTime:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _currentDuty:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _fullCount:
     0000 0000 0000                 1-  470     	dw	0x00, 0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _shanshuoTime:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _firstTime:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _tempDuty:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _lowCount:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _cDuty:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _tempLedStep:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _count5S:
     0000 0000 0000                 1-  512     	dw	0x00, 0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _ledDeadTime:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _lockLedStep:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _closeCount:
     0000 0000 0000                 1-  530     	dw	0x00, 0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _chrgStep:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _prePwStep:
     0000 0000                      1-  542     	dw	0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _chrgduty:
     0000 0000                      1-  548     	dw	0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _maxduty:
     0000 0000                      1-  554     	dw	0x00
                                    1-  558     .segment "idata"
     0000                           1-  559     _count50ms:
     0000 0000                      1-  560     	dw	0x00
                                    1-  564     .segment "idata"
     0000                           1-  565     _chrgFullFlag:
     0000 0000                      1-  566     	dw	0x00
                                    1-  570     .segment "idata"
     0000                           1-  571     _preR_AIN4_DATA:
     0000 0000                      1-  572     	dw	0x00
                                    1-  576     .segment "idata"
     0000                           1-  577     _pwmTime:
     0000 0000                      1-  578     	dw	0x00
                                    1-  582     .segment "idata"
     0000                           1-  583     _limitDuty:
     0000 0000                      1-  584     	dw	0x00
                                    1-  588     .segment "idata"
     0000                           1-  589     _addTime:
     0000 0000                      1-  590     	dw	0x00
                                    1-  594     .segment "idata"
     0000                           1-  595     _subTime:
     0000 0000                      1-  596     	dw	0x00
                                    1-  600     .segment "idata"
     0000                           1-  601     _subMin:
     0000 0000                      1-  602     	dw	0x00
                                    1-  606     .segment "idata"
     0000                           1-  607     _ledCount:
     0000 0000                      1-  608     	dw	0x00
                                    1-  612     .segment "idata"
     0000                           1-  613     _debug:
     0000 0000                      1-  614     	dw	0x00
                                    1-  617     ;--------------------------------------------------------
                                    1-  618     ; overlayable items in internal ram 
                                    1-  619     ;--------------------------------------------------------
                                    1-  620     ;	udata_ovr
                                    1-  621     ;--------------------------------------------------------
                                    1-  622     ; reset vector 
                                    1-  623     ;--------------------------------------------------------
                                    1-  624     ORG	0x0000
     0000 3rrr                      1-  625     	LGOTO	__nyc_ny8_startup
                                    1-  626     ;--------------------------------------------------------
                                    1-  627     ; interrupt and initialization code
                                    1-  628     ;--------------------------------------------------------
                                    1-  629     ORG 0x0008
                                    1-  630     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  632     .segment "code"
     0000                           1-  633     __sdcc_interrupt:
                                    1-  634     ;***
                                    1-  635     ;  pBlock Stats: dbName = I
                                    1-  636     ;***
                                    1-  637     ;2 compiler assigned registers:
                                    1-  638     ;   STK00
                                    1-  639     ;   STK01
                                    1-  640     ;; Starting pCode block
     0000                           1-  641     _isr:
                                    1-  642     ; 0 exit points
                                    1-  643     	.line	121, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  644     	MOVAR	WSAVE
     0001 1503                      1-  645     	SWAPR	STATUS,W
     0002 0283                      1-  646     	CLRR	STATUS
     0003 00rr                      1-  647     	MOVAR	SSAVE
     0004 010A                      1-  648     	MOVR	PCHBUF,W
     0005 028A                      1-  649     	CLRR	PCHBUF
     0006 00rr                      1-  650     	MOVAR	PSAVE
     0007 0104                      1-  651     	MOVR	FSR,W
                                    1-  652     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  653     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  654     	MOVR	STK00,W
                                    1-  655     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  656     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  657     	MOVR	STK01,W
                                    1-  658     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  659     	MOVAR	___sdcc_saved_stk01
                                    1-  660     	.line	123, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  661     	BTRSS	_INTFbits,0
                                    1-  662     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  663     	.line	125, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  664     	MOVIA	0x37
     0013 03rr                      1-  665     	ADDAR	_TMR0,F
                                    1-  666     	.line	127, "main.c"; 	if(++intCount >= 100)
                                    1-  667     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  668     	INCR	_intCount,F
                                    1-  669     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  670     	MOVIA	0x64
     0017 04rr                      1-  671     	SUBAR	_intCount,W
     0018 0803                      1-  672     	BTRSS	STATUS,0
                                    1-  673     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  674     	.line	129, "main.c"; 	IntFlag = 1;
                                    1-  675     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  676     	BSR	_Status,0
                                    1-  677     	.line	130, "main.c"; 	intCount = 0;
                                    1-  678     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  679     	CLRR	_intCount
                                    1-  680     	.line	131, "main.c"; 	if(++count500ms >= 40)
                                    1-  681     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  682     	INCR	_count500ms,F
                                    1-  683     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  684     	MOVIA	0x28
     0021 04rr                      1-  685     	SUBAR	_count500ms,W
     0022 0C03                      1-  686     	BTRSC	STATUS,0
                                    1-  687     	.line	132, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  688     	CLRR	_count500ms
                                    1-  689     	.line	133, "main.c"; 	if(++count200ms >= 20)
                                    1-  690     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  691     	INCR	_count200ms,F
     0026 2114                      1-  692     	MOVIA	0x14
     0027 04rr                      1-  693     	SUBAR	_count200ms,W
     0028 0803                      1-  694     	BTRSS	STATUS,0
                                    1-  695     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  696     	.line	135, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  697     	CLRR	_count200ms
                                    1-  698     	.line	136, "main.c"; 	if(ledDeadTime > 0)
                                    1-  699     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  700     	MOVR	_ledDeadTime,W
     002D 0903                      1-  701     	BTRSS	STATUS,2
                                    1-  702     	.line	137, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  703     	DECR	_ledDeadTime,F
     002F                           1-  704     _00110_DS_:
                                    1-  705     	.line	139, "main.c"; 	if(++count1s >= 100)
                                    1-  706     	BANKSEL	_count1s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  707     	INCR	_count1s,F
     0031 2164                      1-  708     	MOVIA	0x64
     0032 04rr                      1-  709     	SUBAR	_count1s,W
     0033 0803                      1-  710     	BTRSS	STATUS,0
                                    1-  711     	MGOTO	_00126_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  712     	.line	141, "main.c"; 	count1s = 0;
     0035 02rr                      1-  713     	CLRR	_count1s
                                    1-  714     	.line	142, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  715     	BANKSEL	_Status
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 09rr                      1-  716     	BTRSS	_Status,3
                                    1-  717     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  718     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  719     	MOVR	_pwStep,W
     003B 2406                      1-  720     	XORIA	0x06
     003C 0903                      1-  721     	BTRSS	STATUS,2
                                    1-  722     	MGOTO	_00112_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  723     	.line	144, "main.c"; 	++chrgTime;
                                    1-  724     	BANKSEL	_chrgTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  725     	INCR	_chrgTime,F
     0040 0D03                      1-  726     	BTRSC	STATUS,2
     0041 05rr                      1-  727     	INCR	(_chrgTime + 1),F
     0042                           1-  728     _00112_DS_:
                                    1-  729     	.line	147, "main.c"; 	if(ledLightTime > 0)
                                    1-  730     	BANKSEL	_ledLightTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  731     	MOVR	_ledLightTime,W
     0044 0903                      1-  732     	BTRSS	STATUS,2
                                    1-  733     	.line	148, "main.c"; 	--ledLightTime;
     0045 06rr                      1-  734     	DECR	_ledLightTime,F
                                    1-  735     	.line	149, "main.c"; 	if(shanshuoTime > 0)
                                    1-  736     	BANKSEL	_shanshuoTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  737     	MOVR	_shanshuoTime,W
     0048 0903                      1-  738     	BTRSS	STATUS,2
                                    1-  739     	.line	150, "main.c"; 	--shanshuoTime;
     0049 06rr                      1-  740     	DECR	_shanshuoTime,F
                                    1-  741     	.line	151, "main.c"; 	if(workStep)
                                    1-  742     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  743     	MOVR	_workStep,W
     004C 0D03                      1-  744     	BTRSC	STATUS,2
                                    1-  745     	MGOTO	_00119_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  746     	.line	153, "main.c"; 	++count900s;
                                    1-  747     	BANKSEL	_count900s
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1-  748     	INCR	_count900s,F
     0050 0D03                      1-  749     	BTRSC	STATUS,2
     0051 05rr                      1-  750     	INCR	(_count900s + 1),F
                                    1-  751     	MGOTO	_00126_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1-  752     _00119_DS_:
                                    1-  753     	.line	157, "main.c"; 	count900s = 0;
                                    1-  754     	BANKSEL	_count900s
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  755     	CLRR	_count900s
     0055 02rr                      1-  756     	CLRR	(_count900s + 1)
     0056                           1-  757     _00126_DS_:
                                    1-  758     	.line	166, "main.c"; 	if(INTFbits.PABIF)
     0056 08rr                      1-  759     	BTRSS	_INTFbits,1
                                    1-  760     	MGOTO	_00128_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  761     	.line	168, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0058 21FD                      1-  762     	MOVIA	0xfd
     0059 00rr                      1-  763     	MOVAR	_INTF
     005A                           1-  764     _00128_DS_:
                                    1-  765     	.line	171, "main.c"; 	INTF = 0;
     005A 02rr                      1-  766     	CLRR	_INTF
                                    1-  767     	.line	173, "main.c"; 	}
                                    1-  768     	BANKSEL	___sdcc_saved_stk01
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  769     	MOVR	___sdcc_saved_stk01,W
     005D 00rr                      1-  770     	MOVAR	STK01
                                    1-  771     	BANKSEL	___sdcc_saved_stk00
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  772     	MOVR	___sdcc_saved_stk00,W
     0060 00rr                      1-  773     	MOVAR	STK00
                                    1-  774     	BANKSEL	___sdcc_saved_fsr
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  775     	MOVR	___sdcc_saved_fsr,W
     0063 0084                      1-  776     	MOVAR	FSR
     0064 01rr                      1-  777     	MOVR	PSAVE,W
     0065 008A                      1-  778     	MOVAR	PCHBUF
     0066 0283                      1-  779     	CLRR	STATUS
     0067 15rr                      1-  780     	SWAPR	SSAVE,W
     0068 0083                      1-  781     	MOVAR	STATUS
     0069 15rr                      1-  782     	SWAPR	WSAVE,F
     006A 15rr                      1-  783     	SWAPR	WSAVE,W
     006B                           1-  784     END_OF_INTERRUPT:
     006B 0011                      1-  785     	RETIE	
                                    1-  787     ;--------------------------------------------------------
                                    1-  788     ; code
                                    1-  789     ;--------------------------------------------------------
                                    1-  790     ;***
                                    1-  791     ;  pBlock Stats: dbName = M
                                    1-  792     ;***
                                    1-  793     ;has an exit
                                    1-  794     ;functions called:
                                    1-  795     ;   _initSys
                                    1-  796     ;   _initAD
                                    1-  797     ;   _ledShow
                                    1-  798     ;   _pwmStop
                                    1-  799     ;   _powerOff
                                    1-  800     ;   _keyCtr
                                    1-  801     ;   _checkBatAD
                                    1-  802     ;   _checkOutA
                                    1-  803     ;   _chrgCtr
                                    1-  804     ;   _gotoSleep
                                    1-  805     ;   _powerOff
                                    1-  806     ;   _initSys
                                    1-  807     ;   _initAD
                                    1-  808     ;   _ledShow
                                    1-  809     ;   _pwmStop
                                    1-  810     ;   _powerOff
                                    1-  811     ;   _keyCtr
                                    1-  812     ;   _checkBatAD
                                    1-  813     ;   _checkOutA
                                    1-  814     ;   _chrgCtr
                                    1-  815     ;   _gotoSleep
                                    1-  816     ;   _powerOff
                                    1-  817     ;; Starting pCode block
                                    1-  818     .segment "code"; module=main, function=_main
     0000                           1-  820     _main:
                                    1-  821     ; 2 exit points
                                    1-  822     	.line	177, "main.c"; 	initSys();
                                    1-  823     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  824     	.line	178, "main.c"; 	initAD();
                                    1-  825     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  826     _00179_DS_:
                                    1-  827     	.line	181, "main.c"; 	CLRWDT();
     0002 0002                      1-  828     	clrwdt
                                    1-  829     	.line	182, "main.c"; 	ledShow();
                                    1-  830     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  831     	.line	183, "main.c"; 	if(workStep > 0 && tempDuty >= 45)
                                    1-  832     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  833     	MOVR	_workStep,W
     0006 0D03                      1-  834     	BTRSC	STATUS,2
                                    1-  835     	MGOTO	_00139_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  836     ;;unsigned compare: left < lit (0x2D=45), size=1
     0008 212D                      1-  837     	MOVIA	0x2d
                                    1-  838     	BANKSEL	_tempDuty
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  839     	SUBAR	_tempDuty,W
     000B 0803                      1-  840     	BTRSS	STATUS,0
                                    1-  841     	MGOTO	_00139_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  842     	.line	185, "main.c"; 	if(cDuty > tempDuty)
                                    1-  843     	BANKSEL	_cDuty
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  844     	MOVR	_cDuty,W
                                    1-  845     	BANKSEL	_tempDuty
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1-  846     	SUBAR	_tempDuty,W
     0011 0C03                      1-  847     	BTRSC	STATUS,0
                                    1-  848     	MGOTO	_00136_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  849     	.line	187, "main.c"; 	cDuty--;
                                    1-  850     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 06rr                      1-  851     	DECR	_cDuty,F
                                    1-  852     	.line	188, "main.c"; 	PWM2DUTY = cDuty;
     0015 01rr                      1-  853     	MOVR	_cDuty,W
     0016 00rr                      1-  854     	SFUN	_PWM2DUTY
                                    1-  855     	MGOTO	_00139_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1-  856     _00136_DS_:
                                    1-  857     	.line	190, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  858     	BANKSEL	_tempDuty
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1-  859     	MOVR	_tempDuty,W
                                    1-  860     	BANKSEL	_cDuty
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 04rr                      1-  861     	SUBAR	_cDuty,W
     001C 0C03                      1-  862     	BTRSC	STATUS,0
                                    1-  863     	MGOTO	_00139_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  864     	.line	192, "main.c"; 	cDuty++;
     001E 05rr                      1-  865     	INCR	_cDuty,F
                                    1-  866     	.line	193, "main.c"; 	PWM2DUTY = cDuty;
     001F 01rr                      1-  867     	MOVR	_cDuty,W
     0020 00rr                      1-  868     	SFUN	_PWM2DUTY
     0021                           1-  869     _00139_DS_:
                                    1-  870     	.line	196, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  871     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  872     	MOVR	_workStep,W
     0023 0D03                      1-  873     	BTRSC	STATUS,2
                                    1-  874     	MGOTO	_00142_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  875     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  876     	MOVR	_currentDuty,W
                                    1-  877     	BANKSEL	_maxDuty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  878     	SUBAR	_maxDuty,W
     0029 0C03                      1-  879     	BTRSC	STATUS,0
                                    1-  880     	MGOTO	_00142_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  881     	.line	198, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  882     	BANKSEL	_currentDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 06rr                      1-  883     	DECR	_currentDuty,F
                                    1-  884     	.line	199, "main.c"; 	PWM2DUTY = currentDuty;
     002D 01rr                      1-  885     	MOVR	_currentDuty,W
     002E 00rr                      1-  886     	SFUN	_PWM2DUTY
                                    1-  887     	.line	200, "main.c"; 	cDuty = currentDuty;
     002F 01rr                      1-  888     	MOVR	_currentDuty,W
                                    1-  889     	BANKSEL	_cDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  890     	MOVAR	_cDuty
     0032                           1-  891     _00142_DS_:
                                    1-  892     	.line	202, "main.c"; 	if(!IntFlag)
                                    1-  893     	BANKSEL	_Status
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 08rr                      1-  894     	BTRSS	_Status,0
                                    1-  895     	MGOTO	_00179_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  896     	.line	204, "main.c"; 	IntFlag = 0;
     0035 1Crr                      1-  897     	BCR	_Status,0
                                    1-  898     	.line	206, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  899     	BANKSEL	_shanshuoTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1-  900     	MOVR	_shanshuoTime,W
     0038 0903                      1-  901     	BTRSS	STATUS,2
                                    1-  902     	MGOTO	_00149_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  903     	BANKSEL	_pwStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  904     	MOVR	_pwStep,W
     003C 0903                      1-  905     	BTRSS	STATUS,2
                                    1-  906     	MGOTO	_00149_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  907     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  908     	MOVR	_workStep,W
     0040 0D03                      1-  909     	BTRSC	STATUS,2
                                    1-  910     	MGOTO	_00149_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  911     	.line	208, "main.c"; 	if(++closeCount >= 1000)
                                    1-  912     	BANKSEL	_closeCount
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 05rr                      1-  913     	INCR	_closeCount,F
     0044 0D03                      1-  914     	BTRSC	STATUS,2
     0045 05rr                      1-  915     	INCR	(_closeCount + 1),F
                                    1-  916     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0046 2103                      1-  917     	MOVIA	0x03
     0047 04rr                      1-  918     	SUBAR	(_closeCount + 1),W
     0048 0903                      1-  919     	BTRSS	STATUS,2
                                    1-  920     	MGOTO	_00268_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A 21E8                      1-  921     	MOVIA	0xe8
     004B 04rr                      1-  922     	SUBAR	_closeCount,W
     004C                           1-  923     _00268_DS_:
     004C 0803                      1-  924     	BTRSS	STATUS,0
                                    1-  925     	MGOTO	_00150_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  926     	.line	210, "main.c"; 	closeCount = 0;
                                    1-  927     	BANKSEL	_closeCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1-  928     	CLRR	_closeCount
     0050 02rr                      1-  929     	CLRR	(_closeCount + 1)
                                    1-  930     	.line	211, "main.c"; 	workStep = 0;
                                    1-  931     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1-  932     	CLRR	_workStep
                                    1-  933     	.line	212, "main.c"; 	ledStep = 0;
                                    1-  934     	BANKSEL	_ledStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  935     	CLRR	_ledStep
                                    1-  936     	.line	213, "main.c"; 	pwmStop();
                                    1-  937     	MCALL	_pwmStop
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  938     	MGOTO	_00150_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1-  939     _00149_DS_:
                                    1-  940     	.line	218, "main.c"; 	closeCount = 0;
                                    1-  941     	BANKSEL	_closeCount
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1-  942     	CLRR	_closeCount
     0059 02rr                      1-  943     	CLRR	(_closeCount + 1)
                                    1-  944     ;;unsigned compare: left < lit (0x5=5), size=1
     005A                           1-  945     _00150_DS_:
                                    1-  946     	.line	221, "main.c"; 	if(overCount >= 5 && workStep > 0)
     005A 2105                      1-  947     	MOVIA	0x05
                                    1-  948     	BANKSEL	_overCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1-  949     	SUBAR	_overCount,W
     005D 0803                      1-  950     	BTRSS	STATUS,0
                                    1-  951     	MGOTO	_00156_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  952     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1-  953     	MOVR	_workStep,W
     0061 0D03                      1-  954     	BTRSC	STATUS,2
                                    1-  955     	MGOTO	_00156_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  956     	.line	223, "main.c"; 	if(++count5S > 500)
                                    1-  957     	BANKSEL	_count5S
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 05rr                      1-  958     	INCR	_count5S,F
     0065 0D03                      1-  959     	BTRSC	STATUS,2
     0066 05rr                      1-  960     	INCR	(_count5S + 1),F
                                    1-  961     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  962     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0067 2101                      1-  963     	MOVIA	0x01
     0068 04rr                      1-  964     	SUBAR	(_count5S + 1),W
     0069 0903                      1-  965     	BTRSS	STATUS,2
                                    1-  966     	MGOTO	_00270_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 21F5                      1-  967     	MOVIA	0xf5
     006C 04rr                      1-  968     	SUBAR	_count5S,W
     006D                           1-  969     _00270_DS_:
     006D 0803                      1-  970     	BTRSS	STATUS,0
                                    1-  971     	MGOTO	_00157_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  972     	.line	225, "main.c"; 	overCount = 0;
                                    1-  973     	BANKSEL	_overCount
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 02rr                      1-  974     	CLRR	_overCount
                                    1-  975     	.line	226, "main.c"; 	count5S = 0;
                                    1-  976     	BANKSEL	_count5S
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1-  977     	CLRR	_count5S
     0073 02rr                      1-  978     	CLRR	(_count5S + 1)
                                    1-  979     	.line	227, "main.c"; 	ledDeadTime = 25;
     0074 2119                      1-  980     	MOVIA	0x19
                                    1-  981     	BANKSEL	_ledDeadTime
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1-  982     	MOVAR	_ledDeadTime
                                    1-  983     	.line	228, "main.c"; 	powerOff();
                                    1-  984     	MCALL	_powerOff
     0077 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  985     	MGOTO	_00157_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1-  986     _00156_DS_:
                                    1-  987     	.line	233, "main.c"; 	count5S = 0;
                                    1-  988     	BANKSEL	_count5S
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 02rr                      1-  989     	CLRR	_count5S
     007B 02rr                      1-  990     	CLRR	(_count5S + 1)
     007C                           1-  991     _00157_DS_:
                                    1-  992     	.line	235, "main.c"; 	if(chrgFlag == 0)
                                    1-  993     	BANKSEL	_Status
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 09rr                      1-  994     	BTRSS	_Status,3
                                    1-  995     	.line	236, "main.c"; 	keyCtr();
                                    1-  996     	MCALL	_keyCtr
     007E 2rrr                      3-   66 m1      LCALL rom_address
     007F                           1-  997     _00160_DS_:
                                    1-  998     	.line	237, "main.c"; 	if(count200ms < 3)
     007F 2103                      1-  999     	MOVIA	0x03
                                    1- 1000     	BANKSEL	_count200ms
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1- 1001     	SUBAR	_count200ms,W
     0082 0C03                      1- 1002     	BTRSC	STATUS,0
                                    1- 1003     	MGOTO	_00165_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1004     	.line	239, "main.c"; 	checkBatAD();
                                    1- 1005     	MCALL	_checkBatAD
     0084 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1006     	MGOTO	_00166_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1007     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1008     ;;unsigned compare: left >= lit (0x6=6), size=1
     0086                           1- 1009     _00165_DS_:
                                    1- 1010     	.line	241, "main.c"; 	else if(count200ms > 5 && count200ms < 19)
     0086 2106                      1- 1011     	MOVIA	0x06
                                    1- 1012     	BANKSEL	_count200ms
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 04rr                      1- 1013     	SUBAR	_count200ms,W
     0089 0803                      1- 1014     	BTRSS	STATUS,0
                                    1- 1015     	MGOTO	_00166_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1016     ;;unsigned compare: left < lit (0x13=19), size=1
     008B 2113                      1- 1017     	MOVIA	0x13
     008C 04rr                      1- 1018     	SUBAR	_count200ms,W
     008D 0803                      1- 1019     	BTRSS	STATUS,0
                                    1- 1020     	.line	243, "main.c"; 	checkOutA();
                                    1- 1021     	MCALL	_checkOutA
     008E 2rrr                      3-   66 m1      LCALL rom_address
     008F                           1- 1022     _00166_DS_:
                                    1- 1023     	.line	245, "main.c"; 	chrgCtr();
                                    1- 1024     	MCALL	_chrgCtr
     008F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1025     	.line	248, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1- 1026     	BANKSEL	_workStep
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 01rr                      1- 1027     	MOVR	_workStep,W
     0092 0903                      1- 1028     	BTRSS	STATUS,2
                                    1- 1029     	MGOTO	_00170_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	BANKSEL	_keyCount
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 1031     	MOVR	_keyCount,W
     0096 0903                      1- 1032     	BTRSS	STATUS,2
                                    1- 1033     	MGOTO	_00170_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1034     	BANKSEL	_PORTA
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 0Drr                      1- 1035     	BTRSC	_PORTA,3
                                    1- 1036     	MGOTO	_00170_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1037     	BANKSEL	_ledLightTime
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1038     	MOVR	_ledLightTime,W
     009D 0903                      1- 1039     	BTRSS	STATUS,2
                                    1- 1040     	MGOTO	_00170_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1041     	BANKSEL	_ledDeadTime
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 1042     	MOVR	_ledDeadTime,W
     00A1 0903                      1- 1043     	BTRSS	STATUS,2
                                    1- 1044     	MGOTO	_00170_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1045     	BANKSEL	_shanshuoTime
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 01rr                      1- 1046     	MOVR	_shanshuoTime,W
     00A5 0903                      1- 1047     	BTRSS	STATUS,2
                                    1- 1048     	MGOTO	_00170_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1049     	.line	250, "main.c"; 	if(++sleepTime > 20)
                                    1- 1050     	BANKSEL	_sleepTime
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 05rr                      1- 1051     	INCR	_sleepTime,F
     00A9 0D03                      1- 1052     	BTRSC	STATUS,2
     00AA 05rr                      1- 1053     	INCR	(_sleepTime + 1),F
                                    1- 1054     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1055     ;;unsigned compare: left >= lit (0x15=21), size=2
     00AB 2100                      1- 1056     	MOVIA	0x00
     00AC 04rr                      1- 1057     	SUBAR	(_sleepTime + 1),W
     00AD 0903                      1- 1058     	BTRSS	STATUS,2
                                    1- 1059     	MGOTO	_00274_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF 2115                      1- 1060     	MOVIA	0x15
     00B0 04rr                      1- 1061     	SUBAR	_sleepTime,W
     00B1                           1- 1062     _00274_DS_:
     00B1 0803                      1- 1063     	BTRSS	STATUS,0
                                    1- 1064     	MGOTO	_00170_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1065     	.line	252, "main.c"; 	gotoSleep();
                                    1- 1066     	MCALL	_gotoSleep
     00B3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1067     ;;unsigned compare: left < lit (0x384=900), size=2
     00B4                           1- 1068     _00170_DS_:
                                    1- 1069     	.line	256, "main.c"; 	if(count900s >= 900)
     00B4 2103                      1- 1070     	MOVIA	0x03
                                    1- 1071     	BANKSEL	_count900s
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 04rr                      1- 1072     	SUBAR	(_count900s + 1),W
     00B7 0903                      1- 1073     	BTRSS	STATUS,2
                                    1- 1074     	MGOTO	_00275_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
     00B9 2184                      1- 1075     	MOVIA	0x84
     00BA 04rr                      1- 1076     	SUBAR	_count900s,W
     00BB                           1- 1077     _00275_DS_:
     00BB 0803                      1- 1078     	BTRSS	STATUS,0
                                    1- 1079     	MGOTO	_00179_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1080     	.line	258, "main.c"; 	powerOff();
                                    1- 1081     	MCALL	_powerOff
     00BD 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1082     	MGOTO	_00179_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1083     	.line	262, "main.c"; 	}
                                    1- 1084     	RETURN	
     00BF 0010                      3-   40 m1      ret
                                    1- 1085     ; exit point of _main
                                    1- 1087     ;***
                                    1- 1088     ;  pBlock Stats: dbName = C
                                    1- 1089     ;***
                                    1- 1090     ;has an exit
                                    1- 1091     ;; Starting pCode block
                                    1- 1092     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1094     _F_wait_eoc:
                                    1- 1095     ; 2 exit points
     0000                           1- 1096     _00816_DS_:
                                    1- 1097     	.line	931, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1098     	BTRSS	_ADMDbits,5
                                    1- 1099     	MGOTO	_00816_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1100     	.line	933, "main.c"; 	}
                                    1- 1101     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1102     ; exit point of _F_wait_eoc
                                    1- 1104     ;***
                                    1- 1105     ;  pBlock Stats: dbName = C
                                    1- 1106     ;***
                                    1- 1107     ;has an exit
                                    1- 1108     ;functions called:
                                    1- 1109     ;   _delay
                                    1- 1110     ;   _F_wait_eoc
                                    1- 1111     ;   _delay
                                    1- 1112     ;   _F_wait_eoc
                                    1- 1113     ;6 compiler assigned registers:
                                    1- 1114     ;   r0x1036
                                    1- 1115     ;   r0x1037
                                    1- 1116     ;   r0x1038
                                    1- 1117     ;   r0x1039
                                    1- 1118     ;   r0x103A
                                    1- 1119     ;   r0x103B
                                    1- 1120     ;; Starting pCode block
                                    1- 1121     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1123     ;local variable name mapping:
     0000                           1- 1126     _F_AIN2_Convert:
                                    1- 1127     ; 2 exit points
                                    1- 1128     	.line	914, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1129     	BANKSEL	r0x1036
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1130     	MOVAR	r0x1036
                                    1- 1131     	.line	916, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1132     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1133     	CLRR	_R_AIN2_DATA_LB
                                    1- 1134     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1135     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1136     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1137     	.line	918, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1138     	MOVIA	0x92
     0008 00rr                      1- 1139     	MOVAR	_ADMD
                                    1- 1140     	.line	919, "main.c"; 	delay(200);	
     0009 21C8                      1- 1141     	MOVIA	0xc8
                                    1- 1142     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1143     	.line	920, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1144     	MOVIA	0x01
                                    1- 1145     	BANKSEL	r0x1037
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1146     	MOVAR	r0x1037
     000E                           1- 1147     _00809_DS_:
                                    1- 1148     	BANKSEL	r0x1037
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1149     	MOVR	r0x1037,W
                                    1- 1150     	BANKSEL	r0x1036
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1151     	SUBAR	r0x1036,W
     0012 0803                      1- 1152     	BTRSS	STATUS,0
                                    1- 1153     	MGOTO	_00811_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1154     	.line	922, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1155     	BSR	_ADMDbits,6
                                    1- 1156     	.line	923, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1157     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1158     	.line	924, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1159     	MOVIA	0x0f
     0017 10rr                      1- 1160     	ANDAR	_ADR,W
                                    1- 1161     ;;3	MOVAR	r0x1038
                                    1- 1162     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1163     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1164     	.line	925, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1165     	MOVR	_ADD,W
                                    1- 1166     	BANKSEL	r0x1038
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1167     	MOVAR	r0x1038
                                    1- 1168     ;;1	CLRR	r0x1039
                                    1- 1169     ;;105	MOVR	r0x1038,W
                                    1- 1170     ;;103	MOVAR	r0x103A
     001D 2100                      1- 1171     	MOVIA	0x00
                                    1- 1172     	BANKSEL	r0x103B
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1173     	MOVAR	r0x103B
                                    1- 1174     ;;104	MOVR	r0x103A,W
                                    1- 1175     	BANKSEL	r0x1038
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1176     	MOVR	r0x1038,W
                                    1- 1177     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1178     	ADDAR	_R_AIN2_DATA,F
                                    1- 1179     	BANKSEL	r0x103B
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1180     	MOVR	r0x103B,W
     0026 0C03                      1- 1181     	BTRSC	STATUS,0
     0027 05rr                      1- 1182     	INCR	r0x103B,W
     0028 0D03                      1- 1183     	BTRSC	STATUS,2
                                    1- 1184     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1185     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1186     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1187     _00001_DS_:
                                    1- 1188     	.line	920, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1189     	BANKSEL	r0x1037
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1190     	INCR	r0x1037,F
                                    1- 1191     	MGOTO	_00809_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1192     _00811_DS_:
                                    1- 1193     	.line	927, "main.c"; 	}
                                    1- 1194     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1195     ; exit point of _F_AIN2_Convert
                                    1- 1197     ;***
                                    1- 1198     ;  pBlock Stats: dbName = C
                                    1- 1199     ;***
                                    1- 1200     ;has an exit
                                    1- 1201     ;functions called:
                                    1- 1202     ;   _delay
                                    1- 1203     ;   _F_wait_eoc
                                    1- 1204     ;   _delay
                                    1- 1205     ;   _F_wait_eoc
                                    1- 1206     ;6 compiler assigned registers:
                                    1- 1207     ;   r0x103C
                                    1- 1208     ;   r0x103D
                                    1- 1209     ;   r0x103E
                                    1- 1210     ;   r0x103F
                                    1- 1211     ;   r0x1040
                                    1- 1212     ;   r0x1041
                                    1- 1213     ;; Starting pCode block
                                    1- 1214     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1216     ;local variable name mapping:
     0000                           1- 1219     _F_AIN4_Convert:
                                    1- 1220     ; 2 exit points
                                    1- 1221     	.line	899, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1222     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1223     	MOVAR	r0x103C
                                    1- 1224     	.line	901, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1225     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1226     	CLRR	_R_AIN4_DATA_LB
                                    1- 1227     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1228     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1229     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1230     	.line	903, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1231     	MOVIA	0x94
     0008 00rr                      1- 1232     	MOVAR	_ADMD
                                    1- 1233     	.line	904, "main.c"; 	delay(200);	
     0009 21C8                      1- 1234     	MOVIA	0xc8
                                    1- 1235     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1236     	.line	905, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1237     	MOVIA	0x01
                                    1- 1238     	BANKSEL	r0x103D
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1239     	MOVAR	r0x103D
     000E                           1- 1240     _00800_DS_:
                                    1- 1241     	BANKSEL	r0x103D
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1242     	MOVR	r0x103D,W
                                    1- 1243     	BANKSEL	r0x103C
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1244     	SUBAR	r0x103C,W
     0012 0803                      1- 1245     	BTRSS	STATUS,0
                                    1- 1246     	MGOTO	_00802_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1247     	.line	907, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1248     	BSR	_ADMDbits,6
                                    1- 1249     	.line	908, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1250     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1251     	.line	909, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1252     	MOVIA	0x0f
     0017 10rr                      1- 1253     	ANDAR	_ADR,W
                                    1- 1254     ;;3	MOVAR	r0x103E
                                    1- 1255     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1256     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1257     	.line	910, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1258     	MOVR	_ADD,W
                                    1- 1259     	BANKSEL	r0x103E
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1260     	MOVAR	r0x103E
                                    1- 1261     ;;1	CLRR	r0x103F
                                    1- 1262     ;;102	MOVR	r0x103E,W
                                    1- 1263     ;;100	MOVAR	r0x1040
     001D 2100                      1- 1264     	MOVIA	0x00
                                    1- 1265     	BANKSEL	r0x1041
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1266     	MOVAR	r0x1041
                                    1- 1267     ;;101	MOVR	r0x1040,W
                                    1- 1268     	BANKSEL	r0x103E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1269     	MOVR	r0x103E,W
                                    1- 1270     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1271     	ADDAR	_R_AIN4_DATA,F
                                    1- 1272     	BANKSEL	r0x1041
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1273     	MOVR	r0x1041,W
     0026 0C03                      1- 1274     	BTRSC	STATUS,0
     0027 05rr                      1- 1275     	INCR	r0x1041,W
     0028 0D03                      1- 1276     	BTRSC	STATUS,2
                                    1- 1277     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1278     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1279     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1280     _00002_DS_:
                                    1- 1281     	.line	905, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1282     	BANKSEL	r0x103D
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1283     	INCR	r0x103D,F
                                    1- 1284     	MGOTO	_00800_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1285     _00802_DS_:
                                    1- 1286     	.line	912, "main.c"; 	}
                                    1- 1287     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1288     ; exit point of _F_AIN4_Convert
                                    1- 1290     ;***
                                    1- 1291     ;  pBlock Stats: dbName = C
                                    1- 1292     ;***
                                    1- 1293     ;has an exit
                                    1- 1294     ;functions called:
                                    1- 1295     ;   _F_AIN4_Convert
                                    1- 1296     ;   __mulchar
                                    1- 1297     ;   __mulchar
                                    1- 1298     ;   _F_AIN4_Convert
                                    1- 1299     ;   __mulchar
                                    1- 1300     ;   __mulchar
                                    1- 1301     ;5 compiler assigned registers:
                                    1- 1302     ;   r0x1042
                                    1- 1303     ;   r0x1043
                                    1- 1304     ;   r0x1044
                                    1- 1305     ;   r0x1045
                                    1- 1306     ;   STK00
                                    1- 1307     ;; Starting pCode block
                                    1- 1308     .segment "code"; module=main, function=_checkOutA
                                    1- 1310     ;local variable name mapping:
     0000                           1- 1312     _checkOutA:
                                    1- 1313     ; 2 exit points
                                    1- 1314     	.line	811, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1315     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1316     	CLRR	_R_AIN4_DATA_LB
                                    1- 1317     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1318     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1319     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1320     	.line	812, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1321     	MOVIA	0x08
                                    1- 1322     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1323     	.line	813, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1324     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1325     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1326     	ANDIA	0xf0
     000A 00rr                      1- 1327     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1328     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1329     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1330     	ANDIA	0x0f
     000E 11rr                      1- 1331     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1332     	XORAR	_R_AIN4_DATA,F
                                    1- 1333     	.line	814, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1334     	MOVIA	0xf0
                                    1- 1335     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1336     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1337     	.line	815, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1338     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1339     	BANKSEL	r0x1044
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1340     	MOVAR	r0x1044
                                    1- 1341     	BANKSEL	r0x1042
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1342     	MOVAR	r0x1042
                                    1- 1343     	BANKSEL	r0x1043
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1344     	CLRR	r0x1043
                                    1- 1345     ;;106	MOVR	r0x1042,W
     001A 2100                      1- 1346     	MOVIA	0x00
                                    1- 1347     	BANKSEL	r0x1045
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1348     	MOVAR	r0x1045
                                    1- 1349     	BANKSEL	r0x1044
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1350     	MOVR	r0x1044,W
                                    1- 1351     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1352     	ADDAR	_R_AIN4_DATA,F
                                    1- 1353     	BANKSEL	r0x1045
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1354     	MOVR	r0x1045,W
     0023 0C03                      1- 1355     	BTRSC	STATUS,0
     0024 05rr                      1- 1356     	INCR	r0x1045,W
     0025 0D03                      1- 1357     	BTRSC	STATUS,2
                                    1- 1358     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1359     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1360     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1361     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1362     _00003_DS_:
                                    1- 1363     	.line	816, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1364     	BCR	STATUS,0
                                    1- 1365     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1366     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1367     	RRR	_R_AIN4_DATA,F
                                    1- 1368     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1369     	BCR	STATUS,0
     002E 13rr                      1- 1370     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1371     	RRR	_R_AIN4_DATA,F
                                    1- 1372     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1373     	BCR	STATUS,0
     0031 13rr                      1- 1374     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1375     	RRR	_R_AIN4_DATA,F
                                    1- 1376     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1377     	.line	817, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0033 2106                      1- 1378     	MOVIA	0x06
                                    1- 1379     	BANKSEL	_workStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 04rr                      1- 1380     	SUBAR	_workStep,W
     0036 0C03                      1- 1381     	BTRSC	STATUS,0
                                    1- 1382     	MGOTO	_00727_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1383     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1384     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0038 2100                      1- 1385     	MOVIA	0x00
                                    1- 1386     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1387     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1388     	BTRSS	STATUS,2
                                    1- 1389     	MGOTO	_00786_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21C9                      1- 1390     	MOVIA	0xc9
     003E 04rr                      1- 1391     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1392     _00786_DS_:
     003F 0803                      1- 1393     	BTRSS	STATUS,0
                                    1- 1394     	MGOTO	_00727_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1395     	.line	819, "main.c"; 	if(++overCount > 5)
                                    1- 1396     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 05rr                      1- 1397     	INCR	_overCount,F
                                    1- 1398     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1399     ;;unsigned compare: left >= lit (0x6=6), size=1
     0043 2106                      1- 1400     	MOVIA	0x06
     0044 04rr                      1- 1401     	SUBAR	_overCount,W
     0045 0803                      1- 1402     	BTRSS	STATUS,0
                                    1- 1403     	MGOTO	_00728_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1404     	.line	821, "main.c"; 	overCount = 5;
     0047 2105                      1- 1405     	MOVIA	0x05
     0048 00rr                      1- 1406     	MOVAR	_overCount
                                    1- 1407     	MGOTO	_00728_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1408     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1409     ;;unsigned compare: left >= lit (0x191=401), size=2
     004A                           1- 1410     _00727_DS_:
                                    1- 1411     	.line	824, "main.c"; 	else if(R_AIN4_DATA > 400)
     004A 2101                      1- 1412     	MOVIA	0x01
                                    1- 1413     	BANKSEL	_R_AIN4_DATA
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1414     	SUBAR	(_R_AIN4_DATA + 1),W
     004D 0903                      1- 1415     	BTRSS	STATUS,2
                                    1- 1416     	MGOTO	_00788_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F 2191                      1- 1417     	MOVIA	0x91
     0050 04rr                      1- 1418     	SUBAR	_R_AIN4_DATA,W
     0051                           1- 1419     _00788_DS_:
     0051 0803                      1- 1420     	BTRSS	STATUS,0
                                    1- 1421     	MGOTO	_00724_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1422     	.line	826, "main.c"; 	if(++overCount > 5)
                                    1- 1423     	BANKSEL	_overCount
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 05rr                      1- 1424     	INCR	_overCount,F
                                    1- 1425     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1426     ;;unsigned compare: left >= lit (0x6=6), size=1
     0055 2106                      1- 1427     	MOVIA	0x06
     0056 04rr                      1- 1428     	SUBAR	_overCount,W
     0057 0803                      1- 1429     	BTRSS	STATUS,0
                                    1- 1430     	MGOTO	_00728_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1431     	.line	828, "main.c"; 	overCount = 5;
     0059 2105                      1- 1432     	MOVIA	0x05
     005A 00rr                      1- 1433     	MOVAR	_overCount
                                    1- 1434     	MGOTO	_00728_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1435     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1436     ;;unsigned compare: left >= lit (0x4E=78), size=2
     005C                           1- 1437     _00724_DS_:
                                    1- 1438     	.line	836, "main.c"; 	else if(R_AIN4_DATA > 77)
     005C 2100                      1- 1439     	MOVIA	0x00
                                    1- 1440     	BANKSEL	_R_AIN4_DATA
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 04rr                      1- 1441     	SUBAR	(_R_AIN4_DATA + 1),W
     005F 0903                      1- 1442     	BTRSS	STATUS,2
                                    1- 1443     	MGOTO	_00790_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
     0061 214E                      1- 1444     	MOVIA	0x4e
     0062 04rr                      1- 1445     	SUBAR	_R_AIN4_DATA,W
     0063                           1- 1446     _00790_DS_:
     0063 0803                      1- 1447     	BTRSS	STATUS,0
                                    1- 1448     	MGOTO	_00721_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1449     	.line	838, "main.c"; 	if(overCount > 0)
                                    1- 1450     	BANKSEL	_overCount
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 1451     	MOVR	_overCount,W
     0067 0903                      1- 1452     	BTRSS	STATUS,2
                                    1- 1453     	.line	840, "main.c"; 	overCount--;
     0068 06rr                      1- 1454     	DECR	_overCount,F
                                    1- 1455     	.line	843, "main.c"; 	tempDuty = 70 + workStep*5;
     0069 2105                      1- 1456     	MOVIA	0x05
     006A 00rr                      1- 1457     	MOVAR	STK00
                                    1- 1458     	BANKSEL	_workStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 1459     	MOVR	_workStep,W
                                    1- 1460     	MCALL	__mulchar
     006D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1461     	BANKSEL	r0x1042
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1462     	MOVAR	r0x1042
     0070 2146                      1- 1463     	MOVIA	0x46
     0071 03rr                      1- 1464     	ADDAR	r0x1042,W
                                    1- 1465     	BANKSEL	_tempDuty
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1466     	MOVAR	_tempDuty
                                    1- 1467     	MGOTO	_00728_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 1468     _00721_DS_:
                                    1- 1469     	.line	848, "main.c"; 	u8t maxAout = 40;
     0075 2128                      1- 1470     	MOVIA	0x28
                                    1- 1471     	BANKSEL	r0x1042
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 1472     	MOVAR	r0x1042
                                    1- 1473     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1474     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 1475     	.line	849, "main.c"; 	if(pwStep > 3)
     0078 2104                      1- 1476     	MOVIA	0x04
                                    1- 1477     	BANKSEL	_pwStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 04rr                      1- 1478     	SUBAR	_pwStep,W
     007B 0803                      1- 1479     	BTRSS	STATUS,0
                                    1- 1480     	MGOTO	_00698_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1481     	.line	850, "main.c"; 	maxAout = 45;
     007D 212D                      1- 1482     	MOVIA	0x2d
                                    1- 1483     	BANKSEL	r0x1042
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 1484     	MOVAR	r0x1042
     0080                           1- 1485     _00698_DS_:
                                    1- 1486     	.line	851, "main.c"; 	if(workStep == 1)
                                    1- 1487     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 1488     	MOVR	_workStep,W
     0082 2401                      1- 1489     	XORIA	0x01
     0083 0903                      1- 1490     	BTRSS	STATUS,2
                                    1- 1491     	MGOTO	_00711_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1492     	.line	853, "main.c"; 	maxAout = maxAout - 11;
     0085 21F5                      1- 1493     	MOVIA	0xf5
                                    1- 1494     	BANKSEL	r0x1042
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 03rr                      1- 1495     	ADDAR	r0x1042,F
                                    1- 1496     	MGOTO	_00712_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
     0089                           1- 1497     _00711_DS_:
                                    1- 1498     	.line	855, "main.c"; 	else if(workStep == 2)
                                    1- 1499     	BANKSEL	_workStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 1500     	MOVR	_workStep,W
     008B 2402                      1- 1501     	XORIA	0x02
     008C 0903                      1- 1502     	BTRSS	STATUS,2
                                    1- 1503     	MGOTO	_00708_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1504     	.line	857, "main.c"; 	maxAout = maxAout - 8;
     008E 21F8                      1- 1505     	MOVIA	0xf8
                                    1- 1506     	BANKSEL	r0x1042
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 03rr                      1- 1507     	ADDAR	r0x1042,F
                                    1- 1508     	MGOTO	_00712_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092                           1- 1509     _00708_DS_:
                                    1- 1510     	.line	859, "main.c"; 	else if(workStep == 4)
                                    1- 1511     	BANKSEL	_workStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1- 1512     	MOVR	_workStep,W
     0094 2404                      1- 1513     	XORIA	0x04
     0095 0903                      1- 1514     	BTRSS	STATUS,2
                                    1- 1515     	MGOTO	_00705_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1516     	.line	861, "main.c"; 	maxAout = maxAout + 5;
     0097 2105                      1- 1517     	MOVIA	0x05
                                    1- 1518     	BANKSEL	r0x1042
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 03rr                      1- 1519     	ADDAR	r0x1042,F
                                    1- 1520     	MGOTO	_00712_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B                           1- 1521     _00705_DS_:
                                    1- 1522     	.line	863, "main.c"; 	else if(workStep == 5)
                                    1- 1523     	BANKSEL	_workStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1524     	MOVR	_workStep,W
     009D 2405                      1- 1525     	XORIA	0x05
     009E 0903                      1- 1526     	BTRSS	STATUS,2
                                    1- 1527     	MGOTO	_00702_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1528     	.line	865, "main.c"; 	maxAout = maxAout + 10;
     00A0 210A                      1- 1529     	MOVIA	0x0a
                                    1- 1530     	BANKSEL	r0x1042
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 03rr                      1- 1531     	ADDAR	r0x1042,F
                                    1- 1532     	MGOTO	_00712_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
     00A4                           1- 1533     _00702_DS_:
                                    1- 1534     	.line	867, "main.c"; 	else if(workStep == 6)
                                    1- 1535     	BANKSEL	_workStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1536     	MOVR	_workStep,W
     00A6 2406                      1- 1537     	XORIA	0x06
     00A7 0903                      1- 1538     	BTRSS	STATUS,2
                                    1- 1539     	MGOTO	_00712_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1540     	.line	869, "main.c"; 	maxAout = maxAout + 18;
     00A9 2112                      1- 1541     	MOVIA	0x12
                                    1- 1542     	BANKSEL	r0x1042
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 03rr                      1- 1543     	ADDAR	r0x1042,F
     00AC                           1- 1544     _00712_DS_:
                                    1- 1545     	.line	871, "main.c"; 	if(overCount > 0)
                                    1- 1546     	BANKSEL	_overCount
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1547     	MOVR	_overCount,W
     00AE 0903                      1- 1548     	BTRSS	STATUS,2
                                    1- 1549     	.line	873, "main.c"; 	overCount--;
     00AF 06rr                      1- 1550     	DECR	_overCount,F
                                    1- 1551     	.line	875, "main.c"; 	if(R_AIN4_DATA > maxAout)
                                    1- 1552     	BANKSEL	r0x1042
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 01rr                      1- 1553     	MOVR	r0x1042,W
                                    1- 1554     	BANKSEL	r0x1043
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1555     	MOVAR	r0x1043
                                    1- 1556     	BANKSEL	r0x1044
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 02rr                      1- 1557     	CLRR	r0x1044
                                    1- 1558     	BANKSEL	_R_AIN4_DATA
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 01rr                      1- 1559     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1560     	BANKSEL	r0x1044
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 1561     	SUBAR	r0x1044,W
     00BA 0903                      1- 1562     	BTRSS	STATUS,2
                                    1- 1563     	MGOTO	_00792_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1564     	BANKSEL	_R_AIN4_DATA
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 1565     	MOVR	_R_AIN4_DATA,W
                                    1- 1566     	BANKSEL	r0x1043
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 04rr                      1- 1567     	SUBAR	r0x1043,W
     00C0                           1- 1568     _00792_DS_:
     00C0 0C03                      1- 1569     	BTRSC	STATUS,0
                                    1- 1570     	MGOTO	_00718_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1571     	.line	877, "main.c"; 	tempDuty = 70 + workStep*5;
     00C2 2105                      1- 1572     	MOVIA	0x05
     00C3 00rr                      1- 1573     	MOVAR	STK00
                                    1- 1574     	BANKSEL	_workStep
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 01rr                      1- 1575     	MOVR	_workStep,W
                                    1- 1576     	MCALL	__mulchar
     00C6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1577     	BANKSEL	r0x1042
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 1578     	MOVAR	r0x1042
     00C9 2146                      1- 1579     	MOVIA	0x46
     00CA 03rr                      1- 1580     	ADDAR	r0x1042,W
                                    1- 1581     	BANKSEL	_tempDuty
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 00rr                      1- 1582     	MOVAR	_tempDuty
                                    1- 1583     	MGOTO	_00728_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1584     ;;unsigned compare: left < lit (0x4B=75), size=2
     00CE                           1- 1585     _00718_DS_:
                                    1- 1586     	.line	880, "main.c"; 	else if(R_AIN4_DATA < 75)
     00CE 2100                      1- 1587     	MOVIA	0x00
                                    1- 1588     	BANKSEL	_R_AIN4_DATA
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 04rr                      1- 1589     	SUBAR	(_R_AIN4_DATA + 1),W
     00D1 0903                      1- 1590     	BTRSS	STATUS,2
                                    1- 1591     	MGOTO	_00793_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
     00D3 214B                      1- 1592     	MOVIA	0x4b
     00D4 04rr                      1- 1593     	SUBAR	_R_AIN4_DATA,W
     00D5                           1- 1594     _00793_DS_:
     00D5 0C03                      1- 1595     	BTRSC	STATUS,0
                                    1- 1596     	MGOTO	_00728_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1597     	.line	883, "main.c"; 	tempDuty = maxDuty;
                                    1- 1598     	BANKSEL	_maxDuty
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 01rr                      1- 1599     	MOVR	_maxDuty,W
                                    1- 1600     	BANKSEL	_tempDuty
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 1601     	MOVAR	_tempDuty
     00DB                           1- 1602     _00728_DS_:
                                    1- 1603     	.line	887, "main.c"; 	if(workStep > 0)
                                    1- 1604     	BANKSEL	_workStep
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 01rr                      1- 1605     	MOVR	_workStep,W
     00DD 0D03                      1- 1606     	BTRSC	STATUS,2
                                    1- 1607     	MGOTO	_00732_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1608     	.line	888, "main.c"; 	ledStep = workStep;
     00DF 01rr                      1- 1609     	MOVR	_workStep,W
                                    1- 1610     	BANKSEL	_ledStep
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 00rr                      1- 1611     	MOVAR	_ledStep
     00E2                           1- 1612     _00732_DS_:
                                    1- 1613     	.line	892, "main.c"; 	}
                                    1- 1614     	RETURN	
     00E2 0010                      3-   40 m1      ret
                                    1- 1615     ; exit point of _checkOutA
                                    1- 1617     ;***
                                    1- 1618     ;  pBlock Stats: dbName = C
                                    1- 1619     ;***
                                    1- 1620     ;has an exit
                                    1- 1621     ;functions called:
                                    1- 1622     ;   _F_AIN2_Convert
                                    1- 1623     ;   _F_AIN2_Convert
                                    1- 1624     ;4 compiler assigned registers:
                                    1- 1625     ;   r0x1046
                                    1- 1626     ;   r0x1047
                                    1- 1627     ;   r0x1048
                                    1- 1628     ;   r0x1049
                                    1- 1629     ;; Starting pCode block
                                    1- 1630     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1632     _checkBatAD:
                                    1- 1633     ; 2 exit points
                                    1- 1634     	.line	755, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1635     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1636     	CLRR	_R_AIN2_DATA_LB
                                    1- 1637     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1638     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1639     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1640     	.line	756, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1641     	MOVIA	0x08
                                    1- 1642     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1643     	.line	757, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1644     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1645     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1646     	ANDIA	0xf0
     000A 00rr                      1- 1647     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1648     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1649     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1650     	ANDIA	0x0f
     000E 11rr                      1- 1651     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1652     	XORAR	_R_AIN2_DATA,F
                                    1- 1653     	.line	758, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1654     	MOVIA	0xf0
                                    1- 1655     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1656     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1657     	.line	759, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1658     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1659     	BANKSEL	r0x1048
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1660     	MOVAR	r0x1048
                                    1- 1661     ;;1	MOVAR	r0x1046
                                    1- 1662     ;;1	CLRR	r0x1047
                                    1- 1663     ;;99	MOVR	r0x1046,W
     0016 2100                      1- 1664     	MOVIA	0x00
                                    1- 1665     	BANKSEL	r0x1049
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1666     	MOVAR	r0x1049
                                    1- 1667     	BANKSEL	r0x1048
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1668     	MOVR	r0x1048,W
                                    1- 1669     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1670     	ADDAR	_R_AIN2_DATA,F
                                    1- 1671     	BANKSEL	r0x1049
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1672     	MOVR	r0x1049,W
     001F 0C03                      1- 1673     	BTRSC	STATUS,0
     0020 05rr                      1- 1674     	INCR	r0x1049,W
     0021 0D03                      1- 1675     	BTRSC	STATUS,2
                                    1- 1676     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1677     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1678     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1679     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1680     _00004_DS_:
                                    1- 1681     	.line	760, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1682     	BCR	STATUS,0
                                    1- 1683     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1684     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1685     	RRR	_R_AIN2_DATA,F
                                    1- 1686     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1687     	BCR	STATUS,0
     002A 13rr                      1- 1688     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1689     	RRR	_R_AIN2_DATA,F
                                    1- 1690     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1691     	BCR	STATUS,0
     002D 13rr                      1- 1692     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1693     	RRR	_R_AIN2_DATA,F
                                    1- 1694     	.line	761, "main.c"; 	if(debug)
                                    1- 1695     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1696     	MOVR	_debug,W
     0031 0D03                      1- 1697     	BTRSC	STATUS,2
                                    1- 1698     	MGOTO	_00604_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1699     	.line	762, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1700     	MOVIA	0x0e
                                    1- 1701     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1702     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1703     	MOVIA	0x06
     0037 00rr                      1- 1704     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1705     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1706     ;;unsigned compare: left >= lit (0x623=1571), size=2
     0038                           1- 1707     _00604_DS_:
                                    1- 1708     	.line	764, "main.c"; 	if(R_AIN2_DATA > 1570)
     0038 2106                      1- 1709     	MOVIA	0x06
                                    1- 1710     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1711     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1712     	BTRSS	STATUS,2
                                    1- 1713     	MGOTO	_00678_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 2123                      1- 1714     	MOVIA	0x23
     003E 04rr                      1- 1715     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1716     _00678_DS_:
     003F 0803                      1- 1717     	BTRSS	STATUS,0
                                    1- 1718     	MGOTO	_00629_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1719     	.line	767, "main.c"; 	lowCount = 0;
                                    1- 1720     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1721     	CLRR	_lowCount
                                    1- 1722     	.line	768, "main.c"; 	pwStep = 8;
     0043 2108                      1- 1723     	MOVIA	0x08
                                    1- 1724     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1725     	MOVAR	_pwStep
                                    1- 1726     	MGOTO	_00630_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1727     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0047                           1- 1728     _00629_DS_:
                                    1- 1729     	.line	770, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0047 2104                      1- 1730     	MOVIA	0x04
                                    1- 1731     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1732     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1733     	BTRSS	STATUS,2
                                    1- 1734     	MGOTO	_00679_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 217E                      1- 1735     	MOVIA	0x7e
     004D 04rr                      1- 1736     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1737     _00679_DS_:
     004E 0C03                      1- 1738     	BTRSC	STATUS,0
                                    1- 1739     	MGOTO	_00626_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1740     	.line	772, "main.c"; 	if(++lowCount < 10)
                                    1- 1741     	BANKSEL	_lowCount
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 05rr                      1- 1742     	INCR	_lowCount,F
                                    1- 1743     ;;unsigned compare: left < lit (0xA=10), size=1
     0052 210A                      1- 1744     	MOVIA	0x0a
     0053 04rr                      1- 1745     	SUBAR	_lowCount,W
     0054 0803                      1- 1746     	BTRSS	STATUS,0
                                    1- 1747     	.line	773, "main.c"; 	return;
                                    1- 1748     	MGOTO	_00637_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1749     	.line	774, "main.c"; 	lowCount = 10;
     0056 210A                      1- 1750     	MOVIA	0x0a
     0057 00rr                      1- 1751     	MOVAR	_lowCount
                                    1- 1752     	.line	775, "main.c"; 	pwStep = 0;
                                    1- 1753     	BANKSEL	_pwStep
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1754     	CLRR	_pwStep
                                    1- 1755     	.line	776, "main.c"; 	R_AIN2_DATA = 1150;
     005A 217E                      1- 1756     	MOVIA	0x7e
                                    1- 1757     	BANKSEL	_R_AIN2_DATA
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1758     	MOVAR	_R_AIN2_DATA
     005D 2104                      1- 1759     	MOVIA	0x04
     005E 00rr                      1- 1760     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1761     	MGOTO	_00630_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 1762     _00626_DS_:
                                    1- 1763     	.line	781, "main.c"; 	lowCount = 0;
                                    1- 1764     	BANKSEL	_lowCount
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1765     	CLRR	_lowCount
                                    1- 1766     	.line	782, "main.c"; 	firstTime = 0;
                                    1- 1767     	BANKSEL	_firstTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1768     	CLRR	_firstTime
                                    1- 1769     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1770     	.line	783, "main.c"; 	if(R_AIN2_DATA < 1270)
     0064 2104                      1- 1771     	MOVIA	0x04
                                    1- 1772     	BANKSEL	_R_AIN2_DATA
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 1773     	SUBAR	(_R_AIN2_DATA + 1),W
     0067 0903                      1- 1774     	BTRSS	STATUS,2
                                    1- 1775     	MGOTO	_00681_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069 21F6                      1- 1776     	MOVIA	0xf6
     006A 04rr                      1- 1777     	SUBAR	_R_AIN2_DATA,W
     006B                           1- 1778     _00681_DS_:
     006B 0C03                      1- 1779     	BTRSC	STATUS,0
                                    1- 1780     	MGOTO	_00623_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1781     	.line	784, "main.c"; 	pwStep = 1;
     006D 2101                      1- 1782     	MOVIA	0x01
                                    1- 1783     	BANKSEL	_pwStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1784     	MOVAR	_pwStep
                                    1- 1785     	MGOTO	_00630_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1786     ;;unsigned compare: left < lit (0x53C=1340), size=2
     0071                           1- 1787     _00623_DS_:
                                    1- 1788     	.line	785, "main.c"; 	else if(R_AIN2_DATA < 1340)
     0071 2105                      1- 1789     	MOVIA	0x05
                                    1- 1790     	BANKSEL	_R_AIN2_DATA
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 04rr                      1- 1791     	SUBAR	(_R_AIN2_DATA + 1),W
     0074 0903                      1- 1792     	BTRSS	STATUS,2
                                    1- 1793     	MGOTO	_00682_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076 213C                      1- 1794     	MOVIA	0x3c
     0077 04rr                      1- 1795     	SUBAR	_R_AIN2_DATA,W
     0078                           1- 1796     _00682_DS_:
     0078 0C03                      1- 1797     	BTRSC	STATUS,0
                                    1- 1798     	MGOTO	_00620_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1799     	.line	786, "main.c"; 	pwStep = 2;
     007A 2102                      1- 1800     	MOVIA	0x02
                                    1- 1801     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1802     	MOVAR	_pwStep
                                    1- 1803     	MGOTO	_00630_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1804     ;;unsigned compare: left < lit (0x56E=1390), size=2
     007E                           1- 1805     _00620_DS_:
                                    1- 1806     	.line	787, "main.c"; 	else if(R_AIN2_DATA < 1390)
     007E 2105                      1- 1807     	MOVIA	0x05
                                    1- 1808     	BANKSEL	_R_AIN2_DATA
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1809     	SUBAR	(_R_AIN2_DATA + 1),W
     0081 0903                      1- 1810     	BTRSS	STATUS,2
                                    1- 1811     	MGOTO	_00683_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 216E                      1- 1812     	MOVIA	0x6e
     0084 04rr                      1- 1813     	SUBAR	_R_AIN2_DATA,W
     0085                           1- 1814     _00683_DS_:
     0085 0C03                      1- 1815     	BTRSC	STATUS,0
                                    1- 1816     	MGOTO	_00617_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1817     	.line	788, "main.c"; 	pwStep = 3;
     0087 2103                      1- 1818     	MOVIA	0x03
                                    1- 1819     	BANKSEL	_pwStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 1820     	MOVAR	_pwStep
                                    1- 1821     	MGOTO	_00630_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1822     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     008B                           1- 1823     _00617_DS_:
                                    1- 1824     	.line	789, "main.c"; 	else if(R_AIN2_DATA < 1450)
     008B 2105                      1- 1825     	MOVIA	0x05
                                    1- 1826     	BANKSEL	_R_AIN2_DATA
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 04rr                      1- 1827     	SUBAR	(_R_AIN2_DATA + 1),W
     008E 0903                      1- 1828     	BTRSS	STATUS,2
                                    1- 1829     	MGOTO	_00684_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090 21AA                      1- 1830     	MOVIA	0xaa
     0091 04rr                      1- 1831     	SUBAR	_R_AIN2_DATA,W
     0092                           1- 1832     _00684_DS_:
     0092 0C03                      1- 1833     	BTRSC	STATUS,0
                                    1- 1834     	MGOTO	_00614_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1835     	.line	790, "main.c"; 	pwStep = 4;
     0094 2104                      1- 1836     	MOVIA	0x04
                                    1- 1837     	BANKSEL	_pwStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1838     	MOVAR	_pwStep
                                    1- 1839     	MGOTO	_00630_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1840     ;;unsigned compare: left < lit (0x5E6=1510), size=2
     0098                           1- 1841     _00614_DS_:
                                    1- 1842     	.line	791, "main.c"; 	else if(R_AIN2_DATA < 1510)
     0098 2105                      1- 1843     	MOVIA	0x05
                                    1- 1844     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 1845     	SUBAR	(_R_AIN2_DATA + 1),W
     009B 0903                      1- 1846     	BTRSS	STATUS,2
                                    1- 1847     	MGOTO	_00685_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D 21E6                      1- 1848     	MOVIA	0xe6
     009E 04rr                      1- 1849     	SUBAR	_R_AIN2_DATA,W
     009F                           1- 1850     _00685_DS_:
     009F 0C03                      1- 1851     	BTRSC	STATUS,0
                                    1- 1852     	MGOTO	_00611_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1853     	.line	792, "main.c"; 	pwStep = 5;
     00A1 2105                      1- 1854     	MOVIA	0x05
                                    1- 1855     	BANKSEL	_pwStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1856     	MOVAR	_pwStep
                                    1- 1857     	MGOTO	_00630_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1858     ;;unsigned compare: left < lit (0x604=1540), size=2
     00A5                           1- 1859     _00611_DS_:
                                    1- 1860     	.line	793, "main.c"; 	else if(R_AIN2_DATA < 1540)
     00A5 2106                      1- 1861     	MOVIA	0x06
                                    1- 1862     	BANKSEL	_R_AIN2_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 1863     	SUBAR	(_R_AIN2_DATA + 1),W
     00A8 0903                      1- 1864     	BTRSS	STATUS,2
                                    1- 1865     	MGOTO	_00686_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 2104                      1- 1866     	MOVIA	0x04
     00AB 04rr                      1- 1867     	SUBAR	_R_AIN2_DATA,W
     00AC                           1- 1868     _00686_DS_:
     00AC 0C03                      1- 1869     	BTRSC	STATUS,0
                                    1- 1870     	MGOTO	_00608_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1871     	.line	794, "main.c"; 	pwStep = 6;
     00AE 2106                      1- 1872     	MOVIA	0x06
                                    1- 1873     	BANKSEL	_pwStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1874     	MOVAR	_pwStep
                                    1- 1875     	MGOTO	_00630_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 1876     _00608_DS_:
                                    1- 1877     	.line	796, "main.c"; 	pwStep = 7;
     00B2 2107                      1- 1878     	MOVIA	0x07
                                    1- 1879     	BANKSEL	_pwStep
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 00rr                      1- 1880     	MOVAR	_pwStep
     00B5                           1- 1881     _00630_DS_:
                                    1- 1882     	.line	799, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
                                    1- 1883     	BANKSEL	_prePwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 1884     	MOVR	_prePwStep,W
     00B7 0D03                      1- 1885     	BTRSC	STATUS,2
                                    1- 1886     	MGOTO	_00631_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1887     	BANKSEL	_pwStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 1888     	MOVR	_pwStep,W
                                    1- 1889     	BANKSEL	_prePwStep
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 1890     	SUBAR	_prePwStep,W
     00BD 0C03                      1- 1891     	BTRSC	STATUS,0
                                    1- 1892     	MGOTO	_00632_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF                           1- 1893     _00631_DS_:
                                    1- 1894     	.line	800, "main.c"; 	prePwStep = pwStep;
                                    1- 1895     	BANKSEL	_pwStep
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 01rr                      1- 1896     	MOVR	_pwStep,W
                                    1- 1897     	BANKSEL	_prePwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 1898     	MOVAR	_prePwStep
     00C3                           1- 1899     _00632_DS_:
                                    1- 1900     	.line	802, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 1901     	BANKSEL	_ledLightTime
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 1902     	MOVR	_ledLightTime,W
     00C5 0D03                      1- 1903     	BTRSC	STATUS,2
                                    1- 1904     	MGOTO	_00637_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1905     	BANKSEL	_prePwStep
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 01rr                      1- 1906     	MOVR	_prePwStep,W
     00C9 0D03                      1- 1907     	BTRSC	STATUS,2
                                    1- 1908     	MGOTO	_00637_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1909     	.line	803, "main.c"; 	pwStep = prePwStep;
     00CB 01rr                      1- 1910     	MOVR	_prePwStep,W
                                    1- 1911     	BANKSEL	_pwStep
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 1912     	MOVAR	_pwStep
     00CE                           1- 1913     _00637_DS_:
                                    1- 1914     	.line	805, "main.c"; 	}
                                    1- 1915     	RETURN	
     00CE 0010                      3-   40 m1      ret
                                    1- 1916     ; exit point of _checkBatAD
                                    1- 1918     ;***
                                    1- 1919     ;  pBlock Stats: dbName = C
                                    1- 1920     ;***
                                    1- 1921     ;has an exit
                                    1- 1922     ;functions called:
                                    1- 1923     ;   _delay
                                    1- 1924     ;   _delay
                                    1- 1925     ;; Starting pCode block
                                    1- 1926     .segment "code"; module=main, function=_initAD
     0000                           1- 1928     _initAD:
                                    1- 1929     ; 2 exit points
                                    1- 1930     	.line	731, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1931     	MOVIA	0x84
     0001 00rr                      1- 1932     	MOVAR	_ADMD
                                    1- 1933     	.line	736, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1934     	CLRR	_ADVREFH
                                    1- 1935     	.line	741, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1936     	MOVIA	0x10
     0004 00rr                      1- 1937     	MOVAR	_ADR
                                    1- 1938     	.line	743, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1939     	MOVIA	0x03
     0006 00rr                      1- 1940     	MOVAR	_ADCR
                                    1- 1941     	.line	746, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1942     	BSR	_ADMDbits,4
                                    1- 1943     	.line	747, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1944     	MOVIA	0x64
                                    1- 1945     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1946     	.line	750, "main.c"; 	}
                                    1- 1947     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1948     ; exit point of _initAD
                                    1- 1950     ;***
                                    1- 1951     ;  pBlock Stats: dbName = C
                                    1- 1952     ;***
                                    1- 1953     ;has an exit
                                    1- 1954     ;2 compiler assigned registers:
                                    1- 1955     ;   r0x1034
                                    1- 1956     ;   r0x1035
                                    1- 1957     ;; Starting pCode block
                                    1- 1958     .segment "code"; module=main, function=_delay
                                    1- 1960     ;local variable name mapping:
     0000                           1- 1963     _delay:
                                    1- 1964     ; 2 exit points
                                    1- 1965     	.line	721, "main.c"; 	void delay(u8t time)
                                    1- 1966     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1967     	MOVAR	r0x1034
                                    1- 1968     	.line	723, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1969     	BANKSEL	r0x1035
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1970     	CLRR	r0x1035
     0004                           1- 1971     _00592_DS_:
                                    1- 1972     	BANKSEL	r0x1034
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1973     	MOVR	r0x1034,W
                                    1- 1974     	BANKSEL	r0x1035
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1975     	SUBAR	r0x1035,W
     0008 0C03                      1- 1976     	BTRSC	STATUS,0
                                    1- 1977     	MGOTO	_00594_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1978     	.line	724, "main.c"; 	NOP();
     000A 0000                      1- 1979     	nop
                                    1- 1980     	.line	723, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1981     	BANKSEL	r0x1035
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1982     	INCR	r0x1035,F
                                    1- 1983     	MGOTO	_00592_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1984     _00594_DS_:
                                    1- 1985     	.line	725, "main.c"; 	}
                                    1- 1986     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1987     ; exit point of _delay
                                    1- 1989     ;***
                                    1- 1990     ;  pBlock Stats: dbName = C
                                    1- 1991     ;***
                                    1- 1992     ;has an exit
                                    1- 1993     ;functions called:
                                    1- 1994     ;   _pwmStop
                                    1- 1995     ;   _pwm1Stop
                                    1- 1996     ;   _pwm1Init
                                    1- 1997     ;   _pwm1Stop
                                    1- 1998     ;   _pwmStop
                                    1- 1999     ;   _pwm1Stop
                                    1- 2000     ;   _pwm1Init
                                    1- 2001     ;   _pwm1Stop
                                    1- 2002     ;5 compiler assigned registers:
                                    1- 2003     ;   r0x104B
                                    1- 2004     ;   r0x104C
                                    1- 2005     ;   r0x104D
                                    1- 2006     ;   r0x104E
                                    1- 2007     ;   r0x104F
                                    1- 2008     ;; Starting pCode block
                                    1- 2009     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2011     _chrgCtr:
                                    1- 2012     ; 2 exit points
                                    1- 2013     	.line	617, "main.c"; 	if(PORTA & 0x08)
                                    1- 2014     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 2015     	BTRSS	_PORTA,3
                                    1- 2016     	MGOTO	_00516_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2017     	.line	620, "main.c"; 	chrgFlag = 1;
                                    1- 2018     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 2019     	BSR	_Status,3
                                    1- 2020     	.line	621, "main.c"; 	workStep = 0;
                                    1- 2021     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2022     	CLRR	_workStep
                                    1- 2023     	.line	622, "main.c"; 	ledLightTime = 0;
                                    1- 2024     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 2025     	CLRR	_ledLightTime
                                    1- 2026     	.line	623, "main.c"; 	pwmStop();
                                    1- 2027     	MCALL	_pwmStop
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2028     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 2029     	.line	625, "main.c"; 	if(pwStep >= 8 || chrgFullFlag)
     000A 2108                      1- 2030     	MOVIA	0x08
                                    1- 2031     	BANKSEL	_pwStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 2032     	SUBAR	_pwStep,W
     000D 0C03                      1- 2033     	BTRSC	STATUS,0
                                    1- 2034     	MGOTO	_00509_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2035     	BANKSEL	_chrgFullFlag
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2036     	MOVR	_chrgFullFlag,W
     0011 0D03                      1- 2037     	BTRSC	STATUS,2
                                    1- 2038     	MGOTO	_00510_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 2039     _00509_DS_:
                                    1- 2040     	.line	627, "main.c"; 	chrgStep = 6;
     0013 2106                      1- 2041     	MOVIA	0x06
                                    1- 2042     	BANKSEL	_chrgStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2043     	MOVAR	_chrgStep
                                    1- 2044     	.line	629, "main.c"; 	ledStep = 6;
                                    1- 2045     	BANKSEL	_ledStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2046     	MOVAR	_ledStep
                                    1- 2047     	.line	630, "main.c"; 	if(++fullCount >= 2000)
                                    1- 2048     	BANKSEL	_fullCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 05rr                      1- 2049     	INCR	_fullCount,F
     001A 0D03                      1- 2050     	BTRSC	STATUS,2
     001B 05rr                      1- 2051     	INCR	(_fullCount + 1),F
                                    1- 2052     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     001C 2107                      1- 2053     	MOVIA	0x07
     001D 04rr                      1- 2054     	SUBAR	(_fullCount + 1),W
     001E 0903                      1- 2055     	BTRSS	STATUS,2
                                    1- 2056     	MGOTO	_00575_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020 21D0                      1- 2057     	MOVIA	0xd0
     0021 04rr                      1- 2058     	SUBAR	_fullCount,W
     0022                           1- 2059     _00575_DS_:
     0022 0803                      1- 2060     	BTRSS	STATUS,0
                                    1- 2061     	MGOTO	_00518_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2062     	.line	632, "main.c"; 	fullCount = 2000;
     0024 21D0                      1- 2063     	MOVIA	0xd0
                                    1- 2064     	BANKSEL	_fullCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2065     	MOVAR	_fullCount
     0027 2107                      1- 2066     	MOVIA	0x07
     0028 00rr                      1- 2067     	MOVAR	(_fullCount + 1)
                                    1- 2068     	.line	633, "main.c"; 	chrgFullFlag = 1;
     0029 2101                      1- 2069     	MOVIA	0x01
                                    1- 2070     	BANKSEL	_chrgFullFlag
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2071     	MOVAR	_chrgFullFlag
                                    1- 2072     	.line	634, "main.c"; 	pwm1Stop();
                                    1- 2073     	MCALL	_pwm1Stop
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2074     	.line	635, "main.c"; 	PORTB &= 0xF7;
     002D 1Drr                      1- 2075     	BCR	_PORTB,3
                                    1- 2076     	.line	636, "main.c"; 	IOSTB |= 0X08;
     002E 001r                      1- 2077     	IOSTR	_IOSTB
                                    1- 2078     	BANKSEL	r0x104B
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 2079     	MOVAR	r0x104B
     0031 19rr                      1- 2080     	BSR	r0x104B,3
     0032 01rr                      1- 2081     	MOVR	r0x104B,W
     0033 000r                      1- 2082     	IOST	_IOSTB
                                    1- 2083     	MGOTO	_00518_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1- 2084     _00510_DS_:
                                    1- 2085     	.line	644, "main.c"; 	IOSTB &= 0xF7;
     0035 001r                      1- 2086     	IOSTR	_IOSTB
                                    1- 2087     	BANKSEL	r0x104B
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2088     	MOVAR	r0x104B
     0038 1Drr                      1- 2089     	BCR	r0x104B,3
     0039 01rr                      1- 2090     	MOVR	r0x104B,W
     003A 000r                      1- 2091     	IOST	_IOSTB
                                    1- 2092     	.line	645, "main.c"; 	fullCount = 0;
                                    1- 2093     	BANKSEL	_fullCount
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 2094     	CLRR	_fullCount
     003D 02rr                      1- 2095     	CLRR	(_fullCount + 1)
                                    1- 2096     	.line	646, "main.c"; 	if(count500ms == 0 && pwStep <= 7 && lockLedStep < 6)
                                    1- 2097     	BANKSEL	_count500ms
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 2098     	MOVR	_count500ms,W
     0040 0903                      1- 2099     	BTRSS	STATUS,2
                                    1- 2100     	MGOTO	_00490_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2101     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2102     ;;unsigned compare: left >= lit (0x8=8), size=1
     0042 2108                      1- 2103     	MOVIA	0x08
                                    1- 2104     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 04rr                      1- 2105     	SUBAR	_pwStep,W
     0045 0C03                      1- 2106     	BTRSC	STATUS,0
                                    1- 2107     	MGOTO	_00490_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2108     ;;unsigned compare: left < lit (0x6=6), size=1
     0047 2106                      1- 2109     	MOVIA	0x06
                                    1- 2110     	BANKSEL	_lockLedStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 2111     	SUBAR	_lockLedStep,W
     004A 0C03                      1- 2112     	BTRSC	STATUS,0
                                    1- 2113     	MGOTO	_00490_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2114     	.line	649, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 2115     	BANKSEL	_pwStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 2116     	MOVR	_pwStep,W
                                    1- 2117     	BANKSEL	r0x104B
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 2118     	MOVAR	r0x104B
                                    1- 2119     	BANKSEL	r0x104C
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 2120     	CLRR	r0x104C
     0052 21FF                      1- 2121     	MOVIA	0xff
                                    1- 2122     	BANKSEL	r0x104B
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 03rr                      1- 2123     	ADDAR	r0x104B,F
     0055 0C03                      1- 2124     	BTRSC	STATUS,0
                                    1- 2125     	MGOTO	_00005_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2126     	BANKSEL	r0x104C
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 06rr                      1- 2127     	DECR	r0x104C,F
     0059                           1- 2128     _00005_DS_:
                                    1- 2129     	BANKSEL	_lockLedStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1- 2130     	MOVR	_lockLedStep,W
                                    1- 2131     	BANKSEL	r0x104D
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 2132     	MOVAR	r0x104D
                                    1- 2133     ;;1	CLRR	r0x104E
     005D 2100                      1- 2134     	MOVIA	0x00
     005E 2580                      1- 2135     	ADDIA	0x80
                                    1- 2136     	BANKSEL	r0x104F
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 00rr                      1- 2137     	MOVAR	r0x104F
                                    1- 2138     	BANKSEL	r0x104C
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 2139     	MOVR	r0x104C,W
     0063 2580                      1- 2140     	ADDIA	0x80
                                    1- 2141     	BANKSEL	r0x104F
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 2142     	SUBAR	r0x104F,W
     0066 0903                      1- 2143     	BTRSS	STATUS,2
                                    1- 2144     	MGOTO	_00578_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2145     	BANKSEL	r0x104B
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 2146     	MOVR	r0x104B,W
                                    1- 2147     	BANKSEL	r0x104D
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 2148     	SUBAR	r0x104D,W
     006C                           1- 2149     _00578_DS_:
     006C 0C03                      1- 2150     	BTRSC	STATUS,0
                                    1- 2151     	MGOTO	_00485_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2152     	.line	651, "main.c"; 	if(lockLedStep == 0)
                                    1- 2153     	BANKSEL	_lockLedStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 2154     	MOVR	_lockLedStep,W
     0070 0903                      1- 2155     	BTRSS	STATUS,2
                                    1- 2156     	MGOTO	_00481_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2157     	.line	652, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2158     	BANKSEL	_pwStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 06rr                      1- 2159     	DECR	_pwStep,W
                                    1- 2160     	BANKSEL	_lockLedStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 2161     	MOVAR	_lockLedStep
     0076                           1- 2162     _00481_DS_:
                                    1- 2163     	.line	653, "main.c"; 	if(++ledCount > 100)
                                    1- 2164     	BANKSEL	_ledCount
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 05rr                      1- 2165     	INCR	_ledCount,F
                                    1- 2166     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2167     ;;unsigned compare: left >= lit (0x65=101), size=1
     0078 2165                      1- 2168     	MOVIA	0x65
     0079 04rr                      1- 2169     	SUBAR	_ledCount,W
     007A 0803                      1- 2170     	BTRSS	STATUS,0
                                    1- 2171     	MGOTO	_00486_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2172     	.line	654, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2173     	BANKSEL	_pwStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 06rr                      1- 2174     	DECR	_pwStep,W
                                    1- 2175     	BANKSEL	_lockLedStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 2176     	MOVAR	_lockLedStep
                                    1- 2177     	MGOTO	_00486_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081                           1- 2178     _00485_DS_:
                                    1- 2179     	.line	659, "main.c"; 	ledCount = 0;
                                    1- 2180     	BANKSEL	_ledCount
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 02rr                      1- 2181     	CLRR	_ledCount
     0083                           1- 2182     _00486_DS_:
                                    1- 2183     	.line	661, "main.c"; 	if(++ledStep > 6)
                                    1- 2184     	BANKSEL	_ledStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 05rr                      1- 2185     	INCR	_ledStep,F
                                    1- 2186     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2187     ;;unsigned compare: left >= lit (0x7=7), size=1
     0085 2107                      1- 2188     	MOVIA	0x07
     0086 04rr                      1- 2189     	SUBAR	_ledStep,W
     0087 0803                      1- 2190     	BTRSS	STATUS,0
                                    1- 2191     	MGOTO	_00490_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2192     	.line	662, "main.c"; 	ledStep = lockLedStep;
                                    1- 2193     	BANKSEL	_lockLedStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 2194     	MOVR	_lockLedStep,W
                                    1- 2195     	BANKSEL	_ledStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 2196     	MOVAR	_ledStep
                                    1- 2197     ;;unsigned compare: left < lit (0x6=6), size=1
     008D                           1- 2198     _00490_DS_:
                                    1- 2199     	.line	664, "main.c"; 	if(lockLedStep >= 6)
     008D 2106                      1- 2200     	MOVIA	0x06
                                    1- 2201     	BANKSEL	_lockLedStep
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 2202     	SUBAR	_lockLedStep,W
     0090 0803                      1- 2203     	BTRSS	STATUS,0
                                    1- 2204     	MGOTO	_00494_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2205     	.line	666, "main.c"; 	ledStep = 6;	//亮灯不闪了
     0092 2106                      1- 2206     	MOVIA	0x06
                                    1- 2207     	BANKSEL	_ledStep
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 2208     	MOVAR	_ledStep
     0095                           1- 2209     _00494_DS_:
                                    1- 2210     	.line	668, "main.c"; 	PWM1DUTY = chrgduty;
                                    1- 2211     	BANKSEL	_chrgduty
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1- 2212     	MOVR	_chrgduty,W
     0097 00rr                      1- 2213     	SFUN	_PWM1DUTY
                                    1- 2214     	.line	669, "main.c"; 	pwm1Init();
                                    1- 2215     	MCALL	_pwm1Init
     0098 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2216     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2217     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2218     	.line	670, "main.c"; 	if(count200ms > 5)
     0099 2106                      1- 2219     	MOVIA	0x06
                                    1- 2220     	BANKSEL	_count200ms
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 04rr                      1- 2221     	SUBAR	_count200ms,W
     009C 0803                      1- 2222     	BTRSS	STATUS,0
                                    1- 2223     	MGOTO	_00518_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2224     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2225     ;;unsigned compare: left >= lit (0x25=37), size=2
                                    1- 2226     	.line	673, "main.c"; 	if(R_AIN4_DATA > 36)
     009E 2100                      1- 2227     	MOVIA	0x00
                                    1- 2228     	BANKSEL	_R_AIN4_DATA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 04rr                      1- 2229     	SUBAR	(_R_AIN4_DATA + 1),W
     00A1 0903                      1- 2230     	BTRSS	STATUS,2
                                    1- 2231     	MGOTO	_00583_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
     00A3 2125                      1- 2232     	MOVIA	0x25
     00A4 04rr                      1- 2233     	SUBAR	_R_AIN4_DATA,W
     00A5                           1- 2234     _00583_DS_:
     00A5 0803                      1- 2235     	BTRSS	STATUS,0
                                    1- 2236     	MGOTO	_00502_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2237     	.line	675, "main.c"; 	if(++subTime > 200)
                                    1- 2238     	BANKSEL	_subTime
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 05rr                      1- 2239     	INCR	_subTime,F
                                    1- 2240     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2241     ;;unsigned compare: left >= lit (0xC9=201), size=1
     00A9 21C9                      1- 2242     	MOVIA	0xc9
     00AA 04rr                      1- 2243     	SUBAR	_subTime,W
     00AB 0803                      1- 2244     	BTRSS	STATUS,0
                                    1- 2245     	MGOTO	_00496_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2246     	.line	677, "main.c"; 	maxduty = maxduty - 1;
                                    1- 2247     	BANKSEL	_maxduty
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 06rr                      1- 2248     	DECR	_maxduty,F
                                    1- 2249     	.line	678, "main.c"; 	subTime = 0;
                                    1- 2250     	BANKSEL	_subTime
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 02rr                      1- 2251     	CLRR	_subTime
                                    1- 2252     	.line	679, "main.c"; 	subMin = 28;
     00B1 211C                      1- 2253     	MOVIA	0x1c
                                    1- 2254     	BANKSEL	_subMin
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 2255     	MOVAR	_subMin
     00B4                           1- 2256     _00496_DS_:
                                    1- 2257     	.line	681, "main.c"; 	addTime = 0;
                                    1- 2258     	BANKSEL	_addTime
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 02rr                      1- 2259     	CLRR	_addTime
                                    1- 2260     	MGOTO	_00503_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
     00B7                           1- 2261     _00502_DS_:
                                    1- 2262     	.line	683, "main.c"; 	else if(R_AIN4_DATA < subMin)
                                    1- 2263     	BANKSEL	_subMin
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 01rr                      1- 2264     	MOVR	_subMin,W
                                    1- 2265     	BANKSEL	r0x104B
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 2266     	MOVAR	r0x104B
                                    1- 2267     	BANKSEL	r0x104C
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 02rr                      1- 2268     	CLRR	r0x104C
     00BD 2100                      1- 2269     	MOVIA	0x00
                                    1- 2270     	BANKSEL	_R_AIN4_DATA
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 04rr                      1- 2271     	SUBAR	(_R_AIN4_DATA + 1),W
     00C0 0903                      1- 2272     	BTRSS	STATUS,2
                                    1- 2273     	MGOTO	_00585_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2274     	BANKSEL	r0x104B
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 01rr                      1- 2275     	MOVR	r0x104B,W
                                    1- 2276     	BANKSEL	_R_AIN4_DATA
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 04rr                      1- 2277     	SUBAR	_R_AIN4_DATA,W
     00C6                           1- 2278     _00585_DS_:
     00C6 0C03                      1- 2279     	BTRSC	STATUS,0
                                    1- 2280     	MGOTO	_00503_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2281     	.line	685, "main.c"; 	if(++addTime > 50)
                                    1- 2282     	BANKSEL	_addTime
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 05rr                      1- 2283     	INCR	_addTime,F
                                    1- 2284     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2285     ;;unsigned compare: left >= lit (0x33=51), size=1
     00CA 2133                      1- 2286     	MOVIA	0x33
     00CB 04rr                      1- 2287     	SUBAR	_addTime,W
     00CC 0803                      1- 2288     	BTRSS	STATUS,0
                                    1- 2289     	MGOTO	_00498_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2290     	.line	687, "main.c"; 	maxduty = maxduty + 1;
                                    1- 2291     	BANKSEL	_maxduty
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 05rr                      1- 2292     	INCR	_maxduty,F
                                    1- 2293     	.line	688, "main.c"; 	addTime = 0;
                                    1- 2294     	BANKSEL	_addTime
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 02rr                      1- 2295     	CLRR	_addTime
     00D2                           1- 2296     _00498_DS_:
                                    1- 2297     	.line	690, "main.c"; 	subTime = 0;
                                    1- 2298     	BANKSEL	_subTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 02rr                      1- 2299     	CLRR	_subTime
     00D4                           1- 2300     _00503_DS_:
                                    1- 2301     	.line	692, "main.c"; 	if(chrgduty < maxduty)
                                    1- 2302     	BANKSEL	_maxduty
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 01rr                      1- 2303     	MOVR	_maxduty,W
                                    1- 2304     	BANKSEL	_chrgduty
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 04rr                      1- 2305     	SUBAR	_chrgduty,W
     00D8 0C03                      1- 2306     	BTRSC	STATUS,0
                                    1- 2307     	MGOTO	_00505_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2308     	.line	693, "main.c"; 	chrgduty++;
     00DA 05rr                      1- 2309     	INCR	_chrgduty,F
                                    1- 2310     	MGOTO	_00518_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
     00DC                           1- 2311     _00505_DS_:
                                    1- 2312     	.line	695, "main.c"; 	chrgduty = maxduty;
                                    1- 2313     	BANKSEL	_maxduty
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 01rr                      1- 2314     	MOVR	_maxduty,W
                                    1- 2315     	BANKSEL	_chrgduty
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 00rr                      1- 2316     	MOVAR	_chrgduty
                                    1- 2317     	MGOTO	_00518_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
     00E1                           1- 2318     _00516_DS_:
                                    1- 2319     	.line	704, "main.c"; 	subMin = 28;
     00E1 211C                      1- 2320     	MOVIA	0x1c
                                    1- 2321     	BANKSEL	_subMin
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 00rr                      1- 2322     	MOVAR	_subMin
                                    1- 2323     	.line	705, "main.c"; 	chrgFullFlag = 0;
                                    1- 2324     	BANKSEL	_chrgFullFlag
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 02rr                      1- 2325     	CLRR	_chrgFullFlag
                                    1- 2326     	.line	706, "main.c"; 	chrgduty = 0;
                                    1- 2327     	BANKSEL	_chrgduty
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 02rr                      1- 2328     	CLRR	_chrgduty
                                    1- 2329     	.line	707, "main.c"; 	maxduty = 0;
                                    1- 2330     	BANKSEL	_maxduty
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 02rr                      1- 2331     	CLRR	_maxduty
                                    1- 2332     	.line	708, "main.c"; 	chrgStep = 0;
                                    1- 2333     	BANKSEL	_chrgStep
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 02rr                      1- 2334     	CLRR	_chrgStep
                                    1- 2335     	.line	709, "main.c"; 	lockLedStep = 0;
                                    1- 2336     	BANKSEL	_lockLedStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 02rr                      1- 2337     	CLRR	_lockLedStep
                                    1- 2338     	.line	710, "main.c"; 	chrgTime = 0;
                                    1- 2339     	BANKSEL	_chrgTime
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 02rr                      1- 2340     	CLRR	_chrgTime
     00F0 02rr                      1- 2341     	CLRR	(_chrgTime + 1)
                                    1- 2342     	.line	711, "main.c"; 	pwm1Stop();
                                    1- 2343     	MCALL	_pwm1Stop
     00F1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2344     	.line	712, "main.c"; 	if(workStep == 0)
                                    1- 2345     	BANKSEL	_workStep
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 01rr                      1- 2346     	MOVR	_workStep,W
     00F4 0903                      1- 2347     	BTRSS	STATUS,2
                                    1- 2348     	MGOTO	_00006_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2349     	.line	713, "main.c"; 	ledStep = 0;
                                    1- 2350     	BANKSEL	_ledStep
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 02rr                      1- 2351     	CLRR	_ledStep
     00F8                           1- 2352     _00006_DS_:
                                    1- 2353     	.line	714, "main.c"; 	chrgFlag = 0;
                                    1- 2354     	BANKSEL	_Status
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 1Drr                      1- 2355     	BCR	_Status,3
                                    1- 2356     	.line	715, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2357     	BANKSEL	_chrgTime
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 02rr                      1- 2358     	CLRR	_chrgTime
     00FC 02rr                      1- 2359     	CLRR	(_chrgTime + 1)
     00FD                           1- 2360     _00518_DS_:
                                    1- 2361     	.line	718, "main.c"; 	}
                                    1- 2362     	RETURN	
     00FD 0010                      3-   40 m1      ret
                                    1- 2363     ; exit point of _chrgCtr
                                    1- 2365     ;***
                                    1- 2366     ;  pBlock Stats: dbName = C
                                    1- 2367     ;***
                                    1- 2368     ;has an exit
                                    1- 2369     ;1 compiler assigned register :
                                    1- 2370     ;   r0x1050
                                    1- 2371     ;; Starting pCode block
                                    1- 2372     .segment "code"; module=main, function=_keyRead
                                    1- 2374     ;local variable name mapping:
     0000                           1- 2376     _keyRead:
                                    1- 2377     ; 2 exit points
                                    1- 2378     	.line	580, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2379     	BANKSEL	r0x1050
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2380     	MOVAR	r0x1050
                                    1- 2381     	.line	582, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2382     	MOVR	r0x1050,W
     0003 0D03                      1- 2383     	BTRSC	STATUS,2
                                    1- 2384     	MGOTO	_00471_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2385     	.line	584, "main.c"; 	keyCount++;
                                    1- 2386     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2387     	INCR	_keyCount,F
                                    1- 2388     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2389     	.line	585, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2390     	MOVIA	0x64
     0008 04rr                      1- 2391     	SUBAR	_keyCount,W
     0009 0803                      1- 2392     	BTRSS	STATUS,0
                                    1- 2393     	MGOTO	_00472_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2394     	.line	587, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2395     	MOVIA	0x64
     000C 00rr                      1- 2396     	MOVAR	_keyCount
                                    1- 2397     	.line	588, "main.c"; 	if(!longPressFlag)
                                    1- 2398     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2399     	BTRSC	_Status,1
                                    1- 2400     	MGOTO	_00472_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2401     	.line	590, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2402     	BSR	_Status,1
                                    1- 2403     	.line	591, "main.c"; 	return 2;
     0011 2102                      1- 2404     	MOVIA	0x02
                                    1- 2405     	MGOTO	_00473_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2406     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2407     _00471_DS_:
                                    1- 2408     	.line	597, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2409     	MOVIA	0x64
                                    1- 2410     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2411     	SUBAR	_keyCount,W
     0016 0803                      1- 2412     	BTRSS	STATUS,0
                                    1- 2413     	MGOTO	_00468_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2414     	.line	599, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2415     	CLRR	_keyCount
                                    1- 2416     	.line	600, "main.c"; 	longPressFlag = 0;
                                    1- 2417     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2418     	BCR	_Status,1
                                    1- 2419     	.line	601, "main.c"; 	return	0;
     001B 2100                      1- 2420     	MOVIA	0x00
                                    1- 2421     	MGOTO	_00473_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2422     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2423     _00468_DS_:
                                    1- 2424     	.line	603, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2425     	MOVIA	0x04
                                    1- 2426     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2427     	SUBAR	_keyCount,W
     0020 0803                      1- 2428     	BTRSS	STATUS,0
                                    1- 2429     	MGOTO	_00469_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2430     	.line	605, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2431     	CLRR	_keyCount
                                    1- 2432     	.line	606, "main.c"; 	return	1;
     0023 2101                      1- 2433     	MOVIA	0x01
                                    1- 2434     	MGOTO	_00473_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2435     _00469_DS_:
                                    1- 2436     	.line	608, "main.c"; 	keyCount = 0;
                                    1- 2437     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2438     	CLRR	_keyCount
     0027                           1- 2439     _00472_DS_:
                                    1- 2440     	.line	610, "main.c"; 	return 0;
     0027 2100                      1- 2441     	MOVIA	0x00
     0028                           1- 2442     _00473_DS_:
                                    1- 2443     	.line	611, "main.c"; 	}
                                    1- 2444     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2445     ; exit point of _keyRead
                                    1- 2447     ;***
                                    1- 2448     ;  pBlock Stats: dbName = C
                                    1- 2449     ;***
                                    1- 2450     ;has an exit
                                    1- 2451     ;functions called:
                                    1- 2452     ;   _LedInput
                                    1- 2453     ;   _pwmStop
                                    1- 2454     ;   _pwm1Stop
                                    1- 2455     ;   _LedInput
                                    1- 2456     ;   _pwmStop
                                    1- 2457     ;   _pwm1Stop
                                    1- 2458     ;; Starting pCode block
                                    1- 2459     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2461     _gotoSleep:
                                    1- 2462     ; 2 exit points
                                    1- 2463     	.line	545, "main.c"; 	LedInput();
                                    1- 2464     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2465     	.line	546, "main.c"; 	sleepTime = 0;
                                    1- 2466     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2467     	CLRR	_sleepTime
     0003 02rr                      1- 2468     	CLRR	(_sleepTime + 1)
                                    1- 2469     	.line	548, "main.c"; 	pwmStop();
                                    1- 2470     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2471     	.line	549, "main.c"; 	pwm1Stop();
                                    1- 2472     	MCALL	_pwm1Stop
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2473     	.line	550, "main.c"; 	IOSTA = 0xC8;
     0006 21C8                      1- 2474     	MOVIA	0xc8
     0007 000r                      1- 2475     	IOST	_IOSTA
                                    1- 2476     	.line	551, "main.c"; 	PORTA = 0x46;
     0008 2146                      1- 2477     	MOVIA	0x46
                                    1- 2478     	BANKSEL	_PORTA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1- 2479     	MOVAR	_PORTA
                                    1- 2480     	.line	552, "main.c"; 	APHCON = 0x3F;
     000B 213F                      1- 2481     	MOVIA	0x3f
     000C 000r                      1- 2482     	IOST	_APHCON
                                    1- 2483     	.line	553, "main.c"; 	PORTB = 0x00;
     000D 02rr                      1- 2484     	CLRR	_PORTB
                                    1- 2485     	.line	554, "main.c"; 	workStep = 0;
                                    1- 2486     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2487     	CLRR	_workStep
                                    1- 2488     	.line	555, "main.c"; 	AWUCON = 0x88;
     0010 2188                      1- 2489     	MOVIA	0x88
     0011 00rr                      1- 2490     	MOVAR	_AWUCON
                                    1- 2491     	.line	556, "main.c"; 	BWUCON = 0x00;
     0012 02rr                      1- 2492     	CLRR	_BWUCON
                                    1- 2493     	.line	557, "main.c"; 	redLedFlag = 0;
                                    1- 2494     	BANKSEL	_Status
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 1Drr                      1- 2495     	BCR	_Status,2
                                    1- 2496     	.line	560, "main.c"; 	INTE =  C_INT_PABKey;
     0015 2102                      1- 2497     	MOVIA	0x02
     0016 00rr                      1- 2498     	MOVAR	_INTE
                                    1- 2499     	.line	561, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0017 2118                      1- 2500     	MOVIA	0x18
     0018 00rr                      1- 2501     	MOVAR	_PCON
                                    1- 2502     	.line	562, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0019 02rr                      1- 2503     	CLRR	_INTF
                                    1- 2504     	.line	563, "main.c"; 	CLRWDT();
     001A 0002                      1- 2505     	clrwdt
                                    1- 2506     	.line	564, "main.c"; 	ENI();
     001B 0004                      1- 2507     	ENI
                                    1- 2508     	.line	565, "main.c"; 	SLEEP();
     001C 0001                      1- 2509     	sleep
                                    1- 2510     	.line	566, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2511     	CLRR	_AWUCON
                                    1- 2512     	.line	567, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     001E 21BE                      1- 2513     	MOVIA	0xbe
     001F 000r                      1- 2514     	IOST	_IOSTA
                                    1- 2515     	.line	568, "main.c"; 	IOSTB = 0x00;
     0020 0200                      1- 2516     	CLRA	
     0021 000r                      1- 2517     	IOST	_IOSTB
                                    1- 2518     	.line	569, "main.c"; 	PORTA = 0x00;
                                    1- 2519     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2520     	CLRR	_PORTA
                                    1- 2521     	.line	570, "main.c"; 	APHCON = 0x7F;
     0024 217F                      1- 2522     	MOVIA	0x7f
     0025 000r                      1- 2523     	IOST	_APHCON
                                    1- 2524     	.line	571, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0026 2101                      1- 2525     	MOVIA	0x01
     0027 00rr                      1- 2526     	MOVAR	_INTE
                                    1- 2527     	.line	572, "main.c"; 	INTF = 0;
     0028 02rr                      1- 2528     	CLRR	_INTF
                                    1- 2529     	.line	574, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0029 21B8                      1- 2530     	MOVIA	0xb8
     002A 00rr                      1- 2531     	MOVAR	_PCON
                                    1- 2532     	.line	577, "main.c"; 	}
                                    1- 2533     	RETURN	
     002B 0010                      3-   40 m1      ret
                                    1- 2534     ; exit point of _gotoSleep
                                    1- 2536     ;***
                                    1- 2537     ;  pBlock Stats: dbName = C
                                    1- 2538     ;***
                                    1- 2539     ;has an exit
                                    1- 2540     ;; Starting pCode block
                                    1- 2541     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2543     _pwmStop:
                                    1- 2544     ; 2 exit points
                                    1- 2545     	.line	537, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2546     	CLRA	
     0001 00rr                      1- 2547     	SFUN	_T2CR1
                                    1- 2548     	.line	538, "main.c"; 	}
                                    1- 2549     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2550     ; exit point of _pwmStop
                                    1- 2552     ;***
                                    1- 2553     ;  pBlock Stats: dbName = C
                                    1- 2554     ;***
                                    1- 2555     ;has an exit
                                    1- 2556     ;1 compiler assigned register :
                                    1- 2557     ;   r0x1052
                                    1- 2558     ;; Starting pCode block
                                    1- 2559     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2561     _pwmInit:
                                    1- 2562     ; 2 exit points
                                    1- 2563     	.line	525, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2564     	SFUNR	_T2CR1
                                    1- 2565     	BANKSEL	r0x1052
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2566     	MOVAR	r0x1052
     0003 0Frr                      1- 2567     	BTRSC	r0x1052,7
                                    1- 2568     	.line	526, "main.c"; 	return;
                                    1- 2569     	MGOTO	_00448_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2570     	.line	527, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2571     	CLRR	_TMRH
                                    1- 2572     	.line	528, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2573     	MOVIA	0x64
     0007 00rr                      1- 2574     	SFUN	_TMR2
                                    1- 2575     	.line	531, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2576     	MOVIA	0x01
     0009 00rr                      1- 2577     	SFUN	_T2CR2
                                    1- 2578     	.line	532, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2579     	MOVIA	0x83
     000B 00rr                      1- 2580     	SFUN	_T2CR1
     000C                           1- 2581     _00448_DS_:
                                    1- 2582     	.line	533, "main.c"; 	}
                                    1- 2583     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2584     ; exit point of _pwmInit
                                    1- 2586     ;***
                                    1- 2587     ;  pBlock Stats: dbName = C
                                    1- 2588     ;***
                                    1- 2589     ;has an exit
                                    1- 2590     ;; Starting pCode block
                                    1- 2591     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2593     _pwm1Stop:
                                    1- 2594     ; 2 exit points
                                    1- 2595     	.line	518, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2596     	CLRA	
     0001 00rr                      1- 2597     	SFUN	_T1CR1
                                    1- 2598     	.line	519, "main.c"; 	}
                                    1- 2599     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2600     ; exit point of _pwm1Stop
                                    1- 2602     ;***
                                    1- 2603     ;  pBlock Stats: dbName = C
                                    1- 2604     ;***
                                    1- 2605     ;has an exit
                                    1- 2606     ;1 compiler assigned register :
                                    1- 2607     ;   r0x104A
                                    1- 2608     ;; Starting pCode block
                                    1- 2609     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2611     _pwm1Init:
                                    1- 2612     ; 2 exit points
                                    1- 2613     	.line	505, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2614     	SFUNR	_T1CR1
                                    1- 2615     	BANKSEL	r0x104A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2616     	MOVAR	r0x104A
     0003 0Frr                      1- 2617     	BTRSC	r0x104A,7
                                    1- 2618     	.line	506, "main.c"; 	return;
                                    1- 2619     	MGOTO	_00437_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2620     	.line	507, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2621     	CLRR	_TMRH
                                    1- 2622     	.line	508, "main.c"; 	TMR1 = 48;							//频率为110K
     0006 2130                      1- 2623     	MOVIA	0x30
     0007 00rr                      1- 2624     	SFUN	_TMR1
                                    1- 2625     	.line	511, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2626     	CLRA	
     0009 00rr                      1- 2627     	SFUN	_T1CR2
                                    1- 2628     	.line	512, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2629     	MOVIA	0x08
     000B 00rr                      1- 2630     	SFUN	_T1CR2
                                    1- 2631     	.line	513, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2632     	MOVIA	0x83
     000D 00rr                      1- 2633     	SFUN	_T1CR1
     000E                           1- 2634     _00437_DS_:
                                    1- 2635     	.line	514, "main.c"; 	}
                                    1- 2636     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2637     ; exit point of _pwm1Init
                                    1- 2639     ;***
                                    1- 2640     ;  pBlock Stats: dbName = C
                                    1- 2641     ;***
                                    1- 2642     ;has an exit
                                    1- 2643     ;functions called:
                                    1- 2644     ;   _delay
                                    1- 2645     ;   _LedInput
                                    1- 2646     ;   _delay
                                    1- 2647     ;   _LedInput
                                    1- 2648     ;1 compiler assigned register :
                                    1- 2649     ;   r0x1053
                                    1- 2650     ;; Starting pCode block
                                    1- 2651     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2653     _LED6ON:
                                    1- 2654     ; 2 exit points
                                    1- 2655     	.line	495, "main.c"; 	L2OUT;
     0000 001r                      1- 2656     	IOSTR	_IOSTA
                                    1- 2657     	BANKSEL	r0x1053
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2658     	MOVAR	r0x1053
     0003 1Crr                      1- 2659     	BCR	r0x1053,0
     0004 01rr                      1- 2660     	MOVR	r0x1053,W
     0005 000r                      1- 2661     	IOST	_IOSTA
                                    1- 2662     	.line	496, "main.c"; 	L1OUT;
     0006 001r                      1- 2663     	IOSTR	_IOSTB
     0007 00rr                      1- 2664     	MOVAR	r0x1053
     0008 1Crr                      1- 2665     	BCR	r0x1053,1
     0009 01rr                      1- 2666     	MOVR	r0x1053,W
     000A 000r                      1- 2667     	IOST	_IOSTB
                                    1- 2668     	.line	497, "main.c"; 	L1H;
     000B 18rr                      1- 2669     	BSR	_PORTB,1
                                    1- 2670     	.line	498, "main.c"; 	L2L;
                                    1- 2671     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2672     	BCR	_PORTA,0
                                    1- 2673     	.line	499, "main.c"; 	delay(100);
     000E 2164                      1- 2674     	MOVIA	0x64
                                    1- 2675     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2676     	.line	500, "main.c"; 	LedInput();
                                    1- 2677     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2678     	.line	501, "main.c"; 	}
                                    1- 2679     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2680     ; exit point of _LED6ON
                                    1- 2682     ;***
                                    1- 2683     ;  pBlock Stats: dbName = C
                                    1- 2684     ;***
                                    1- 2685     ;has an exit
                                    1- 2686     ;functions called:
                                    1- 2687     ;   _delay
                                    1- 2688     ;   _LedInput
                                    1- 2689     ;   _delay
                                    1- 2690     ;   _LedInput
                                    1- 2691     ;1 compiler assigned register :
                                    1- 2692     ;   r0x1054
                                    1- 2693     ;; Starting pCode block
                                    1- 2694     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2696     _LED5ON:
                                    1- 2697     ; 2 exit points
                                    1- 2698     	.line	484, "main.c"; 	L2OUT;
     0000 001r                      1- 2699     	IOSTR	_IOSTA
                                    1- 2700     	BANKSEL	r0x1054
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2701     	MOVAR	r0x1054
     0003 1Crr                      1- 2702     	BCR	r0x1054,0
     0004 01rr                      1- 2703     	MOVR	r0x1054,W
     0005 000r                      1- 2704     	IOST	_IOSTA
                                    1- 2705     	.line	485, "main.c"; 	L1OUT;
     0006 001r                      1- 2706     	IOSTR	_IOSTB
     0007 00rr                      1- 2707     	MOVAR	r0x1054
     0008 1Crr                      1- 2708     	BCR	r0x1054,1
     0009 01rr                      1- 2709     	MOVR	r0x1054,W
     000A 000r                      1- 2710     	IOST	_IOSTB
                                    1- 2711     	.line	486, "main.c"; 	L2H;
                                    1- 2712     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2713     	BSR	_PORTA,0
                                    1- 2714     	.line	487, "main.c"; 	L1L;
     000D 1Crr                      1- 2715     	BCR	_PORTB,1
                                    1- 2716     	.line	488, "main.c"; 	delay(100);
     000E 2164                      1- 2717     	MOVIA	0x64
                                    1- 2718     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2719     	.line	489, "main.c"; 	LedInput();
                                    1- 2720     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2721     	.line	490, "main.c"; 	}
                                    1- 2722     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2723     ; exit point of _LED5ON
                                    1- 2725     ;***
                                    1- 2726     ;  pBlock Stats: dbName = C
                                    1- 2727     ;***
                                    1- 2728     ;has an exit
                                    1- 2729     ;functions called:
                                    1- 2730     ;   _delay
                                    1- 2731     ;   _LedInput
                                    1- 2732     ;   _delay
                                    1- 2733     ;   _LedInput
                                    1- 2734     ;1 compiler assigned register :
                                    1- 2735     ;   r0x1055
                                    1- 2736     ;; Starting pCode block
                                    1- 2737     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2739     _LED4ON:
                                    1- 2740     ; 2 exit points
                                    1- 2741     	.line	474, "main.c"; 	L3OUT;
     0000 001r                      1- 2742     	IOSTR	_IOSTB
                                    1- 2743     	BANKSEL	r0x1055
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2744     	MOVAR	r0x1055
     0003 1Crr                      1- 2745     	BCR	r0x1055,0
     0004 01rr                      1- 2746     	MOVR	r0x1055,W
     0005 000r                      1- 2747     	IOST	_IOSTB
                                    1- 2748     	.line	475, "main.c"; 	L2OUT;
     0006 001r                      1- 2749     	IOSTR	_IOSTA
     0007 00rr                      1- 2750     	MOVAR	r0x1055
     0008 1Crr                      1- 2751     	BCR	r0x1055,0
     0009 01rr                      1- 2752     	MOVR	r0x1055,W
     000A 000r                      1- 2753     	IOST	_IOSTA
                                    1- 2754     	.line	476, "main.c"; 	L3H;
     000B 18rr                      1- 2755     	BSR	_PORTB,0
                                    1- 2756     	.line	477, "main.c"; 	L2L;
                                    1- 2757     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2758     	BCR	_PORTA,0
                                    1- 2759     	.line	478, "main.c"; 	delay(100);
     000E 2164                      1- 2760     	MOVIA	0x64
                                    1- 2761     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2762     	.line	479, "main.c"; 	LedInput();
                                    1- 2763     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2764     	.line	480, "main.c"; 	}
                                    1- 2765     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2766     ; exit point of _LED4ON
                                    1- 2768     ;***
                                    1- 2769     ;  pBlock Stats: dbName = C
                                    1- 2770     ;***
                                    1- 2771     ;has an exit
                                    1- 2772     ;functions called:
                                    1- 2773     ;   _delay
                                    1- 2774     ;   _LedInput
                                    1- 2775     ;   _delay
                                    1- 2776     ;   _LedInput
                                    1- 2777     ;1 compiler assigned register :
                                    1- 2778     ;   r0x1056
                                    1- 2779     ;; Starting pCode block
                                    1- 2780     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2782     _LED3ON:
                                    1- 2783     ; 2 exit points
                                    1- 2784     	.line	464, "main.c"; 	L3OUT;
     0000 001r                      1- 2785     	IOSTR	_IOSTB
                                    1- 2786     	BANKSEL	r0x1056
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2787     	MOVAR	r0x1056
     0003 1Crr                      1- 2788     	BCR	r0x1056,0
     0004 01rr                      1- 2789     	MOVR	r0x1056,W
     0005 000r                      1- 2790     	IOST	_IOSTB
                                    1- 2791     	.line	465, "main.c"; 	L1OUT;
     0006 001r                      1- 2792     	IOSTR	_IOSTB
     0007 00rr                      1- 2793     	MOVAR	r0x1056
     0008 1Crr                      1- 2794     	BCR	r0x1056,1
     0009 01rr                      1- 2795     	MOVR	r0x1056,W
     000A 000r                      1- 2796     	IOST	_IOSTB
                                    1- 2797     	.line	466, "main.c"; 	L1H;
     000B 18rr                      1- 2798     	BSR	_PORTB,1
                                    1- 2799     	.line	467, "main.c"; 	L3L;
     000C 1Crr                      1- 2800     	BCR	_PORTB,0
                                    1- 2801     	.line	468, "main.c"; 	delay(100);
     000D 2164                      1- 2802     	MOVIA	0x64
                                    1- 2803     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2804     	.line	469, "main.c"; 	LedInput();
                                    1- 2805     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2806     	.line	470, "main.c"; 	}
                                    1- 2807     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2808     ; exit point of _LED3ON
                                    1- 2810     ;***
                                    1- 2811     ;  pBlock Stats: dbName = C
                                    1- 2812     ;***
                                    1- 2813     ;has an exit
                                    1- 2814     ;functions called:
                                    1- 2815     ;   _delay
                                    1- 2816     ;   _LedInput
                                    1- 2817     ;   _delay
                                    1- 2818     ;   _LedInput
                                    1- 2819     ;1 compiler assigned register :
                                    1- 2820     ;   r0x1057
                                    1- 2821     ;; Starting pCode block
                                    1- 2822     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2824     _LED2ON:
                                    1- 2825     ; 2 exit points
                                    1- 2826     	.line	454, "main.c"; 	L2OUT;
     0000 001r                      1- 2827     	IOSTR	_IOSTA
                                    1- 2828     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2829     	MOVAR	r0x1057
     0003 1Crr                      1- 2830     	BCR	r0x1057,0
     0004 01rr                      1- 2831     	MOVR	r0x1057,W
     0005 000r                      1- 2832     	IOST	_IOSTA
                                    1- 2833     	.line	455, "main.c"; 	L3OUT;
     0006 001r                      1- 2834     	IOSTR	_IOSTB
     0007 00rr                      1- 2835     	MOVAR	r0x1057
     0008 1Crr                      1- 2836     	BCR	r0x1057,0
     0009 01rr                      1- 2837     	MOVR	r0x1057,W
     000A 000r                      1- 2838     	IOST	_IOSTB
                                    1- 2839     	.line	456, "main.c"; 	L2H;
                                    1- 2840     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2841     	BSR	_PORTA,0
                                    1- 2842     	.line	457, "main.c"; 	L3L;
     000D 1Crr                      1- 2843     	BCR	_PORTB,0
                                    1- 2844     	.line	458, "main.c"; 	delay(100);
     000E 2164                      1- 2845     	MOVIA	0x64
                                    1- 2846     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2847     	.line	459, "main.c"; 	LedInput();
                                    1- 2848     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2849     	.line	460, "main.c"; 	}
                                    1- 2850     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2851     ; exit point of _LED2ON
                                    1- 2853     ;***
                                    1- 2854     ;  pBlock Stats: dbName = C
                                    1- 2855     ;***
                                    1- 2856     ;has an exit
                                    1- 2857     ;functions called:
                                    1- 2858     ;   _delay
                                    1- 2859     ;   _LedInput
                                    1- 2860     ;   _delay
                                    1- 2861     ;   _LedInput
                                    1- 2862     ;1 compiler assigned register :
                                    1- 2863     ;   r0x1058
                                    1- 2864     ;; Starting pCode block
                                    1- 2865     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2867     _LED1ON:
                                    1- 2868     ; 2 exit points
                                    1- 2869     	.line	444, "main.c"; 	L3OUT;
     0000 001r                      1- 2870     	IOSTR	_IOSTB
                                    1- 2871     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2872     	MOVAR	r0x1058
     0003 1Crr                      1- 2873     	BCR	r0x1058,0
     0004 01rr                      1- 2874     	MOVR	r0x1058,W
     0005 000r                      1- 2875     	IOST	_IOSTB
                                    1- 2876     	.line	445, "main.c"; 	L1OUT;
     0006 001r                      1- 2877     	IOSTR	_IOSTB
     0007 00rr                      1- 2878     	MOVAR	r0x1058
     0008 1Crr                      1- 2879     	BCR	r0x1058,1
     0009 01rr                      1- 2880     	MOVR	r0x1058,W
     000A 000r                      1- 2881     	IOST	_IOSTB
                                    1- 2882     	.line	446, "main.c"; 	L3H;
     000B 18rr                      1- 2883     	BSR	_PORTB,0
                                    1- 2884     	.line	447, "main.c"; 	L1L;
     000C 1Crr                      1- 2885     	BCR	_PORTB,1
                                    1- 2886     	.line	448, "main.c"; 	delay(100);
     000D 2164                      1- 2887     	MOVIA	0x64
                                    1- 2888     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2889     	.line	449, "main.c"; 	LedInput();
                                    1- 2890     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2891     	.line	450, "main.c"; 	}
                                    1- 2892     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2893     ; exit point of _LED1ON
                                    1- 2895     ;***
                                    1- 2896     ;  pBlock Stats: dbName = C
                                    1- 2897     ;***
                                    1- 2898     ;has an exit
                                    1- 2899     ;1 compiler assigned register :
                                    1- 2900     ;   r0x1051
                                    1- 2901     ;; Starting pCode block
                                    1- 2902     .segment "code"; module=main, function=_LedInput
     0000                           1- 2904     _LedInput:
                                    1- 2905     ; 2 exit points
                                    1- 2906     	.line	436, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 2907     	IOSTR	_IOSTA
                                    1- 2908     	BANKSEL	r0x1051
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2909     	MOVAR	r0x1051
     0003 18rr                      1- 2910     	BSR	r0x1051,0
     0004 01rr                      1- 2911     	MOVR	r0x1051,W
     0005 000r                      1- 2912     	IOST	_IOSTA
                                    1- 2913     	.line	437, "main.c"; 	IOSTB |= 0x03;
     0006 001r                      1- 2914     	IOSTR	_IOSTB
     0007 00rr                      1- 2915     	MOVAR	r0x1051
     0008 2103                      1- 2916     	MOVIA	0x03
     0009 11rr                      1- 2917     	IORAR	r0x1051,F
     000A 01rr                      1- 2918     	MOVR	r0x1051,W
     000B 000r                      1- 2919     	IOST	_IOSTB
                                    1- 2920     	.line	438, "main.c"; 	PORTA &= 0xFE;
                                    1- 2921     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2922     	BCR	_PORTA,0
                                    1- 2923     	.line	439, "main.c"; 	PORTB &= 0xFC;
     000E 21FC                      1- 2924     	MOVIA	0xfc
     000F 10rr                      1- 2925     	ANDAR	_PORTB,F
                                    1- 2926     	.line	440, "main.c"; 	}
                                    1- 2927     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2928     ; exit point of _LedInput
                                    1- 2930     ;***
                                    1- 2931     ;  pBlock Stats: dbName = C
                                    1- 2932     ;***
                                    1- 2933     ;has an exit
                                    1- 2934     ;functions called:
                                    1- 2935     ;   _LedInput
                                    1- 2936     ;   _LedInput
                                    1- 2937     ;   _LED6ON
                                    1- 2938     ;   _LED5ON
                                    1- 2939     ;   _LED4ON
                                    1- 2940     ;   _LED3ON
                                    1- 2941     ;   _LED2ON
                                    1- 2942     ;   _LED1ON
                                    1- 2943     ;   _LedInput
                                    1- 2944     ;   _LedInput
                                    1- 2945     ;   _LED6ON
                                    1- 2946     ;   _LED5ON
                                    1- 2947     ;   _LED4ON
                                    1- 2948     ;   _LED3ON
                                    1- 2949     ;   _LED2ON
                                    1- 2950     ;   _LED1ON
                                    1- 2951     ;; Starting pCode block
                                    1- 2952     .segment "code"; module=main, function=_ledShow
     0000                           1- 2954     _ledShow:
                                    1- 2955     ; 2 exit points
                                    1- 2956     	.line	378, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 2957     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2958     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 2959     	BTRSC	STATUS,2
                                    1- 2960     	MGOTO	_00334_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2961     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2962     	MOVR	_workStep,W
     0006 0903                      1- 2963     	BTRSS	STATUS,2
                                    1- 2964     	MGOTO	_00334_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2965     	.line	380, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 2966     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 2967     	BTRSC	_ledDeadTime,0
                                    1- 2968     	MGOTO	_00331_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2969     	.line	382, "main.c"; 	ledStep = 0;
                                    1- 2970     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2971     	CLRR	_ledStep
                                    1- 2972     	MGOTO	_00334_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2973     _00331_DS_:
                                    1- 2974     	.line	386, "main.c"; 	ledStep = tempLedStep;
                                    1- 2975     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2976     	MOVR	_tempLedStep,W
                                    1- 2977     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2978     	MOVAR	_ledStep
     0012                           1- 2979     _00334_DS_:
                                    1- 2980     	.line	390, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 2981     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2982     	MOVR	_ledLightTime,W
     0014 0D03                      1- 2983     	BTRSC	STATUS,2
                                    1- 2984     	MGOTO	_00342_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2985     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2986     	MOVR	_pwStep,W
     0018 0D03                      1- 2987     	BTRSC	STATUS,2
                                    1- 2988     	MGOTO	_00342_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2989     	.line	392, "main.c"; 	if(ledLightTime > 0)
                                    1- 2990     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 2991     	MOVR	_ledLightTime,W
     001C 0D03                      1- 2992     	BTRSC	STATUS,2
                                    1- 2993     	MGOTO	_00342_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2994     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2995     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2996     	.line	394, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 2997     	MOVIA	0x07
                                    1- 2998     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2999     	SUBAR	_pwStep,W
     0021 0803                      1- 3000     	BTRSS	STATUS,0
                                    1- 3001     	MGOTO	_00337_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3002     	.line	395, "main.c"; 	ledStep = 6;
     0023 2106                      1- 3003     	MOVIA	0x06
                                    1- 3004     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 3005     	MOVAR	_ledStep
                                    1- 3006     	MGOTO	_00342_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3007     _00337_DS_:
                                    1- 3008     	.line	397, "main.c"; 	ledStep = pwStep;
                                    1- 3009     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3010     	MOVR	_pwStep,W
                                    1- 3011     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 3012     	MOVAR	_ledStep
     002B                           1- 3013     _00342_DS_:
                                    1- 3014     	.line	400, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3015     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3016     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 3017     	BTRSC	STATUS,2
                                    1- 3018     	MGOTO	_00348_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3019     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3020     	MOVR	_workStep,W
     0031 0D03                      1- 3021     	BTRSC	STATUS,2
                                    1- 3022     	MGOTO	_00348_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3023     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3024     	MOVR	_pwStep,W
     0035 0903                      1- 3025     	BTRSS	STATUS,2
                                    1- 3026     	MGOTO	_00348_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3027     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3028     	.line	402, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 3029     	MOVIA	0x32
                                    1- 3030     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3031     	SUBAR	_count1s,W
     003A 0C03                      1- 3032     	BTRSC	STATUS,0
                                    1- 3033     	MGOTO	_00345_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3034     	.line	403, "main.c"; 	ledStep = workStep;
                                    1- 3035     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3036     	MOVR	_workStep,W
                                    1- 3037     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3038     	MOVAR	_ledStep
                                    1- 3039     	MGOTO	_00348_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3040     _00345_DS_:
                                    1- 3041     	.line	405, "main.c"; 	ledStep = 0;
                                    1- 3042     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 3043     	CLRR	_ledStep
     0043                           1- 3044     _00348_DS_:
                                    1- 3045     	.line	408, "main.c"; 	LedInput();
                                    1- 3046     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3047     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3048     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3049     	.line	409, "main.c"; 	switch(ledStep)
     0044 2109                      1- 3050     	MOVIA	0x09
                                    1- 3051     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 3052     	SUBAR	_ledStep,W
     0047 0C03                      1- 3053     	BTRSC	STATUS,0
                                    1- 3054     	MGOTO	_00361_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 3055     	MOVIA	((_00402_DS_ >> 8) & 0xff)
     004A 008A                      1- 3056     	MOVAR	PCHBUF
     004B 01rr                      1- 3057     	MOVR	_ledStep,W
     004C 25rr                      1- 3058     	ADDIA	_00402_DS_
     004D 0C03                      1- 3059     	BTRSC	STATUS,0
     004E 058A                      1- 3060     	INCR	PCHBUF,F
     004F 0082                      1- 3061     	MOVAR	PCL
     0050                           1- 3062     _00402_DS_:
                                    1- 3063     	MGOTO	_00351_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3064     	MGOTO	_00359_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3065     	MGOTO	_00358_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3066     	MGOTO	_00357_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3067     	MGOTO	_00356_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3068     	MGOTO	_00355_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3069     	MGOTO	_00354_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3070     	MGOTO	_00354_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3071     	MGOTO	_00354_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3072     _00351_DS_:
                                    1- 3073     	.line	412, "main.c"; 	LedInput();
                                    1- 3074     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3075     	.line	413, "main.c"; 	break;
                                    1- 3076     	MGOTO	_00361_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3077     _00354_DS_:
                                    1- 3078     	.line	417, "main.c"; 	LED6ON();
                                    1- 3079     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3080     _00355_DS_:
                                    1- 3081     	.line	419, "main.c"; 	LED5ON();
                                    1- 3082     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3083     _00356_DS_:
                                    1- 3084     	.line	421, "main.c"; 	LED4ON();
                                    1- 3085     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3086     _00357_DS_:
                                    1- 3087     	.line	423, "main.c"; 	LED3ON();
                                    1- 3088     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3089     _00358_DS_:
                                    1- 3090     	.line	425, "main.c"; 	LED2ON();
                                    1- 3091     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3092     _00359_DS_:
                                    1- 3093     	.line	427, "main.c"; 	LED1ON();
                                    1- 3094     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3095     _00361_DS_:
                                    1- 3096     	.line	430, "main.c"; 	}
                                    1- 3097     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 3098     ; exit point of _ledShow
                                    1- 3100     ;***
                                    1- 3101     ;  pBlock Stats: dbName = C
                                    1- 3102     ;***
                                    1- 3103     ;has an exit
                                    1- 3104     ;functions called:
                                    1- 3105     ;   _LedInput
                                    1- 3106     ;   _LedInput
                                    1- 3107     ;; Starting pCode block
                                    1- 3108     .segment "code"; module=main, function=_initSys
     0000                           1- 3110     _initSys:
                                    1- 3111     ; 2 exit points
                                    1- 3112     	.line	346, "main.c"; 	DISI();
     0000 0013                      1- 3113     	DISI
                                    1- 3114     	.line	347, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3115     	MOVIA	0xbe
     0002 000r                      1- 3116     	IOST	_IOSTA
                                    1- 3117     	.line	348, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 3118     	MOVIA	0x08
     0004 000r                      1- 3119     	IOST	_IOSTB
                                    1- 3120     	.line	349, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3121     	CLRR	_PORTB
                                    1- 3122     	.line	350, "main.c"; 	PORTA = 0x00;
                                    1- 3123     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3124     	CLRR	_PORTA
                                    1- 3125     	.line	351, "main.c"; 	LedInput();
                                    1- 3126     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3127     	.line	352, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 3128     	MOVIA	0x7f
     000A 000r                      1- 3129     	IOST	_APHCON
                                    1- 3130     	.line	353, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3131     	MOVIA	0xff
     000C 00rr                      1- 3132     	MOVAR	_BPHCON
                                    1- 3133     	.line	354, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3134     	MOVAR	_ABPLCON
                                    1- 3135     	.line	356, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3136     	MOVIA	0x01
     000F 00rr                      1- 3137     	MOVAR	_INTE
                                    1- 3138     	.line	358, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3139     	CLRA	
     0011 000r                      1- 3140     	IOST	_PCON1
                                    1- 3141     	.line	360, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3142     	MOVIA	0x37
     0013 00rr                      1- 3143     	MOVAR	_TMR0
                                    1- 3144     	.line	361, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3145     	MOVIA	0x01
     0015 0003                      1- 3146     	T0MD	
                                    1- 3147     	.line	363, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3148     	IOST	_PCON1
                                    1- 3149     	.line	366, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3150     	MOVIA	0x98
     0018 00rr                      1- 3151     	MOVAR	_PCON
                                    1- 3152     	.line	369, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3153     	MOVIA	0x01
     001A 000r                      1- 3154     	IOST	_PCON1
                                    1- 3155     	.line	370, "main.c"; 	ENI();
     001B 0004                      1- 3156     	ENI
                                    1- 3157     	.line	371, "main.c"; 	}
                                    1- 3158     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 3159     ; exit point of _initSys
                                    1- 3161     ;***
                                    1- 3162     ;  pBlock Stats: dbName = C
                                    1- 3163     ;***
                                    1- 3164     ;has an exit
                                    1- 3165     ;functions called:
                                    1- 3166     ;   _pwmStop
                                    1- 3167     ;   _pwmStop
                                    1- 3168     ;; Starting pCode block
                                    1- 3169     .segment "code"; module=main, function=_powerOff
     0000                           1- 3171     _powerOff:
                                    1- 3172     ; 2 exit points
                                    1- 3173     	.line	337, "main.c"; 	workStep = 0;
                                    1- 3174     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3175     	CLRR	_workStep
                                    1- 3176     	.line	338, "main.c"; 	pwmStop();
                                    1- 3177     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3178     	.line	340, "main.c"; 	}
                                    1- 3179     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3180     ; exit point of _powerOff
                                    1- 3182     ;***
                                    1- 3183     ;  pBlock Stats: dbName = C
                                    1- 3184     ;***
                                    1- 3185     ;has an exit
                                    1- 3186     ;functions called:
                                    1- 3187     ;   _keyRead
                                    1- 3188     ;   _pwmInit
                                    1- 3189     ;   _powerOff
                                    1- 3190     ;   _pwmInit
                                    1- 3191     ;   _keyRead
                                    1- 3192     ;   _pwmInit
                                    1- 3193     ;   _powerOff
                                    1- 3194     ;   _pwmInit
                                    1- 3195     ;1 compiler assigned register :
                                    1- 3196     ;   r0x1059
                                    1- 3197     ;; Starting pCode block
                                    1- 3198     .segment "code"; module=main, function=_keyCtr
                                    1- 3200     ;local variable name mapping:
     0000                           1- 3202     _keyCtr:
                                    1- 3203     ; 2 exit points
                                    1- 3204     	.line	267, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 3205     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3206     	COMR	_PORTA,W
                                    1- 3207     	BANKSEL	r0x1059
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3208     	MOVAR	r0x1059
     0004 2180                      1- 3209     	MOVIA	0x80
     0005 10rr                      1- 3210     	ANDAR	r0x1059,F
     0006 01rr                      1- 3211     	MOVR	r0x1059,W
                                    1- 3212     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3213     	BANKSEL	r0x1059
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3214     	MOVAR	r0x1059
                                    1- 3215     	.line	268, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3216     	XORIA	0x01
     000B 0903                      1- 3217     	BTRSS	STATUS,2
                                    1- 3218     	MGOTO	_00315_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3219     	.line	270, "main.c"; 	count500ms = 0;
                                    1- 3220     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3221     	CLRR	_count500ms
                                    1- 3222     	.line	271, "main.c"; 	ledLightTime = 0;
                                    1- 3223     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3224     	CLRR	_ledLightTime
                                    1- 3225     	.line	272, "main.c"; 	if(workStep == 0)
                                    1- 3226     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3227     	MOVR	_workStep,W
     0013 0903                      1- 3228     	BTRSS	STATUS,2
                                    1- 3229     	MGOTO	_00281_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3230     	.line	274, "main.c"; 	count1s = 0;
                                    1- 3231     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3232     	CLRR	_count1s
                                    1- 3233     	.line	275, "main.c"; 	ledLightTime = 3;
     0017 2103                      1- 3234     	MOVIA	0x03
                                    1- 3235     	BANKSEL	_ledLightTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3236     	MOVAR	_ledLightTime
                                    1- 3237     	.line	276, "main.c"; 	prePwStep = 0;
                                    1- 3238     	BANKSEL	_prePwStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 3239     	CLRR	_prePwStep
                                    1- 3240     	.line	277, "main.c"; 	return;
                                    1- 3241     	MGOTO	_00317_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1- 3242     _00281_DS_:
                                    1- 3243     	.line	279, "main.c"; 	ledTime = 0;
                                    1- 3244     	BANKSEL	_ledTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 3245     	CLRR	_ledTime
                                    1- 3246     	.line	280, "main.c"; 	if(++workStep > 6)
                                    1- 3247     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 3248     	INCR	_workStep,F
                                    1- 3249     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3250     ;;unsigned compare: left >= lit (0x7=7), size=1
     0021 2107                      1- 3251     	MOVIA	0x07
     0022 04rr                      1- 3252     	SUBAR	_workStep,W
     0023 0803                      1- 3253     	BTRSS	STATUS,0
                                    1- 3254     	MGOTO	_00283_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3255     	.line	281, "main.c"; 	workStep = 1;
     0025 2101                      1- 3256     	MOVIA	0x01
     0026 00rr                      1- 3257     	MOVAR	_workStep
     0027                           1- 3258     _00283_DS_:
                                    1- 3259     	.line	282, "main.c"; 	if(pwStep == 0)
                                    1- 3260     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3261     	MOVR	_pwStep,W
     0029 0903                      1- 3262     	BTRSS	STATUS,2
                                    1- 3263     	MGOTO	_00285_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3264     	.line	283, "main.c"; 	shanshuoTime = 10;
     002B 210A                      1- 3265     	MOVIA	0x0a
                                    1- 3266     	BANKSEL	_shanshuoTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 3267     	MOVAR	_shanshuoTime
     002E                           1- 3268     _00285_DS_:
                                    1- 3269     	.line	284, "main.c"; 	if(workStep == 1)
                                    1- 3270     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 3271     	MOVR	_workStep,W
     0030 2401                      1- 3272     	XORIA	0x01
     0031 0903                      1- 3273     	BTRSS	STATUS,2
                                    1- 3274     	MGOTO	_00301_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3275     	.line	286, "main.c"; 	maxDuty = 45;
     0033 212D                      1- 3276     	MOVIA	0x2d
                                    1- 3277     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 3278     	MOVAR	_maxDuty
                                    1- 3279     	.line	287, "main.c"; 	ledLightTime = 0;
                                    1- 3280     	BANKSEL	_ledLightTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 3281     	CLRR	_ledLightTime
                                    1- 3282     	MGOTO	_00302_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 3283     _00301_DS_:
                                    1- 3284     	.line	289, "main.c"; 	else if(workStep == 2)
                                    1- 3285     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 3286     	MOVR	_workStep,W
     003B 2402                      1- 3287     	XORIA	0x02
     003C 0903                      1- 3288     	BTRSS	STATUS,2
                                    1- 3289     	MGOTO	_00298_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3290     	.line	290, "main.c"; 	maxDuty = 49;
     003E 2131                      1- 3291     	MOVIA	0x31
                                    1- 3292     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 3293     	MOVAR	_maxDuty
                                    1- 3294     	MGOTO	_00302_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 3295     _00298_DS_:
                                    1- 3296     	.line	291, "main.c"; 	else if(workStep == 3)
                                    1- 3297     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 3298     	MOVR	_workStep,W
     0044 2403                      1- 3299     	XORIA	0x03
     0045 0903                      1- 3300     	BTRSS	STATUS,2
                                    1- 3301     	MGOTO	_00295_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3302     	.line	292, "main.c"; 	maxDuty = 53;
     0047 2135                      1- 3303     	MOVIA	0x35
                                    1- 3304     	BANKSEL	_maxDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 3305     	MOVAR	_maxDuty
                                    1- 3306     	MGOTO	_00302_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 3307     _00295_DS_:
                                    1- 3308     	.line	293, "main.c"; 	else if(workStep == 4)
                                    1- 3309     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3310     	MOVR	_workStep,W
     004D 2404                      1- 3311     	XORIA	0x04
     004E 0903                      1- 3312     	BTRSS	STATUS,2
                                    1- 3313     	MGOTO	_00292_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3314     	.line	294, "main.c"; 	maxDuty = 57;
     0050 2139                      1- 3315     	MOVIA	0x39
                                    1- 3316     	BANKSEL	_maxDuty
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 3317     	MOVAR	_maxDuty
                                    1- 3318     	MGOTO	_00302_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 3319     _00292_DS_:
                                    1- 3320     	.line	295, "main.c"; 	else if(workStep == 5)
                                    1- 3321     	BANKSEL	_workStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 3322     	MOVR	_workStep,W
     0056 2405                      1- 3323     	XORIA	0x05
     0057 0903                      1- 3324     	BTRSS	STATUS,2
                                    1- 3325     	MGOTO	_00289_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3326     	.line	296, "main.c"; 	maxDuty = 61;
     0059 213D                      1- 3327     	MOVIA	0x3d
                                    1- 3328     	BANKSEL	_maxDuty
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 3329     	MOVAR	_maxDuty
                                    1- 3330     	MGOTO	_00302_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 3331     _00289_DS_:
                                    1- 3332     	.line	297, "main.c"; 	else if(workStep == 6)
                                    1- 3333     	BANKSEL	_workStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 3334     	MOVR	_workStep,W
     005F 2406                      1- 3335     	XORIA	0x06
     0060 0903                      1- 3336     	BTRSS	STATUS,2
                                    1- 3337     	MGOTO	_00302_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3338     	.line	298, "main.c"; 	maxDuty = 65;
     0062 2141                      1- 3339     	MOVIA	0x41
                                    1- 3340     	BANKSEL	_maxDuty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 3341     	MOVAR	_maxDuty
     0065                           1- 3342     _00302_DS_:
                                    1- 3343     	.line	299, "main.c"; 	if(workStep > 0)
                                    1- 3344     	BANKSEL	_workStep
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 3345     	MOVR	_workStep,W
     0067 0D03                      1- 3346     	BTRSC	STATUS,2
                                    1- 3347     	MGOTO	_00304_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3348     	.line	301, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3349     	BANKSEL	_maxDuty
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3350     	MOVR	_maxDuty,W
     006B 00rr                      1- 3351     	SFUN	_PWM2DUTY
                                    1- 3352     	.line	302, "main.c"; 	pwmInit();
                                    1- 3353     	MCALL	_pwmInit
     006C 2rrr                      3-   66 m1      LCALL rom_address
     006D                           1- 3354     _00304_DS_:
                                    1- 3355     	.line	304, "main.c"; 	ledStep = workStep;
                                    1- 3356     	BANKSEL	_workStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 3357     	MOVR	_workStep,W
                                    1- 3358     	BANKSEL	_ledStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 3359     	MOVAR	_ledStep
                                    1- 3360     	MGOTO	_00317_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 3361     _00315_DS_:
                                    1- 3362     	.line	306, "main.c"; 	else if(kclick == 2)
                                    1- 3363     	BANKSEL	r0x1059
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 3364     	MOVR	r0x1059,W
     0074 2402                      1- 3365     	XORIA	0x02
     0075 0903                      1- 3366     	BTRSS	STATUS,2
                                    1- 3367     	MGOTO	_00317_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3368     	.line	308, "main.c"; 	if(workStep > 0)
                                    1- 3369     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 3370     	MOVR	_workStep,W
     0079 0D03                      1- 3371     	BTRSC	STATUS,2
                                    1- 3372     	MGOTO	_00310_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3373     	.line	310, "main.c"; 	powerOff();
                                    1- 3374     	MCALL	_powerOff
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3375     	MGOTO	_00311_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 3376     _00310_DS_:
                                    1- 3377     	.line	314, "main.c"; 	if(pwStep == 10)
                                    1- 3378     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 3379     	MOVR	_pwStep,W
     007F 240A                      1- 3380     	XORIA	0x0a
     0080 0903                      1- 3381     	BTRSS	STATUS,2
                                    1- 3382     	MGOTO	_00306_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3383     	.line	316, "main.c"; 	sleepTime = 0;
                                    1- 3384     	BANKSEL	_sleepTime
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 02rr                      1- 3385     	CLRR	_sleepTime
     0084 02rr                      1- 3386     	CLRR	(_sleepTime + 1)
                                    1- 3387     	.line	317, "main.c"; 	return;
                                    1- 3388     	MGOTO	_00317_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1- 3389     _00306_DS_:
                                    1- 3390     	.line	319, "main.c"; 	ledLightTime = 0;
                                    1- 3391     	BANKSEL	_ledLightTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 02rr                      1- 3392     	CLRR	_ledLightTime
                                    1- 3393     	.line	320, "main.c"; 	ledStep = 1;
     0088 2101                      1- 3394     	MOVIA	0x01
                                    1- 3395     	BANKSEL	_ledStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 3396     	MOVAR	_ledStep
                                    1- 3397     	.line	321, "main.c"; 	workStep = 1;
                                    1- 3398     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 3399     	MOVAR	_workStep
                                    1- 3400     	.line	322, "main.c"; 	PWM2DUTY = 70;
     008D 2146                      1- 3401     	MOVIA	0x46
     008E 00rr                      1- 3402     	SFUN	_PWM2DUTY
                                    1- 3403     	.line	323, "main.c"; 	currentDuty = 70;
                                    1- 3404     	BANKSEL	_currentDuty
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 3405     	MOVAR	_currentDuty
                                    1- 3406     	.line	324, "main.c"; 	maxDuty = 45;
     0091 212D                      1- 3407     	MOVIA	0x2d
                                    1- 3408     	BANKSEL	_maxDuty
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 3409     	MOVAR	_maxDuty
                                    1- 3410     	.line	325, "main.c"; 	pwmInit();
                                    1- 3411     	MCALL	_pwmInit
     0094 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3412     	.line	326, "main.c"; 	if(pwStep == 0)
                                    1- 3413     	BANKSEL	_pwStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1- 3414     	MOVR	_pwStep,W
     0097 0903                      1- 3415     	BTRSS	STATUS,2
                                    1- 3416     	MGOTO	_00311_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3417     	.line	327, "main.c"; 	shanshuoTime = 10;
     0099 210A                      1- 3418     	MOVIA	0x0a
                                    1- 3419     	BANKSEL	_shanshuoTime
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 3420     	MOVAR	_shanshuoTime
     009C                           1- 3421     _00311_DS_:
                                    1- 3422     	.line	330, "main.c"; 	ledStep = workStep;
                                    1- 3423     	BANKSEL	_workStep
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 01rr                      1- 3424     	MOVR	_workStep,W
                                    1- 3425     	BANKSEL	_ledStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 3426     	MOVAR	_ledStep
     00A0                           1- 3427     _00317_DS_:
                                    1- 3428     	.line	332, "main.c"; 	}
                                    1- 3429     	RETURN	
     00A0 0010                      3-   40 m1      ret
                                    1- 3430     ; exit point of _keyCtr
                                    1- 3433     ;	code size estimation:
                                    1- 3434     ;	 1286+  354 =  1640 instructions ( 3988 byte)
                                    1- 3436     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
