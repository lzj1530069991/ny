
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_checkBatAD
                                    1-   97     	extern	_delay
                                    1-   98     	extern	_F_wait_eoc
                                    1-   99     	extern	_F_AIN2_Convert
                                    1-  100     	extern	_initAD
                                    1-  101     	extern	_initSys
                                    1-  102     	extern	_isr
                                    1-  103     	extern	_main
                                    1-  104     	extern	_IntFlag
                                    1-  105     	extern	_intCount
                                    1-  106     	extern	_R_AIN2_DATA
                                    1-  107     	extern	_R_AIN2_DATA_LB
                                    1-  109     	extern PSAVE
                                    1-  110     	extern SSAVE
                                    1-  111     	extern WSAVE
                                    1-  112     	extern STK04
                                    1-  113     	extern STK03
                                    1-  114     	extern STK02
                                    1-  115     	extern STK01
                                    1-  116     	extern STK00
                                    1-  118     .segment "uninit", 0x20000040
 20000040                           1-  119     PSAVE:
                                    1-  120     	.res 1
 20000041                           1-  121     SSAVE:
                                    1-  122     	.res 1
 20000042                           1-  123     WSAVE:
                                    1-  124     	.res 1
 20000043                           1-  125     STK04:
                                    1-  126     	.res 1
 20000044                           1-  127     STK03:
                                    1-  128     	.res 1
 20000045                           1-  129     STK02:
                                    1-  130     	.res 1
 20000046                           1-  131     STK01:
                                    1-  132     	.res 1
 20000047                           1-  133     STK00:
                                    1-  134     	.res 1
                                    1-  136     ;--------------------------------------------------------
                                    1-  137     ; global definitions
                                    1-  138     ;--------------------------------------------------------
                                    1-  139     .segment "uninit"
     0000                           1-  140     _R_AIN2_DATA:
                                    1-  141     	.res	2
                                    1-  144     .segment "uninit"
     0000                           1-  145     _R_AIN2_DATA_LB:
                                    1-  146     	.res	1
                                    1-  149     ;--------------------------------------------------------
                                    1-  150     ; absolute symbol definitions
                                    1-  151     ;--------------------------------------------------------
                                    1-  152     ;--------------------------------------------------------
                                    1-  153     ; compiler-defined variables
                                    1-  154     ;--------------------------------------------------------
                                    1-  155     .segment "uninit"
     0000                           1-  156     r0x100E:
                                    1-  157     	.res	1
                                    1-  158     .segment "uninit"
     0000                           1-  159     r0x100F:
                                    1-  160     	.res	1
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x1010:
                                    1-  163     	.res	1
                                    1-  164     .segment "uninit"
     0000                           1-  165     r0x1013:
                                    1-  166     	.res	1
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x1008:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1009:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x100A:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x100B:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x100D:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1016:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1017:
                                    1-  187     	.res	1
                                    1-  188     ;--------------------------------------------------------
                                    1-  189     ; initialized data
                                    1-  190     ;--------------------------------------------------------
                                    1-  192     .segment "idata"
     0000                           1-  193     _IntFlag:
     0000 0000                      1-  194     	dw	0x00
                                    1-  198     .segment "idata"
     0000                           1-  199     _intCount:
     0000 0000                      1-  200     	dw	0x00
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; overlayable items in internal ram 
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     ;	udata_ovr
                                    1-  207     ;--------------------------------------------------------
                                    1-  208     ; reset vector 
                                    1-  209     ;--------------------------------------------------------
                                    1-  210     ORG	0x0000
     0000 3rrr                      1-  211     	LGOTO	__nyc_ny8_startup
                                    1-  212     ;--------------------------------------------------------
                                    1-  213     ; interrupt and initialization code
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ORG 0x0008
                                    1-  216     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  218     .segment "code"
     0000                           1-  219     __sdcc_interrupt:
                                    1-  220     ;***
                                    1-  221     ;  pBlock Stats: dbName = I
                                    1-  222     ;***
                                    1-  223     ;2 compiler assigned registers:
                                    1-  224     ;   STK00
                                    1-  225     ;   STK01
                                    1-  226     ;; Starting pCode block
     0000                           1-  227     _isr:
                                    1-  228     ; 0 exit points
                                    1-  229     	.line	21, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  230     	MOVAR	WSAVE
     0001 1503                      1-  231     	SWAPR	STATUS,W
     0002 0283                      1-  232     	CLRR	STATUS
     0003 00rr                      1-  233     	MOVAR	SSAVE
     0004 010A                      1-  234     	MOVR	PCHBUF,W
     0005 028A                      1-  235     	CLRR	PCHBUF
     0006 00rr                      1-  236     	MOVAR	PSAVE
     0007 0104                      1-  237     	MOVR	FSR,W
                                    1-  238     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  239     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  240     	MOVR	STK00,W
                                    1-  241     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  242     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  243     	MOVR	STK01,W
                                    1-  244     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  245     	MOVAR	___sdcc_saved_stk01
                                    1-  246     	.line	23, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  247     	BTRSS	_INTFbits,0
                                    1-  248     	MGOTO	_00108_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  249     	.line	25, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  250     	MOVIA	0x37
     0013 03rr                      1-  251     	ADDAR	_TMR0,F
                                    1-  252     	.line	27, "main.c"; 	if(++intCount >= 100)
                                    1-  253     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  254     	INCR	_intCount,F
                                    1-  255     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  256     	MOVIA	0x64
     0017 04rr                      1-  257     	SUBAR	_intCount,W
     0018 0803                      1-  258     	BTRSS	STATUS,0
                                    1-  259     	MGOTO	_00108_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  260     	.line	29, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  261     	MOVIA	0x01
                                    1-  262     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  263     	MOVAR	_IntFlag
                                    1-  264     	.line	30, "main.c"; 	intCount = 0;
                                    1-  265     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  266     	CLRR	_intCount
     001F                           1-  267     _00108_DS_:
                                    1-  268     	.line	38, "main.c"; 	if(INTFbits.PABIF)
     001F 08rr                      1-  269     	BTRSS	_INTFbits,1
                                    1-  270     	MGOTO	_00110_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  271     	.line	40, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0021 21FD                      1-  272     	MOVIA	0xfd
     0022 00rr                      1-  273     	MOVAR	_INTF
     0023                           1-  274     _00110_DS_:
                                    1-  275     	.line	43, "main.c"; 	INTF = 0;
     0023 02rr                      1-  276     	CLRR	_INTF
                                    1-  277     	.line	45, "main.c"; 	}
                                    1-  278     	BANKSEL	___sdcc_saved_stk01
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  279     	MOVR	___sdcc_saved_stk01,W
     0026 00rr                      1-  280     	MOVAR	STK01
                                    1-  281     	BANKSEL	___sdcc_saved_stk00
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1-  282     	MOVR	___sdcc_saved_stk00,W
     0029 00rr                      1-  283     	MOVAR	STK00
                                    1-  284     	BANKSEL	___sdcc_saved_fsr
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1-  285     	MOVR	___sdcc_saved_fsr,W
     002C 0084                      1-  286     	MOVAR	FSR
     002D 01rr                      1-  287     	MOVR	PSAVE,W
     002E 008A                      1-  288     	MOVAR	PCHBUF
     002F 0283                      1-  289     	CLRR	STATUS
     0030 15rr                      1-  290     	SWAPR	SSAVE,W
     0031 0083                      1-  291     	MOVAR	STATUS
     0032 15rr                      1-  292     	SWAPR	WSAVE,F
     0033 15rr                      1-  293     	SWAPR	WSAVE,W
     0034                           1-  294     END_OF_INTERRUPT:
     0034 0011                      1-  295     	RETIE	
                                    1-  297     ;--------------------------------------------------------
                                    1-  298     ; code
                                    1-  299     ;--------------------------------------------------------
                                    1-  300     ;***
                                    1-  301     ;  pBlock Stats: dbName = M
                                    1-  302     ;***
                                    1-  303     ;has an exit
                                    1-  304     ;functions called:
                                    1-  305     ;   _initSys
                                    1-  306     ;   _initAD
                                    1-  307     ;   _checkBatAD
                                    1-  308     ;   _initSys
                                    1-  309     ;   _initAD
                                    1-  310     ;   _checkBatAD
                                    1-  311     ;; Starting pCode block
                                    1-  312     .segment "code"; module=main, function=_main
     0000                           1-  314     _main:
                                    1-  315     ; 2 exit points
                                    1-  316     	.line	50, "main.c"; 	initSys();
                                    1-  317     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  318     	.line	51, "main.c"; 	initAD();
                                    1-  319     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  320     _00118_DS_:
                                    1-  321     	.line	55, "main.c"; 	CLRWDT();
     0002 0002                      1-  322     	clrwdt
                                    1-  323     	.line	56, "main.c"; 	if(!IntFlag)
                                    1-  324     	BANKSEL	_IntFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 01rr                      1-  325     	MOVR	_IntFlag,W
     0005 0D03                      1-  326     	BTRSC	STATUS,2
                                    1-  327     	MGOTO	_00118_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  328     	.line	58, "main.c"; 	IntFlag = 0;     
     0007 02rr                      1-  329     	CLRR	_IntFlag
                                    1-  330     	.line	59, "main.c"; 	checkBatAD();
                                    1-  331     	MCALL	_checkBatAD
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  332     	MGOTO	_00118_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  333     	.line	61, "main.c"; 	}
                                    1-  334     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1-  335     ; exit point of _main
                                    1-  337     ;***
                                    1-  338     ;  pBlock Stats: dbName = C
                                    1-  339     ;***
                                    1-  340     ;has an exit
                                    1-  341     ;functions called:
                                    1-  342     ;   _F_AIN2_Convert
                                    1-  343     ;   _F_AIN2_Convert
                                    1-  344     ;4 compiler assigned registers:
                                    1-  345     ;   r0x1014
                                    1-  346     ;   r0x1015
                                    1-  347     ;   r0x1016
                                    1-  348     ;   r0x1017
                                    1-  349     ;; Starting pCode block
                                    1-  350     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  352     _checkBatAD:
                                    1-  353     ; 2 exit points
                                    1-  354     	.line	151, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1-  355     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  356     	CLRR	_R_AIN2_DATA_LB
                                    1-  357     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  358     	CLRR	_R_AIN2_DATA
     0004 02rr                      1-  359     	CLRR	(_R_AIN2_DATA + 1)
                                    1-  360     	.line	152, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  361     	MOVIA	0x08
                                    1-  362     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  363     	.line	153, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  364     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1-  365     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1-  366     	ANDIA	0xf0
     000A 00rr                      1-  367     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1-  368     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1-  369     	MOVAR	_R_AIN2_DATA
     000D 220F                      1-  370     	ANDIA	0x0f
     000E 11rr                      1-  371     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1-  372     	XORAR	_R_AIN2_DATA,F
                                    1-  373     	.line	154, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  374     	MOVIA	0xf0
                                    1-  375     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1-  376     	ANDAR	_R_AIN2_DATA_LB,F
                                    1-  377     	.line	155, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  378     	MOVR	_R_AIN2_DATA_LB,W
                                    1-  379     	BANKSEL	r0x1016
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  380     	MOVAR	r0x1016
                                    1-  381     ;;1	MOVAR	r0x1014
                                    1-  382     ;;1	CLRR	r0x1015
                                    1-  383     ;;102	MOVR	r0x1014,W
     0016 2100                      1-  384     	MOVIA	0x00
                                    1-  385     	BANKSEL	r0x1017
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  386     	MOVAR	r0x1017
                                    1-  387     	BANKSEL	r0x1016
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  388     	MOVR	r0x1016,W
                                    1-  389     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  390     	ADDAR	_R_AIN2_DATA,F
                                    1-  391     	BANKSEL	r0x1017
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  392     	MOVR	r0x1017,W
     001F 0C03                      1-  393     	BTRSC	STATUS,0
     0020 05rr                      1-  394     	INCR	r0x1017,W
     0021 0D03                      1-  395     	BTRSC	STATUS,2
                                    1-  396     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  397     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  398     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1-  399     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  400     _00001_DS_:
                                    1-  401     	.line	156, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1-  402     	BCR	STATUS,0
                                    1-  403     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1-  404     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1-  405     	RRR	_R_AIN2_DATA,F
                                    1-  406     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  407     	BCR	STATUS,0
     002A 13rr                      1-  408     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1-  409     	RRR	_R_AIN2_DATA,F
                                    1-  410     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  411     	BCR	STATUS,0
     002D 13rr                      1-  412     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1-  413     	RRR	_R_AIN2_DATA,F
                                    1-  414     	.line	158, "main.c"; 	}
                                    1-  415     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  416     ; exit point of _checkBatAD
                                    1-  418     ;***
                                    1-  419     ;  pBlock Stats: dbName = C
                                    1-  420     ;***
                                    1-  421     ;has an exit
                                    1-  422     ;6 compiler assigned registers:
                                    1-  423     ;   r0x1008
                                    1-  424     ;   r0x1009
                                    1-  425     ;   r0x100A
                                    1-  426     ;   r0x100B
                                    1-  427     ;   r0x100C
                                    1-  428     ;   r0x100D
                                    1-  429     ;; Starting pCode block
                                    1-  430     .segment "code"; module=main, function=_delay
                                    1-  432     ;local variable name mapping:
     0000                           1-  436     _delay:
                                    1-  437     ; 2 exit points
                                    1-  438     	.line	141, "main.c"; 	void delay(u8t count)
                                    1-  439     	BANKSEL	r0x1008
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  440     	MOVAR	r0x1008
                                    1-  441     	.line	144, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1-  442     	MOVIA	0x01
                                    1-  443     	BANKSEL	r0x1009
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  444     	MOVAR	r0x1009
                                    1-  445     	BANKSEL	r0x100A
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1-  446     	CLRR	r0x100A
     0007                           1-  447     _00147_DS_:
                                    1-  448     	BANKSEL	r0x1008
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1-  449     	MOVR	r0x1008,W
                                    1-  450     	BANKSEL	r0x100B
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1-  451     	MOVAR	r0x100B
                                    1-  452     ;;1	CLRR	r0x100C
     000B 2100                      1-  453     	MOVIA	0x00
     000C 2580                      1-  454     	ADDIA	0x80
                                    1-  455     	BANKSEL	r0x100D
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1-  456     	MOVAR	r0x100D
                                    1-  457     	BANKSEL	r0x100A
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  458     	MOVR	r0x100A,W
     0011 2580                      1-  459     	ADDIA	0x80
                                    1-  460     	BANKSEL	r0x100D
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1-  461     	SUBAR	r0x100D,W
     0014 0903                      1-  462     	BTRSS	STATUS,2
                                    1-  463     	MGOTO	_00158_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  464     	BANKSEL	r0x1009
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1-  465     	MOVR	r0x1009,W
                                    1-  466     	BANKSEL	r0x100B
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1-  467     	SUBAR	r0x100B,W
     001A                           1-  468     _00158_DS_:
     001A 0803                      1-  469     	BTRSS	STATUS,0
                                    1-  470     	MGOTO	_00149_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  471     	BANKSEL	r0x1009
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1-  472     	INCR	r0x1009,F
     001E 0903                      1-  473     	BTRSS	STATUS,2
                                    1-  474     	MGOTO	_00002_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  475     	BANKSEL	r0x100A
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1-  476     	INCR	r0x100A,F
     0022                           1-  477     _00002_DS_:
                                    1-  478     	MGOTO	_00147_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1-  479     _00149_DS_:
                                    1-  480     	.line	146, "main.c"; 	}
                                    1-  481     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1-  482     ; exit point of _delay
                                    1-  484     ;***
                                    1-  485     ;  pBlock Stats: dbName = C
                                    1-  486     ;***
                                    1-  487     ;has an exit
                                    1-  488     ;; Starting pCode block
                                    1-  489     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  491     _F_wait_eoc:
                                    1-  492     ; 2 exit points
     0000                           1-  493     _00140_DS_:
                                    1-  494     	.line	136, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  495     	BTRSS	_ADMDbits,5
                                    1-  496     	MGOTO	_00140_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  497     	.line	138, "main.c"; 	}
                                    1-  498     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  499     ; exit point of _F_wait_eoc
                                    1-  501     ;***
                                    1-  502     ;  pBlock Stats: dbName = C
                                    1-  503     ;***
                                    1-  504     ;has an exit
                                    1-  505     ;functions called:
                                    1-  506     ;   _delay
                                    1-  507     ;   _F_wait_eoc
                                    1-  508     ;   _delay
                                    1-  509     ;   _F_wait_eoc
                                    1-  510     ;6 compiler assigned registers:
                                    1-  511     ;   r0x100E
                                    1-  512     ;   r0x100F
                                    1-  513     ;   r0x1010
                                    1-  514     ;   r0x1011
                                    1-  515     ;   r0x1012
                                    1-  516     ;   r0x1013
                                    1-  517     ;; Starting pCode block
                                    1-  518     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1-  520     ;local variable name mapping:
     0000                           1-  523     _F_AIN2_Convert:
                                    1-  524     ; 2 exit points
                                    1-  525     	.line	119, "main.c"; 	void F_AIN2_Convert(char count)
                                    1-  526     	BANKSEL	r0x100E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  527     	MOVAR	r0x100E
                                    1-  528     	.line	121, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1-  529     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  530     	CLRR	_R_AIN2_DATA_LB
                                    1-  531     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  532     	CLRR	_R_AIN2_DATA
     0006 02rr                      1-  533     	CLRR	(_R_AIN2_DATA + 1)
                                    1-  534     	.line	123, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1-  535     	MOVIA	0x92
     0008 00rr                      1-  536     	MOVAR	_ADMD
                                    1-  537     	.line	124, "main.c"; 	delay(200);	
     0009 21C8                      1-  538     	MOVIA	0xc8
                                    1-  539     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  540     	.line	125, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  541     	MOVIA	0x01
                                    1-  542     	BANKSEL	r0x100F
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  543     	MOVAR	r0x100F
     000E                           1-  544     _00133_DS_:
                                    1-  545     	BANKSEL	r0x100F
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  546     	MOVR	r0x100F,W
                                    1-  547     	BANKSEL	r0x100E
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  548     	SUBAR	r0x100E,W
     0012 0803                      1-  549     	BTRSS	STATUS,0
                                    1-  550     	MGOTO	_00135_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  551     	.line	127, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  552     	BSR	_ADMDbits,6
                                    1-  553     	.line	128, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  554     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  555     	.line	129, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  556     	MOVIA	0x0f
     0017 10rr                      1-  557     	ANDAR	_ADR,W
                                    1-  558     ;;3	MOVAR	r0x1010
                                    1-  559     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  560     	ADDAR	_R_AIN2_DATA_LB,F
                                    1-  561     	.line	130, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1-  562     	MOVR	_ADD,W
                                    1-  563     	BANKSEL	r0x1010
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  564     	MOVAR	r0x1010
                                    1-  565     ;;1	CLRR	r0x1011
                                    1-  566     ;;101	MOVR	r0x1010,W
                                    1-  567     ;;99	MOVAR	r0x1012
     001D 2100                      1-  568     	MOVIA	0x00
                                    1-  569     	BANKSEL	r0x1013
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  570     	MOVAR	r0x1013
                                    1-  571     ;;100	MOVR	r0x1012,W
                                    1-  572     	BANKSEL	r0x1010
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  573     	MOVR	r0x1010,W
                                    1-  574     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  575     	ADDAR	_R_AIN2_DATA,F
                                    1-  576     	BANKSEL	r0x1013
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  577     	MOVR	r0x1013,W
     0026 0C03                      1-  578     	BTRSC	STATUS,0
     0027 05rr                      1-  579     	INCR	r0x1013,W
     0028 0D03                      1-  580     	BTRSC	STATUS,2
                                    1-  581     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  582     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  583     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1-  584     _00003_DS_:
                                    1-  585     	.line	125, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  586     	BANKSEL	r0x100F
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  587     	INCR	r0x100F,F
                                    1-  588     	MGOTO	_00133_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  589     _00135_DS_:
                                    1-  590     	.line	132, "main.c"; 	}
                                    1-  591     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  592     ; exit point of _F_AIN2_Convert
                                    1-  594     ;***
                                    1-  595     ;  pBlock Stats: dbName = C
                                    1-  596     ;***
                                    1-  597     ;has an exit
                                    1-  598     ;functions called:
                                    1-  599     ;   _delay
                                    1-  600     ;   _delay
                                    1-  601     ;; Starting pCode block
                                    1-  602     .segment "code"; module=main, function=_initAD
     0000                           1-  604     _initAD:
                                    1-  605     ; 2 exit points
                                    1-  606     	.line	97, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA2 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2182                      1-  607     	MOVIA	0x82
     0001 00rr                      1-  608     	MOVAR	_ADMD
                                    1-  609     	.line	102, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1-  610     	CLRR	_ADVREFH
                                    1-  611     	.line	107, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1-  612     	MOVIA	0x10
     0004 00rr                      1-  613     	MOVAR	_ADR
                                    1-  614     	.line	109, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1-  615     	MOVIA	0x03
     0006 00rr                      1-  616     	MOVAR	_ADCR
                                    1-  617     	.line	111, "main.c"; 	PACON = C_PA2_AIN2;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2104                      1-  618     	MOVIA	0x04
     0008 00rr                      1-  619     	MOVAR	_PACON
                                    1-  620     	.line	112, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1-  621     	BSR	_ADMDbits,4
                                    1-  622     	.line	113, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1-  623     	MOVIA	0x64
                                    1-  624     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  625     	.line	116, "main.c"; 	}
                                    1-  626     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1-  627     ; exit point of _initAD
                                    1-  629     ;***
                                    1-  630     ;  pBlock Stats: dbName = C
                                    1-  631     ;***
                                    1-  632     ;has an exit
                                    1-  633     ;; Starting pCode block
                                    1-  634     .segment "code"; module=main, function=_initSys
     0000                           1-  636     _initSys:
                                    1-  637     ; 2 exit points
                                    1-  638     	.line	67, "main.c"; 	DISI();
     0000 0013                      1-  639     	DISI
                                    1-  640     	.line	68, "main.c"; 	IOSTA = C_PA5_Input  | C_PA3_Input | C_PA2_Input | C_PA1_Input | C_PA0_Input;
     0001 212F                      1-  641     	MOVIA	0x2f
     0002 000r                      1-  642     	IOST	_IOSTA
                                    1-  643     	.line	69, "main.c"; 	IOSTB = C_PB2_Input | C_PB1_Input | C_PB0_Input;
     0003 2107                      1-  644     	MOVIA	0x07
     0004 000r                      1-  645     	IOST	_IOSTB
                                    1-  646     	.line	70, "main.c"; 	PORTB = 0x01;
     0005 2101                      1-  647     	MOVIA	0x01
     0006 00rr                      1-  648     	MOVAR	_PORTB
                                    1-  649     	.line	71, "main.c"; 	PORTA = 0x01;
     0007 00rr                      1-  650     	MOVAR	_PORTA
                                    1-  651     	.line	72, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1-  652     	MOVIA	0xff
     0009 000r                      1-  653     	IOST	_APHCON
                                    1-  654     	.line	73, "main.c"; 	BPHCON = 0xFD;
     000A 21FD                      1-  655     	MOVIA	0xfd
     000B 00rr                      1-  656     	MOVAR	_BPHCON
                                    1-  657     	.line	74, "main.c"; 	ABPLCON = 0xFF;
     000C 21FF                      1-  658     	MOVIA	0xff
     000D 00rr                      1-  659     	MOVAR	_ABPLCON
                                    1-  660     	.line	76, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1-  661     	MOVIA	0x01
     000F 00rr                      1-  662     	MOVAR	_INTE
                                    1-  663     	.line	78, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1-  664     	CLRA	
     0011 000r                      1-  665     	IOST	_PCON1
                                    1-  666     	.line	80, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  667     	MOVIA	0x37
     0013 00rr                      1-  668     	MOVAR	_TMR0
                                    1-  669     	.line	81, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1-  670     	MOVIA	0x01
     0015 0003                      1-  671     	T0MD	
                                    1-  672     	.line	83, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1-  673     	IOST	_PCON1
                                    1-  674     	.line	86, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0017 2188                      1-  675     	MOVIA	0x88
     0018 00rr                      1-  676     	MOVAR	_PCON
                                    1-  677     	.line	89, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1-  678     	MOVIA	0x01
     001A 000r                      1-  679     	IOST	_PCON1
                                    1-  680     	.line	90, "main.c"; 	ENI();
     001B 0004                      1-  681     	ENI
                                    1-  682     	.line	91, "main.c"; 	}
                                    1-  683     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1-  684     ; exit point of _initSys
                                    1-  687     ;	code size estimation:
                                    1-  688     ;	  191+   47 =   238 instructions (  570 byte)
                                    1-  690     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
