
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showKeyLed
                                    1-   24     	extern	_A2
                                    1-   25     	extern	_B2
                                    1-   26     	extern	_C2
                                    1-   27     	extern	_D2
                                    1-   28     	extern	_E2
                                    1-   29     	extern	_F2
                                    1-   30     	extern	_G2
                                    1-   31     	extern	_A3
                                    1-   32     	extern	_B3
                                    1-   33     	extern	_C3
                                    1-   34     	extern	_D3
                                    1-   35     	extern	_E3
                                    1-   36     	extern	_F3
                                    1-   37     	extern	_G3
                                    1-   38     	extern	_delayms
                                    1-   39     	extern	_delay
                                    1-   40     	extern	_LedCtr2
                                    1-   41     	extern	_checkInAD
                                    1-   42     	extern	_F_AIN3_Convert
                                    1-   43     	extern	_fgCtr
                                    1-   44     	extern	_ledCtr
                                    1-   45     	extern	_workCtr
                                    1-   46     	extern	__divuchar
                                    1-   47     	extern	__moduchar
                                    1-   48     	extern	_PORTAbits
                                    1-   49     	extern	_PORTBbits
                                    1-   50     	extern	_PCONbits
                                    1-   51     	extern	_BWUCONbits
                                    1-   52     	extern	_ABPLCONbits
                                    1-   53     	extern	_BPHCONbits
                                    1-   54     	extern	_INTEbits
                                    1-   55     	extern	_INTFbits
                                    1-   56     	extern	_ADMDbits
                                    1-   57     	extern	_ADRbits
                                    1-   58     	extern	_ADVREFHbits
                                    1-   59     	extern	_ADCRbits
                                    1-   60     	extern	_AWUCONbits
                                    1-   61     	extern	_PACONbits
                                    1-   62     	extern	_INTEDGbits
                                    1-   63     	extern	_ANAENbits
                                    1-   64     	extern	_RFCbits
                                    1-   65     	extern	_INTE2bits
                                    1-   66     	extern	_INDF
                                    1-   67     	extern	_TMR0
                                    1-   68     	extern	_PCL
                                    1-   69     	extern	_STATUS
                                    1-   70     	extern	_FSR
                                    1-   71     	extern	_PORTA
                                    1-   72     	extern	_PORTB
                                    1-   73     	extern	_PCON
                                    1-   74     	extern	_BWUCON
                                    1-   75     	extern	_PCHBUF
                                    1-   76     	extern	_ABPLCON
                                    1-   77     	extern	_BPHCON
                                    1-   78     	extern	_INTE
                                    1-   79     	extern	_INTF
                                    1-   80     	extern	_ADMD
                                    1-   81     	extern	_ADR
                                    1-   82     	extern	_ADD
                                    1-   83     	extern	_ADVREFH
                                    1-   84     	extern	_ADCR
                                    1-   85     	extern	_AWUCON
                                    1-   86     	extern	_PACON
                                    1-   87     	extern	_INTEDG
                                    1-   88     	extern	_TMRH
                                    1-   89     	extern	_ANAEN
                                    1-   90     	extern	_RFC
                                    1-   91     	extern	_TM3RH
                                    1-   92     	extern	_INTE2
                                    1-   93     	extern	_TMR1
                                    1-   94     	extern	_T1CR1
                                    1-   95     	extern	_T1CR2
                                    1-   96     	extern	_PWM1DUTY
                                    1-   97     	extern	_PS1CV
                                    1-   98     	extern	_BZ1CR
                                    1-   99     	extern	_IRCR
                                    1-  100     	extern	_TBHP
                                    1-  101     	extern	_TBHD
                                    1-  102     	extern	_TMR2
                                    1-  103     	extern	_T2CR1
                                    1-  104     	extern	_T2CR2
                                    1-  105     	extern	_PWM2DUTY
                                    1-  106     	extern	_PS2CV
                                    1-  107     	extern	_BZ2CR
                                    1-  108     	extern	_OSCCR
                                    1-  109     	extern	_TMR3
                                    1-  110     	extern	_T3CR1
                                    1-  111     	extern	_T3CR2
                                    1-  112     	extern	_PWM3DUTY
                                    1-  113     	extern	_PS3CV
                                    1-  114     	extern	_BZ3CR
                                    1-  115     	extern	_IOSTA
                                    1-  116     	extern	_IOSTB
                                    1-  117     	extern	_APHCON
                                    1-  118     	extern	_PS0CV
                                    1-  119     	extern	_BODCON
                                    1-  120     	extern	_CMPCR
                                    1-  121     	extern	_PCON1
                                    1-  122     	extern	_T0MD
                                    1-  123     	extern	___sdcc_saved_fsr
                                    1-  124     	extern	___sdcc_saved_stk00
                                    1-  125     	extern	___sdcc_saved_stk01
                                    1-  126     	extern	__gptrget1
                                    1-  127     	extern	__mulchar
                                    1-  128     	extern	__nyc_ny8_startup
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; global declarations
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     	extern	_F_wait_eoc
                                    1-  133     	extern	_F_AIN2_Convert
                                    1-  134     	extern	_F_AIN4_Convert
                                    1-  135     	extern	_checkOutA
                                    1-  136     	extern	_checkBatAD
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyRead
                                    1-  139     	extern	_gotoSleep
                                    1-  140     	extern	_pwmStop
                                    1-  141     	extern	_pwmInit
                                    1-  142     	extern	_pwm1Stop
                                    1-  143     	extern	_pwm1Init
                                    1-  144     	extern	_powerOff
                                    1-  145     	extern	_initSys
                                    1-  146     	extern	_keyCtr
                                    1-  147     	extern	_refreshNub
                                    1-  148     	extern	_chrgCtr
                                    1-  149     	extern	_isr
                                    1-  150     	extern	_main
                                    1-  151     	extern	_setMaxDuty
                                    1-  152     	extern	_debug
                                    1-  153     	extern	_Status
                                    1-  154     	extern	_R_AIN4_DATA
                                    1-  155     	extern	_R_AIN4_DATA_LB
                                    1-  156     	extern	_R_AIN2_DATA
                                    1-  157     	extern	_R_AIN2_DATA_LB
                                    1-  158     	extern	_intCount
                                    1-  159     	extern	_sleepTime
                                    1-  160     	extern	_count200ms
                                    1-  161     	extern	_count500ms
                                    1-  162     	extern	_count1s
                                    1-  163     	extern	_count5s
                                    1-  164     	extern	_count900s
                                    1-  165     	extern	_workStep
                                    1-  166     	extern	_keyCount
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_ledLightTime
                                    1-  169     	extern	_maxDuty
                                    1-  170     	extern	_currentDuty
                                    1-  171     	extern	_overCount
                                    1-  172     	extern	_tempDuty
                                    1-  173     	extern	_count5S
                                    1-  174     	extern	_ledDeadTime
                                    1-  175     	extern	_countFull
                                    1-  176     	extern	_tempshiweiNum
                                    1-  177     	extern	_tempgeweiNum
                                    1-  178     	extern	_refreshCount
                                    1-  179     	extern	_shiweiNum
                                    1-  180     	extern	_geweiNum
                                    1-  181     	extern	_batValue
                                    1-  182     	extern	_cDuty
                                    1-  183     	extern	_preBatValue
                                    1-  184     	extern	_closeCount
                                    1-  185     	extern	_firstShowCount
                                    1-  186     	extern	_batCount
                                    1-  187     	extern	_chrgStep
                                    1-  188     	extern	_maxduty
                                    1-  189     	extern	_chrgFullFlag
                                    1-  190     	extern	_fullTime
                                    1-  191     	extern	_fullFlag
                                    1-  192     	extern	_subTime
                                    1-  193     	extern	_subMin
                                    1-  194     	extern	_addTime
                                    1-  195     	extern	_chrgduty
                                    1-  197     	extern PSAVE
                                    1-  198     	extern SSAVE
                                    1-  199     	extern WSAVE
                                    1-  200     	extern STK02
                                    1-  201     	extern STK01
                                    1-  202     	extern STK00
                                    1-  204     .segment "uninit", 0x20000040
 20000040                           1-  205     PSAVE:
                                    1-  206     	.res 1
 20000041                           1-  207     SSAVE:
                                    1-  208     	.res 1
 20000042                           1-  209     WSAVE:
                                    1-  210     	.res 1
 20000043                           1-  211     STK02:
                                    1-  212     	.res 1
 20000044                           1-  213     STK01:
                                    1-  214     	.res 1
 20000045                           1-  215     STK00:
                                    1-  216     	.res 1
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; global definitions
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN4_DATA:
                                    1-  223     	.res	2
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN4_DATA_LB:
                                    1-  228     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     _R_AIN2_DATA:
                                    1-  233     	.res	2
                                    1-  236     .segment "uninit"
     0000                           1-  237     _R_AIN2_DATA_LB:
                                    1-  238     	.res	1
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; absolute symbol definitions
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ; compiler-defined variables
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x105C:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x105D:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x105E:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1060:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1059:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x105A:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1056:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1058:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1055:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1054:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1053:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x104E:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x104F:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1050:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1051:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1052:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x104A:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x104B:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x104C:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x104D:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1044:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1045:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1046:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x1049:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x103E:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x103F:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1040:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x1043:
                                    1-  330     	.res	1
                                    1-  331     ;--------------------------------------------------------
                                    1-  332     ; initialized data
                                    1-  333     ;--------------------------------------------------------
                                    1-  335     .segment "idata"
     0000                           1-  336     _debug:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _numArray:
     0000 003F                      1-  343     	dw	0x3f
     0001 0006                      1-  344     	dw	0x06
     0002 005B                      1-  345     	dw	0x5b
     0003 004F                      1-  346     	dw	0x4f
     0004 0066                      1-  347     	dw	0x66
     0005 006D                      1-  348     	dw	0x6d
     0006 007D                      1-  349     	dw	0x7d
     0007 0007                      1-  350     	dw	0x07
     0008 007F                      1-  351     	dw	0x7f
     0009 006F                      1-  352     	dw	0x6f
     000A 0071                      1-  353     	dw	0x71
     000B 0079                      1-  354     	dw	0x79
     000C 0050                      1-  355     	dw	0x50
                                    1-  359     .segment "idata"
     0000                           1-  360     _Status:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _intCount:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _sleepTime:
     0000 0000 0000                 1-  373     	dw	0x00, 0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _count200ms:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _count500ms:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _count1s:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _count5s:
     0000 0000 0000                 1-  397     	dw	0x00, 0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _count900s:
     0000 0000 0000                 1-  403     	dw	0x00, 0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _workStep:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _keyCount:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _pwStep:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _ledLightTime:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _maxDuty:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _currentDuty:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _overCount:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _tempDuty:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _count5S:
     0000 0000 0000                 1-  457     	dw	0x00, 0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _ledDeadTime:
     0000 0000                      1-  463     	dw	0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _countFull:
     0000 0000 0000                 1-  469     	dw	0x00, 0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _tempshiweiNum:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _tempgeweiNum:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _refreshCount:
     0000 0000 0000                 1-  487     	dw	0x00, 0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _shiweiNum:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _geweiNum:
     0000 0000                      1-  499     	dw	0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _batValue:
     0000 0000                      1-  505     	dw	0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _cDuty:
     0000 0000                      1-  511     	dw	0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _preBatValue:
     0000 0000                      1-  517     	dw	0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _closeCount:
     0000 0000 0000                 1-  523     	dw	0x00, 0x00
                                    1-  527     .segment "idata"
     0000                           1-  528     _firstShowCount:
     0000 0000                      1-  529     	dw	0x00
                                    1-  533     .segment "idata"
     0000                           1-  534     _batCount:
     0000 0000 0000                 1-  535     	dw	0x00, 0x00
                                    1-  539     .segment "idata"
     0000                           1-  540     _chrgStep:
     0000 0000                      1-  541     	dw	0x00
                                    1-  545     .segment "idata"
     0000                           1-  546     _maxduty:
     0000 0000                      1-  547     	dw	0x00
                                    1-  551     .segment "idata"
     0000                           1-  552     _chrgFullFlag:
     0000 0000                      1-  553     	dw	0x00
                                    1-  557     .segment "idata"
     0000                           1-  558     _fullTime:
     0000 0000                      1-  559     	dw	0x00
                                    1-  563     .segment "idata"
     0000                           1-  564     _fullFlag:
     0000 0000                      1-  565     	dw	0x00
                                    1-  569     .segment "idata"
     0000                           1-  570     _subTime:
     0000 0000                      1-  571     	dw	0x00
                                    1-  575     .segment "idata"
     0000                           1-  576     _subMin:
     0000 0000                      1-  577     	dw	0x00
                                    1-  581     .segment "idata"
     0000                           1-  582     _addTime:
     0000 0000                      1-  583     	dw	0x00
                                    1-  587     .segment "idata"
     0000                           1-  588     _chrgduty:
     0000 0000                      1-  589     	dw	0x00
                                    1-  592     ;--------------------------------------------------------
                                    1-  593     ; overlayable items in internal ram 
                                    1-  594     ;--------------------------------------------------------
                                    1-  595     ;	udata_ovr
                                    1-  596     ;--------------------------------------------------------
                                    1-  597     ; reset vector 
                                    1-  598     ;--------------------------------------------------------
                                    1-  599     ORG	0x0000
     0000 3rrr                      1-  600     	LGOTO	__nyc_ny8_startup
                                    1-  601     ;--------------------------------------------------------
                                    1-  602     ; interrupt and initialization code
                                    1-  603     ;--------------------------------------------------------
                                    1-  604     ORG 0x0008
                                    1-  605     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  607     .segment "code"
     0000                           1-  608     __sdcc_interrupt:
                                    1-  609     ;***
                                    1-  610     ;  pBlock Stats: dbName = I
                                    1-  611     ;***
                                    1-  612     ;2 compiler assigned registers:
                                    1-  613     ;   STK00
                                    1-  614     ;   STK01
                                    1-  615     ;; Starting pCode block
     0000                           1-  616     _isr:
                                    1-  617     ; 0 exit points
                                    1-  618     	.line	93, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  619     	MOVAR	WSAVE
     0001 1503                      1-  620     	SWAPR	STATUS,W
     0002 0283                      1-  621     	CLRR	STATUS
     0003 00rr                      1-  622     	MOVAR	SSAVE
     0004 010A                      1-  623     	MOVR	PCHBUF,W
     0005 028A                      1-  624     	CLRR	PCHBUF
     0006 00rr                      1-  625     	MOVAR	PSAVE
     0007 0104                      1-  626     	MOVR	FSR,W
                                    1-  627     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  628     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  629     	MOVR	STK00,W
                                    1-  630     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  631     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  632     	MOVR	STK01,W
                                    1-  633     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  634     	MOVAR	___sdcc_saved_stk01
                                    1-  635     	.line	95, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  636     	BTRSS	_INTFbits,0
                                    1-  637     	MGOTO	_00121_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  638     	.line	97, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  639     	MOVIA	0x37
     0013 03rr                      1-  640     	ADDAR	_TMR0,F
                                    1-  641     	.line	99, "main.c"; 	if(++intCount >= 100)
                                    1-  642     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  643     	INCR	_intCount,F
                                    1-  644     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  645     	MOVIA	0x64
     0017 04rr                      1-  646     	SUBAR	_intCount,W
     0018 0803                      1-  647     	BTRSS	STATUS,0
                                    1-  648     	MGOTO	_00121_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  649     	.line	101, "main.c"; 	IntFlag = 1;
                                    1-  650     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  651     	BSR	_Status,0
                                    1-  652     	.line	102, "main.c"; 	intCount = 0;
                                    1-  653     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  654     	CLRR	_intCount
                                    1-  655     	.line	104, "main.c"; 	if(++count200ms >= 20)
                                    1-  656     	BANKSEL	_count200ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  657     	INCR	_count200ms,F
                                    1-  658     ;;unsigned compare: left < lit (0x14=20), size=1
     0020 2114                      1-  659     	MOVIA	0x14
     0021 04rr                      1-  660     	SUBAR	_count200ms,W
     0022 0803                      1-  661     	BTRSS	STATUS,0
                                    1-  662     	MGOTO	_00108_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  663     	.line	106, "main.c"; 	count200ms = 0;
     0024 02rr                      1-  664     	CLRR	_count200ms
                                    1-  665     	.line	107, "main.c"; 	if(ledDeadTime > 0)
                                    1-  666     	BANKSEL	_ledDeadTime
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  667     	MOVR	_ledDeadTime,W
     0027 0903                      1-  668     	BTRSS	STATUS,2
                                    1-  669     	.line	108, "main.c"; 	--ledDeadTime;
     0028 06rr                      1-  670     	DECR	_ledDeadTime,F
     0029                           1-  671     _00108_DS_:
                                    1-  672     	.line	110, "main.c"; 	if(++count5s >= 500)
                                    1-  673     	BANKSEL	_count5s
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 05rr                      1-  674     	INCR	_count5s,F
     002B 0D03                      1-  675     	BTRSC	STATUS,2
     002C 05rr                      1-  676     	INCR	(_count5s + 1),F
                                    1-  677     ;;unsigned compare: left < lit (0x1F4=500), size=2
     002D 2101                      1-  678     	MOVIA	0x01
     002E 04rr                      1-  679     	SUBAR	(_count5s + 1),W
     002F 0903                      1-  680     	BTRSS	STATUS,2
                                    1-  681     	MGOTO	_00155_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031 21F4                      1-  682     	MOVIA	0xf4
     0032 04rr                      1-  683     	SUBAR	_count5s,W
     0033                           1-  684     _00155_DS_:
     0033 0803                      1-  685     	BTRSS	STATUS,0
                                    1-  686     	MGOTO	_00110_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  687     	.line	112, "main.c"; 	count5s = 0;
                                    1-  688     	BANKSEL	_count5s
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1-  689     	CLRR	_count5s
     0037 02rr                      1-  690     	CLRR	(_count5s + 1)
     0038                           1-  691     _00110_DS_:
                                    1-  692     	.line	114, "main.c"; 	if(++count1s >= 100)
                                    1-  693     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1-  694     	INCR	_count1s,F
                                    1-  695     ;;unsigned compare: left < lit (0x64=100), size=1
     003A 2164                      1-  696     	MOVIA	0x64
     003B 04rr                      1-  697     	SUBAR	_count1s,W
     003C 0803                      1-  698     	BTRSS	STATUS,0
                                    1-  699     	MGOTO	_00121_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  700     	.line	116, "main.c"; 	count1s = 0;
     003E 02rr                      1-  701     	CLRR	_count1s
                                    1-  702     	.line	117, "main.c"; 	if(ledLightTime > 0)
                                    1-  703     	BANKSEL	_ledLightTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  704     	MOVR	_ledLightTime,W
     0041 0903                      1-  705     	BTRSS	STATUS,2
                                    1-  706     	.line	118, "main.c"; 	ledLightTime--;
     0042 06rr                      1-  707     	DECR	_ledLightTime,F
                                    1-  708     	.line	119, "main.c"; 	if(workStep)
                                    1-  709     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  710     	MOVR	_workStep,W
     0045 0D03                      1-  711     	BTRSC	STATUS,2
                                    1-  712     	MGOTO	_00114_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  713     	.line	121, "main.c"; 	++count900s;
                                    1-  714     	BANKSEL	_count900s
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 05rr                      1-  715     	INCR	_count900s,F
     0049 0D03                      1-  716     	BTRSC	STATUS,2
     004A 05rr                      1-  717     	INCR	(_count900s + 1),F
                                    1-  718     	MGOTO	_00121_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1-  719     _00114_DS_:
                                    1-  720     	.line	125, "main.c"; 	count900s = 0;
                                    1-  721     	BANKSEL	_count900s
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1-  722     	CLRR	_count900s
     004E 02rr                      1-  723     	CLRR	(_count900s + 1)
     004F                           1-  724     _00121_DS_:
                                    1-  725     	.line	134, "main.c"; 	if(INTFbits.PABIF)
     004F 08rr                      1-  726     	BTRSS	_INTFbits,1
                                    1-  727     	MGOTO	_00123_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  728     	.line	136, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0051 21FD                      1-  729     	MOVIA	0xfd
     0052 00rr                      1-  730     	MOVAR	_INTF
     0053                           1-  731     _00123_DS_:
                                    1-  732     	.line	139, "main.c"; 	INTF = 0;
     0053 02rr                      1-  733     	CLRR	_INTF
                                    1-  734     	.line	141, "main.c"; 	}
                                    1-  735     	BANKSEL	___sdcc_saved_stk01
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  736     	MOVR	___sdcc_saved_stk01,W
     0056 00rr                      1-  737     	MOVAR	STK01
                                    1-  738     	BANKSEL	___sdcc_saved_stk00
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  739     	MOVR	___sdcc_saved_stk00,W
     0059 00rr                      1-  740     	MOVAR	STK00
                                    1-  741     	BANKSEL	___sdcc_saved_fsr
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  742     	MOVR	___sdcc_saved_fsr,W
     005C 0084                      1-  743     	MOVAR	FSR
     005D 01rr                      1-  744     	MOVR	PSAVE,W
     005E 008A                      1-  745     	MOVAR	PCHBUF
     005F 0283                      1-  746     	CLRR	STATUS
     0060 15rr                      1-  747     	SWAPR	SSAVE,W
     0061 0083                      1-  748     	MOVAR	STATUS
     0062 15rr                      1-  749     	SWAPR	WSAVE,F
     0063 15rr                      1-  750     	SWAPR	WSAVE,W
     0064                           1-  751     END_OF_INTERRUPT:
     0064 0011                      1-  752     	RETIE	
                                    1-  754     ;--------------------------------------------------------
                                    1-  755     ; code
                                    1-  756     ;--------------------------------------------------------
                                    1-  757     ;***
                                    1-  758     ;  pBlock Stats: dbName = M
                                    1-  759     ;***
                                    1-  760     ;has an exit
                                    1-  761     ;functions called:
                                    1-  762     ;   _initSys
                                    1-  763     ;   _initAD
                                    1-  764     ;   _delayms
                                    1-  765     ;   _refreshNub
                                    1-  766     ;   _setInput
                                    1-  767     ;   _pwmStop
                                    1-  768     ;   _powerOff
                                    1-  769     ;   _checkBatAD
                                    1-  770     ;   _checkOutA
                                    1-  771     ;   _chrgCtr
                                    1-  772     ;   _keyCtr
                                    1-  773     ;   _gotoSleep
                                    1-  774     ;   _powerOff
                                    1-  775     ;   _initSys
                                    1-  776     ;   _initAD
                                    1-  777     ;   _delayms
                                    1-  778     ;   _refreshNub
                                    1-  779     ;   _setInput
                                    1-  780     ;   _pwmStop
                                    1-  781     ;   _powerOff
                                    1-  782     ;   _checkBatAD
                                    1-  783     ;   _checkOutA
                                    1-  784     ;   _chrgCtr
                                    1-  785     ;   _keyCtr
                                    1-  786     ;   _gotoSleep
                                    1-  787     ;   _powerOff
                                    1-  788     ;; Starting pCode block
                                    1-  789     .segment "code"; module=main, function=_main
     0000                           1-  791     _main:
                                    1-  792     ; 2 exit points
                                    1-  793     	.line	146, "main.c"; 	initSys();
                                    1-  794     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  795     	.line	147, "main.c"; 	initAD();
                                    1-  796     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  797     	.line	148, "main.c"; 	firstShowCount = 100;
     0002 2164                      1-  798     	MOVIA	0x64
                                    1-  799     	BANKSEL	_firstShowCount
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  800     	MOVAR	_firstShowCount
                                    1-  801     	.line	149, "main.c"; 	ledLightTime = showFlag = 1;
                                    1-  802     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1-  803     	BSR	_Status,4
                                    1-  804     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  805     	CLRR	_ledLightTime
                                    1-  806     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  807     	BTRSS	_Status,4
                                    1-  808     	MGOTO	_00010_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  809     	BANKSEL	_ledLightTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  810     	INCR	_ledLightTime,F
     000E                           1-  811     _00010_DS_:
                                    1-  812     	.line	150, "main.c"; 	tempshiweiNum = shiweiNum = 8;
     000E 2108                      1-  813     	MOVIA	0x08
                                    1-  814     	BANKSEL	_shiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1-  815     	MOVAR	_shiweiNum
                                    1-  816     	BANKSEL	_tempshiweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  817     	MOVAR	_tempshiweiNum
                                    1-  818     	.line	151, "main.c"; 	tempgeweiNum = geweiNum = 8;
                                    1-  819     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  820     	MOVAR	_geweiNum
     0015 2108                      1-  821     	MOVIA	0x08
                                    1-  822     	BANKSEL	_tempgeweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  823     	MOVAR	_tempgeweiNum
                                    1-  824     	.line	152, "main.c"; 	delayms(250);
     0018 21FA                      1-  825     	MOVIA	0xfa
                                    1-  826     	MCALL	_delayms
     0019 2rrr                      3-   66 m1      LCALL rom_address
     001A                           1-  827     _00212_DS_:
                                    1-  828     	.line	155, "main.c"; 	CLRWDT();
     001A 0002                      1-  829     	clrwdt
                                    1-  830     	.line	156, "main.c"; 	if(showFlag)
                                    1-  831     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 0Arr                      1-  832     	BTRSS	_Status,4
                                    1-  833     	MGOTO	_00161_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  834     	.line	157, "main.c"; 	refreshNub();
                                    1-  835     	MCALL	_refreshNub
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  836     	MGOTO	_00162_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  837     _00161_DS_:
                                    1-  838     	.line	159, "main.c"; 	setInput();
                                    1-  839     	MCALL	_setInput
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1-  840     _00162_DS_:
                                    1-  841     	.line	160, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  842     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  843     	MOVR	_workStep,W
     0023 0D03                      1-  844     	BTRSC	STATUS,2
                                    1-  845     	MGOTO	_00172_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  846     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  847     	MOVR	_currentDuty,W
                                    1-  848     	BANKSEL	_maxDuty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  849     	SUBAR	_maxDuty,W
     0029 0C03                      1-  850     	BTRSC	STATUS,0
                                    1-  851     	MGOTO	_00172_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  852     	.line	162, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  853     	BANKSEL	_currentDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 06rr                      1-  854     	DECR	_currentDuty,F
                                    1-  855     	.line	163, "main.c"; 	PWM2DUTY = currentDuty;
     002D 01rr                      1-  856     	MOVR	_currentDuty,W
     002E 00rr                      1-  857     	SFUN	_PWM2DUTY
                                    1-  858     	.line	164, "main.c"; 	cDuty = currentDuty;
     002F 01rr                      1-  859     	MOVR	_currentDuty,W
                                    1-  860     	BANKSEL	_cDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  861     	MOVAR	_cDuty
                                    1-  862     	MGOTO	_00173_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1-  863     _00172_DS_:
                                    1-  864     	.line	166, "main.c"; 	else if(workStep > 0 && tempDuty >= 40)
                                    1-  865     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  866     	MOVR	_workStep,W
     0035 0D03                      1-  867     	BTRSC	STATUS,2
                                    1-  868     	MGOTO	_00173_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     ;;unsigned compare: left < lit (0x28=40), size=1
     0037 2128                      1-  870     	MOVIA	0x28
                                    1-  871     	BANKSEL	_tempDuty
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1-  872     	SUBAR	_tempDuty,W
     003A 0803                      1-  873     	BTRSS	STATUS,0
                                    1-  874     	MGOTO	_00173_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  875     	.line	168, "main.c"; 	if(cDuty > tempDuty)
                                    1-  876     	BANKSEL	_cDuty
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  877     	MOVR	_cDuty,W
                                    1-  878     	BANKSEL	_tempDuty
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1-  879     	SUBAR	_tempDuty,W
     0040 0C03                      1-  880     	BTRSC	STATUS,0
                                    1-  881     	MGOTO	_00166_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  882     	.line	170, "main.c"; 	cDuty--;
                                    1-  883     	BANKSEL	_cDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 06rr                      1-  884     	DECR	_cDuty,F
                                    1-  885     	.line	171, "main.c"; 	PWM2DUTY = cDuty;
     0044 01rr                      1-  886     	MOVR	_cDuty,W
     0045 00rr                      1-  887     	SFUN	_PWM2DUTY
                                    1-  888     	MGOTO	_00173_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1-  889     _00166_DS_:
                                    1-  890     	.line	173, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  891     	BANKSEL	_tempDuty
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1-  892     	MOVR	_tempDuty,W
                                    1-  893     	BANKSEL	_cDuty
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1-  894     	SUBAR	_cDuty,W
     004B 0C03                      1-  895     	BTRSC	STATUS,0
                                    1-  896     	MGOTO	_00173_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  897     	.line	175, "main.c"; 	cDuty++;
     004D 05rr                      1-  898     	INCR	_cDuty,F
                                    1-  899     	.line	176, "main.c"; 	PWM2DUTY = cDuty;
     004E 01rr                      1-  900     	MOVR	_cDuty,W
     004F 00rr                      1-  901     	SFUN	_PWM2DUTY
     0050                           1-  902     _00173_DS_:
                                    1-  903     	.line	180, "main.c"; 	if(!IntFlag)
                                    1-  904     	BANKSEL	_Status
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 08rr                      1-  905     	BTRSS	_Status,0
                                    1-  906     	MGOTO	_00212_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  907     	.line	182, "main.c"; 	IntFlag = 0;
     0053 1Crr                      1-  908     	BCR	_Status,0
                                    1-  909     	.line	183, "main.c"; 	if(firstShowCount > 0)
                                    1-  910     	BANKSEL	_firstShowCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  911     	MOVR	_firstShowCount,W
     0056 0D03                      1-  912     	BTRSC	STATUS,2
                                    1-  913     	MGOTO	_00178_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  914     	.line	185, "main.c"; 	firstShowCount--;
     0058 06rr                      1-  915     	DECR	_firstShowCount,F
                                    1-  916     	.line	186, "main.c"; 	preBatValue = batValue;
                                    1-  917     	BANKSEL	_batValue
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1-  918     	MOVR	_batValue,W
                                    1-  919     	BANKSEL	_preBatValue
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1-  920     	MOVAR	_preBatValue
                                    1-  921     ;;unsigned compare: left < lit (0x5=5), size=1
     005D                           1-  922     _00178_DS_:
                                    1-  923     	.line	189, "main.c"; 	if(batValue < 5 && workStep > 0)
     005D 2105                      1-  924     	MOVIA	0x05
                                    1-  925     	BANKSEL	_batValue
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 04rr                      1-  926     	SUBAR	_batValue,W
     0060 0C03                      1-  927     	BTRSC	STATUS,0
                                    1-  928     	MGOTO	_00182_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  929     	BANKSEL	_workStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 01rr                      1-  930     	MOVR	_workStep,W
     0064 0D03                      1-  931     	BTRSC	STATUS,2
                                    1-  932     	MGOTO	_00182_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  933     	.line	191, "main.c"; 	if(++closeCount >= 6000)
                                    1-  934     	BANKSEL	_closeCount
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 05rr                      1-  935     	INCR	_closeCount,F
     0068 0D03                      1-  936     	BTRSC	STATUS,2
     0069 05rr                      1-  937     	INCR	(_closeCount + 1),F
                                    1-  938     ;;unsigned compare: left < lit (0x1770=6000), size=2
     006A 2117                      1-  939     	MOVIA	0x17
     006B 04rr                      1-  940     	SUBAR	(_closeCount + 1),W
     006C 0903                      1-  941     	BTRSS	STATUS,2
                                    1-  942     	MGOTO	_00305_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E 2170                      1-  943     	MOVIA	0x70
     006F 04rr                      1-  944     	SUBAR	_closeCount,W
     0070                           1-  945     _00305_DS_:
     0070 0803                      1-  946     	BTRSS	STATUS,0
                                    1-  947     	MGOTO	_00183_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  948     	.line	193, "main.c"; 	closeCount = 0;
                                    1-  949     	BANKSEL	_closeCount
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 02rr                      1-  950     	CLRR	_closeCount
     0074 02rr                      1-  951     	CLRR	(_closeCount + 1)
                                    1-  952     	.line	194, "main.c"; 	preBatValue = 0;
                                    1-  953     	BANKSEL	_preBatValue
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 02rr                      1-  954     	CLRR	_preBatValue
                                    1-  955     	.line	195, "main.c"; 	workStep = 0;
                                    1-  956     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 02rr                      1-  957     	CLRR	_workStep
                                    1-  958     	.line	196, "main.c"; 	pwmStop();
                                    1-  959     	MCALL	_pwmStop
     0079 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  960     	MGOTO	_00183_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1-  961     _00182_DS_:
                                    1-  962     	.line	201, "main.c"; 	closeCount = 0;
                                    1-  963     	BANKSEL	_closeCount
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 02rr                      1-  964     	CLRR	_closeCount
     007D 02rr                      1-  965     	CLRR	(_closeCount + 1)
                                    1-  966     ;;unsigned compare: left < lit (0x5=5), size=1
     007E                           1-  967     _00183_DS_:
                                    1-  968     	.line	204, "main.c"; 	if(overCount >= 5 && workStep > 0)
     007E 2105                      1-  969     	MOVIA	0x05
                                    1-  970     	BANKSEL	_overCount
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1-  971     	SUBAR	_overCount,W
     0081 0803                      1-  972     	BTRSS	STATUS,0
                                    1-  973     	MGOTO	_00188_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  974     	BANKSEL	_workStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1-  975     	MOVR	_workStep,W
     0085 0D03                      1-  976     	BTRSC	STATUS,2
                                    1-  977     	MGOTO	_00188_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  978     	.line	206, "main.c"; 	if(++count5S > 250)
                                    1-  979     	BANKSEL	_count5S
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 05rr                      1-  980     	INCR	_count5S,F
     0089 0D03                      1-  981     	BTRSC	STATUS,2
     008A 05rr                      1-  982     	INCR	(_count5S + 1),F
                                    1-  983     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  984     ;;unsigned compare: left >= lit (0xFB=251), size=2
     008B 2100                      1-  985     	MOVIA	0x00
     008C 04rr                      1-  986     	SUBAR	(_count5S + 1),W
     008D 0903                      1-  987     	BTRSS	STATUS,2
                                    1-  988     	MGOTO	_00307_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F 21FB                      1-  989     	MOVIA	0xfb
     0090 04rr                      1-  990     	SUBAR	_count5S,W
     0091                           1-  991     _00307_DS_:
     0091 0803                      1-  992     	BTRSS	STATUS,0
                                    1-  993     	MGOTO	_00189_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  994     	.line	208, "main.c"; 	overCount = 0;
                                    1-  995     	BANKSEL	_overCount
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 02rr                      1-  996     	CLRR	_overCount
                                    1-  997     	.line	209, "main.c"; 	count5S = 0;
                                    1-  998     	BANKSEL	_count5S
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 02rr                      1-  999     	CLRR	_count5S
     0097 02rr                      1- 1000     	CLRR	(_count5S + 1)
                                    1- 1001     	.line	210, "main.c"; 	ledDeadTime = 25;
     0098 2119                      1- 1002     	MOVIA	0x19
                                    1- 1003     	BANKSEL	_ledDeadTime
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 1004     	MOVAR	_ledDeadTime
                                    1- 1005     	.line	211, "main.c"; 	powerOff();
                                    1- 1006     	MCALL	_powerOff
     009B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1007     	MGOTO	_00189_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D                           1- 1008     _00188_DS_:
                                    1- 1009     	.line	216, "main.c"; 	count5S = 0;
                                    1- 1010     	BANKSEL	_count5S
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 02rr                      1- 1011     	CLRR	_count5S
     009F 02rr                      1- 1012     	CLRR	(_count5S + 1)
                                    1- 1013     ;;unsigned compare: left < lit (0x3=3), size=1
     00A0                           1- 1014     _00189_DS_:
                                    1- 1015     	.line	218, "main.c"; 	if(count200ms < 3 && R_AIN4_DATA < 40)
     00A0 2103                      1- 1016     	MOVIA	0x03
                                    1- 1017     	BANKSEL	_count200ms
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 1018     	SUBAR	_count200ms,W
     00A3 0C03                      1- 1019     	BTRSC	STATUS,0
                                    1- 1020     	MGOTO	_00195_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1021     ;;unsigned compare: left < lit (0x28=40), size=2
     00A5 2100                      1- 1022     	MOVIA	0x00
                                    1- 1023     	BANKSEL	_R_AIN4_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 1024     	SUBAR	(_R_AIN4_DATA + 1),W
     00A8 0903                      1- 1025     	BTRSS	STATUS,2
                                    1- 1026     	MGOTO	_00309_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 2128                      1- 1027     	MOVIA	0x28
     00AB 04rr                      1- 1028     	SUBAR	_R_AIN4_DATA,W
     00AC                           1- 1029     _00309_DS_:
     00AC 0C03                      1- 1030     	BTRSC	STATUS,0
                                    1- 1031     	MGOTO	_00195_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1032     	.line	220, "main.c"; 	checkBatAD();
                                    1- 1033     	MCALL	_checkBatAD
     00AE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1034     	MGOTO	_00196_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1035     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1036     ;;unsigned compare: left >= lit (0x6=6), size=1
     00B0                           1- 1037     _00195_DS_:
                                    1- 1038     	.line	222, "main.c"; 	else if(count200ms > 5 && count200ms < 19)
     00B0 2106                      1- 1039     	MOVIA	0x06
                                    1- 1040     	BANKSEL	_count200ms
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 04rr                      1- 1041     	SUBAR	_count200ms,W
     00B3 0803                      1- 1042     	BTRSS	STATUS,0
                                    1- 1043     	MGOTO	_00196_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1044     ;;unsigned compare: left < lit (0x13=19), size=1
     00B5 2113                      1- 1045     	MOVIA	0x13
     00B6 04rr                      1- 1046     	SUBAR	_count200ms,W
     00B7 0803                      1- 1047     	BTRSS	STATUS,0
                                    1- 1048     	.line	224, "main.c"; 	checkOutA();
                                    1- 1049     	MCALL	_checkOutA
     00B8 2rrr                      3-   66 m1      LCALL rom_address
     00B9                           1- 1050     _00196_DS_:
                                    1- 1051     	.line	226, "main.c"; 	chrgCtr();
                                    1- 1052     	MCALL	_chrgCtr
     00B9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1053     	.line	227, "main.c"; 	if(chrgFlag == 0)
                                    1- 1054     	BANKSEL	_Status
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 09rr                      1- 1055     	BTRSS	_Status,3
                                    1- 1056     	.line	228, "main.c"; 	keyCtr();
                                    1- 1057     	MCALL	_keyCtr
     00BC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1058     	.line	229, "main.c"; 	if(workStep == 0 && keyCount == 0 && chrgFlag == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1059     	BANKSEL	_workStep
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 1060     	MOVR	_workStep,W
     00BF 0903                      1- 1061     	BTRSS	STATUS,2
                                    1- 1062     	MGOTO	_00203_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1063     	BANKSEL	_keyCount
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 1064     	MOVR	_keyCount,W
     00C3 0903                      1- 1065     	BTRSS	STATUS,2
                                    1- 1066     	MGOTO	_00203_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1067     	BANKSEL	_Status
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 0Drr                      1- 1068     	BTRSC	_Status,3
                                    1- 1069     	MGOTO	_00203_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1070     	BANKSEL	_ledLightTime
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 01rr                      1- 1071     	MOVR	_ledLightTime,W
     00CA 0903                      1- 1072     	BTRSS	STATUS,2
                                    1- 1073     	MGOTO	_00203_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1074     	BANKSEL	_ledDeadTime
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 01rr                      1- 1075     	MOVR	_ledDeadTime,W
     00CE 0903                      1- 1076     	BTRSS	STATUS,2
                                    1- 1077     	MGOTO	_00203_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1078     	.line	231, "main.c"; 	showFlag = 0;
                                    1- 1079     	BANKSEL	_Status
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 1Err                      1- 1080     	BCR	_Status,4
                                    1- 1081     	.line	232, "main.c"; 	if(++sleepTime > 200)
                                    1- 1082     	BANKSEL	_sleepTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 05rr                      1- 1083     	INCR	_sleepTime,F
     00D4 0D03                      1- 1084     	BTRSC	STATUS,2
     00D5 05rr                      1- 1085     	INCR	(_sleepTime + 1),F
                                    1- 1086     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1087     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00D6 2100                      1- 1088     	MOVIA	0x00
     00D7 04rr                      1- 1089     	SUBAR	(_sleepTime + 1),W
     00D8 0903                      1- 1090     	BTRSS	STATUS,2
                                    1- 1091     	MGOTO	_00312_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
     00DA 21C9                      1- 1092     	MOVIA	0xc9
     00DB 04rr                      1- 1093     	SUBAR	_sleepTime,W
     00DC                           1- 1094     _00312_DS_:
     00DC 0803                      1- 1095     	BTRSS	STATUS,0
                                    1- 1096     	MGOTO	_00204_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1097     	.line	233, "main.c"; 	gotoSleep();
                                    1- 1098     	MCALL	_gotoSleep
     00DE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1099     	MGOTO	_00204_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
     00E0                           1- 1100     _00203_DS_:
                                    1- 1101     	.line	238, "main.c"; 	sleepTime = 0;
                                    1- 1102     	BANKSEL	_sleepTime
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 02rr                      1- 1103     	CLRR	_sleepTime
     00E2 02rr                      1- 1104     	CLRR	(_sleepTime + 1)
                                    1- 1105     ;;unsigned compare: left < lit (0x384=900), size=2
     00E3                           1- 1106     _00204_DS_:
                                    1- 1107     	.line	241, "main.c"; 	if(count900s >= 900)
     00E3 2103                      1- 1108     	MOVIA	0x03
                                    1- 1109     	BANKSEL	_count900s
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 1110     	SUBAR	(_count900s + 1),W
     00E6 0903                      1- 1111     	BTRSS	STATUS,2
                                    1- 1112     	MGOTO	_00313_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8 2184                      1- 1113     	MOVIA	0x84
     00E9 04rr                      1- 1114     	SUBAR	_count900s,W
     00EA                           1- 1115     _00313_DS_:
     00EA 0803                      1- 1116     	BTRSS	STATUS,0
                                    1- 1117     	MGOTO	_00212_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1118     	.line	243, "main.c"; 	powerOff();
                                    1- 1119     	MCALL	_powerOff
     00EC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1120     	MGOTO	_00212_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1121     	.line	246, "main.c"; 	}
                                    1- 1122     	RETURN	
     00EE 0010                      3-   40 m1      ret
                                    1- 1123     ; exit point of _main
                                    1- 1125     ;***
                                    1- 1126     ;  pBlock Stats: dbName = C
                                    1- 1127     ;***
                                    1- 1128     ;has an exit
                                    1- 1129     ;; Starting pCode block
                                    1- 1130     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1132     _F_wait_eoc:
                                    1- 1133     ; 2 exit points
     0000                           1- 1134     _00749_DS_:
                                    1- 1135     	.line	826, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1136     	BTRSS	_ADMDbits,5
                                    1- 1137     	MGOTO	_00749_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1138     	.line	828, "main.c"; 	}
                                    1- 1139     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1140     ; exit point of _F_wait_eoc
                                    1- 1142     ;***
                                    1- 1143     ;  pBlock Stats: dbName = C
                                    1- 1144     ;***
                                    1- 1145     ;has an exit
                                    1- 1146     ;functions called:
                                    1- 1147     ;   _delayms
                                    1- 1148     ;   _F_wait_eoc
                                    1- 1149     ;   _delayms
                                    1- 1150     ;   _F_wait_eoc
                                    1- 1151     ;6 compiler assigned registers:
                                    1- 1152     ;   r0x103E
                                    1- 1153     ;   r0x103F
                                    1- 1154     ;   r0x1040
                                    1- 1155     ;   r0x1041
                                    1- 1156     ;   r0x1042
                                    1- 1157     ;   r0x1043
                                    1- 1158     ;; Starting pCode block
                                    1- 1159     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1161     ;local variable name mapping:
     0000                           1- 1164     _F_AIN2_Convert:
                                    1- 1165     ; 2 exit points
                                    1- 1166     	.line	809, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1167     	BANKSEL	r0x103E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1168     	MOVAR	r0x103E
                                    1- 1169     	.line	811, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1170     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1171     	CLRR	_R_AIN2_DATA_LB
                                    1- 1172     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1173     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1174     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1175     	.line	813, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1176     	MOVIA	0x92
     0008 00rr                      1- 1177     	MOVAR	_ADMD
                                    1- 1178     	.line	814, "main.c"; 	delayms(200);	
     0009 21C8                      1- 1179     	MOVIA	0xc8
                                    1- 1180     	MCALL	_delayms
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1181     	.line	815, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1182     	MOVIA	0x01
                                    1- 1183     	BANKSEL	r0x103F
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1184     	MOVAR	r0x103F
     000E                           1- 1185     _00742_DS_:
                                    1- 1186     	BANKSEL	r0x103F
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1187     	MOVR	r0x103F,W
                                    1- 1188     	BANKSEL	r0x103E
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1189     	SUBAR	r0x103E,W
     0012 0803                      1- 1190     	BTRSS	STATUS,0
                                    1- 1191     	MGOTO	_00744_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1192     	.line	817, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1193     	BSR	_ADMDbits,6
                                    1- 1194     	.line	818, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1195     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1196     	.line	819, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1197     	MOVIA	0x0f
     0017 10rr                      1- 1198     	ANDAR	_ADR,W
                                    1- 1199     ;;3	MOVAR	r0x1040
                                    1- 1200     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1201     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1202     	.line	820, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1203     	MOVR	_ADD,W
                                    1- 1204     	BANKSEL	r0x1040
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1205     	MOVAR	r0x1040
                                    1- 1206     ;;1	CLRR	r0x1041
                                    1- 1207     ;;106	MOVR	r0x1040,W
                                    1- 1208     ;;104	MOVAR	r0x1042
     001D 2100                      1- 1209     	MOVIA	0x00
                                    1- 1210     	BANKSEL	r0x1043
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1211     	MOVAR	r0x1043
                                    1- 1212     ;;105	MOVR	r0x1042,W
                                    1- 1213     	BANKSEL	r0x1040
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1214     	MOVR	r0x1040,W
                                    1- 1215     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1216     	ADDAR	_R_AIN2_DATA,F
                                    1- 1217     	BANKSEL	r0x1043
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1218     	MOVR	r0x1043,W
     0026 0C03                      1- 1219     	BTRSC	STATUS,0
     0027 05rr                      1- 1220     	INCR	r0x1043,W
     0028 0D03                      1- 1221     	BTRSC	STATUS,2
                                    1- 1222     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1223     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1224     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1225     _00001_DS_:
                                    1- 1226     	.line	815, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1227     	BANKSEL	r0x103F
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1228     	INCR	r0x103F,F
                                    1- 1229     	MGOTO	_00742_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1230     _00744_DS_:
                                    1- 1231     	.line	822, "main.c"; 	}
                                    1- 1232     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1233     ; exit point of _F_AIN2_Convert
                                    1- 1235     ;***
                                    1- 1236     ;  pBlock Stats: dbName = C
                                    1- 1237     ;***
                                    1- 1238     ;has an exit
                                    1- 1239     ;functions called:
                                    1- 1240     ;   _delayms
                                    1- 1241     ;   _F_wait_eoc
                                    1- 1242     ;   _delayms
                                    1- 1243     ;   _F_wait_eoc
                                    1- 1244     ;6 compiler assigned registers:
                                    1- 1245     ;   r0x1044
                                    1- 1246     ;   r0x1045
                                    1- 1247     ;   r0x1046
                                    1- 1248     ;   r0x1047
                                    1- 1249     ;   r0x1048
                                    1- 1250     ;   r0x1049
                                    1- 1251     ;; Starting pCode block
                                    1- 1252     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1254     ;local variable name mapping:
     0000                           1- 1257     _F_AIN4_Convert:
                                    1- 1258     ; 2 exit points
                                    1- 1259     	.line	794, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1260     	BANKSEL	r0x1044
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1261     	MOVAR	r0x1044
                                    1- 1262     	.line	796, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1263     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1264     	CLRR	_R_AIN4_DATA_LB
                                    1- 1265     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1266     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1267     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1268     	.line	798, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1269     	MOVIA	0x94
     0008 00rr                      1- 1270     	MOVAR	_ADMD
                                    1- 1271     	.line	799, "main.c"; 	delayms(200);	
     0009 21C8                      1- 1272     	MOVIA	0xc8
                                    1- 1273     	MCALL	_delayms
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1274     	.line	800, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1275     	MOVIA	0x01
                                    1- 1276     	BANKSEL	r0x1045
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1277     	MOVAR	r0x1045
     000E                           1- 1278     _00733_DS_:
                                    1- 1279     	BANKSEL	r0x1045
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1280     	MOVR	r0x1045,W
                                    1- 1281     	BANKSEL	r0x1044
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1282     	SUBAR	r0x1044,W
     0012 0803                      1- 1283     	BTRSS	STATUS,0
                                    1- 1284     	MGOTO	_00735_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1285     	.line	802, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1286     	BSR	_ADMDbits,6
                                    1- 1287     	.line	803, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1288     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1289     	.line	804, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1290     	MOVIA	0x0f
     0017 10rr                      1- 1291     	ANDAR	_ADR,W
                                    1- 1292     ;;3	MOVAR	r0x1046
                                    1- 1293     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1294     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1295     	.line	805, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1296     	MOVR	_ADD,W
                                    1- 1297     	BANKSEL	r0x1046
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1298     	MOVAR	r0x1046
                                    1- 1299     ;;1	CLRR	r0x1047
                                    1- 1300     ;;103	MOVR	r0x1046,W
                                    1- 1301     ;;101	MOVAR	r0x1048
     001D 2100                      1- 1302     	MOVIA	0x00
                                    1- 1303     	BANKSEL	r0x1049
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1304     	MOVAR	r0x1049
                                    1- 1305     ;;102	MOVR	r0x1048,W
                                    1- 1306     	BANKSEL	r0x1046
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1307     	MOVR	r0x1046,W
                                    1- 1308     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1309     	ADDAR	_R_AIN4_DATA,F
                                    1- 1310     	BANKSEL	r0x1049
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1311     	MOVR	r0x1049,W
     0026 0C03                      1- 1312     	BTRSC	STATUS,0
     0027 05rr                      1- 1313     	INCR	r0x1049,W
     0028 0D03                      1- 1314     	BTRSC	STATUS,2
                                    1- 1315     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1316     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1317     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1318     _00002_DS_:
                                    1- 1319     	.line	800, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1320     	BANKSEL	r0x1045
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1321     	INCR	r0x1045,F
                                    1- 1322     	MGOTO	_00733_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1323     _00735_DS_:
                                    1- 1324     	.line	807, "main.c"; 	}
                                    1- 1325     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1326     ; exit point of _F_AIN4_Convert
                                    1- 1328     ;***
                                    1- 1329     ;  pBlock Stats: dbName = C
                                    1- 1330     ;***
                                    1- 1331     ;has an exit
                                    1- 1332     ;functions called:
                                    1- 1333     ;   _F_AIN4_Convert
                                    1- 1334     ;   __mulchar
                                    1- 1335     ;   _F_AIN4_Convert
                                    1- 1336     ;   __mulchar
                                    1- 1337     ;5 compiler assigned registers:
                                    1- 1338     ;   r0x104A
                                    1- 1339     ;   r0x104B
                                    1- 1340     ;   r0x104C
                                    1- 1341     ;   r0x104D
                                    1- 1342     ;   STK00
                                    1- 1343     ;; Starting pCode block
                                    1- 1344     .segment "code"; module=main, function=_checkOutA
                                    1- 1346     ;local variable name mapping:
     0000                           1- 1348     _checkOutA:
                                    1- 1349     ; 2 exit points
                                    1- 1350     	.line	718, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1351     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1352     	CLRR	_R_AIN4_DATA_LB
                                    1- 1353     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1354     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1355     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1356     	.line	719, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1357     	MOVIA	0x08
                                    1- 1358     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1359     	.line	720, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1360     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1361     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1362     	ANDIA	0xf0
     000A 00rr                      1- 1363     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1364     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1365     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1366     	ANDIA	0x0f
     000E 11rr                      1- 1367     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1368     	XORAR	_R_AIN4_DATA,F
                                    1- 1369     	.line	721, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1370     	MOVIA	0xf0
                                    1- 1371     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1372     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1373     	.line	722, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1374     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1375     	BANKSEL	r0x104C
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1376     	MOVAR	r0x104C
                                    1- 1377     	BANKSEL	r0x104A
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1378     	MOVAR	r0x104A
                                    1- 1379     	BANKSEL	r0x104B
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1380     	CLRR	r0x104B
                                    1- 1381     ;;108	MOVR	r0x104A,W
     001A 2100                      1- 1382     	MOVIA	0x00
                                    1- 1383     	BANKSEL	r0x104D
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1384     	MOVAR	r0x104D
                                    1- 1385     	BANKSEL	r0x104C
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1386     	MOVR	r0x104C,W
                                    1- 1387     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1388     	ADDAR	_R_AIN4_DATA,F
                                    1- 1389     	BANKSEL	r0x104D
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1390     	MOVR	r0x104D,W
     0023 0C03                      1- 1391     	BTRSC	STATUS,0
     0024 05rr                      1- 1392     	INCR	r0x104D,W
     0025 0D03                      1- 1393     	BTRSC	STATUS,2
                                    1- 1394     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1395     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1396     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1397     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1398     _00003_DS_:
                                    1- 1399     	.line	723, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1400     	BCR	STATUS,0
                                    1- 1401     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1402     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1403     	RRR	_R_AIN4_DATA,F
                                    1- 1404     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1405     	BCR	STATUS,0
     002E 13rr                      1- 1406     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1407     	RRR	_R_AIN4_DATA,F
                                    1- 1408     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1409     	BCR	STATUS,0
     0031 13rr                      1- 1410     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1411     	RRR	_R_AIN4_DATA,F
                                    1- 1412     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1413     	.line	724, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0033 2106                      1- 1414     	MOVIA	0x06
                                    1- 1415     	BANKSEL	_workStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 04rr                      1- 1416     	SUBAR	_workStep,W
     0036 0C03                      1- 1417     	BTRSC	STATUS,0
                                    1- 1418     	MGOTO	_00672_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1419     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1420     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0038 2100                      1- 1421     	MOVIA	0x00
                                    1- 1422     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1423     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1424     	BTRSS	STATUS,2
                                    1- 1425     	MGOTO	_00720_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21C9                      1- 1426     	MOVIA	0xc9
     003E 04rr                      1- 1427     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1428     _00720_DS_:
     003F 0803                      1- 1429     	BTRSS	STATUS,0
                                    1- 1430     	MGOTO	_00672_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1431     	.line	726, "main.c"; 	if(++overCount > 5)
                                    1- 1432     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 05rr                      1- 1433     	INCR	_overCount,F
                                    1- 1434     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1435     ;;unsigned compare: left >= lit (0x6=6), size=1
     0043 2106                      1- 1436     	MOVIA	0x06
     0044 04rr                      1- 1437     	SUBAR	_overCount,W
     0045 0803                      1- 1438     	BTRSS	STATUS,0
                                    1- 1439     	MGOTO	_00675_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1440     	.line	728, "main.c"; 	overCount = 5;
     0047 2105                      1- 1441     	MOVIA	0x05
     0048 00rr                      1- 1442     	MOVAR	_overCount
                                    1- 1443     	MGOTO	_00675_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1444     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1445     ;;unsigned compare: left >= lit (0x191=401), size=2
     004A                           1- 1446     _00672_DS_:
                                    1- 1447     	.line	731, "main.c"; 	else if(R_AIN4_DATA > 400)
     004A 2101                      1- 1448     	MOVIA	0x01
                                    1- 1449     	BANKSEL	_R_AIN4_DATA
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1450     	SUBAR	(_R_AIN4_DATA + 1),W
     004D 0903                      1- 1451     	BTRSS	STATUS,2
                                    1- 1452     	MGOTO	_00722_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F 2191                      1- 1453     	MOVIA	0x91
     0050 04rr                      1- 1454     	SUBAR	_R_AIN4_DATA,W
     0051                           1- 1455     _00722_DS_:
     0051 0803                      1- 1456     	BTRSS	STATUS,0
                                    1- 1457     	MGOTO	_00669_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1458     	.line	733, "main.c"; 	if(++overCount > 5)
                                    1- 1459     	BANKSEL	_overCount
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 05rr                      1- 1460     	INCR	_overCount,F
                                    1- 1461     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1462     ;;unsigned compare: left >= lit (0x6=6), size=1
     0055 2106                      1- 1463     	MOVIA	0x06
     0056 04rr                      1- 1464     	SUBAR	_overCount,W
     0057 0803                      1- 1465     	BTRSS	STATUS,0
                                    1- 1466     	MGOTO	_00675_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1467     	.line	735, "main.c"; 	overCount = 5;
     0059 2105                      1- 1468     	MOVIA	0x05
     005A 00rr                      1- 1469     	MOVAR	_overCount
                                    1- 1470     	MGOTO	_00675_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1471     _00669_DS_:
                                    1- 1472     	.line	745, "main.c"; 	u8t maxAout = 40;
     005C 2128                      1- 1473     	MOVIA	0x28
                                    1- 1474     	BANKSEL	r0x104A
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1475     	MOVAR	r0x104A
                                    1- 1476     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1477     ;;unsigned compare: left >= lit (0x47=71), size=1
                                    1- 1478     	.line	746, "main.c"; 	if(batValue > 70)
     005F 2147                      1- 1479     	MOVIA	0x47
                                    1- 1480     	BANKSEL	_batValue
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 04rr                      1- 1481     	SUBAR	_batValue,W
     0062 0803                      1- 1482     	BTRSS	STATUS,0
                                    1- 1483     	MGOTO	_00647_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1484     	.line	747, "main.c"; 	maxAout = 45;
     0064 212D                      1- 1485     	MOVIA	0x2d
                                    1- 1486     	BANKSEL	r0x104A
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1487     	MOVAR	r0x104A
     0067                           1- 1488     _00647_DS_:
                                    1- 1489     	.line	748, "main.c"; 	if(workStep == 1)
                                    1- 1490     	BANKSEL	_workStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 1491     	MOVR	_workStep,W
     0069 2401                      1- 1492     	XORIA	0x01
     006A 0903                      1- 1493     	BTRSS	STATUS,2
                                    1- 1494     	MGOTO	_00649_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1495     	.line	750, "main.c"; 	maxAout = maxAout - 11;
     006C 21F5                      1- 1496     	MOVIA	0xf5
                                    1- 1497     	BANKSEL	r0x104A
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 03rr                      1- 1498     	ADDAR	r0x104A,F
     006F                           1- 1499     _00649_DS_:
                                    1- 1500     	.line	752, "main.c"; 	if(workStep == 2)
                                    1- 1501     	BANKSEL	_workStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 01rr                      1- 1502     	MOVR	_workStep,W
     0071 2402                      1- 1503     	XORIA	0x02
     0072 0903                      1- 1504     	BTRSS	STATUS,2
                                    1- 1505     	MGOTO	_00659_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1506     	.line	754, "main.c"; 	maxAout = maxAout - 8;
     0074 21F8                      1- 1507     	MOVIA	0xf8
                                    1- 1508     	BANKSEL	r0x104A
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 03rr                      1- 1509     	ADDAR	r0x104A,F
                                    1- 1510     	MGOTO	_00660_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1- 1511     _00659_DS_:
                                    1- 1512     	.line	756, "main.c"; 	else if(workStep == 4)
                                    1- 1513     	BANKSEL	_workStep
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1- 1514     	MOVR	_workStep,W
     007A 2404                      1- 1515     	XORIA	0x04
     007B 0903                      1- 1516     	BTRSS	STATUS,2
                                    1- 1517     	MGOTO	_00656_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1518     	.line	758, "main.c"; 	maxAout = maxAout + 5;
     007D 2105                      1- 1519     	MOVIA	0x05
                                    1- 1520     	BANKSEL	r0x104A
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 03rr                      1- 1521     	ADDAR	r0x104A,F
                                    1- 1522     	MGOTO	_00660_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081                           1- 1523     _00656_DS_:
                                    1- 1524     	.line	760, "main.c"; 	else if(workStep == 5)
                                    1- 1525     	BANKSEL	_workStep
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 1526     	MOVR	_workStep,W
     0083 2405                      1- 1527     	XORIA	0x05
     0084 0903                      1- 1528     	BTRSS	STATUS,2
                                    1- 1529     	MGOTO	_00653_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1530     	.line	762, "main.c"; 	maxAout = maxAout + 10;
     0086 210A                      1- 1531     	MOVIA	0x0a
                                    1- 1532     	BANKSEL	r0x104A
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 03rr                      1- 1533     	ADDAR	r0x104A,F
                                    1- 1534     	MGOTO	_00660_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A                           1- 1535     _00653_DS_:
                                    1- 1536     	.line	764, "main.c"; 	else if(workStep == 6)
                                    1- 1537     	BANKSEL	_workStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 01rr                      1- 1538     	MOVR	_workStep,W
     008C 2406                      1- 1539     	XORIA	0x06
     008D 0903                      1- 1540     	BTRSS	STATUS,2
                                    1- 1541     	MGOTO	_00660_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1542     	.line	766, "main.c"; 	maxAout = maxAout + 18;
     008F 2112                      1- 1543     	MOVIA	0x12
                                    1- 1544     	BANKSEL	r0x104A
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 03rr                      1- 1545     	ADDAR	r0x104A,F
     0092                           1- 1546     _00660_DS_:
                                    1- 1547     	.line	768, "main.c"; 	if(overCount > 0)
                                    1- 1548     	BANKSEL	_overCount
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1- 1549     	MOVR	_overCount,W
     0094 0903                      1- 1550     	BTRSS	STATUS,2
                                    1- 1551     	.line	770, "main.c"; 	overCount--;
     0095 06rr                      1- 1552     	DECR	_overCount,F
                                    1- 1553     	.line	772, "main.c"; 	if(R_AIN4_DATA > maxAout)
                                    1- 1554     	BANKSEL	r0x104A
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 01rr                      1- 1555     	MOVR	r0x104A,W
                                    1- 1556     	BANKSEL	r0x104B
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 1557     	MOVAR	r0x104B
                                    1- 1558     	BANKSEL	r0x104C
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 02rr                      1- 1559     	CLRR	r0x104C
                                    1- 1560     	BANKSEL	_R_AIN4_DATA
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 01rr                      1- 1561     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1562     	BANKSEL	r0x104C
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 04rr                      1- 1563     	SUBAR	r0x104C,W
     00A0 0903                      1- 1564     	BTRSS	STATUS,2
                                    1- 1565     	MGOTO	_00725_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1566     	BANKSEL	_R_AIN4_DATA
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 01rr                      1- 1567     	MOVR	_R_AIN4_DATA,W
                                    1- 1568     	BANKSEL	r0x104B
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 04rr                      1- 1569     	SUBAR	r0x104B,W
     00A6                           1- 1570     _00725_DS_:
     00A6 0C03                      1- 1571     	BTRSC	STATUS,0
                                    1- 1572     	MGOTO	_00666_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1573     	.line	774, "main.c"; 	tempDuty = 70 + workStep*5;
     00A8 2105                      1- 1574     	MOVIA	0x05
     00A9 00rr                      1- 1575     	MOVAR	STK00
                                    1- 1576     	BANKSEL	_workStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 01rr                      1- 1577     	MOVR	_workStep,W
                                    1- 1578     	MCALL	__mulchar
     00AC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1579     	BANKSEL	r0x104A
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 00rr                      1- 1580     	MOVAR	r0x104A
     00AF 2146                      1- 1581     	MOVIA	0x46
     00B0 03rr                      1- 1582     	ADDAR	r0x104A,W
                                    1- 1583     	BANKSEL	_tempDuty
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 1584     	MOVAR	_tempDuty
                                    1- 1585     	MGOTO	_00675_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1586     ;;unsigned compare: left < lit (0x4B=75), size=2
     00B4                           1- 1587     _00666_DS_:
                                    1- 1588     	.line	777, "main.c"; 	else if(R_AIN4_DATA < 75)
     00B4 2100                      1- 1589     	MOVIA	0x00
                                    1- 1590     	BANKSEL	_R_AIN4_DATA
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 04rr                      1- 1591     	SUBAR	(_R_AIN4_DATA + 1),W
     00B7 0903                      1- 1592     	BTRSS	STATUS,2
                                    1- 1593     	MGOTO	_00726_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
     00B9 214B                      1- 1594     	MOVIA	0x4b
     00BA 04rr                      1- 1595     	SUBAR	_R_AIN4_DATA,W
     00BB                           1- 1596     _00726_DS_:
     00BB 0C03                      1- 1597     	BTRSC	STATUS,0
                                    1- 1598     	MGOTO	_00675_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1599     	.line	780, "main.c"; 	tempDuty = maxDuty;
                                    1- 1600     	BANKSEL	_maxDuty
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 1601     	MOVR	_maxDuty,W
                                    1- 1602     	BANKSEL	_tempDuty
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 1603     	MOVAR	_tempDuty
     00C1                           1- 1604     _00675_DS_:
                                    1- 1605     	.line	788, "main.c"; 	}
                                    1- 1606     	RETURN	
     00C1 0010                      3-   40 m1      ret
                                    1- 1607     ; exit point of _checkOutA
                                    1- 1609     ;***
                                    1- 1610     ;  pBlock Stats: dbName = C
                                    1- 1611     ;***
                                    1- 1612     ;has an exit
                                    1- 1613     ;functions called:
                                    1- 1614     ;   _F_AIN2_Convert
                                    1- 1615     ;   _F_AIN2_Convert
                                    1- 1616     ;5 compiler assigned registers:
                                    1- 1617     ;   r0x104E
                                    1- 1618     ;   r0x104F
                                    1- 1619     ;   r0x1050
                                    1- 1620     ;   r0x1051
                                    1- 1621     ;   r0x1052
                                    1- 1622     ;; Starting pCode block
                                    1- 1623     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1625     _checkBatAD:
                                    1- 1626     ; 2 exit points
                                    1- 1627     	.line	650, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1628     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1629     	CLRR	_R_AIN2_DATA_LB
                                    1- 1630     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1631     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1632     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1633     	.line	651, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1634     	MOVIA	0x08
                                    1- 1635     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1636     	.line	652, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1637     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1638     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1639     	ANDIA	0xf0
     000A 00rr                      1- 1640     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1641     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1642     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1643     	ANDIA	0x0f
     000E 11rr                      1- 1644     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1645     	XORAR	_R_AIN2_DATA,F
                                    1- 1646     	.line	653, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1647     	MOVIA	0xf0
                                    1- 1648     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1649     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1650     	.line	654, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1651     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1652     	BANKSEL	r0x1050
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1653     	MOVAR	r0x1050
                                    1- 1654     	BANKSEL	r0x104E
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1655     	MOVAR	r0x104E
                                    1- 1656     	BANKSEL	r0x104F
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1657     	CLRR	r0x104F
                                    1- 1658     ;;107	MOVR	r0x104E,W
     001A 2100                      1- 1659     	MOVIA	0x00
                                    1- 1660     	BANKSEL	r0x1051
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1661     	MOVAR	r0x1051
                                    1- 1662     	BANKSEL	r0x1050
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1663     	MOVR	r0x1050,W
                                    1- 1664     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1665     	ADDAR	_R_AIN2_DATA,F
                                    1- 1666     	BANKSEL	r0x1051
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1667     	MOVR	r0x1051,W
     0023 0C03                      1- 1668     	BTRSC	STATUS,0
     0024 05rr                      1- 1669     	INCR	r0x1051,W
     0025 0D03                      1- 1670     	BTRSC	STATUS,2
                                    1- 1671     	MGOTO	_00004_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1672     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1673     	ADDAR	(_R_AIN2_DATA + 1),F
     0029                           1- 1674     _00004_DS_:
                                    1- 1675     	.line	655, "main.c"; 	R_AIN2_DATA >>=4;					// R_AIN0_DATA divided 
                                    1- 1676     	BANKSEL	_R_AIN2_DATA
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 15rr                      1- 1677     	SWAPR	_R_AIN2_DATA,W
     002B 220F                      1- 1678     	ANDIA	0x0f
     002C 00rr                      1- 1679     	MOVAR	_R_AIN2_DATA
     002D 15rr                      1- 1680     	SWAPR	(_R_AIN2_DATA + 1),W
     002E 00rr                      1- 1681     	MOVAR	(_R_AIN2_DATA + 1)
     002F 22F0                      1- 1682     	ANDIA	0xf0
     0030 11rr                      1- 1683     	IORAR	_R_AIN2_DATA,F
     0031 12rr                      1- 1684     	XORAR	(_R_AIN2_DATA + 1),F
                                    1- 1685     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1686     ;;unsigned compare: left >= lit (0x312=786), size=2
                                    1- 1687     	.line	658, "main.c"; 	if(R_AIN2_DATA > 785)
     0032 2103                      1- 1688     	MOVIA	0x03
     0033 04rr                      1- 1689     	SUBAR	(_R_AIN2_DATA + 1),W
     0034 0903                      1- 1690     	BTRSS	STATUS,2
                                    1- 1691     	MGOTO	_00632_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036 2112                      1- 1692     	MOVIA	0x12
     0037 04rr                      1- 1693     	SUBAR	_R_AIN2_DATA,W
     0038                           1- 1694     _00632_DS_:
     0038 0803                      1- 1695     	BTRSS	STATUS,0
                                    1- 1696     	MGOTO	_00592_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1697     	.line	660, "main.c"; 	if(++fullTime > 200)
                                    1- 1698     	BANKSEL	_fullTime
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 05rr                      1- 1699     	INCR	_fullTime,F
                                    1- 1700     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1701     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003C 21C9                      1- 1702     	MOVIA	0xc9
     003D 04rr                      1- 1703     	SUBAR	_fullTime,W
     003E 0803                      1- 1704     	BTRSS	STATUS,0
                                    1- 1705     	MGOTO	_00594_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1706     	.line	662, "main.c"; 	fullFlag = 1;
     0040 2101                      1- 1707     	MOVIA	0x01
                                    1- 1708     	BANKSEL	_fullFlag
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 1709     	MOVAR	_fullFlag
                                    1- 1710     	.line	663, "main.c"; 	batValue = 100;
     0043 2164                      1- 1711     	MOVIA	0x64
                                    1- 1712     	BANKSEL	_batValue
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1713     	MOVAR	_batValue
                                    1- 1714     	MGOTO	_00594_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1715     ;;unsigned compare: left < lit (0x226=550), size=2
     0047                           1- 1716     _00592_DS_:
                                    1- 1717     	.line	666, "main.c"; 	else if(R_AIN2_DATA < 550)
     0047 2102                      1- 1718     	MOVIA	0x02
                                    1- 1719     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1720     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1721     	BTRSS	STATUS,2
                                    1- 1722     	MGOTO	_00634_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 2126                      1- 1723     	MOVIA	0x26
     004D 04rr                      1- 1724     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1725     _00634_DS_:
     004E 0C03                      1- 1726     	BTRSC	STATUS,0
                                    1- 1727     	MGOTO	_00589_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1728     	.line	668, "main.c"; 	batValue = 0;
                                    1- 1729     	BANKSEL	_batValue
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 1730     	CLRR	_batValue
                                    1- 1731     	.line	669, "main.c"; 	fullTime = 0;
                                    1- 1732     	BANKSEL	_fullTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1- 1733     	CLRR	_fullTime
                                    1- 1734     	MGOTO	_00594_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 1735     _00589_DS_:
                                    1- 1736     	.line	673, "main.c"; 	fullTime = 0;
                                    1- 1737     	BANKSEL	_fullTime
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1738     	CLRR	_fullTime
                                    1- 1739     ;;unsigned compare: left < lit (0x2B4=692), size=2
                                    1- 1740     	.line	674, "main.c"; 	if(R_AIN2_DATA >= 692)
     0057 2102                      1- 1741     	MOVIA	0x02
                                    1- 1742     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 04rr                      1- 1743     	SUBAR	(_R_AIN2_DATA + 1),W
     005A 0903                      1- 1744     	BTRSS	STATUS,2
                                    1- 1745     	MGOTO	_00635_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C 21B4                      1- 1746     	MOVIA	0xb4
     005D 04rr                      1- 1747     	SUBAR	_R_AIN2_DATA,W
     005E                           1- 1748     _00635_DS_:
     005E 0803                      1- 1749     	BTRSS	STATUS,0
                                    1- 1750     	MGOTO	_00571_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1751     	.line	676, "main.c"; 	batValue = (R_AIN2_DATA - 692) + 40;
                                    1- 1752     	BANKSEL	_R_AIN2_DATA
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 1753     	MOVR	_R_AIN2_DATA,W
                                    1- 1754     	BANKSEL	r0x104E
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 00rr                      1- 1755     	MOVAR	r0x104E
                                    1- 1756     	BANKSEL	r0x104F
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 00rr                      1- 1757     	MOVAR	r0x104F
     0066 2174                      1- 1758     	MOVIA	0x74
     0067 03rr                      1- 1759     	ADDAR	r0x104F,W
                                    1- 1760     	BANKSEL	_batValue
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 1761     	MOVAR	_batValue
                                    1- 1762     	MGOTO	_00572_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1763     ;;unsigned compare: left < lit (0x23C=572), size=2
     006B                           1- 1764     _00571_DS_:
                                    1- 1765     	.line	678, "main.c"; 	else if(R_AIN2_DATA >= 572)
     006B 2102                      1- 1766     	MOVIA	0x02
                                    1- 1767     	BANKSEL	_R_AIN2_DATA
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 04rr                      1- 1768     	SUBAR	(_R_AIN2_DATA + 1),W
     006E 0903                      1- 1769     	BTRSS	STATUS,2
                                    1- 1770     	MGOTO	_00636_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 213C                      1- 1771     	MOVIA	0x3c
     0071 04rr                      1- 1772     	SUBAR	_R_AIN2_DATA,W
     0072                           1- 1773     _00636_DS_:
     0072 0803                      1- 1774     	BTRSS	STATUS,0
                                    1- 1775     	MGOTO	_00568_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1776     	.line	680, "main.c"; 	batValue = ((R_AIN2_DATA - 572)/4) + 10;
     0074 21C4                      1- 1777     	MOVIA	0xc4
                                    1- 1778     	BANKSEL	_R_AIN2_DATA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 03rr                      1- 1779     	ADDAR	_R_AIN2_DATA,W
                                    1- 1780     	BANKSEL	r0x104E
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 1781     	MOVAR	r0x104E
     0079 21FD                      1- 1782     	MOVIA	0xfd
                                    1- 1783     	BANKSEL	r0x104F
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1- 1784     	MOVAR	r0x104F
                                    1- 1785     	BANKSEL	_R_AIN2_DATA
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 1786     	MOVR	(_R_AIN2_DATA + 1),W
     007E 0C03                      1- 1787     	BTRSC	STATUS,0
     007F 05rr                      1- 1788     	INCR	(_R_AIN2_DATA + 1),W
     0080 0D03                      1- 1789     	BTRSC	STATUS,2
                                    1- 1790     	MGOTO	_00005_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1791     	BANKSEL	r0x104F
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 03rr                      1- 1792     	ADDAR	r0x104F,F
                                    1- 1793     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0084                           1- 1794     _00005_DS_:
     0084 1C03                      1- 1795     	BCR	STATUS,0
                                    1- 1796     	BANKSEL	r0x104F
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 13rr                      1- 1797     	RRR	r0x104F,W
                                    1- 1798     	BANKSEL	r0x1051
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1799     	MOVAR	r0x1051
                                    1- 1800     	BANKSEL	r0x104E
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 13rr                      1- 1801     	RRR	r0x104E,W
                                    1- 1802     	BANKSEL	r0x1050
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1803     	MOVAR	r0x1050
                                    1- 1804     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     008D 1C03                      1- 1805     	BCR	STATUS,0
                                    1- 1806     	BANKSEL	r0x1051
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 13rr                      1- 1807     	RRR	r0x1051,F
                                    1- 1808     	BANKSEL	r0x1050
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 13rr                      1- 1809     	RRR	r0x1050,F
     0092 01rr                      1- 1810     	MOVR	r0x1050,W
                                    1- 1811     	BANKSEL	r0x104E
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 1812     	MOVAR	r0x104E
     0095 210A                      1- 1813     	MOVIA	0x0a
     0096 03rr                      1- 1814     	ADDAR	r0x104E,W
                                    1- 1815     	BANKSEL	_batValue
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1816     	MOVAR	_batValue
                                    1- 1817     	MGOTO	_00572_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1818     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1819     ;;unsigned compare: left >= lit (0x227=551), size=2
     009A                           1- 1820     _00568_DS_:
                                    1- 1821     	.line	682, "main.c"; 	else if(R_AIN2_DATA > 550)
     009A 2102                      1- 1822     	MOVIA	0x02
                                    1- 1823     	BANKSEL	_R_AIN2_DATA
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1824     	SUBAR	(_R_AIN2_DATA + 1),W
     009D 0903                      1- 1825     	BTRSS	STATUS,2
                                    1- 1826     	MGOTO	_00637_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F 2127                      1- 1827     	MOVIA	0x27
     00A0 04rr                      1- 1828     	SUBAR	_R_AIN2_DATA,W
     00A1                           1- 1829     _00637_DS_:
     00A1 0803                      1- 1830     	BTRSS	STATUS,0
                                    1- 1831     	MGOTO	_00565_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1832     	.line	684, "main.c"; 	batValue = (R_AIN2_DATA - 550)/8;
     00A3 21DA                      1- 1833     	MOVIA	0xda
                                    1- 1834     	BANKSEL	_R_AIN2_DATA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 03rr                      1- 1835     	ADDAR	_R_AIN2_DATA,W
                                    1- 1836     	BANKSEL	r0x104E
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 1837     	MOVAR	r0x104E
     00A8 21FD                      1- 1838     	MOVIA	0xfd
                                    1- 1839     	BANKSEL	r0x1050
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 1840     	MOVAR	r0x1050
                                    1- 1841     	BANKSEL	_R_AIN2_DATA
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 01rr                      1- 1842     	MOVR	(_R_AIN2_DATA + 1),W
     00AD 0C03                      1- 1843     	BTRSC	STATUS,0
     00AE 05rr                      1- 1844     	INCR	(_R_AIN2_DATA + 1),W
     00AF 0D03                      1- 1845     	BTRSC	STATUS,2
                                    1- 1846     	MGOTO	_00006_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1847     	BANKSEL	r0x1050
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 03rr                      1- 1848     	ADDAR	r0x1050,F
                                    1- 1849     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00B3                           1- 1850     _00006_DS_:
     00B3 1C03                      1- 1851     	BCR	STATUS,0
                                    1- 1852     	BANKSEL	r0x1050
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 13rr                      1- 1853     	RRR	r0x1050,W
                                    1- 1854     	BANKSEL	r0x1052
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1855     	MOVAR	r0x1052
                                    1- 1856     	BANKSEL	r0x104E
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 13rr                      1- 1857     	RRR	r0x104E,W
                                    1- 1858     	BANKSEL	r0x1051
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 00rr                      1- 1859     	MOVAR	r0x1051
                                    1- 1860     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00BC 1C03                      1- 1861     	BCR	STATUS,0
                                    1- 1862     	BANKSEL	r0x1052
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 13rr                      1- 1863     	RRR	r0x1052,F
                                    1- 1864     	BANKSEL	r0x1051
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 13rr                      1- 1865     	RRR	r0x1051,F
                                    1- 1866     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C1 1C03                      1- 1867     	BCR	STATUS,0
                                    1- 1868     	BANKSEL	r0x1052
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 13rr                      1- 1869     	RRR	r0x1052,F
                                    1- 1870     	BANKSEL	r0x1051
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 13rr                      1- 1871     	RRR	r0x1051,F
     00C6 01rr                      1- 1872     	MOVR	r0x1051,W
                                    1- 1873     	BANKSEL	_batValue
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 1874     	MOVAR	_batValue
                                    1- 1875     	MGOTO	_00572_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
     00CA                           1- 1876     _00565_DS_:
                                    1- 1877     	.line	688, "main.c"; 	batValue = 0;
                                    1- 1878     	BANKSEL	_batValue
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 02rr                      1- 1879     	CLRR	_batValue
     00CC                           1- 1880     _00572_DS_:
                                    1- 1881     	.line	690, "main.c"; 	if(0x08 & PORTA)
                                    1- 1882     	BANKSEL	_PORTA
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 09rr                      1- 1883     	BTRSS	_PORTA,3
                                    1- 1884     	MGOTO	_00585_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1885     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 1886     	.line	692, "main.c"; 	if(batValue < 10)
     00CF 210A                      1- 1887     	MOVIA	0x0a
                                    1- 1888     	BANKSEL	_batValue
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 04rr                      1- 1889     	SUBAR	_batValue,W
     00D2 0C03                      1- 1890     	BTRSC	STATUS,0
                                    1- 1891     	MGOTO	_00582_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1892     	.line	693, "main.c"; 	batValue = 1;
     00D4 2101                      1- 1893     	MOVIA	0x01
     00D5 00rr                      1- 1894     	MOVAR	_batValue
                                    1- 1895     	MGOTO	_00585_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1896     ;;unsigned compare: left < lit (0x14=20), size=1
     00D7                           1- 1897     _00582_DS_:
                                    1- 1898     	.line	694, "main.c"; 	else if(batValue < 20)
     00D7 2114                      1- 1899     	MOVIA	0x14
                                    1- 1900     	BANKSEL	_batValue
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 04rr                      1- 1901     	SUBAR	_batValue,W
     00DA 0C03                      1- 1902     	BTRSC	STATUS,0
                                    1- 1903     	MGOTO	_00579_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1904     	.line	696, "main.c"; 	batValue = batValue - 10;
     00DC 21F6                      1- 1905     	MOVIA	0xf6
     00DD 03rr                      1- 1906     	ADDAR	_batValue,F
                                    1- 1907     	MGOTO	_00585_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1908     ;;unsigned compare: left < lit (0x32=50), size=1
     00DF                           1- 1909     _00579_DS_:
                                    1- 1910     	.line	698, "main.c"; 	else if(batValue < 50)
     00DF 2132                      1- 1911     	MOVIA	0x32
                                    1- 1912     	BANKSEL	_batValue
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 04rr                      1- 1913     	SUBAR	_batValue,W
     00E2 0C03                      1- 1914     	BTRSC	STATUS,0
                                    1- 1915     	MGOTO	_00576_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1916     	.line	700, "main.c"; 	batValue = batValue - 20;
     00E4 21EC                      1- 1917     	MOVIA	0xec
     00E5 03rr                      1- 1918     	ADDAR	_batValue,F
                                    1- 1919     	MGOTO	_00585_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1920     ;;unsigned compare: left < lit (0x85=133), size=1
     00E7                           1- 1921     _00576_DS_:
                                    1- 1922     	.line	702, "main.c"; 	else if(batValue < 133)
     00E7 2185                      1- 1923     	MOVIA	0x85
                                    1- 1924     	BANKSEL	_batValue
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 04rr                      1- 1925     	SUBAR	_batValue,W
     00EA 0C03                      1- 1926     	BTRSC	STATUS,0
                                    1- 1927     	MGOTO	_00585_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1928     	.line	704, "main.c"; 	batValue = batValue - 33;
     00EC 21DF                      1- 1929     	MOVIA	0xdf
     00ED 03rr                      1- 1930     	ADDAR	_batValue,F
                                    1- 1931     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1932     ;;unsigned compare: left >= lit (0x65=101), size=1
     00EE                           1- 1933     _00585_DS_:
                                    1- 1934     	.line	707, "main.c"; 	if(batValue > 100)
     00EE 2165                      1- 1935     	MOVIA	0x65
                                    1- 1936     	BANKSEL	_batValue
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 04rr                      1- 1937     	SUBAR	_batValue,W
     00F1 0803                      1- 1938     	BTRSS	STATUS,0
                                    1- 1939     	MGOTO	_00594_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1940     	.line	708, "main.c"; 	batValue = 100;
     00F3 2164                      1- 1941     	MOVIA	0x64
     00F4 00rr                      1- 1942     	MOVAR	_batValue
     00F5                           1- 1943     _00594_DS_:
                                    1- 1944     	.line	712, "main.c"; 	}
                                    1- 1945     	RETURN	
     00F5 0010                      3-   40 m1      ret
                                    1- 1946     ; exit point of _checkBatAD
                                    1- 1948     ;***
                                    1- 1949     ;  pBlock Stats: dbName = C
                                    1- 1950     ;***
                                    1- 1951     ;has an exit
                                    1- 1952     ;functions called:
                                    1- 1953     ;   _delayms
                                    1- 1954     ;   _delayms
                                    1- 1955     ;; Starting pCode block
                                    1- 1956     .segment "code"; module=main, function=_initAD
     0000                           1- 1958     _initAD:
                                    1- 1959     ; 2 exit points
                                    1- 1960     	.line	626, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1961     	MOVIA	0x84
     0001 00rr                      1- 1962     	MOVAR	_ADMD
                                    1- 1963     	.line	631, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1964     	CLRR	_ADVREFH
                                    1- 1965     	.line	636, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1966     	MOVIA	0x10
     0004 00rr                      1- 1967     	MOVAR	_ADR
                                    1- 1968     	.line	638, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1969     	MOVIA	0x03
     0006 00rr                      1- 1970     	MOVAR	_ADCR
                                    1- 1971     	.line	640, "main.c"; 	PACON = C_PA2_AIN2 | C_PA1_AIN1 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2116                      1- 1972     	MOVIA	0x16
     0008 00rr                      1- 1973     	MOVAR	_PACON
                                    1- 1974     	.line	641, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 1975     	BSR	_ADMDbits,4
                                    1- 1976     	.line	642, "main.c"; 	delayms(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 1977     	MOVIA	0x64
                                    1- 1978     	MCALL	_delayms
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1979     	.line	645, "main.c"; 	}
                                    1- 1980     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1981     ; exit point of _initAD
                                    1- 1983     ;***
                                    1- 1984     ;  pBlock Stats: dbName = C
                                    1- 1985     ;***
                                    1- 1986     ;has an exit
                                    1- 1987     ;1 compiler assigned register :
                                    1- 1988     ;   r0x1053
                                    1- 1989     ;; Starting pCode block
                                    1- 1990     .segment "code"; module=main, function=_keyRead
                                    1- 1992     ;local variable name mapping:
     0000                           1- 1994     _keyRead:
                                    1- 1995     ; 2 exit points
                                    1- 1996     	.line	588, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1997     	BANKSEL	r0x1053
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1998     	MOVAR	r0x1053
                                    1- 1999     	.line	590, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2000     	MOVR	r0x1053,W
     0003 0D03                      1- 2001     	BTRSC	STATUS,2
                                    1- 2002     	MGOTO	_00551_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2003     	.line	592, "main.c"; 	keyCount++;
                                    1- 2004     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2005     	INCR	_keyCount,F
                                    1- 2006     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2007     	.line	594, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2008     	MOVIA	0xc8
     0008 04rr                      1- 2009     	SUBAR	_keyCount,W
     0009 0803                      1- 2010     	BTRSS	STATUS,0
                                    1- 2011     	MGOTO	_00552_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2012     	.line	596, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2013     	MOVIA	0xc8
     000C 00rr                      1- 2014     	MOVAR	_keyCount
                                    1- 2015     	.line	597, "main.c"; 	if(!longPressFlag)
                                    1- 2016     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2017     	BTRSC	_Status,1
                                    1- 2018     	MGOTO	_00552_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2019     	.line	599, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2020     	BSR	_Status,1
                                    1- 2021     	.line	600, "main.c"; 	return 2;
     0011 2102                      1- 2022     	MOVIA	0x02
                                    1- 2023     	MGOTO	_00553_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2024     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 2025     _00551_DS_:
                                    1- 2026     	.line	606, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 2027     	MOVIA	0xc8
                                    1- 2028     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2029     	SUBAR	_keyCount,W
     0016 0803                      1- 2030     	BTRSS	STATUS,0
                                    1- 2031     	MGOTO	_00548_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2032     	.line	608, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2033     	CLRR	_keyCount
                                    1- 2034     	.line	609, "main.c"; 	longPressFlag = 0;
                                    1- 2035     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2036     	BCR	_Status,1
                                    1- 2037     	.line	610, "main.c"; 	return	0;
     001B 2100                      1- 2038     	MOVIA	0x00
                                    1- 2039     	MGOTO	_00553_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2040     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2041     _00548_DS_:
                                    1- 2042     	.line	612, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2043     	MOVIA	0x04
                                    1- 2044     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2045     	SUBAR	_keyCount,W
     0020 0803                      1- 2046     	BTRSS	STATUS,0
                                    1- 2047     	MGOTO	_00549_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2048     	.line	614, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2049     	CLRR	_keyCount
                                    1- 2050     	.line	615, "main.c"; 	return	1;
     0023 2101                      1- 2051     	MOVIA	0x01
                                    1- 2052     	MGOTO	_00553_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2053     _00549_DS_:
                                    1- 2054     	.line	617, "main.c"; 	keyCount = 0;
                                    1- 2055     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2056     	CLRR	_keyCount
     0027                           1- 2057     _00552_DS_:
                                    1- 2058     	.line	619, "main.c"; 	return 0;
     0027 2100                      1- 2059     	MOVIA	0x00
     0028                           1- 2060     _00553_DS_:
                                    1- 2061     	.line	620, "main.c"; 	}
                                    1- 2062     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2063     ; exit point of _keyRead
                                    1- 2065     ;***
                                    1- 2066     ;  pBlock Stats: dbName = C
                                    1- 2067     ;***
                                    1- 2068     ;has an exit
                                    1- 2069     ;functions called:
                                    1- 2070     ;   _checkBatAD
                                    1- 2071     ;   _setInput
                                    1- 2072     ;   _pwmStop
                                    1- 2073     ;   _pwm1Stop
                                    1- 2074     ;   _checkBatAD
                                    1- 2075     ;   _setInput
                                    1- 2076     ;   _pwmStop
                                    1- 2077     ;   _pwm1Stop
                                    1- 2078     ;; Starting pCode block
                                    1- 2079     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2081     _gotoSleep:
                                    1- 2082     ; 2 exit points
                                    1- 2083     	.line	556, "main.c"; 	checkBatAD();
                                    1- 2084     	MCALL	_checkBatAD
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2085     	.line	557, "main.c"; 	setInput();
                                    1- 2086     	MCALL	_setInput
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2087     	.line	558, "main.c"; 	count5s = 0;
                                    1- 2088     	BANKSEL	_count5s
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2089     	CLRR	_count5s
     0004 02rr                      1- 2090     	CLRR	(_count5s + 1)
                                    1- 2091     	.line	559, "main.c"; 	showFlag = 0;
                                    1- 2092     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Err                      1- 2093     	BCR	_Status,4
                                    1- 2094     	.line	560, "main.c"; 	IOSTA = C_PA5_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0007 212E                      1- 2095     	MOVIA	0x2e
     0008 000r                      1- 2096     	IOST	_IOSTA
                                    1- 2097     	.line	562, "main.c"; 	IOSTB = 0x00;
     0009 0200                      1- 2098     	CLRA	
     000A 000r                      1- 2099     	IOST	_IOSTB
                                    1- 2100     	.line	563, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2101     	CLRR	_PORTB
                                    1- 2102     	.line	564, "main.c"; 	PORTA = 0x00;
                                    1- 2103     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2104     	CLRR	_PORTA
                                    1- 2105     	.line	565, "main.c"; 	sleepTime = 0;
                                    1- 2106     	BANKSEL	_sleepTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2107     	CLRR	_sleepTime
     0010 02rr                      1- 2108     	CLRR	(_sleepTime + 1)
                                    1- 2109     	.line	567, "main.c"; 	pwmStop();
                                    1- 2110     	MCALL	_pwmStop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2111     	.line	568, "main.c"; 	pwm1Stop();
                                    1- 2112     	MCALL	_pwm1Stop
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2113     	.line	569, "main.c"; 	workStep = 0;
                                    1- 2114     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2115     	CLRR	_workStep
                                    1- 2116     	.line	570, "main.c"; 	AWUCON = 0x28;
     0015 2128                      1- 2117     	MOVIA	0x28
     0016 00rr                      1- 2118     	MOVAR	_AWUCON
                                    1- 2119     	.line	571, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0017 210B                      1- 2120     	MOVIA	0x0b
     0018 00rr                      1- 2121     	MOVAR	_INTE
                                    1- 2122     	.line	572, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0019 2118                      1- 2123     	MOVIA	0x18
     001A 00rr                      1- 2124     	MOVAR	_PCON
                                    1- 2125     	.line	573, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001B 02rr                      1- 2126     	CLRR	_INTF
                                    1- 2127     	.line	574, "main.c"; 	CLRWDT();
     001C 0002                      1- 2128     	clrwdt
                                    1- 2129     	.line	575, "main.c"; 	ENI();
     001D 0004                      1- 2130     	ENI
                                    1- 2131     	.line	576, "main.c"; 	SLEEP();
     001E 0001                      1- 2132     	sleep
                                    1- 2133     	.line	577, "main.c"; 	AWUCON = 0x00;
     001F 02rr                      1- 2134     	CLRR	_AWUCON
                                    1- 2135     	.line	579, "main.c"; 	IOSTA =  C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0020 213E                      1- 2136     	MOVIA	0x3e
     0021 000r                      1- 2137     	IOST	_IOSTA
                                    1- 2138     	.line	580, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2139     	MOVIA	0x01
     0023 00rr                      1- 2140     	MOVAR	_INTE
                                    1- 2141     	.line	581, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2142     	CLRR	_INTF
                                    1- 2143     	.line	583, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0025 21A8                      1- 2144     	MOVIA	0xa8
     0026 00rr                      1- 2145     	MOVAR	_PCON
                                    1- 2146     	.line	585, "main.c"; 	}
                                    1- 2147     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2148     ; exit point of _gotoSleep
                                    1- 2150     ;***
                                    1- 2151     ;  pBlock Stats: dbName = C
                                    1- 2152     ;***
                                    1- 2153     ;has an exit
                                    1- 2154     ;; Starting pCode block
                                    1- 2155     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2157     _pwmStop:
                                    1- 2158     ; 2 exit points
                                    1- 2159     	.line	550, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2160     	CLRA	
     0001 00rr                      1- 2161     	SFUN	_T2CR1
                                    1- 2162     	.line	551, "main.c"; 	}
                                    1- 2163     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2164     ; exit point of _pwmStop
                                    1- 2166     ;***
                                    1- 2167     ;  pBlock Stats: dbName = C
                                    1- 2168     ;***
                                    1- 2169     ;has an exit
                                    1- 2170     ;1 compiler assigned register :
                                    1- 2171     ;   r0x1054
                                    1- 2172     ;; Starting pCode block
                                    1- 2173     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2175     _pwmInit:
                                    1- 2176     ; 2 exit points
                                    1- 2177     	.line	538, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2178     	SFUNR	_T2CR1
                                    1- 2179     	BANKSEL	r0x1054
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2180     	MOVAR	r0x1054
     0003 0Frr                      1- 2181     	BTRSC	r0x1054,7
                                    1- 2182     	.line	539, "main.c"; 	return;
                                    1- 2183     	MGOTO	_00528_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2184     	.line	540, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2185     	CLRR	_TMRH
                                    1- 2186     	.line	541, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2187     	MOVIA	0x64
     0007 00rr                      1- 2188     	SFUN	_TMR2
                                    1- 2189     	.line	544, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2190     	MOVIA	0x01
     0009 00rr                      1- 2191     	SFUN	_T2CR2
                                    1- 2192     	.line	545, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2193     	MOVIA	0x83
     000B 00rr                      1- 2194     	SFUN	_T2CR1
     000C                           1- 2195     _00528_DS_:
                                    1- 2196     	.line	546, "main.c"; 	}
                                    1- 2197     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2198     ; exit point of _pwmInit
                                    1- 2200     ;***
                                    1- 2201     ;  pBlock Stats: dbName = C
                                    1- 2202     ;***
                                    1- 2203     ;has an exit
                                    1- 2204     ;; Starting pCode block
                                    1- 2205     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2207     _pwm1Stop:
                                    1- 2208     ; 2 exit points
                                    1- 2209     	.line	531, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2210     	CLRA	
     0001 00rr                      1- 2211     	SFUN	_T1CR1
                                    1- 2212     	.line	532, "main.c"; 	}
                                    1- 2213     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2214     ; exit point of _pwm1Stop
                                    1- 2216     ;***
                                    1- 2217     ;  pBlock Stats: dbName = C
                                    1- 2218     ;***
                                    1- 2219     ;has an exit
                                    1- 2220     ;1 compiler assigned register :
                                    1- 2221     ;   r0x1055
                                    1- 2222     ;; Starting pCode block
                                    1- 2223     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2225     _pwm1Init:
                                    1- 2226     ; 2 exit points
                                    1- 2227     	.line	518, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2228     	SFUNR	_T1CR1
                                    1- 2229     	BANKSEL	r0x1055
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2230     	MOVAR	r0x1055
     0003 0Frr                      1- 2231     	BTRSC	r0x1055,7
                                    1- 2232     	.line	519, "main.c"; 	return;
                                    1- 2233     	MGOTO	_00517_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2234     	.line	520, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2235     	CLRR	_TMRH
                                    1- 2236     	.line	521, "main.c"; 	TMR1 = 48;							//频率为110K
     0006 2130                      1- 2237     	MOVIA	0x30
     0007 00rr                      1- 2238     	SFUN	_TMR1
                                    1- 2239     	.line	524, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2240     	CLRA	
     0009 00rr                      1- 2241     	SFUN	_T1CR2
                                    1- 2242     	.line	525, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2243     	MOVIA	0x08
     000B 00rr                      1- 2244     	SFUN	_T1CR2
                                    1- 2245     	.line	526, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2246     	MOVIA	0x83
     000D 00rr                      1- 2247     	SFUN	_T1CR1
     000E                           1- 2248     _00517_DS_:
                                    1- 2249     	.line	527, "main.c"; 	}
                                    1- 2250     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2251     ; exit point of _pwm1Init
                                    1- 2253     ;***
                                    1- 2254     ;  pBlock Stats: dbName = C
                                    1- 2255     ;***
                                    1- 2256     ;has an exit
                                    1- 2257     ;functions called:
                                    1- 2258     ;   _pwmStop
                                    1- 2259     ;   _pwmStop
                                    1- 2260     ;; Starting pCode block
                                    1- 2261     .segment "code"; module=main, function=_powerOff
     0000                           1- 2263     _powerOff:
                                    1- 2264     ; 2 exit points
                                    1- 2265     	.line	511, "main.c"; 	workStep = 0;
                                    1- 2266     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2267     	CLRR	_workStep
                                    1- 2268     	.line	512, "main.c"; 	pwmStop();
                                    1- 2269     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2270     	.line	513, "main.c"; 	}
                                    1- 2271     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2272     ; exit point of _powerOff
                                    1- 2274     ;***
                                    1- 2275     ;  pBlock Stats: dbName = C
                                    1- 2276     ;***
                                    1- 2277     ;has an exit
                                    1- 2278     ;; Starting pCode block
                                    1- 2279     .segment "code"; module=main, function=_initSys
     0000                           1- 2281     _initSys:
                                    1- 2282     ; 2 exit points
                                    1- 2283     	.line	483, "main.c"; 	DISI();
     0000 0013                      1- 2284     	DISI
                                    1- 2285     	.line	484, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2286     	MOVIA	0x3e
     0002 000r                      1- 2287     	IOST	_IOSTA
                                    1- 2288     	.line	485, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2289     	CLRA	
     0004 000r                      1- 2290     	IOST	_IOSTB
                                    1- 2291     	.line	486, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2292     	CLRR	_PORTB
                                    1- 2293     	.line	487, "main.c"; 	PORTA = 0x00;
                                    1- 2294     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2295     	CLRR	_PORTA
                                    1- 2296     	.line	488, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2297     	MOVIA	0xff
     0009 000r                      1- 2298     	IOST	_APHCON
                                    1- 2299     	.line	489, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2300     	MOVAR	_BPHCON
                                    1- 2301     	.line	490, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2302     	MOVAR	_ABPLCON
                                    1- 2303     	.line	492, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2304     	MOVIA	0x01
     000D 00rr                      1- 2305     	MOVAR	_INTE
                                    1- 2306     	.line	494, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2307     	CLRA	
     000F 000r                      1- 2308     	IOST	_PCON1
                                    1- 2309     	.line	496, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2310     	MOVIA	0x37
     0011 00rr                      1- 2311     	MOVAR	_TMR0
                                    1- 2312     	.line	497, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2313     	MOVIA	0x01
     0013 0003                      1- 2314     	T0MD	
                                    1- 2315     	.line	499, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2316     	IOST	_PCON1
                                    1- 2317     	.line	502, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2318     	MOVIA	0x88
     0016 00rr                      1- 2319     	MOVAR	_PCON
                                    1- 2320     	.line	505, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2321     	MOVIA	0x01
     0018 000r                      1- 2322     	IOST	_PCON1
                                    1- 2323     	.line	506, "main.c"; 	ENI();
     0019 0004                      1- 2324     	ENI
                                    1- 2325     	.line	507, "main.c"; 	}
                                    1- 2326     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2327     ; exit point of _initSys
                                    1- 2329     ;***
                                    1- 2330     ;  pBlock Stats: dbName = C
                                    1- 2331     ;***
                                    1- 2332     ;has an exit
                                    1- 2333     ;functions called:
                                    1- 2334     ;   _keyRead
                                    1- 2335     ;   _setMaxDuty
                                    1- 2336     ;   _powerOff
                                    1- 2337     ;   _setMaxDuty
                                    1- 2338     ;   _keyRead
                                    1- 2339     ;   _setMaxDuty
                                    1- 2340     ;   _powerOff
                                    1- 2341     ;   _setMaxDuty
                                    1- 2342     ;1 compiler assigned register :
                                    1- 2343     ;   r0x1058
                                    1- 2344     ;; Starting pCode block
                                    1- 2345     .segment "code"; module=main, function=_keyCtr
                                    1- 2347     ;local variable name mapping:
     0000                           1- 2349     _keyCtr:
                                    1- 2350     ; 2 exit points
                                    1- 2351     	.line	413, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2352     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2353     	COMR	_PORTA,W
                                    1- 2354     	BANKSEL	r0x1058
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2355     	MOVAR	r0x1058
     0004 2120                      1- 2356     	MOVIA	0x20
     0005 10rr                      1- 2357     	ANDAR	r0x1058,F
     0006 01rr                      1- 2358     	MOVR	r0x1058,W
                                    1- 2359     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2360     	BANKSEL	r0x1058
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2361     	MOVAR	r0x1058
                                    1- 2362     	.line	414, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2363     	XORIA	0x01
     000B 0903                      1- 2364     	BTRSS	STATUS,2
                                    1- 2365     	MGOTO	_00500_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2366     	.line	417, "main.c"; 	ledLightTime = 0;
                                    1- 2367     	BANKSEL	_ledLightTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2368     	CLRR	_ledLightTime
                                    1- 2369     	.line	418, "main.c"; 	count5S = 0;
                                    1- 2370     	BANKSEL	_count5S
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2371     	CLRR	_count5S
     0011 02rr                      1- 2372     	CLRR	(_count5S + 1)
                                    1- 2373     	.line	419, "main.c"; 	if(workStep == 0)
                                    1- 2374     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2375     	MOVR	_workStep,W
     0014 0903                      1- 2376     	BTRSS	STATUS,2
                                    1- 2377     	MGOTO	_00471_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2378     	.line	421, "main.c"; 	if(showFlag)
                                    1- 2379     	BANKSEL	_Status
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 0Arr                      1- 2380     	BTRSS	_Status,4
                                    1- 2381     	MGOTO	_00468_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2382     	.line	423, "main.c"; 	ledLightTime = 0;
                                    1- 2383     	BANKSEL	_ledLightTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 2384     	CLRR	_ledLightTime
                                    1- 2385     	.line	424, "main.c"; 	showFlag = 0;
                                    1- 2386     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 1Err                      1- 2387     	BCR	_Status,4
                                    1- 2388     	MGOTO	_00469_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 2389     _00468_DS_:
                                    1- 2390     	.line	428, "main.c"; 	count1s = 0;
                                    1- 2391     	BANKSEL	_count1s
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 02rr                      1- 2392     	CLRR	_count1s
                                    1- 2393     	.line	429, "main.c"; 	ledLightTime = 3;
     0020 2103                      1- 2394     	MOVIA	0x03
                                    1- 2395     	BANKSEL	_ledLightTime
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2396     	MOVAR	_ledLightTime
                                    1- 2397     	.line	430, "main.c"; 	showFlag = 1;
                                    1- 2398     	BANKSEL	_Status
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 1Arr                      1- 2399     	BSR	_Status,4
     0025                           1- 2400     _00469_DS_:
                                    1- 2401     	.line	432, "main.c"; 	return;
                                    1- 2402     	MGOTO	_00502_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 2403     _00471_DS_:
                                    1- 2404     	.line	434, "main.c"; 	if(++workStep > 6)
                                    1- 2405     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1- 2406     	INCR	_workStep,F
                                    1- 2407     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2408     ;;unsigned compare: left >= lit (0x7=7), size=1
     0028 2107                      1- 2409     	MOVIA	0x07
     0029 04rr                      1- 2410     	SUBAR	_workStep,W
     002A 0803                      1- 2411     	BTRSS	STATUS,0
                                    1- 2412     	MGOTO	_00473_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2413     	.line	435, "main.c"; 	workStep = 1;
     002C 2101                      1- 2414     	MOVIA	0x01
     002D 00rr                      1- 2415     	MOVAR	_workStep
     002E                           1- 2416     _00473_DS_:
                                    1- 2417     	.line	436, "main.c"; 	if(workStep == 1)
                                    1- 2418     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2419     	MOVR	_workStep,W
     0030 2401                      1- 2420     	XORIA	0x01
     0031 0903                      1- 2421     	BTRSS	STATUS,2
                                    1- 2422     	MGOTO	_00489_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2423     	.line	437, "main.c"; 	maxDuty = 40;
     0033 2128                      1- 2424     	MOVIA	0x28
                                    1- 2425     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2426     	MOVAR	_maxDuty
                                    1- 2427     	MGOTO	_00490_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 2428     _00489_DS_:
                                    1- 2429     	.line	438, "main.c"; 	else if(workStep == 2)
                                    1- 2430     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 2431     	MOVR	_workStep,W
     0039 2402                      1- 2432     	XORIA	0x02
     003A 0903                      1- 2433     	BTRSS	STATUS,2
                                    1- 2434     	MGOTO	_00486_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2435     	.line	439, "main.c"; 	maxDuty = 42;
     003C 212A                      1- 2436     	MOVIA	0x2a
                                    1- 2437     	BANKSEL	_maxDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 2438     	MOVAR	_maxDuty
                                    1- 2439     	MGOTO	_00490_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 2440     _00486_DS_:
                                    1- 2441     	.line	440, "main.c"; 	else if(workStep == 3)
                                    1- 2442     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 2443     	MOVR	_workStep,W
     0042 2403                      1- 2444     	XORIA	0x03
     0043 0903                      1- 2445     	BTRSS	STATUS,2
                                    1- 2446     	MGOTO	_00483_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2447     	.line	441, "main.c"; 	maxDuty = 44;
     0045 212C                      1- 2448     	MOVIA	0x2c
                                    1- 2449     	BANKSEL	_maxDuty
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 2450     	MOVAR	_maxDuty
                                    1- 2451     	MGOTO	_00490_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 2452     _00483_DS_:
                                    1- 2453     	.line	442, "main.c"; 	else if(workStep == 4)
                                    1- 2454     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 2455     	MOVR	_workStep,W
     004B 2404                      1- 2456     	XORIA	0x04
     004C 0903                      1- 2457     	BTRSS	STATUS,2
                                    1- 2458     	MGOTO	_00480_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2459     	.line	443, "main.c"; 	maxDuty = 46;
     004E 212E                      1- 2460     	MOVIA	0x2e
                                    1- 2461     	BANKSEL	_maxDuty
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 2462     	MOVAR	_maxDuty
                                    1- 2463     	MGOTO	_00490_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 2464     _00480_DS_:
                                    1- 2465     	.line	444, "main.c"; 	else if(workStep == 5)
                                    1- 2466     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2467     	MOVR	_workStep,W
     0054 2405                      1- 2468     	XORIA	0x05
     0055 0903                      1- 2469     	BTRSS	STATUS,2
                                    1- 2470     	MGOTO	_00477_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2471     	.line	445, "main.c"; 	maxDuty = 48;
     0057 2130                      1- 2472     	MOVIA	0x30
                                    1- 2473     	BANKSEL	_maxDuty
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 2474     	MOVAR	_maxDuty
                                    1- 2475     	MGOTO	_00490_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 2476     _00477_DS_:
                                    1- 2477     	.line	446, "main.c"; 	else if(workStep == 6)
                                    1- 2478     	BANKSEL	_workStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 2479     	MOVR	_workStep,W
     005D 2406                      1- 2480     	XORIA	0x06
     005E 0903                      1- 2481     	BTRSS	STATUS,2
                                    1- 2482     	MGOTO	_00490_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2483     	.line	447, "main.c"; 	maxDuty = 50;
     0060 2132                      1- 2484     	MOVIA	0x32
                                    1- 2485     	BANKSEL	_maxDuty
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 2486     	MOVAR	_maxDuty
     0063                           1- 2487     _00490_DS_:
                                    1- 2488     	.line	448, "main.c"; 	setMaxDuty();
                                    1- 2489     	MCALL	_setMaxDuty
     0063 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2490     	MGOTO	_00502_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
     0065                           1- 2491     _00500_DS_:
                                    1- 2492     	.line	450, "main.c"; 	else if(kclick == 2)
                                    1- 2493     	BANKSEL	r0x1058
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 2494     	MOVR	r0x1058,W
     0067 2402                      1- 2495     	XORIA	0x02
     0068 0903                      1- 2496     	BTRSS	STATUS,2
                                    1- 2497     	MGOTO	_00502_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2498     	.line	452, "main.c"; 	if(workStep > 0)
                                    1- 2499     	BANKSEL	_workStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 2500     	MOVR	_workStep,W
     006C 0D03                      1- 2501     	BTRSC	STATUS,2
                                    1- 2502     	MGOTO	_00495_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2503     	.line	454, "main.c"; 	workStep = 0;
     006E 02rr                      1- 2504     	CLRR	_workStep
                                    1- 2505     	.line	455, "main.c"; 	powerOff();
                                    1- 2506     	MCALL	_powerOff
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2507     	.line	456, "main.c"; 	showFlag = 0;
                                    1- 2508     	BANKSEL	_Status
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 1Err                      1- 2509     	BCR	_Status,4
                                    1- 2510     	MGOTO	_00502_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
     0073                           1- 2511     _00495_DS_:
                                    1- 2512     	.line	460, "main.c"; 	if(batValue == 0 || preBatValue == 0)
                                    1- 2513     	BANKSEL	_batValue
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 2514     	MOVR	_batValue,W
     0075 0D03                      1- 2515     	BTRSC	STATUS,2
                                    1- 2516     	MGOTO	_00491_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2517     	BANKSEL	_preBatValue
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 2518     	MOVR	_preBatValue,W
     0079 0903                      1- 2519     	BTRSS	STATUS,2
                                    1- 2520     	MGOTO	_00492_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1- 2521     _00491_DS_:
                                    1- 2522     	.line	462, "main.c"; 	ledLightTime = 3;
     007B 2103                      1- 2523     	MOVIA	0x03
                                    1- 2524     	BANKSEL	_ledLightTime
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2525     	MOVAR	_ledLightTime
                                    1- 2526     	.line	463, "main.c"; 	preBatValue = 0;
                                    1- 2527     	BANKSEL	_preBatValue
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 02rr                      1- 2528     	CLRR	_preBatValue
                                    1- 2529     	.line	464, "main.c"; 	showFlag = 1;
                                    1- 2530     	BANKSEL	_Status
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 1Arr                      1- 2531     	BSR	_Status,4
                                    1- 2532     	.line	465, "main.c"; 	return;
                                    1- 2533     	MGOTO	_00502_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083                           1- 2534     _00492_DS_:
                                    1- 2535     	.line	467, "main.c"; 	workStep = 1;
     0083 2101                      1- 2536     	MOVIA	0x01
                                    1- 2537     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 00rr                      1- 2538     	MOVAR	_workStep
                                    1- 2539     	.line	468, "main.c"; 	PWM2DUTY = 80;
     0086 2150                      1- 2540     	MOVIA	0x50
     0087 00rr                      1- 2541     	SFUN	_PWM2DUTY
                                    1- 2542     	.line	469, "main.c"; 	cDuty = 80;
                                    1- 2543     	BANKSEL	_cDuty
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 2544     	MOVAR	_cDuty
                                    1- 2545     	.line	470, "main.c"; 	currentDuty = 80;
                                    1- 2546     	BANKSEL	_currentDuty
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 2547     	MOVAR	_currentDuty
                                    1- 2548     	.line	471, "main.c"; 	maxDuty = 40;
     008C 2128                      1- 2549     	MOVIA	0x28
                                    1- 2550     	BANKSEL	_maxDuty
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 2551     	MOVAR	_maxDuty
                                    1- 2552     	.line	472, "main.c"; 	setMaxDuty();
                                    1- 2553     	MCALL	_setMaxDuty
     008F 2rrr                      3-   66 m1      LCALL rom_address
     0090                           1- 2554     _00502_DS_:
                                    1- 2555     	.line	476, "main.c"; 	}
                                    1- 2556     	RETURN	
     0090 0010                      3-   40 m1      ret
                                    1- 2557     ; exit point of _keyCtr
                                    1- 2559     ;***
                                    1- 2560     ;  pBlock Stats: dbName = C
                                    1- 2561     ;***
                                    1- 2562     ;has an exit
                                    1- 2563     ;functions called:
                                    1- 2564     ;   __divuchar
                                    1- 2565     ;   _pwmInit
                                    1- 2566     ;   __divuchar
                                    1- 2567     ;   _pwmInit
                                    1- 2568     ;3 compiler assigned registers:
                                    1- 2569     ;   r0x1056
                                    1- 2570     ;   STK00
                                    1- 2571     ;   r0x1057
                                    1- 2572     ;; Starting pCode block
                                    1- 2573     .segment "code"; module=main, function=_setMaxDuty
     0000                           1- 2575     _setMaxDuty:
                                    1- 2576     ; 2 exit points
                                    1- 2577     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2578     	.line	404, "main.c"; 	if(batValue < 50)
     0000 2132                      1- 2579     	MOVIA	0x32
                                    1- 2580     	BANKSEL	_batValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2581     	SUBAR	_batValue,W
     0003 0C03                      1- 2582     	BTRSC	STATUS,0
                                    1- 2583     	MGOTO	_00462_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2584     	.line	405, "main.c"; 	maxDuty = maxDuty + 10 - (batValue/10);
     0005 210A                      1- 2585     	MOVIA	0x0a
                                    1- 2586     	BANKSEL	_maxDuty
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 03rr                      1- 2587     	ADDAR	_maxDuty,W
                                    1- 2588     	BANKSEL	r0x1056
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2589     	MOVAR	r0x1056
     000A 210A                      1- 2590     	MOVIA	0x0a
     000B 00rr                      1- 2591     	MOVAR	STK00
                                    1- 2592     	BANKSEL	_batValue
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2593     	MOVR	_batValue,W
                                    1- 2594     	MCALL	__divuchar
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2595     ;;1	MOVAR	r0x1057
                                    1- 2596     	BANKSEL	r0x1056
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 2597     	SUBAR	r0x1056,W
                                    1- 2598     	BANKSEL	_maxDuty
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2599     	MOVAR	_maxDuty
     0013                           1- 2600     _00462_DS_:
                                    1- 2601     	.line	406, "main.c"; 	tempDuty = maxDuty;
                                    1- 2602     	BANKSEL	_maxDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2603     	MOVR	_maxDuty,W
                                    1- 2604     	BANKSEL	_tempDuty
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 2605     	MOVAR	_tempDuty
                                    1- 2606     	.line	407, "main.c"; 	pwmInit();
                                    1- 2607     	MCALL	_pwmInit
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2608     	.line	408, "main.c"; 	}
                                    1- 2609     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1- 2610     ; exit point of _setMaxDuty
                                    1- 2612     ;***
                                    1- 2613     ;  pBlock Stats: dbName = C
                                    1- 2614     ;***
                                    1- 2615     ;has an exit
                                    1- 2616     ;functions called:
                                    1- 2617     ;   _setInput
                                    1- 2618     ;   _showKeyLed
                                    1- 2619     ;   __gptrget1
                                    1- 2620     ;   _showNubShiwei
                                    1- 2621     ;   __gptrget1
                                    1- 2622     ;   _showNubGewei
                                    1- 2623     ;   _setInput
                                    1- 2624     ;   _showKeyLed
                                    1- 2625     ;   __gptrget1
                                    1- 2626     ;   _showNubShiwei
                                    1- 2627     ;   __gptrget1
                                    1- 2628     ;   _showNubGewei
                                    1- 2629     ;5 compiler assigned registers:
                                    1- 2630     ;   r0x1059
                                    1- 2631     ;   r0x105A
                                    1- 2632     ;   STK01
                                    1- 2633     ;   STK00
                                    1- 2634     ;   r0x105B
                                    1- 2635     ;; Starting pCode block
                                    1- 2636     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2638     _refreshNub:
                                    1- 2639     ; 2 exit points
                                    1- 2640     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2641     	.line	360, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2642     	MOVIA	0x03
                                    1- 2643     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2644     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2645     	BTRSS	STATUS,2
                                    1- 2646     	MGOTO	_00456_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2647     	MOVIA	0x84
     0006 04rr                      1- 2648     	SUBAR	_count900s,W
     0007                           1- 2649     _00456_DS_:
     0007 0803                      1- 2650     	BTRSS	STATUS,0
                                    1- 2651     	MGOTO	_00434_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2652     	.line	362, "main.c"; 	setInput();
                                    1- 2653     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2654     	.line	363, "main.c"; 	return;
                                    1- 2655     	MGOTO	_00442_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2656     _00434_DS_:
                                    1- 2657     	.line	383, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2658     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2659     	MOVR	_shiweiNum,W
                                    1- 2660     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2661     	MOVAR	_tempshiweiNum
                                    1- 2662     	.line	384, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2663     	BANKSEL	_geweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2664     	MOVR	_geweiNum,W
                                    1- 2665     	BANKSEL	_tempgeweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2666     	MOVAR	_tempgeweiNum
                                    1- 2667     	.line	385, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2668     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2669     	MOVR	_workStep,W
     0015 0903                      1- 2670     	BTRSS	STATUS,2
                                    1- 2671     	MGOTO	_00435_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2672     	BANKSEL	_ledLightTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2673     	MOVR	_ledLightTime,W
     0019 0903                      1- 2674     	BTRSS	STATUS,2
     001A                           1- 2675     _00435_DS_:
                                    1- 2676     	.line	387, "main.c"; 	showKeyLed();
                                    1- 2677     	MCALL	_showKeyLed
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2678     	.line	390, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2679     	BANKSEL	_ledDeadTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2680     	MOVR	_ledDeadTime,W
     001D 0D03                      1- 2681     	BTRSC	STATUS,2
                                    1- 2682     	MGOTO	_00439_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2683     	.line	392, "main.c"; 	tempshiweiNum = 11;
     001F 210B                      1- 2684     	MOVIA	0x0b
                                    1- 2685     	BANKSEL	_tempshiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2686     	MOVAR	_tempshiweiNum
                                    1- 2687     	.line	393, "main.c"; 	tempgeweiNum = 12;
     0022 210C                      1- 2688     	MOVIA	0x0c
                                    1- 2689     	BANKSEL	_tempgeweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2690     	MOVAR	_tempgeweiNum
     0025                           1- 2691     _00439_DS_:
                                    1- 2692     	.line	396, "main.c"; 	if(firstShowCount > 0)
                                    1- 2693     	BANKSEL	_firstShowCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2694     	MOVR	_firstShowCount,W
     0027 0D03                      1- 2695     	BTRSC	STATUS,2
                                    1- 2696     	MGOTO	_00441_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2697     	.line	397, "main.c"; 	tempshiweiNum = tempgeweiNum = 8;
     0029 2108                      1- 2698     	MOVIA	0x08
                                    1- 2699     	BANKSEL	_tempgeweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2700     	MOVAR	_tempgeweiNum
                                    1- 2701     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2702     	MOVAR	_tempshiweiNum
     002E                           1- 2703     _00441_DS_:
                                    1- 2704     	.line	398, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2705     	BANKSEL	_tempshiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2706     	MOVR	_tempshiweiNum,W
     0030 25rr                      1- 2707     	ADDIA	(_numArray + 0)
                                    1- 2708     	BANKSEL	r0x1059
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2709     	MOVAR	r0x1059
     0033 21rr                      1- 2710     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0034 0C03                      1- 2711     	BTRSC	STATUS,0
     0035 2501                      1- 2712     	ADDIA	0x01
                                    1- 2713     	BANKSEL	r0x105A
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2714     	MOVAR	r0x105A
                                    1- 2715     	BANKSEL	r0x1059
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2716     	MOVR	r0x1059,W
     003A 00rr                      1- 2717     	MOVAR	STK01
                                    1- 2718     	BANKSEL	r0x105A
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2719     	MOVR	r0x105A,W
     003D 00rr                      1- 2720     	MOVAR	STK00
     003E 2100                      1- 2721     	MOVIA	0x00
                                    1- 2722     	MCALL	__gptrget1
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2723     ;;100	MOVAR	r0x105B
                                    1- 2724     	MCALL	_showNubShiwei
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2725     	.line	399, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2726     	BANKSEL	_tempgeweiNum
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2727     	MOVR	_tempgeweiNum,W
     0043 25rr                      1- 2728     	ADDIA	(_numArray + 0)
                                    1- 2729     	BANKSEL	r0x1059
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2730     	MOVAR	r0x1059
     0046 21rr                      1- 2731     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0047 0C03                      1- 2732     	BTRSC	STATUS,0
     0048 2501                      1- 2733     	ADDIA	0x01
                                    1- 2734     	BANKSEL	r0x105A
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2735     	MOVAR	r0x105A
                                    1- 2736     	BANKSEL	r0x1059
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 2737     	MOVR	r0x1059,W
     004D 00rr                      1- 2738     	MOVAR	STK01
                                    1- 2739     	BANKSEL	r0x105A
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2740     	MOVR	r0x105A,W
     0050 00rr                      1- 2741     	MOVAR	STK00
     0051 2100                      1- 2742     	MOVIA	0x00
                                    1- 2743     	MCALL	__gptrget1
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2744     ;;99	MOVAR	r0x105B
                                    1- 2745     	MCALL	_showNubGewei
     0053 2rrr                      3-   66 m1      LCALL rom_address
     0054                           1- 2746     _00442_DS_:
                                    1- 2747     	.line	400, "main.c"; 	}
                                    1- 2748     	RETURN	
     0054 0010                      3-   40 m1      ret
                                    1- 2749     ; exit point of _refreshNub
                                    1- 2751     ;***
                                    1- 2752     ;  pBlock Stats: dbName = C
                                    1- 2753     ;***
                                    1- 2754     ;functions called:
                                    1- 2755     ;   __divuchar
                                    1- 2756     ;   __moduchar
                                    1- 2757     ;   _pwmStop
                                    1- 2758     ;   _pwm1Stop
                                    1- 2759     ;   _pwm1Init
                                    1- 2760     ;   _pwm1Stop
                                    1- 2761     ;   __divuchar
                                    1- 2762     ;   __moduchar
                                    1- 2763     ;   _pwmStop
                                    1- 2764     ;   _pwm1Stop
                                    1- 2765     ;   _pwm1Init
                                    1- 2766     ;   _pwm1Stop
                                    1- 2767     ;6 compiler assigned registers:
                                    1- 2768     ;   STK00
                                    1- 2769     ;   r0x105C
                                    1- 2770     ;   r0x105D
                                    1- 2771     ;   r0x105E
                                    1- 2772     ;   r0x105F
                                    1- 2773     ;   r0x1060
                                    1- 2774     ;; Starting pCode block
                                    1- 2775     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2777     _chrgCtr:
                                    1- 2778     ; 0 exit points
                                    1- 2779     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2780     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2781     	.line	252, "main.c"; 	if(preBatValue > 99)
     0000 2164                      1- 2782     	MOVIA	0x64
                                    1- 2783     	BANKSEL	_preBatValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2784     	SUBAR	_preBatValue,W
     0003 0803                      1- 2785     	BTRSS	STATUS,0
                                    1- 2786     	MGOTO	_00319_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2787     	.line	254, "main.c"; 	shiweiNum = geweiNum = 9;
     0005 2109                      1- 2788     	MOVIA	0x09
                                    1- 2789     	BANKSEL	_geweiNum
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2790     	MOVAR	_geweiNum
                                    1- 2791     	BANKSEL	_shiweiNum
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2792     	MOVAR	_shiweiNum
                                    1- 2793     	MGOTO	_00320_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2794     _00319_DS_:
                                    1- 2795     	.line	258, "main.c"; 	shiweiNum = preBatValue/10;
     000B 210A                      1- 2796     	MOVIA	0x0a
     000C 00rr                      1- 2797     	MOVAR	STK00
                                    1- 2798     	BANKSEL	_preBatValue
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2799     	MOVR	_preBatValue,W
                                    1- 2800     	MCALL	__divuchar
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2801     	BANKSEL	_shiweiNum
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2802     	MOVAR	_shiweiNum
                                    1- 2803     	.line	259, "main.c"; 	geweiNum = preBatValue%10;
     0012 210A                      1- 2804     	MOVIA	0x0a
     0013 00rr                      1- 2805     	MOVAR	STK00
                                    1- 2806     	BANKSEL	_preBatValue
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2807     	MOVR	_preBatValue,W
                                    1- 2808     	MCALL	__moduchar
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2809     	BANKSEL	_geweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2810     	MOVAR	_geweiNum
     0019                           1- 2811     _00320_DS_:
                                    1- 2812     	.line	261, "main.c"; 	if(workStep > 0)
                                    1- 2813     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2814     	MOVR	_workStep,W
     001B 0D03                      1- 2815     	BTRSC	STATUS,2
                                    1- 2816     	MGOTO	_00322_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2817     	.line	263, "main.c"; 	showFlag = 1;
                                    1- 2818     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2819     	BSR	_Status,4
                                    1- 2820     	.line	264, "main.c"; 	shiweiNum = 0;
                                    1- 2821     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 2822     	CLRR	_shiweiNum
                                    1- 2823     	.line	265, "main.c"; 	geweiNum = workStep;
                                    1- 2824     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2825     	MOVR	_workStep,W
                                    1- 2826     	BANKSEL	_geweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2827     	MOVAR	_geweiNum
     0025                           1- 2828     _00322_DS_:
                                    1- 2829     	.line	267, "main.c"; 	if(0x08 & PORTA)
                                    1- 2830     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 09rr                      1- 2831     	BTRSS	_PORTA,3
                                    1- 2832     	MGOTO	_00355_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2833     	.line	270, "main.c"; 	chrgFlag = 1;
                                    1- 2834     	BANKSEL	_Status
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 19rr                      1- 2835     	BSR	_Status,3
                                    1- 2836     	.line	271, "main.c"; 	showFlag = 1;
     002A 1Arr                      1- 2837     	BSR	_Status,4
                                    1- 2838     	.line	272, "main.c"; 	workStep = 0;
                                    1- 2839     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1- 2840     	CLRR	_workStep
                                    1- 2841     	.line	273, "main.c"; 	ledLightTime = 0;
                                    1- 2842     	BANKSEL	_ledLightTime
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1- 2843     	CLRR	_ledLightTime
                                    1- 2844     	.line	274, "main.c"; 	pwmStop();
                                    1- 2845     	MCALL	_pwmStop
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2846     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 2847     	.line	275, "main.c"; 	if(preBatValue < 99 && batValue >= preBatValue && count5s == 1)
     0030 2163                      1- 2848     	MOVIA	0x63
                                    1- 2849     	BANKSEL	_preBatValue
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 04rr                      1- 2850     	SUBAR	_preBatValue,W
     0033 0C03                      1- 2851     	BTRSC	STATUS,0
                                    1- 2852     	MGOTO	_00007_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 01rr                      1- 2853     	MOVR	_preBatValue,W
                                    1- 2854     	BANKSEL	_batValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 04rr                      1- 2855     	SUBAR	_batValue,W
     0038 0803                      1- 2856     	BTRSS	STATUS,0
                                    1- 2857     	MGOTO	_00007_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2858     	BANKSEL	_count5s
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2859     	MOVR	_count5s,W
     003C 2401                      1- 2860     	XORIA	0x01
     003D 0903                      1- 2861     	BTRSS	STATUS,2
                                    1- 2862     	MGOTO	_00007_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 01rr                      1- 2863     	MOVR	(_count5s + 1),W
     0040 2400                      1- 2864     	XORIA	0x00
     0041 0903                      1- 2865     	BTRSS	STATUS,2
                                    1- 2866     	MGOTO	_00007_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2867     	.line	277, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2868     	BANKSEL	_preBatValue
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 2869     	INCR	_preBatValue,F
     0045                           1- 2870     _00007_DS_:
                                    1- 2871     	.line	279, "main.c"; 	if(batValue >= 99 || chrgFullFlag)
     0045 2163                      1- 2872     	MOVIA	0x63
                                    1- 2873     	BANKSEL	_batValue
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2874     	SUBAR	_batValue,W
     0048 0C03                      1- 2875     	BTRSC	STATUS,0
                                    1- 2876     	MGOTO	_00346_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2877     	BANKSEL	_chrgFullFlag
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 2878     	MOVR	_chrgFullFlag,W
     004C 0D03                      1- 2879     	BTRSC	STATUS,2
                                    1- 2880     	MGOTO	_00347_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2881     _00346_DS_:
                                    1- 2882     	.line	281, "main.c"; 	chrgStep = 4;
     004E 2104                      1- 2883     	MOVIA	0x04
                                    1- 2884     	BANKSEL	_chrgStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 2885     	MOVAR	_chrgStep
                                    1- 2886     	.line	283, "main.c"; 	if(shiweiNum == 9 &&  geweiNum == 9 && batValue >= 100 && ++countFull > 2000)
                                    1- 2887     	BANKSEL	_shiweiNum
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2888     	MOVR	_shiweiNum,W
     0053 2409                      1- 2889     	XORIA	0x09
     0054 0903                      1- 2890     	BTRSS	STATUS,2
                                    1- 2891     	MGOTO	_00009_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2892     	BANKSEL	_geweiNum
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1- 2893     	MOVR	_geweiNum,W
     0058 2409                      1- 2894     	XORIA	0x09
     0059 0903                      1- 2895     	BTRSS	STATUS,2
                                    1- 2896     	MGOTO	_00009_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2897     ;;unsigned compare: left < lit (0x64=100), size=1
     005B 2164                      1- 2898     	MOVIA	0x64
                                    1- 2899     	BANKSEL	_batValue
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 04rr                      1- 2900     	SUBAR	_batValue,W
     005E 0803                      1- 2901     	BTRSS	STATUS,0
                                    1- 2902     	MGOTO	_00009_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2903     	BANKSEL	_countFull
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 2904     	INCR	_countFull,F
     0062 0D03                      1- 2905     	BTRSC	STATUS,2
     0063 05rr                      1- 2906     	INCR	(_countFull + 1),F
                                    1- 2907     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2908     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0064 2107                      1- 2909     	MOVIA	0x07
     0065 04rr                      1- 2910     	SUBAR	(_countFull + 1),W
     0066 0903                      1- 2911     	BTRSS	STATUS,2
                                    1- 2912     	MGOTO	_00421_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 21D1                      1- 2913     	MOVIA	0xd1
     0069 04rr                      1- 2914     	SUBAR	_countFull,W
     006A                           1- 2915     _00421_DS_:
     006A 0803                      1- 2916     	BTRSS	STATUS,0
                                    1- 2917     	MGOTO	_00009_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2918     	.line	285, "main.c"; 	pwm1Stop();
                                    1- 2919     	MCALL	_pwm1Stop
     006C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2920     	.line	287, "main.c"; 	PORTB &= 0xF7;
     006D 1Drr                      1- 2921     	BCR	_PORTB,3
                                    1- 2922     	.line	288, "main.c"; 	IOSTB |= 0X08;
     006E 001r                      1- 2923     	IOSTR	_IOSTB
                                    1- 2924     	BANKSEL	r0x105C
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 2925     	MOVAR	r0x105C
     0071 19rr                      1- 2926     	BSR	r0x105C,3
     0072 01rr                      1- 2927     	MOVR	r0x105C,W
     0073 000r                      1- 2928     	IOST	_IOSTB
                                    1- 2929     	.line	289, "main.c"; 	chrgFullFlag = 1;
     0074 2101                      1- 2930     	MOVIA	0x01
                                    1- 2931     	BANKSEL	_chrgFullFlag
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 2932     	MOVAR	_chrgFullFlag
                                    1- 2933     	MGOTO	_00009_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1- 2934     _00347_DS_:
                                    1- 2935     	.line	295, "main.c"; 	countFull = 0;
                                    1- 2936     	BANKSEL	_countFull
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 02rr                      1- 2937     	CLRR	_countFull
     007A 02rr                      1- 2938     	CLRR	(_countFull + 1)
                                    1- 2939     	.line	296, "main.c"; 	IOSTB &= 0xF7;
     007B 001r                      1- 2940     	IOSTR	_IOSTB
                                    1- 2941     	BANKSEL	r0x105C
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2942     	MOVAR	r0x105C
     007E 1Drr                      1- 2943     	BCR	r0x105C,3
     007F 01rr                      1- 2944     	MOVR	r0x105C,W
     0080 000r                      1- 2945     	IOST	_IOSTB
                                    1- 2946     	.line	297, "main.c"; 	PWM1DUTY = chrgduty;
                                    1- 2947     	BANKSEL	_chrgduty
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 2948     	MOVR	_chrgduty,W
     0083 00rr                      1- 2949     	SFUN	_PWM1DUTY
                                    1- 2950     	.line	298, "main.c"; 	pwm1Init();
                                    1- 2951     	MCALL	_pwm1Init
     0084 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2952     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2953     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2954     	.line	299, "main.c"; 	if(count200ms > 5)
     0085 2106                      1- 2955     	MOVIA	0x06
                                    1- 2956     	BANKSEL	_count200ms
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 04rr                      1- 2957     	SUBAR	_count200ms,W
     0088 0803                      1- 2958     	BTRSS	STATUS,0
                                    1- 2959     	MGOTO	_00009_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2960     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2961     ;;unsigned compare: left >= lit (0x20=32), size=2
                                    1- 2962     	.line	302, "main.c"; 	if(R_AIN4_DATA > 31)
     008A 2100                      1- 2963     	MOVIA	0x00
                                    1- 2964     	BANKSEL	_R_AIN4_DATA
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 04rr                      1- 2965     	SUBAR	(_R_AIN4_DATA + 1),W
     008D 0903                      1- 2966     	BTRSS	STATUS,2
                                    1- 2967     	MGOTO	_00423_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F 2120                      1- 2968     	MOVIA	0x20
     0090 04rr                      1- 2969     	SUBAR	_R_AIN4_DATA,W
     0091                           1- 2970     _00423_DS_:
     0091 0803                      1- 2971     	BTRSS	STATUS,0
                                    1- 2972     	MGOTO	_00339_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2973     	.line	304, "main.c"; 	if(++subTime > 50)
                                    1- 2974     	BANKSEL	_subTime
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 05rr                      1- 2975     	INCR	_subTime,F
                                    1- 2976     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2977     ;;unsigned compare: left >= lit (0x33=51), size=1
     0095 2133                      1- 2978     	MOVIA	0x33
     0096 04rr                      1- 2979     	SUBAR	_subTime,W
     0097 0803                      1- 2980     	BTRSS	STATUS,0
                                    1- 2981     	MGOTO	_00333_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2982     	.line	306, "main.c"; 	maxduty = maxduty - 1;
                                    1- 2983     	BANKSEL	_maxduty
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 06rr                      1- 2984     	DECR	_maxduty,F
                                    1- 2985     	.line	307, "main.c"; 	subTime = 0;
                                    1- 2986     	BANKSEL	_subTime
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 02rr                      1- 2987     	CLRR	_subTime
                                    1- 2988     	.line	308, "main.c"; 	subMin = 27;
     009D 211B                      1- 2989     	MOVIA	0x1b
                                    1- 2990     	BANKSEL	_subMin
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 2991     	MOVAR	_subMin
     00A0                           1- 2992     _00333_DS_:
                                    1- 2993     	.line	310, "main.c"; 	addTime = 0;
                                    1- 2994     	BANKSEL	_addTime
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 2995     	CLRR	_addTime
                                    1- 2996     	MGOTO	_00340_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
     00A3                           1- 2997     _00339_DS_:
                                    1- 2998     	.line	312, "main.c"; 	else if(R_AIN4_DATA < subMin)
                                    1- 2999     	BANKSEL	_subMin
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 01rr                      1- 3000     	MOVR	_subMin,W
                                    1- 3001     	BANKSEL	r0x105C
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 3002     	MOVAR	r0x105C
                                    1- 3003     	BANKSEL	r0x105D
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 02rr                      1- 3004     	CLRR	r0x105D
     00A9 2100                      1- 3005     	MOVIA	0x00
                                    1- 3006     	BANKSEL	_R_AIN4_DATA
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 04rr                      1- 3007     	SUBAR	(_R_AIN4_DATA + 1),W
     00AC 0903                      1- 3008     	BTRSS	STATUS,2
                                    1- 3009     	MGOTO	_00425_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3010     	BANKSEL	r0x105C
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 01rr                      1- 3011     	MOVR	r0x105C,W
                                    1- 3012     	BANKSEL	_R_AIN4_DATA
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 04rr                      1- 3013     	SUBAR	_R_AIN4_DATA,W
     00B2                           1- 3014     _00425_DS_:
     00B2 0C03                      1- 3015     	BTRSC	STATUS,0
                                    1- 3016     	MGOTO	_00340_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3017     	.line	314, "main.c"; 	if(++addTime > 50)
                                    1- 3018     	BANKSEL	_addTime
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 05rr                      1- 3019     	INCR	_addTime,F
                                    1- 3020     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3021     ;;unsigned compare: left >= lit (0x33=51), size=1
     00B6 2133                      1- 3022     	MOVIA	0x33
     00B7 04rr                      1- 3023     	SUBAR	_addTime,W
     00B8 0803                      1- 3024     	BTRSS	STATUS,0
                                    1- 3025     	MGOTO	_00335_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3026     	.line	316, "main.c"; 	maxduty = maxduty + 1;
                                    1- 3027     	BANKSEL	_maxduty
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 05rr                      1- 3028     	INCR	_maxduty,F
                                    1- 3029     	.line	317, "main.c"; 	addTime = 0;
                                    1- 3030     	BANKSEL	_addTime
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 02rr                      1- 3031     	CLRR	_addTime
     00BE                           1- 3032     _00335_DS_:
                                    1- 3033     	.line	319, "main.c"; 	subTime = 0;
                                    1- 3034     	BANKSEL	_subTime
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 02rr                      1- 3035     	CLRR	_subTime
     00C0                           1- 3036     _00340_DS_:
                                    1- 3037     	.line	321, "main.c"; 	if(chrgduty < maxduty)
                                    1- 3038     	BANKSEL	_maxduty
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 01rr                      1- 3039     	MOVR	_maxduty,W
                                    1- 3040     	BANKSEL	_chrgduty
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 04rr                      1- 3041     	SUBAR	_chrgduty,W
     00C4 0C03                      1- 3042     	BTRSC	STATUS,0
                                    1- 3043     	MGOTO	_00342_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3044     	.line	322, "main.c"; 	chrgduty++;
     00C6 05rr                      1- 3045     	INCR	_chrgduty,F
                                    1- 3046     	MGOTO	_00009_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
     00C8                           1- 3047     _00342_DS_:
                                    1- 3048     	.line	324, "main.c"; 	chrgduty = maxduty;
                                    1- 3049     	BANKSEL	_maxduty
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 01rr                      1- 3050     	MOVR	_maxduty,W
                                    1- 3051     	BANKSEL	_chrgduty
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 3052     	MOVAR	_chrgduty
                                    1- 3053     	MGOTO	_00009_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD                           1- 3054     _00355_DS_:
                                    1- 3055     	.line	333, "main.c"; 	subMin = 27;
     00CD 211B                      1- 3056     	MOVIA	0x1b
                                    1- 3057     	BANKSEL	_subMin
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 3058     	MOVAR	_subMin
                                    1- 3059     	.line	334, "main.c"; 	chrgFullFlag = 0;
                                    1- 3060     	BANKSEL	_chrgFullFlag
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 02rr                      1- 3061     	CLRR	_chrgFullFlag
                                    1- 3062     	.line	335, "main.c"; 	maxduty = 0;
                                    1- 3063     	BANKSEL	_maxduty
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 02rr                      1- 3064     	CLRR	_maxduty
                                    1- 3065     	.line	336, "main.c"; 	countFull = 0;
                                    1- 3066     	BANKSEL	_countFull
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 02rr                      1- 3067     	CLRR	_countFull
     00D6 02rr                      1- 3068     	CLRR	(_countFull + 1)
                                    1- 3069     	.line	337, "main.c"; 	pwm1Stop();
                                    1- 3070     	MCALL	_pwm1Stop
     00D7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3071     	.line	338, "main.c"; 	chrgFlag = 0;
                                    1- 3072     	BANKSEL	_Status
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 1Drr                      1- 3073     	BCR	_Status,3
                                    1- 3074     	.line	341, "main.c"; 	if(preBatValue > batValue + 1)
                                    1- 3075     	BANKSEL	_batValue
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 01rr                      1- 3076     	MOVR	_batValue,W
                                    1- 3077     	BANKSEL	r0x105C
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 00rr                      1- 3078     	MOVAR	r0x105C
                                    1- 3079     	BANKSEL	r0x105D
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 02rr                      1- 3080     	CLRR	r0x105D
                                    1- 3081     	BANKSEL	r0x105C
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 05rr                      1- 3082     	INCR	r0x105C,F
     00E2 0903                      1- 3083     	BTRSS	STATUS,2
                                    1- 3084     	MGOTO	_00008_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3085     	BANKSEL	r0x105D
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 05rr                      1- 3086     	INCR	r0x105D,F
     00E6                           1- 3087     _00008_DS_:
                                    1- 3088     	BANKSEL	_preBatValue
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 01rr                      1- 3089     	MOVR	_preBatValue,W
                                    1- 3090     	BANKSEL	r0x105E
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 00rr                      1- 3091     	MOVAR	r0x105E
                                    1- 3092     ;;1	CLRR	r0x105F
                                    1- 3093     	BANKSEL	r0x105D
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 01rr                      1- 3094     	MOVR	r0x105D,W
     00EC 2580                      1- 3095     	ADDIA	0x80
                                    1- 3096     	BANKSEL	r0x1060
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 3097     	MOVAR	r0x1060
     00EF 2100                      1- 3098     	MOVIA	0x00
     00F0 2580                      1- 3099     	ADDIA	0x80
     00F1 04rr                      1- 3100     	SUBAR	r0x1060,W
     00F2 0903                      1- 3101     	BTRSS	STATUS,2
                                    1- 3102     	MGOTO	_00428_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3103     	BANKSEL	r0x105E
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 01rr                      1- 3104     	MOVR	r0x105E,W
                                    1- 3105     	BANKSEL	r0x105C
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 04rr                      1- 3106     	SUBAR	r0x105C,W
     00F8                           1- 3107     _00428_DS_:
     00F8 0C03                      1- 3108     	BTRSC	STATUS,0
                                    1- 3109     	MGOTO	_00009_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3110     	.line	343, "main.c"; 	if(count5s == 0)
                                    1- 3111     	BANKSEL	_count5s
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 01rr                      1- 3112     	MOVR	_count5s,W
     00FC 11rr                      1- 3113     	IORAR	(_count5s + 1),W
     00FD 0903                      1- 3114     	BTRSS	STATUS,2
                                    1- 3115     	MGOTO	_00009_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3116     	.line	346, "main.c"; 	preBatValue = preBatValue - 1;
                                    1- 3117     	BANKSEL	_preBatValue
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 06rr                      1- 3118     	DECR	_preBatValue,F
     0101                           1- 3119     _00009_DS_:
                                    1- 3120     	.line	353, "main.c"; 	}
                                    1- 3121     	RETURN	
     0101 0010                      3-   40 m1      ret
                                    1- 3124     ;	code size estimation:
                                    1- 3125     ;	 1185+  360 =  1545 instructions ( 3810 byte)
                                    1- 3127     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
