
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_gotoSleep
                                    1-   97     	extern	_delay
                                    1-   98     	extern	_F_wait_eoc
                                    1-   99     	extern	_F_AIN1_Convert
                                    1-  100     	extern	_checkBatAD
                                    1-  101     	extern	_initAD
                                    1-  102     	extern	_initSys
                                    1-  103     	extern	_pwmStop
                                    1-  104     	extern	_pwmInit
                                    1-  105     	extern	_rainbow
                                    1-  106     	extern	_ledOff
                                    1-  107     	extern	_ledGreen
                                    1-  108     	extern	_ledRed
                                    1-  109     	extern	_breath
                                    1-  110     	extern	_setColor
                                    1-  111     	extern	_showRGB
                                    1-  112     	extern	_keyCtr
                                    1-  113     	extern	_workCtr
                                    1-  114     	extern	_chrgCtr
                                    1-  115     	extern	_isr
                                    1-  116     	extern	_main
                                    1-  117     	extern	_keyRead
                                    1-  118     	extern	_setLastColor
                                    1-  119     	extern	_intCount
                                    1-  120     	extern	_IntFlag
                                    1-  121     	extern	_sleepTime
                                    1-  122     	extern	_workStep
                                    1-  123     	extern	_R_AIN1_DATA
                                    1-  124     	extern	_R_AIN1_DATA_LB
                                    1-  125     	extern	_lowCount
                                    1-  126     	extern	_red
                                    1-  127     	extern	_blue
                                    1-  128     	extern	_green
                                    1-  129     	extern	_ledCount
                                    1-  130     	extern	_ledFlag
                                    1-  131     	extern	_lastRed
                                    1-  132     	extern	_lastGreen
                                    1-  133     	extern	_lastBlue
                                    1-  134     	extern	_colorStep
                                    1-  135     	extern	_count250
                                    1-  136     	extern	_count10ms
                                    1-  137     	extern	_keyCount
                                    1-  138     	extern	_duty
                                    1-  139     	extern	_count900s
                                    1-  140     	extern	_longPressFlag
                                    1-  141     	extern	_breathTime
                                    1-  142     	extern	_breathFalg
                                    1-  143     	extern	_delayTime
                                    1-  144     	extern	_fullTime
                                    1-  145     	extern	_closeTime
                                    1-  146     	extern	_breathWaitTime
                                    1-  147     	extern	_count1s
                                    1-  148     	extern	_currentDuty
                                    1-  149     	extern	_preDuty
                                    1-  150     	extern	_lowBatFlag
                                    1-  151     	extern	_waitRainbowTime
                                    1-  152     	extern	_chrgFullFlag
                                    1-  154     	extern PSAVE
                                    1-  155     	extern SSAVE
                                    1-  156     	extern WSAVE
                                    1-  157     	extern STK04
                                    1-  158     	extern STK03
                                    1-  159     	extern STK02
                                    1-  160     	extern STK01
                                    1-  161     	extern STK00
                                    1-  163     .segment "uninit", 0x20000040
 20000040                           1-  164     PSAVE:
                                    1-  165     	.res 1
 20000041                           1-  166     SSAVE:
                                    1-  167     	.res 1
 20000042                           1-  168     WSAVE:
                                    1-  169     	.res 1
 20000043                           1-  170     STK04:
                                    1-  171     	.res 1
 20000044                           1-  172     STK03:
                                    1-  173     	.res 1
 20000045                           1-  174     STK02:
                                    1-  175     	.res 1
 20000046                           1-  176     STK01:
                                    1-  177     	.res 1
 20000047                           1-  178     STK00:
                                    1-  179     	.res 1
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ; global definitions
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ; absolute symbol definitions
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     ;--------------------------------------------------------
                                    1-  188     ; compiler-defined variables
                                    1-  189     ;--------------------------------------------------------
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x1039:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x103A:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1036:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x1037:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1038:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x1035:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x1033:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x1034:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x102B:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x102C:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x102D:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1030:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1029:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x102A:
                                    1-  231     	.res	1
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     ; initialized data
                                    1-  234     ;--------------------------------------------------------
                                    1-  236     .segment "idata"
     0000                           1-  237     _intCount:
     0000 0000                      1-  238     	dw	0x00
                                    1-  242     .segment "idata"
     0000                           1-  243     _IntFlag:
     0000 0000                      1-  244     	dw	0x00
                                    1-  248     .segment "idata"
     0000                           1-  249     _sleepTime:
     0000 0000                      1-  250     	dw	0x00
                                    1-  254     .segment "idata"
     0000                           1-  255     _workStep:
     0000 0000                      1-  256     	dw	0x00
                                    1-  260     .segment "idata"
     0000                           1-  261     _R_AIN1_DATA:
     0000 0000 0000                 1-  262     	dw	0x00, 0x00
                                    1-  266     .segment "idata"
     0000                           1-  267     _R_AIN1_DATA_LB:
     0000 0000                      1-  268     	dw	0x00
                                    1-  272     .segment "idata"
     0000                           1-  273     _lowCount:
     0000 0000                      1-  274     	dw	0x00
                                    1-  278     .segment "idata"
     0000                           1-  279     _red:
     0000 0000                      1-  280     	dw	0x00
                                    1-  284     .segment "idata"
     0000                           1-  285     _blue:
     0000 0000                      1-  286     	dw	0x00
                                    1-  290     .segment "idata"
     0000                           1-  291     _green:
     0000 0000                      1-  292     	dw	0x00
                                    1-  296     .segment "idata"
     0000                           1-  297     _ledCount:
     0000 0000                      1-  298     	dw	0x00
                                    1-  302     .segment "idata"
     0000                           1-  303     _ledFlag:
     0000 0000                      1-  304     	dw	0x00
                                    1-  308     .segment "idata"
     0000                           1-  309     _lastRed:
     0000 0000                      1-  310     	dw	0x00
                                    1-  314     .segment "idata"
     0000                           1-  315     _lastGreen:
     0000 0000                      1-  316     	dw	0x00
                                    1-  320     .segment "idata"
     0000                           1-  321     _lastBlue:
     0000 0000                      1-  322     	dw	0x00
                                    1-  326     .segment "idata"
     0000                           1-  327     _colorStep:
     0000 0000                      1-  328     	dw	0x00
                                    1-  332     .segment "idata"
     0000                           1-  333     _count250:
     0000 0000                      1-  334     	dw	0x00
                                    1-  338     .segment "idata"
     0000                           1-  339     _count10ms:
     0000 0000                      1-  340     	dw	0x00
                                    1-  344     .segment "idata"
     0000                           1-  345     _keyCount:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _duty:
     0000 0000                      1-  352     	dw	0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _count900s:
     0000 0000 0000                 1-  358     	dw	0x00, 0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _longPressFlag:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _breathTime:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _breathFalg:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _delayTime:
     0000 0000                      1-  382     	dw	0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _fullTime:
     0000 0000 0000                 1-  388     	dw	0x00, 0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _closeTime:
     0000 0000 0000                 1-  394     	dw	0x00, 0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _breathWaitTime:
     0000 0000                      1-  400     	dw	0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _count1s:
     0000 0000                      1-  406     	dw	0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _currentDuty:
     0000 0000                      1-  412     	dw	0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _preDuty:
     0000 0000                      1-  418     	dw	0x00
                                    1-  422     .segment "idata"
     0000                           1-  423     _lowBatFlag:
     0000 0000                      1-  424     	dw	0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _waitRainbowTime:
     0000 0000 0000                 1-  430     	dw	0x00, 0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _chrgFullFlag:
     0000 0000                      1-  436     	dw	0x00
                                    1-  439     ;--------------------------------------------------------
                                    1-  440     ; overlayable items in internal ram 
                                    1-  441     ;--------------------------------------------------------
                                    1-  442     ;	udata_ovr
                                    1-  443     ;--------------------------------------------------------
                                    1-  444     ; reset vector 
                                    1-  445     ;--------------------------------------------------------
                                    1-  446     ORG	0x0000
     0000 3rrr                      1-  447     	LGOTO	__nyc_ny8_startup
                                    1-  448     ;--------------------------------------------------------
                                    1-  449     ; interrupt and initialization code
                                    1-  450     ;--------------------------------------------------------
                                    1-  451     ORG 0x0008
                                    1-  452     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  454     .segment "code"
     0000                           1-  455     __sdcc_interrupt:
                                    1-  456     ;***
                                    1-  457     ;  pBlock Stats: dbName = I
                                    1-  458     ;***
                                    1-  459     ;2 compiler assigned registers:
                                    1-  460     ;   STK00
                                    1-  461     ;   STK01
                                    1-  462     ;; Starting pCode block
     0000                           1-  463     _isr:
                                    1-  464     ; 0 exit points
                                    1-  465     	.line	80, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  466     	MOVAR	WSAVE
     0001 1503                      1-  467     	SWAPR	STATUS,W
     0002 0283                      1-  468     	CLRR	STATUS
     0003 00rr                      1-  469     	MOVAR	SSAVE
     0004 010A                      1-  470     	MOVR	PCHBUF,W
     0005 028A                      1-  471     	CLRR	PCHBUF
     0006 00rr                      1-  472     	MOVAR	PSAVE
     0007 0104                      1-  473     	MOVR	FSR,W
                                    1-  474     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  475     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  476     	MOVR	STK00,W
                                    1-  477     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  478     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  479     	MOVR	STK01,W
                                    1-  480     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  481     	MOVAR	___sdcc_saved_stk01
                                    1-  482     	.line	82, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  483     	BTRSS	_INTFbits,0
                                    1-  484     	MGOTO	_00113_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  485     	.line	84, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  486     	MOVIA	0x37
     0013 03rr                      1-  487     	ADDAR	_TMR0,F
                                    1-  488     	.line	86, "main.c"; 	if(++intCount >= 100)
                                    1-  489     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  490     	INCR	_intCount,F
                                    1-  491     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  492     	MOVIA	0x64
     0017 04rr                      1-  493     	SUBAR	_intCount,W
     0018 0803                      1-  494     	BTRSS	STATUS,0
                                    1-  495     	MGOTO	_00113_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  496     	.line	88, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  497     	MOVIA	0x01
                                    1-  498     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  499     	MOVAR	_IntFlag
                                    1-  500     	.line	89, "main.c"; 	intCount = 0;
                                    1-  501     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  502     	CLRR	_intCount
                                    1-  503     	.line	90, "main.c"; 	if(++count1s >= 100)
                                    1-  504     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  505     	INCR	_count1s,F
                                    1-  506     ;;unsigned compare: left < lit (0x64=100), size=1
     0021 2164                      1-  507     	MOVIA	0x64
     0022 04rr                      1-  508     	SUBAR	_count1s,W
     0023 0803                      1-  509     	BTRSS	STATUS,0
                                    1-  510     	MGOTO	_00113_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  511     	.line	92, "main.c"; 	count1s = 0;
     0025 02rr                      1-  512     	CLRR	_count1s
                                    1-  513     	.line	93, "main.c"; 	if(workStep)
                                    1-  514     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  515     	MOVR	_workStep,W
     0028 0D03                      1-  516     	BTRSC	STATUS,2
                                    1-  517     	MGOTO	_00106_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  518     	.line	95, "main.c"; 	++count900s;
                                    1-  519     	BANKSEL	_count900s
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 05rr                      1-  520     	INCR	_count900s,F
     002C 0D03                      1-  521     	BTRSC	STATUS,2
     002D 05rr                      1-  522     	INCR	(_count900s + 1),F
                                    1-  523     	MGOTO	_00113_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  524     _00106_DS_:
                                    1-  525     	.line	99, "main.c"; 	count900s = 0;
                                    1-  526     	BANKSEL	_count900s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1-  527     	CLRR	_count900s
     0031 02rr                      1-  528     	CLRR	(_count900s + 1)
     0032                           1-  529     _00113_DS_:
                                    1-  530     	.line	107, "main.c"; 	if(INTFbits.PABIF)
     0032 08rr                      1-  531     	BTRSS	_INTFbits,1
                                    1-  532     	MGOTO	_00115_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  533     	.line	109, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0034 21FD                      1-  534     	MOVIA	0xfd
     0035 00rr                      1-  535     	MOVAR	_INTF
     0036                           1-  536     _00115_DS_:
                                    1-  537     	.line	112, "main.c"; 	INTF = 0;
     0036 02rr                      1-  538     	CLRR	_INTF
                                    1-  539     	.line	114, "main.c"; 	}
                                    1-  540     	BANKSEL	___sdcc_saved_stk01
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1-  541     	MOVR	___sdcc_saved_stk01,W
     0039 00rr                      1-  542     	MOVAR	STK01
                                    1-  543     	BANKSEL	___sdcc_saved_stk00
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  544     	MOVR	___sdcc_saved_stk00,W
     003C 00rr                      1-  545     	MOVAR	STK00
                                    1-  546     	BANKSEL	___sdcc_saved_fsr
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  547     	MOVR	___sdcc_saved_fsr,W
     003F 0084                      1-  548     	MOVAR	FSR
     0040 01rr                      1-  549     	MOVR	PSAVE,W
     0041 008A                      1-  550     	MOVAR	PCHBUF
     0042 0283                      1-  551     	CLRR	STATUS
     0043 15rr                      1-  552     	SWAPR	SSAVE,W
     0044 0083                      1-  553     	MOVAR	STATUS
     0045 15rr                      1-  554     	SWAPR	WSAVE,F
     0046 15rr                      1-  555     	SWAPR	WSAVE,W
     0047                           1-  556     END_OF_INTERRUPT:
     0047 0011                      1-  557     	RETIE	
                                    1-  559     ;--------------------------------------------------------
                                    1-  560     ; code
                                    1-  561     ;--------------------------------------------------------
                                    1-  562     ;***
                                    1-  563     ;  pBlock Stats: dbName = M
                                    1-  564     ;***
                                    1-  565     ;has an exit
                                    1-  566     ;functions called:
                                    1-  567     ;   _initSys
                                    1-  568     ;   _initAD
                                    1-  569     ;   _showRGB
                                    1-  570     ;   _checkBatAD
                                    1-  571     ;   _chrgCtr
                                    1-  572     ;   _keyCtr
                                    1-  573     ;   _workCtr
                                    1-  574     ;   _gotoSleep
                                    1-  575     ;   _initSys
                                    1-  576     ;   _initAD
                                    1-  577     ;   _showRGB
                                    1-  578     ;   _checkBatAD
                                    1-  579     ;   _chrgCtr
                                    1-  580     ;   _keyCtr
                                    1-  581     ;   _workCtr
                                    1-  582     ;   _gotoSleep
                                    1-  583     ;; Starting pCode block
                                    1-  584     .segment "code"; module=main, function=_main
     0000                           1-  586     _main:
                                    1-  587     ; 2 exit points
                                    1-  588     	.line	119, "main.c"; 	initSys();
                                    1-  589     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  590     	.line	120, "main.c"; 	initAD();
                                    1-  591     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  592     _00132_DS_:
                                    1-  593     	.line	124, "main.c"; 	CLRWDT();
     0002 0002                      1-  594     	clrwdt
                                    1-  595     	.line	125, "main.c"; 	if(ledFlag)
                                    1-  596     	BANKSEL	_ledFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 01rr                      1-  597     	MOVR	_ledFlag,W
     0005 0D03                      1-  598     	BTRSC	STATUS,2
                                    1-  599     	MGOTO	_00121_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  600     	.line	127, "main.c"; 	showRGB();
                                    1-  601     	MCALL	_showRGB
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  602     	MGOTO	_00122_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1-  603     _00121_DS_:
                                    1-  604     	.line	131, "main.c"; 	PORTB |= 0x01;
     0009 18rr                      1-  605     	BSR	_PORTB,0
                                    1-  606     	.line	132, "main.c"; 	PORTA |= 0x06;
     000A 2106                      1-  607     	MOVIA	0x06
     000B 11rr                      1-  608     	IORAR	_PORTA,F
     000C                           1-  609     _00122_DS_:
                                    1-  610     	.line	134, "main.c"; 	if(!IntFlag)
                                    1-  611     	BANKSEL	_IntFlag
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  612     	MOVR	_IntFlag,W
     000E 0D03                      1-  613     	BTRSC	STATUS,2
                                    1-  614     	MGOTO	_00132_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  615     	.line	136, "main.c"; 	IntFlag = 0;  
     0010 02rr                      1-  616     	CLRR	_IntFlag
                                    1-  617     	.line	137, "main.c"; 	checkBatAD();
                                    1-  618     	MCALL	_checkBatAD
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  619     	.line	138, "main.c"; 	chrgCtr();
                                    1-  620     	MCALL	_chrgCtr
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  621     	.line	139, "main.c"; 	keyCtr();
                                    1-  622     	MCALL	_keyCtr
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  623     	.line	140, "main.c"; 	workCtr();
                                    1-  624     	MCALL	_workCtr
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  625     	.line	141, "main.c"; 	if((0x40 & PORTA) == 0 && keyCount == 0 && workStep == 0)
     0015 0Frr                      1-  626     	BTRSC	_PORTA,6
                                    1-  627     	MGOTO	_00132_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  628     	BANKSEL	_keyCount
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1-  629     	MOVR	_keyCount,W
     0019 0903                      1-  630     	BTRSS	STATUS,2
                                    1-  631     	MGOTO	_00132_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  632     	BANKSEL	_workStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1-  633     	MOVR	_workStep,W
     001D 0903                      1-  634     	BTRSS	STATUS,2
                                    1-  635     	MGOTO	_00132_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  636     	.line	143, "main.c"; 	if(++sleepTime > 200)
                                    1-  637     	BANKSEL	_sleepTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  638     	INCR	_sleepTime,F
                                    1-  639     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  640     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0021 21C9                      1-  641     	MOVIA	0xc9
     0022 04rr                      1-  642     	SUBAR	_sleepTime,W
     0023 0803                      1-  643     	BTRSS	STATUS,0
                                    1-  644     	MGOTO	_00132_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  645     	.line	144, "main.c"; 	gotoSleep();
                                    1-  646     	MCALL	_gotoSleep
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  647     	MGOTO	_00132_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  648     	.line	154, "main.c"; 	}
                                    1-  649     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1-  650     ; exit point of _main
                                    1-  652     ;***
                                    1-  653     ;  pBlock Stats: dbName = C
                                    1-  654     ;***
                                    1-  655     ;has an exit
                                    1-  656     ;functions called:
                                    1-  657     ;   _pwmStop
                                    1-  658     ;   _pwmStop
                                    1-  659     ;; Starting pCode block
                                    1-  660     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  662     _gotoSleep:
                                    1-  663     ; 2 exit points
                                    1-  664     	.line	724, "main.c"; 	count900s = 0;
                                    1-  665     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  666     	CLRR	_count900s
     0002 02rr                      1-  667     	CLRR	(_count900s + 1)
                                    1-  668     	.line	725, "main.c"; 	colorStep = 0;
                                    1-  669     	BANKSEL	_colorStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1-  670     	CLRR	_colorStep
                                    1-  671     	.line	726, "main.c"; 	ledFlag = 0;
                                    1-  672     	BANKSEL	_ledFlag
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1-  673     	CLRR	_ledFlag
                                    1-  674     	.line	727, "main.c"; 	sleepTime = 0;
                                    1-  675     	BANKSEL	_sleepTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  676     	CLRR	_sleepTime
                                    1-  677     	.line	729, "main.c"; 	pwmStop();
                                    1-  678     	MCALL	_pwmStop
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  679     	.line	730, "main.c"; 	PORTB = 0x01;
     000A 2101                      1-  680     	MOVIA	0x01
     000B 00rr                      1-  681     	MOVAR	_PORTB
                                    1-  682     	.line	731, "main.c"; 	PORTA = 0x06;
     000C 2106                      1-  683     	MOVIA	0x06
     000D 00rr                      1-  684     	MOVAR	_PORTA
                                    1-  685     	.line	732, "main.c"; 	workStep = 0;
                                    1-  686     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1-  687     	CLRR	_workStep
                                    1-  688     	.line	733, "main.c"; 	AWUCON = 0xC0;
     0010 21C0                      1-  689     	MOVIA	0xc0
     0011 00rr                      1-  690     	MOVAR	_AWUCON
                                    1-  691     	.line	734, "main.c"; 	BWUCON = 0x00;
     0012 02rr                      1-  692     	CLRR	_BWUCON
                                    1-  693     	.line	735, "main.c"; 	INTE =  C_INT_PABKey;
     0013 2102                      1-  694     	MOVIA	0x02
     0014 00rr                      1-  695     	MOVAR	_INTE
                                    1-  696     	.line	736, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0015 2118                      1-  697     	MOVIA	0x18
     0016 00rr                      1-  698     	MOVAR	_PCON
                                    1-  699     	.line	737, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0017 02rr                      1-  700     	CLRR	_INTF
                                    1-  701     	.line	738, "main.c"; 	CLRWDT();
     0018 0002                      1-  702     	clrwdt
                                    1-  703     	.line	739, "main.c"; 	ENI();
     0019 0004                      1-  704     	ENI
                                    1-  705     	.line	740, "main.c"; 	SLEEP();
     001A 0001                      1-  706     	sleep
                                    1-  707     	.line	741, "main.c"; 	AWUCON = 0x00;
     001B 02rr                      1-  708     	CLRR	_AWUCON
                                    1-  709     	.line	742, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     001C 2101                      1-  710     	MOVIA	0x01
     001D 00rr                      1-  711     	MOVAR	_INTE
                                    1-  712     	.line	743, "main.c"; 	INTF = 0;
     001E 02rr                      1-  713     	CLRR	_INTF
                                    1-  714     	.line	745, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001F 21B8                      1-  715     	MOVIA	0xb8
     0020 00rr                      1-  716     	MOVAR	_PCON
                                    1-  717     	.line	746, "main.c"; 	}
                                    1-  718     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1-  719     ; exit point of _gotoSleep
                                    1-  721     ;***
                                    1-  722     ;  pBlock Stats: dbName = C
                                    1-  723     ;***
                                    1-  724     ;has an exit
                                    1-  725     ;2 compiler assigned registers:
                                    1-  726     ;   r0x1029
                                    1-  727     ;   r0x102A
                                    1-  728     ;; Starting pCode block
                                    1-  729     .segment "code"; module=main, function=_delay
                                    1-  731     ;local variable name mapping:
     0000                           1-  734     _delay:
                                    1-  735     ; 2 exit points
                                    1-  736     	.line	716, "main.c"; 	void delay(u8t time)
                                    1-  737     	BANKSEL	r0x1029
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  738     	MOVAR	r0x1029
                                    1-  739     	.line	718, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  740     	BANKSEL	r0x102A
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  741     	CLRR	r0x102A
     0004                           1-  742     _00496_DS_:
                                    1-  743     	BANKSEL	r0x1029
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  744     	MOVR	r0x1029,W
                                    1-  745     	BANKSEL	r0x102A
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1-  746     	SUBAR	r0x102A,W
     0008 0C03                      1-  747     	BTRSC	STATUS,0
                                    1-  748     	MGOTO	_00498_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  749     	.line	719, "main.c"; 	NOP();
     000A 0000                      1-  750     	nop
                                    1-  751     	.line	718, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  752     	BANKSEL	r0x102A
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1-  753     	INCR	r0x102A,F
                                    1-  754     	MGOTO	_00496_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1-  755     _00498_DS_:
                                    1-  756     	.line	720, "main.c"; 	}
                                    1-  757     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1-  758     ; exit point of _delay
                                    1-  760     ;***
                                    1-  761     ;  pBlock Stats: dbName = C
                                    1-  762     ;***
                                    1-  763     ;has an exit
                                    1-  764     ;; Starting pCode block
                                    1-  765     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  767     _F_wait_eoc:
                                    1-  768     ; 2 exit points
     0000                           1-  769     _00489_DS_:
                                    1-  770     	.line	711, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  771     	BTRSS	_ADMDbits,5
                                    1-  772     	MGOTO	_00489_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  773     	.line	713, "main.c"; 	}
                                    1-  774     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  775     ; exit point of _F_wait_eoc
                                    1-  777     ;***
                                    1-  778     ;  pBlock Stats: dbName = C
                                    1-  779     ;***
                                    1-  780     ;has an exit
                                    1-  781     ;functions called:
                                    1-  782     ;   _delay
                                    1-  783     ;   _F_wait_eoc
                                    1-  784     ;   _delay
                                    1-  785     ;   _F_wait_eoc
                                    1-  786     ;6 compiler assigned registers:
                                    1-  787     ;   r0x102B
                                    1-  788     ;   r0x102C
                                    1-  789     ;   r0x102D
                                    1-  790     ;   r0x102E
                                    1-  791     ;   r0x102F
                                    1-  792     ;   r0x1030
                                    1-  793     ;; Starting pCode block
                                    1-  794     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1-  796     ;local variable name mapping:
     0000                           1-  799     _F_AIN1_Convert:
                                    1-  800     ; 2 exit points
                                    1-  801     	.line	694, "main.c"; 	void F_AIN1_Convert(char count)
                                    1-  802     	BANKSEL	r0x102B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  803     	MOVAR	r0x102B
                                    1-  804     	.line	696, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1-  805     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  806     	CLRR	_R_AIN1_DATA_LB
                                    1-  807     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  808     	CLRR	_R_AIN1_DATA
     0006 02rr                      1-  809     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  810     	.line	698, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  811     	MOVIA	0x94
     0008 00rr                      1-  812     	MOVAR	_ADMD
                                    1-  813     	.line	699, "main.c"; 	delay(200);	
     0009 21C8                      1-  814     	MOVIA	0xc8
                                    1-  815     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  816     	.line	700, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  817     	MOVIA	0x01
                                    1-  818     	BANKSEL	r0x102C
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  819     	MOVAR	r0x102C
     000E                           1-  820     _00482_DS_:
                                    1-  821     	BANKSEL	r0x102C
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  822     	MOVR	r0x102C,W
                                    1-  823     	BANKSEL	r0x102B
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  824     	SUBAR	r0x102B,W
     0012 0803                      1-  825     	BTRSS	STATUS,0
                                    1-  826     	MGOTO	_00484_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  827     	.line	702, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  828     	BSR	_ADMDbits,6
                                    1-  829     	.line	703, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  830     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  831     	.line	704, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  832     	MOVIA	0x0f
     0017 10rr                      1-  833     	ANDAR	_ADR,W
                                    1-  834     ;;3	MOVAR	r0x102D
                                    1-  835     	BANKSEL	_R_AIN1_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  836     	ADDAR	_R_AIN1_DATA_LB,F
                                    1-  837     	.line	705, "main.c"; 	R_AIN1_DATA    += ADD; 
     001A 01rr                      1-  838     	MOVR	_ADD,W
                                    1-  839     	BANKSEL	r0x102D
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  840     	MOVAR	r0x102D
                                    1-  841     ;;1	CLRR	r0x102E
                                    1-  842     ;;102	MOVR	r0x102D,W
                                    1-  843     ;;100	MOVAR	r0x102F
     001D 2100                      1-  844     	MOVIA	0x00
                                    1-  845     	BANKSEL	r0x1030
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  846     	MOVAR	r0x1030
                                    1-  847     ;;101	MOVR	r0x102F,W
                                    1-  848     	BANKSEL	r0x102D
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  849     	MOVR	r0x102D,W
                                    1-  850     	BANKSEL	_R_AIN1_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  851     	ADDAR	_R_AIN1_DATA,F
                                    1-  852     	BANKSEL	r0x1030
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  853     	MOVR	r0x1030,W
     0026 0C03                      1-  854     	BTRSC	STATUS,0
     0027 05rr                      1-  855     	INCR	r0x1030,W
     0028 0D03                      1-  856     	BTRSC	STATUS,2
                                    1-  857     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  858     	BANKSEL	_R_AIN1_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  859     	ADDAR	(_R_AIN1_DATA + 1),F
     002C                           1-  860     _00001_DS_:
                                    1-  861     	.line	700, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  862     	BANKSEL	r0x102C
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  863     	INCR	r0x102C,F
                                    1-  864     	MGOTO	_00482_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  865     _00484_DS_:
                                    1-  866     	.line	707, "main.c"; 	}
                                    1-  867     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  868     ; exit point of _F_AIN1_Convert
                                    1-  870     ;***
                                    1-  871     ;  pBlock Stats: dbName = C
                                    1-  872     ;***
                                    1-  873     ;has an exit
                                    1-  874     ;functions called:
                                    1-  875     ;   _F_AIN1_Convert
                                    1-  876     ;   _F_AIN1_Convert
                                    1-  877     ;4 compiler assigned registers:
                                    1-  878     ;   r0x1031
                                    1-  879     ;   r0x1032
                                    1-  880     ;   r0x1033
                                    1-  881     ;   r0x1034
                                    1-  882     ;; Starting pCode block
                                    1-  883     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  885     _checkBatAD:
                                    1-  886     ; 2 exit points
                                    1-  887     	.line	665, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1-  888     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  889     	CLRR	_R_AIN1_DATA_LB
                                    1-  890     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  891     	CLRR	_R_AIN1_DATA
     0004 02rr                      1-  892     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  893     	.line	666, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  894     	MOVIA	0x08
                                    1-  895     	MCALL	_F_AIN1_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  896     	.line	667, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  897     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1-  898     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1-  899     	ANDIA	0xf0
     000A 00rr                      1-  900     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1-  901     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1-  902     	MOVAR	_R_AIN1_DATA
     000D 220F                      1-  903     	ANDIA	0x0f
     000E 11rr                      1-  904     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1-  905     	XORAR	_R_AIN1_DATA,F
                                    1-  906     	.line	668, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  907     	MOVIA	0xf0
                                    1-  908     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1-  909     	ANDAR	_R_AIN1_DATA_LB,F
                                    1-  910     	.line	669, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  911     	MOVR	_R_AIN1_DATA_LB,W
                                    1-  912     	BANKSEL	r0x1033
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  913     	MOVAR	r0x1033
                                    1-  914     ;;1	MOVAR	r0x1031
                                    1-  915     ;;1	CLRR	r0x1032
                                    1-  916     ;;99	MOVR	r0x1031,W
     0016 2100                      1-  917     	MOVIA	0x00
                                    1-  918     	BANKSEL	r0x1034
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  919     	MOVAR	r0x1034
                                    1-  920     	BANKSEL	r0x1033
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  921     	MOVR	r0x1033,W
                                    1-  922     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  923     	ADDAR	_R_AIN1_DATA,F
                                    1-  924     	BANKSEL	r0x1034
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  925     	MOVR	r0x1034,W
     001F 0C03                      1-  926     	BTRSC	STATUS,0
     0020 05rr                      1-  927     	INCR	r0x1034,W
     0021 0D03                      1-  928     	BTRSC	STATUS,2
                                    1-  929     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  930     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  931     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1-  932     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  933     _00002_DS_:
                                    1-  934     	.line	670, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1-  935     	BCR	STATUS,0
                                    1-  936     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1-  937     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1-  938     	RRR	_R_AIN1_DATA,F
                                    1-  939     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  940     	BCR	STATUS,0
     002A 13rr                      1-  941     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1-  942     	RRR	_R_AIN1_DATA,F
                                    1-  943     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  944     	BCR	STATUS,0
     002D 13rr                      1-  945     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1-  946     	RRR	_R_AIN1_DATA,F
                                    1-  947     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  948     ;;unsigned compare: left >= lit (0x5F6=1526), size=2
                                    1-  949     	.line	673, "main.c"; 	if(R_AIN1_DATA > 1525)
     002F 2105                      1-  950     	MOVIA	0x05
     0030 04rr                      1-  951     	SUBAR	(_R_AIN1_DATA + 1),W
     0031 0903                      1-  952     	BTRSS	STATUS,2
                                    1-  953     	MGOTO	_00474_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 21F6                      1-  954     	MOVIA	0xf6
     0034 04rr                      1-  955     	SUBAR	_R_AIN1_DATA,W
     0035                           1-  956     _00474_DS_:
     0035 0803                      1-  957     	BTRSS	STATUS,0
                                    1-  958     	MGOTO	_00461_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  959     	.line	676, "main.c"; 	lowCount = 0;
                                    1-  960     	BANKSEL	_lowCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1-  961     	CLRR	_lowCount
                                    1-  962     	MGOTO	_00463_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  963     ;;unsigned compare: left < lit (0x457=1111), size=2
     003A                           1-  964     _00461_DS_:
                                    1-  965     	.line	678, "main.c"; 	else if(R_AIN1_DATA < 1111)
     003A 2104                      1-  966     	MOVIA	0x04
                                    1-  967     	BANKSEL	_R_AIN1_DATA
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1-  968     	SUBAR	(_R_AIN1_DATA + 1),W
     003D 0903                      1-  969     	BTRSS	STATUS,2
                                    1-  970     	MGOTO	_00475_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 2157                      1-  971     	MOVIA	0x57
     0040 04rr                      1-  972     	SUBAR	_R_AIN1_DATA,W
     0041                           1-  973     _00475_DS_:
     0041 0C03                      1-  974     	BTRSC	STATUS,0
                                    1-  975     	MGOTO	_00458_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  976     	.line	680, "main.c"; 	if(++lowCount < 10)
                                    1-  977     	BANKSEL	_lowCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1-  978     	INCR	_lowCount,F
                                    1-  979     ;;unsigned compare: left < lit (0xA=10), size=1
     0045 210A                      1-  980     	MOVIA	0x0a
     0046 04rr                      1-  981     	SUBAR	_lowCount,W
     0047 0803                      1-  982     	BTRSS	STATUS,0
                                    1-  983     	.line	681, "main.c"; 	return;
                                    1-  984     	MGOTO	_00463_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  985     	.line	682, "main.c"; 	lowCount = 10;
     0049 210A                      1-  986     	MOVIA	0x0a
     004A 00rr                      1-  987     	MOVAR	_lowCount
                                    1-  988     	.line	683, "main.c"; 	R_AIN1_DATA = 1111;
     004B 2157                      1-  989     	MOVIA	0x57
                                    1-  990     	BANKSEL	_R_AIN1_DATA
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 00rr                      1-  991     	MOVAR	_R_AIN1_DATA
     004E 2104                      1-  992     	MOVIA	0x04
     004F 00rr                      1-  993     	MOVAR	(_R_AIN1_DATA + 1)
                                    1-  994     	MGOTO	_00463_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1-  995     _00458_DS_:
                                    1-  996     	.line	687, "main.c"; 	lowCount = 0;
                                    1-  997     	BANKSEL	_lowCount
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1-  998     	CLRR	_lowCount
     0053                           1-  999     _00463_DS_:
                                    1- 1000     	.line	691, "main.c"; 	}
                                    1- 1001     	RETURN	
     0053 0010                      3-   40 m1      ret
                                    1- 1002     ; exit point of _checkBatAD
                                    1- 1004     ;***
                                    1- 1005     ;  pBlock Stats: dbName = C
                                    1- 1006     ;***
                                    1- 1007     ;has an exit
                                    1- 1008     ;functions called:
                                    1- 1009     ;   _delay
                                    1- 1010     ;   _delay
                                    1- 1011     ;; Starting pCode block
                                    1- 1012     .segment "code"; module=main, function=_initAD
     0000                           1- 1014     _initAD:
                                    1- 1015     ; 2 exit points
                                    1- 1016     	.line	641, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA1 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2181                      1- 1017     	MOVIA	0x81
     0001 00rr                      1- 1018     	MOVAR	_ADMD
                                    1- 1019     	.line	646, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1020     	CLRR	_ADVREFH
                                    1- 1021     	.line	651, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1022     	MOVIA	0x10
     0004 00rr                      1- 1023     	MOVAR	_ADR
                                    1- 1024     	.line	653, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1025     	MOVIA	0x03
     0006 00rr                      1- 1026     	MOVAR	_ADCR
                                    1- 1027     	.line	656, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1028     	BSR	_ADMDbits,4
                                    1- 1029     	.line	657, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1030     	MOVIA	0x64
                                    1- 1031     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1032     	.line	660, "main.c"; 	}
                                    1- 1033     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1034     ; exit point of _initAD
                                    1- 1036     ;***
                                    1- 1037     ;  pBlock Stats: dbName = C
                                    1- 1038     ;***
                                    1- 1039     ;has an exit
                                    1- 1040     ;; Starting pCode block
                                    1- 1041     .segment "code"; module=main, function=_initSys
     0000                           1- 1043     _initSys:
                                    1- 1044     ; 2 exit points
                                    1- 1045     	.line	611, "main.c"; 	DISI();
     0000 0013                      1- 1046     	DISI
                                    1- 1047     	.line	612, "main.c"; 	IOSTA = C_PA7_Input | C_PA6_Input | C_PA4_Input  ;
     0001 21D0                      1- 1048     	MOVIA	0xd0
     0002 000r                      1- 1049     	IOST	_IOSTA
                                    1- 1050     	.line	613, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 1051     	CLRA	
     0004 000r                      1- 1052     	IOST	_IOSTB
                                    1- 1053     	.line	614, "main.c"; 	PORTB = 0x01;
     0005 2101                      1- 1054     	MOVIA	0x01
     0006 00rr                      1- 1055     	MOVAR	_PORTB
                                    1- 1056     	.line	615, "main.c"; 	PORTA = 0x06;
     0007 2106                      1- 1057     	MOVIA	0x06
     0008 00rr                      1- 1058     	MOVAR	_PORTA
                                    1- 1059     	.line	616, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 1060     	MOVIA	0x7f
     000A 000r                      1- 1061     	IOST	_APHCON
                                    1- 1062     	.line	617, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 1063     	MOVIA	0xff
     000C 00rr                      1- 1064     	MOVAR	_BPHCON
                                    1- 1065     	.line	618, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 1066     	MOVAR	_ABPLCON
                                    1- 1067     	.line	620, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 1068     	MOVIA	0x01
     000F 00rr                      1- 1069     	MOVAR	_INTE
                                    1- 1070     	.line	622, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 1071     	CLRA	
     0011 000r                      1- 1072     	IOST	_PCON1
                                    1- 1073     	.line	624, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 1074     	MOVIA	0x37
     0013 00rr                      1- 1075     	MOVAR	_TMR0
                                    1- 1076     	.line	625, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 1077     	MOVIA	0x01
     0015 0003                      1- 1078     	T0MD	
                                    1- 1079     	.line	627, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 1080     	IOST	_PCON1
                                    1- 1081     	.line	630, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 1082     	MOVIA	0x98
     0018 00rr                      1- 1083     	MOVAR	_PCON
                                    1- 1084     	.line	633, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 1085     	MOVIA	0x01
     001A 000r                      1- 1086     	IOST	_PCON1
                                    1- 1087     	.line	634, "main.c"; 	ENI();
     001B 0004                      1- 1088     	ENI
                                    1- 1089     	.line	635, "main.c"; 	}
                                    1- 1090     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 1091     ; exit point of _initSys
                                    1- 1093     ;***
                                    1- 1094     ;  pBlock Stats: dbName = C
                                    1- 1095     ;***
                                    1- 1096     ;has an exit
                                    1- 1097     ;; Starting pCode block
                                    1- 1098     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1100     _pwmStop:
                                    1- 1101     ; 2 exit points
                                    1- 1102     	.line	605, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 1103     	CLRA	
     0001 00rr                      1- 1104     	SFUN	_T1CR1
                                    1- 1105     	.line	606, "main.c"; 	}
                                    1- 1106     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1107     ; exit point of _pwmStop
                                    1- 1109     ;***
                                    1- 1110     ;  pBlock Stats: dbName = C
                                    1- 1111     ;***
                                    1- 1112     ;has an exit
                                    1- 1113     ;1 compiler assigned register :
                                    1- 1114     ;   r0x1035
                                    1- 1115     ;; Starting pCode block
                                    1- 1116     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1118     _pwmInit:
                                    1- 1119     ; 2 exit points
                                    1- 1120     	.line	593, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 1121     	SFUNR	_T1CR1
                                    1- 1122     	BANKSEL	r0x1035
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1123     	MOVAR	r0x1035
     0003 0Frr                      1- 1124     	BTRSC	r0x1035,7
                                    1- 1125     	.line	594, "main.c"; 	return;
                                    1- 1126     	MGOTO	_00438_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1127     	.line	596, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1128     	CLRR	_TMRH
                                    1- 1129     	.line	597, "main.c"; 	TMR1 = 128;	
     0006 2180                      1- 1130     	MOVIA	0x80
     0007 00rr                      1- 1131     	SFUN	_TMR1
                                    1- 1132     	.line	599, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 1133     	CLRA	
     0009 00rr                      1- 1134     	SFUN	_T1CR2
                                    1- 1135     	.line	600, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 1136     	MOVIA	0x83
     000B 00rr                      1- 1137     	SFUN	_T1CR1
     000C                           1- 1138     _00438_DS_:
                                    1- 1139     	.line	601, "main.c"; 	}
                                    1- 1140     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1141     ; exit point of _pwmInit
                                    1- 1143     ;***
                                    1- 1144     ;  pBlock Stats: dbName = C
                                    1- 1145     ;***
                                    1- 1146     ;has an exit
                                    1- 1147     ;; Starting pCode block
                                    1- 1148     .segment "code"; module=main, function=_rainbow
     0000                           1- 1150     _rainbow:
                                    1- 1151     ; 2 exit points
                                    1- 1152     	.line	512, "main.c"; 	if(red > lastRed)
                                    1- 1153     	BANKSEL	_red
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1154     	MOVR	_red,W
                                    1- 1155     	BANKSEL	_lastRed
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1156     	SUBAR	_lastRed,W
     0004 0C03                      1- 1157     	BTRSC	STATUS,0
                                    1- 1158     	MGOTO	_00003_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1159     	.line	513, "main.c"; 	red--;
                                    1- 1160     	BANKSEL	_red
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 06rr                      1- 1161     	DECR	_red,F
     0008                           1- 1162     _00003_DS_:
                                    1- 1163     	.line	514, "main.c"; 	if(green > lastGreen)
                                    1- 1164     	BANKSEL	_green
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1165     	MOVR	_green,W
                                    1- 1166     	BANKSEL	_lastGreen
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 1167     	SUBAR	_lastGreen,W
     000C 0C03                      1- 1168     	BTRSC	STATUS,0
                                    1- 1169     	MGOTO	_00004_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1170     	.line	515, "main.c"; 	green--;
                                    1- 1171     	BANKSEL	_green
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1- 1172     	DECR	_green,F
     0010                           1- 1173     _00004_DS_:
                                    1- 1174     	.line	516, "main.c"; 	if(blue > lastBlue)
                                    1- 1175     	BANKSEL	_blue
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1176     	MOVR	_blue,W
                                    1- 1177     	BANKSEL	_lastBlue
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1178     	SUBAR	_lastBlue,W
     0014 0C03                      1- 1179     	BTRSC	STATUS,0
                                    1- 1180     	MGOTO	_00005_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1181     	.line	517, "main.c"; 	blue--;
                                    1- 1182     	BANKSEL	_blue
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 06rr                      1- 1183     	DECR	_blue,F
     0018                           1- 1184     _00005_DS_:
                                    1- 1185     	.line	518, "main.c"; 	if(red < lastRed)
                                    1- 1186     	BANKSEL	_lastRed
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1- 1187     	MOVR	_lastRed,W
                                    1- 1188     	BANKSEL	_red
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 04rr                      1- 1189     	SUBAR	_red,W
     001C 0803                      1- 1190     	BTRSS	STATUS,0
                                    1- 1191     	.line	519, "main.c"; 	red++;
     001D 05rr                      1- 1192     	INCR	_red,F
                                    1- 1193     	.line	520, "main.c"; 	if(green < lastGreen)
                                    1- 1194     	BANKSEL	_lastGreen
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 1195     	MOVR	_lastGreen,W
                                    1- 1196     	BANKSEL	_green
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 1197     	SUBAR	_green,W
     0022 0803                      1- 1198     	BTRSS	STATUS,0
                                    1- 1199     	.line	521, "main.c"; 	green++;
     0023 05rr                      1- 1200     	INCR	_green,F
                                    1- 1201     	.line	522, "main.c"; 	if(blue < lastBlue)
                                    1- 1202     	BANKSEL	_lastBlue
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1203     	MOVR	_lastBlue,W
                                    1- 1204     	BANKSEL	_blue
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 04rr                      1- 1205     	SUBAR	_blue,W
     0028 0803                      1- 1206     	BTRSS	STATUS,0
                                    1- 1207     	.line	523, "main.c"; 	blue++;
     0029 05rr                      1- 1208     	INCR	_blue,F
                                    1- 1209     	.line	524, "main.c"; 	if(delayTime > 0)
                                    1- 1210     	BANKSEL	_delayTime
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 1211     	MOVR	_delayTime,W
     002C 0D03                      1- 1212     	BTRSC	STATUS,2
                                    1- 1213     	MGOTO	_00399_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1214     	.line	526, "main.c"; 	delayTime--;
     002E 06rr                      1- 1215     	DECR	_delayTime,F
                                    1- 1216     	.line	527, "main.c"; 	return;
                                    1- 1217     	MGOTO	_00431_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 1218     _00399_DS_:
                                    1- 1219     	.line	529, "main.c"; 	if(colorStep == 1)
                                    1- 1220     	BANKSEL	_colorStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1221     	MOVR	_colorStep,W
     0032 2401                      1- 1222     	XORIA	0x01
     0033 0903                      1- 1223     	BTRSS	STATUS,2
                                    1- 1224     	MGOTO	_00421_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1225     	.line	531, "main.c"; 	lastRed = 255;
     0035 21FF                      1- 1226     	MOVIA	0xff
                                    1- 1227     	BANKSEL	_lastRed
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1228     	MOVAR	_lastRed
                                    1- 1229     	.line	532, "main.c"; 	lastGreen = 0;
                                    1- 1230     	BANKSEL	_lastGreen
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 1231     	CLRR	_lastGreen
                                    1- 1232     	.line	533, "main.c"; 	lastBlue = 0;
                                    1- 1233     	BANKSEL	_lastBlue
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 02rr                      1- 1234     	CLRR	_lastBlue
                                    1- 1235     	MGOTO	_00422_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1- 1236     _00421_DS_:
                                    1- 1237     	.line	536, "main.c"; 	else if(colorStep == 2)
                                    1- 1238     	BANKSEL	_colorStep
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1- 1239     	MOVR	_colorStep,W
     003F 2402                      1- 1240     	XORIA	0x02
     0040 0903                      1- 1241     	BTRSS	STATUS,2
                                    1- 1242     	MGOTO	_00418_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1243     	.line	538, "main.c"; 	lastRed = 255;
     0042 21FF                      1- 1244     	MOVIA	0xff
                                    1- 1245     	BANKSEL	_lastRed
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1246     	MOVAR	_lastRed
                                    1- 1247     	.line	539, "main.c"; 	lastGreen = 255;
                                    1- 1248     	BANKSEL	_lastGreen
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1249     	MOVAR	_lastGreen
                                    1- 1250     	.line	540, "main.c"; 	lastBlue = 0;
                                    1- 1251     	BANKSEL	_lastBlue
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1252     	CLRR	_lastBlue
                                    1- 1253     	MGOTO	_00422_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A                           1- 1254     _00418_DS_:
                                    1- 1255     	.line	542, "main.c"; 	else if(colorStep == 3)
                                    1- 1256     	BANKSEL	_colorStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 1257     	MOVR	_colorStep,W
     004C 2403                      1- 1258     	XORIA	0x03
     004D 0903                      1- 1259     	BTRSS	STATUS,2
                                    1- 1260     	MGOTO	_00415_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1261     	.line	544, "main.c"; 	lastRed = 0;
                                    1- 1262     	BANKSEL	_lastRed
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1- 1263     	CLRR	_lastRed
                                    1- 1264     	.line	545, "main.c"; 	lastGreen = 255;
     0051 21FF                      1- 1265     	MOVIA	0xff
                                    1- 1266     	BANKSEL	_lastGreen
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 1267     	MOVAR	_lastGreen
                                    1- 1268     	.line	546, "main.c"; 	lastBlue = 0;
                                    1- 1269     	BANKSEL	_lastBlue
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1- 1270     	CLRR	_lastBlue
                                    1- 1271     	MGOTO	_00422_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 1272     _00415_DS_:
                                    1- 1273     	.line	548, "main.c"; 	else if(colorStep == 4)
                                    1- 1274     	BANKSEL	_colorStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 1275     	MOVR	_colorStep,W
     0059 2404                      1- 1276     	XORIA	0x04
     005A 0903                      1- 1277     	BTRSS	STATUS,2
                                    1- 1278     	MGOTO	_00412_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1279     	.line	550, "main.c"; 	lastRed = 0;
                                    1- 1280     	BANKSEL	_lastRed
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 1281     	CLRR	_lastRed
                                    1- 1282     	.line	551, "main.c"; 	lastGreen = 0;
                                    1- 1283     	BANKSEL	_lastGreen
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1284     	CLRR	_lastGreen
                                    1- 1285     	.line	552, "main.c"; 	lastBlue = 255;
     0060 21FF                      1- 1286     	MOVIA	0xff
                                    1- 1287     	BANKSEL	_lastBlue
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 1288     	MOVAR	_lastBlue
                                    1- 1289     	MGOTO	_00422_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064                           1- 1290     _00412_DS_:
                                    1- 1291     	.line	554, "main.c"; 	else if(colorStep == 5)
                                    1- 1292     	BANKSEL	_colorStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1293     	MOVR	_colorStep,W
     0066 2405                      1- 1294     	XORIA	0x05
     0067 0903                      1- 1295     	BTRSS	STATUS,2
                                    1- 1296     	MGOTO	_00409_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1297     	.line	556, "main.c"; 	lastRed = 255;
     0069 21FF                      1- 1298     	MOVIA	0xff
                                    1- 1299     	BANKSEL	_lastRed
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 00rr                      1- 1300     	MOVAR	_lastRed
                                    1- 1301     	.line	557, "main.c"; 	lastGreen = 0;
                                    1- 1302     	BANKSEL	_lastGreen
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 02rr                      1- 1303     	CLRR	_lastGreen
                                    1- 1304     	.line	558, "main.c"; 	lastBlue = 255;
     006E 21FF                      1- 1305     	MOVIA	0xff
                                    1- 1306     	BANKSEL	_lastBlue
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 1307     	MOVAR	_lastBlue
                                    1- 1308     	MGOTO	_00422_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 1309     _00409_DS_:
                                    1- 1310     	.line	560, "main.c"; 	else if(colorStep == 6)
                                    1- 1311     	BANKSEL	_colorStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 1312     	MOVR	_colorStep,W
     0074 2406                      1- 1313     	XORIA	0x06
     0075 0903                      1- 1314     	BTRSS	STATUS,2
                                    1- 1315     	MGOTO	_00406_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1316     	.line	562, "main.c"; 	lastRed = 255;
     0077 21FF                      1- 1317     	MOVIA	0xff
                                    1- 1318     	BANKSEL	_lastRed
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 1319     	MOVAR	_lastRed
                                    1- 1320     	.line	563, "main.c"; 	lastGreen = 0;
                                    1- 1321     	BANKSEL	_lastGreen
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 02rr                      1- 1322     	CLRR	_lastGreen
                                    1- 1323     	.line	564, "main.c"; 	lastBlue = 0;
                                    1- 1324     	BANKSEL	_lastBlue
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 02rr                      1- 1325     	CLRR	_lastBlue
                                    1- 1326     	MGOTO	_00422_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F                           1- 1327     _00406_DS_:
                                    1- 1328     	.line	566, "main.c"; 	else if(colorStep == 7)
                                    1- 1329     	BANKSEL	_colorStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 1330     	MOVR	_colorStep,W
     0081 2407                      1- 1331     	XORIA	0x07
     0082 0903                      1- 1332     	BTRSS	STATUS,2
                                    1- 1333     	MGOTO	_00403_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1334     	.line	568, "main.c"; 	lastRed = 255;
     0084 21FF                      1- 1335     	MOVIA	0xff
                                    1- 1336     	BANKSEL	_lastRed
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1337     	MOVAR	_lastRed
                                    1- 1338     	.line	569, "main.c"; 	lastGreen = 255;
                                    1- 1339     	BANKSEL	_lastGreen
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1340     	MOVAR	_lastGreen
                                    1- 1341     	.line	570, "main.c"; 	lastBlue = 0;
                                    1- 1342     	BANKSEL	_lastBlue
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 02rr                      1- 1343     	CLRR	_lastBlue
                                    1- 1344     	MGOTO	_00422_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
     008C                           1- 1345     _00403_DS_:
                                    1- 1346     	.line	572, "main.c"; 	else if(colorStep == 8)
                                    1- 1347     	BANKSEL	_colorStep
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1- 1348     	MOVR	_colorStep,W
     008E 2408                      1- 1349     	XORIA	0x08
     008F 0903                      1- 1350     	BTRSS	STATUS,2
                                    1- 1351     	MGOTO	_00422_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1352     	.line	574, "main.c"; 	lastRed = 0;
                                    1- 1353     	BANKSEL	_lastRed
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 02rr                      1- 1354     	CLRR	_lastRed
                                    1- 1355     	.line	575, "main.c"; 	lastGreen = 255;
     0093 21FF                      1- 1356     	MOVIA	0xff
                                    1- 1357     	BANKSEL	_lastGreen
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 00rr                      1- 1358     	MOVAR	_lastGreen
                                    1- 1359     	.line	576, "main.c"; 	lastBlue = 0;
                                    1- 1360     	BANKSEL	_lastBlue
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 02rr                      1- 1361     	CLRR	_lastBlue
     0098                           1- 1362     _00422_DS_:
                                    1- 1363     	.line	580, "main.c"; 	if(red == lastRed && blue == lastBlue && green == lastGreen)
                                    1- 1364     	BANKSEL	_lastRed
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1365     	MOVR	_lastRed,W
                                    1- 1366     	BANKSEL	_red
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 12rr                      1- 1367     	XORAR	_red,W
     009C 0903                      1- 1368     	BTRSS	STATUS,2
                                    1- 1369     	MGOTO	_00431_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1370     	BANKSEL	_lastBlue
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 01rr                      1- 1371     	MOVR	_lastBlue,W
                                    1- 1372     	BANKSEL	_blue
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 12rr                      1- 1373     	XORAR	_blue,W
     00A2 0903                      1- 1374     	BTRSS	STATUS,2
                                    1- 1375     	MGOTO	_00431_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1376     	BANKSEL	_lastGreen
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1377     	MOVR	_lastGreen,W
                                    1- 1378     	BANKSEL	_green
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 12rr                      1- 1379     	XORAR	_green,W
     00A8 0903                      1- 1380     	BTRSS	STATUS,2
                                    1- 1381     	MGOTO	_00431_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1382     	.line	582, "main.c"; 	if(++colorStep > 8)
                                    1- 1383     	BANKSEL	_colorStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 05rr                      1- 1384     	INCR	_colorStep,F
                                    1- 1385     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1386     ;;unsigned compare: left >= lit (0x9=9), size=1
     00AC 2109                      1- 1387     	MOVIA	0x09
     00AD 04rr                      1- 1388     	SUBAR	_colorStep,W
     00AE 0803                      1- 1389     	BTRSS	STATUS,0
                                    1- 1390     	MGOTO	_00424_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1391     	.line	584, "main.c"; 	colorStep = 4;
     00B0 2104                      1- 1392     	MOVIA	0x04
     00B1 00rr                      1- 1393     	MOVAR	_colorStep
     00B2                           1- 1394     _00424_DS_:
                                    1- 1395     	.line	586, "main.c"; 	if(delayTime == 0)
                                    1- 1396     	BANKSEL	_delayTime
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 1397     	MOVR	_delayTime,W
     00B4 0903                      1- 1398     	BTRSS	STATUS,2
                                    1- 1399     	MGOTO	_00431_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1400     	.line	587, "main.c"; 	delayTime = 90;
     00B6 215A                      1- 1401     	MOVIA	0x5a
     00B7 00rr                      1- 1402     	MOVAR	_delayTime
     00B8                           1- 1403     _00431_DS_:
                                    1- 1404     	.line	589, "main.c"; 	}
                                    1- 1405     	RETURN	
     00B8 0010                      3-   40 m1      ret
                                    1- 1406     ; exit point of _rainbow
                                    1- 1408     ;***
                                    1- 1409     ;  pBlock Stats: dbName = C
                                    1- 1410     ;***
                                    1- 1411     ;has an exit
                                    1- 1412     ;; Starting pCode block
                                    1- 1413     .segment "code"; module=main, function=_ledOff
     0000                           1- 1415     _ledOff:
                                    1- 1416     ; 2 exit points
                                    1- 1417     	.line	506, "main.c"; 	PORTB &= 0XF9;
     0000 21F9                      1- 1418     	MOVIA	0xf9
     0001 10rr                      1- 1419     	ANDAR	_PORTB,F
                                    1- 1420     	.line	507, "main.c"; 	}
                                    1- 1421     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1422     ; exit point of _ledOff
                                    1- 1424     ;***
                                    1- 1425     ;  pBlock Stats: dbName = C
                                    1- 1426     ;***
                                    1- 1427     ;has an exit
                                    1- 1428     ;; Starting pCode block
                                    1- 1429     .segment "code"; module=main, function=_ledGreen
     0000                           1- 1431     _ledGreen:
                                    1- 1432     ; 2 exit points
                                    1- 1433     	.line	500, "main.c"; 	PORTB |= 0X02;
     0000 18rr                      1- 1434     	BSR	_PORTB,1
                                    1- 1435     	.line	501, "main.c"; 	PORTB &= 0XFB;
     0001 1Drr                      1- 1436     	BCR	_PORTB,2
                                    1- 1437     	.line	502, "main.c"; 	}
                                    1- 1438     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1439     ; exit point of _ledGreen
                                    1- 1441     ;***
                                    1- 1442     ;  pBlock Stats: dbName = C
                                    1- 1443     ;***
                                    1- 1444     ;has an exit
                                    1- 1445     ;; Starting pCode block
                                    1- 1446     .segment "code"; module=main, function=_ledRed
     0000                           1- 1448     _ledRed:
                                    1- 1449     ; 2 exit points
                                    1- 1450     	.line	494, "main.c"; 	PORTB |= 0X04;
     0000 19rr                      1- 1451     	BSR	_PORTB,2
                                    1- 1452     	.line	495, "main.c"; 	PORTB &= 0XFD;
     0001 1Crr                      1- 1453     	BCR	_PORTB,1
                                    1- 1454     	.line	496, "main.c"; 	}
                                    1- 1455     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1456     ; exit point of _ledRed
                                    1- 1458     ;***
                                    1- 1459     ;  pBlock Stats: dbName = C
                                    1- 1460     ;***
                                    1- 1461     ;5 compiler assigned registers:
                                    1- 1462     ;   r0x1036
                                    1- 1463     ;   STK00
                                    1- 1464     ;   r0x1037
                                    1- 1465     ;   STK01
                                    1- 1466     ;   r0x1038
                                    1- 1467     ;; Starting pCode block
                                    1- 1468     .segment "code"; module=main, function=_breath
                                    1- 1470     ;local variable name mapping:
     0000                           1- 1474     _breath:
                                    1- 1475     ; 0 exit points
                                    1- 1476     	.line	439, "main.c"; 	void breath(u8t color1,u8t color2,u8t color3)
                                    1- 1477     	BANKSEL	r0x1036
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1478     	MOVAR	r0x1036
     0002 01rr                      1- 1479     	MOVR	STK00,W
                                    1- 1480     	BANKSEL	r0x1037
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1481     	MOVAR	r0x1037
     0005 01rr                      1- 1482     	MOVR	STK01,W
                                    1- 1483     	BANKSEL	r0x1038
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1484     	MOVAR	r0x1038
                                    1- 1485     	.line	441, "main.c"; 	if(++count10ms >= 3)
                                    1- 1486     	BANKSEL	_count10ms
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 05rr                      1- 1487     	INCR	_count10ms,F
                                    1- 1488     ;;unsigned compare: left < lit (0x3=3), size=1
     000A 2103                      1- 1489     	MOVIA	0x03
     000B 04rr                      1- 1490     	SUBAR	_count10ms,W
     000C 0803                      1- 1491     	BTRSS	STATUS,0
                                    1- 1492     	MGOTO	_00369_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1493     	.line	443, "main.c"; 	count10ms = 0;
     000E 02rr                      1- 1494     	CLRR	_count10ms
                                    1- 1495     	.line	444, "main.c"; 	if(breathFalg == 0 && ++breathTime > 180)
                                    1- 1496     	BANKSEL	_breathFalg
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1497     	MOVR	_breathFalg,W
     0011 0903                      1- 1498     	BTRSS	STATUS,2
                                    1- 1499     	MGOTO	_00343_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1500     	BANKSEL	_breathTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 05rr                      1- 1501     	INCR	_breathTime,F
                                    1- 1502     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1503     ;;unsigned compare: left >= lit (0xB5=181), size=1
     0015 21B5                      1- 1504     	MOVIA	0xb5
     0016 04rr                      1- 1505     	SUBAR	_breathTime,W
     0017 0803                      1- 1506     	BTRSS	STATUS,0
                                    1- 1507     	MGOTO	_00343_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1508     	.line	446, "main.c"; 	breathTime = 180;
     0019 21B4                      1- 1509     	MOVIA	0xb4
     001A 00rr                      1- 1510     	MOVAR	_breathTime
                                    1- 1511     	.line	447, "main.c"; 	red = color1;
                                    1- 1512     	BANKSEL	r0x1036
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1513     	MOVR	r0x1036,W
                                    1- 1514     	BANKSEL	_red
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1515     	MOVAR	_red
                                    1- 1516     	.line	448, "main.c"; 	green = color2;
                                    1- 1517     	BANKSEL	r0x1037
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1518     	MOVR	r0x1037,W
                                    1- 1519     	BANKSEL	_green
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 1520     	MOVAR	_green
                                    1- 1521     	.line	449, "main.c"; 	blue = color3;
                                    1- 1522     	BANKSEL	r0x1038
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 1523     	MOVR	r0x1038,W
                                    1- 1524     	BANKSEL	_blue
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 1525     	MOVAR	_blue
                                    1- 1526     	.line	450, "main.c"; 	if(++breathWaitTime > 40)
                                    1- 1527     	BANKSEL	_breathWaitTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 05rr                      1- 1528     	INCR	_breathWaitTime,F
                                    1- 1529     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1530     ;;unsigned compare: left >= lit (0x29=41), size=1
     0029 2129                      1- 1531     	MOVIA	0x29
     002A 04rr                      1- 1532     	SUBAR	_breathWaitTime,W
     002B 0803                      1- 1533     	BTRSS	STATUS,0
                                    1- 1534     	MGOTO	_00343_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1535     	.line	452, "main.c"; 	breathFalg = 1;
     002D 2101                      1- 1536     	MOVIA	0x01
                                    1- 1537     	BANKSEL	_breathFalg
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 1538     	MOVAR	_breathFalg
                                    1- 1539     	.line	453, "main.c"; 	breathWaitTime = 0;
                                    1- 1540     	BANKSEL	_breathWaitTime
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1- 1541     	CLRR	_breathWaitTime
     0032                           1- 1542     _00343_DS_:
                                    1- 1543     	.line	456, "main.c"; 	if(breathFalg == 1)
                                    1- 1544     	BANKSEL	_breathFalg
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 1545     	MOVR	_breathFalg,W
     0034 2401                      1- 1546     	XORIA	0x01
     0035 0903                      1- 1547     	BTRSS	STATUS,2
                                    1- 1548     	MGOTO	_00351_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1549     	.line	458, "main.c"; 	if(breathTime > 0)
                                    1- 1550     	BANKSEL	_breathTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 1551     	MOVR	_breathTime,W
     0039 0D03                      1- 1552     	BTRSC	STATUS,2
                                    1- 1553     	MGOTO	_00348_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1554     	.line	459, "main.c"; 	--breathTime;
     003B 06rr                      1- 1555     	DECR	_breathTime,F
                                    1- 1556     	MGOTO	_00351_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1- 1557     _00348_DS_:
                                    1- 1558     	.line	462, "main.c"; 	if(++breathWaitTime > 40)
                                    1- 1559     	BANKSEL	_breathWaitTime
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 05rr                      1- 1560     	INCR	_breathWaitTime,F
                                    1- 1561     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1562     ;;unsigned compare: left >= lit (0x29=41), size=1
     003F 2129                      1- 1563     	MOVIA	0x29
     0040 04rr                      1- 1564     	SUBAR	_breathWaitTime,W
     0041 0803                      1- 1565     	BTRSS	STATUS,0
                                    1- 1566     	MGOTO	_00351_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1567     	.line	464, "main.c"; 	breathFalg = 0;
                                    1- 1568     	BANKSEL	_breathFalg
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1- 1569     	CLRR	_breathFalg
                                    1- 1570     	.line	465, "main.c"; 	breathWaitTime = 0;
                                    1- 1571     	BANKSEL	_breathWaitTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 1572     	CLRR	_breathWaitTime
     0047                           1- 1573     _00351_DS_:
                                    1- 1574     	.line	469, "main.c"; 	if(breathFalg)
                                    1- 1575     	BANKSEL	_breathFalg
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1- 1576     	MOVR	_breathFalg,W
     0049 0D03                      1- 1577     	BTRSC	STATUS,2
                                    1- 1578     	MGOTO	_00365_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1579     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1580     ;;unsigned compare: left >= lit (0x47=71), size=1
                                    1- 1581     	.line	472, "main.c"; 	if(red > 70)
     004B 2147                      1- 1582     	MOVIA	0x47
                                    1- 1583     	BANKSEL	_red
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 04rr                      1- 1584     	SUBAR	_red,W
     004E 0C03                      1- 1585     	BTRSC	STATUS,0
                                    1- 1586     	.line	473, "main.c"; 	red--;
     004F 06rr                      1- 1587     	DECR	_red,F
                                    1- 1588     	.line	474, "main.c"; 	if(green > 70)
     0050 2147                      1- 1589     	MOVIA	0x47
                                    1- 1590     	BANKSEL	_green
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 04rr                      1- 1591     	SUBAR	_green,W
     0053 0C03                      1- 1592     	BTRSC	STATUS,0
                                    1- 1593     	.line	475, "main.c"; 	green--;
     0054 06rr                      1- 1594     	DECR	_green,F
                                    1- 1595     	.line	476, "main.c"; 	if(blue > 70)
     0055 2147                      1- 1596     	MOVIA	0x47
                                    1- 1597     	BANKSEL	_blue
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 04rr                      1- 1598     	SUBAR	_blue,W
     0058 0803                      1- 1599     	BTRSS	STATUS,0
                                    1- 1600     	MGOTO	_00369_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1601     	.line	477, "main.c"; 	blue--;
     005A 06rr                      1- 1602     	DECR	_blue,F
                                    1- 1603     	MGOTO	_00369_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1604     _00365_DS_:
                                    1- 1605     	.line	482, "main.c"; 	if(red < color1)
                                    1- 1606     	BANKSEL	r0x1036
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1607     	MOVR	r0x1036,W
                                    1- 1608     	BANKSEL	_red
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 04rr                      1- 1609     	SUBAR	_red,W
     0060 0803                      1- 1610     	BTRSS	STATUS,0
                                    1- 1611     	.line	483, "main.c"; 	red++;
     0061 05rr                      1- 1612     	INCR	_red,F
                                    1- 1613     	.line	484, "main.c"; 	if(green < color2)
                                    1- 1614     	BANKSEL	r0x1037
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 01rr                      1- 1615     	MOVR	r0x1037,W
                                    1- 1616     	BANKSEL	_green
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 1617     	SUBAR	_green,W
     0066 0803                      1- 1618     	BTRSS	STATUS,0
                                    1- 1619     	.line	485, "main.c"; 	green++;
     0067 05rr                      1- 1620     	INCR	_green,F
                                    1- 1621     	.line	486, "main.c"; 	if(blue < color3)
                                    1- 1622     	BANKSEL	r0x1038
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 1623     	MOVR	r0x1038,W
                                    1- 1624     	BANKSEL	_blue
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1625     	SUBAR	_blue,W
     006C 0803                      1- 1626     	BTRSS	STATUS,0
                                    1- 1627     	.line	487, "main.c"; 	blue++;
     006D 05rr                      1- 1628     	INCR	_blue,F
     006E                           1- 1629     _00369_DS_:
                                    1- 1630     	.line	490, "main.c"; 	}
                                    1- 1631     	RETURN	
     006E 0010                      3-   40 m1      ret
                                    1- 1633     ;***
                                    1- 1634     ;  pBlock Stats: dbName = C
                                    1- 1635     ;***
                                    1- 1636     ;has an exit
                                    1- 1637     ;2 compiler assigned registers:
                                    1- 1638     ;   STK00
                                    1- 1639     ;   STK01
                                    1- 1640     ;; Starting pCode block
                                    1- 1641     .segment "code"; module=main, function=_setLastColor
     0000                           1- 1643     _setLastColor:
                                    1- 1644     ; 2 exit points
                                    1- 1645     	.line	431, "main.c"; 	void setLastColor(u8t red1,u8t green1,u8t blue1)
                                    1- 1646     	BANKSEL	_lastRed
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1647     	MOVAR	_lastRed
     0002 01rr                      1- 1648     	MOVR	STK00,W
                                    1- 1649     	BANKSEL	_lastGreen
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1650     	MOVAR	_lastGreen
     0005 01rr                      1- 1651     	MOVR	STK01,W
                                    1- 1652     	BANKSEL	_lastBlue
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1653     	MOVAR	_lastBlue
                                    1- 1654     	.line	436, "main.c"; 	}
                                    1- 1655     	RETURN	
     0008 0010                      3-   40 m1      ret
                                    1- 1656     ; exit point of _setLastColor
                                    1- 1658     ;***
                                    1- 1659     ;  pBlock Stats: dbName = C
                                    1- 1660     ;***
                                    1- 1661     ;has an exit
                                    1- 1662     ;2 compiler assigned registers:
                                    1- 1663     ;   STK00
                                    1- 1664     ;   STK01
                                    1- 1665     ;; Starting pCode block
                                    1- 1666     .segment "code"; module=main, function=_setColor
     0000                           1- 1668     _setColor:
                                    1- 1669     ; 2 exit points
                                    1- 1670     	.line	424, "main.c"; 	void setColor(u8t color1,u8t color2,u8t color3)
                                    1- 1671     	BANKSEL	_red
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1672     	MOVAR	_red
     0002 01rr                      1- 1673     	MOVR	STK00,W
                                    1- 1674     	BANKSEL	_green
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1675     	MOVAR	_green
     0005 01rr                      1- 1676     	MOVR	STK01,W
                                    1- 1677     	BANKSEL	_blue
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1678     	MOVAR	_blue
                                    1- 1679     	.line	429, "main.c"; 	}
                                    1- 1680     	RETURN	
     0008 0010                      3-   40 m1      ret
                                    1- 1681     ; exit point of _setColor
                                    1- 1683     ;***
                                    1- 1684     ;  pBlock Stats: dbName = C
                                    1- 1685     ;***
                                    1- 1686     ;; Starting pCode block
                                    1- 1687     .segment "code"; module=main, function=_showRGB
     0000                           1- 1689     _showRGB:
                                    1- 1690     ; 0 exit points
                                    1- 1691     	.line	394, "main.c"; 	if(blue <= ledCount)
                                    1- 1692     	BANKSEL	_blue
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1693     	MOVR	_blue,W
                                    1- 1694     	BANKSEL	_ledCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1695     	SUBAR	_ledCount,W
     0004 0803                      1- 1696     	BTRSS	STATUS,0
                                    1- 1697     	MGOTO	_00317_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1698     	.line	396, "main.c"; 	PORTB |= 0x01;
     0006 18rr                      1- 1699     	BSR	_PORTB,0
                                    1- 1700     	MGOTO	_00318_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008                           1- 1701     _00317_DS_:
                                    1- 1702     	.line	400, "main.c"; 	PORTB &= 0xFE;
     0008 1Crr                      1- 1703     	BCR	_PORTB,0
     0009                           1- 1704     _00318_DS_:
                                    1- 1705     	.line	403, "main.c"; 	if(red <= ledCount)
                                    1- 1706     	BANKSEL	_red
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 1707     	MOVR	_red,W
                                    1- 1708     	BANKSEL	_ledCount
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 1709     	SUBAR	_ledCount,W
     000D 0803                      1- 1710     	BTRSS	STATUS,0
                                    1- 1711     	MGOTO	_00320_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1712     	.line	405, "main.c"; 	PORTA |= 0x02;
     000F 18rr                      1- 1713     	BSR	_PORTA,1
                                    1- 1714     	MGOTO	_00321_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1- 1715     _00320_DS_:
                                    1- 1716     	.line	409, "main.c"; 	PORTA &= 0xFD;
     0011 1Crr                      1- 1717     	BCR	_PORTA,1
     0012                           1- 1718     _00321_DS_:
                                    1- 1719     	.line	412, "main.c"; 	if(green <= ledCount)
                                    1- 1720     	BANKSEL	_green
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1721     	MOVR	_green,W
                                    1- 1722     	BANKSEL	_ledCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1723     	SUBAR	_ledCount,W
     0016 0803                      1- 1724     	BTRSS	STATUS,0
                                    1- 1725     	MGOTO	_00323_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1726     	.line	414, "main.c"; 	PORTA |= 0x04;
     0018 19rr                      1- 1727     	BSR	_PORTA,2
                                    1- 1728     	MGOTO	_00324_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 1729     _00323_DS_:
                                    1- 1730     	.line	418, "main.c"; 	PORTA &= 0xFB;
     001A 1Drr                      1- 1731     	BCR	_PORTA,2
     001B                           1- 1732     _00324_DS_:
                                    1- 1733     	.line	420, "main.c"; 	if(++ledCount > 254)
                                    1- 1734     	BANKSEL	_ledCount
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 05rr                      1- 1735     	INCR	_ledCount,F
                                    1- 1736     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1737     ;;unsigned compare: left >= lit (0xFF=255), size=1
     001D 21FF                      1- 1738     	MOVIA	0xff
     001E 04rr                      1- 1739     	SUBAR	_ledCount,W
     001F 0C03                      1- 1740     	BTRSC	STATUS,0
                                    1- 1741     	.line	421, "main.c"; 	ledCount = 0;
     0020 02rr                      1- 1742     	CLRR	_ledCount
                                    1- 1743     	.line	422, "main.c"; 	}
                                    1- 1744     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1- 1746     ;***
                                    1- 1747     ;  pBlock Stats: dbName = C
                                    1- 1748     ;***
                                    1- 1749     ;has an exit
                                    1- 1750     ;functions called:
                                    1- 1751     ;   _keyRead
                                    1- 1752     ;   _pwmInit
                                    1- 1753     ;   _pwmStop
                                    1- 1754     ;   _pwmInit
                                    1- 1755     ;   _keyRead
                                    1- 1756     ;   _pwmInit
                                    1- 1757     ;   _pwmStop
                                    1- 1758     ;   _pwmInit
                                    1- 1759     ;1 compiler assigned register :
                                    1- 1760     ;   r0x103A
                                    1- 1761     ;; Starting pCode block
                                    1- 1762     .segment "code"; module=main, function=_keyCtr
                                    1- 1764     ;local variable name mapping:
     0000                           1- 1766     _keyCtr:
                                    1- 1767     ; 2 exit points
                                    1- 1768     	.line	330, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
     0000 07rr                      1- 1769     	COMR	_PORTA,W
                                    1- 1770     	BANKSEL	r0x103A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1771     	MOVAR	r0x103A
     0003 2180                      1- 1772     	MOVIA	0x80
     0004 10rr                      1- 1773     	ANDAR	r0x103A,F
     0005 01rr                      1- 1774     	MOVR	r0x103A,W
                                    1- 1775     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1776     	BANKSEL	r0x103A
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 1777     	MOVAR	r0x103A
                                    1- 1778     	.line	331, "main.c"; 	if(kclick == 1)
     0009 2401                      1- 1779     	XORIA	0x01
     000A 0903                      1- 1780     	BTRSS	STATUS,2
                                    1- 1781     	MGOTO	_00282_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1782     	.line	333, "main.c"; 	if(workStep == 0)
                                    1- 1783     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 1784     	MOVR	_workStep,W
     000E 0D03                      1- 1785     	BTRSC	STATUS,2
                                    1- 1786     	.line	335, "main.c"; 	return;
                                    1- 1787     	MGOTO	_00284_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1788     	.line	337, "main.c"; 	breathFalg = 0;
                                    1- 1789     	BANKSEL	_breathFalg
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 1790     	CLRR	_breathFalg
                                    1- 1791     	.line	338, "main.c"; 	breathTime = 250;
     0012 21FA                      1- 1792     	MOVIA	0xfa
                                    1- 1793     	BANKSEL	_breathTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 1794     	MOVAR	_breathTime
                                    1- 1795     	.line	339, "main.c"; 	waitRainbowTime = 500;
     0015 21F4                      1- 1796     	MOVIA	0xf4
                                    1- 1797     	BANKSEL	_waitRainbowTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1798     	MOVAR	_waitRainbowTime
     0018 2101                      1- 1799     	MOVIA	0x01
     0019 00rr                      1- 1800     	MOVAR	(_waitRainbowTime + 1)
                                    1- 1801     	.line	340, "main.c"; 	ledFlag = 1;
                                    1- 1802     	BANKSEL	_ledFlag
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 1803     	MOVAR	_ledFlag
                                    1- 1804     	.line	341, "main.c"; 	if(++workStep > 6)
                                    1- 1805     	BANKSEL	_workStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1806     	INCR	_workStep,F
                                    1- 1807     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1808     ;;unsigned compare: left >= lit (0x7=7), size=1
     001E 2107                      1- 1809     	MOVIA	0x07
     001F 04rr                      1- 1810     	SUBAR	_workStep,W
     0020 0803                      1- 1811     	BTRSS	STATUS,0
                                    1- 1812     	MGOTO	_00268_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1813     	.line	343, "main.c"; 	workStep = 1;	
     0022 2101                      1- 1814     	MOVIA	0x01
     0023 00rr                      1- 1815     	MOVAR	_workStep
     0024                           1- 1816     _00268_DS_:
                                    1- 1817     	.line	345, "main.c"; 	if(workStep > 0)
                                    1- 1818     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1819     	MOVR	_workStep,W
     0026 0D03                      1- 1820     	BTRSC	STATUS,2
                                    1- 1821     	MGOTO	_00284_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1822     	.line	347, "main.c"; 	pwmInit();
                                    1- 1823     	MCALL	_pwmInit
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1824     	MGOTO	_00284_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1- 1825     _00282_DS_:
                                    1- 1826     	.line	350, "main.c"; 	else if(kclick == 2)
                                    1- 1827     	BANKSEL	r0x103A
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 1828     	MOVR	r0x103A,W
     002C 2402                      1- 1829     	XORIA	0x02
     002D 0903                      1- 1830     	BTRSS	STATUS,2
                                    1- 1831     	MGOTO	_00284_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1832     	.line	352, "main.c"; 	if(workStep > 0)
                                    1- 1833     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1834     	MOVR	_workStep,W
     0031 0D03                      1- 1835     	BTRSC	STATUS,2
                                    1- 1836     	MGOTO	_00277_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1837     	.line	354, "main.c"; 	workStep = 0;
     0033 02rr                      1- 1838     	CLRR	_workStep
                                    1- 1839     	.line	355, "main.c"; 	pwmStop();
                                    1- 1840     	MCALL	_pwmStop
     0034 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1841     	.line	356, "main.c"; 	ledFlag  = 0;
                                    1- 1842     	BANKSEL	_ledFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 1843     	CLRR	_ledFlag
                                    1- 1844     	MGOTO	_00284_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1- 1845     _00277_DS_:
                                    1- 1846     	.line	360, "main.c"; 	if(lowBatFlag)
                                    1- 1847     	BANKSEL	_lowBatFlag
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 1848     	MOVR	_lowBatFlag,W
     003A 0903                      1- 1849     	BTRSS	STATUS,2
                                    1- 1850     	.line	362, "main.c"; 	return;
                                    1- 1851     	MGOTO	_00284_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1852     	.line	364, "main.c"; 	breathFalg = 0;
                                    1- 1853     	BANKSEL	_breathFalg
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 02rr                      1- 1854     	CLRR	_breathFalg
                                    1- 1855     	.line	365, "main.c"; 	breathTime = 250;
     003E 21FA                      1- 1856     	MOVIA	0xfa
                                    1- 1857     	BANKSEL	_breathTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 1858     	MOVAR	_breathTime
                                    1- 1859     	.line	366, "main.c"; 	waitRainbowTime = 500;
     0041 21F4                      1- 1860     	MOVIA	0xf4
                                    1- 1861     	BANKSEL	_waitRainbowTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1862     	MOVAR	_waitRainbowTime
     0044 2101                      1- 1863     	MOVIA	0x01
     0045 00rr                      1- 1864     	MOVAR	(_waitRainbowTime + 1)
                                    1- 1865     	.line	367, "main.c"; 	ledFlag = 1;
                                    1- 1866     	BANKSEL	_ledFlag
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1867     	MOVAR	_ledFlag
                                    1- 1868     	.line	368, "main.c"; 	workStep = 1;
                                    1- 1869     	BANKSEL	_workStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 1870     	MOVAR	_workStep
                                    1- 1871     ;;unsigned compare: left < lit (0x514=1300), size=2
                                    1- 1872     	.line	369, "main.c"; 	if(R_AIN1_DATA < 1300)
     004A 2105                      1- 1873     	MOVIA	0x05
                                    1- 1874     	BANKSEL	_R_AIN1_DATA
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1875     	SUBAR	(_R_AIN1_DATA + 1),W
     004D 0903                      1- 1876     	BTRSS	STATUS,2
                                    1- 1877     	MGOTO	_00311_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F 2114                      1- 1878     	MOVIA	0x14
     0050 04rr                      1- 1879     	SUBAR	_R_AIN1_DATA,W
     0051                           1- 1880     _00311_DS_:
     0051 0C03                      1- 1881     	BTRSC	STATUS,0
                                    1- 1882     	MGOTO	_00274_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1883     	.line	371, "main.c"; 	duty = 124;
     0053 217C                      1- 1884     	MOVIA	0x7c
                                    1- 1885     	BANKSEL	_duty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 1886     	MOVAR	_duty
                                    1- 1887     	.line	372, "main.c"; 	PWM1DUTY = 124;
     0056 00rr                      1- 1888     	SFUN	_PWM1DUTY
                                    1- 1889     	MGOTO	_00275_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058                           1- 1890     _00274_DS_:
                                    1- 1891     	.line	376, "main.c"; 	duty = 107;
     0058 216B                      1- 1892     	MOVIA	0x6b
                                    1- 1893     	BANKSEL	_duty
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1894     	MOVAR	_duty
                                    1- 1895     	.line	377, "main.c"; 	PWM1DUTY = 107;
     005B 00rr                      1- 1896     	SFUN	_PWM1DUTY
     005C                           1- 1897     _00275_DS_:
                                    1- 1898     	.line	379, "main.c"; 	pwmInit();
                                    1- 1899     	MCALL	_pwmInit
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 1900     _00284_DS_:
                                    1- 1901     	.line	384, "main.c"; 	}
                                    1- 1902     	RETURN	
     005D 0010                      3-   40 m1      ret
                                    1- 1903     ; exit point of _keyCtr
                                    1- 1905     ;***
                                    1- 1906     ;  pBlock Stats: dbName = C
                                    1- 1907     ;***
                                    1- 1908     ;has an exit
                                    1- 1909     ;functions called:
                                    1- 1910     ;   _pwmStop
                                    1- 1911     ;   _setColor
                                    1- 1912     ;   _setColor
                                    1- 1913     ;   _setColor
                                    1- 1914     ;   _setColor
                                    1- 1915     ;   _setColor
                                    1- 1916     ;   _setColor
                                    1- 1917     ;   _rainbow
                                    1- 1918     ;   _pwmStop
                                    1- 1919     ;   _gotoSleep
                                    1- 1920     ;   _gotoSleep
                                    1- 1921     ;   _pwmStop
                                    1- 1922     ;   _setColor
                                    1- 1923     ;   _setColor
                                    1- 1924     ;   _setColor
                                    1- 1925     ;   _setColor
                                    1- 1926     ;   _setColor
                                    1- 1927     ;   _setColor
                                    1- 1928     ;   _rainbow
                                    1- 1929     ;   _pwmStop
                                    1- 1930     ;   _gotoSleep
                                    1- 1931     ;   _gotoSleep
                                    1- 1932     ;2 compiler assigned registers:
                                    1- 1933     ;   STK01
                                    1- 1934     ;   STK00
                                    1- 1935     ;; Starting pCode block
                                    1- 1936     .segment "code"; module=main, function=_workCtr
     0000                           1- 1938     _workCtr:
                                    1- 1939     ; 2 exit points
                                    1- 1940     	.line	245, "main.c"; 	if(waitRainbowTime > 0)
                                    1- 1941     	BANKSEL	_waitRainbowTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1942     	MOVR	_waitRainbowTime,W
     0002 11rr                      1- 1943     	IORAR	(_waitRainbowTime + 1),W
     0003 0D03                      1- 1944     	BTRSC	STATUS,2
                                    1- 1945     	MGOTO	_00210_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1946     	.line	247, "main.c"; 	waitRainbowTime--;
     0005 21FF                      1- 1947     	MOVIA	0xff
     0006 03rr                      1- 1948     	ADDAR	_waitRainbowTime,F
     0007 0803                      1- 1949     	BTRSS	STATUS,0
     0008 06rr                      1- 1950     	DECR	(_waitRainbowTime + 1),F
                                    1- 1951     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1952     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 1953     	.line	248, "main.c"; 	switch(workStep)
     0009 2107                      1- 1954     	MOVIA	0x07
                                    1- 1955     	BANKSEL	_workStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 1956     	SUBAR	_workStep,W
     000C 0C03                      1- 1957     	BTRSC	STATUS,0
                                    1- 1958     	MGOTO	_00211_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E 21rr                      1- 1959     	MOVIA	((_00255_DS_ >> 8) & 0xff)
     000F 008A                      1- 1960     	MOVAR	PCHBUF
     0010 01rr                      1- 1961     	MOVR	_workStep,W
     0011 25rr                      1- 1962     	ADDIA	_00255_DS_
     0012 0C03                      1- 1963     	BTRSC	STATUS,0
     0013 058A                      1- 1964     	INCR	PCHBUF,F
     0014 0082                      1- 1965     	MOVAR	PCL
     0015                           1- 1966     _00255_DS_:
                                    1- 1967     	MGOTO	_00193_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1968     	MGOTO	_00194_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1969     	MGOTO	_00198_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1970     	MGOTO	_00199_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1971     	MGOTO	_00200_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1972     	MGOTO	_00201_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1973     	MGOTO	_00202_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 1974     _00193_DS_:
                                    1- 1975     	.line	251, "main.c"; 	preDuty = 0;
                                    1- 1976     	BANKSEL	_preDuty
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 1977     	CLRR	_preDuty
                                    1- 1978     	.line	252, "main.c"; 	PWM1DUTY = 0;
     001E 0200                      1- 1979     	CLRA	
     001F 00rr                      1- 1980     	SFUN	_PWM1DUTY
                                    1- 1981     	.line	253, "main.c"; 	pwmStop();
                                    1- 1982     	MCALL	_pwmStop
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1983     	.line	254, "main.c"; 	break;
                                    1- 1984     	MGOTO	_00211_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 1985     _00194_DS_:
                                    1- 1986     	.line	256, "main.c"; 	setColor(250,250,250);
     0022 21FA                      1- 1987     	MOVIA	0xfa
     0023 00rr                      1- 1988     	MOVAR	STK01
     0024 00rr                      1- 1989     	MOVAR	STK00
                                    1- 1990     	MCALL	_setColor
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1991     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1992     ;;unsigned compare: left >= lit (0x5B=91), size=1
                                    1- 1993     	.line	257, "main.c"; 	if(duty > 90)
     0026 215B                      1- 1994     	MOVIA	0x5b
                                    1- 1995     	BANKSEL	_duty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1- 1996     	SUBAR	_duty,W
     0029 0803                      1- 1997     	BTRSS	STATUS,0
                                    1- 1998     	MGOTO	_00196_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1999     	.line	259, "main.c"; 	duty = duty - 1;
     002B 06rr                      1- 2000     	DECR	_duty,F
                                    1- 2001     	.line	260, "main.c"; 	currentDuty = duty;
     002C 01rr                      1- 2002     	MOVR	_duty,W
                                    1- 2003     	BANKSEL	_currentDuty
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2004     	MOVAR	_currentDuty
                                    1- 2005     	MGOTO	_00211_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 2006     _00196_DS_:
                                    1- 2007     	.line	263, "main.c"; 	currentDuty = 90;
     0030 215A                      1- 2008     	MOVIA	0x5a
                                    1- 2009     	BANKSEL	_currentDuty
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2010     	MOVAR	_currentDuty
                                    1- 2011     	.line	264, "main.c"; 	break;
                                    1- 2012     	MGOTO	_00211_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 2013     _00198_DS_:
                                    1- 2014     	.line	266, "main.c"; 	setColor(250,250,0);
     0034 2100                      1- 2015     	MOVIA	0x00
     0035 00rr                      1- 2016     	MOVAR	STK01
     0036 21FA                      1- 2017     	MOVIA	0xfa
     0037 00rr                      1- 2018     	MOVAR	STK00
                                    1- 2019     	MCALL	_setColor
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2020     	.line	267, "main.c"; 	currentDuty = 98;
     0039 2162                      1- 2021     	MOVIA	0x62
                                    1- 2022     	BANKSEL	_currentDuty
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 00rr                      1- 2023     	MOVAR	_currentDuty
                                    1- 2024     	.line	268, "main.c"; 	break;
                                    1- 2025     	MGOTO	_00211_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1- 2026     _00199_DS_:
                                    1- 2027     	.line	270, "main.c"; 	setColor(0,250,0);
     003D 2100                      1- 2028     	MOVIA	0x00
     003E 00rr                      1- 2029     	MOVAR	STK01
     003F 21FA                      1- 2030     	MOVIA	0xfa
     0040 00rr                      1- 2031     	MOVAR	STK00
     0041 2100                      1- 2032     	MOVIA	0x00
                                    1- 2033     	MCALL	_setColor
     0042 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2034     	.line	271, "main.c"; 	currentDuty = 105;
     0043 2169                      1- 2035     	MOVIA	0x69
                                    1- 2036     	BANKSEL	_currentDuty
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2037     	MOVAR	_currentDuty
                                    1- 2038     	.line	272, "main.c"; 	break;
                                    1- 2039     	MGOTO	_00211_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1- 2040     _00200_DS_:
                                    1- 2041     	.line	274, "main.c"; 	setColor(0,250,250);
     0047 21FA                      1- 2042     	MOVIA	0xfa
     0048 00rr                      1- 2043     	MOVAR	STK01
     0049 00rr                      1- 2044     	MOVAR	STK00
     004A 2100                      1- 2045     	MOVIA	0x00
                                    1- 2046     	MCALL	_setColor
     004B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2047     	.line	275, "main.c"; 	currentDuty = 111;
     004C 216F                      1- 2048     	MOVIA	0x6f
                                    1- 2049     	BANKSEL	_currentDuty
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 2050     	MOVAR	_currentDuty
                                    1- 2051     	.line	276, "main.c"; 	break;
                                    1- 2052     	MGOTO	_00211_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1- 2053     _00201_DS_:
                                    1- 2054     	.line	278, "main.c"; 	setColor(250,0,250);
     0050 21FA                      1- 2055     	MOVIA	0xfa
     0051 00rr                      1- 2056     	MOVAR	STK01
     0052 2100                      1- 2057     	MOVIA	0x00
     0053 00rr                      1- 2058     	MOVAR	STK00
     0054 21FA                      1- 2059     	MOVIA	0xfa
                                    1- 2060     	MCALL	_setColor
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2061     	.line	279, "main.c"; 	currentDuty = 118;
     0056 2176                      1- 2062     	MOVIA	0x76
                                    1- 2063     	BANKSEL	_currentDuty
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 2064     	MOVAR	_currentDuty
                                    1- 2065     	.line	280, "main.c"; 	break;
                                    1- 2066     	MGOTO	_00211_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A                           1- 2067     _00202_DS_:
                                    1- 2068     	.line	282, "main.c"; 	setColor(250,0,0);
     005A 2100                      1- 2069     	MOVIA	0x00
     005B 00rr                      1- 2070     	MOVAR	STK01
     005C 00rr                      1- 2071     	MOVAR	STK00
     005D 21FA                      1- 2072     	MOVIA	0xfa
                                    1- 2073     	MCALL	_setColor
     005E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2074     	.line	283, "main.c"; 	currentDuty = 124;
     005F 217C                      1- 2075     	MOVIA	0x7c
                                    1- 2076     	BANKSEL	_currentDuty
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 2077     	MOVAR	_currentDuty
                                    1- 2078     	.line	285, "main.c"; 	}
                                    1- 2079     	MGOTO	_00211_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 2080     _00210_DS_:
                                    1- 2081     	.line	289, "main.c"; 	if(workStep > 0)
                                    1- 2082     	BANKSEL	_workStep
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 2083     	MOVR	_workStep,W
     0065 0D03                      1- 2084     	BTRSC	STATUS,2
                                    1- 2085     	MGOTO	_00207_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2086     	.line	291, "main.c"; 	if(colorStep == 0)
                                    1- 2087     	BANKSEL	_colorStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 2088     	MOVR	_colorStep,W
     0069 0903                      1- 2089     	BTRSS	STATUS,2
                                    1- 2090     	MGOTO	_00205_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2091     	.line	293, "main.c"; 	colorStep = 1;
     006B 2101                      1- 2092     	MOVIA	0x01
     006C 00rr                      1- 2093     	MOVAR	_colorStep
     006D                           1- 2094     _00205_DS_:
                                    1- 2095     	.line	296, "main.c"; 	rainbow();
                                    1- 2096     	MCALL	_rainbow
     006D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2097     	MGOTO	_00211_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
     006F                           1- 2098     _00207_DS_:
                                    1- 2099     	.line	300, "main.c"; 	PWM1DUTY = 0;
     006F 0200                      1- 2100     	CLRA	
     0070 00rr                      1- 2101     	SFUN	_PWM1DUTY
                                    1- 2102     	.line	301, "main.c"; 	pwmStop();
                                    1- 2103     	MCALL	_pwmStop
     0071 2rrr                      3-   66 m1      LCALL rom_address
     0072                           1- 2104     _00211_DS_:
                                    1- 2105     	.line	304, "main.c"; 	if(currentDuty != preDuty)
                                    1- 2106     	BANKSEL	_preDuty
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 2107     	MOVR	_preDuty,W
                                    1- 2108     	BANKSEL	_currentDuty
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 12rr                      1- 2109     	XORAR	_currentDuty,W
     0076 0D03                      1- 2110     	BTRSC	STATUS,2
                                    1- 2111     	MGOTO	_00213_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2112     	.line	306, "main.c"; 	PWM1DUTY = currentDuty;
     0078 01rr                      1- 2113     	MOVR	_currentDuty,W
     0079 00rr                      1- 2114     	SFUN	_PWM1DUTY
                                    1- 2115     	.line	307, "main.c"; 	preDuty = currentDuty;
     007A 01rr                      1- 2116     	MOVR	_currentDuty,W
                                    1- 2117     	BANKSEL	_preDuty
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 2118     	MOVAR	_preDuty
                                    1- 2119     ;;unsigned compare: left < lit (0xA=10), size=1
     007D                           1- 2120     _00213_DS_:
                                    1- 2121     	.line	309, "main.c"; 	if(lowCount >= 10 && workStep > 0)
     007D 210A                      1- 2122     	MOVIA	0x0a
                                    1- 2123     	BANKSEL	_lowCount
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 04rr                      1- 2124     	SUBAR	_lowCount,W
     0080 0803                      1- 2125     	BTRSS	STATUS,0
                                    1- 2126     	MGOTO	_00217_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2127     	BANKSEL	_workStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1- 2128     	MOVR	_workStep,W
     0084 0D03                      1- 2129     	BTRSC	STATUS,2
                                    1- 2130     	MGOTO	_00217_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2131     	.line	311, "main.c"; 	if(++closeTime >= 100)
                                    1- 2132     	BANKSEL	_closeTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 05rr                      1- 2133     	INCR	_closeTime,F
     0088 0D03                      1- 2134     	BTRSC	STATUS,2
     0089 05rr                      1- 2135     	INCR	(_closeTime + 1),F
                                    1- 2136     ;;unsigned compare: left < lit (0x64=100), size=2
     008A 2100                      1- 2137     	MOVIA	0x00
     008B 04rr                      1- 2138     	SUBAR	(_closeTime + 1),W
     008C 0903                      1- 2139     	BTRSS	STATUS,2
                                    1- 2140     	MGOTO	_00259_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E 2164                      1- 2141     	MOVIA	0x64
     008F 04rr                      1- 2142     	SUBAR	_closeTime,W
     0090                           1- 2143     _00259_DS_:
     0090 0803                      1- 2144     	BTRSS	STATUS,0
                                    1- 2145     	MGOTO	_00218_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2146     	.line	313, "main.c"; 	lowBatFlag = 1;
     0092 2101                      1- 2147     	MOVIA	0x01
                                    1- 2148     	BANKSEL	_lowBatFlag
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 2149     	MOVAR	_lowBatFlag
                                    1- 2150     	.line	314, "main.c"; 	gotoSleep();
                                    1- 2151     	MCALL	_gotoSleep
     0095 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2152     	MGOTO	_00218_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
     0097                           1- 2153     _00217_DS_:
                                    1- 2154     	.line	320, "main.c"; 	closeTime = 0;
                                    1- 2155     	BANKSEL	_closeTime
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 02rr                      1- 2156     	CLRR	_closeTime
     0099 02rr                      1- 2157     	CLRR	(_closeTime + 1)
                                    1- 2158     ;;unsigned compare: left < lit (0x384=900), size=2
     009A                           1- 2159     _00218_DS_:
                                    1- 2160     	.line	322, "main.c"; 	if(count900s >= 900)
     009A 2103                      1- 2161     	MOVIA	0x03
                                    1- 2162     	BANKSEL	_count900s
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 2163     	SUBAR	(_count900s + 1),W
     009D 0903                      1- 2164     	BTRSS	STATUS,2
                                    1- 2165     	MGOTO	_00260_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F 2184                      1- 2166     	MOVIA	0x84
     00A0 04rr                      1- 2167     	SUBAR	_count900s,W
     00A1                           1- 2168     _00260_DS_:
     00A1 0803                      1- 2169     	BTRSS	STATUS,0
                                    1- 2170     	MGOTO	_00222_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2171     	.line	323, "main.c"; 	gotoSleep();
                                    1- 2172     	MCALL	_gotoSleep
     00A3 2rrr                      3-   66 m1      LCALL rom_address
     00A4                           1- 2173     _00222_DS_:
                                    1- 2174     	.line	324, "main.c"; 	}
                                    1- 2175     	RETURN	
     00A4 0010                      3-   40 m1      ret
                                    1- 2176     ; exit point of _workCtr
                                    1- 2178     ;***
                                    1- 2179     ;  pBlock Stats: dbName = C
                                    1- 2180     ;***
                                    1- 2181     ;has an exit
                                    1- 2182     ;functions called:
                                    1- 2183     ;   _pwmStop
                                    1- 2184     ;   _ledGreen
                                    1- 2185     ;   _ledRed
                                    1- 2186     ;   _ledRed
                                    1- 2187     ;   _ledOff
                                    1- 2188     ;   _pwmStop
                                    1- 2189     ;   _ledGreen
                                    1- 2190     ;   _ledRed
                                    1- 2191     ;   _ledRed
                                    1- 2192     ;   _ledOff
                                    1- 2193     ;; Starting pCode block
                                    1- 2194     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2196     _chrgCtr:
                                    1- 2197     ; 2 exit points
                                    1- 2198     	.line	191, "main.c"; 	if(0x40 & PORTA)
     0000 0Brr                      1- 2199     	BTRSS	_PORTA,6
                                    1- 2200     	MGOTO	_00167_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2201     	.line	194, "main.c"; 	lowBatFlag = 0;
                                    1- 2202     	BANKSEL	_lowBatFlag
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2203     	CLRR	_lowBatFlag
                                    1- 2204     	.line	195, "main.c"; 	ledFlag = 0;
                                    1- 2205     	BANKSEL	_ledFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2206     	CLRR	_ledFlag
                                    1- 2207     	.line	196, "main.c"; 	workStep = 0;
                                    1- 2208     	BANKSEL	_workStep
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2209     	CLRR	_workStep
                                    1- 2210     	.line	197, "main.c"; 	pwmStop();
                                    1- 2211     	MCALL	_pwmStop
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2212     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2213     ;;unsigned compare: left >= lit (0x5F6=1526), size=2
                                    1- 2214     	.line	198, "main.c"; 	if(R_AIN1_DATA > 1525 || chrgFullFlag)
     0009 2105                      1- 2215     	MOVIA	0x05
                                    1- 2216     	BANKSEL	_R_AIN1_DATA
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 2217     	SUBAR	(_R_AIN1_DATA + 1),W
     000C 0903                      1- 2218     	BTRSS	STATUS,2
                                    1- 2219     	MGOTO	_00186_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E 21F6                      1- 2220     	MOVIA	0xf6
     000F 04rr                      1- 2221     	SUBAR	_R_AIN1_DATA,W
     0010                           1- 2222     _00186_DS_:
     0010 0C03                      1- 2223     	BTRSC	STATUS,0
                                    1- 2224     	MGOTO	_00160_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2225     	BANKSEL	_chrgFullFlag
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2226     	MOVR	_chrgFullFlag,W
     0014 0D03                      1- 2227     	BTRSC	STATUS,2
                                    1- 2228     	MGOTO	_00161_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 2229     _00160_DS_:
                                    1- 2230     	.line	200, "main.c"; 	if(++fullTime > 6000 || chrgFullFlag)
                                    1- 2231     	BANKSEL	_fullTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 05rr                      1- 2232     	INCR	_fullTime,F
     0018 0D03                      1- 2233     	BTRSC	STATUS,2
     0019 05rr                      1- 2234     	INCR	(_fullTime + 1),F
                                    1- 2235     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2236     ;;unsigned compare: left >= lit (0x1771=6001), size=2
     001A 2117                      1- 2237     	MOVIA	0x17
     001B 04rr                      1- 2238     	SUBAR	(_fullTime + 1),W
     001C 0903                      1- 2239     	BTRSS	STATUS,2
                                    1- 2240     	MGOTO	_00187_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E 2171                      1- 2241     	MOVIA	0x71
     001F 04rr                      1- 2242     	SUBAR	_fullTime,W
     0020                           1- 2243     _00187_DS_:
     0020 0C03                      1- 2244     	BTRSC	STATUS,0
                                    1- 2245     	MGOTO	_00156_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2246     	BANKSEL	_chrgFullFlag
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 2247     	MOVR	_chrgFullFlag,W
     0024 0D03                      1- 2248     	BTRSC	STATUS,2
                                    1- 2249     	MGOTO	_00157_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 2250     _00156_DS_:
                                    1- 2251     	.line	202, "main.c"; 	fullTime = 6000;
     0026 2170                      1- 2252     	MOVIA	0x70
                                    1- 2253     	BANKSEL	_fullTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 2254     	MOVAR	_fullTime
     0029 2117                      1- 2255     	MOVIA	0x17
     002A 00rr                      1- 2256     	MOVAR	(_fullTime + 1)
                                    1- 2257     	.line	203, "main.c"; 	ledGreen();
                                    1- 2258     	MCALL	_ledGreen
     002B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2259     	.line	204, "main.c"; 	chrgFullFlag = 1;
     002C 2101                      1- 2260     	MOVIA	0x01
                                    1- 2261     	BANKSEL	_chrgFullFlag
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2262     	MOVAR	_chrgFullFlag
                                    1- 2263     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2264     ;;unsigned compare: left >= lit (0x60F=1551), size=2
                                    1- 2265     	.line	205, "main.c"; 	if(R_AIN1_DATA > 1550)
     002F 2106                      1- 2266     	MOVIA	0x06
                                    1- 2267     	BANKSEL	_R_AIN1_DATA
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 04rr                      1- 2268     	SUBAR	(_R_AIN1_DATA + 1),W
     0032 0903                      1- 2269     	BTRSS	STATUS,2
                                    1- 2270     	MGOTO	_00188_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034 210F                      1- 2271     	MOVIA	0x0f
     0035 04rr                      1- 2272     	SUBAR	_R_AIN1_DATA,W
     0036                           1- 2273     _00188_DS_:
     0036 0803                      1- 2274     	BTRSS	STATUS,0
                                    1- 2275     	MGOTO	_00169_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2276     	.line	207, "main.c"; 	PORTA &= 0xDF;
     0038 1Err                      1- 2277     	BCR	_PORTA,5
                                    1- 2278     	MGOTO	_00169_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2279     _00157_DS_:
                                    1- 2280     	.line	216, "main.c"; 	PORTA |= 0x20;
     003A 1Arr                      1- 2281     	BSR	_PORTA,5
                                    1- 2282     	.line	217, "main.c"; 	ledRed();
                                    1- 2283     	MCALL	_ledRed
     003B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2284     	MGOTO	_00169_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1- 2285     _00161_DS_:
                                    1- 2286     	.line	225, "main.c"; 	PORTA |= 0x20;
     003D 1Arr                      1- 2287     	BSR	_PORTA,5
                                    1- 2288     	.line	226, "main.c"; 	fullTime = 0;
                                    1- 2289     	BANKSEL	_fullTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 02rr                      1- 2290     	CLRR	_fullTime
     0040 02rr                      1- 2291     	CLRR	(_fullTime + 1)
                                    1- 2292     	.line	227, "main.c"; 	ledRed();
                                    1- 2293     	MCALL	_ledRed
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2294     	MGOTO	_00169_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 2295     _00167_DS_:
                                    1- 2296     	.line	233, "main.c"; 	chrgFullFlag = 0;
                                    1- 2297     	BANKSEL	_chrgFullFlag
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1- 2298     	CLRR	_chrgFullFlag
                                    1- 2299     	.line	234, "main.c"; 	if(workStep == 0)
                                    1- 2300     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 2301     	MOVR	_workStep,W
     0047 0903                      1- 2302     	BTRSS	STATUS,2
                                    1- 2303     	MGOTO	_00006_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2304     	.line	235, "main.c"; 	ledFlag = 0;
                                    1- 2305     	BANKSEL	_ledFlag
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 2306     	CLRR	_ledFlag
     004B                           1- 2307     _00006_DS_:
                                    1- 2308     	.line	237, "main.c"; 	PORTA &= 0xDF;
     004B 1Err                      1- 2309     	BCR	_PORTA,5
                                    1- 2310     	.line	238, "main.c"; 	ledOff();
                                    1- 2311     	MCALL	_ledOff
     004C 2rrr                      3-   66 m1      LCALL rom_address
     004D                           1- 2312     _00169_DS_:
                                    1- 2313     	.line	241, "main.c"; 	}
                                    1- 2314     	RETURN	
     004D 0010                      3-   40 m1      ret
                                    1- 2315     ; exit point of _chrgCtr
                                    1- 2317     ;***
                                    1- 2318     ;  pBlock Stats: dbName = C
                                    1- 2319     ;***
                                    1- 2320     ;has an exit
                                    1- 2321     ;1 compiler assigned register :
                                    1- 2322     ;   r0x1039
                                    1- 2323     ;; Starting pCode block
                                    1- 2324     .segment "code"; module=main, function=_keyRead
                                    1- 2326     ;local variable name mapping:
     0000                           1- 2328     _keyRead:
                                    1- 2329     ; 2 exit points
                                    1- 2330     	.line	156, "main.c"; 	char keyRead(char KeyStatus)	
                                    1- 2331     	BANKSEL	r0x1039
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2332     	MOVAR	r0x1039
                                    1- 2333     	.line	158, "main.c"; 	if (KeyStatus)
     0002 01rr                      1- 2334     	MOVR	r0x1039,W
     0003 0D03                      1- 2335     	BTRSC	STATUS,2
                                    1- 2336     	MGOTO	_00147_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2337     	.line	160, "main.c"; 	if(++keyCount >= 150)
                                    1- 2338     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2339     	INCR	_keyCount,F
                                    1- 2340     ;;unsigned compare: left < lit (0x96=150), size=1
     0007 2196                      1- 2341     	MOVIA	0x96
     0008 04rr                      1- 2342     	SUBAR	_keyCount,W
     0009 0803                      1- 2343     	BTRSS	STATUS,0
                                    1- 2344     	MGOTO	_00148_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2345     	.line	162, "main.c"; 	keyCount = 150;
     000B 2196                      1- 2346     	MOVIA	0x96
     000C 00rr                      1- 2347     	MOVAR	_keyCount
                                    1- 2348     	.line	163, "main.c"; 	if(!longPressFlag)
                                    1- 2349     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2350     	MOVR	_longPressFlag,W
     000F 0903                      1- 2351     	BTRSS	STATUS,2
                                    1- 2352     	MGOTO	_00148_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2353     	.line	165, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2354     	MOVIA	0x01
     0012 00rr                      1- 2355     	MOVAR	_longPressFlag
                                    1- 2356     	.line	166, "main.c"; 	return 2;
     0013 2102                      1- 2357     	MOVIA	0x02
                                    1- 2358     	MGOTO	_00149_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2359     ;;unsigned compare: left < lit (0x96=150), size=1
     0015                           1- 2360     _00147_DS_:
                                    1- 2361     	.line	173, "main.c"; 	if(keyCount >= 150)
     0015 2196                      1- 2362     	MOVIA	0x96
                                    1- 2363     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2364     	SUBAR	_keyCount,W
     0018 0803                      1- 2365     	BTRSS	STATUS,0
                                    1- 2366     	MGOTO	_00144_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2367     	.line	175, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2368     	CLRR	_keyCount
                                    1- 2369     	.line	176, "main.c"; 	longPressFlag = 0;
                                    1- 2370     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2371     	CLRR	_longPressFlag
                                    1- 2372     	.line	177, "main.c"; 	return	0;
     001D 2100                      1- 2373     	MOVIA	0x00
                                    1- 2374     	MGOTO	_00149_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2375     ;;unsigned compare: left < lit (0x5=5), size=1
     001F                           1- 2376     _00144_DS_:
                                    1- 2377     	.line	179, "main.c"; 	else if(keyCount >= 5)
     001F 2105                      1- 2378     	MOVIA	0x05
                                    1- 2379     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2380     	SUBAR	_keyCount,W
     0022 0803                      1- 2381     	BTRSS	STATUS,0
                                    1- 2382     	MGOTO	_00145_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2383     	.line	181, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2384     	CLRR	_keyCount
                                    1- 2385     	.line	182, "main.c"; 	return	1;
     0025 2101                      1- 2386     	MOVIA	0x01
                                    1- 2387     	MGOTO	_00149_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2388     _00145_DS_:
                                    1- 2389     	.line	184, "main.c"; 	keyCount = 0;
                                    1- 2390     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2391     	CLRR	_keyCount
     0029                           1- 2392     _00148_DS_:
                                    1- 2393     	.line	186, "main.c"; 	return 0;
     0029 2100                      1- 2394     	MOVIA	0x00
     002A                           1- 2395     _00149_DS_:
                                    1- 2396     	.line	187, "main.c"; 	}
                                    1- 2397     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2398     ; exit point of _keyRead
                                    1- 2401     ;	code size estimation:
                                    1- 2402     ;	  860+  222 =  1082 instructions ( 2608 byte)
                                    1- 2404     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
