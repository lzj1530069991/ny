
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN5_Convert
                                    1-   99     	extern	_checkBatAD
                                    1-  100     	extern	_initAD
                                    1-  101     	extern	_delay
                                    1-  102     	extern	_chrgCtr
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_gotoSleep
                                    1-  105     	extern	_powerOff
                                    1-  106     	extern	_keyCtr
                                    1-  107     	extern	_ledCtr
                                    1-  108     	extern	_LedCtr2
                                    1-  109     	extern	_workCtr
                                    1-  110     	extern	_pwmStop
                                    1-  111     	extern	_pwmInit
                                    1-  112     	extern	_LED4ON
                                    1-  113     	extern	_LED3ON
                                    1-  114     	extern	_LED2ON
                                    1-  115     	extern	_LED1ON
                                    1-  116     	extern	_LedInput
                                    1-  117     	extern	_ledShow
                                    1-  118     	extern	_initSys
                                    1-  119     	extern	_fgCtr
                                    1-  120     	extern	_isr
                                    1-  121     	extern	_main
                                    1-  122     	extern	_LEDHON
                                    1-  123     	extern	_LEDLON
                                    1-  124     	extern	_LEDHOFF
                                    1-  125     	extern	_LEDLOFF
                                    1-  126     	extern	_Status
                                    1-  127     	extern	_duty
                                    1-  128     	extern	_intCount
                                    1-  129     	extern	_count500ms
                                    1-  130     	extern	_keyCount
                                    1-  131     	extern	_workStep
                                    1-  132     	extern	_ledStep
                                    1-  133     	extern	_fgCount
                                    1-  134     	extern	_fgPRD
                                    1-  135     	extern	_preFG
                                    1-  136     	extern	_maxDuty
                                    1-  137     	extern	_pwStep
                                    1-  138     	extern	_R_AIN5_DATA
                                    1-  139     	extern	_R_AIN5_DATA_LB
                                    1-  140     	extern	_chrgTime
                                    1-  141     	extern	_startStep
                                    1-  142     	extern	_sleepTime
                                    1-  143     	extern	_count200ms
                                    1-  144     	extern	_count1s
                                    1-  145     	extern	_count900s
                                    1-  146     	extern	_lowBatTime
                                    1-  147     	extern	_ledTime
                                    1-  148     	extern	_workStartFlag
                                    1-  150     	extern PSAVE
                                    1-  151     	extern SSAVE
                                    1-  152     	extern WSAVE
                                    1-  153     	extern STK02
                                    1-  154     	extern STK01
                                    1-  155     	extern STK00
                                    1-  157     .segment "uninit", 0x20000040
 20000040                           1-  158     PSAVE:
                                    1-  159     	.res 1
 20000041                           1-  160     SSAVE:
                                    1-  161     	.res 1
 20000042                           1-  162     WSAVE:
                                    1-  163     	.res 1
 20000043                           1-  164     STK02:
                                    1-  165     	.res 1
 20000044                           1-  166     STK01:
                                    1-  167     	.res 1
 20000045                           1-  168     STK00:
                                    1-  169     	.res 1
                                    1-  171     ;--------------------------------------------------------
                                    1-  172     ; global definitions
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     .segment "uninit"
     0000                           1-  175     _R_AIN5_DATA:
                                    1-  176     	.res	2
                                    1-  179     .segment "uninit"
     0000                           1-  180     _R_AIN5_DATA_LB:
                                    1-  181     	.res	1
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ; absolute symbol definitions
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     ;--------------------------------------------------------
                                    1-  188     ; compiler-defined variables
                                    1-  189     ;--------------------------------------------------------
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x102C:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x1034:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1033:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x1032:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1031:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x102E:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x1030:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x102F:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x102D:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1020:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1021:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x102A:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x102B:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1022:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1023:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1024:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1027:
                                    1-  240     	.res	1
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; initialized data
                                    1-  243     ;--------------------------------------------------------
                                    1-  245     .segment "idata"
     0000                           1-  246     _Status:
     0000 0000                      1-  247     	dw	0x00
                                    1-  251     .segment "idata"
     0000                           1-  252     _duty:
     0000 0000 0000                 1-  253     	dw	0x00, 0x00
                                    1-  257     .segment "idata"
     0000                           1-  258     _intCount:
     0000 0000                      1-  259     	dw	0x00
                                    1-  263     .segment "idata"
     0000                           1-  264     _count500ms:
     0000 0000                      1-  265     	dw	0x00
                                    1-  269     .segment "idata"
     0000                           1-  270     _keyCount:
     0000 0000                      1-  271     	dw	0x00
                                    1-  275     .segment "idata"
     0000                           1-  276     _workStep:
     0000 0000                      1-  277     	dw	0x00
                                    1-  281     .segment "idata"
     0000                           1-  282     _ledStep:
     0000 0000                      1-  283     	dw	0x00
                                    1-  287     .segment "idata"
     0000                           1-  288     _fgCount:
     0000 0000 0000                 1-  289     	dw	0x00, 0x00
                                    1-  293     .segment "idata"
     0000                           1-  294     _fgPRD:
     0000 0000 0000                 1-  295     	dw	0x00, 0x00
                                    1-  299     .segment "idata"
     0000                           1-  300     _preFG:
     0000 0000                      1-  301     	dw	0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _maxDuty:
     0000 0000                      1-  307     	dw	0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _pwStep:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _chrgTime:
     0000 0000 0000                 1-  319     	dw	0x00, 0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _startStep:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _sleepTime:
     0000 0000 0000                 1-  331     	dw	0x00, 0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _count200ms:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _count1s:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _count900s:
     0000 0000 0000                 1-  349     	dw	0x00, 0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _lowBatTime:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _ledTime:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _workStartFlag:
     0000 0000                      1-  367     	dw	0x00
                                    1-  370     ;--------------------------------------------------------
                                    1-  371     ; overlayable items in internal ram 
                                    1-  372     ;--------------------------------------------------------
                                    1-  373     ;	udata_ovr
                                    1-  374     ;--------------------------------------------------------
                                    1-  375     ; reset vector 
                                    1-  376     ;--------------------------------------------------------
                                    1-  377     ORG	0x0000
     0000 3rrr                      1-  378     	LGOTO	__nyc_ny8_startup
                                    1-  379     ;--------------------------------------------------------
                                    1-  380     ; interrupt and initialization code
                                    1-  381     ;--------------------------------------------------------
                                    1-  382     ORG 0x0008
                                    1-  383     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  385     .segment "code"
     0000                           1-  386     __sdcc_interrupt:
                                    1-  387     ;***
                                    1-  388     ;  pBlock Stats: dbName = I
                                    1-  389     ;***
                                    1-  390     ;2 compiler assigned registers:
                                    1-  391     ;   STK00
                                    1-  392     ;   STK01
                                    1-  393     ;; Starting pCode block
     0000                           1-  394     _isr:
                                    1-  395     ; 0 exit points
                                    1-  396     	.line	81, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  397     	MOVAR	WSAVE
     0001 1503                      1-  398     	SWAPR	STATUS,W
     0002 0283                      1-  399     	CLRR	STATUS
     0003 00rr                      1-  400     	MOVAR	SSAVE
     0004 010A                      1-  401     	MOVR	PCHBUF,W
     0005 028A                      1-  402     	CLRR	PCHBUF
     0006 00rr                      1-  403     	MOVAR	PSAVE
     0007 0104                      1-  404     	MOVR	FSR,W
                                    1-  405     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  406     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  407     	MOVR	STK00,W
                                    1-  408     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  409     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  410     	MOVR	STK01,W
                                    1-  411     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  412     	MOVAR	___sdcc_saved_stk01
                                    1-  413     	.line	83, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  414     	BTRSS	_INTFbits,0
                                    1-  415     	MGOTO	_00119_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  416     	.line	85, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  417     	MOVIA	0x37
     0013 03rr                      1-  418     	ADDAR	_TMR0,F
                                    1-  419     	.line	87, "main.c"; 	if(++intCount >= 100)
                                    1-  420     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  421     	INCR	_intCount,F
                                    1-  422     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  423     	MOVIA	0x64
     0017 04rr                      1-  424     	SUBAR	_intCount,W
     0018 0803                      1-  425     	BTRSS	STATUS,0
                                    1-  426     	MGOTO	_00119_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  427     	.line	89, "main.c"; 	IntFlag = 1;
                                    1-  428     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  429     	BSR	_Status,0
                                    1-  430     	.line	90, "main.c"; 	intCount = 0;
                                    1-  431     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  432     	CLRR	_intCount
                                    1-  433     	.line	91, "main.c"; 	if(workStep)
                                    1-  434     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  435     	MOVR	_workStep,W
     0020 0D03                      1-  436     	BTRSC	STATUS,2
                                    1-  437     	MGOTO	_00106_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  438     	.line	92, "main.c"; 	++fgCount;
                                    1-  439     	BANKSEL	_fgCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  440     	INCR	_fgCount,F
     0024 0D03                      1-  441     	BTRSC	STATUS,2
     0025 05rr                      1-  442     	INCR	(_fgCount + 1),F
     0026                           1-  443     _00106_DS_:
                                    1-  444     	.line	93, "main.c"; 	if(++count500ms >= 40)
                                    1-  445     	BANKSEL	_count500ms
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1-  446     	INCR	_count500ms,F
                                    1-  447     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  448     	MOVIA	0x28
     0029 04rr                      1-  449     	SUBAR	_count500ms,W
     002A 0C03                      1-  450     	BTRSC	STATUS,0
                                    1-  451     	.line	94, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  452     	CLRR	_count500ms
                                    1-  453     	.line	95, "main.c"; 	if(++count200ms >= 20)
                                    1-  454     	BANKSEL	_count200ms
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  455     	INCR	_count200ms,F
     002E 2114                      1-  456     	MOVIA	0x14
     002F 04rr                      1-  457     	SUBAR	_count200ms,W
     0030 0C03                      1-  458     	BTRSC	STATUS,0
                                    1-  459     	.line	96, "main.c"; 	count200ms = 0;
     0031 02rr                      1-  460     	CLRR	_count200ms
                                    1-  461     	.line	97, "main.c"; 	if(++count1s >= 100)
                                    1-  462     	BANKSEL	_count1s
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 05rr                      1-  463     	INCR	_count1s,F
     0034 2164                      1-  464     	MOVIA	0x64
     0035 04rr                      1-  465     	SUBAR	_count1s,W
     0036 0803                      1-  466     	BTRSS	STATUS,0
                                    1-  467     	MGOTO	_00119_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  468     	.line	99, "main.c"; 	count1s = 0;
     0038 02rr                      1-  469     	CLRR	_count1s
                                    1-  470     	.line	100, "main.c"; 	if(workStep)
                                    1-  471     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  472     	MOVR	_workStep,W
     003B 0D03                      1-  473     	BTRSC	STATUS,2
                                    1-  474     	MGOTO	_00112_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  475     	.line	102, "main.c"; 	++count900s;
                                    1-  476     	BANKSEL	_count900s
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 05rr                      1-  477     	INCR	_count900s,F
     003F 0D03                      1-  478     	BTRSC	STATUS,2
     0040 05rr                      1-  479     	INCR	(_count900s + 1),F
                                    1-  480     	MGOTO	_00119_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1-  481     _00112_DS_:
                                    1-  482     	.line	106, "main.c"; 	count900s = 0;
                                    1-  483     	BANKSEL	_count900s
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 02rr                      1-  484     	CLRR	_count900s
     0044 02rr                      1-  485     	CLRR	(_count900s + 1)
     0045                           1-  486     _00119_DS_:
                                    1-  487     	.line	115, "main.c"; 	if(INTFbits.PABIF)
     0045 08rr                      1-  488     	BTRSS	_INTFbits,1
                                    1-  489     	MGOTO	_00121_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  490     	.line	117, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0047 21FD                      1-  491     	MOVIA	0xfd
     0048 00rr                      1-  492     	MOVAR	_INTF
     0049                           1-  493     _00121_DS_:
                                    1-  494     	.line	120, "main.c"; 	INTF = 0;
     0049 02rr                      1-  495     	CLRR	_INTF
                                    1-  496     	.line	122, "main.c"; 	}
                                    1-  497     	BANKSEL	___sdcc_saved_stk01
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  498     	MOVR	___sdcc_saved_stk01,W
     004C 00rr                      1-  499     	MOVAR	STK01
                                    1-  500     	BANKSEL	___sdcc_saved_stk00
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  501     	MOVR	___sdcc_saved_stk00,W
     004F 00rr                      1-  502     	MOVAR	STK00
                                    1-  503     	BANKSEL	___sdcc_saved_fsr
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  504     	MOVR	___sdcc_saved_fsr,W
     0052 0084                      1-  505     	MOVAR	FSR
     0053 01rr                      1-  506     	MOVR	PSAVE,W
     0054 008A                      1-  507     	MOVAR	PCHBUF
     0055 0283                      1-  508     	CLRR	STATUS
     0056 15rr                      1-  509     	SWAPR	SSAVE,W
     0057 0083                      1-  510     	MOVAR	STATUS
     0058 15rr                      1-  511     	SWAPR	WSAVE,F
     0059 15rr                      1-  512     	SWAPR	WSAVE,W
     005A                           1-  513     END_OF_INTERRUPT:
     005A 0011                      1-  514     	RETIE	
                                    1-  516     ;--------------------------------------------------------
                                    1-  517     ; code
                                    1-  518     ;--------------------------------------------------------
                                    1-  519     ;***
                                    1-  520     ;  pBlock Stats: dbName = M
                                    1-  521     ;***
                                    1-  522     ;has an exit
                                    1-  523     ;functions called:
                                    1-  524     ;   _initSys
                                    1-  525     ;   _initAD
                                    1-  526     ;   _ledShow
                                    1-  527     ;   _fgCtr
                                    1-  528     ;   _keyCtr
                                    1-  529     ;   _checkBatAD
                                    1-  530     ;   _ledCtr
                                    1-  531     ;   _chrgCtr
                                    1-  532     ;   _LedCtr2
                                    1-  533     ;   _workCtr
                                    1-  534     ;   _gotoSleep
                                    1-  535     ;   _powerOff
                                    1-  536     ;   _pwmStop
                                    1-  537     ;   _delay
                                    1-  538     ;   _pwmStop
                                    1-  539     ;   _initSys
                                    1-  540     ;   _initAD
                                    1-  541     ;   _ledShow
                                    1-  542     ;   _fgCtr
                                    1-  543     ;   _keyCtr
                                    1-  544     ;   _checkBatAD
                                    1-  545     ;   _ledCtr
                                    1-  546     ;   _chrgCtr
                                    1-  547     ;   _LedCtr2
                                    1-  548     ;   _workCtr
                                    1-  549     ;   _gotoSleep
                                    1-  550     ;   _powerOff
                                    1-  551     ;   _pwmStop
                                    1-  552     ;   _delay
                                    1-  553     ;   _pwmStop
                                    1-  554     ;; Starting pCode block
                                    1-  555     .segment "code"; module=main, function=_main
     0000                           1-  557     _main:
                                    1-  558     ; 2 exit points
                                    1-  559     	.line	126, "main.c"; 	initSys();
                                    1-  560     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  561     	.line	127, "main.c"; 	initAD();
                                    1-  562     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  563     _00159_DS_:
                                    1-  564     	.line	130, "main.c"; 	ledShow();
                                    1-  565     	MCALL	_ledShow
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  566     	.line	131, "main.c"; 	CLRWDT();
     0003 0002                      1-  567     	clrwdt
                                    1-  568     	.line	132, "main.c"; 	fgCtr();
                                    1-  569     	MCALL	_fgCtr
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  570     	.line	133, "main.c"; 	if(!IntFlag)
                                    1-  571     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 08rr                      1-  572     	BTRSS	_Status,0
                                    1-  573     	MGOTO	_00159_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  574     	.line	135, "main.c"; 	IntFlag = 0;
     0008 1Crr                      1-  575     	BCR	_Status,0
                                    1-  576     	.line	136, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  577     	BANKSEL	_PORTA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  578     	BTRSS	_PORTA,5
                                    1-  579     	.line	137, "main.c"; 	keyCtr();
                                    1-  580     	MCALL	_keyCtr
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  581     	.line	138, "main.c"; 	if(count200ms == 0)
                                    1-  582     	BANKSEL	_count200ms
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  583     	MOVR	_count200ms,W
     000E 0903                      1-  584     	BTRSS	STATUS,2
                                    1-  585     	MGOTO	_00131_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  586     	.line	140, "main.c"; 	checkBatAD();
                                    1-  587     	MCALL	_checkBatAD
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  588     	.line	141, "main.c"; 	ledCtr();
                                    1-  589     	MCALL	_ledCtr
     0011 2rrr                      3-   66 m1      LCALL rom_address
     0012                           1-  590     _00131_DS_:
                                    1-  591     	.line	143, "main.c"; 	if(count500ms == 0)
                                    1-  592     	BANKSEL	_count500ms
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1-  593     	MOVR	_count500ms,W
     0014 0903                      1-  594     	BTRSS	STATUS,2
                                    1-  595     	MGOTO	_00139_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  596     	.line	145, "main.c"; 	chrgCtr();
                                    1-  597     	MCALL	_chrgCtr
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  598     	.line	146, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3 || workStartFlag == 4)
                                    1-  599     	BANKSEL	_workStartFlag
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1-  600     	MOVR	_workStartFlag,W
     0019 2401                      1-  601     	XORIA	0x01
     001A 0D03                      1-  602     	BTRSC	STATUS,2
                                    1-  603     	MGOTO	_00134_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C 01rr                      1-  604     	MOVR	_workStartFlag,W
     001D 2403                      1-  605     	XORIA	0x03
     001E 0D03                      1-  606     	BTRSC	STATUS,2
                                    1-  607     	MGOTO	_00134_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020 01rr                      1-  608     	MOVR	_workStartFlag,W
     0021 2404                      1-  609     	XORIA	0x04
     0022 0903                      1-  610     	BTRSS	STATUS,2
                                    1-  611     	MGOTO	_00139_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024                           1-  612     _00134_DS_:
                                    1-  613     	.line	148, "main.c"; 	if(chrgFlag == 0)
                                    1-  614     	BANKSEL	_Status
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 09rr                      1-  615     	BTRSS	_Status,3
                                    1-  616     	.line	149, "main.c"; 	LedCtr2();
                                    1-  617     	MCALL	_LedCtr2
     0026 2rrr                      3-   66 m1      LCALL rom_address
     0027                           1-  618     _00139_DS_:
                                    1-  619     	.line	153, "main.c"; 	if(workStep)
                                    1-  620     	BANKSEL	_workStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1-  621     	MOVR	_workStep,W
     0029 0903                      1-  622     	BTRSS	STATUS,2
                                    1-  623     	.line	154, "main.c"; 	workCtr();
                                    1-  624     	MCALL	_workCtr
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  625     	.line	155, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  626     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  627     	MOVR	_workStep,W
     002D 0903                      1-  628     	BTRSS	STATUS,2
                                    1-  629     	MGOTO	_00145_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  630     	BANKSEL	_keyCount
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1-  631     	MOVR	_keyCount,W
     0031 0903                      1-  632     	BTRSS	STATUS,2
                                    1-  633     	MGOTO	_00145_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  634     	BANKSEL	_workStartFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  635     	MOVR	_workStartFlag,W
     0035 0903                      1-  636     	BTRSS	STATUS,2
                                    1-  637     	MGOTO	_00145_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  638     	BANKSEL	_PORTA
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 0Err                      1-  639     	BTRSC	_PORTA,5
                                    1-  640     	MGOTO	_00145_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  641     	.line	157, "main.c"; 	if(++sleepTime > 2000)
                                    1-  642     	BANKSEL	_sleepTime
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 05rr                      1-  643     	INCR	_sleepTime,F
     003C 0D03                      1-  644     	BTRSC	STATUS,2
     003D 05rr                      1-  645     	INCR	(_sleepTime + 1),F
                                    1-  646     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  647     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     003E 2107                      1-  648     	MOVIA	0x07
     003F 04rr                      1-  649     	SUBAR	(_sleepTime + 1),W
     0040 0903                      1-  650     	BTRSS	STATUS,2
                                    1-  651     	MGOTO	_00219_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21D1                      1-  652     	MOVIA	0xd1
     0043 04rr                      1-  653     	SUBAR	_sleepTime,W
     0044                           1-  654     _00219_DS_:
     0044 0803                      1-  655     	BTRSS	STATUS,0
                                    1-  656     	MGOTO	_00145_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  657     	.line	159, "main.c"; 	gotoSleep();
                                    1-  658     	MCALL	_gotoSleep
     0046 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  659     ;;unsigned compare: left < lit (0x384=900), size=2
     0047                           1-  660     _00145_DS_:
                                    1-  661     	.line	163, "main.c"; 	if(count900s >= 900)
     0047 2103                      1-  662     	MOVIA	0x03
                                    1-  663     	BANKSEL	_count900s
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1-  664     	SUBAR	(_count900s + 1),W
     004A 0903                      1-  665     	BTRSS	STATUS,2
                                    1-  666     	MGOTO	_00220_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 2184                      1-  667     	MOVIA	0x84
     004D 04rr                      1-  668     	SUBAR	_count900s,W
     004E                           1-  669     _00220_DS_:
     004E 0803                      1-  670     	BTRSS	STATUS,0
                                    1-  671     	MGOTO	_00150_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     	.line	165, "main.c"; 	powerOff();
                                    1-  673     	MCALL	_powerOff
     0050 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  674     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  675     ;;unsigned compare: left >= lit (0x65=101), size=2
     0051                           1-  676     _00150_DS_:
                                    1-  677     	.line	168, "main.c"; 	if(fgPRD > 100 || fgCount > 100)
     0051 2100                      1-  678     	MOVIA	0x00
                                    1-  679     	BANKSEL	_fgPRD
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1-  680     	SUBAR	(_fgPRD + 1),W
     0054 0903                      1-  681     	BTRSS	STATUS,2
                                    1-  682     	MGOTO	_00221_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 2165                      1-  683     	MOVIA	0x65
     0057 04rr                      1-  684     	SUBAR	_fgPRD,W
     0058                           1-  685     _00221_DS_:
     0058 0C03                      1-  686     	BTRSC	STATUS,0
                                    1-  687     	MGOTO	_00155_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  688     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  689     ;;unsigned compare: left >= lit (0x65=101), size=2
     005A 2100                      1-  690     	MOVIA	0x00
                                    1-  691     	BANKSEL	_fgCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1-  692     	SUBAR	(_fgCount + 1),W
     005D 0903                      1-  693     	BTRSS	STATUS,2
                                    1-  694     	MGOTO	_00222_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F 2165                      1-  695     	MOVIA	0x65
     0060 04rr                      1-  696     	SUBAR	_fgCount,W
     0061                           1-  697     _00222_DS_:
     0061 0803                      1-  698     	BTRSS	STATUS,0
                                    1-  699     	MGOTO	_00159_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  700     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  701     ;;unsigned compare: left >= lit (0x97=151), size=2
     0063                           1-  702     _00155_DS_:
                                    1-  703     	.line	170, "main.c"; 	if(fgCount > 150)
     0063 2100                      1-  704     	MOVIA	0x00
                                    1-  705     	BANKSEL	_fgCount
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1-  706     	SUBAR	(_fgCount + 1),W
     0066 0903                      1-  707     	BTRSS	STATUS,2
                                    1-  708     	MGOTO	_00223_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 2197                      1-  709     	MOVIA	0x97
     0069 04rr                      1-  710     	SUBAR	_fgCount,W
     006A                           1-  711     _00223_DS_:
     006A 0803                      1-  712     	BTRSS	STATUS,0
                                    1-  713     	MGOTO	_00152_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  714     	.line	172, "main.c"; 	pwmStop();
                                    1-  715     	MCALL	_pwmStop
     006C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  716     	.line	173, "main.c"; 	PORTB &= 0xFD;
     006D 1Crr                      1-  717     	BCR	_PORTB,1
                                    1-  718     	.line	174, "main.c"; 	fgPRD = 0;
                                    1-  719     	BANKSEL	_fgPRD
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 02rr                      1-  720     	CLRR	_fgPRD
     0070 02rr                      1-  721     	CLRR	(_fgPRD + 1)
                                    1-  722     	.line	175, "main.c"; 	fgCount = 0;
                                    1-  723     	BANKSEL	_fgCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1-  724     	CLRR	_fgCount
     0073 02rr                      1-  725     	CLRR	(_fgCount + 1)
                                    1-  726     	.line	176, "main.c"; 	delay(100);
     0074 2164                      1-  727     	MOVIA	0x64
                                    1-  728     	MCALL	_delay
     0075 2rrr                      3-   66 m1      LCALL rom_address
     0076                           1-  729     _00152_DS_:
                                    1-  730     	.line	178, "main.c"; 	if(++sleepTime > 2000)
                                    1-  731     	BANKSEL	_sleepTime
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 05rr                      1-  732     	INCR	_sleepTime,F
     0078 0D03                      1-  733     	BTRSC	STATUS,2
     0079 05rr                      1-  734     	INCR	(_sleepTime + 1),F
                                    1-  735     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  736     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     007A 2107                      1-  737     	MOVIA	0x07
     007B 04rr                      1-  738     	SUBAR	(_sleepTime + 1),W
     007C 0903                      1-  739     	BTRSS	STATUS,2
                                    1-  740     	MGOTO	_00224_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
     007E 21D1                      1-  741     	MOVIA	0xd1
     007F 04rr                      1-  742     	SUBAR	_sleepTime,W
     0080                           1-  743     _00224_DS_:
     0080 0803                      1-  744     	BTRSS	STATUS,0
                                    1-  745     	MGOTO	_00159_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  746     	.line	181, "main.c"; 	pwmStop();
                                    1-  747     	MCALL	_pwmStop
     0082 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  748     	.line	182, "main.c"; 	PORTB &= 0xFD;
     0083 1Crr                      1-  749     	BCR	_PORTB,1
                                    1-  750     	.line	184, "main.c"; 	AWUCON = 0x60;
     0084 2160                      1-  751     	MOVIA	0x60
     0085 00rr                      1-  752     	MOVAR	_AWUCON
                                    1-  753     	.line	185, "main.c"; 	fgPRD = 0;
                                    1-  754     	BANKSEL	_fgPRD
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 02rr                      1-  755     	CLRR	_fgPRD
     0088 02rr                      1-  756     	CLRR	(_fgPRD + 1)
                                    1-  757     	.line	186, "main.c"; 	fgCount = 0;
                                    1-  758     	BANKSEL	_fgCount
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 02rr                      1-  759     	CLRR	_fgCount
     008B 02rr                      1-  760     	CLRR	(_fgCount + 1)
                                    1-  761     	.line	187, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     008C 210B                      1-  762     	MOVIA	0x0b
     008D 00rr                      1-  763     	MOVAR	_INTE
                                    1-  764     	.line	188, "main.c"; 	PCON =  C_LVR_En ;	
     008E 2108                      1-  765     	MOVIA	0x08
     008F 00rr                      1-  766     	MOVAR	_PCON
                                    1-  767     	.line	189, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0090 02rr                      1-  768     	CLRR	_INTF
                                    1-  769     	.line	190, "main.c"; 	CLRWDT();
     0091 0002                      1-  770     	clrwdt
                                    1-  771     	.line	191, "main.c"; 	ENI();
     0092 0004                      1-  772     	ENI
                                    1-  773     	.line	192, "main.c"; 	SLEEP();
     0093 0001                      1-  774     	sleep
                                    1-  775     	.line	193, "main.c"; 	AWUCON = 0x00;
     0094 02rr                      1-  776     	CLRR	_AWUCON
                                    1-  777     	.line	194, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0095 2101                      1-  778     	MOVIA	0x01
     0096 00rr                      1-  779     	MOVAR	_INTE
                                    1-  780     	.line	195, "main.c"; 	INTF = 0;
     0097 02rr                      1-  781     	CLRR	_INTF
                                    1-  782     	.line	197, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0098 21A8                      1-  783     	MOVIA	0xa8
     0099 00rr                      1-  784     	MOVAR	_PCON
                                    1-  785     	MGOTO	_00159_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  786     	.line	201, "main.c"; 	}
                                    1-  787     	RETURN	
     009B 0010                      3-   40 m1      ret
                                    1-  788     ; exit point of _main
                                    1-  790     ;***
                                    1-  791     ;  pBlock Stats: dbName = C
                                    1-  792     ;***
                                    1-  793     ;has an exit
                                    1-  794     ;; Starting pCode block
                                    1-  795     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  797     _F_wait_eoc:
                                    1-  798     ; 2 exit points
     0000                           1-  799     _00606_DS_:
                                    1-  800     	.line	787, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  801     	BTRSS	_ADMDbits,5
                                    1-  802     	MGOTO	_00606_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  803     	.line	789, "main.c"; 	}
                                    1-  804     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  805     ; exit point of _F_wait_eoc
                                    1-  807     ;***
                                    1-  808     ;  pBlock Stats: dbName = C
                                    1-  809     ;***
                                    1-  810     ;has an exit
                                    1-  811     ;functions called:
                                    1-  812     ;   _delay
                                    1-  813     ;   _F_wait_eoc
                                    1-  814     ;   _delay
                                    1-  815     ;   _F_wait_eoc
                                    1-  816     ;6 compiler assigned registers:
                                    1-  817     ;   r0x1022
                                    1-  818     ;   r0x1023
                                    1-  819     ;   r0x1024
                                    1-  820     ;   r0x1025
                                    1-  821     ;   r0x1026
                                    1-  822     ;   r0x1027
                                    1-  823     ;; Starting pCode block
                                    1-  824     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  826     ;local variable name mapping:
     0000                           1-  829     _F_AIN5_Convert:
                                    1-  830     ; 2 exit points
                                    1-  831     	.line	770, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  832     	BANKSEL	r0x1022
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  833     	MOVAR	r0x1022
                                    1-  834     	.line	772, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  835     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  836     	CLRR	_R_AIN5_DATA_LB
                                    1-  837     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  838     	CLRR	_R_AIN5_DATA
     0006 02rr                      1-  839     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  840     	.line	774, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  841     	MOVIA	0x94
     0008 00rr                      1-  842     	MOVAR	_ADMD
                                    1-  843     	.line	775, "main.c"; 	delay(200);	
     0009 21C8                      1-  844     	MOVIA	0xc8
                                    1-  845     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  846     	.line	776, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  847     	MOVIA	0x01
                                    1-  848     	BANKSEL	r0x1023
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  849     	MOVAR	r0x1023
     000E                           1-  850     _00599_DS_:
                                    1-  851     	BANKSEL	r0x1023
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  852     	MOVR	r0x1023,W
                                    1-  853     	BANKSEL	r0x1022
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  854     	SUBAR	r0x1022,W
     0012 0803                      1-  855     	BTRSS	STATUS,0
                                    1-  856     	MGOTO	_00601_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  857     	.line	778, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  858     	BSR	_ADMDbits,6
                                    1-  859     	.line	779, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  860     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  861     	.line	780, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  862     	MOVIA	0x0f
     0017 10rr                      1-  863     	ANDAR	_ADR,W
                                    1-  864     ;;3	MOVAR	r0x1024
                                    1-  865     	BANKSEL	_R_AIN5_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  866     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  867     	.line	781, "main.c"; 	R_AIN5_DATA    += ADD; 
     001A 01rr                      1-  868     	MOVR	_ADD,W
                                    1-  869     	BANKSEL	r0x1024
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  870     	MOVAR	r0x1024
                                    1-  871     ;;1	CLRR	r0x1025
                                    1-  872     ;;102	MOVR	r0x1024,W
                                    1-  873     ;;100	MOVAR	r0x1026
     001D 2100                      1-  874     	MOVIA	0x00
                                    1-  875     	BANKSEL	r0x1027
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  876     	MOVAR	r0x1027
                                    1-  877     ;;101	MOVR	r0x1026,W
                                    1-  878     	BANKSEL	r0x1024
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  879     	MOVR	r0x1024,W
                                    1-  880     	BANKSEL	_R_AIN5_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  881     	ADDAR	_R_AIN5_DATA,F
                                    1-  882     	BANKSEL	r0x1027
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  883     	MOVR	r0x1027,W
     0026 0C03                      1-  884     	BTRSC	STATUS,0
     0027 05rr                      1-  885     	INCR	r0x1027,W
     0028 0D03                      1-  886     	BTRSC	STATUS,2
                                    1-  887     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  888     	BANKSEL	_R_AIN5_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  889     	ADDAR	(_R_AIN5_DATA + 1),F
     002C                           1-  890     _00001_DS_:
                                    1-  891     	.line	776, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  892     	BANKSEL	r0x1023
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  893     	INCR	r0x1023,F
                                    1-  894     	MGOTO	_00599_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  895     _00601_DS_:
                                    1-  896     	.line	783, "main.c"; 	}
                                    1-  897     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  898     ; exit point of _F_AIN5_Convert
                                    1-  900     ;***
                                    1-  901     ;  pBlock Stats: dbName = C
                                    1-  902     ;***
                                    1-  903     ;functions called:
                                    1-  904     ;   _F_AIN5_Convert
                                    1-  905     ;   _LEDHOFF
                                    1-  906     ;   _LEDLOFF
                                    1-  907     ;   _F_AIN5_Convert
                                    1-  908     ;   _LEDHOFF
                                    1-  909     ;   _LEDLOFF
                                    1-  910     ;4 compiler assigned registers:
                                    1-  911     ;   r0x1028
                                    1-  912     ;   r0x1029
                                    1-  913     ;   r0x102A
                                    1-  914     ;   r0x102B
                                    1-  915     ;; Starting pCode block
                                    1-  916     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  918     _checkBatAD:
                                    1-  919     ; 0 exit points
                                    1-  920     	.line	679, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  921     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  922     	CLRR	_R_AIN5_DATA_LB
                                    1-  923     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  924     	CLRR	_R_AIN5_DATA
     0004 02rr                      1-  925     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  926     	.line	680, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  927     	MOVIA	0x08
                                    1-  928     	MCALL	_F_AIN5_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  929     	.line	681, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  930     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1-  931     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1-  932     	ANDIA	0xf0
     000A 00rr                      1-  933     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1-  934     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1-  935     	MOVAR	_R_AIN5_DATA
     000D 220F                      1-  936     	ANDIA	0x0f
     000E 11rr                      1-  937     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1-  938     	XORAR	_R_AIN5_DATA,F
                                    1-  939     	.line	682, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  940     	MOVIA	0xf0
                                    1-  941     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1-  942     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  943     	.line	683, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  944     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  945     	BANKSEL	r0x102A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  946     	MOVAR	r0x102A
                                    1-  947     ;;1	MOVAR	r0x1028
                                    1-  948     ;;1	CLRR	r0x1029
                                    1-  949     ;;99	MOVR	r0x1028,W
     0016 2100                      1-  950     	MOVIA	0x00
                                    1-  951     	BANKSEL	r0x102B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  952     	MOVAR	r0x102B
                                    1-  953     	BANKSEL	r0x102A
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  954     	MOVR	r0x102A,W
                                    1-  955     	BANKSEL	_R_AIN5_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  956     	ADDAR	_R_AIN5_DATA,F
                                    1-  957     	BANKSEL	r0x102B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  958     	MOVR	r0x102B,W
     001F 0C03                      1-  959     	BTRSC	STATUS,0
     0020 05rr                      1-  960     	INCR	r0x102B,W
     0021 0D03                      1-  961     	BTRSC	STATUS,2
                                    1-  962     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  963     	BANKSEL	_R_AIN5_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  964     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  965     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  966     _00002_DS_:
                                    1-  967     	.line	684, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1-  968     	BCR	STATUS,0
                                    1-  969     	BANKSEL	_R_AIN5_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1-  970     	RRR	(_R_AIN5_DATA + 1),F
     0028 13rr                      1-  971     	RRR	_R_AIN5_DATA,F
                                    1-  972     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  973     	BCR	STATUS,0
     002A 13rr                      1-  974     	RRR	(_R_AIN5_DATA + 1),F
     002B 13rr                      1-  975     	RRR	_R_AIN5_DATA,F
                                    1-  976     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  977     	BCR	STATUS,0
     002D 13rr                      1-  978     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1-  979     	RRR	_R_AIN5_DATA,F
                                    1-  980     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  981     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1-  982     	.line	685, "main.c"; 	if(R_AIN5_DATA > 1555)
     002F 2106                      1-  983     	MOVIA	0x06
     0030 04rr                      1-  984     	SUBAR	(_R_AIN5_DATA + 1),W
     0031 0903                      1-  985     	BTRSS	STATUS,2
                                    1-  986     	MGOTO	_00580_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 2114                      1-  987     	MOVIA	0x14
     0034 04rr                      1-  988     	SUBAR	_R_AIN5_DATA,W
     0035                           1-  989     _00580_DS_:
     0035 0803                      1-  990     	BTRSS	STATUS,0
                                    1-  991     	MGOTO	_00486_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     	.line	687, "main.c"; 	R_AIN5_DATA = 1555;
     0037 2113                      1-  993     	MOVIA	0x13
                                    1-  994     	BANKSEL	_R_AIN5_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1-  995     	MOVAR	_R_AIN5_DATA
     003A 2106                      1-  996     	MOVIA	0x06
     003B 00rr                      1-  997     	MOVAR	(_R_AIN5_DATA + 1)
                                    1-  998     	MGOTO	_00487_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  999     ;;unsigned compare: left < lit (0x45D=1117), size=2
     003D                           1- 1000     _00486_DS_:
                                    1- 1001     	.line	689, "main.c"; 	else if(R_AIN5_DATA < 1117)
     003D 2104                      1- 1002     	MOVIA	0x04
                                    1- 1003     	BANKSEL	_R_AIN5_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1004     	SUBAR	(_R_AIN5_DATA + 1),W
     0040 0903                      1- 1005     	BTRSS	STATUS,2
                                    1- 1006     	MGOTO	_00581_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 215D                      1- 1007     	MOVIA	0x5d
     0043 04rr                      1- 1008     	SUBAR	_R_AIN5_DATA,W
     0044                           1- 1009     _00581_DS_:
     0044 0C03                      1- 1010     	BTRSC	STATUS,0
                                    1- 1011     	MGOTO	_00487_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1012     	.line	691, "main.c"; 	R_AIN5_DATA = 1117;
     0046 215D                      1- 1013     	MOVIA	0x5d
                                    1- 1014     	BANKSEL	_R_AIN5_DATA
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1- 1015     	MOVAR	_R_AIN5_DATA
     0049 2104                      1- 1016     	MOVIA	0x04
     004A 00rr                      1- 1017     	MOVAR	(_R_AIN5_DATA + 1)
     004B                           1- 1018     _00487_DS_:
                                    1- 1019     	.line	693, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA - 1117;
     004B 21A3                      1- 1020     	MOVIA	0xa3
                                    1- 1021     	BANKSEL	_R_AIN5_DATA
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 03rr                      1- 1022     	ADDAR	_R_AIN5_DATA,F
     004E 21FB                      1- 1023     	MOVIA	0xfb
     004F 0C03                      1- 1024     	BTRSC	STATUS,0
     0050 21FC                      1- 1025     	MOVIA	0xfc
     0051 03rr                      1- 1026     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1- 1027     ;;unsigned compare: left < lit (0x1AE=430), size=2
                                    1- 1028     	.line	695, "main.c"; 	if(R_AIN5_DATA >= 430)
     0052 2101                      1- 1029     	MOVIA	0x01
     0053 04rr                      1- 1030     	SUBAR	(_R_AIN5_DATA + 1),W
     0054 0903                      1- 1031     	BTRSS	STATUS,2
                                    1- 1032     	MGOTO	_00582_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 21AE                      1- 1033     	MOVIA	0xae
     0057 04rr                      1- 1034     	SUBAR	_R_AIN5_DATA,W
     0058                           1- 1035     _00582_DS_:
     0058 0803                      1- 1036     	BTRSS	STATUS,0
                                    1- 1037     	MGOTO	_00522_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1038     	.line	697, "main.c"; 	pwStep = 6;
     005A 2106                      1- 1039     	MOVIA	0x06
                                    1- 1040     	BANKSEL	_pwStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1041     	MOVAR	_pwStep
                                    1- 1042     	MGOTO	_00003_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1044     ;;unsigned compare: left >= lit (0x18B=395), size=2
     005E                           1- 1045     _00522_DS_:
                                    1- 1046     	.line	699, "main.c"; 	else if(R_AIN5_DATA > 394)
     005E 2101                      1- 1047     	MOVIA	0x01
                                    1- 1048     	BANKSEL	_R_AIN5_DATA
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 04rr                      1- 1049     	SUBAR	(_R_AIN5_DATA + 1),W
     0061 0903                      1- 1050     	BTRSS	STATUS,2
                                    1- 1051     	MGOTO	_00583_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063 218B                      1- 1052     	MOVIA	0x8b
     0064 04rr                      1- 1053     	SUBAR	_R_AIN5_DATA,W
     0065                           1- 1054     _00583_DS_:
     0065 0803                      1- 1055     	BTRSS	STATUS,0
                                    1- 1056     	MGOTO	_00519_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1057     	.line	702, "main.c"; 	if(pwStep == 6)
                                    1- 1058     	BANKSEL	_pwStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 1059     	MOVR	_pwStep,W
     0069 2406                      1- 1060     	XORIA	0x06
     006A 0903                      1- 1061     	BTRSS	STATUS,2
                                    1- 1062     	MGOTO	_00491_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1063     ;;unsigned compare: left < lit (0x195=405), size=2
                                    1- 1064     	.line	704, "main.c"; 	if(R_AIN5_DATA < 405)
     006C 2101                      1- 1065     	MOVIA	0x01
                                    1- 1066     	BANKSEL	_R_AIN5_DATA
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 04rr                      1- 1067     	SUBAR	(_R_AIN5_DATA + 1),W
     006F 0903                      1- 1068     	BTRSS	STATUS,2
                                    1- 1069     	MGOTO	_00584_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071 2195                      1- 1070     	MOVIA	0x95
     0072 04rr                      1- 1071     	SUBAR	_R_AIN5_DATA,W
     0073                           1- 1072     _00584_DS_:
     0073 0C03                      1- 1073     	BTRSC	STATUS,0
                                    1- 1074     	MGOTO	_00492_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1075     	.line	705, "main.c"; 	pwStep = 5;
     0075 2105                      1- 1076     	MOVIA	0x05
                                    1- 1077     	BANKSEL	_pwStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 1078     	MOVAR	_pwStep
                                    1- 1079     	MGOTO	_00492_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1- 1080     _00491_DS_:
                                    1- 1081     	.line	709, "main.c"; 	pwStep = 5;
     0079 2105                      1- 1082     	MOVIA	0x05
                                    1- 1083     	BANKSEL	_pwStep
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1- 1084     	MOVAR	_pwStep
                                    1- 1085     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1086     ;;unsigned compare: left >= lit (0x19B=411), size=2
     007C                           1- 1087     _00492_DS_:
                                    1- 1088     	.line	712, "main.c"; 	if(R_AIN5_DATA > 410)
     007C 2101                      1- 1089     	MOVIA	0x01
                                    1- 1090     	BANKSEL	_R_AIN5_DATA
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 04rr                      1- 1091     	SUBAR	(_R_AIN5_DATA + 1),W
     007F 0903                      1- 1092     	BTRSS	STATUS,2
                                    1- 1093     	MGOTO	_00585_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081 219B                      1- 1094     	MOVIA	0x9b
     0082 04rr                      1- 1095     	SUBAR	_R_AIN5_DATA,W
     0083                           1- 1096     _00585_DS_:
     0083 0803                      1- 1097     	BTRSS	STATUS,0
                                    1- 1098     	MGOTO	_00003_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1099     	.line	714, "main.c"; 	if(++chrgTime > 1800)
                                    1- 1100     	BANKSEL	_chrgTime
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 05rr                      1- 1101     	INCR	_chrgTime,F
     0087 0D03                      1- 1102     	BTRSC	STATUS,2
     0088 05rr                      1- 1103     	INCR	(_chrgTime + 1),F
                                    1- 1104     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1105     ;;unsigned compare: left >= lit (0x709=1801), size=2
     0089 2107                      1- 1106     	MOVIA	0x07
     008A 04rr                      1- 1107     	SUBAR	(_chrgTime + 1),W
     008B 0903                      1- 1108     	BTRSS	STATUS,2
                                    1- 1109     	MGOTO	_00586_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D 2109                      1- 1110     	MOVIA	0x09
     008E 04rr                      1- 1111     	SUBAR	_chrgTime,W
     008F                           1- 1112     _00586_DS_:
     008F 0803                      1- 1113     	BTRSS	STATUS,0
                                    1- 1114     	MGOTO	_00003_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1115     	.line	716, "main.c"; 	chrgTime = 1800;
     0091 2108                      1- 1116     	MOVIA	0x08
                                    1- 1117     	BANKSEL	_chrgTime
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 1118     	MOVAR	_chrgTime
     0094 2107                      1- 1119     	MOVIA	0x07
     0095 00rr                      1- 1120     	MOVAR	(_chrgTime + 1)
                                    1- 1121     	.line	717, "main.c"; 	pwStep = 6;
     0096 2106                      1- 1122     	MOVIA	0x06
                                    1- 1123     	BANKSEL	_pwStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1124     	MOVAR	_pwStep
                                    1- 1125     	MGOTO	_00003_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1126     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1127     ;;unsigned compare: left >= lit (0xE0=224), size=2
     009A                           1- 1128     _00519_DS_:
                                    1- 1129     	.line	721, "main.c"; 	else if(R_AIN5_DATA > 223)
     009A 2100                      1- 1130     	MOVIA	0x00
                                    1- 1131     	BANKSEL	_R_AIN5_DATA
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1132     	SUBAR	(_R_AIN5_DATA + 1),W
     009D 0903                      1- 1133     	BTRSS	STATUS,2
                                    1- 1134     	MGOTO	_00587_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F 21E0                      1- 1135     	MOVIA	0xe0
     00A0 04rr                      1- 1136     	SUBAR	_R_AIN5_DATA,W
     00A1                           1- 1137     _00587_DS_:
     00A1 0803                      1- 1138     	BTRSS	STATUS,0
                                    1- 1139     	MGOTO	_00516_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1140     	.line	724, "main.c"; 	pwStep = 4;
     00A3 2104                      1- 1141     	MOVIA	0x04
                                    1- 1142     	BANKSEL	_pwStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1143     	MOVAR	_pwStep
                                    1- 1144     	.line	725, "main.c"; 	chrgTime = 0;
                                    1- 1145     	BANKSEL	_chrgTime
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 02rr                      1- 1146     	CLRR	_chrgTime
     00A8 02rr                      1- 1147     	CLRR	(_chrgTime + 1)
                                    1- 1148     	MGOTO	_00003_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1149     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1150     ;;unsigned compare: left >= lit (0x96=150), size=2
     00AA                           1- 1151     _00516_DS_:
                                    1- 1152     	.line	727, "main.c"; 	else if(R_AIN5_DATA > 149)
     00AA 2100                      1- 1153     	MOVIA	0x00
                                    1- 1154     	BANKSEL	_R_AIN5_DATA
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 04rr                      1- 1155     	SUBAR	(_R_AIN5_DATA + 1),W
     00AD 0903                      1- 1156     	BTRSS	STATUS,2
                                    1- 1157     	MGOTO	_00588_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF 2196                      1- 1158     	MOVIA	0x96
     00B0 04rr                      1- 1159     	SUBAR	_R_AIN5_DATA,W
     00B1                           1- 1160     _00588_DS_:
     00B1 0803                      1- 1161     	BTRSS	STATUS,0
                                    1- 1162     	MGOTO	_00513_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1163     	.line	730, "main.c"; 	pwStep = 3;
     00B3 2103                      1- 1164     	MOVIA	0x03
                                    1- 1165     	BANKSEL	_pwStep
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 1166     	MOVAR	_pwStep
                                    1- 1167     	.line	731, "main.c"; 	chrgTime = 0;
                                    1- 1168     	BANKSEL	_chrgTime
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 02rr                      1- 1169     	CLRR	_chrgTime
     00B8 02rr                      1- 1170     	CLRR	(_chrgTime + 1)
                                    1- 1171     	MGOTO	_00003_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1172     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1173     ;;unsigned compare: left >= lit (0x5E=94), size=2
     00BA                           1- 1174     _00513_DS_:
                                    1- 1175     	.line	733, "main.c"; 	else if(R_AIN5_DATA > 93)
     00BA 2100                      1- 1176     	MOVIA	0x00
                                    1- 1177     	BANKSEL	_R_AIN5_DATA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 1178     	SUBAR	(_R_AIN5_DATA + 1),W
     00BD 0903                      1- 1179     	BTRSS	STATUS,2
                                    1- 1180     	MGOTO	_00589_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF 215E                      1- 1181     	MOVIA	0x5e
     00C0 04rr                      1- 1182     	SUBAR	_R_AIN5_DATA,W
     00C1                           1- 1183     _00589_DS_:
     00C1 0803                      1- 1184     	BTRSS	STATUS,0
                                    1- 1185     	MGOTO	_00510_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1186     	.line	736, "main.c"; 	pwStep = 2;
     00C3 2102                      1- 1187     	MOVIA	0x02
                                    1- 1188     	BANKSEL	_pwStep
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 00rr                      1- 1189     	MOVAR	_pwStep
                                    1- 1190     	.line	737, "main.c"; 	chrgTime = 0;
                                    1- 1191     	BANKSEL	_chrgTime
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 02rr                      1- 1192     	CLRR	_chrgTime
     00C8 02rr                      1- 1193     	CLRR	(_chrgTime + 1)
                                    1- 1194     	.line	738, "main.c"; 	if(workStartFlag == 4)
                                    1- 1195     	BANKSEL	_workStartFlag
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 1196     	MOVR	_workStartFlag,W
     00CB 2404                      1- 1197     	XORIA	0x04
     00CC 0903                      1- 1198     	BTRSS	STATUS,2
                                    1- 1199     	MGOTO	_00003_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1200     	.line	740, "main.c"; 	workStartFlag = 0;
     00CE 02rr                      1- 1201     	CLRR	_workStartFlag
                                    1- 1202     	.line	741, "main.c"; 	LEDHOFF();
                                    1- 1203     	MCALL	_LEDHOFF
     00CF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1204     	.line	742, "main.c"; 	LEDLOFF();
                                    1- 1205     	MCALL	_LEDLOFF
     00D0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1206     	MGOTO	_00003_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
     00D2                           1- 1207     _00510_DS_:
                                    1- 1208     	.line	748, "main.c"; 	if(pwStep == 0 || pwStep == 1 || (++lowBatTime > 10))
                                    1- 1209     	BANKSEL	_pwStep
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 01rr                      1- 1210     	MOVR	_pwStep,W
     00D4 0D03                      1- 1211     	BTRSC	STATUS,2
                                    1- 1212     	MGOTO	_00505_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6 01rr                      1- 1213     	MOVR	_pwStep,W
     00D7 2401                      1- 1214     	XORIA	0x01
     00D8 0D03                      1- 1215     	BTRSC	STATUS,2
                                    1- 1216     	MGOTO	_00505_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1217     	BANKSEL	_lowBatTime
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 05rr                      1- 1218     	INCR	_lowBatTime,F
     00DC 210B                      1- 1219     	MOVIA	0x0b
     00DD 04rr                      1- 1220     	SUBAR	_lowBatTime,W
     00DE 0803                      1- 1221     	BTRSS	STATUS,0
                                    1- 1222     	MGOTO	_00003_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
     00E0                           1- 1223     _00505_DS_:
                                    1- 1224     	.line	750, "main.c"; 	lowBatTime = 0;
                                    1- 1225     	BANKSEL	_lowBatTime
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 02rr                      1- 1226     	CLRR	_lowBatTime
                                    1- 1227     	.line	751, "main.c"; 	pwStep = 1;
     00E2 2101                      1- 1228     	MOVIA	0x01
                                    1- 1229     	BANKSEL	_pwStep
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 00rr                      1- 1230     	MOVAR	_pwStep
                                    1- 1231     	.line	752, "main.c"; 	chrgTime = 0;
                                    1- 1232     	BANKSEL	_chrgTime
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 02rr                      1- 1233     	CLRR	_chrgTime
     00E7 02rr                      1- 1234     	CLRR	(_chrgTime + 1)
                                    1- 1235     	.line	753, "main.c"; 	if(workStep > 0 && fgPRD < 100 && workStartFlag == 0)
                                    1- 1236     	BANKSEL	_workStep
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 01rr                      1- 1237     	MOVR	_workStep,W
     00EA 0D03                      1- 1238     	BTRSC	STATUS,2
                                    1- 1239     	MGOTO	_00003_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1240     ;;unsigned compare: left < lit (0x64=100), size=2
     00EC 2100                      1- 1241     	MOVIA	0x00
                                    1- 1242     	BANKSEL	_fgPRD
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 04rr                      1- 1243     	SUBAR	(_fgPRD + 1),W
     00EF 0903                      1- 1244     	BTRSS	STATUS,2
                                    1- 1245     	MGOTO	_00592_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
     00F1 2164                      1- 1246     	MOVIA	0x64
     00F2 04rr                      1- 1247     	SUBAR	_fgPRD,W
     00F3                           1- 1248     _00592_DS_:
     00F3 0C03                      1- 1249     	BTRSC	STATUS,0
                                    1- 1250     	MGOTO	_00003_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1251     	BANKSEL	_workStartFlag
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 01rr                      1- 1252     	MOVR	_workStartFlag,W
     00F7 0903                      1- 1253     	BTRSS	STATUS,2
                                    1- 1254     	MGOTO	_00003_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1255     	.line	755, "main.c"; 	workStartFlag = 4;
     00F9 2104                      1- 1256     	MOVIA	0x04
     00FA 00rr                      1- 1257     	MOVAR	_workStartFlag
                                    1- 1258     	.line	756, "main.c"; 	if(redLedFlag == 0)
                                    1- 1259     	BANKSEL	_Status
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 0Drr                      1- 1260     	BTRSC	_Status,2
                                    1- 1261     	MGOTO	_00003_DS_
     00FD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1262     	.line	758, "main.c"; 	startStep = 0;
                                    1- 1263     	BANKSEL	_startStep
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 02rr                      1- 1264     	CLRR	_startStep
     0100                           1- 1265     _00003_DS_:
                                    1- 1266     	.line	765, "main.c"; 	}
                                    1- 1267     	RETURN	
     0100 0010                      3-   40 m1      ret
                                    1- 1269     ;***
                                    1- 1270     ;  pBlock Stats: dbName = C
                                    1- 1271     ;***
                                    1- 1272     ;has an exit
                                    1- 1273     ;functions called:
                                    1- 1274     ;   _delay
                                    1- 1275     ;   _delay
                                    1- 1276     ;; Starting pCode block
                                    1- 1277     .segment "code"; module=main, function=_initAD
     0000                           1- 1279     _initAD:
                                    1- 1280     ; 2 exit points
                                    1- 1281     	.line	655, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1282     	MOVIA	0x84
     0001 00rr                      1- 1283     	MOVAR	_ADMD
                                    1- 1284     	.line	660, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1285     	CLRR	_ADVREFH
                                    1- 1286     	.line	665, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1287     	MOVIA	0x10
     0004 00rr                      1- 1288     	MOVAR	_ADR
                                    1- 1289     	.line	667, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1290     	MOVIA	0x03
     0006 00rr                      1- 1291     	MOVAR	_ADCR
                                    1- 1292     	.line	670, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1293     	BSR	_ADMDbits,4
                                    1- 1294     	.line	671, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1295     	MOVIA	0x64
                                    1- 1296     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1297     	.line	674, "main.c"; 	}
                                    1- 1298     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1299     ; exit point of _initAD
                                    1- 1301     ;***
                                    1- 1302     ;  pBlock Stats: dbName = C
                                    1- 1303     ;***
                                    1- 1304     ;has an exit
                                    1- 1305     ;2 compiler assigned registers:
                                    1- 1306     ;   r0x1020
                                    1- 1307     ;   r0x1021
                                    1- 1308     ;; Starting pCode block
                                    1- 1309     .segment "code"; module=main, function=_delay
                                    1- 1311     ;local variable name mapping:
     0000                           1- 1314     _delay:
                                    1- 1315     ; 2 exit points
                                    1- 1316     	.line	645, "main.c"; 	void delay(u8t time)
                                    1- 1317     	BANKSEL	r0x1020
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1318     	MOVAR	r0x1020
                                    1- 1319     	.line	647, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1320     	BANKSEL	r0x1021
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1321     	CLRR	r0x1021
     0004                           1- 1322     _00472_DS_:
                                    1- 1323     	BANKSEL	r0x1020
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1324     	MOVR	r0x1020,W
                                    1- 1325     	BANKSEL	r0x1021
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1326     	SUBAR	r0x1021,W
     0008 0C03                      1- 1327     	BTRSC	STATUS,0
                                    1- 1328     	MGOTO	_00474_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1329     	.line	648, "main.c"; 	NOP();
     000A 0000                      1- 1330     	nop
                                    1- 1331     	.line	647, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1332     	BANKSEL	r0x1021
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1333     	INCR	r0x1021,F
                                    1- 1334     	MGOTO	_00472_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1335     _00474_DS_:
                                    1- 1336     	.line	649, "main.c"; 	}
                                    1- 1337     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1338     ; exit point of _delay
                                    1- 1340     ;***
                                    1- 1341     ;  pBlock Stats: dbName = C
                                    1- 1342     ;***
                                    1- 1343     ;has an exit
                                    1- 1344     ;functions called:
                                    1- 1345     ;   _pwmStop
                                    1- 1346     ;   _LedInput
                                    1- 1347     ;   _LEDLOFF
                                    1- 1348     ;   _LEDHON
                                    1- 1349     ;   _LEDHOFF
                                    1- 1350     ;   _LEDHOFF
                                    1- 1351     ;   _LEDLOFF
                                    1- 1352     ;   _pwmStop
                                    1- 1353     ;   _LedInput
                                    1- 1354     ;   _LEDLOFF
                                    1- 1355     ;   _LEDHON
                                    1- 1356     ;   _LEDHOFF
                                    1- 1357     ;   _LEDHOFF
                                    1- 1358     ;   _LEDLOFF
                                    1- 1359     ;; Starting pCode block
                                    1- 1360     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1362     _chrgCtr:
                                    1- 1363     ; 2 exit points
                                    1- 1364     	.line	605, "main.c"; 	if(PORTA & 0x20)
                                    1- 1365     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 1366     	BTRSS	_PORTA,5
                                    1- 1367     	MGOTO	_00463_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1368     	.line	608, "main.c"; 	chrgFlag = 1;
                                    1- 1369     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 1370     	BSR	_Status,3
                                    1- 1371     	.line	609, "main.c"; 	workStartFlag = 0;
                                    1- 1372     	BANKSEL	_workStartFlag
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1373     	CLRR	_workStartFlag
                                    1- 1374     	.line	610, "main.c"; 	workStep = 0;
                                    1- 1375     	BANKSEL	_workStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1376     	CLRR	_workStep
                                    1- 1377     	.line	611, "main.c"; 	ledStep = 0;
                                    1- 1378     	BANKSEL	_ledStep
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 1379     	CLRR	_ledStep
                                    1- 1380     	.line	612, "main.c"; 	pwmStop();
                                    1- 1381     	MCALL	_pwmStop
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1382     	.line	613, "main.c"; 	LedInput();
                                    1- 1383     	MCALL	_LedInput
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1384     	.line	614, "main.c"; 	PORTB &= 0xFD;
     000D 1Crr                      1- 1385     	BCR	_PORTB,1
                                    1- 1386     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1387     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1388     	.line	615, "main.c"; 	if(pwStep > 5)
     000E 2106                      1- 1389     	MOVIA	0x06
                                    1- 1390     	BANKSEL	_pwStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 1391     	SUBAR	_pwStep,W
     0011 0803                      1- 1392     	BTRSS	STATUS,0
                                    1- 1393     	MGOTO	_00458_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1394     	.line	618, "main.c"; 	LEDLOFF();
                                    1- 1395     	MCALL	_LEDLOFF
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1396     	.line	619, "main.c"; 	LEDHON();
                                    1- 1397     	MCALL	_LEDHON
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1398     	MGOTO	_00465_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 1399     _00458_DS_:
                                    1- 1400     	.line	623, "main.c"; 	if(pwStep == 6)
                                    1- 1401     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1402     	MOVR	_pwStep,W
     0018 2406                      1- 1403     	XORIA	0x06
     0019 0903                      1- 1404     	BTRSS	STATUS,2
                                    1- 1405     	MGOTO	_00456_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1406     	.line	625, "main.c"; 	pwStep = 5;
     001B 2105                      1- 1407     	MOVIA	0x05
     001C 00rr                      1- 1408     	MOVAR	_pwStep
     001D                           1- 1409     _00456_DS_:
                                    1- 1410     	.line	627, "main.c"; 	LEDHOFF();
                                    1- 1411     	MCALL	_LEDHOFF
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1412     	.line	628, "main.c"; 	PORTA ^= 0x08;
     001E 2108                      1- 1413     	MOVIA	0x08
                                    1- 1414     	BANKSEL	_PORTA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 12rr                      1- 1415     	XORAR	_PORTA,F
                                    1- 1416     	MGOTO	_00465_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 1417     _00463_DS_:
                                    1- 1418     	.line	633, "main.c"; 	chrgFlag = 0;
                                    1- 1419     	BANKSEL	_Status
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 1Drr                      1- 1420     	BCR	_Status,3
                                    1- 1421     	.line	634, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 1422     	BANKSEL	_chrgTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1423     	CLRR	_chrgTime
     0026 02rr                      1- 1424     	CLRR	(_chrgTime + 1)
                                    1- 1425     	.line	635, "main.c"; 	if(workStartFlag == 0)
                                    1- 1426     	BANKSEL	_workStartFlag
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 1427     	MOVR	_workStartFlag,W
     0029 0903                      1- 1428     	BTRSS	STATUS,2
                                    1- 1429     	MGOTO	_00465_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1430     	.line	637, "main.c"; 	LEDHOFF();
                                    1- 1431     	MCALL	_LEDHOFF
     002B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1432     	.line	638, "main.c"; 	LEDLOFF();	
                                    1- 1433     	MCALL	_LEDLOFF
     002C 2rrr                      3-   66 m1      LCALL rom_address
     002D                           1- 1434     _00465_DS_:
                                    1- 1435     	.line	642, "main.c"; 	}
                                    1- 1436     	RETURN	
     002D 0010                      3-   40 m1      ret
                                    1- 1437     ; exit point of _chrgCtr
                                    1- 1439     ;***
                                    1- 1440     ;  pBlock Stats: dbName = C
                                    1- 1441     ;***
                                    1- 1442     ;has an exit
                                    1- 1443     ;1 compiler assigned register :
                                    1- 1444     ;   r0x102D
                                    1- 1445     ;; Starting pCode block
                                    1- 1446     .segment "code"; module=main, function=_keyRead
                                    1- 1448     ;local variable name mapping:
     0000                           1- 1450     _keyRead:
                                    1- 1451     ; 2 exit points
                                    1- 1452     	.line	568, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1453     	BANKSEL	r0x102D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1454     	MOVAR	r0x102D
                                    1- 1455     	.line	570, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1456     	MOVR	r0x102D,W
     0003 0D03                      1- 1457     	BTRSC	STATUS,2
                                    1- 1458     	MGOTO	_00448_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1459     	.line	572, "main.c"; 	keyCount++;
                                    1- 1460     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1461     	INCR	_keyCount,F
                                    1- 1462     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 1463     	.line	573, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 1464     	MOVIA	0x64
     0008 04rr                      1- 1465     	SUBAR	_keyCount,W
     0009 0803                      1- 1466     	BTRSS	STATUS,0
                                    1- 1467     	MGOTO	_00449_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1468     	.line	575, "main.c"; 	keyCount = 100;
     000B 2164                      1- 1469     	MOVIA	0x64
     000C 00rr                      1- 1470     	MOVAR	_keyCount
                                    1- 1471     	.line	576, "main.c"; 	if(!longPressFlag)
                                    1- 1472     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 1473     	BTRSC	_Status,1
                                    1- 1474     	MGOTO	_00449_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1475     	.line	578, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1476     	BSR	_Status,1
                                    1- 1477     	.line	579, "main.c"; 	return 2;
     0011 2102                      1- 1478     	MOVIA	0x02
                                    1- 1479     	MGOTO	_00450_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1480     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 1481     _00448_DS_:
                                    1- 1482     	.line	585, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 1483     	MOVIA	0x64
                                    1- 1484     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1485     	SUBAR	_keyCount,W
     0016 0803                      1- 1486     	BTRSS	STATUS,0
                                    1- 1487     	MGOTO	_00445_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1488     	.line	587, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1489     	CLRR	_keyCount
                                    1- 1490     	.line	588, "main.c"; 	longPressFlag = 0;
                                    1- 1491     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 1492     	BCR	_Status,1
                                    1- 1493     	.line	589, "main.c"; 	return	0;
     001B 2100                      1- 1494     	MOVIA	0x00
                                    1- 1495     	MGOTO	_00450_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1496     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1497     _00445_DS_:
                                    1- 1498     	.line	591, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1499     	MOVIA	0x08
                                    1- 1500     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 1501     	SUBAR	_keyCount,W
     0020 0803                      1- 1502     	BTRSS	STATUS,0
                                    1- 1503     	MGOTO	_00446_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1504     	.line	593, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1505     	CLRR	_keyCount
                                    1- 1506     	.line	594, "main.c"; 	return	1;
     0023 2101                      1- 1507     	MOVIA	0x01
                                    1- 1508     	MGOTO	_00450_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 1509     _00446_DS_:
                                    1- 1510     	.line	596, "main.c"; 	keyCount = 0;
                                    1- 1511     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 1512     	CLRR	_keyCount
     0027                           1- 1513     _00449_DS_:
                                    1- 1514     	.line	598, "main.c"; 	return 0;
     0027 2100                      1- 1515     	MOVIA	0x00
     0028                           1- 1516     _00450_DS_:
                                    1- 1517     	.line	599, "main.c"; 	}
                                    1- 1518     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1519     ; exit point of _keyRead
                                    1- 1521     ;***
                                    1- 1522     ;  pBlock Stats: dbName = C
                                    1- 1523     ;***
                                    1- 1524     ;has an exit
                                    1- 1525     ;functions called:
                                    1- 1526     ;   _LedInput
                                    1- 1527     ;   _pwmStop
                                    1- 1528     ;   _LedInput
                                    1- 1529     ;   _pwmStop
                                    1- 1530     ;; Starting pCode block
                                    1- 1531     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1533     _gotoSleep:
                                    1- 1534     ; 2 exit points
                                    1- 1535     	.line	538, "main.c"; 	LedInput();
                                    1- 1536     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1537     	.line	539, "main.c"; 	sleepTime = 0;
                                    1- 1538     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 1539     	CLRR	_sleepTime
     0003 02rr                      1- 1540     	CLRR	(_sleepTime + 1)
                                    1- 1541     	.line	541, "main.c"; 	pwmStop();
                                    1- 1542     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1543     	.line	542, "main.c"; 	workStep = 0;
                                    1- 1544     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1545     	CLRR	_workStep
                                    1- 1546     	.line	543, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1547     	MOVIA	0x60
     0008 00rr                      1- 1548     	MOVAR	_AWUCON
                                    1- 1549     	.line	544, "main.c"; 	fgPRD = 0;
                                    1- 1550     	BANKSEL	_fgPRD
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 1551     	CLRR	_fgPRD
     000B 02rr                      1- 1552     	CLRR	(_fgPRD + 1)
                                    1- 1553     	.line	545, "main.c"; 	fgCount = 0;
                                    1- 1554     	BANKSEL	_fgCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 1555     	CLRR	_fgCount
     000E 02rr                      1- 1556     	CLRR	(_fgCount + 1)
                                    1- 1557     	.line	546, "main.c"; 	redLedFlag = 0;
                                    1- 1558     	BANKSEL	_Status
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 1Drr                      1- 1559     	BCR	_Status,2
                                    1- 1560     	.line	547, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input;
     0011 2160                      1- 1561     	MOVIA	0x60
     0012 000r                      1- 1562     	IOST	_IOSTA
                                    1- 1563     	.line	548, "main.c"; 	IOSTB = 0x00;
     0013 0200                      1- 1564     	CLRA	
     0014 000r                      1- 1565     	IOST	_IOSTB
                                    1- 1566     	.line	549, "main.c"; 	PORTA = 0x00;
                                    1- 1567     	BANKSEL	_PORTA
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 1568     	CLRR	_PORTA
                                    1- 1569     	.line	550, "main.c"; 	PORTB = 0x00;
     0017 02rr                      1- 1570     	CLRR	_PORTB
                                    1- 1571     	.line	551, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0018 210B                      1- 1572     	MOVIA	0x0b
     0019 00rr                      1- 1573     	MOVAR	_INTE
                                    1- 1574     	.line	552, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001A 2118                      1- 1575     	MOVIA	0x18
     001B 00rr                      1- 1576     	MOVAR	_PCON
                                    1- 1577     	.line	553, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001C 02rr                      1- 1578     	CLRR	_INTF
                                    1- 1579     	.line	554, "main.c"; 	CLRWDT();
     001D 0002                      1- 1580     	clrwdt
                                    1- 1581     	.line	555, "main.c"; 	ENI();
     001E 0004                      1- 1582     	ENI
                                    1- 1583     	.line	556, "main.c"; 	SLEEP();
     001F 0001                      1- 1584     	sleep
                                    1- 1585     	.line	557, "main.c"; 	AWUCON = 0x00;
     0020 02rr                      1- 1586     	CLRR	_AWUCON
                                    1- 1587     	.line	558, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0021 2170                      1- 1588     	MOVIA	0x70
     0022 000r                      1- 1589     	IOST	_IOSTA
                                    1- 1590     	.line	559, "main.c"; 	IOSTB = C_PB0_Input;
     0023 2101                      1- 1591     	MOVIA	0x01
     0024 000r                      1- 1592     	IOST	_IOSTB
                                    1- 1593     	.line	560, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0025 00rr                      1- 1594     	MOVAR	_INTE
                                    1- 1595     	.line	561, "main.c"; 	INTF = 0;
     0026 02rr                      1- 1596     	CLRR	_INTF
                                    1- 1597     	.line	563, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 1598     	MOVIA	0xb8
     0028 00rr                      1- 1599     	MOVAR	_PCON
                                    1- 1600     	.line	565, "main.c"; 	}
                                    1- 1601     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 1602     ; exit point of _gotoSleep
                                    1- 1604     ;***
                                    1- 1605     ;  pBlock Stats: dbName = C
                                    1- 1606     ;***
                                    1- 1607     ;has an exit
                                    1- 1608     ;functions called:
                                    1- 1609     ;   _pwmStop
                                    1- 1610     ;   _LEDHOFF
                                    1- 1611     ;   _LEDLOFF
                                    1- 1612     ;   _pwmStop
                                    1- 1613     ;   _LEDHOFF
                                    1- 1614     ;   _LEDLOFF
                                    1- 1615     ;; Starting pCode block
                                    1- 1616     .segment "code"; module=main, function=_powerOff
     0000                           1- 1618     _powerOff:
                                    1- 1619     ; 2 exit points
                                    1- 1620     	.line	528, "main.c"; 	workStep = 0;
                                    1- 1621     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1622     	CLRR	_workStep
                                    1- 1623     	.line	529, "main.c"; 	pwmStop();
                                    1- 1624     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1625     	.line	530, "main.c"; 	LEDHOFF();
                                    1- 1626     	MCALL	_LEDHOFF
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1627     	.line	531, "main.c"; 	LEDLOFF();
                                    1- 1628     	MCALL	_LEDLOFF
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1629     	.line	532, "main.c"; 	ledStep = 5;
     0005 2105                      1- 1630     	MOVIA	0x05
                                    1- 1631     	BANKSEL	_ledStep
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1632     	MOVAR	_ledStep
                                    1- 1633     	.line	533, "main.c"; 	workStartFlag = 2;
     0008 2102                      1- 1634     	MOVIA	0x02
                                    1- 1635     	BANKSEL	_workStartFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1- 1636     	MOVAR	_workStartFlag
                                    1- 1637     	.line	534, "main.c"; 	}
                                    1- 1638     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1639     ; exit point of _powerOff
                                    1- 1641     ;***
                                    1- 1642     ;  pBlock Stats: dbName = C
                                    1- 1643     ;***
                                    1- 1644     ;has an exit
                                    1- 1645     ;functions called:
                                    1- 1646     ;   _keyRead
                                    1- 1647     ;   _pwmInit
                                    1- 1648     ;   _powerOff
                                    1- 1649     ;   _keyRead
                                    1- 1650     ;   _pwmInit
                                    1- 1651     ;   _powerOff
                                    1- 1652     ;1 compiler assigned register :
                                    1- 1653     ;   r0x102F
                                    1- 1654     ;; Starting pCode block
                                    1- 1655     .segment "code"; module=main, function=_keyCtr
                                    1- 1657     ;local variable name mapping:
     0000                           1- 1659     _keyCtr:
                                    1- 1660     ; 2 exit points
                                    1- 1661     	.line	469, "main.c"; 	if(workStep > 0 && ledTime == 0)
                                    1- 1662     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1663     	MOVR	_workStep,W
     0002 0D03                      1- 1664     	BTRSC	STATUS,2
                                    1- 1665     	MGOTO	_00398_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1666     	BANKSEL	_ledTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1667     	MOVR	_ledTime,W
     0006 0903                      1- 1668     	BTRSS	STATUS,2
                                    1- 1669     	MGOTO	_00398_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1670     	.line	471, "main.c"; 	PORTB |= 0x02;
     0008 18rr                      1- 1671     	BSR	_PORTB,1
                                    1- 1672     	MGOTO	_00399_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1- 1673     _00398_DS_:
                                    1- 1674     	.line	475, "main.c"; 	PORTB &= 0xFD;
     000A 1Crr                      1- 1675     	BCR	_PORTB,1
     000B                           1- 1676     _00399_DS_:
                                    1- 1677     	.line	478, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1678     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 07rr                      1- 1679     	COMR	_PORTA,W
                                    1- 1680     	BANKSEL	r0x102F
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1681     	MOVAR	r0x102F
     000F 2140                      1- 1682     	MOVIA	0x40
     0010 10rr                      1- 1683     	ANDAR	r0x102F,F
     0011 01rr                      1- 1684     	MOVR	r0x102F,W
                                    1- 1685     	MCALL	_keyRead
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1686     	BANKSEL	r0x102F
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 1687     	MOVAR	r0x102F
                                    1- 1688     	.line	479, "main.c"; 	if(kclick == 1 && workStep > 0)
     0015 2401                      1- 1689     	XORIA	0x01
     0016 0903                      1- 1690     	BTRSS	STATUS,2
                                    1- 1691     	MGOTO	_00422_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1692     	BANKSEL	_workStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1- 1693     	MOVR	_workStep,W
     001A 0D03                      1- 1694     	BTRSC	STATUS,2
                                    1- 1695     	MGOTO	_00422_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1696     	.line	481, "main.c"; 	count500ms = 0;
                                    1- 1697     	BANKSEL	_count500ms
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 1698     	CLRR	_count500ms
                                    1- 1699     	.line	482, "main.c"; 	if(workStep > 0)
                                    1- 1700     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 1701     	MOVR	_workStep,W
     0020 0D03                      1- 1702     	BTRSC	STATUS,2
                                    1- 1703     	MGOTO	_00404_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1704     	.line	484, "main.c"; 	ledTime = 0;
                                    1- 1705     	BANKSEL	_ledTime
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 1706     	CLRR	_ledTime
                                    1- 1707     	.line	485, "main.c"; 	if(++workStep > 4)
                                    1- 1708     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1- 1709     	INCR	_workStep,F
                                    1- 1710     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1711     ;;unsigned compare: left >= lit (0x5=5), size=1
     0026 2105                      1- 1712     	MOVIA	0x05
     0027 04rr                      1- 1713     	SUBAR	_workStep,W
     0028 0803                      1- 1714     	BTRSS	STATUS,0
                                    1- 1715     	MGOTO	_00404_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1716     	.line	486, "main.c"; 	workStep = 1;
     002A 2101                      1- 1717     	MOVIA	0x01
     002B 00rr                      1- 1718     	MOVAR	_workStep
     002C                           1- 1719     _00404_DS_:
                                    1- 1720     	.line	488, "main.c"; 	duty = 1;
     002C 2101                      1- 1721     	MOVIA	0x01
                                    1- 1722     	BANKSEL	_duty
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 1723     	MOVAR	_duty
     002F 02rr                      1- 1724     	CLRR	(_duty + 1)
                                    1- 1725     	.line	489, "main.c"; 	fgCount = 0;
                                    1- 1726     	BANKSEL	_fgCount
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1- 1727     	CLRR	_fgCount
     0032 02rr                      1- 1728     	CLRR	(_fgCount + 1)
                                    1- 1729     	.line	490, "main.c"; 	workStartFlag = 0;
                                    1- 1730     	BANKSEL	_workStartFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 02rr                      1- 1731     	CLRR	_workStartFlag
                                    1- 1732     	.line	491, "main.c"; 	if(workStep == 1)
                                    1- 1733     	BANKSEL	_workStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1- 1734     	MOVR	_workStep,W
     0037 2401                      1- 1735     	XORIA	0x01
     0038 0903                      1- 1736     	BTRSS	STATUS,2
                                    1- 1737     	MGOTO	_00414_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1738     	.line	492, "main.c"; 	maxDuty = 38;
     003A 2126                      1- 1739     	MOVIA	0x26
                                    1- 1740     	BANKSEL	_maxDuty
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 1741     	MOVAR	_maxDuty
                                    1- 1742     	MGOTO	_00415_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E                           1- 1743     _00414_DS_:
                                    1- 1744     	.line	493, "main.c"; 	else if(workStep == 2)
                                    1- 1745     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 1746     	MOVR	_workStep,W
     0040 2402                      1- 1747     	XORIA	0x02
     0041 0903                      1- 1748     	BTRSS	STATUS,2
                                    1- 1749     	MGOTO	_00411_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1750     	.line	494, "main.c"; 	maxDuty = 26;
     0043 211A                      1- 1751     	MOVIA	0x1a
                                    1- 1752     	BANKSEL	_maxDuty
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1753     	MOVAR	_maxDuty
                                    1- 1754     	MGOTO	_00415_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1- 1755     _00411_DS_:
                                    1- 1756     	.line	495, "main.c"; 	else if(workStep == 3)
                                    1- 1757     	BANKSEL	_workStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1- 1758     	MOVR	_workStep,W
     0049 2403                      1- 1759     	XORIA	0x03
     004A 0903                      1- 1760     	BTRSS	STATUS,2
                                    1- 1761     	MGOTO	_00408_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1762     	.line	496, "main.c"; 	maxDuty = 15;
     004C 210F                      1- 1763     	MOVIA	0x0f
                                    1- 1764     	BANKSEL	_maxDuty
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 1765     	MOVAR	_maxDuty
                                    1- 1766     	MGOTO	_00415_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1- 1767     _00408_DS_:
                                    1- 1768     	.line	497, "main.c"; 	else if(workStep == 4)
                                    1- 1769     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1- 1770     	MOVR	_workStep,W
     0052 2404                      1- 1771     	XORIA	0x04
     0053 0903                      1- 1772     	BTRSS	STATUS,2
                                    1- 1773     	MGOTO	_00415_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1774     	.line	498, "main.c"; 	maxDuty = 3;
     0055 2103                      1- 1775     	MOVIA	0x03
                                    1- 1776     	BANKSEL	_maxDuty
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 1777     	MOVAR	_maxDuty
     0058                           1- 1778     _00415_DS_:
                                    1- 1779     	.line	499, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1780     	BANKSEL	_maxDuty
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 01rr                      1- 1781     	MOVR	_maxDuty,W
     005A 00rr                      1- 1782     	SFUN	_PWM2DUTY
                                    1- 1783     	.line	500, "main.c"; 	pwmInit();
                                    1- 1784     	MCALL	_pwmInit
     005B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1785     	MGOTO	_00425_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 1786     _00422_DS_:
                                    1- 1787     	.line	502, "main.c"; 	else if(kclick == 2)
                                    1- 1788     	BANKSEL	r0x102F
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 1789     	MOVR	r0x102F,W
     005F 2402                      1- 1790     	XORIA	0x02
     0060 0903                      1- 1791     	BTRSS	STATUS,2
                                    1- 1792     	MGOTO	_00425_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1793     	.line	504, "main.c"; 	if(workStep > 0)
                                    1- 1794     	BANKSEL	_workStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 01rr                      1- 1795     	MOVR	_workStep,W
     0064 0D03                      1- 1796     	BTRSC	STATUS,2
                                    1- 1797     	MGOTO	_00417_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1798     	.line	506, "main.c"; 	powerOff();
                                    1- 1799     	MCALL	_powerOff
     0066 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1800     	MGOTO	_00425_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068                           1- 1801     _00417_DS_:
                                    1- 1802     	.line	510, "main.c"; 	startStep = 0;
                                    1- 1803     	BANKSEL	_startStep
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 02rr                      1- 1804     	CLRR	_startStep
                                    1- 1805     	.line	511, "main.c"; 	sleepTime = 0;
                                    1- 1806     	BANKSEL	_sleepTime
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 02rr                      1- 1807     	CLRR	_sleepTime
     006C 02rr                      1- 1808     	CLRR	(_sleepTime + 1)
                                    1- 1809     	.line	512, "main.c"; 	ledTime = 4;
     006D 2104                      1- 1810     	MOVIA	0x04
                                    1- 1811     	BANKSEL	_ledTime
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1812     	MOVAR	_ledTime
                                    1- 1813     	.line	513, "main.c"; 	count200ms = 0;
                                    1- 1814     	BANKSEL	_count200ms
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 02rr                      1- 1815     	CLRR	_count200ms
                                    1- 1816     	.line	514, "main.c"; 	workStartFlag = 1;
     0072 2101                      1- 1817     	MOVIA	0x01
                                    1- 1818     	BANKSEL	_workStartFlag
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 1819     	MOVAR	_workStartFlag
                                    1- 1820     	.line	515, "main.c"; 	maxDuty = 37;
     0075 2125                      1- 1821     	MOVIA	0x25
                                    1- 1822     	BANKSEL	_maxDuty
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 1823     	MOVAR	_maxDuty
                                    1- 1824     	.line	516, "main.c"; 	workStep = 1;
     0078 2101                      1- 1825     	MOVIA	0x01
                                    1- 1826     	BANKSEL	_workStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 1827     	MOVAR	_workStep
                                    1- 1828     	.line	517, "main.c"; 	ledStep = 0;
                                    1- 1829     	BANKSEL	_ledStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 02rr                      1- 1830     	CLRR	_ledStep
                                    1- 1831     	.line	518, "main.c"; 	count500ms = 0;
                                    1- 1832     	BANKSEL	_count500ms
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1- 1833     	CLRR	_count500ms
                                    1- 1834     	.line	519, "main.c"; 	duty = 1;
     007F 2101                      1- 1835     	MOVIA	0x01
                                    1- 1836     	BANKSEL	_duty
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 1837     	MOVAR	_duty
     0082 02rr                      1- 1838     	CLRR	(_duty + 1)
                                    1- 1839     	.line	520, "main.c"; 	fgCount = 0;
                                    1- 1840     	BANKSEL	_fgCount
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 02rr                      1- 1841     	CLRR	_fgCount
     0085 02rr                      1- 1842     	CLRR	(_fgCount + 1)
     0086                           1- 1843     _00425_DS_:
                                    1- 1844     	.line	524, "main.c"; 	}
                                    1- 1845     	RETURN	
     0086 0010                      3-   40 m1      ret
                                    1- 1846     ; exit point of _keyCtr
                                    1- 1848     ;***
                                    1- 1849     ;  pBlock Stats: dbName = C
                                    1- 1850     ;***
                                    1- 1851     ;functions called:
                                    1- 1852     ;   _pwmInit
                                    1- 1853     ;   _pwmInit
                                    1- 1854     ;   _pwmInit
                                    1- 1855     ;   _pwmInit
                                    1- 1856     ;; Starting pCode block
                                    1- 1857     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1859     _ledCtr:
                                    1- 1860     ; 0 exit points
                                    1- 1861     	.line	433, "main.c"; 	if(ledTime > 0)
                                    1- 1862     	BANKSEL	_ledTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1863     	MOVR	_ledTime,W
     0002 0903                      1- 1864     	BTRSS	STATUS,2
                                    1- 1865     	.line	434, "main.c"; 	--ledTime;
     0003 06rr                      1- 1866     	DECR	_ledTime,F
                                    1- 1867     	.line	435, "main.c"; 	if(workStartFlag == 1)
                                    1- 1868     	BANKSEL	_workStartFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1869     	MOVR	_workStartFlag,W
     0006 2401                      1- 1870     	XORIA	0x01
     0007 0903                      1- 1871     	BTRSS	STATUS,2
                                    1- 1872     	MGOTO	_00390_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1873     	.line	437, "main.c"; 	if(++ledStep > 4)
                                    1- 1874     	BANKSEL	_ledStep
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 05rr                      1- 1875     	INCR	_ledStep,F
                                    1- 1876     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1877     ;;unsigned compare: left >= lit (0x5=5), size=1
     000B 2105                      1- 1878     	MOVIA	0x05
     000C 04rr                      1- 1879     	SUBAR	_ledStep,W
     000D 0803                      1- 1880     	BTRSS	STATUS,0
                                    1- 1881     	MGOTO	_00392_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1882     	.line	439, "main.c"; 	ledStep = workStep;
                                    1- 1883     	BANKSEL	_workStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1884     	MOVR	_workStep,W
                                    1- 1885     	BANKSEL	_ledStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 1886     	MOVAR	_ledStep
                                    1- 1887     	.line	440, "main.c"; 	workStartFlag = 3;
     0013 2103                      1- 1888     	MOVIA	0x03
                                    1- 1889     	BANKSEL	_workStartFlag
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1890     	MOVAR	_workStartFlag
                                    1- 1891     	.line	441, "main.c"; 	pwmInit();
                                    1- 1892     	MCALL	_pwmInit
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1893     	MGOTO	_00392_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 1894     _00390_DS_:
                                    1- 1895     	.line	445, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1896     	BANKSEL	_workStartFlag
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1- 1897     	MOVR	_workStartFlag,W
     001A 2402                      1- 1898     	XORIA	0x02
     001B 0903                      1- 1899     	BTRSS	STATUS,2
                                    1- 1900     	MGOTO	_00387_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1901     	.line	447, "main.c"; 	if(ledStep > 0)
                                    1- 1902     	BANKSEL	_ledStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1903     	MOVR	_ledStep,W
     001F 0D03                      1- 1904     	BTRSC	STATUS,2
                                    1- 1905     	MGOTO	_00392_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1906     	.line	449, "main.c"; 	ledStep--;
     0021 17rr                      1- 1907     	DECRSZ	_ledStep,F
                                    1- 1908     	.line	450, "main.c"; 	if(ledStep == 0)
                                    1- 1909     	MGOTO	_00392_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1910     	.line	451, "main.c"; 	workStartFlag = 0;
                                    1- 1911     	BANKSEL	_workStartFlag
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1- 1912     	CLRR	_workStartFlag
                                    1- 1913     	MGOTO	_00392_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 1914     _00387_DS_:
                                    1- 1915     	.line	456, "main.c"; 	ledStep = workStep;
                                    1- 1916     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1917     	MOVR	_workStep,W
                                    1- 1918     	BANKSEL	_ledStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 1919     	MOVAR	_ledStep
                                    1- 1920     	.line	457, "main.c"; 	if(workStep && ledTime == 0)
                                    1- 1921     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 1922     	MOVR	_workStep,W
     002C 0D03                      1- 1923     	BTRSC	STATUS,2
                                    1- 1924     	MGOTO	_00392_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1925     	BANKSEL	_ledTime
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 1926     	MOVR	_ledTime,W
     0030 0D03                      1- 1927     	BTRSC	STATUS,2
                                    1- 1928     	.line	459, "main.c"; 	pwmInit();
                                    1- 1929     	MCALL	_pwmInit
     0031 2rrr                      3-   66 m1      LCALL rom_address
     0032                           1- 1930     _00392_DS_:
                                    1- 1931     	.line	464, "main.c"; 	}
                                    1- 1932     	RETURN	
     0032 0010                      3-   40 m1      ret
                                    1- 1934     ;***
                                    1- 1935     ;  pBlock Stats: dbName = C
                                    1- 1936     ;***
                                    1- 1937     ;has an exit
                                    1- 1938     ;functions called:
                                    1- 1939     ;   _LEDLON
                                    1- 1940     ;   _LEDHON
                                    1- 1941     ;   _LEDHOFF
                                    1- 1942     ;   _LEDLOFF
                                    1- 1943     ;   _LEDHON
                                    1- 1944     ;   _LEDHOFF
                                    1- 1945     ;   _LEDLOFF
                                    1- 1946     ;   _LEDHON
                                    1- 1947     ;   _LEDLOFF
                                    1- 1948     ;   _LEDHOFF
                                    1- 1949     ;   _LEDLON
                                    1- 1950     ;   _LEDHON
                                    1- 1951     ;   _LEDHOFF
                                    1- 1952     ;   _LEDLOFF
                                    1- 1953     ;   _LEDHON
                                    1- 1954     ;   _LEDHOFF
                                    1- 1955     ;   _LEDLOFF
                                    1- 1956     ;   _LEDHON
                                    1- 1957     ;   _LEDLOFF
                                    1- 1958     ;   _LEDHOFF
                                    1- 1959     ;; Starting pCode block
                                    1- 1960     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1962     _LedCtr2:
                                    1- 1963     ; 2 exit points
                                    1- 1964     	.line	384, "main.c"; 	if(++startStep > 6)
                                    1- 1965     	BANKSEL	_startStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 05rr                      1- 1966     	INCR	_startStep,F
                                    1- 1967     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1968     ;;unsigned compare: left >= lit (0x7=7), size=1
     0002 2107                      1- 1969     	MOVIA	0x07
     0003 04rr                      1- 1970     	SUBAR	_startStep,W
     0004 0803                      1- 1971     	BTRSS	STATUS,0
                                    1- 1972     	MGOTO	_00344_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1973     	.line	386, "main.c"; 	workStartFlag = 0;
                                    1- 1974     	BANKSEL	_workStartFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 1975     	CLRR	_workStartFlag
                                    1- 1976     	.line	387, "main.c"; 	startStep = 0;
                                    1- 1977     	BANKSEL	_startStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1978     	CLRR	_startStep
                                    1- 1979     	.line	388, "main.c"; 	ledStep = workStep;
                                    1- 1980     	BANKSEL	_workStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1981     	MOVR	_workStep,W
                                    1- 1982     	BANKSEL	_ledStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1983     	MOVAR	_ledStep
                                    1- 1984     	.line	389, "main.c"; 	redLedFlag = 0;
                                    1- 1985     	BANKSEL	_Status
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Drr                      1- 1986     	BCR	_Status,2
     0010                           1- 1987     _00344_DS_:
                                    1- 1988     	.line	391, "main.c"; 	if(redLedFlag && startStep > 2)
                                    1- 1989     	BANKSEL	_Status
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 09rr                      1- 1990     	BTRSS	_Status,2
                                    1- 1991     	MGOTO	_00346_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1992     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1993     ;;unsigned compare: left >= lit (0x3=3), size=1
     0013 2103                      1- 1994     	MOVIA	0x03
                                    1- 1995     	BANKSEL	_startStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1996     	SUBAR	_startStep,W
     0016 0C03                      1- 1997     	BTRSC	STATUS,0
                                    1- 1998     	.line	392, "main.c"; 	return;
                                    1- 1999     	MGOTO	_00370_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 2000     _00346_DS_:
                                    1- 2001     	.line	394, "main.c"; 	if(startStep == 1)
                                    1- 2002     	BANKSEL	_startStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1- 2003     	MOVR	_startStep,W
     001A 2401                      1- 2004     	XORIA	0x01
     001B 0903                      1- 2005     	BTRSS	STATUS,2
                                    1- 2006     	MGOTO	_00368_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2007     	.line	396, "main.c"; 	if(pwStep == 1)
                                    1- 2008     	BANKSEL	_pwStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2009     	MOVR	_pwStep,W
     001F 2401                      1- 2010     	XORIA	0x01
     0020 0903                      1- 2011     	BTRSS	STATUS,2
                                    1- 2012     	MGOTO	_00351_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2013     	.line	398, "main.c"; 	LEDLON();
                                    1- 2014     	MCALL	_LEDLON
     0022 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2015     	.line	399, "main.c"; 	redLedFlag = 1;
                                    1- 2016     	BANKSEL	_Status
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 19rr                      1- 2017     	BSR	_Status,2
                                    1- 2018     	MGOTO	_00370_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2019     ;;unsigned compare: left < lit (0x2=2), size=1
     0026                           1- 2020     _00351_DS_:
                                    1- 2021     	.line	401, "main.c"; 	else if(pwStep >= 2)
     0026 2102                      1- 2022     	MOVIA	0x02
                                    1- 2023     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1- 2024     	SUBAR	_pwStep,W
     0029 0803                      1- 2025     	BTRSS	STATUS,0
                                    1- 2026     	MGOTO	_00370_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2027     	.line	403, "main.c"; 	LEDHON();
                                    1- 2028     	MCALL	_LEDHON
     002B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2029     	MGOTO	_00370_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1- 2030     _00368_DS_:
                                    1- 2031     	.line	406, "main.c"; 	else if(startStep == 2)
                                    1- 2032     	BANKSEL	_startStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 2033     	MOVR	_startStep,W
     002F 2402                      1- 2034     	XORIA	0x02
     0030 0903                      1- 2035     	BTRSS	STATUS,2
                                    1- 2036     	MGOTO	_00365_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2037     	.line	408, "main.c"; 	LEDHOFF();
                                    1- 2038     	MCALL	_LEDHOFF
     0032 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2039     	.line	409, "main.c"; 	LEDLOFF();
                                    1- 2040     	MCALL	_LEDLOFF
     0033 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2041     	MGOTO	_00370_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1- 2042     _00365_DS_:
                                    1- 2043     	.line	411, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 2044     	BANKSEL	_startStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1- 2045     	MOVR	_startStep,W
     0037 2403                      1- 2046     	XORIA	0x03
     0038 0903                      1- 2047     	BTRSS	STATUS,2
                                    1- 2048     	MGOTO	_00361_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2049     ;;unsigned compare: left < lit (0x3=3), size=1
     003A 2103                      1- 2050     	MOVIA	0x03
                                    1- 2051     	BANKSEL	_pwStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1- 2052     	SUBAR	_pwStep,W
     003D 0803                      1- 2053     	BTRSS	STATUS,0
                                    1- 2054     	MGOTO	_00361_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2055     	.line	413, "main.c"; 	LEDHON();
                                    1- 2056     	MCALL	_LEDHON
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2057     	MGOTO	_00370_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 2058     _00361_DS_:
                                    1- 2059     	.line	415, "main.c"; 	else if(startStep == 4)
                                    1- 2060     	BANKSEL	_startStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2061     	MOVR	_startStep,W
     0043 2404                      1- 2062     	XORIA	0x04
     0044 0903                      1- 2063     	BTRSS	STATUS,2
                                    1- 2064     	MGOTO	_00358_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2065     	.line	417, "main.c"; 	LEDHOFF();
                                    1- 2066     	MCALL	_LEDHOFF
     0046 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2067     	.line	418, "main.c"; 	LEDLOFF();
                                    1- 2068     	MCALL	_LEDLOFF
     0047 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2069     	MGOTO	_00370_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 2070     _00358_DS_:
                                    1- 2071     	.line	420, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 2072     	BANKSEL	_startStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 2073     	MOVR	_startStep,W
     004B 2405                      1- 2074     	XORIA	0x05
     004C 0903                      1- 2075     	BTRSS	STATUS,2
                                    1- 2076     	MGOTO	_00354_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2077     ;;unsigned compare: left < lit (0x4=4), size=1
     004E 2104                      1- 2078     	MOVIA	0x04
                                    1- 2079     	BANKSEL	_pwStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 04rr                      1- 2080     	SUBAR	_pwStep,W
     0051 0803                      1- 2081     	BTRSS	STATUS,0
                                    1- 2082     	MGOTO	_00354_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2083     	.line	422, "main.c"; 	LEDHON();
                                    1- 2084     	MCALL	_LEDHON
     0053 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2085     	MGOTO	_00370_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 2086     _00354_DS_:
                                    1- 2087     	.line	426, "main.c"; 	LEDLOFF();
                                    1- 2088     	MCALL	_LEDLOFF
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2089     	.line	427, "main.c"; 	LEDHOFF();
                                    1- 2090     	MCALL	_LEDHOFF
     0056 2rrr                      3-   66 m1      LCALL rom_address
     0057                           1- 2091     _00370_DS_:
                                    1- 2092     	.line	429, "main.c"; 	}
                                    1- 2093     	RETURN	
     0057 0010                      3-   40 m1      ret
                                    1- 2094     ; exit point of _LedCtr2
                                    1- 2096     ;***
                                    1- 2097     ;  pBlock Stats: dbName = C
                                    1- 2098     ;***
                                    1- 2099     ;has an exit
                                    1- 2100     ;1 compiler assigned register :
                                    1- 2101     ;   r0x1030
                                    1- 2102     ;; Starting pCode block
                                    1- 2103     .segment "code"; module=main, function=_workCtr
                                    1- 2105     ;local variable name mapping:
     0000                           1- 2107     _workCtr:
                                    1- 2108     ; 2 exit points
                                    1- 2109     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2110     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 2111     	.line	352, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 2112     	MOVIA	0x00
                                    1- 2113     	BANKSEL	_fgPRD
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2114     	SUBAR	(_fgPRD + 1),W
     0003 0903                      1- 2115     	BTRSS	STATUS,2
                                    1- 2116     	MGOTO	_00338_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2147                      1- 2117     	MOVIA	0x47
     0006 04rr                      1- 2118     	SUBAR	_fgPRD,W
     0007                           1- 2119     _00338_DS_:
     0007 0803                      1- 2120     	BTRSS	STATUS,0
                                    1- 2121     	MGOTO	_00319_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2122     	.line	355, "main.c"; 	u8t minDuty = 38;
     0009 2126                      1- 2123     	MOVIA	0x26
                                    1- 2124     	BANKSEL	r0x1030
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 00rr                      1- 2125     	MOVAR	r0x1030
                                    1- 2126     	.line	356, "main.c"; 	if(workStep == 1)
                                    1- 2127     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2128     	MOVR	_workStep,W
     000E 2401                      1- 2129     	XORIA	0x01
     000F 0903                      1- 2130     	BTRSS	STATUS,2
                                    1- 2131     	MGOTO	_00316_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2132     	.line	357, "main.c"; 	minDuty = 38;
     0011 2126                      1- 2133     	MOVIA	0x26
                                    1- 2134     	BANKSEL	r0x1030
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1- 2135     	MOVAR	r0x1030
                                    1- 2136     	MGOTO	_00317_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1- 2137     _00316_DS_:
                                    1- 2138     	.line	358, "main.c"; 	else if(workStep == 2)
                                    1- 2139     	BANKSEL	_workStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 2140     	MOVR	_workStep,W
     0017 2402                      1- 2141     	XORIA	0x02
     0018 0903                      1- 2142     	BTRSS	STATUS,2
                                    1- 2143     	MGOTO	_00313_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2144     	.line	359, "main.c"; 	minDuty = 15;
     001A 210F                      1- 2145     	MOVIA	0x0f
                                    1- 2146     	BANKSEL	r0x1030
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2147     	MOVAR	r0x1030
                                    1- 2148     	MGOTO	_00317_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 2149     _00313_DS_:
                                    1- 2150     	.line	360, "main.c"; 	else if(workStep == 3)
                                    1- 2151     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 2152     	MOVR	_workStep,W
     0020 2403                      1- 2153     	XORIA	0x03
     0021 0903                      1- 2154     	BTRSS	STATUS,2
                                    1- 2155     	MGOTO	_00310_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2156     	.line	361, "main.c"; 	minDuty = 11;
     0023 210B                      1- 2157     	MOVIA	0x0b
                                    1- 2158     	BANKSEL	r0x1030
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2159     	MOVAR	r0x1030
                                    1- 2160     	MGOTO	_00317_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2161     _00310_DS_:
                                    1- 2162     	.line	362, "main.c"; 	else if(workStep == 4)
                                    1- 2163     	BANKSEL	_workStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2164     	MOVR	_workStep,W
     0029 2404                      1- 2165     	XORIA	0x04
     002A 0903                      1- 2166     	BTRSS	STATUS,2
                                    1- 2167     	MGOTO	_00317_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2168     	.line	363, "main.c"; 	minDuty = 3;
     002C 2103                      1- 2169     	MOVIA	0x03
                                    1- 2170     	BANKSEL	r0x1030
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2171     	MOVAR	r0x1030
     002F                           1- 2172     _00317_DS_:
                                    1- 2173     	.line	364, "main.c"; 	PWM2DUTY = minDuty;
                                    1- 2174     	BANKSEL	r0x1030
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2175     	MOVR	r0x1030,W
     0031 00rr                      1- 2176     	SFUN	_PWM2DUTY
                                    1- 2177     	MGOTO	_00321_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 2178     _00319_DS_:
                                    1- 2179     	.line	377, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2180     	BANKSEL	_maxDuty
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2181     	MOVR	_maxDuty,W
     0035 00rr                      1- 2182     	SFUN	_PWM2DUTY
     0036                           1- 2183     _00321_DS_:
                                    1- 2184     	.line	379, "main.c"; 	}
                                    1- 2185     	RETURN	
     0036 0010                      3-   40 m1      ret
                                    1- 2186     ; exit point of _workCtr
                                    1- 2188     ;***
                                    1- 2189     ;  pBlock Stats: dbName = C
                                    1- 2190     ;***
                                    1- 2191     ;has an exit
                                    1- 2192     ;; Starting pCode block
                                    1- 2193     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2195     _pwmStop:
                                    1- 2196     ; 2 exit points
                                    1- 2197     	.line	346, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2198     	CLRA	
     0001 00rr                      1- 2199     	SFUN	_T2CR1
                                    1- 2200     	.line	347, "main.c"; 	}
                                    1- 2201     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2202     ; exit point of _pwmStop
                                    1- 2204     ;***
                                    1- 2205     ;  pBlock Stats: dbName = C
                                    1- 2206     ;***
                                    1- 2207     ;has an exit
                                    1- 2208     ;1 compiler assigned register :
                                    1- 2209     ;   r0x102E
                                    1- 2210     ;; Starting pCode block
                                    1- 2211     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2213     _pwmInit:
                                    1- 2214     ; 2 exit points
                                    1- 2215     	.line	334, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2216     	SFUNR	_T2CR1
                                    1- 2217     	BANKSEL	r0x102E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2218     	MOVAR	r0x102E
     0003 0Frr                      1- 2219     	BTRSC	r0x102E,7
                                    1- 2220     	.line	335, "main.c"; 	return;
                                    1- 2221     	MGOTO	_00298_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2222     	.line	336, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2223     	CLRR	_TMRH
                                    1- 2224     	.line	337, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 2225     	MOVIA	0x80
     0007 00rr                      1- 2226     	SFUN	_TMR2
                                    1- 2227     	.line	340, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2228     	CLRA	
     0009 00rr                      1- 2229     	SFUN	_T2CR2
                                    1- 2230     	.line	341, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2231     	MOVIA	0x83
     000B 00rr                      1- 2232     	SFUN	_T2CR1
     000C                           1- 2233     _00298_DS_:
                                    1- 2234     	.line	342, "main.c"; 	}
                                    1- 2235     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2236     ; exit point of _pwmInit
                                    1- 2238     ;***
                                    1- 2239     ;  pBlock Stats: dbName = C
                                    1- 2240     ;***
                                    1- 2241     ;has an exit
                                    1- 2242     ;functions called:
                                    1- 2243     ;   _delay
                                    1- 2244     ;   _LedInput
                                    1- 2245     ;   _delay
                                    1- 2246     ;   _LedInput
                                    1- 2247     ;1 compiler assigned register :
                                    1- 2248     ;   r0x1031
                                    1- 2249     ;; Starting pCode block
                                    1- 2250     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2252     _LED4ON:
                                    1- 2253     ; 2 exit points
                                    1- 2254     	.line	325, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 2255     	IOSTR	_IOSTB
                                    1- 2256     	BANKSEL	r0x1031
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2257     	MOVAR	r0x1031
     0003 1Drr                      1- 2258     	BCR	r0x1031,3
     0004 01rr                      1- 2259     	MOVR	r0x1031,W
     0005 000r                      1- 2260     	IOST	_IOSTB
                                    1- 2261     	.line	326, "main.c"; 	PORTB |= 0x08;
     0006 19rr                      1- 2262     	BSR	_PORTB,3
                                    1- 2263     	.line	327, "main.c"; 	delay(100);
     0007 2164                      1- 2264     	MOVIA	0x64
                                    1- 2265     	MCALL	_delay
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2266     	.line	328, "main.c"; 	LedInput();
                                    1- 2267     	MCALL	_LedInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2268     	.line	329, "main.c"; 	}
                                    1- 2269     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2270     ; exit point of _LED4ON
                                    1- 2272     ;***
                                    1- 2273     ;  pBlock Stats: dbName = C
                                    1- 2274     ;***
                                    1- 2275     ;has an exit
                                    1- 2276     ;functions called:
                                    1- 2277     ;   _delay
                                    1- 2278     ;   _LedInput
                                    1- 2279     ;   _delay
                                    1- 2280     ;   _LedInput
                                    1- 2281     ;1 compiler assigned register :
                                    1- 2282     ;   r0x1032
                                    1- 2283     ;; Starting pCode block
                                    1- 2284     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2286     _LED3ON:
                                    1- 2287     ; 2 exit points
                                    1- 2288     	.line	317, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 2289     	IOSTR	_IOSTA
                                    1- 2290     	BANKSEL	r0x1032
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2291     	MOVAR	r0x1032
     0003 1Frr                      1- 2292     	BCR	r0x1032,7
     0004 01rr                      1- 2293     	MOVR	r0x1032,W
     0005 000r                      1- 2294     	IOST	_IOSTA
                                    1- 2295     	.line	318, "main.c"; 	PORTA |= 0X80;
                                    1- 2296     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 1Brr                      1- 2297     	BSR	_PORTA,7
                                    1- 2298     	.line	319, "main.c"; 	delay(100);
     0008 2164                      1- 2299     	MOVIA	0x64
                                    1- 2300     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2301     	.line	320, "main.c"; 	LedInput();
                                    1- 2302     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2303     	.line	321, "main.c"; 	}
                                    1- 2304     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 2305     ; exit point of _LED3ON
                                    1- 2307     ;***
                                    1- 2308     ;  pBlock Stats: dbName = C
                                    1- 2309     ;***
                                    1- 2310     ;has an exit
                                    1- 2311     ;functions called:
                                    1- 2312     ;   _delay
                                    1- 2313     ;   _LedInput
                                    1- 2314     ;   _delay
                                    1- 2315     ;   _LedInput
                                    1- 2316     ;1 compiler assigned register :
                                    1- 2317     ;   r0x1033
                                    1- 2318     ;; Starting pCode block
                                    1- 2319     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2321     _LED2ON:
                                    1- 2322     ; 2 exit points
                                    1- 2323     	.line	309, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 2324     	IOSTR	_IOSTA
                                    1- 2325     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2326     	MOVAR	r0x1033
     0003 1Crr                      1- 2327     	BCR	r0x1033,1
     0004 01rr                      1- 2328     	MOVR	r0x1033,W
     0005 000r                      1- 2329     	IOST	_IOSTA
                                    1- 2330     	.line	310, "main.c"; 	PORTA |= 0X02;
                                    1- 2331     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 18rr                      1- 2332     	BSR	_PORTA,1
                                    1- 2333     	.line	311, "main.c"; 	delay(100);
     0008 2164                      1- 2334     	MOVIA	0x64
                                    1- 2335     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2336     	.line	312, "main.c"; 	LedInput();
                                    1- 2337     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2338     	.line	313, "main.c"; 	}
                                    1- 2339     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 2340     ; exit point of _LED2ON
                                    1- 2342     ;***
                                    1- 2343     ;  pBlock Stats: dbName = C
                                    1- 2344     ;***
                                    1- 2345     ;has an exit
                                    1- 2346     ;functions called:
                                    1- 2347     ;   _delay
                                    1- 2348     ;   _LedInput
                                    1- 2349     ;   _delay
                                    1- 2350     ;   _LedInput
                                    1- 2351     ;1 compiler assigned register :
                                    1- 2352     ;   r0x1034
                                    1- 2353     ;; Starting pCode block
                                    1- 2354     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2356     _LED1ON:
                                    1- 2357     ; 2 exit points
                                    1- 2358     	.line	301, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 2359     	IOSTR	_IOSTA
                                    1- 2360     	BANKSEL	r0x1034
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2361     	MOVAR	r0x1034
     0003 1Crr                      1- 2362     	BCR	r0x1034,0
     0004 01rr                      1- 2363     	MOVR	r0x1034,W
     0005 000r                      1- 2364     	IOST	_IOSTA
                                    1- 2365     	.line	302, "main.c"; 	PORTA |= 0X01;
                                    1- 2366     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 18rr                      1- 2367     	BSR	_PORTA,0
                                    1- 2368     	.line	303, "main.c"; 	delay(100);
     0008 2164                      1- 2369     	MOVIA	0x64
                                    1- 2370     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2371     	.line	304, "main.c"; 	LedInput();
                                    1- 2372     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2373     	.line	305, "main.c"; 	}
                                    1- 2374     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 2375     ; exit point of _LED1ON
                                    1- 2377     ;***
                                    1- 2378     ;  pBlock Stats: dbName = C
                                    1- 2379     ;***
                                    1- 2380     ;has an exit
                                    1- 2381     ;1 compiler assigned register :
                                    1- 2382     ;   r0x102C
                                    1- 2383     ;; Starting pCode block
                                    1- 2384     .segment "code"; module=main, function=_LedInput
     0000                           1- 2386     _LedInput:
                                    1- 2387     ; 2 exit points
                                    1- 2388     	.line	293, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 2389     	IOSTR	_IOSTA
                                    1- 2390     	BANKSEL	r0x102C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2391     	MOVAR	r0x102C
     0003 2183                      1- 2392     	MOVIA	0x83
     0004 11rr                      1- 2393     	IORAR	r0x102C,F
     0005 01rr                      1- 2394     	MOVR	r0x102C,W
     0006 000r                      1- 2395     	IOST	_IOSTA
                                    1- 2396     	.line	294, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 2397     	IOSTR	_IOSTB
     0008 00rr                      1- 2398     	MOVAR	r0x102C
     0009 19rr                      1- 2399     	BSR	r0x102C,3
     000A 01rr                      1- 2400     	MOVR	r0x102C,W
     000B 000r                      1- 2401     	IOST	_IOSTB
                                    1- 2402     	.line	295, "main.c"; 	PORTA &= 0x7C;
     000C 217C                      1- 2403     	MOVIA	0x7c
                                    1- 2404     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 10rr                      1- 2405     	ANDAR	_PORTA,F
                                    1- 2406     	.line	296, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 2407     	BCR	_PORTB,3
                                    1- 2408     	.line	297, "main.c"; 	}
                                    1- 2409     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2410     ; exit point of _LedInput
                                    1- 2412     ;***
                                    1- 2413     ;  pBlock Stats: dbName = C
                                    1- 2414     ;***
                                    1- 2415     ;has an exit
                                    1- 2416     ;functions called:
                                    1- 2417     ;   _LedInput
                                    1- 2418     ;   _LedInput
                                    1- 2419     ;   _LED4ON
                                    1- 2420     ;   _LED1ON
                                    1- 2421     ;   _LED3ON
                                    1- 2422     ;   _LED2ON
                                    1- 2423     ;   _LedInput
                                    1- 2424     ;   _LedInput
                                    1- 2425     ;   _LED4ON
                                    1- 2426     ;   _LED1ON
                                    1- 2427     ;   _LED3ON
                                    1- 2428     ;   _LED2ON
                                    1- 2429     ;; Starting pCode block
                                    1- 2430     .segment "code"; module=main, function=_ledShow
     0000                           1- 2432     _ledShow:
                                    1- 2433     ; 2 exit points
                                    1- 2434     	.line	271, "main.c"; 	LedInput();
                                    1- 2435     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2436     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2437     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2438     	.line	272, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2439     	MOVIA	0x05
                                    1- 2440     	BANKSEL	_ledStep
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 2441     	SUBAR	_ledStep,W
     0004 0C03                      1- 2442     	BTRSC	STATUS,0
                                    1- 2443     	MGOTO	_00265_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
     0006 21rr                      1- 2444     	MOVIA	((_00271_DS_ >> 8) & 0xff)
     0007 008A                      1- 2445     	MOVAR	PCHBUF
     0008 01rr                      1- 2446     	MOVR	_ledStep,W
     0009 25rr                      1- 2447     	ADDIA	_00271_DS_
     000A 0C03                      1- 2448     	BTRSC	STATUS,0
     000B 058A                      1- 2449     	INCR	PCHBUF,F
     000C 0082                      1- 2450     	MOVAR	PCL
     000D                           1- 2451     _00271_DS_:
                                    1- 2452     	MGOTO	_00259_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2453     	MGOTO	_00263_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2454     	MGOTO	_00262_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2455     	MGOTO	_00261_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2456     	MGOTO	_00260_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012                           1- 2457     _00259_DS_:
                                    1- 2458     	.line	275, "main.c"; 	LedInput();
                                    1- 2459     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2460     	.line	276, "main.c"; 	break;
                                    1- 2461     	MGOTO	_00265_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1- 2462     _00260_DS_:
                                    1- 2463     	.line	278, "main.c"; 	LED4ON();
                                    1- 2464     	MCALL	_LED4ON
     0014 2rrr                      3-   66 m1      LCALL rom_address
     0015                           1- 2465     _00261_DS_:
                                    1- 2466     	.line	280, "main.c"; 	LED1ON();
                                    1- 2467     	MCALL	_LED1ON
     0015 2rrr                      3-   66 m1      LCALL rom_address
     0016                           1- 2468     _00262_DS_:
                                    1- 2469     	.line	282, "main.c"; 	LED3ON();
                                    1- 2470     	MCALL	_LED3ON
     0016 2rrr                      3-   66 m1      LCALL rom_address
     0017                           1- 2471     _00263_DS_:
                                    1- 2472     	.line	284, "main.c"; 	LED2ON();
                                    1- 2473     	MCALL	_LED2ON
     0017 2rrr                      3-   66 m1      LCALL rom_address
     0018                           1- 2474     _00265_DS_:
                                    1- 2475     	.line	287, "main.c"; 	}
                                    1- 2476     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1- 2477     ; exit point of _ledShow
                                    1- 2479     ;***
                                    1- 2480     ;  pBlock Stats: dbName = C
                                    1- 2481     ;***
                                    1- 2482     ;has an exit
                                    1- 2483     ;; Starting pCode block
                                    1- 2484     .segment "code"; module=main, function=_initSys
     0000                           1- 2486     _initSys:
                                    1- 2487     ; 2 exit points
                                    1- 2488     	.line	243, "main.c"; 	DISI();
     0000 0013                      1- 2489     	DISI
                                    1- 2490     	.line	244, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2491     	MOVIA	0x70
     0002 000r                      1- 2492     	IOST	_IOSTA
                                    1- 2493     	.line	245, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2494     	MOVIA	0x01
     0004 000r                      1- 2495     	IOST	_IOSTB
                                    1- 2496     	.line	246, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2497     	CLRR	_PORTB
                                    1- 2498     	.line	247, "main.c"; 	PORTA = 0x00;
                                    1- 2499     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2500     	CLRR	_PORTA
                                    1- 2501     	.line	248, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2502     	MOVIA	0x9f
     0009 000r                      1- 2503     	IOST	_APHCON
                                    1- 2504     	.line	249, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2505     	MOVIA	0xff
     000B 00rr                      1- 2506     	MOVAR	_BPHCON
                                    1- 2507     	.line	250, "main.c"; 	ABPLCON = 0xFF;
     000C 00rr                      1- 2508     	MOVAR	_ABPLCON
                                    1- 2509     	.line	252, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1- 2510     	MOVIA	0x01
     000E 00rr                      1- 2511     	MOVAR	_INTE
                                    1- 2512     	.line	254, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 2513     	CLRA	
     0010 000r                      1- 2514     	IOST	_PCON1
                                    1- 2515     	.line	256, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 2516     	MOVIA	0x37
     0012 00rr                      1- 2517     	MOVAR	_TMR0
                                    1- 2518     	.line	257, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1- 2519     	CLRA	
     0014 0003                      1- 2520     	T0MD	
                                    1- 2521     	.line	259, "main.c"; 	PCON1 = C_TMR0_En;
     0015 2101                      1- 2522     	MOVIA	0x01
     0016 000r                      1- 2523     	IOST	_PCON1
                                    1- 2524     	.line	262, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 2525     	MOVIA	0x98
     0018 00rr                      1- 2526     	MOVAR	_PCON
                                    1- 2527     	.line	265, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 2528     	MOVIA	0x01
     001A 000r                      1- 2529     	IOST	_PCON1
                                    1- 2530     	.line	266, "main.c"; 	ENI();
     001B 0004                      1- 2531     	ENI
                                    1- 2532     	.line	267, "main.c"; 	}
                                    1- 2533     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 2534     ; exit point of _initSys
                                    1- 2536     ;***
                                    1- 2537     ;  pBlock Stats: dbName = C
                                    1- 2538     ;***
                                    1- 2539     ;has an exit
                                    1- 2540     ;; Starting pCode block
                                    1- 2541     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2543     _fgCtr:
                                    1- 2544     ; 2 exit points
                                    1- 2545     	.line	226, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2546     	BTRSS	_PORTB,0
                                    1- 2547     	MGOTO	_00248_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2548     	.line	228, "main.c"; 	if(preFG == 0)
                                    1- 2549     	BANKSEL	_preFG
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 2550     	MOVR	_preFG,W
     0004 0903                      1- 2551     	BTRSS	STATUS,2
                                    1- 2552     	MGOTO	_00246_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2553     	.line	230, "main.c"; 	fgPRD = fgCount;
                                    1- 2554     	BANKSEL	_fgCount
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1- 2555     	MOVR	_fgCount,W
                                    1- 2556     	BANKSEL	_fgPRD
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2557     	MOVAR	_fgPRD
                                    1- 2558     	BANKSEL	_fgCount
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2559     	MOVR	(_fgCount + 1),W
                                    1- 2560     	BANKSEL	_fgPRD
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 2561     	MOVAR	(_fgPRD + 1)
                                    1- 2562     	.line	231, "main.c"; 	fgCount = 0;
                                    1- 2563     	BANKSEL	_fgCount
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2564     	CLRR	_fgCount
     0010 02rr                      1- 2565     	CLRR	(_fgCount + 1)
     0011                           1- 2566     _00246_DS_:
                                    1- 2567     	.line	233, "main.c"; 	preFG = 1;
     0011 2101                      1- 2568     	MOVIA	0x01
                                    1- 2569     	BANKSEL	_preFG
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1- 2570     	MOVAR	_preFG
                                    1- 2571     	MGOTO	_00250_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1- 2572     _00248_DS_:
                                    1- 2573     	.line	237, "main.c"; 	preFG = 0;
                                    1- 2574     	BANKSEL	_preFG
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 2575     	CLRR	_preFG
     0017                           1- 2576     _00250_DS_:
                                    1- 2577     	.line	239, "main.c"; 	}
                                    1- 2578     	RETURN	
     0017 0010                      3-   40 m1      ret
                                    1- 2579     ; exit point of _fgCtr
                                    1- 2581     ;***
                                    1- 2582     ;  pBlock Stats: dbName = C
                                    1- 2583     ;***
                                    1- 2584     ;has an exit
                                    1- 2585     ;; Starting pCode block
                                    1- 2586     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2588     _LEDLOFF:
                                    1- 2589     ; 2 exit points
                                    1- 2590     	.line	220, "main.c"; 	PORTA &= 0xF7;
                                    1- 2591     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Drr                      1- 2592     	BCR	_PORTA,3
                                    1- 2593     	.line	222, "main.c"; 	}
                                    1- 2594     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2595     ; exit point of _LEDLOFF
                                    1- 2597     ;***
                                    1- 2598     ;  pBlock Stats: dbName = C
                                    1- 2599     ;***
                                    1- 2600     ;has an exit
                                    1- 2601     ;; Starting pCode block
                                    1- 2602     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2604     _LEDHOFF:
                                    1- 2605     ; 2 exit points
                                    1- 2606     	.line	215, "main.c"; 	PORTA &= 0xFB;
                                    1- 2607     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Drr                      1- 2608     	BCR	_PORTA,2
                                    1- 2609     	.line	217, "main.c"; 	}
                                    1- 2610     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2611     ; exit point of _LEDHOFF
                                    1- 2613     ;***
                                    1- 2614     ;  pBlock Stats: dbName = C
                                    1- 2615     ;***
                                    1- 2616     ;has an exit
                                    1- 2617     ;; Starting pCode block
                                    1- 2618     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2620     _LEDLON:
                                    1- 2621     ; 2 exit points
                                    1- 2622     	.line	210, "main.c"; 	PORTA |= 0x08;
                                    1- 2623     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 19rr                      1- 2624     	BSR	_PORTA,3
                                    1- 2625     	.line	212, "main.c"; 	}
                                    1- 2626     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2627     ; exit point of _LEDLON
                                    1- 2629     ;***
                                    1- 2630     ;  pBlock Stats: dbName = C
                                    1- 2631     ;***
                                    1- 2632     ;has an exit
                                    1- 2633     ;; Starting pCode block
                                    1- 2634     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2636     _LEDHON:
                                    1- 2637     ; 2 exit points
                                    1- 2638     	.line	205, "main.c"; 	PORTA |= 0x04;
                                    1- 2639     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 19rr                      1- 2640     	BSR	_PORTA,2
                                    1- 2641     	.line	207, "main.c"; 	}
                                    1- 2642     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2643     ; exit point of _LEDHON
                                    1- 2646     ;	code size estimation:
                                    1- 2647     ;	  980+  231 =  1211 instructions ( 2884 byte)
                                    1- 2649     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
