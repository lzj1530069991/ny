
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_showKeyLed
                                    1-   25     	extern	_B1
                                    1-   26     	extern	_C1
                                    1-   27     	extern	_A2
                                    1-   28     	extern	_B2
                                    1-   29     	extern	_C2
                                    1-   30     	extern	_D2
                                    1-   31     	extern	_E2
                                    1-   32     	extern	_F2
                                    1-   33     	extern	_G2
                                    1-   34     	extern	_A3
                                    1-   35     	extern	_B3
                                    1-   36     	extern	_C3
                                    1-   37     	extern	_D3
                                    1-   38     	extern	_E3
                                    1-   39     	extern	_F3
                                    1-   40     	extern	_G3
                                    1-   41     	extern	_delayms
                                    1-   42     	extern	_LedCtr2
                                    1-   43     	extern	_checkInAD
                                    1-   44     	extern	_fgCtr
                                    1-   45     	extern	_ledCtr
                                    1-   46     	extern	_workCtr
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	_PORTAbits
                                    1-   50     	extern	_PORTBbits
                                    1-   51     	extern	_PCONbits
                                    1-   52     	extern	_BWUCONbits
                                    1-   53     	extern	_ABPLCONbits
                                    1-   54     	extern	_BPHCONbits
                                    1-   55     	extern	_INTEbits
                                    1-   56     	extern	_INTFbits
                                    1-   57     	extern	_ADMDbits
                                    1-   58     	extern	_ADRbits
                                    1-   59     	extern	_ADVREFHbits
                                    1-   60     	extern	_ADCRbits
                                    1-   61     	extern	_AWUCONbits
                                    1-   62     	extern	_PACONbits
                                    1-   63     	extern	_INTEDGbits
                                    1-   64     	extern	_ANAENbits
                                    1-   65     	extern	_RFCbits
                                    1-   66     	extern	_INTE2bits
                                    1-   67     	extern	_INDF
                                    1-   68     	extern	_TMR0
                                    1-   69     	extern	_PCL
                                    1-   70     	extern	_STATUS
                                    1-   71     	extern	_FSR
                                    1-   72     	extern	_PORTA
                                    1-   73     	extern	_PORTB
                                    1-   74     	extern	_PCON
                                    1-   75     	extern	_BWUCON
                                    1-   76     	extern	_PCHBUF
                                    1-   77     	extern	_ABPLCON
                                    1-   78     	extern	_BPHCON
                                    1-   79     	extern	_INTE
                                    1-   80     	extern	_INTF
                                    1-   81     	extern	_ADMD
                                    1-   82     	extern	_ADR
                                    1-   83     	extern	_ADD
                                    1-   84     	extern	_ADVREFH
                                    1-   85     	extern	_ADCR
                                    1-   86     	extern	_AWUCON
                                    1-   87     	extern	_PACON
                                    1-   88     	extern	_INTEDG
                                    1-   89     	extern	_TMRH
                                    1-   90     	extern	_ANAEN
                                    1-   91     	extern	_RFC
                                    1-   92     	extern	_TM3RH
                                    1-   93     	extern	_INTE2
                                    1-   94     	extern	_TMR1
                                    1-   95     	extern	_T1CR1
                                    1-   96     	extern	_T1CR2
                                    1-   97     	extern	_PWM1DUTY
                                    1-   98     	extern	_PS1CV
                                    1-   99     	extern	_BZ1CR
                                    1-  100     	extern	_IRCR
                                    1-  101     	extern	_TBHP
                                    1-  102     	extern	_TBHD
                                    1-  103     	extern	_TMR2
                                    1-  104     	extern	_T2CR1
                                    1-  105     	extern	_T2CR2
                                    1-  106     	extern	_PWM2DUTY
                                    1-  107     	extern	_PS2CV
                                    1-  108     	extern	_BZ2CR
                                    1-  109     	extern	_OSCCR
                                    1-  110     	extern	_TMR3
                                    1-  111     	extern	_T3CR1
                                    1-  112     	extern	_T3CR2
                                    1-  113     	extern	_PWM3DUTY
                                    1-  114     	extern	_PS3CV
                                    1-  115     	extern	_BZ3CR
                                    1-  116     	extern	_IOSTA
                                    1-  117     	extern	_IOSTB
                                    1-  118     	extern	_APHCON
                                    1-  119     	extern	_PS0CV
                                    1-  120     	extern	_BODCON
                                    1-  121     	extern	_CMPCR
                                    1-  122     	extern	_PCON1
                                    1-  123     	extern	_T0MD
                                    1-  124     	extern	___sdcc_saved_fsr
                                    1-  125     	extern	___sdcc_saved_stk00
                                    1-  126     	extern	___sdcc_saved_stk01
                                    1-  127     	extern	__gptrget1
                                    1-  128     	extern	__mulchar
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_AIN2_Convert
                                    1-  136     	extern	_F_AIN3_Convert
                                    1-  137     	extern	_F_AIN4_Convert
                                    1-  138     	extern	_checkOutA
                                    1-  139     	extern	_checkBatAD
                                    1-  140     	extern	_initAD
                                    1-  141     	extern	_keyRead
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_pwmStop
                                    1-  144     	extern	_pwmInit
                                    1-  145     	extern	_pwm1Stop
                                    1-  146     	extern	_pwm1Init
                                    1-  147     	extern	_powerOff
                                    1-  148     	extern	_initSys
                                    1-  149     	extern	_keyCtr
                                    1-  150     	extern	_refreshNub
                                    1-  151     	extern	_chrgCtr
                                    1-  152     	extern	_isr
                                    1-  153     	extern	_main
                                    1-  154     	extern	_debug
                                    1-  155     	extern	_Status
                                    1-  156     	extern	_R_AIN4_DATA
                                    1-  157     	extern	_R_AIN4_DATA_LB
                                    1-  158     	extern	_R_AIN3_DATA
                                    1-  159     	extern	_R_AIN3_DATA_LB
                                    1-  160     	extern	_R_AIN2_DATA
                                    1-  161     	extern	_R_AIN2_DATA_LB
                                    1-  162     	extern	_intCount
                                    1-  163     	extern	_sleepTime
                                    1-  164     	extern	_count200ms
                                    1-  165     	extern	_count500ms
                                    1-  166     	extern	_count1s
                                    1-  167     	extern	_count5s
                                    1-  168     	extern	_count900s
                                    1-  169     	extern	_workStep
                                    1-  170     	extern	_keyCount
                                    1-  171     	extern	_pwStep
                                    1-  172     	extern	_lowCount
                                    1-  173     	extern	_ledLightTime
                                    1-  174     	extern	_maxDuty
                                    1-  175     	extern	_currentDuty
                                    1-  176     	extern	_overCount
                                    1-  177     	extern	_tempDuty
                                    1-  178     	extern	_count5S
                                    1-  179     	extern	_ledDeadTime
                                    1-  180     	extern	_countFull
                                    1-  181     	extern	_tempshiweiNum
                                    1-  182     	extern	_tempgeweiNum
                                    1-  183     	extern	_refreshCount
                                    1-  184     	extern	_shiweiNum
                                    1-  185     	extern	_geweiNum
                                    1-  186     	extern	_batValue
                                    1-  187     	extern	_cDuty
                                    1-  188     	extern	_preBatValue
                                    1-  189     	extern	_showFlag
                                    1-  190     	extern	_chrgStep
                                    1-  191     	extern	_lightBat
                                    1-  192     	extern	_closeCount
                                    1-  194     	extern PSAVE
                                    1-  195     	extern SSAVE
                                    1-  196     	extern WSAVE
                                    1-  197     	extern STK02
                                    1-  198     	extern STK01
                                    1-  199     	extern STK00
                                    1-  201     .segment "uninit", 0x20000040
 20000040                           1-  202     PSAVE:
                                    1-  203     	.res 1
 20000041                           1-  204     SSAVE:
                                    1-  205     	.res 1
 20000042                           1-  206     WSAVE:
                                    1-  207     	.res 1
 20000043                           1-  208     STK02:
                                    1-  209     	.res 1
 20000044                           1-  210     STK01:
                                    1-  211     	.res 1
 20000045                           1-  212     STK00:
                                    1-  213     	.res 1
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ; global definitions
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN4_DATA:
                                    1-  220     	.res	2
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN4_DATA_LB:
                                    1-  225     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN3_DATA:
                                    1-  230     	.res	2
                                    1-  233     .segment "uninit"
     0000                           1-  234     _R_AIN3_DATA_LB:
                                    1-  235     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     _R_AIN2_DATA:
                                    1-  240     	.res	2
                                    1-  243     .segment "uninit"
     0000                           1-  244     _R_AIN2_DATA_LB:
                                    1-  245     	.res	1
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ; absolute symbol definitions
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ;--------------------------------------------------------
                                    1-  252     ; compiler-defined variables
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1066:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1063:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1064:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1062:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1061:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1060:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x105F:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1059:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x105A:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x105B:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x105C:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x105D:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x105E:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1055:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1058:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x104F:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1050:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1051:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1054:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1049:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x104A:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x104B:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x104E:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x1043:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1044:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1045:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1048:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x103F:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x103E:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x1040:
                                    1-  343     	.res	1
                                    1-  344     .segment "uninit"
     0000                           1-  345     r0x1041:
                                    1-  346     	.res	1
                                    1-  347     .segment "uninit"
     0000                           1-  348     r0x1042:
                                    1-  349     	.res	1
                                    1-  350     ;--------------------------------------------------------
                                    1-  351     ; initialized data
                                    1-  352     ;--------------------------------------------------------
                                    1-  354     .segment "idata"
     0000                           1-  355     _debug:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _numArray:
     0000 003F                      1-  362     	dw	0x3f
     0001 0006                      1-  363     	dw	0x06
     0002 005B                      1-  364     	dw	0x5b
     0003 004F                      1-  365     	dw	0x4f
     0004 0066                      1-  366     	dw	0x66
     0005 006D                      1-  367     	dw	0x6d
     0006 007D                      1-  368     	dw	0x7d
     0007 0007                      1-  369     	dw	0x07
     0008 007F                      1-  370     	dw	0x7f
     0009 006F                      1-  371     	dw	0x6f
     000A 0071                      1-  372     	dw	0x71
     000B 0079                      1-  373     	dw	0x79
     000C 0050                      1-  374     	dw	0x50
                                    1-  378     .segment "idata"
     0000                           1-  379     _Status:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _intCount:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _sleepTime:
     0000 0000 0000                 1-  392     	dw	0x00, 0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _count200ms:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _count500ms:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _count1s:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _count5s:
     0000 0000 0000                 1-  416     	dw	0x00, 0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _count900s:
     0000 0000 0000                 1-  422     	dw	0x00, 0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _workStep:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _keyCount:
     0000 0000                      1-  434     	dw	0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _pwStep:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _lowCount:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _ledLightTime:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _maxDuty:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _currentDuty:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _overCount:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _tempDuty:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _count5S:
     0000 0000 0000                 1-  482     	dw	0x00, 0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _ledDeadTime:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _countFull:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _tempshiweiNum:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _tempgeweiNum:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _refreshCount:
     0000 0000 0000                 1-  512     	dw	0x00, 0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _shiweiNum:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _geweiNum:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _batValue:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _cDuty:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _preBatValue:
     0000 0000                      1-  542     	dw	0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _showFlag:
     0000 0000                      1-  548     	dw	0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _chrgStep:
     0000 0000                      1-  554     	dw	0x00
                                    1-  558     .segment "idata"
     0000                           1-  559     _lightBat:
     0000 0000                      1-  560     	dw	0x00
                                    1-  564     .segment "idata"
     0000                           1-  565     _closeCount:
     0000 0000 0000                 1-  566     	dw	0x00, 0x00
                                    1-  569     ;--------------------------------------------------------
                                    1-  570     ; overlayable items in internal ram 
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ;	udata_ovr
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ; reset vector 
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ORG	0x0000
     0000 3rrr                      1-  577     	LGOTO	__nyc_ny8_startup
                                    1-  578     ;--------------------------------------------------------
                                    1-  579     ; interrupt and initialization code
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ORG 0x0008
                                    1-  582     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  584     .segment "code"
     0000                           1-  585     __sdcc_interrupt:
                                    1-  586     ;***
                                    1-  587     ;  pBlock Stats: dbName = I
                                    1-  588     ;***
                                    1-  589     ;2 compiler assigned registers:
                                    1-  590     ;   STK00
                                    1-  591     ;   STK01
                                    1-  592     ;; Starting pCode block
     0000                           1-  593     _isr:
                                    1-  594     ; 0 exit points
                                    1-  595     	.line	89, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  596     	MOVAR	WSAVE
     0001 1503                      1-  597     	SWAPR	STATUS,W
     0002 0283                      1-  598     	CLRR	STATUS
     0003 00rr                      1-  599     	MOVAR	SSAVE
     0004 010A                      1-  600     	MOVR	PCHBUF,W
     0005 028A                      1-  601     	CLRR	PCHBUF
     0006 00rr                      1-  602     	MOVAR	PSAVE
     0007 0104                      1-  603     	MOVR	FSR,W
                                    1-  604     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  605     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  606     	MOVR	STK00,W
                                    1-  607     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  608     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  609     	MOVR	STK01,W
                                    1-  610     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  611     	MOVAR	___sdcc_saved_stk01
                                    1-  612     	.line	91, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  613     	BTRSS	_INTFbits,0
                                    1-  614     	MGOTO	_00123_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  615     	.line	93, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  616     	MOVIA	0x37
     0013 03rr                      1-  617     	ADDAR	_TMR0,F
                                    1-  618     	.line	95, "main.c"; 	if(++intCount >= 100)
                                    1-  619     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  620     	INCR	_intCount,F
                                    1-  621     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  622     	MOVIA	0x64
     0017 04rr                      1-  623     	SUBAR	_intCount,W
     0018 0803                      1-  624     	BTRSS	STATUS,0
                                    1-  625     	MGOTO	_00123_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  626     	.line	97, "main.c"; 	IntFlag = 1;
                                    1-  627     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  628     	BSR	_Status,0
                                    1-  629     	.line	98, "main.c"; 	intCount = 0;
                                    1-  630     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  631     	CLRR	_intCount
                                    1-  632     	.line	99, "main.c"; 	if(++count500ms >= 40)
                                    1-  633     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  634     	INCR	_count500ms,F
                                    1-  635     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  636     	MOVIA	0x28
     0021 04rr                      1-  637     	SUBAR	_count500ms,W
     0022 0C03                      1-  638     	BTRSC	STATUS,0
                                    1-  639     	.line	100, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  640     	CLRR	_count500ms
                                    1-  641     	.line	101, "main.c"; 	if(++count200ms >= 20)
                                    1-  642     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  643     	INCR	_count200ms,F
     0026 2114                      1-  644     	MOVIA	0x14
     0027 04rr                      1-  645     	SUBAR	_count200ms,W
     0028 0803                      1-  646     	BTRSS	STATUS,0
                                    1-  647     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  648     	.line	103, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  649     	CLRR	_count200ms
                                    1-  650     	.line	104, "main.c"; 	if(ledDeadTime > 0)
                                    1-  651     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  652     	MOVR	_ledDeadTime,W
     002D 0903                      1-  653     	BTRSS	STATUS,2
                                    1-  654     	.line	105, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  655     	DECR	_ledDeadTime,F
     002F                           1-  656     _00110_DS_:
                                    1-  657     	.line	107, "main.c"; 	if(++count5s >= 500)
                                    1-  658     	BANKSEL	_count5s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  659     	INCR	_count5s,F
     0031 0D03                      1-  660     	BTRSC	STATUS,2
     0032 05rr                      1-  661     	INCR	(_count5s + 1),F
                                    1-  662     ;;unsigned compare: left < lit (0x1F4=500), size=2
     0033 2101                      1-  663     	MOVIA	0x01
     0034 04rr                      1-  664     	SUBAR	(_count5s + 1),W
     0035 0903                      1-  665     	BTRSS	STATUS,2
                                    1-  666     	MGOTO	_00161_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21F4                      1-  667     	MOVIA	0xf4
     0038 04rr                      1-  668     	SUBAR	_count5s,W
     0039                           1-  669     _00161_DS_:
     0039 0803                      1-  670     	BTRSS	STATUS,0
                                    1-  671     	MGOTO	_00112_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     	.line	108, "main.c"; 	count5s = 0;
                                    1-  673     	BANKSEL	_count5s
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  674     	CLRR	_count5s
     003D 02rr                      1-  675     	CLRR	(_count5s + 1)
     003E                           1-  676     _00112_DS_:
                                    1-  677     	.line	109, "main.c"; 	if(++count1s >= 100)
                                    1-  678     	BANKSEL	_count1s
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  679     	INCR	_count1s,F
                                    1-  680     ;;unsigned compare: left < lit (0x64=100), size=1
     0040 2164                      1-  681     	MOVIA	0x64
     0041 04rr                      1-  682     	SUBAR	_count1s,W
     0042 0803                      1-  683     	BTRSS	STATUS,0
                                    1-  684     	MGOTO	_00123_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  685     	.line	111, "main.c"; 	count1s = 0;
     0044 02rr                      1-  686     	CLRR	_count1s
                                    1-  687     	.line	112, "main.c"; 	if(ledLightTime > 0)
                                    1-  688     	BANKSEL	_ledLightTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  689     	MOVR	_ledLightTime,W
     0047 0903                      1-  690     	BTRSS	STATUS,2
                                    1-  691     	.line	113, "main.c"; 	ledLightTime--;
     0048 06rr                      1-  692     	DECR	_ledLightTime,F
                                    1-  693     	.line	114, "main.c"; 	if(workStep)
                                    1-  694     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  695     	MOVR	_workStep,W
     004B 0D03                      1-  696     	BTRSC	STATUS,2
                                    1-  697     	MGOTO	_00116_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  698     	.line	116, "main.c"; 	++count900s;
                                    1-  699     	BANKSEL	_count900s
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1-  700     	INCR	_count900s,F
     004F 0D03                      1-  701     	BTRSC	STATUS,2
     0050 05rr                      1-  702     	INCR	(_count900s + 1),F
                                    1-  703     	MGOTO	_00123_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  704     _00116_DS_:
                                    1-  705     	.line	120, "main.c"; 	count900s = 0;
                                    1-  706     	BANKSEL	_count900s
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1-  707     	CLRR	_count900s
     0054 02rr                      1-  708     	CLRR	(_count900s + 1)
     0055                           1-  709     _00123_DS_:
                                    1-  710     	.line	129, "main.c"; 	if(INTFbits.PABIF)
     0055 08rr                      1-  711     	BTRSS	_INTFbits,1
                                    1-  712     	MGOTO	_00125_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  713     	.line	131, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0057 21FD                      1-  714     	MOVIA	0xfd
     0058 00rr                      1-  715     	MOVAR	_INTF
     0059                           1-  716     _00125_DS_:
                                    1-  717     	.line	134, "main.c"; 	INTF = 0;
     0059 02rr                      1-  718     	CLRR	_INTF
                                    1-  719     	.line	136, "main.c"; 	}
                                    1-  720     	BANKSEL	___sdcc_saved_stk01
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  721     	MOVR	___sdcc_saved_stk01,W
     005C 00rr                      1-  722     	MOVAR	STK01
                                    1-  723     	BANKSEL	___sdcc_saved_stk00
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1-  724     	MOVR	___sdcc_saved_stk00,W
     005F 00rr                      1-  725     	MOVAR	STK00
                                    1-  726     	BANKSEL	___sdcc_saved_fsr
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  727     	MOVR	___sdcc_saved_fsr,W
     0062 0084                      1-  728     	MOVAR	FSR
     0063 01rr                      1-  729     	MOVR	PSAVE,W
     0064 008A                      1-  730     	MOVAR	PCHBUF
     0065 0283                      1-  731     	CLRR	STATUS
     0066 15rr                      1-  732     	SWAPR	SSAVE,W
     0067 0083                      1-  733     	MOVAR	STATUS
     0068 15rr                      1-  734     	SWAPR	WSAVE,F
     0069 15rr                      1-  735     	SWAPR	WSAVE,W
     006A                           1-  736     END_OF_INTERRUPT:
     006A 0011                      1-  737     	RETIE	
                                    1-  739     ;--------------------------------------------------------
                                    1-  740     ; code
                                    1-  741     ;--------------------------------------------------------
                                    1-  742     ;***
                                    1-  743     ;  pBlock Stats: dbName = M
                                    1-  744     ;***
                                    1-  745     ;has an exit
                                    1-  746     ;functions called:
                                    1-  747     ;   _initSys
                                    1-  748     ;   _initAD
                                    1-  749     ;   _refreshNub
                                    1-  750     ;   _pwmStop
                                    1-  751     ;   _powerOff
                                    1-  752     ;   _checkBatAD
                                    1-  753     ;   _checkBatAD
                                    1-  754     ;   _checkOutA
                                    1-  755     ;   _chrgCtr
                                    1-  756     ;   _keyCtr
                                    1-  757     ;   _gotoSleep
                                    1-  758     ;   _powerOff
                                    1-  759     ;   _initSys
                                    1-  760     ;   _initAD
                                    1-  761     ;   _refreshNub
                                    1-  762     ;   _pwmStop
                                    1-  763     ;   _powerOff
                                    1-  764     ;   _checkBatAD
                                    1-  765     ;   _checkBatAD
                                    1-  766     ;   _checkOutA
                                    1-  767     ;   _chrgCtr
                                    1-  768     ;   _keyCtr
                                    1-  769     ;   _gotoSleep
                                    1-  770     ;   _powerOff
                                    1-  771     ;; Starting pCode block
                                    1-  772     .segment "code"; module=main, function=_main
     0000                           1-  774     _main:
                                    1-  775     ; 2 exit points
                                    1-  776     	.line	141, "main.c"; 	initSys();
                                    1-  777     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  778     	.line	142, "main.c"; 	initAD();
                                    1-  779     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  780     _00215_DS_:
                                    1-  781     	.line	145, "main.c"; 	CLRWDT();
     0002 0002                      1-  782     	clrwdt
                                    1-  783     	.line	146, "main.c"; 	if(showFlag)
                                    1-  784     	BANKSEL	_showFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 01rr                      1-  785     	MOVR	_showFlag,W
     0005 0903                      1-  786     	BTRSS	STATUS,2
                                    1-  787     	.line	147, "main.c"; 	refreshNub();
                                    1-  788     	MCALL	_refreshNub
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  789     	.line	148, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  790     	BANKSEL	_workStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1-  791     	MOVR	_workStep,W
     0009 0D03                      1-  792     	BTRSC	STATUS,2
                                    1-  793     	MGOTO	_00174_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  794     ;;unsigned compare: left < lit (0x28=40), size=1
     000B 2128                      1-  795     	MOVIA	0x28
                                    1-  796     	BANKSEL	_tempDuty
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 04rr                      1-  797     	SUBAR	_tempDuty,W
     000E 0803                      1-  798     	BTRSS	STATUS,0
                                    1-  799     	MGOTO	_00174_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  800     	.line	150, "main.c"; 	if(cDuty > tempDuty)
                                    1-  801     	BANKSEL	_cDuty
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  802     	MOVR	_cDuty,W
                                    1-  803     	BANKSEL	_tempDuty
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1-  804     	SUBAR	_tempDuty,W
     0014 0C03                      1-  805     	BTRSC	STATUS,0
                                    1-  806     	MGOTO	_00171_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  807     	.line	152, "main.c"; 	cDuty--;
                                    1-  808     	BANKSEL	_cDuty
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 06rr                      1-  809     	DECR	_cDuty,F
                                    1-  810     	.line	153, "main.c"; 	PWM2DUTY = cDuty;
     0018 01rr                      1-  811     	MOVR	_cDuty,W
     0019 00rr                      1-  812     	SFUN	_PWM2DUTY
                                    1-  813     	MGOTO	_00174_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1-  814     _00171_DS_:
                                    1-  815     	.line	155, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  816     	BANKSEL	_tempDuty
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1-  817     	MOVR	_tempDuty,W
                                    1-  818     	BANKSEL	_cDuty
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 04rr                      1-  819     	SUBAR	_cDuty,W
     001F 0C03                      1-  820     	BTRSC	STATUS,0
                                    1-  821     	MGOTO	_00174_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  822     	.line	157, "main.c"; 	cDuty++;
     0021 05rr                      1-  823     	INCR	_cDuty,F
                                    1-  824     	.line	158, "main.c"; 	PWM2DUTY = cDuty;
     0022 01rr                      1-  825     	MOVR	_cDuty,W
     0023 00rr                      1-  826     	SFUN	_PWM2DUTY
     0024                           1-  827     _00174_DS_:
                                    1-  828     	.line	161, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  829     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  830     	MOVR	_workStep,W
     0026 0D03                      1-  831     	BTRSC	STATUS,2
                                    1-  832     	MGOTO	_00177_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  833     	BANKSEL	_currentDuty
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  834     	MOVR	_currentDuty,W
                                    1-  835     	BANKSEL	_maxDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 04rr                      1-  836     	SUBAR	_maxDuty,W
     002C 0C03                      1-  837     	BTRSC	STATUS,0
                                    1-  838     	MGOTO	_00177_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  839     	.line	163, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  840     	BANKSEL	_currentDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 06rr                      1-  841     	DECR	_currentDuty,F
                                    1-  842     	.line	164, "main.c"; 	PWM2DUTY = currentDuty;
     0030 01rr                      1-  843     	MOVR	_currentDuty,W
     0031 00rr                      1-  844     	SFUN	_PWM2DUTY
                                    1-  845     	.line	165, "main.c"; 	cDuty = currentDuty;
     0032 01rr                      1-  846     	MOVR	_currentDuty,W
                                    1-  847     	BANKSEL	_cDuty
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1-  848     	MOVAR	_cDuty
     0035                           1-  849     _00177_DS_:
                                    1-  850     	.line	167, "main.c"; 	if(!IntFlag)
                                    1-  851     	BANKSEL	_Status
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 08rr                      1-  852     	BTRSS	_Status,0
                                    1-  853     	MGOTO	_00215_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  854     	.line	169, "main.c"; 	IntFlag = 0;
     0038 1Crr                      1-  855     	BCR	_Status,0
                                    1-  856     	.line	171, "main.c"; 	if(batValue == 0 && workStep > 0)
                                    1-  857     	BANKSEL	_batValue
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  858     	MOVR	_batValue,W
     003B 0903                      1-  859     	BTRSS	STATUS,2
                                    1-  860     	MGOTO	_00184_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	BANKSEL	_workStep
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  862     	MOVR	_workStep,W
     003F 0D03                      1-  863     	BTRSC	STATUS,2
                                    1-  864     	MGOTO	_00184_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  865     	.line	173, "main.c"; 	if(++closeCount >= 1000)
                                    1-  866     	BANKSEL	_closeCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 05rr                      1-  867     	INCR	_closeCount,F
     0043 0D03                      1-  868     	BTRSC	STATUS,2
     0044 05rr                      1-  869     	INCR	(_closeCount + 1),F
                                    1-  870     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0045 2103                      1-  871     	MOVIA	0x03
     0046 04rr                      1-  872     	SUBAR	(_closeCount + 1),W
     0047 0903                      1-  873     	BTRSS	STATUS,2
                                    1-  874     	MGOTO	_00307_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21E8                      1-  875     	MOVIA	0xe8
     004A 04rr                      1-  876     	SUBAR	_closeCount,W
     004B                           1-  877     _00307_DS_:
     004B 0803                      1-  878     	BTRSS	STATUS,0
                                    1-  879     	MGOTO	_00185_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  880     	.line	175, "main.c"; 	closeCount = 0;
                                    1-  881     	BANKSEL	_closeCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1-  882     	CLRR	_closeCount
     004F 02rr                      1-  883     	CLRR	(_closeCount + 1)
                                    1-  884     	.line	176, "main.c"; 	workStep = 0;
                                    1-  885     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1-  886     	CLRR	_workStep
                                    1-  887     	.line	177, "main.c"; 	pwmStop();
                                    1-  888     	MCALL	_pwmStop
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  889     	MGOTO	_00185_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1-  890     _00184_DS_:
                                    1-  891     	.line	182, "main.c"; 	closeCount = 0;
                                    1-  892     	BANKSEL	_closeCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1-  893     	CLRR	_closeCount
     0056 02rr                      1-  894     	CLRR	(_closeCount + 1)
                                    1-  895     ;;unsigned compare: left < lit (0x5=5), size=1
     0057                           1-  896     _00185_DS_:
                                    1-  897     	.line	185, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0057 2105                      1-  898     	MOVIA	0x05
                                    1-  899     	BANKSEL	_overCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 04rr                      1-  900     	SUBAR	_overCount,W
     005A 0803                      1-  901     	BTRSS	STATUS,0
                                    1-  902     	MGOTO	_00190_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  903     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1-  904     	MOVR	_workStep,W
     005E 0D03                      1-  905     	BTRSC	STATUS,2
                                    1-  906     	MGOTO	_00190_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  907     	.line	187, "main.c"; 	if(++count5S > 250)
                                    1-  908     	BANKSEL	_count5S
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1-  909     	INCR	_count5S,F
     0062 0D03                      1-  910     	BTRSC	STATUS,2
     0063 05rr                      1-  911     	INCR	(_count5S + 1),F
                                    1-  912     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  913     ;;unsigned compare: left >= lit (0xFB=251), size=2
     0064 2100                      1-  914     	MOVIA	0x00
     0065 04rr                      1-  915     	SUBAR	(_count5S + 1),W
     0066 0903                      1-  916     	BTRSS	STATUS,2
                                    1-  917     	MGOTO	_00309_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 21FB                      1-  918     	MOVIA	0xfb
     0069 04rr                      1-  919     	SUBAR	_count5S,W
     006A                           1-  920     _00309_DS_:
     006A 0803                      1-  921     	BTRSS	STATUS,0
                                    1-  922     	MGOTO	_00191_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  923     	.line	189, "main.c"; 	overCount = 0;
                                    1-  924     	BANKSEL	_overCount
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 02rr                      1-  925     	CLRR	_overCount
                                    1-  926     	.line	190, "main.c"; 	count5S = 0;
                                    1-  927     	BANKSEL	_count5S
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 02rr                      1-  928     	CLRR	_count5S
     0070 02rr                      1-  929     	CLRR	(_count5S + 1)
                                    1-  930     	.line	191, "main.c"; 	ledDeadTime = 25;
     0071 2119                      1-  931     	MOVIA	0x19
                                    1-  932     	BANKSEL	_ledDeadTime
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1-  933     	MOVAR	_ledDeadTime
                                    1-  934     	.line	192, "main.c"; 	powerOff();
                                    1-  935     	MCALL	_powerOff
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  936     	MGOTO	_00191_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076                           1-  937     _00190_DS_:
                                    1-  938     	.line	197, "main.c"; 	count5S = 0;
                                    1-  939     	BANKSEL	_count5S
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 02rr                      1-  940     	CLRR	_count5S
     0078 02rr                      1-  941     	CLRR	(_count5S + 1)
                                    1-  942     ;;unsigned compare: left < lit (0x5=5), size=1
     0079                           1-  943     _00191_DS_:
                                    1-  944     	.line	199, "main.c"; 	if(count200ms < 5)
     0079 2105                      1-  945     	MOVIA	0x05
                                    1-  946     	BANKSEL	_count200ms
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 04rr                      1-  947     	SUBAR	_count200ms,W
     007C 0C03                      1-  948     	BTRSC	STATUS,0
                                    1-  949     	MGOTO	_00202_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  950     	.line	201, "main.c"; 	if(workStep > 0 &&cDuty == tempDuty)
                                    1-  951     	BANKSEL	_workStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 01rr                      1-  952     	MOVR	_workStep,W
     0080 0D03                      1-  953     	BTRSC	STATUS,2
                                    1-  954     	MGOTO	_00194_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  955     	BANKSEL	_tempDuty
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1-  956     	MOVR	_tempDuty,W
                                    1-  957     	BANKSEL	_cDuty
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 12rr                      1-  958     	XORAR	_cDuty,W
     0086 0D03                      1-  959     	BTRSC	STATUS,2
                                    1-  960     	.line	202, "main.c"; 	checkBatAD();
                                    1-  961     	MCALL	_checkBatAD
     0087 2rrr                      3-   66 m1      LCALL rom_address
     0088                           1-  962     _00194_DS_:
                                    1-  963     	.line	203, "main.c"; 	if(workStep == 0)
                                    1-  964     	BANKSEL	_workStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1-  965     	MOVR	_workStep,W
     008A 0903                      1-  966     	BTRSS	STATUS,2
                                    1-  967     	MGOTO	_00203_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  968     	.line	204, "main.c"; 	checkBatAD();
                                    1-  969     	MCALL	_checkBatAD
     008C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  970     	MGOTO	_00203_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  971     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  972     ;;unsigned compare: left >= lit (0x9=9), size=1
     008E                           1-  973     _00202_DS_:
                                    1-  974     	.line	206, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     008E 2109                      1-  975     	MOVIA	0x09
                                    1-  976     	BANKSEL	_count200ms
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1-  977     	SUBAR	_count200ms,W
     0091 0803                      1-  978     	BTRSS	STATUS,0
                                    1-  979     	MGOTO	_00203_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  980     ;;unsigned compare: left < lit (0xB=11), size=1
     0093 210B                      1-  981     	MOVIA	0x0b
     0094 04rr                      1-  982     	SUBAR	_count200ms,W
     0095 0803                      1-  983     	BTRSS	STATUS,0
                                    1-  984     	.line	208, "main.c"; 	checkOutA();
                                    1-  985     	MCALL	_checkOutA
     0096 2rrr                      3-   66 m1      LCALL rom_address
     0097                           1-  986     _00203_DS_:
                                    1-  987     	.line	210, "main.c"; 	chrgCtr();
                                    1-  988     	MCALL	_chrgCtr
     0097 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  989     	.line	211, "main.c"; 	if(chrgFlag == 0)
                                    1-  990     	BANKSEL	_Status
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 09rr                      1-  991     	BTRSS	_Status,3
                                    1-  992     	.line	212, "main.c"; 	keyCtr();
                                    1-  993     	MCALL	_keyCtr
     009A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  994     	.line	213, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1-  995     	BANKSEL	_workStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1-  996     	MOVR	_workStep,W
     009D 0903                      1-  997     	BTRSS	STATUS,2
                                    1-  998     	MGOTO	_00207_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  999     	BANKSEL	_keyCount
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 1000     	MOVR	_keyCount,W
     00A1 0903                      1- 1001     	BTRSS	STATUS,2
                                    1- 1002     	MGOTO	_00207_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1003     	BANKSEL	_PORTA
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 0Drr                      1- 1004     	BTRSC	_PORTA,3
                                    1- 1005     	MGOTO	_00207_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1006     	BANKSEL	_ledLightTime
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1- 1007     	MOVR	_ledLightTime,W
     00A8 0903                      1- 1008     	BTRSS	STATUS,2
                                    1- 1009     	MGOTO	_00207_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1010     	BANKSEL	_ledDeadTime
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 01rr                      1- 1011     	MOVR	_ledDeadTime,W
     00AC 0D03                      1- 1012     	BTRSC	STATUS,2
                                    1- 1013     	.line	216, "main.c"; 	gotoSleep();
                                    1- 1014     	MCALL	_gotoSleep
     00AD 2rrr                      3-   66 m1      LCALL rom_address
     00AE                           1- 1015     _00207_DS_:
                                    1- 1016     	.line	220, "main.c"; 	if(count900s >= 900)
     00AE 2103                      1- 1017     	MOVIA	0x03
                                    1- 1018     	BANKSEL	_count900s
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 1019     	SUBAR	(_count900s + 1),W
     00B1 0903                      1- 1020     	BTRSS	STATUS,2
                                    1- 1021     	MGOTO	_00313_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
     00B3 2184                      1- 1022     	MOVIA	0x84
     00B4 04rr                      1- 1023     	SUBAR	_count900s,W
     00B5                           1- 1024     _00313_DS_:
     00B5 0803                      1- 1025     	BTRSS	STATUS,0
                                    1- 1026     	MGOTO	_00215_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1027     	.line	222, "main.c"; 	powerOff();
                                    1- 1028     	MCALL	_powerOff
     00B7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1029     	MGOTO	_00215_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	.line	225, "main.c"; 	}
                                    1- 1031     	RETURN	
     00B9 0010                      3-   40 m1      ret
                                    1- 1032     ; exit point of _main
                                    1- 1034     ;***
                                    1- 1035     ;  pBlock Stats: dbName = C
                                    1- 1036     ;***
                                    1- 1037     ;has an exit
                                    1- 1038     ;6 compiler assigned registers:
                                    1- 1039     ;   r0x103E
                                    1- 1040     ;   STK00
                                    1- 1041     ;   r0x103F
                                    1- 1042     ;   r0x1040
                                    1- 1043     ;   r0x1041
                                    1- 1044     ;   r0x1042
                                    1- 1045     ;; Starting pCode block
                                    1- 1046     .segment "code"; module=main, function=_delay
                                    1- 1048     ;local variable name mapping:
     0000                           1- 1053     _delay:
                                    1- 1054     ; 2 exit points
                                    1- 1055     	.line	778, "main.c"; 	void delay(int count)
                                    1- 1056     	BANKSEL	r0x103E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1057     	MOVAR	r0x103E
     0002 01rr                      1- 1058     	MOVR	STK00,W
                                    1- 1059     	BANKSEL	r0x103F
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1060     	MOVAR	r0x103F
                                    1- 1061     	.line	781, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1062     	MOVIA	0x01
                                    1- 1063     	BANKSEL	r0x1040
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1064     	MOVAR	r0x1040
                                    1- 1065     	BANKSEL	r0x1041
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1066     	CLRR	r0x1041
     000A                           1- 1067     _00683_DS_:
                                    1- 1068     	BANKSEL	r0x103E
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1069     	MOVR	r0x103E,W
     000C 2580                      1- 1070     	ADDIA	0x80
                                    1- 1071     	BANKSEL	r0x1042
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1072     	MOVAR	r0x1042
                                    1- 1073     	BANKSEL	r0x1041
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1074     	MOVR	r0x1041,W
     0011 2580                      1- 1075     	ADDIA	0x80
                                    1- 1076     	BANKSEL	r0x1042
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1077     	SUBAR	r0x1042,W
     0014 0903                      1- 1078     	BTRSS	STATUS,2
                                    1- 1079     	MGOTO	_00694_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1080     	BANKSEL	r0x1040
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1081     	MOVR	r0x1040,W
                                    1- 1082     	BANKSEL	r0x103F
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1083     	SUBAR	r0x103F,W
     001A                           1- 1084     _00694_DS_:
     001A 0803                      1- 1085     	BTRSS	STATUS,0
                                    1- 1086     	MGOTO	_00685_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1087     	BANKSEL	r0x1040
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1088     	INCR	r0x1040,F
     001E 0903                      1- 1089     	BTRSS	STATUS,2
                                    1- 1090     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1091     	BANKSEL	r0x1041
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1092     	INCR	r0x1041,F
     0022                           1- 1093     _00001_DS_:
                                    1- 1094     	MGOTO	_00683_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1095     _00685_DS_:
                                    1- 1096     	.line	783, "main.c"; 	}
                                    1- 1097     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1098     ; exit point of _delay
                                    1- 1100     ;***
                                    1- 1101     ;  pBlock Stats: dbName = C
                                    1- 1102     ;***
                                    1- 1103     ;has an exit
                                    1- 1104     ;; Starting pCode block
                                    1- 1105     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1107     _F_wait_eoc:
                                    1- 1108     ; 2 exit points
     0000                           1- 1109     _00676_DS_:
                                    1- 1110     	.line	773, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1111     	BTRSS	_ADMDbits,5
                                    1- 1112     	MGOTO	_00676_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1113     	.line	775, "main.c"; 	}
                                    1- 1114     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1115     ; exit point of _F_wait_eoc
                                    1- 1117     ;***
                                    1- 1118     ;  pBlock Stats: dbName = C
                                    1- 1119     ;***
                                    1- 1120     ;has an exit
                                    1- 1121     ;functions called:
                                    1- 1122     ;   _delay
                                    1- 1123     ;   _F_wait_eoc
                                    1- 1124     ;   _delay
                                    1- 1125     ;   _F_wait_eoc
                                    1- 1126     ;7 compiler assigned registers:
                                    1- 1127     ;   r0x1043
                                    1- 1128     ;   STK00
                                    1- 1129     ;   r0x1044
                                    1- 1130     ;   r0x1045
                                    1- 1131     ;   r0x1046
                                    1- 1132     ;   r0x1047
                                    1- 1133     ;   r0x1048
                                    1- 1134     ;; Starting pCode block
                                    1- 1135     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1137     ;local variable name mapping:
     0000                           1- 1140     _F_AIN2_Convert:
                                    1- 1141     ; 2 exit points
                                    1- 1142     	.line	756, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1143     	BANKSEL	r0x1043
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1144     	MOVAR	r0x1043
                                    1- 1145     	.line	758, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1146     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1147     	CLRR	_R_AIN2_DATA_LB
                                    1- 1148     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1149     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1150     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1151     	.line	760, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1152     	MOVIA	0x92
     0008 00rr                      1- 1153     	MOVAR	_ADMD
                                    1- 1154     	.line	761, "main.c"; 	delay(200);	
     0009 21C8                      1- 1155     	MOVIA	0xc8
     000A 00rr                      1- 1156     	MOVAR	STK00
     000B 2100                      1- 1157     	MOVIA	0x00
                                    1- 1158     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1159     	.line	762, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1160     	MOVIA	0x01
                                    1- 1161     	BANKSEL	r0x1044
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1162     	MOVAR	r0x1044
     0010                           1- 1163     _00669_DS_:
                                    1- 1164     	BANKSEL	r0x1044
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1165     	MOVR	r0x1044,W
                                    1- 1166     	BANKSEL	r0x1043
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1167     	SUBAR	r0x1043,W
     0014 0803                      1- 1168     	BTRSS	STATUS,0
                                    1- 1169     	MGOTO	_00671_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1170     	.line	764, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1171     	BSR	_ADMDbits,6
                                    1- 1172     	.line	765, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1173     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1174     	.line	766, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1175     	MOVIA	0x0f
     0019 10rr                      1- 1176     	ANDAR	_ADR,W
                                    1- 1177     ;;3	MOVAR	r0x1045
                                    1- 1178     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1179     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1180     	.line	767, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1181     	MOVR	_ADD,W
                                    1- 1182     	BANKSEL	r0x1045
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1183     	MOVAR	r0x1045
                                    1- 1184     ;;1	CLRR	r0x1046
                                    1- 1185     ;;112	MOVR	r0x1045,W
                                    1- 1186     ;;110	MOVAR	r0x1047
     001F 2100                      1- 1187     	MOVIA	0x00
                                    1- 1188     	BANKSEL	r0x1048
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1189     	MOVAR	r0x1048
                                    1- 1190     ;;111	MOVR	r0x1047,W
                                    1- 1191     	BANKSEL	r0x1045
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1192     	MOVR	r0x1045,W
                                    1- 1193     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1194     	ADDAR	_R_AIN2_DATA,F
                                    1- 1195     	BANKSEL	r0x1048
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1196     	MOVR	r0x1048,W
     0028 0C03                      1- 1197     	BTRSC	STATUS,0
     0029 05rr                      1- 1198     	INCR	r0x1048,W
     002A 0D03                      1- 1199     	BTRSC	STATUS,2
                                    1- 1200     	MGOTO	_00002_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1201     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1202     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1203     _00002_DS_:
                                    1- 1204     	.line	762, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1205     	BANKSEL	r0x1044
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1206     	INCR	r0x1044,F
                                    1- 1207     	MGOTO	_00669_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1208     _00671_DS_:
                                    1- 1209     	.line	769, "main.c"; 	}
                                    1- 1210     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1211     ; exit point of _F_AIN2_Convert
                                    1- 1213     ;***
                                    1- 1214     ;  pBlock Stats: dbName = C
                                    1- 1215     ;***
                                    1- 1216     ;has an exit
                                    1- 1217     ;functions called:
                                    1- 1218     ;   _delay
                                    1- 1219     ;   _F_wait_eoc
                                    1- 1220     ;   _delay
                                    1- 1221     ;   _F_wait_eoc
                                    1- 1222     ;7 compiler assigned registers:
                                    1- 1223     ;   r0x1049
                                    1- 1224     ;   STK00
                                    1- 1225     ;   r0x104A
                                    1- 1226     ;   r0x104B
                                    1- 1227     ;   r0x104C
                                    1- 1228     ;   r0x104D
                                    1- 1229     ;   r0x104E
                                    1- 1230     ;; Starting pCode block
                                    1- 1231     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1233     ;local variable name mapping:
     0000                           1- 1236     _F_AIN3_Convert:
                                    1- 1237     ; 2 exit points
                                    1- 1238     	.line	741, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1239     	BANKSEL	r0x1049
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1240     	MOVAR	r0x1049
                                    1- 1241     	.line	743, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1242     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1243     	CLRR	_R_AIN3_DATA_LB
                                    1- 1244     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1245     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1246     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1247     	.line	745, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1248     	MOVIA	0x93
     0008 00rr                      1- 1249     	MOVAR	_ADMD
                                    1- 1250     	.line	746, "main.c"; 	delay(200);	
     0009 21C8                      1- 1251     	MOVIA	0xc8
     000A 00rr                      1- 1252     	MOVAR	STK00
     000B 2100                      1- 1253     	MOVIA	0x00
                                    1- 1254     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1255     	.line	747, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1256     	MOVIA	0x01
                                    1- 1257     	BANKSEL	r0x104A
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1258     	MOVAR	r0x104A
     0010                           1- 1259     _00660_DS_:
                                    1- 1260     	BANKSEL	r0x104A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1261     	MOVR	r0x104A,W
                                    1- 1262     	BANKSEL	r0x1049
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1263     	SUBAR	r0x1049,W
     0014 0803                      1- 1264     	BTRSS	STATUS,0
                                    1- 1265     	MGOTO	_00662_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1266     	.line	749, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1267     	BSR	_ADMDbits,6
                                    1- 1268     	.line	750, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1269     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1270     	.line	751, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1271     	MOVIA	0x0f
     0019 10rr                      1- 1272     	ANDAR	_ADR,W
                                    1- 1273     ;;3	MOVAR	r0x104B
                                    1- 1274     	BANKSEL	_R_AIN3_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1275     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1276     	.line	752, "main.c"; 	R_AIN3_DATA    += ADD; 
     001C 01rr                      1- 1277     	MOVR	_ADD,W
                                    1- 1278     	BANKSEL	r0x104B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1279     	MOVAR	r0x104B
                                    1- 1280     ;;1	CLRR	r0x104C
                                    1- 1281     ;;109	MOVR	r0x104B,W
                                    1- 1282     ;;107	MOVAR	r0x104D
     001F 2100                      1- 1283     	MOVIA	0x00
                                    1- 1284     	BANKSEL	r0x104E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1285     	MOVAR	r0x104E
                                    1- 1286     ;;108	MOVR	r0x104D,W
                                    1- 1287     	BANKSEL	r0x104B
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1288     	MOVR	r0x104B,W
                                    1- 1289     	BANKSEL	_R_AIN3_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1290     	ADDAR	_R_AIN3_DATA,F
                                    1- 1291     	BANKSEL	r0x104E
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1292     	MOVR	r0x104E,W
     0028 0C03                      1- 1293     	BTRSC	STATUS,0
     0029 05rr                      1- 1294     	INCR	r0x104E,W
     002A 0D03                      1- 1295     	BTRSC	STATUS,2
                                    1- 1296     	MGOTO	_00003_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1297     	BANKSEL	_R_AIN3_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1298     	ADDAR	(_R_AIN3_DATA + 1),F
     002E                           1- 1299     _00003_DS_:
                                    1- 1300     	.line	747, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1301     	BANKSEL	r0x104A
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1302     	INCR	r0x104A,F
                                    1- 1303     	MGOTO	_00660_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1304     _00662_DS_:
                                    1- 1305     	.line	754, "main.c"; 	}
                                    1- 1306     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1307     ; exit point of _F_AIN3_Convert
                                    1- 1309     ;***
                                    1- 1310     ;  pBlock Stats: dbName = C
                                    1- 1311     ;***
                                    1- 1312     ;has an exit
                                    1- 1313     ;functions called:
                                    1- 1314     ;   _delay
                                    1- 1315     ;   _F_wait_eoc
                                    1- 1316     ;   _delay
                                    1- 1317     ;   _F_wait_eoc
                                    1- 1318     ;7 compiler assigned registers:
                                    1- 1319     ;   r0x104F
                                    1- 1320     ;   STK00
                                    1- 1321     ;   r0x1050
                                    1- 1322     ;   r0x1051
                                    1- 1323     ;   r0x1052
                                    1- 1324     ;   r0x1053
                                    1- 1325     ;   r0x1054
                                    1- 1326     ;; Starting pCode block
                                    1- 1327     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1329     ;local variable name mapping:
     0000                           1- 1332     _F_AIN4_Convert:
                                    1- 1333     ; 2 exit points
                                    1- 1334     	.line	726, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1335     	BANKSEL	r0x104F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1336     	MOVAR	r0x104F
                                    1- 1337     	.line	728, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1338     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1339     	CLRR	_R_AIN4_DATA_LB
                                    1- 1340     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1341     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1342     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1343     	.line	730, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1344     	MOVIA	0x94
     0008 00rr                      1- 1345     	MOVAR	_ADMD
                                    1- 1346     	.line	731, "main.c"; 	delay(200);	
     0009 21C8                      1- 1347     	MOVIA	0xc8
     000A 00rr                      1- 1348     	MOVAR	STK00
     000B 2100                      1- 1349     	MOVIA	0x00
                                    1- 1350     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1351     	.line	732, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1352     	MOVIA	0x01
                                    1- 1353     	BANKSEL	r0x1050
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1354     	MOVAR	r0x1050
     0010                           1- 1355     _00651_DS_:
                                    1- 1356     	BANKSEL	r0x1050
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1357     	MOVR	r0x1050,W
                                    1- 1358     	BANKSEL	r0x104F
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1359     	SUBAR	r0x104F,W
     0014 0803                      1- 1360     	BTRSS	STATUS,0
                                    1- 1361     	MGOTO	_00653_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1362     	.line	734, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1363     	BSR	_ADMDbits,6
                                    1- 1364     	.line	735, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1365     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1366     	.line	736, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1367     	MOVIA	0x0f
     0019 10rr                      1- 1368     	ANDAR	_ADR,W
                                    1- 1369     ;;3	MOVAR	r0x1051
                                    1- 1370     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1371     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1372     	.line	737, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1373     	MOVR	_ADD,W
                                    1- 1374     	BANKSEL	r0x1051
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1375     	MOVAR	r0x1051
                                    1- 1376     ;;1	CLRR	r0x1052
                                    1- 1377     ;;106	MOVR	r0x1051,W
                                    1- 1378     ;;104	MOVAR	r0x1053
     001F 2100                      1- 1379     	MOVIA	0x00
                                    1- 1380     	BANKSEL	r0x1054
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1381     	MOVAR	r0x1054
                                    1- 1382     ;;105	MOVR	r0x1053,W
                                    1- 1383     	BANKSEL	r0x1051
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1384     	MOVR	r0x1051,W
                                    1- 1385     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1386     	ADDAR	_R_AIN4_DATA,F
                                    1- 1387     	BANKSEL	r0x1054
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1388     	MOVR	r0x1054,W
     0028 0C03                      1- 1389     	BTRSC	STATUS,0
     0029 05rr                      1- 1390     	INCR	r0x1054,W
     002A 0D03                      1- 1391     	BTRSC	STATUS,2
                                    1- 1392     	MGOTO	_00004_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1393     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1394     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1395     _00004_DS_:
                                    1- 1396     	.line	732, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1397     	BANKSEL	r0x1050
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1398     	INCR	r0x1050,F
                                    1- 1399     	MGOTO	_00651_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1400     _00653_DS_:
                                    1- 1401     	.line	739, "main.c"; 	}
                                    1- 1402     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1403     ; exit point of _F_AIN4_Convert
                                    1- 1405     ;***
                                    1- 1406     ;  pBlock Stats: dbName = C
                                    1- 1407     ;***
                                    1- 1408     ;has an exit
                                    1- 1409     ;functions called:
                                    1- 1410     ;   _F_AIN4_Convert
                                    1- 1411     ;   __mulchar
                                    1- 1412     ;   __mulchar
                                    1- 1413     ;   __mulchar
                                    1- 1414     ;   _F_AIN4_Convert
                                    1- 1415     ;   __mulchar
                                    1- 1416     ;   __mulchar
                                    1- 1417     ;   __mulchar
                                    1- 1418     ;5 compiler assigned registers:
                                    1- 1419     ;   r0x1055
                                    1- 1420     ;   r0x1056
                                    1- 1421     ;   r0x1057
                                    1- 1422     ;   r0x1058
                                    1- 1423     ;   STK00
                                    1- 1424     ;; Starting pCode block
                                    1- 1425     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1427     _checkOutA:
                                    1- 1428     ; 2 exit points
                                    1- 1429     	.line	652, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1430     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1431     	CLRR	_R_AIN4_DATA_LB
                                    1- 1432     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1433     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1434     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1435     	.line	653, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1436     	MOVIA	0x08
                                    1- 1437     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1438     	.line	654, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1439     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1440     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1441     	ANDIA	0xf0
     000A 00rr                      1- 1442     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1443     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1444     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1445     	ANDIA	0x0f
     000E 11rr                      1- 1446     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1447     	XORAR	_R_AIN4_DATA,F
                                    1- 1448     	.line	655, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1449     	MOVIA	0xf0
                                    1- 1450     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1451     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1452     	.line	656, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1453     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1454     	BANKSEL	r0x1055
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1455     	MOVAR	r0x1055
                                    1- 1456     ;;1	CLRR	r0x1056
                                    1- 1457     ;;103	MOVR	r0x1055,W
                                    1- 1458     ;;101	MOVAR	r0x1057
     0016 2100                      1- 1459     	MOVIA	0x00
                                    1- 1460     	BANKSEL	r0x1058
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1461     	MOVAR	r0x1058
                                    1- 1462     ;;102	MOVR	r0x1057,W
                                    1- 1463     	BANKSEL	r0x1055
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1464     	MOVR	r0x1055,W
                                    1- 1465     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1466     	ADDAR	_R_AIN4_DATA,F
                                    1- 1467     	BANKSEL	r0x1058
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1468     	MOVR	r0x1058,W
     001F 0C03                      1- 1469     	BTRSC	STATUS,0
     0020 05rr                      1- 1470     	INCR	r0x1058,W
     0021 0D03                      1- 1471     	BTRSC	STATUS,2
                                    1- 1472     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1473     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1474     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1475     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1476     _00005_DS_:
                                    1- 1477     	.line	657, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1478     	BCR	STATUS,0
                                    1- 1479     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1480     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1481     	RRR	_R_AIN4_DATA,F
                                    1- 1482     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1483     	BCR	STATUS,0
     002A 13rr                      1- 1484     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1485     	RRR	_R_AIN4_DATA,F
                                    1- 1486     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1487     	BCR	STATUS,0
     002D 13rr                      1- 1488     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1489     	RRR	_R_AIN4_DATA,F
                                    1- 1490     	.line	658, "main.c"; 	if(debug)
                                    1- 1491     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1492     	MOVR	_debug,W
     0031 0D03                      1- 1493     	BTRSC	STATUS,2
                                    1- 1494     	MGOTO	_00555_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1495     	.line	659, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 212D                      1- 1496     	MOVIA	0x2d
                                    1- 1497     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1498     	MOVAR	_R_AIN4_DATA
     0036 2101                      1- 1499     	MOVIA	0x01
     0037 00rr                      1- 1500     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1501     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1502     _00555_DS_:
                                    1- 1503     	.line	660, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0038 2106                      1- 1504     	MOVIA	0x06
                                    1- 1505     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1506     	SUBAR	_workStep,W
     003B 0C03                      1- 1507     	BTRSC	STATUS,0
                                    1- 1508     	MGOTO	_00585_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1509     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1510     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1511     	MOVIA	0x00
                                    1- 1512     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1513     	SUBAR	(_R_AIN4_DATA + 1),W
     0040 0903                      1- 1514     	BTRSS	STATUS,2
                                    1- 1515     	MGOTO	_00636_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21C9                      1- 1516     	MOVIA	0xc9
     0043 04rr                      1- 1517     	SUBAR	_R_AIN4_DATA,W
     0044                           1- 1518     _00636_DS_:
     0044 0803                      1- 1519     	BTRSS	STATUS,0
                                    1- 1520     	MGOTO	_00585_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1521     	.line	662, "main.c"; 	if(++overCount > 5)
                                    1- 1522     	BANKSEL	_overCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1- 1523     	INCR	_overCount,F
                                    1- 1524     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1525     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1526     	MOVIA	0x06
     0049 04rr                      1- 1527     	SUBAR	_overCount,W
     004A 0803                      1- 1528     	BTRSS	STATUS,0
                                    1- 1529     	MGOTO	_00588_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1530     	.line	664, "main.c"; 	overCount = 5;
     004C 2105                      1- 1531     	MOVIA	0x05
     004D 00rr                      1- 1532     	MOVAR	_overCount
                                    1- 1533     	MGOTO	_00588_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1534     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1535     ;;unsigned compare: left >= lit (0x191=401), size=2
     004F                           1- 1536     _00585_DS_:
                                    1- 1537     	.line	667, "main.c"; 	else if(R_AIN4_DATA > 400)
     004F 2101                      1- 1538     	MOVIA	0x01
                                    1- 1539     	BANKSEL	_R_AIN4_DATA
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 04rr                      1- 1540     	SUBAR	(_R_AIN4_DATA + 1),W
     0052 0903                      1- 1541     	BTRSS	STATUS,2
                                    1- 1542     	MGOTO	_00638_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054 2191                      1- 1543     	MOVIA	0x91
     0055 04rr                      1- 1544     	SUBAR	_R_AIN4_DATA,W
     0056                           1- 1545     _00638_DS_:
     0056 0803                      1- 1546     	BTRSS	STATUS,0
                                    1- 1547     	MGOTO	_00582_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1548     	.line	669, "main.c"; 	if(++overCount > 5)
                                    1- 1549     	BANKSEL	_overCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 05rr                      1- 1550     	INCR	_overCount,F
                                    1- 1551     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1552     ;;unsigned compare: left >= lit (0x6=6), size=1
     005A 2106                      1- 1553     	MOVIA	0x06
     005B 04rr                      1- 1554     	SUBAR	_overCount,W
     005C 0803                      1- 1555     	BTRSS	STATUS,0
                                    1- 1556     	MGOTO	_00588_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1557     	.line	671, "main.c"; 	overCount = 5;
     005E 2105                      1- 1558     	MOVIA	0x05
     005F 00rr                      1- 1559     	MOVAR	_overCount
                                    1- 1560     	MGOTO	_00588_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1561     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1562     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0061                           1- 1563     _00582_DS_:
                                    1- 1564     	.line	679, "main.c"; 	else if(R_AIN4_DATA > 45)
     0061 2100                      1- 1565     	MOVIA	0x00
                                    1- 1566     	BANKSEL	_R_AIN4_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 1567     	SUBAR	(_R_AIN4_DATA + 1),W
     0064 0903                      1- 1568     	BTRSS	STATUS,2
                                    1- 1569     	MGOTO	_00640_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066 212E                      1- 1570     	MOVIA	0x2e
     0067 04rr                      1- 1571     	SUBAR	_R_AIN4_DATA,W
     0068                           1- 1572     _00640_DS_:
     0068 0803                      1- 1573     	BTRSS	STATUS,0
                                    1- 1574     	MGOTO	_00579_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1575     	.line	681, "main.c"; 	if(overCount > 0)
                                    1- 1576     	BANKSEL	_overCount
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 1577     	MOVR	_overCount,W
     006C 0903                      1- 1578     	BTRSS	STATUS,2
                                    1- 1579     	.line	683, "main.c"; 	overCount--;
     006D 06rr                      1- 1580     	DECR	_overCount,F
                                    1- 1581     	.line	685, "main.c"; 	if(workStep < 4)
     006E 2104                      1- 1582     	MOVIA	0x04
                                    1- 1583     	BANKSEL	_workStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 04rr                      1- 1584     	SUBAR	_workStep,W
     0071 0C03                      1- 1585     	BTRSC	STATUS,0
                                    1- 1586     	MGOTO	_00563_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1587     	.line	687, "main.c"; 	tempDuty = 70 + workStep*5;
     0073 2105                      1- 1588     	MOVIA	0x05
     0074 00rr                      1- 1589     	MOVAR	STK00
     0075 01rr                      1- 1590     	MOVR	_workStep,W
                                    1- 1591     	MCALL	__mulchar
     0076 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1592     	BANKSEL	r0x1055
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 1593     	MOVAR	r0x1055
     0079 2146                      1- 1594     	MOVIA	0x46
     007A 03rr                      1- 1595     	ADDAR	r0x1055,W
                                    1- 1596     	BANKSEL	_tempDuty
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1597     	MOVAR	_tempDuty
                                    1- 1598     	MGOTO	_00564_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
     007E                           1- 1599     _00563_DS_:
                                    1- 1600     	.line	690, "main.c"; 	tempDuty = 70 + workStep*5;
     007E 2105                      1- 1601     	MOVIA	0x05
     007F 00rr                      1- 1602     	MOVAR	STK00
                                    1- 1603     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 1604     	MOVR	_workStep,W
                                    1- 1605     	MCALL	__mulchar
     0082 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1606     	BANKSEL	r0x1055
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1- 1607     	MOVAR	r0x1055
     0085 2146                      1- 1608     	MOVIA	0x46
     0086 03rr                      1- 1609     	ADDAR	r0x1055,W
                                    1- 1610     	BANKSEL	_tempDuty
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1611     	MOVAR	_tempDuty
     0089                           1- 1612     _00564_DS_:
                                    1- 1613     	.line	693, "main.c"; 	if(workStep == 1)
                                    1- 1614     	BANKSEL	_workStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 1615     	MOVR	_workStep,W
     008B 2401                      1- 1616     	XORIA	0x01
     008C 0903                      1- 1617     	BTRSS	STATUS,2
                                    1- 1618     	MGOTO	_00568_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1619     	.line	694, "main.c"; 	tempDuty = tempDuty + 2;
                                    1- 1620     	BANKSEL	_tempDuty
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 05rr                      1- 1621     	INCR	_tempDuty,F
     0090 05rr                      1- 1622     	INCR	_tempDuty,F
                                    1- 1623     	MGOTO	_00588_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092                           1- 1624     _00568_DS_:
                                    1- 1625     	.line	695, "main.c"; 	else if(workStep == 2)
                                    1- 1626     	BANKSEL	_workStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1- 1627     	MOVR	_workStep,W
     0094 2402                      1- 1628     	XORIA	0x02
     0095 0903                      1- 1629     	BTRSS	STATUS,2
                                    1- 1630     	MGOTO	_00588_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1631     	.line	696, "main.c"; 	tempDuty = tempDuty + 1;
                                    1- 1632     	BANKSEL	_tempDuty
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 05rr                      1- 1633     	INCR	_tempDuty,F
                                    1- 1634     	MGOTO	_00588_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A                           1- 1635     _00579_DS_:
                                    1- 1636     	.line	700, "main.c"; 	if(overCount > 0)
                                    1- 1637     	BANKSEL	_overCount
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 01rr                      1- 1638     	MOVR	_overCount,W
     009C 0903                      1- 1639     	BTRSS	STATUS,2
                                    1- 1640     	.line	702, "main.c"; 	overCount--;
     009D 06rr                      1- 1641     	DECR	_overCount,F
                                    1- 1642     	.line	704, "main.c"; 	if(R_AIN4_DATA > 40 && workStep < 4)
     009E 2100                      1- 1643     	MOVIA	0x00
                                    1- 1644     	BANKSEL	_R_AIN4_DATA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 04rr                      1- 1645     	SUBAR	(_R_AIN4_DATA + 1),W
     00A1 0903                      1- 1646     	BTRSS	STATUS,2
                                    1- 1647     	MGOTO	_00642_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
     00A3 2129                      1- 1648     	MOVIA	0x29
     00A4 04rr                      1- 1649     	SUBAR	_R_AIN4_DATA,W
     00A5                           1- 1650     _00642_DS_:
     00A5 0803                      1- 1651     	BTRSS	STATUS,0
                                    1- 1652     	MGOTO	_00575_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1653     ;;unsigned compare: left < lit (0x4=4), size=1
     00A7 2104                      1- 1654     	MOVIA	0x04
                                    1- 1655     	BANKSEL	_workStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 1656     	SUBAR	_workStep,W
     00AA 0C03                      1- 1657     	BTRSC	STATUS,0
                                    1- 1658     	MGOTO	_00575_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1659     	.line	706, "main.c"; 	tempDuty = 70 + workStep*5;
     00AC 2105                      1- 1660     	MOVIA	0x05
     00AD 00rr                      1- 1661     	MOVAR	STK00
     00AE 01rr                      1- 1662     	MOVR	_workStep,W
                                    1- 1663     	MCALL	__mulchar
     00AF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1664     	BANKSEL	r0x1055
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 00rr                      1- 1665     	MOVAR	r0x1055
     00B2 2146                      1- 1666     	MOVIA	0x46
     00B3 03rr                      1- 1667     	ADDAR	r0x1055,W
                                    1- 1668     	BANKSEL	_tempDuty
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 1669     	MOVAR	_tempDuty
                                    1- 1670     	MGOTO	_00588_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1671     ;;unsigned compare: left < lit (0x44=68), size=2
     00B7                           1- 1672     _00575_DS_:
                                    1- 1673     	.line	709, "main.c"; 	else if(R_AIN4_DATA < 68)
     00B7 2100                      1- 1674     	MOVIA	0x00
                                    1- 1675     	BANKSEL	_R_AIN4_DATA
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 1676     	SUBAR	(_R_AIN4_DATA + 1),W
     00BA 0903                      1- 1677     	BTRSS	STATUS,2
                                    1- 1678     	MGOTO	_00644_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC 2144                      1- 1679     	MOVIA	0x44
     00BD 04rr                      1- 1680     	SUBAR	_R_AIN4_DATA,W
     00BE                           1- 1681     _00644_DS_:
     00BE 0C03                      1- 1682     	BTRSC	STATUS,0
                                    1- 1683     	MGOTO	_00588_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1684     	.line	712, "main.c"; 	tempDuty = maxDuty;
                                    1- 1685     	BANKSEL	_maxDuty
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 01rr                      1- 1686     	MOVR	_maxDuty,W
                                    1- 1687     	BANKSEL	_tempDuty
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 1688     	MOVAR	_tempDuty
     00C4                           1- 1689     _00588_DS_:
                                    1- 1690     	.line	720, "main.c"; 	}
                                    1- 1691     	RETURN	
     00C4 0010                      3-   40 m1      ret
                                    1- 1692     ; exit point of _checkOutA
                                    1- 1694     ;***
                                    1- 1695     ;  pBlock Stats: dbName = C
                                    1- 1696     ;***
                                    1- 1697     ;has an exit
                                    1- 1698     ;functions called:
                                    1- 1699     ;   _F_AIN2_Convert
                                    1- 1700     ;   _F_AIN2_Convert
                                    1- 1701     ;6 compiler assigned registers:
                                    1- 1702     ;   r0x1059
                                    1- 1703     ;   r0x105A
                                    1- 1704     ;   r0x105B
                                    1- 1705     ;   r0x105C
                                    1- 1706     ;   r0x105D
                                    1- 1707     ;   r0x105E
                                    1- 1708     ;; Starting pCode block
                                    1- 1709     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1711     _checkBatAD:
                                    1- 1712     ; 2 exit points
                                    1- 1713     	.line	604, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1714     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1715     	CLRR	_R_AIN2_DATA_LB
                                    1- 1716     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1717     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1718     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1719     	.line	605, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1720     	MOVIA	0x08
                                    1- 1721     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1722     	.line	606, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1723     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1724     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1725     	ANDIA	0xf0
     000A 00rr                      1- 1726     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1727     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1728     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1729     	ANDIA	0x0f
     000E 11rr                      1- 1730     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1731     	XORAR	_R_AIN2_DATA,F
                                    1- 1732     	.line	607, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1733     	MOVIA	0xf0
                                    1- 1734     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1735     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1736     	.line	608, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1737     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1738     	BANKSEL	r0x105B
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1739     	MOVAR	r0x105B
                                    1- 1740     	BANKSEL	r0x1059
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1741     	MOVAR	r0x1059
                                    1- 1742     	BANKSEL	r0x105A
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1743     	CLRR	r0x105A
                                    1- 1744     ;;113	MOVR	r0x1059,W
     001A 2100                      1- 1745     	MOVIA	0x00
                                    1- 1746     	BANKSEL	r0x105C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1747     	MOVAR	r0x105C
                                    1- 1748     	BANKSEL	r0x105B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1749     	MOVR	r0x105B,W
                                    1- 1750     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1751     	ADDAR	_R_AIN2_DATA,F
                                    1- 1752     	BANKSEL	r0x105C
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1753     	MOVR	r0x105C,W
     0023 0C03                      1- 1754     	BTRSC	STATUS,0
     0024 05rr                      1- 1755     	INCR	r0x105C,W
     0025 0D03                      1- 1756     	BTRSC	STATUS,2
                                    1- 1757     	MGOTO	_00006_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1758     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1759     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1760     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1761     _00006_DS_:
                                    1- 1762     	.line	609, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1763     	BCR	STATUS,0
                                    1- 1764     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1765     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1766     	RRR	_R_AIN2_DATA,F
                                    1- 1767     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1768     	BCR	STATUS,0
     002E 13rr                      1- 1769     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1770     	RRR	_R_AIN2_DATA,F
                                    1- 1771     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1772     	BCR	STATUS,0
     0031 13rr                      1- 1773     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1774     	RRR	_R_AIN2_DATA,F
                                    1- 1775     	.line	610, "main.c"; 	if(debug)
                                    1- 1776     	BANKSEL	_debug
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1777     	MOVR	_debug,W
     0035 0D03                      1- 1778     	BTRSC	STATUS,2
                                    1- 1779     	MGOTO	_00504_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1780     	.line	611, "main.c"; 	R_AIN2_DATA = BATTLE;
     0037 210E                      1- 1781     	MOVIA	0x0e
                                    1- 1782     	BANKSEL	_R_AIN2_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1783     	MOVAR	_R_AIN2_DATA
     003A 2106                      1- 1784     	MOVIA	0x06
     003B 00rr                      1- 1785     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1786     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1787     ;;unsigned compare: left >= lit (0x614=1556), size=2
     003C                           1- 1788     _00504_DS_:
                                    1- 1789     	.line	613, "main.c"; 	if(R_AIN2_DATA > 1555)
     003C 2106                      1- 1790     	MOVIA	0x06
                                    1- 1791     	BANKSEL	_R_AIN2_DATA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1792     	SUBAR	(_R_AIN2_DATA + 1),W
     003F 0903                      1- 1793     	BTRSS	STATUS,2
                                    1- 1794     	MGOTO	_00544_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 2114                      1- 1795     	MOVIA	0x14
     0042 04rr                      1- 1796     	SUBAR	_R_AIN2_DATA,W
     0043                           1- 1797     _00544_DS_:
     0043 0803                      1- 1798     	BTRSS	STATUS,0
                                    1- 1799     	MGOTO	_00510_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1800     	.line	616, "main.c"; 	lowCount = 0;
                                    1- 1801     	BANKSEL	_lowCount
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 1802     	CLRR	_lowCount
                                    1- 1803     	MGOTO	_00511_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1804     ;;unsigned compare: left < lit (0x488=1160), size=2
     0048                           1- 1805     _00510_DS_:
                                    1- 1806     	.line	618, "main.c"; 	else if(R_AIN2_DATA < 1160)
     0048 2104                      1- 1807     	MOVIA	0x04
                                    1- 1808     	BANKSEL	_R_AIN2_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1809     	SUBAR	(_R_AIN2_DATA + 1),W
     004B 0903                      1- 1810     	BTRSS	STATUS,2
                                    1- 1811     	MGOTO	_00545_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 2188                      1- 1812     	MOVIA	0x88
     004E 04rr                      1- 1813     	SUBAR	_R_AIN2_DATA,W
     004F                           1- 1814     _00545_DS_:
     004F 0C03                      1- 1815     	BTRSC	STATUS,0
                                    1- 1816     	MGOTO	_00511_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1817     	.line	620, "main.c"; 	if(++lowCount < 10)
                                    1- 1818     	BANKSEL	_lowCount
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 05rr                      1- 1819     	INCR	_lowCount,F
                                    1- 1820     ;;unsigned compare: left < lit (0xA=10), size=1
     0053 210A                      1- 1821     	MOVIA	0x0a
     0054 04rr                      1- 1822     	SUBAR	_lowCount,W
     0055 0803                      1- 1823     	BTRSS	STATUS,0
                                    1- 1824     	.line	621, "main.c"; 	return;
                                    1- 1825     	MGOTO	_00521_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1826     	.line	622, "main.c"; 	lowCount = 10;
     0057 210A                      1- 1827     	MOVIA	0x0a
     0058 00rr                      1- 1828     	MOVAR	_lowCount
                                    1- 1829     	.line	623, "main.c"; 	pwStep = 0;
                                    1- 1830     	BANKSEL	_pwStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1- 1831     	CLRR	_pwStep
                                    1- 1832     	.line	624, "main.c"; 	R_AIN2_DATA = 1160;
     005B 2188                      1- 1833     	MOVIA	0x88
                                    1- 1834     	BANKSEL	_R_AIN2_DATA
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 1835     	MOVAR	_R_AIN2_DATA
     005E 2104                      1- 1836     	MOVIA	0x04
     005F 00rr                      1- 1837     	MOVAR	(_R_AIN2_DATA + 1)
     0060                           1- 1838     _00511_DS_:
                                    1- 1839     	.line	627, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1160;
     0060 2178                      1- 1840     	MOVIA	0x78
                                    1- 1841     	BANKSEL	_R_AIN2_DATA
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 03rr                      1- 1842     	ADDAR	_R_AIN2_DATA,F
     0063 21FB                      1- 1843     	MOVIA	0xfb
     0064 0C03                      1- 1844     	BTRSC	STATUS,0
     0065 21FC                      1- 1845     	MOVIA	0xfc
     0066 03rr                      1- 1846     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1847     ;;unsigned compare: left < lit (0x190=400), size=2
                                    1- 1848     	.line	628, "main.c"; 	if(R_AIN2_DATA >= 400)
     0067 2101                      1- 1849     	MOVIA	0x01
     0068 04rr                      1- 1850     	SUBAR	(_R_AIN2_DATA + 1),W
     0069 0903                      1- 1851     	BTRSS	STATUS,2
                                    1- 1852     	MGOTO	_00547_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 2190                      1- 1853     	MOVIA	0x90
     006C 04rr                      1- 1854     	SUBAR	_R_AIN2_DATA,W
     006D                           1- 1855     _00547_DS_:
     006D 0803                      1- 1856     	BTRSS	STATUS,0
                                    1- 1857     	MGOTO	_00519_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1858     	.line	631, "main.c"; 	batValue = 50+(R_AIN2_DATA-300)/2;
     006F 21D4                      1- 1859     	MOVIA	0xd4
                                    1- 1860     	BANKSEL	_R_AIN2_DATA
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 03rr                      1- 1861     	ADDAR	_R_AIN2_DATA,W
                                    1- 1862     	BANKSEL	r0x1059
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1863     	MOVAR	r0x1059
     0074 21FE                      1- 1864     	MOVIA	0xfe
                                    1- 1865     	BANKSEL	r0x105A
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 1866     	MOVAR	r0x105A
                                    1- 1867     	BANKSEL	_R_AIN2_DATA
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1868     	MOVR	(_R_AIN2_DATA + 1),W
     0079 0C03                      1- 1869     	BTRSC	STATUS,0
     007A 05rr                      1- 1870     	INCR	(_R_AIN2_DATA + 1),W
     007B 0D03                      1- 1871     	BTRSC	STATUS,2
                                    1- 1872     	MGOTO	_00007_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1873     	BANKSEL	r0x105A
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 03rr                      1- 1874     	ADDAR	r0x105A,F
                                    1- 1875     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     007F                           1- 1876     _00007_DS_:
     007F 1C03                      1- 1877     	BCR	STATUS,0
                                    1- 1878     	BANKSEL	r0x105A
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 13rr                      1- 1879     	RRR	r0x105A,W
                                    1- 1880     	BANKSEL	r0x105C
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 1881     	MOVAR	r0x105C
                                    1- 1882     	BANKSEL	r0x1059
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 13rr                      1- 1883     	RRR	r0x1059,W
                                    1- 1884     	BANKSEL	r0x105B
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 1885     	MOVAR	r0x105B
                                    1- 1886     	BANKSEL	r0x1059
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 1887     	MOVAR	r0x1059
     008A 2132                      1- 1888     	MOVIA	0x32
     008B 03rr                      1- 1889     	ADDAR	r0x1059,W
                                    1- 1890     	BANKSEL	_batValue
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 1891     	MOVAR	_batValue
                                    1- 1892     	MGOTO	_00521_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1893     ;;unsigned compare: left < lit (0x12C=300), size=2
     008F                           1- 1894     _00519_DS_:
                                    1- 1895     	.line	633, "main.c"; 	else if(R_AIN2_DATA >= 300)
     008F 2101                      1- 1896     	MOVIA	0x01
                                    1- 1897     	BANKSEL	_R_AIN2_DATA
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 04rr                      1- 1898     	SUBAR	(_R_AIN2_DATA + 1),W
     0092 0903                      1- 1899     	BTRSS	STATUS,2
                                    1- 1900     	MGOTO	_00548_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
     0094 212C                      1- 1901     	MOVIA	0x2c
     0095 04rr                      1- 1902     	SUBAR	_R_AIN2_DATA,W
     0096                           1- 1903     _00548_DS_:
     0096 0803                      1- 1904     	BTRSS	STATUS,0
                                    1- 1905     	MGOTO	_00516_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1906     	.line	635, "main.c"; 	batValue = 50+(R_AIN2_DATA-300)/2;
     0098 21D4                      1- 1907     	MOVIA	0xd4
                                    1- 1908     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 03rr                      1- 1909     	ADDAR	_R_AIN2_DATA,W
                                    1- 1910     	BANKSEL	r0x1059
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 00rr                      1- 1911     	MOVAR	r0x1059
     009D 21FE                      1- 1912     	MOVIA	0xfe
                                    1- 1913     	BANKSEL	r0x105B
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 1914     	MOVAR	r0x105B
                                    1- 1915     	BANKSEL	_R_AIN2_DATA
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 01rr                      1- 1916     	MOVR	(_R_AIN2_DATA + 1),W
     00A2 0C03                      1- 1917     	BTRSC	STATUS,0
     00A3 05rr                      1- 1918     	INCR	(_R_AIN2_DATA + 1),W
     00A4 0D03                      1- 1919     	BTRSC	STATUS,2
                                    1- 1920     	MGOTO	_00008_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1921     	BANKSEL	r0x105B
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 03rr                      1- 1922     	ADDAR	r0x105B,F
                                    1- 1923     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00A8                           1- 1924     _00008_DS_:
     00A8 1C03                      1- 1925     	BCR	STATUS,0
                                    1- 1926     	BANKSEL	r0x105B
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 13rr                      1- 1927     	RRR	r0x105B,W
                                    1- 1928     	BANKSEL	r0x105D
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1- 1929     	MOVAR	r0x105D
                                    1- 1930     	BANKSEL	r0x1059
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 13rr                      1- 1931     	RRR	r0x1059,W
                                    1- 1932     	BANKSEL	r0x105C
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1933     	MOVAR	r0x105C
                                    1- 1934     	BANKSEL	r0x1059
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 1935     	MOVAR	r0x1059
     00B3 2132                      1- 1936     	MOVIA	0x32
     00B4 03rr                      1- 1937     	ADDAR	r0x1059,W
                                    1- 1938     	BANKSEL	_batValue
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 1939     	MOVAR	_batValue
                                    1- 1940     	MGOTO	_00521_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1941     ;;unsigned compare: left < lit (0xC8=200), size=2
     00B8                           1- 1942     _00516_DS_:
                                    1- 1943     	.line	638, "main.c"; 	else if(R_AIN2_DATA >= 200)
     00B8 2100                      1- 1944     	MOVIA	0x00
                                    1- 1945     	BANKSEL	_R_AIN2_DATA
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 04rr                      1- 1946     	SUBAR	(_R_AIN2_DATA + 1),W
     00BB 0903                      1- 1947     	BTRSS	STATUS,2
                                    1- 1948     	MGOTO	_00549_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
     00BD 21C8                      1- 1949     	MOVIA	0xc8
     00BE 04rr                      1- 1950     	SUBAR	_R_AIN2_DATA,W
     00BF                           1- 1951     _00549_DS_:
     00BF 0803                      1- 1952     	BTRSS	STATUS,0
                                    1- 1953     	MGOTO	_00513_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1954     	.line	640, "main.c"; 	batValue = 25+(R_AIN2_DATA-200)/4;
     00C1 2138                      1- 1955     	MOVIA	0x38
                                    1- 1956     	BANKSEL	_R_AIN2_DATA
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 03rr                      1- 1957     	ADDAR	_R_AIN2_DATA,W
                                    1- 1958     	BANKSEL	r0x1059
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 00rr                      1- 1959     	MOVAR	r0x1059
     00C6 21FF                      1- 1960     	MOVIA	0xff
                                    1- 1961     	BANKSEL	r0x105C
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 1962     	MOVAR	r0x105C
                                    1- 1963     	BANKSEL	_R_AIN2_DATA
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 1964     	MOVR	(_R_AIN2_DATA + 1),W
     00CB 0C03                      1- 1965     	BTRSC	STATUS,0
     00CC 05rr                      1- 1966     	INCR	(_R_AIN2_DATA + 1),W
     00CD 0D03                      1- 1967     	BTRSC	STATUS,2
                                    1- 1968     	MGOTO	_00009_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1969     	BANKSEL	r0x105C
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 03rr                      1- 1970     	ADDAR	r0x105C,F
                                    1- 1971     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00D1                           1- 1972     _00009_DS_:
     00D1 1C03                      1- 1973     	BCR	STATUS,0
                                    1- 1974     	BANKSEL	r0x105C
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 13rr                      1- 1975     	RRR	r0x105C,W
                                    1- 1976     	BANKSEL	r0x105E
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 00rr                      1- 1977     	MOVAR	r0x105E
                                    1- 1978     	BANKSEL	r0x1059
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 13rr                      1- 1979     	RRR	r0x1059,W
                                    1- 1980     	BANKSEL	r0x105D
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 00rr                      1- 1981     	MOVAR	r0x105D
                                    1- 1982     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00DA 1C03                      1- 1983     	BCR	STATUS,0
                                    1- 1984     	BANKSEL	r0x105E
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 13rr                      1- 1985     	RRR	r0x105E,F
                                    1- 1986     	BANKSEL	r0x105D
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 13rr                      1- 1987     	RRR	r0x105D,F
     00DF 01rr                      1- 1988     	MOVR	r0x105D,W
                                    1- 1989     	BANKSEL	r0x1059
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 00rr                      1- 1990     	MOVAR	r0x1059
     00E2 2119                      1- 1991     	MOVIA	0x19
     00E3 03rr                      1- 1992     	ADDAR	r0x1059,W
                                    1- 1993     	BANKSEL	_batValue
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 1994     	MOVAR	_batValue
                                    1- 1995     	MGOTO	_00521_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1996     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00E7                           1- 1997     _00513_DS_:
                                    1- 1998     	.line	644, "main.c"; 	batValue = R_AIN2_DATA/8;
     00E7 1C03                      1- 1999     	BCR	STATUS,0
                                    1- 2000     	BANKSEL	_R_AIN2_DATA
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 13rr                      1- 2001     	RRR	(_R_AIN2_DATA + 1),W
                                    1- 2002     	BANKSEL	r0x105D
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 00rr                      1- 2003     	MOVAR	r0x105D
                                    1- 2004     	BANKSEL	_R_AIN2_DATA
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 13rr                      1- 2005     	RRR	_R_AIN2_DATA,W
                                    1- 2006     	BANKSEL	r0x1059
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 00rr                      1- 2007     	MOVAR	r0x1059
                                    1- 2008     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00F0 1C03                      1- 2009     	BCR	STATUS,0
                                    1- 2010     	BANKSEL	r0x105D
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 13rr                      1- 2011     	RRR	r0x105D,F
                                    1- 2012     	BANKSEL	r0x1059
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 13rr                      1- 2013     	RRR	r0x1059,F
                                    1- 2014     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00F5 1C03                      1- 2015     	BCR	STATUS,0
                                    1- 2016     	BANKSEL	r0x105D
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 13rr                      1- 2017     	RRR	r0x105D,F
                                    1- 2018     	BANKSEL	r0x1059
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 13rr                      1- 2019     	RRR	r0x1059,F
     00FA 01rr                      1- 2020     	MOVR	r0x1059,W
                                    1- 2021     	BANKSEL	_batValue
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 00rr                      1- 2022     	MOVAR	_batValue
     00FD                           1- 2023     _00521_DS_:
                                    1- 2024     	.line	646, "main.c"; 	}
                                    1- 2025     	RETURN	
     00FD 0010                      3-   40 m1      ret
                                    1- 2026     ; exit point of _checkBatAD
                                    1- 2028     ;***
                                    1- 2029     ;  pBlock Stats: dbName = C
                                    1- 2030     ;***
                                    1- 2031     ;has an exit
                                    1- 2032     ;functions called:
                                    1- 2033     ;   _delay
                                    1- 2034     ;   _delay
                                    1- 2035     ;1 compiler assigned register :
                                    1- 2036     ;   STK00
                                    1- 2037     ;; Starting pCode block
                                    1- 2038     .segment "code"; module=main, function=_initAD
     0000                           1- 2040     _initAD:
                                    1- 2041     ; 2 exit points
                                    1- 2042     	.line	580, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2043     	MOVIA	0x84
     0001 00rr                      1- 2044     	MOVAR	_ADMD
                                    1- 2045     	.line	585, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2046     	CLRR	_ADVREFH
                                    1- 2047     	.line	590, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2048     	MOVIA	0x10
     0004 00rr                      1- 2049     	MOVAR	_ADR
                                    1- 2050     	.line	592, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2051     	MOVIA	0x03
     0006 00rr                      1- 2052     	MOVAR	_ADCR
                                    1- 2053     	.line	595, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2054     	BSR	_ADMDbits,4
                                    1- 2055     	.line	596, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2056     	MOVIA	0x64
     0009 00rr                      1- 2057     	MOVAR	STK00
     000A 2100                      1- 2058     	MOVIA	0x00
                                    1- 2059     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2060     	.line	599, "main.c"; 	}
                                    1- 2061     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2062     ; exit point of _initAD
                                    1- 2064     ;***
                                    1- 2065     ;  pBlock Stats: dbName = C
                                    1- 2066     ;***
                                    1- 2067     ;has an exit
                                    1- 2068     ;1 compiler assigned register :
                                    1- 2069     ;   r0x105F
                                    1- 2070     ;; Starting pCode block
                                    1- 2071     .segment "code"; module=main, function=_keyRead
                                    1- 2073     ;local variable name mapping:
     0000                           1- 2075     _keyRead:
                                    1- 2076     ; 2 exit points
                                    1- 2077     	.line	543, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2078     	BANKSEL	r0x105F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2079     	MOVAR	r0x105F
                                    1- 2080     	.line	545, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2081     	MOVR	r0x105F,W
     0003 0D03                      1- 2082     	BTRSC	STATUS,2
                                    1- 2083     	MGOTO	_00492_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2084     	.line	547, "main.c"; 	keyCount++;
                                    1- 2085     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2086     	INCR	_keyCount,F
                                    1- 2087     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2088     	.line	548, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2089     	MOVIA	0xc8
     0008 04rr                      1- 2090     	SUBAR	_keyCount,W
     0009 0803                      1- 2091     	BTRSS	STATUS,0
                                    1- 2092     	MGOTO	_00493_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2093     	.line	550, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2094     	MOVIA	0xc8
     000C 00rr                      1- 2095     	MOVAR	_keyCount
                                    1- 2096     	.line	551, "main.c"; 	if(!longPressFlag)
                                    1- 2097     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2098     	BTRSC	_Status,1
                                    1- 2099     	MGOTO	_00493_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2100     	.line	553, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2101     	BSR	_Status,1
                                    1- 2102     	.line	554, "main.c"; 	return 2;
     0011 2102                      1- 2103     	MOVIA	0x02
                                    1- 2104     	MGOTO	_00494_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2105     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 2106     _00492_DS_:
                                    1- 2107     	.line	560, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 2108     	MOVIA	0xc8
                                    1- 2109     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2110     	SUBAR	_keyCount,W
     0016 0803                      1- 2111     	BTRSS	STATUS,0
                                    1- 2112     	MGOTO	_00489_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2113     	.line	562, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2114     	CLRR	_keyCount
                                    1- 2115     	.line	563, "main.c"; 	longPressFlag = 0;
                                    1- 2116     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2117     	BCR	_Status,1
                                    1- 2118     	.line	564, "main.c"; 	return	0;
     001B 2100                      1- 2119     	MOVIA	0x00
                                    1- 2120     	MGOTO	_00494_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2121     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 2122     _00489_DS_:
                                    1- 2123     	.line	566, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 2124     	MOVIA	0x08
                                    1- 2125     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2126     	SUBAR	_keyCount,W
     0020 0803                      1- 2127     	BTRSS	STATUS,0
                                    1- 2128     	MGOTO	_00490_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2129     	.line	568, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2130     	CLRR	_keyCount
                                    1- 2131     	.line	569, "main.c"; 	return	1;
     0023 2101                      1- 2132     	MOVIA	0x01
                                    1- 2133     	MGOTO	_00494_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2134     _00490_DS_:
                                    1- 2135     	.line	571, "main.c"; 	keyCount = 0;
                                    1- 2136     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2137     	CLRR	_keyCount
     0027                           1- 2138     _00493_DS_:
                                    1- 2139     	.line	573, "main.c"; 	return 0;
     0027 2100                      1- 2140     	MOVIA	0x00
     0028                           1- 2141     _00494_DS_:
                                    1- 2142     	.line	574, "main.c"; 	}
                                    1- 2143     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2144     ; exit point of _keyRead
                                    1- 2146     ;***
                                    1- 2147     ;  pBlock Stats: dbName = C
                                    1- 2148     ;***
                                    1- 2149     ;has an exit
                                    1- 2150     ;functions called:
                                    1- 2151     ;   _pwmStop
                                    1- 2152     ;   _pwm1Stop
                                    1- 2153     ;   _pwmStop
                                    1- 2154     ;   _pwm1Stop
                                    1- 2155     ;; Starting pCode block
                                    1- 2156     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2158     _gotoSleep:
                                    1- 2159     ; 2 exit points
                                    1- 2160     	.line	518, "main.c"; 	count5s = 0;
                                    1- 2161     	BANKSEL	_count5s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2162     	CLRR	_count5s
     0002 02rr                      1- 2163     	CLRR	(_count5s + 1)
                                    1- 2164     	.line	519, "main.c"; 	showFlag = 0;
                                    1- 2165     	BANKSEL	_showFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2166     	CLRR	_showFlag
                                    1- 2167     	.line	520, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2168     	CLRR	_PORTB
                                    1- 2169     	.line	521, "main.c"; 	PORTA = 0x00;
                                    1- 2170     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2171     	CLRR	_PORTA
                                    1- 2172     	.line	522, "main.c"; 	sleepTime = 0;
                                    1- 2173     	BANKSEL	_sleepTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2174     	CLRR	_sleepTime
     000A 02rr                      1- 2175     	CLRR	(_sleepTime + 1)
                                    1- 2176     	.line	524, "main.c"; 	pwmStop();
                                    1- 2177     	MCALL	_pwmStop
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2178     	.line	525, "main.c"; 	pwm1Stop();
                                    1- 2179     	MCALL	_pwm1Stop
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2180     	.line	526, "main.c"; 	workStep = 0;
                                    1- 2181     	BANKSEL	_workStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2182     	CLRR	_workStep
                                    1- 2183     	.line	527, "main.c"; 	AWUCON = 0x28;
     000F 2128                      1- 2184     	MOVIA	0x28
     0010 00rr                      1- 2185     	MOVAR	_AWUCON
                                    1- 2186     	.line	528, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0011 210B                      1- 2187     	MOVIA	0x0b
     0012 00rr                      1- 2188     	MOVAR	_INTE
                                    1- 2189     	.line	529, "main.c"; 	PCON =  C_LVR_En ;	
     0013 2108                      1- 2190     	MOVIA	0x08
     0014 00rr                      1- 2191     	MOVAR	_PCON
                                    1- 2192     	.line	530, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 2193     	CLRR	_INTF
                                    1- 2194     	.line	531, "main.c"; 	CLRWDT();
     0016 0002                      1- 2195     	clrwdt
                                    1- 2196     	.line	532, "main.c"; 	ENI();
     0017 0004                      1- 2197     	ENI
                                    1- 2198     	.line	533, "main.c"; 	SLEEP();
     0018 0001                      1- 2199     	sleep
                                    1- 2200     	.line	534, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 2201     	CLRR	_AWUCON
                                    1- 2202     	.line	535, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001A 2101                      1- 2203     	MOVIA	0x01
     001B 00rr                      1- 2204     	MOVAR	_INTE
                                    1- 2205     	.line	536, "main.c"; 	INTF = 0;
     001C 02rr                      1- 2206     	CLRR	_INTF
                                    1- 2207     	.line	538, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     001D 21A8                      1- 2208     	MOVIA	0xa8
     001E 00rr                      1- 2209     	MOVAR	_PCON
                                    1- 2210     	.line	540, "main.c"; 	}
                                    1- 2211     	RETURN	
     001F 0010                      3-   40 m1      ret
                                    1- 2212     ; exit point of _gotoSleep
                                    1- 2214     ;***
                                    1- 2215     ;  pBlock Stats: dbName = C
                                    1- 2216     ;***
                                    1- 2217     ;has an exit
                                    1- 2218     ;; Starting pCode block
                                    1- 2219     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2221     _pwmStop:
                                    1- 2222     ; 2 exit points
                                    1- 2223     	.line	512, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2224     	CLRA	
     0001 00rr                      1- 2225     	SFUN	_T2CR1
                                    1- 2226     	.line	513, "main.c"; 	}
                                    1- 2227     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2228     ; exit point of _pwmStop
                                    1- 2230     ;***
                                    1- 2231     ;  pBlock Stats: dbName = C
                                    1- 2232     ;***
                                    1- 2233     ;has an exit
                                    1- 2234     ;1 compiler assigned register :
                                    1- 2235     ;   r0x1060
                                    1- 2236     ;; Starting pCode block
                                    1- 2237     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2239     _pwmInit:
                                    1- 2240     ; 2 exit points
                                    1- 2241     	.line	500, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2242     	SFUNR	_T2CR1
                                    1- 2243     	BANKSEL	r0x1060
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2244     	MOVAR	r0x1060
     0003 0Frr                      1- 2245     	BTRSC	r0x1060,7
                                    1- 2246     	.line	501, "main.c"; 	return;
                                    1- 2247     	MGOTO	_00469_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2248     	.line	502, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2249     	CLRR	_TMRH
                                    1- 2250     	.line	503, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2251     	MOVIA	0x64
     0007 00rr                      1- 2252     	SFUN	_TMR2
                                    1- 2253     	.line	506, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2254     	MOVIA	0x01
     0009 00rr                      1- 2255     	SFUN	_T2CR2
                                    1- 2256     	.line	507, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2257     	MOVIA	0x83
     000B 00rr                      1- 2258     	SFUN	_T2CR1
     000C                           1- 2259     _00469_DS_:
                                    1- 2260     	.line	508, "main.c"; 	}
                                    1- 2261     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2262     ; exit point of _pwmInit
                                    1- 2264     ;***
                                    1- 2265     ;  pBlock Stats: dbName = C
                                    1- 2266     ;***
                                    1- 2267     ;has an exit
                                    1- 2268     ;; Starting pCode block
                                    1- 2269     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2271     _pwm1Stop:
                                    1- 2272     ; 2 exit points
                                    1- 2273     	.line	493, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2274     	CLRA	
     0001 00rr                      1- 2275     	SFUN	_T1CR1
                                    1- 2276     	.line	494, "main.c"; 	}
                                    1- 2277     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2278     ; exit point of _pwm1Stop
                                    1- 2280     ;***
                                    1- 2281     ;  pBlock Stats: dbName = C
                                    1- 2282     ;***
                                    1- 2283     ;has an exit
                                    1- 2284     ;1 compiler assigned register :
                                    1- 2285     ;   r0x1061
                                    1- 2286     ;; Starting pCode block
                                    1- 2287     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2289     _pwm1Init:
                                    1- 2290     ; 2 exit points
                                    1- 2291     	.line	481, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2292     	SFUNR	_T1CR1
                                    1- 2293     	BANKSEL	r0x1061
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2294     	MOVAR	r0x1061
     0003 0Frr                      1- 2295     	BTRSC	r0x1061,7
                                    1- 2296     	.line	482, "main.c"; 	return;
                                    1- 2297     	MGOTO	_00458_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2298     	.line	483, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2299     	CLRR	_TMRH
                                    1- 2300     	.line	484, "main.c"; 	TMR1 = 24;							//频率为110K
     0006 2118                      1- 2301     	MOVIA	0x18
     0007 00rr                      1- 2302     	SFUN	_TMR1
                                    1- 2303     	.line	487, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2304     	CLRA	
     0009 00rr                      1- 2305     	SFUN	_T1CR2
                                    1- 2306     	.line	488, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2307     	MOVIA	0x83
     000B 00rr                      1- 2308     	SFUN	_T1CR1
     000C                           1- 2309     _00458_DS_:
                                    1- 2310     	.line	489, "main.c"; 	}
                                    1- 2311     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2312     ; exit point of _pwm1Init
                                    1- 2314     ;***
                                    1- 2315     ;  pBlock Stats: dbName = C
                                    1- 2316     ;***
                                    1- 2317     ;has an exit
                                    1- 2318     ;functions called:
                                    1- 2319     ;   _pwmStop
                                    1- 2320     ;   _pwmStop
                                    1- 2321     ;; Starting pCode block
                                    1- 2322     .segment "code"; module=main, function=_powerOff
     0000                           1- 2324     _powerOff:
                                    1- 2325     ; 2 exit points
                                    1- 2326     	.line	474, "main.c"; 	workStep = 0;
                                    1- 2327     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2328     	CLRR	_workStep
                                    1- 2329     	.line	475, "main.c"; 	pwmStop();
                                    1- 2330     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2331     	.line	476, "main.c"; 	}
                                    1- 2332     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2333     ; exit point of _powerOff
                                    1- 2335     ;***
                                    1- 2336     ;  pBlock Stats: dbName = C
                                    1- 2337     ;***
                                    1- 2338     ;has an exit
                                    1- 2339     ;; Starting pCode block
                                    1- 2340     .segment "code"; module=main, function=_initSys
     0000                           1- 2342     _initSys:
                                    1- 2343     ; 2 exit points
                                    1- 2344     	.line	446, "main.c"; 	DISI();
     0000 0013                      1- 2345     	DISI
                                    1- 2346     	.line	447, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2347     	MOVIA	0x3e
     0002 000r                      1- 2348     	IOST	_IOSTA
                                    1- 2349     	.line	448, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2350     	CLRA	
     0004 000r                      1- 2351     	IOST	_IOSTB
                                    1- 2352     	.line	449, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2353     	CLRR	_PORTB
                                    1- 2354     	.line	450, "main.c"; 	PORTA = 0x00;
                                    1- 2355     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2356     	CLRR	_PORTA
                                    1- 2357     	.line	451, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2358     	MOVIA	0xff
     0009 000r                      1- 2359     	IOST	_APHCON
                                    1- 2360     	.line	452, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2361     	MOVAR	_BPHCON
                                    1- 2362     	.line	453, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2363     	MOVAR	_ABPLCON
                                    1- 2364     	.line	455, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2365     	MOVIA	0x01
     000D 00rr                      1- 2366     	MOVAR	_INTE
                                    1- 2367     	.line	457, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2368     	CLRA	
     000F 000r                      1- 2369     	IOST	_PCON1
                                    1- 2370     	.line	459, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2371     	MOVIA	0x37
     0011 00rr                      1- 2372     	MOVAR	_TMR0
                                    1- 2373     	.line	460, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2374     	MOVIA	0x01
     0013 0003                      1- 2375     	T0MD	
                                    1- 2376     	.line	462, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2377     	IOST	_PCON1
                                    1- 2378     	.line	465, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2379     	MOVIA	0x88
     0016 00rr                      1- 2380     	MOVAR	_PCON
                                    1- 2381     	.line	468, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2382     	MOVIA	0x01
     0018 000r                      1- 2383     	IOST	_PCON1
                                    1- 2384     	.line	469, "main.c"; 	ENI();
     0019 0004                      1- 2385     	ENI
                                    1- 2386     	.line	470, "main.c"; 	}
                                    1- 2387     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2388     ; exit point of _initSys
                                    1- 2390     ;***
                                    1- 2391     ;  pBlock Stats: dbName = C
                                    1- 2392     ;***
                                    1- 2393     ;has an exit
                                    1- 2394     ;functions called:
                                    1- 2395     ;   _keyRead
                                    1- 2396     ;   _pwmInit
                                    1- 2397     ;   _powerOff
                                    1- 2398     ;   _pwmInit
                                    1- 2399     ;   _keyRead
                                    1- 2400     ;   _pwmInit
                                    1- 2401     ;   _powerOff
                                    1- 2402     ;   _pwmInit
                                    1- 2403     ;1 compiler assigned register :
                                    1- 2404     ;   r0x1062
                                    1- 2405     ;; Starting pCode block
                                    1- 2406     .segment "code"; module=main, function=_keyCtr
                                    1- 2408     ;local variable name mapping:
     0000                           1- 2410     _keyCtr:
                                    1- 2411     ; 2 exit points
                                    1- 2412     	.line	380, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2413     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2414     	COMR	_PORTA,W
                                    1- 2415     	BANKSEL	r0x1062
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2416     	MOVAR	r0x1062
     0004 2120                      1- 2417     	MOVIA	0x20
     0005 10rr                      1- 2418     	ANDAR	r0x1062,F
     0006 01rr                      1- 2419     	MOVR	r0x1062,W
                                    1- 2420     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2421     	BANKSEL	r0x1062
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2422     	MOVAR	r0x1062
                                    1- 2423     	.line	381, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2424     	XORIA	0x01
     000B 0903                      1- 2425     	BTRSS	STATUS,2
                                    1- 2426     	MGOTO	_00441_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2427     	.line	383, "main.c"; 	count500ms = 0;
                                    1- 2428     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2429     	CLRR	_count500ms
                                    1- 2430     	.line	384, "main.c"; 	ledLightTime = 0;
                                    1- 2431     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2432     	CLRR	_ledLightTime
                                    1- 2433     	.line	385, "main.c"; 	count5S = 0;
                                    1- 2434     	BANKSEL	_count5S
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2435     	CLRR	_count5S
     0013 02rr                      1- 2436     	CLRR	(_count5S + 1)
                                    1- 2437     	.line	386, "main.c"; 	if(workStep == 0)
                                    1- 2438     	BANKSEL	_workStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2439     	MOVR	_workStep,W
     0016 0903                      1- 2440     	BTRSS	STATUS,2
                                    1- 2441     	MGOTO	_00411_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2442     	.line	388, "main.c"; 	count1s = 0;
                                    1- 2443     	BANKSEL	_count1s
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2444     	CLRR	_count1s
                                    1- 2445     	.line	389, "main.c"; 	ledLightTime = 3;
     001A 2103                      1- 2446     	MOVIA	0x03
                                    1- 2447     	BANKSEL	_ledLightTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2448     	MOVAR	_ledLightTime
                                    1- 2449     	.line	390, "main.c"; 	if(preBatValue < batValue)
                                    1- 2450     	BANKSEL	_batValue
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2451     	MOVR	_batValue,W
                                    1- 2452     	BANKSEL	_preBatValue
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2453     	SUBAR	_preBatValue,W
     0021 0C03                      1- 2454     	BTRSC	STATUS,0
                                    1- 2455     	MGOTO	_00409_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2456     	.line	391, "main.c"; 	preBatValue = batValue;
                                    1- 2457     	BANKSEL	_batValue
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 2458     	MOVR	_batValue,W
                                    1- 2459     	BANKSEL	_preBatValue
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2460     	MOVAR	_preBatValue
     0027                           1- 2461     _00409_DS_:
                                    1- 2462     	.line	392, "main.c"; 	showFlag = 1;
     0027 2101                      1- 2463     	MOVIA	0x01
                                    1- 2464     	BANKSEL	_showFlag
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2465     	MOVAR	_showFlag
                                    1- 2466     	.line	393, "main.c"; 	return;
                                    1- 2467     	MGOTO	_00443_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 2468     _00411_DS_:
                                    1- 2469     	.line	395, "main.c"; 	if(++workStep > 6)
                                    1- 2470     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 05rr                      1- 2471     	INCR	_workStep,F
                                    1- 2472     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2473     ;;unsigned compare: left >= lit (0x7=7), size=1
     002D 2107                      1- 2474     	MOVIA	0x07
     002E 04rr                      1- 2475     	SUBAR	_workStep,W
     002F 0803                      1- 2476     	BTRSS	STATUS,0
                                    1- 2477     	MGOTO	_00413_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2478     	.line	396, "main.c"; 	workStep = 1;
     0031 2101                      1- 2479     	MOVIA	0x01
     0032 00rr                      1- 2480     	MOVAR	_workStep
     0033                           1- 2481     _00413_DS_:
                                    1- 2482     	.line	397, "main.c"; 	if(workStep == 1)
                                    1- 2483     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2484     	MOVR	_workStep,W
     0035 2401                      1- 2485     	XORIA	0x01
     0036 0903                      1- 2486     	BTRSS	STATUS,2
                                    1- 2487     	MGOTO	_00429_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2488     	.line	398, "main.c"; 	maxDuty = 40;
     0038 2128                      1- 2489     	MOVIA	0x28
                                    1- 2490     	BANKSEL	_maxDuty
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 2491     	MOVAR	_maxDuty
                                    1- 2492     	MGOTO	_00430_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 2493     _00429_DS_:
                                    1- 2494     	.line	399, "main.c"; 	else if(workStep == 2)
                                    1- 2495     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2496     	MOVR	_workStep,W
     003E 2402                      1- 2497     	XORIA	0x02
     003F 0903                      1- 2498     	BTRSS	STATUS,2
                                    1- 2499     	MGOTO	_00426_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2500     	.line	400, "main.c"; 	maxDuty = 42;
     0041 212A                      1- 2501     	MOVIA	0x2a
                                    1- 2502     	BANKSEL	_maxDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 2503     	MOVAR	_maxDuty
                                    1- 2504     	MGOTO	_00430_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 2505     _00426_DS_:
                                    1- 2506     	.line	401, "main.c"; 	else if(workStep == 3)
                                    1- 2507     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 2508     	MOVR	_workStep,W
     0047 2403                      1- 2509     	XORIA	0x03
     0048 0903                      1- 2510     	BTRSS	STATUS,2
                                    1- 2511     	MGOTO	_00423_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2512     	.line	402, "main.c"; 	maxDuty = 44;
     004A 212C                      1- 2513     	MOVIA	0x2c
                                    1- 2514     	BANKSEL	_maxDuty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2515     	MOVAR	_maxDuty
                                    1- 2516     	MGOTO	_00430_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2517     _00423_DS_:
                                    1- 2518     	.line	403, "main.c"; 	else if(workStep == 4)
                                    1- 2519     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2520     	MOVR	_workStep,W
     0050 2404                      1- 2521     	XORIA	0x04
     0051 0903                      1- 2522     	BTRSS	STATUS,2
                                    1- 2523     	MGOTO	_00420_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2524     	.line	404, "main.c"; 	maxDuty = 46;
     0053 212E                      1- 2525     	MOVIA	0x2e
                                    1- 2526     	BANKSEL	_maxDuty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 2527     	MOVAR	_maxDuty
                                    1- 2528     	MGOTO	_00430_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 2529     _00420_DS_:
                                    1- 2530     	.line	405, "main.c"; 	else if(workStep == 5)
                                    1- 2531     	BANKSEL	_workStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 2532     	MOVR	_workStep,W
     0059 2405                      1- 2533     	XORIA	0x05
     005A 0903                      1- 2534     	BTRSS	STATUS,2
                                    1- 2535     	MGOTO	_00417_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2536     	.line	406, "main.c"; 	maxDuty = 48;
     005C 2130                      1- 2537     	MOVIA	0x30
                                    1- 2538     	BANKSEL	_maxDuty
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 2539     	MOVAR	_maxDuty
                                    1- 2540     	MGOTO	_00430_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 2541     _00417_DS_:
                                    1- 2542     	.line	407, "main.c"; 	else if(workStep == 6)
                                    1- 2543     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2544     	MOVR	_workStep,W
     0062 2406                      1- 2545     	XORIA	0x06
     0063 0903                      1- 2546     	BTRSS	STATUS,2
                                    1- 2547     	MGOTO	_00430_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2548     	.line	408, "main.c"; 	maxDuty = 50;
     0065 2132                      1- 2549     	MOVIA	0x32
                                    1- 2550     	BANKSEL	_maxDuty
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 2551     	MOVAR	_maxDuty
     0068                           1- 2552     _00430_DS_:
                                    1- 2553     	.line	409, "main.c"; 	if(workStep > 0)
                                    1- 2554     	BANKSEL	_workStep
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 2555     	MOVR	_workStep,W
     006A 0D03                      1- 2556     	BTRSC	STATUS,2
                                    1- 2557     	MGOTO	_00443_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2558     	.line	411, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2559     	BANKSEL	_maxDuty
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 2560     	MOVR	_maxDuty,W
     006E 00rr                      1- 2561     	SFUN	_PWM2DUTY
                                    1- 2562     	.line	412, "main.c"; 	pwmInit();
                                    1- 2563     	MCALL	_pwmInit
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2564     	MGOTO	_00443_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 2565     _00441_DS_:
                                    1- 2566     	.line	415, "main.c"; 	else if(kclick == 2)
                                    1- 2567     	BANKSEL	r0x1062
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 01rr                      1- 2568     	MOVR	r0x1062,W
     0073 2402                      1- 2569     	XORIA	0x02
     0074 0903                      1- 2570     	BTRSS	STATUS,2
                                    1- 2571     	MGOTO	_00443_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2572     	.line	417, "main.c"; 	if(workStep > 0)
                                    1- 2573     	BANKSEL	_workStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 2574     	MOVR	_workStep,W
     0078 0D03                      1- 2575     	BTRSC	STATUS,2
                                    1- 2576     	MGOTO	_00436_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2577     	.line	419, "main.c"; 	workStep = 0;
     007A 02rr                      1- 2578     	CLRR	_workStep
                                    1- 2579     	.line	420, "main.c"; 	powerOff();
                                    1- 2580     	MCALL	_powerOff
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2581     	.line	421, "main.c"; 	showFlag = 0;
                                    1- 2582     	BANKSEL	_showFlag
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 02rr                      1- 2583     	CLRR	_showFlag
                                    1- 2584     	MGOTO	_00443_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F                           1- 2585     _00436_DS_:
                                    1- 2586     	.line	425, "main.c"; 	if(pwStep == 10)
                                    1- 2587     	BANKSEL	_pwStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 2588     	MOVR	_pwStep,W
     0081 240A                      1- 2589     	XORIA	0x0a
     0082 0903                      1- 2590     	BTRSS	STATUS,2
                                    1- 2591     	MGOTO	_00434_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2592     	.line	427, "main.c"; 	sleepTime = 0;
                                    1- 2593     	BANKSEL	_sleepTime
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 02rr                      1- 2594     	CLRR	_sleepTime
     0086 02rr                      1- 2595     	CLRR	(_sleepTime + 1)
                                    1- 2596     	.line	428, "main.c"; 	return;
                                    1- 2597     	MGOTO	_00443_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088                           1- 2598     _00434_DS_:
                                    1- 2599     	.line	430, "main.c"; 	workStep = 1;
     0088 2101                      1- 2600     	MOVIA	0x01
                                    1- 2601     	BANKSEL	_workStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 2602     	MOVAR	_workStep
                                    1- 2603     	.line	431, "main.c"; 	PWM2DUTY = 70;
     008B 2146                      1- 2604     	MOVIA	0x46
     008C 00rr                      1- 2605     	SFUN	_PWM2DUTY
                                    1- 2606     	.line	432, "main.c"; 	currentDuty = 70;
                                    1- 2607     	BANKSEL	_currentDuty
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 2608     	MOVAR	_currentDuty
                                    1- 2609     	.line	433, "main.c"; 	maxDuty = 40;
     008F 2128                      1- 2610     	MOVIA	0x28
                                    1- 2611     	BANKSEL	_maxDuty
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 00rr                      1- 2612     	MOVAR	_maxDuty
                                    1- 2613     	.line	434, "main.c"; 	pwmInit();
                                    1- 2614     	MCALL	_pwmInit
     0092 2rrr                      3-   66 m1      LCALL rom_address
     0093                           1- 2615     _00443_DS_:
                                    1- 2616     	.line	439, "main.c"; 	}
                                    1- 2617     	RETURN	
     0093 0010                      3-   40 m1      ret
                                    1- 2618     ; exit point of _keyCtr
                                    1- 2620     ;***
                                    1- 2621     ;  pBlock Stats: dbName = C
                                    1- 2622     ;***
                                    1- 2623     ;has an exit
                                    1- 2624     ;functions called:
                                    1- 2625     ;   _setInput
                                    1- 2626     ;   _showKeyLed
                                    1- 2627     ;   __gptrget1
                                    1- 2628     ;   _showNubShiwei
                                    1- 2629     ;   __gptrget1
                                    1- 2630     ;   _showNubGewei
                                    1- 2631     ;   _setInput
                                    1- 2632     ;   _showKeyLed
                                    1- 2633     ;   __gptrget1
                                    1- 2634     ;   _showNubShiwei
                                    1- 2635     ;   __gptrget1
                                    1- 2636     ;   _showNubGewei
                                    1- 2637     ;5 compiler assigned registers:
                                    1- 2638     ;   r0x1063
                                    1- 2639     ;   r0x1064
                                    1- 2640     ;   STK01
                                    1- 2641     ;   STK00
                                    1- 2642     ;   r0x1065
                                    1- 2643     ;; Starting pCode block
                                    1- 2644     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2646     _refreshNub:
                                    1- 2647     ; 2 exit points
                                    1- 2648     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2649     	.line	330, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2650     	MOVIA	0x03
                                    1- 2651     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2652     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2653     	BTRSS	STATUS,2
                                    1- 2654     	MGOTO	_00400_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2655     	MOVIA	0x84
     0006 04rr                      1- 2656     	SUBAR	_count900s,W
     0007                           1- 2657     _00400_DS_:
     0007 0803                      1- 2658     	BTRSS	STATUS,0
                                    1- 2659     	MGOTO	_00360_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2660     	.line	332, "main.c"; 	setInput();
                                    1- 2661     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2662     	.line	333, "main.c"; 	return;
                                    1- 2663     	MGOTO	_00377_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2664     _00360_DS_:
                                    1- 2665     	.line	335, "main.c"; 	if(tempshiweiNum != shiweiNum || tempgeweiNum != geweiNum)
                                    1- 2666     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2667     	MOVR	_shiweiNum,W
                                    1- 2668     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 12rr                      1- 2669     	XORAR	_tempshiweiNum,W
     000F 0903                      1- 2670     	BTRSS	STATUS,2
                                    1- 2671     	MGOTO	_00368_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2672     	BANKSEL	_geweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 2673     	MOVR	_geweiNum,W
                                    1- 2674     	BANKSEL	_tempgeweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 12rr                      1- 2675     	XORAR	_tempgeweiNum,W
     0015 0D03                      1- 2676     	BTRSC	STATUS,2
                                    1- 2677     	MGOTO	_00369_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1- 2678     _00368_DS_:
                                    1- 2679     	.line	338, "main.c"; 	if(workStep == 0)
                                    1- 2680     	BANKSEL	_workStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2681     	MOVR	_workStep,W
     0019 0903                      1- 2682     	BTRSS	STATUS,2
                                    1- 2683     	MGOTO	_00366_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2684     	.line	340, "main.c"; 	if(++refreshCount >= 20)
                                    1- 2685     	BANKSEL	_refreshCount
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 05rr                      1- 2686     	INCR	_refreshCount,F
     001D 0D03                      1- 2687     	BTRSC	STATUS,2
     001E 05rr                      1- 2688     	INCR	(_refreshCount + 1),F
                                    1- 2689     ;;unsigned compare: left < lit (0x14=20), size=2
     001F 2100                      1- 2690     	MOVIA	0x00
     0020 04rr                      1- 2691     	SUBAR	(_refreshCount + 1),W
     0021 0903                      1- 2692     	BTRSS	STATUS,2
                                    1- 2693     	MGOTO	_00402_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023 2114                      1- 2694     	MOVIA	0x14
     0024 04rr                      1- 2695     	SUBAR	_refreshCount,W
     0025                           1- 2696     _00402_DS_:
     0025 0803                      1- 2697     	BTRSS	STATUS,0
                                    1- 2698     	MGOTO	_00370_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2699     	.line	342, "main.c"; 	refreshCount = 0;
                                    1- 2700     	BANKSEL	_refreshCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2701     	CLRR	_refreshCount
     0029 02rr                      1- 2702     	CLRR	(_refreshCount + 1)
                                    1- 2703     	.line	343, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2704     	BANKSEL	_shiweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2705     	MOVR	_shiweiNum,W
                                    1- 2706     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2707     	MOVAR	_tempshiweiNum
                                    1- 2708     	.line	344, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2709     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2710     	MOVR	_geweiNum,W
                                    1- 2711     	BANKSEL	_tempgeweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 2712     	MOVAR	_tempgeweiNum
                                    1- 2713     	MGOTO	_00370_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 2714     _00366_DS_:
                                    1- 2715     	.line	349, "main.c"; 	if(++refreshCount >= 20)
                                    1- 2716     	BANKSEL	_refreshCount
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 05rr                      1- 2717     	INCR	_refreshCount,F
     0035 0D03                      1- 2718     	BTRSC	STATUS,2
     0036 05rr                      1- 2719     	INCR	(_refreshCount + 1),F
                                    1- 2720     ;;unsigned compare: left < lit (0x14=20), size=2
     0037 2100                      1- 2721     	MOVIA	0x00
     0038 04rr                      1- 2722     	SUBAR	(_refreshCount + 1),W
     0039 0903                      1- 2723     	BTRSS	STATUS,2
                                    1- 2724     	MGOTO	_00403_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B 2114                      1- 2725     	MOVIA	0x14
     003C 04rr                      1- 2726     	SUBAR	_refreshCount,W
     003D                           1- 2727     _00403_DS_:
     003D 0803                      1- 2728     	BTRSS	STATUS,0
                                    1- 2729     	MGOTO	_00370_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2730     	.line	351, "main.c"; 	refreshCount = 0;
                                    1- 2731     	BANKSEL	_refreshCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 02rr                      1- 2732     	CLRR	_refreshCount
     0041 02rr                      1- 2733     	CLRR	(_refreshCount + 1)
                                    1- 2734     	.line	352, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2735     	BANKSEL	_shiweiNum
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2736     	MOVR	_shiweiNum,W
                                    1- 2737     	BANKSEL	_tempshiweiNum
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2738     	MOVAR	_tempshiweiNum
                                    1- 2739     	.line	353, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2740     	BANKSEL	_geweiNum
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 2741     	MOVR	_geweiNum,W
                                    1- 2742     	BANKSEL	_tempgeweiNum
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 2743     	MOVAR	_tempgeweiNum
                                    1- 2744     	MGOTO	_00370_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 2745     _00369_DS_:
                                    1- 2746     	.line	359, "main.c"; 	refreshCount = 0;
                                    1- 2747     	BANKSEL	_refreshCount
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2748     	CLRR	_refreshCount
     004D 02rr                      1- 2749     	CLRR	(_refreshCount + 1)
     004E                           1- 2750     _00370_DS_:
                                    1- 2751     	.line	361, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2752     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2753     	MOVR	_workStep,W
     0050 0903                      1- 2754     	BTRSS	STATUS,2
                                    1- 2755     	MGOTO	_00372_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2756     	BANKSEL	_ledLightTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2757     	MOVR	_ledLightTime,W
     0054 0903                      1- 2758     	BTRSS	STATUS,2
     0055                           1- 2759     _00372_DS_:
                                    1- 2760     	.line	363, "main.c"; 	showKeyLed();
                                    1- 2761     	MCALL	_showKeyLed
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2762     	.line	366, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2763     	BANKSEL	_ledDeadTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1- 2764     	MOVR	_ledDeadTime,W
     0058 0D03                      1- 2765     	BTRSC	STATUS,2
                                    1- 2766     	MGOTO	_00376_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2767     	.line	368, "main.c"; 	tempshiweiNum = 11;
     005A 210B                      1- 2768     	MOVIA	0x0b
                                    1- 2769     	BANKSEL	_tempshiweiNum
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 2770     	MOVAR	_tempshiweiNum
                                    1- 2771     	.line	369, "main.c"; 	tempgeweiNum = 12;
     005D 210C                      1- 2772     	MOVIA	0x0c
                                    1- 2773     	BANKSEL	_tempgeweiNum
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2774     	MOVAR	_tempgeweiNum
     0060                           1- 2775     _00376_DS_:
                                    1- 2776     	.line	372, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2777     	BANKSEL	_tempshiweiNum
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2778     	MOVR	_tempshiweiNum,W
     0062 25rr                      1- 2779     	ADDIA	(_numArray + 0)
                                    1- 2780     	BANKSEL	r0x1063
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 2781     	MOVAR	r0x1063
     0065 21rr                      1- 2782     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0066 0C03                      1- 2783     	BTRSC	STATUS,0
     0067 2501                      1- 2784     	ADDIA	0x01
                                    1- 2785     	BANKSEL	r0x1064
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 2786     	MOVAR	r0x1064
                                    1- 2787     	BANKSEL	r0x1063
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 2788     	MOVR	r0x1063,W
     006C 00rr                      1- 2789     	MOVAR	STK01
                                    1- 2790     	BANKSEL	r0x1064
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2791     	MOVR	r0x1064,W
     006F 00rr                      1- 2792     	MOVAR	STK00
     0070 2100                      1- 2793     	MOVIA	0x00
                                    1- 2794     	MCALL	__gptrget1
     0071 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2795     ;;100	MOVAR	r0x1065
                                    1- 2796     	MCALL	_showNubShiwei
     0072 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2797     	.line	373, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2798     	BANKSEL	_tempgeweiNum
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 2799     	MOVR	_tempgeweiNum,W
     0075 25rr                      1- 2800     	ADDIA	(_numArray + 0)
                                    1- 2801     	BANKSEL	r0x1063
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 2802     	MOVAR	r0x1063
     0078 21rr                      1- 2803     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0079 0C03                      1- 2804     	BTRSC	STATUS,0
     007A 2501                      1- 2805     	ADDIA	0x01
                                    1- 2806     	BANKSEL	r0x1064
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 2807     	MOVAR	r0x1064
                                    1- 2808     	BANKSEL	r0x1063
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 2809     	MOVR	r0x1063,W
     007F 00rr                      1- 2810     	MOVAR	STK01
                                    1- 2811     	BANKSEL	r0x1064
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 2812     	MOVR	r0x1064,W
     0082 00rr                      1- 2813     	MOVAR	STK00
     0083 2100                      1- 2814     	MOVIA	0x00
                                    1- 2815     	MCALL	__gptrget1
     0084 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2816     ;;99	MOVAR	r0x1065
                                    1- 2817     	MCALL	_showNubGewei
     0085 2rrr                      3-   66 m1      LCALL rom_address
     0086                           1- 2818     _00377_DS_:
                                    1- 2819     	.line	374, "main.c"; 	}
                                    1- 2820     	RETURN	
     0086 0010                      3-   40 m1      ret
                                    1- 2821     ; exit point of _refreshNub
                                    1- 2823     ;***
                                    1- 2824     ;  pBlock Stats: dbName = C
                                    1- 2825     ;***
                                    1- 2826     ;functions called:
                                    1- 2827     ;   _pwmStop
                                    1- 2828     ;   _pwm1Stop
                                    1- 2829     ;   __divuchar
                                    1- 2830     ;   __moduchar
                                    1- 2831     ;   _pwm1Init
                                    1- 2832     ;   _pwm1Stop
                                    1- 2833     ;   __divuchar
                                    1- 2834     ;   __moduchar
                                    1- 2835     ;   _pwmStop
                                    1- 2836     ;   _pwm1Stop
                                    1- 2837     ;   __divuchar
                                    1- 2838     ;   __moduchar
                                    1- 2839     ;   _pwm1Init
                                    1- 2840     ;   _pwm1Stop
                                    1- 2841     ;   __divuchar
                                    1- 2842     ;   __moduchar
                                    1- 2843     ;2 compiler assigned registers:
                                    1- 2844     ;   r0x1066
                                    1- 2845     ;   STK00
                                    1- 2846     ;; Starting pCode block
                                    1- 2847     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2849     _chrgCtr:
                                    1- 2850     ; 0 exit points
                                    1- 2851     	.line	230, "main.c"; 	if(0x08 & PORTA)
                                    1- 2852     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 2853     	BTRSS	_PORTA,3
                                    1- 2854     	MGOTO	_00352_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2855     	.line	233, "main.c"; 	chrgFlag = 1;
                                    1- 2856     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 2857     	BSR	_Status,3
                                    1- 2858     	.line	234, "main.c"; 	showFlag = 1;
     0005 2101                      1- 2859     	MOVIA	0x01
                                    1- 2860     	BANKSEL	_showFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2861     	MOVAR	_showFlag
                                    1- 2862     	.line	235, "main.c"; 	workStep = 0;
                                    1- 2863     	BANKSEL	_workStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2864     	CLRR	_workStep
                                    1- 2865     	.line	236, "main.c"; 	ledLightTime = 0;
                                    1- 2866     	BANKSEL	_ledLightTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2867     	CLRR	_ledLightTime
                                    1- 2868     	.line	237, "main.c"; 	pwmStop();
                                    1- 2869     	MCALL	_pwmStop
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2870     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2871     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2872     	.line	239, "main.c"; 	if(batValue > 99)
     000D 2164                      1- 2873     	MOVIA	0x64
                                    1- 2874     	BANKSEL	_batValue
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1- 2875     	SUBAR	_batValue,W
     0010 0803                      1- 2876     	BTRSS	STATUS,0
                                    1- 2877     	MGOTO	_00337_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2878     	.line	241, "main.c"; 	chrgStep = 4;
     0012 2104                      1- 2879     	MOVIA	0x04
                                    1- 2880     	BANKSEL	_chrgStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 2881     	MOVAR	_chrgStep
                                    1- 2882     	.line	242, "main.c"; 	shiweiNum = 9;
     0015 2109                      1- 2883     	MOVIA	0x09
                                    1- 2884     	BANKSEL	_shiweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2885     	MOVAR	_shiweiNum
                                    1- 2886     	.line	243, "main.c"; 	geweiNum = 9;
                                    1- 2887     	BANKSEL	_geweiNum
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 2888     	MOVAR	_geweiNum
                                    1- 2889     	.line	245, "main.c"; 	if(++countFull > 200)
                                    1- 2890     	BANKSEL	_countFull
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 2891     	INCR	_countFull,F
                                    1- 2892     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2893     ;;unsigned compare: left >= lit (0xC9=201), size=1
     001C 21C9                      1- 2894     	MOVIA	0xc9
     001D 04rr                      1- 2895     	SUBAR	_countFull,W
     001E 0C03                      1- 2896     	BTRSC	STATUS,0
                                    1- 2897     	.line	246, "main.c"; 	pwm1Stop();
                                    1- 2898     	MCALL	_pwm1Stop
     001F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2899     	.line	248, "main.c"; 	PORTB &= 0xF7;
     0020 1Drr                      1- 2900     	BCR	_PORTB,3
                                    1- 2901     	.line	249, "main.c"; 	IOSTB |= 0X08;
     0021 001r                      1- 2902     	IOSTR	_IOSTB
                                    1- 2903     	BANKSEL	r0x1066
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 2904     	MOVAR	r0x1066
     0024 19rr                      1- 2905     	BSR	r0x1066,3
     0025 01rr                      1- 2906     	MOVR	r0x1066,W
     0026 000r                      1- 2907     	IOST	_IOSTB
                                    1- 2908     	MGOTO	_00011_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 2909     _00337_DS_:
                                    1- 2910     	.line	253, "main.c"; 	countFull = 0;
                                    1- 2911     	BANKSEL	_countFull
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 2912     	CLRR	_countFull
                                    1- 2913     	.line	254, "main.c"; 	IOSTB &= 0xF7;
     002A 001r                      1- 2914     	IOSTR	_IOSTB
                                    1- 2915     	BANKSEL	r0x1066
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 2916     	MOVAR	r0x1066
     002D 1Drr                      1- 2917     	BCR	r0x1066,3
     002E 01rr                      1- 2918     	MOVR	r0x1066,W
     002F 000r                      1- 2919     	IOST	_IOSTB
                                    1- 2920     	.line	255, "main.c"; 	if(batValue >= preBatValue && count5s == 1)
                                    1- 2921     	BANKSEL	_preBatValue
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2922     	MOVR	_preBatValue,W
                                    1- 2923     	BANKSEL	_batValue
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 04rr                      1- 2924     	SUBAR	_batValue,W
     0034 0803                      1- 2925     	BTRSS	STATUS,0
                                    1- 2926     	MGOTO	_00010_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2927     	BANKSEL	_count5s
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 2928     	MOVR	_count5s,W
     0038 2401                      1- 2929     	XORIA	0x01
     0039 0903                      1- 2930     	BTRSS	STATUS,2
                                    1- 2931     	MGOTO	_00010_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B 01rr                      1- 2932     	MOVR	(_count5s + 1),W
     003C 2400                      1- 2933     	XORIA	0x00
     003D 0903                      1- 2934     	BTRSS	STATUS,2
                                    1- 2935     	MGOTO	_00010_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2936     	.line	257, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2937     	BANKSEL	_preBatValue
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 05rr                      1- 2938     	INCR	_preBatValue,F
     0041                           1- 2939     _00010_DS_:
                                    1- 2940     	.line	259, "main.c"; 	shiweiNum = preBatValue/10;
     0041 210A                      1- 2941     	MOVIA	0x0a
     0042 00rr                      1- 2942     	MOVAR	STK00
                                    1- 2943     	BANKSEL	_preBatValue
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2944     	MOVR	_preBatValue,W
                                    1- 2945     	MCALL	__divuchar
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2946     	BANKSEL	_shiweiNum
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 2947     	MOVAR	_shiweiNum
                                    1- 2948     	.line	260, "main.c"; 	geweiNum = preBatValue%10;
     0048 210A                      1- 2949     	MOVIA	0x0a
     0049 00rr                      1- 2950     	MOVAR	STK00
                                    1- 2951     	BANKSEL	_preBatValue
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 2952     	MOVR	_preBatValue,W
                                    1- 2953     	MCALL	__moduchar
     004C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2954     	BANKSEL	_geweiNum
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 2955     	MOVAR	_geweiNum
                                    1- 2956     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1- 2957     	.line	261, "main.c"; 	if(shiweiNum < 2)
     004F 2102                      1- 2958     	MOVIA	0x02
                                    1- 2959     	BANKSEL	_shiweiNum
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 04rr                      1- 2960     	SUBAR	_shiweiNum,W
     0052 0C03                      1- 2961     	BTRSC	STATUS,0
                                    1- 2962     	MGOTO	_00334_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2963     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2964     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2965     	.line	263, "main.c"; 	if(chrgStep <= 1)
     0054 2102                      1- 2966     	MOVIA	0x02
                                    1- 2967     	BANKSEL	_chrgStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 04rr                      1- 2968     	SUBAR	_chrgStep,W
     0057 0C03                      1- 2969     	BTRSC	STATUS,0
                                    1- 2970     	MGOTO	_00335_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2971     	.line	265, "main.c"; 	PWM1DUTY = 8;
     0059 2108                      1- 2972     	MOVIA	0x08
     005A 00rr                      1- 2973     	SFUN	_PWM1DUTY
                                    1- 2974     	.line	266, "main.c"; 	chrgStep = 1;
     005B 2101                      1- 2975     	MOVIA	0x01
     005C 00rr                      1- 2976     	MOVAR	_chrgStep
                                    1- 2977     	MGOTO	_00335_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2978     ;;unsigned compare: left < lit (0x9=9), size=1
     005E                           1- 2979     _00334_DS_:
                                    1- 2980     	.line	269, "main.c"; 	else if(shiweiNum < 9 && geweiNum < 8)
     005E 2109                      1- 2981     	MOVIA	0x09
                                    1- 2982     	BANKSEL	_shiweiNum
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 04rr                      1- 2983     	SUBAR	_shiweiNum,W
     0061 0C03                      1- 2984     	BTRSC	STATUS,0
                                    1- 2985     	MGOTO	_00330_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2986     ;;unsigned compare: left < lit (0x8=8), size=1
     0063 2108                      1- 2987     	MOVIA	0x08
                                    1- 2988     	BANKSEL	_geweiNum
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 2989     	SUBAR	_geweiNum,W
     0066 0C03                      1- 2990     	BTRSC	STATUS,0
                                    1- 2991     	MGOTO	_00330_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2992     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2993     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 2994     	.line	271, "main.c"; 	if(chrgStep <= 2)
     0068 2103                      1- 2995     	MOVIA	0x03
                                    1- 2996     	BANKSEL	_chrgStep
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 04rr                      1- 2997     	SUBAR	_chrgStep,W
     006B 0C03                      1- 2998     	BTRSC	STATUS,0
                                    1- 2999     	MGOTO	_00335_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3000     	.line	273, "main.c"; 	chrgStep = 2;
     006D 2102                      1- 3001     	MOVIA	0x02
     006E 00rr                      1- 3002     	MOVAR	_chrgStep
                                    1- 3003     	.line	274, "main.c"; 	PWM1DUTY = 13;
     006F 210D                      1- 3004     	MOVIA	0x0d
     0070 00rr                      1- 3005     	SFUN	_PWM1DUTY
                                    1- 3006     	MGOTO	_00335_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3007     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3008     ;;unsigned compare: left >= lit (0x4=4), size=1
     0072                           1- 3009     _00330_DS_:
                                    1- 3010     	.line	279, "main.c"; 	if(chrgStep <= 3)
     0072 2104                      1- 3011     	MOVIA	0x04
                                    1- 3012     	BANKSEL	_chrgStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 04rr                      1- 3013     	SUBAR	_chrgStep,W
     0075 0C03                      1- 3014     	BTRSC	STATUS,0
                                    1- 3015     	MGOTO	_00335_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3016     	.line	281, "main.c"; 	PWM1DUTY = 12;
     0077 210C                      1- 3017     	MOVIA	0x0c
     0078 00rr                      1- 3018     	SFUN	_PWM1DUTY
                                    1- 3019     	.line	282, "main.c"; 	chrgStep = 3;
     0079 2103                      1- 3020     	MOVIA	0x03
     007A 00rr                      1- 3021     	MOVAR	_chrgStep
     007B                           1- 3022     _00335_DS_:
                                    1- 3023     	.line	285, "main.c"; 	pwm1Init();
                                    1- 3024     	MCALL	_pwm1Init
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3025     	MGOTO	_00011_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 3026     _00352_DS_:
                                    1- 3027     	.line	290, "main.c"; 	chrgStep = 0;
                                    1- 3028     	BANKSEL	_chrgStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1- 3029     	CLRR	_chrgStep
                                    1- 3030     	.line	291, "main.c"; 	pwm1Stop();
                                    1- 3031     	MCALL	_pwm1Stop
     007F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3032     	.line	292, "main.c"; 	chrgFlag = 0;
                                    1- 3033     	BANKSEL	_Status
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 1Drr                      1- 3034     	BCR	_Status,3
                                    1- 3035     	.line	294, "main.c"; 	if(workStep > 0)
                                    1- 3036     	BANKSEL	_workStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1- 3037     	MOVR	_workStep,W
     0084 0D03                      1- 3038     	BTRSC	STATUS,2
                                    1- 3039     	MGOTO	_00349_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3040     	.line	296, "main.c"; 	showFlag = 1;
     0086 2101                      1- 3041     	MOVIA	0x01
                                    1- 3042     	BANKSEL	_showFlag
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 3043     	MOVAR	_showFlag
                                    1- 3044     	.line	297, "main.c"; 	shiweiNum = 0;
                                    1- 3045     	BANKSEL	_shiweiNum
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 02rr                      1- 3046     	CLRR	_shiweiNum
                                    1- 3047     	.line	298, "main.c"; 	geweiNum = workStep;
                                    1- 3048     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1- 3049     	MOVR	_workStep,W
                                    1- 3050     	BANKSEL	_geweiNum
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 3051     	MOVAR	_geweiNum
                                    1- 3052     	MGOTO	_00011_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3053     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3054     ;;unsigned compare: left >= lit (0x64=100), size=1
     0090                           1- 3055     _00349_DS_:
                                    1- 3056     	.line	302, "main.c"; 	if(batValue > 99)
     0090 2164                      1- 3057     	MOVIA	0x64
                                    1- 3058     	BANKSEL	_batValue
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 04rr                      1- 3059     	SUBAR	_batValue,W
     0093 0803                      1- 3060     	BTRSS	STATUS,0
                                    1- 3061     	MGOTO	_00342_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3062     	.line	304, "main.c"; 	shiweiNum = 9;
     0095 2109                      1- 3063     	MOVIA	0x09
                                    1- 3064     	BANKSEL	_shiweiNum
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 3065     	MOVAR	_shiweiNum
                                    1- 3066     	.line	305, "main.c"; 	geweiNum = 9;
                                    1- 3067     	BANKSEL	_geweiNum
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 3068     	MOVAR	_geweiNum
                                    1- 3069     	MGOTO	_00343_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B                           1- 3070     _00342_DS_:
                                    1- 3071     	.line	307, "main.c"; 	else if(ledLightTime > 0)
                                    1- 3072     	BANKSEL	_ledLightTime
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 3073     	MOVR	_ledLightTime,W
     009D 0D03                      1- 3074     	BTRSC	STATUS,2
                                    1- 3075     	MGOTO	_00343_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3076     	.line	310, "main.c"; 	shiweiNum = preBatValue/10;
     009F 210A                      1- 3077     	MOVIA	0x0a
     00A0 00rr                      1- 3078     	MOVAR	STK00
                                    1- 3079     	BANKSEL	_preBatValue
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1- 3080     	MOVR	_preBatValue,W
                                    1- 3081     	MCALL	__divuchar
     00A3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3082     	BANKSEL	_shiweiNum
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 3083     	MOVAR	_shiweiNum
                                    1- 3084     	.line	311, "main.c"; 	geweiNum = preBatValue%10;
     00A6 210A                      1- 3085     	MOVIA	0x0a
     00A7 00rr                      1- 3086     	MOVAR	STK00
                                    1- 3087     	BANKSEL	_preBatValue
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 3088     	MOVR	_preBatValue,W
                                    1- 3089     	MCALL	__moduchar
     00AA 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3090     	BANKSEL	_geweiNum
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1- 3091     	MOVAR	_geweiNum
     00AD                           1- 3092     _00343_DS_:
                                    1- 3093     	.line	313, "main.c"; 	if(count5s == 1)
                                    1- 3094     	BANKSEL	_count5s
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 01rr                      1- 3095     	MOVR	_count5s,W
     00AF 2401                      1- 3096     	XORIA	0x01
     00B0 0903                      1- 3097     	BTRSS	STATUS,2
                                    1- 3098     	MGOTO	_00011_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2 01rr                      1- 3099     	MOVR	(_count5s + 1),W
     00B3 2400                      1- 3100     	XORIA	0x00
     00B4 0903                      1- 3101     	BTRSS	STATUS,2
                                    1- 3102     	MGOTO	_00011_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3103     	.line	315, "main.c"; 	if(preBatValue > batValue)
                                    1- 3104     	BANKSEL	_preBatValue
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 01rr                      1- 3105     	MOVR	_preBatValue,W
                                    1- 3106     	BANKSEL	_batValue
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 3107     	SUBAR	_batValue,W
     00BA 0C03                      1- 3108     	BTRSC	STATUS,0
                                    1- 3109     	MGOTO	_00011_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3110     	.line	317, "main.c"; 	preBatValue = preBatValue-1;
                                    1- 3111     	BANKSEL	_preBatValue
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 06rr                      1- 3112     	DECR	_preBatValue,F
     00BE                           1- 3113     _00011_DS_:
                                    1- 3114     	.line	323, "main.c"; 	}
                                    1- 3115     	RETURN	
     00BE 0010                      3-   40 m1      ret
                                    1- 3118     ;	code size estimation:
                                    1- 3119     ;	 1198+  352 =  1550 instructions ( 3804 byte)
                                    1- 3121     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
