
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_showKeyLed
                                    1-   25     	extern	_B1
                                    1-   26     	extern	_C1
                                    1-   27     	extern	_A2
                                    1-   28     	extern	_B2
                                    1-   29     	extern	_C2
                                    1-   30     	extern	_D2
                                    1-   31     	extern	_E2
                                    1-   32     	extern	_F2
                                    1-   33     	extern	_G2
                                    1-   34     	extern	_A3
                                    1-   35     	extern	_B3
                                    1-   36     	extern	_C3
                                    1-   37     	extern	_D3
                                    1-   38     	extern	_E3
                                    1-   39     	extern	_F3
                                    1-   40     	extern	_G3
                                    1-   41     	extern	_delayms
                                    1-   42     	extern	_LedCtr2
                                    1-   43     	extern	_checkInAD
                                    1-   44     	extern	_F_AIN3_Convert
                                    1-   45     	extern	_fgCtr
                                    1-   46     	extern	_ledCtr
                                    1-   47     	extern	_workCtr
                                    1-   48     	extern	__divuchar
                                    1-   49     	extern	__moduchar
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__mulchar
                                    1-  130     	extern	__nyc_ny8_startup
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; global declarations
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     	extern	_delay
                                    1-  135     	extern	_F_wait_eoc
                                    1-  136     	extern	_F_AIN2_Convert
                                    1-  137     	extern	_F_AIN4_Convert
                                    1-  138     	extern	_checkOutA
                                    1-  139     	extern	_checkBatAD
                                    1-  140     	extern	_initAD
                                    1-  141     	extern	_keyRead
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_pwmStop
                                    1-  144     	extern	_pwmInit
                                    1-  145     	extern	_pwm1Stop
                                    1-  146     	extern	_pwm1Init
                                    1-  147     	extern	_powerOff
                                    1-  148     	extern	_initSys
                                    1-  149     	extern	_keyCtr
                                    1-  150     	extern	_refreshNub
                                    1-  151     	extern	_chrgCtr
                                    1-  152     	extern	_isr
                                    1-  153     	extern	_main
                                    1-  154     	extern	_debug
                                    1-  155     	extern	_Status
                                    1-  156     	extern	_R_AIN4_DATA
                                    1-  157     	extern	_R_AIN4_DATA_LB
                                    1-  158     	extern	_R_AIN2_DATA
                                    1-  159     	extern	_R_AIN2_DATA_LB
                                    1-  160     	extern	_intCount
                                    1-  161     	extern	_sleepTime
                                    1-  162     	extern	_count200ms
                                    1-  163     	extern	_count500ms
                                    1-  164     	extern	_count1s
                                    1-  165     	extern	_count5s
                                    1-  166     	extern	_count900s
                                    1-  167     	extern	_workStep
                                    1-  168     	extern	_keyCount
                                    1-  169     	extern	_pwStep
                                    1-  170     	extern	_ledLightTime
                                    1-  171     	extern	_maxDuty
                                    1-  172     	extern	_currentDuty
                                    1-  173     	extern	_overCount
                                    1-  174     	extern	_tempDuty
                                    1-  175     	extern	_count5S
                                    1-  176     	extern	_ledDeadTime
                                    1-  177     	extern	_countFull
                                    1-  178     	extern	_tempshiweiNum
                                    1-  179     	extern	_tempgeweiNum
                                    1-  180     	extern	_refreshCount
                                    1-  181     	extern	_shiweiNum
                                    1-  182     	extern	_geweiNum
                                    1-  183     	extern	_batValue
                                    1-  184     	extern	_cDuty
                                    1-  185     	extern	_preBatValue
                                    1-  186     	extern	_chrgStep
                                    1-  187     	extern	_lightBat
                                    1-  188     	extern	_closeCount
                                    1-  189     	extern	_firstShowCount
                                    1-  190     	extern	_batCount
                                    1-  192     	extern PSAVE
                                    1-  193     	extern SSAVE
                                    1-  194     	extern WSAVE
                                    1-  195     	extern STK02
                                    1-  196     	extern STK01
                                    1-  197     	extern STK00
                                    1-  199     .segment "uninit", 0x20000040
 20000040                           1-  200     PSAVE:
                                    1-  201     	.res 1
 20000041                           1-  202     SSAVE:
                                    1-  203     	.res 1
 20000042                           1-  204     WSAVE:
                                    1-  205     	.res 1
 20000043                           1-  206     STK02:
                                    1-  207     	.res 1
 20000044                           1-  208     STK01:
                                    1-  209     	.res 1
 20000045                           1-  210     STK00:
                                    1-  211     	.res 1
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ; global definitions
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN4_DATA:
                                    1-  218     	.res	2
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN4_DATA_LB:
                                    1-  223     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN2_DATA:
                                    1-  228     	.res	2
                                    1-  231     .segment "uninit"
     0000                           1-  232     _R_AIN2_DATA_LB:
                                    1-  233     	.res	1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; absolute symbol definitions
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; compiler-defined variables
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x105D:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x105E:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x105F:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1061:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x105A:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x105B:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1059:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1058:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1057:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1056:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1050:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1051:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1052:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1053:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1054:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1055:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x104C:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x104F:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1046:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1047:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1048:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x104B:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1040:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1041:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1042:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1045:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x103C:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x103B:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x103D:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x103E:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x103F:
                                    1-  334     	.res	1
                                    1-  335     ;--------------------------------------------------------
                                    1-  336     ; initialized data
                                    1-  337     ;--------------------------------------------------------
                                    1-  339     .segment "idata"
     0000                           1-  340     _debug:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _numArray:
     0000 003F                      1-  347     	dw	0x3f
     0001 0006                      1-  348     	dw	0x06
     0002 005B                      1-  349     	dw	0x5b
     0003 004F                      1-  350     	dw	0x4f
     0004 0066                      1-  351     	dw	0x66
     0005 006D                      1-  352     	dw	0x6d
     0006 007D                      1-  353     	dw	0x7d
     0007 0007                      1-  354     	dw	0x07
     0008 007F                      1-  355     	dw	0x7f
     0009 006F                      1-  356     	dw	0x6f
     000A 0071                      1-  357     	dw	0x71
     000B 0079                      1-  358     	dw	0x79
     000C 0050                      1-  359     	dw	0x50
                                    1-  363     .segment "idata"
     0000                           1-  364     _Status:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _intCount:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _sleepTime:
     0000 0000 0000                 1-  377     	dw	0x00, 0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _count200ms:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _count500ms:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _count1s:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _count5s:
     0000 0000 0000                 1-  401     	dw	0x00, 0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _count900s:
     0000 0000 0000                 1-  407     	dw	0x00, 0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _workStep:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _keyCount:
     0000 0000                      1-  419     	dw	0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _pwStep:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _ledLightTime:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _maxDuty:
     0000 0000                      1-  437     	dw	0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _currentDuty:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _overCount:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _tempDuty:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _count5S:
     0000 0000 0000                 1-  461     	dw	0x00, 0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _ledDeadTime:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _countFull:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _tempshiweiNum:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _tempgeweiNum:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _refreshCount:
     0000 0000 0000                 1-  491     	dw	0x00, 0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _shiweiNum:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _geweiNum:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _batValue:
     0000 0000                      1-  509     	dw	0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _cDuty:
     0000 0000                      1-  515     	dw	0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _preBatValue:
     0000 0000                      1-  521     	dw	0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _chrgStep:
     0000 0000                      1-  527     	dw	0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _lightBat:
     0000 0000                      1-  533     	dw	0x00
                                    1-  537     .segment "idata"
     0000                           1-  538     _closeCount:
     0000 0000 0000                 1-  539     	dw	0x00, 0x00
                                    1-  543     .segment "idata"
     0000                           1-  544     _firstShowCount:
     0000 0000                      1-  545     	dw	0x00
                                    1-  549     .segment "idata"
     0000                           1-  550     _batCount:
     0000 0000                      1-  551     	dw	0x00
                                    1-  554     ;--------------------------------------------------------
                                    1-  555     ; overlayable items in internal ram 
                                    1-  556     ;--------------------------------------------------------
                                    1-  557     ;	udata_ovr
                                    1-  558     ;--------------------------------------------------------
                                    1-  559     ; reset vector 
                                    1-  560     ;--------------------------------------------------------
                                    1-  561     ORG	0x0000
     0000 3rrr                      1-  562     	LGOTO	__nyc_ny8_startup
                                    1-  563     ;--------------------------------------------------------
                                    1-  564     ; interrupt and initialization code
                                    1-  565     ;--------------------------------------------------------
                                    1-  566     ORG 0x0008
                                    1-  567     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  569     .segment "code"
     0000                           1-  570     __sdcc_interrupt:
                                    1-  571     ;***
                                    1-  572     ;  pBlock Stats: dbName = I
                                    1-  573     ;***
                                    1-  574     ;2 compiler assigned registers:
                                    1-  575     ;   STK00
                                    1-  576     ;   STK01
                                    1-  577     ;; Starting pCode block
     0000                           1-  578     _isr:
                                    1-  579     ; 0 exit points
                                    1-  580     	.line	87, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  581     	MOVAR	WSAVE
     0001 1503                      1-  582     	SWAPR	STATUS,W
     0002 0283                      1-  583     	CLRR	STATUS
     0003 00rr                      1-  584     	MOVAR	SSAVE
     0004 010A                      1-  585     	MOVR	PCHBUF,W
     0005 028A                      1-  586     	CLRR	PCHBUF
     0006 00rr                      1-  587     	MOVAR	PSAVE
     0007 0104                      1-  588     	MOVR	FSR,W
                                    1-  589     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  590     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  591     	MOVR	STK00,W
                                    1-  592     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  593     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  594     	MOVR	STK01,W
                                    1-  595     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  596     	MOVAR	___sdcc_saved_stk01
                                    1-  597     	.line	89, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  598     	BTRSS	_INTFbits,0
                                    1-  599     	MGOTO	_00123_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  600     	.line	91, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  601     	MOVIA	0x37
     0013 03rr                      1-  602     	ADDAR	_TMR0,F
                                    1-  603     	.line	93, "main.c"; 	if(++intCount >= 100)
                                    1-  604     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  605     	INCR	_intCount,F
                                    1-  606     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  607     	MOVIA	0x64
     0017 04rr                      1-  608     	SUBAR	_intCount,W
     0018 0803                      1-  609     	BTRSS	STATUS,0
                                    1-  610     	MGOTO	_00123_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  611     	.line	95, "main.c"; 	IntFlag = 1;
                                    1-  612     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  613     	BSR	_Status,0
                                    1-  614     	.line	96, "main.c"; 	intCount = 0;
                                    1-  615     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  616     	CLRR	_intCount
                                    1-  617     	.line	97, "main.c"; 	if(++count500ms >= 40)
                                    1-  618     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  619     	INCR	_count500ms,F
                                    1-  620     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  621     	MOVIA	0x28
     0021 04rr                      1-  622     	SUBAR	_count500ms,W
     0022 0C03                      1-  623     	BTRSC	STATUS,0
                                    1-  624     	.line	98, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  625     	CLRR	_count500ms
                                    1-  626     	.line	99, "main.c"; 	if(++count200ms >= 20)
                                    1-  627     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  628     	INCR	_count200ms,F
     0026 2114                      1-  629     	MOVIA	0x14
     0027 04rr                      1-  630     	SUBAR	_count200ms,W
     0028 0803                      1-  631     	BTRSS	STATUS,0
                                    1-  632     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  633     	.line	101, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  634     	CLRR	_count200ms
                                    1-  635     	.line	102, "main.c"; 	if(ledDeadTime > 0)
                                    1-  636     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  637     	MOVR	_ledDeadTime,W
     002D 0903                      1-  638     	BTRSS	STATUS,2
                                    1-  639     	.line	103, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  640     	DECR	_ledDeadTime,F
     002F                           1-  641     _00110_DS_:
                                    1-  642     	.line	105, "main.c"; 	if(++count5s >= 500)
                                    1-  643     	BANKSEL	_count5s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  644     	INCR	_count5s,F
     0031 0D03                      1-  645     	BTRSC	STATUS,2
     0032 05rr                      1-  646     	INCR	(_count5s + 1),F
                                    1-  647     ;;unsigned compare: left < lit (0x1F4=500), size=2
     0033 2101                      1-  648     	MOVIA	0x01
     0034 04rr                      1-  649     	SUBAR	(_count5s + 1),W
     0035 0903                      1-  650     	BTRSS	STATUS,2
                                    1-  651     	MGOTO	_00161_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21F4                      1-  652     	MOVIA	0xf4
     0038 04rr                      1-  653     	SUBAR	_count5s,W
     0039                           1-  654     _00161_DS_:
     0039 0803                      1-  655     	BTRSS	STATUS,0
                                    1-  656     	MGOTO	_00112_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  657     	.line	106, "main.c"; 	count5s = 0;
                                    1-  658     	BANKSEL	_count5s
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  659     	CLRR	_count5s
     003D 02rr                      1-  660     	CLRR	(_count5s + 1)
     003E                           1-  661     _00112_DS_:
                                    1-  662     	.line	107, "main.c"; 	if(++count1s >= 100)
                                    1-  663     	BANKSEL	_count1s
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  664     	INCR	_count1s,F
                                    1-  665     ;;unsigned compare: left < lit (0x64=100), size=1
     0040 2164                      1-  666     	MOVIA	0x64
     0041 04rr                      1-  667     	SUBAR	_count1s,W
     0042 0803                      1-  668     	BTRSS	STATUS,0
                                    1-  669     	MGOTO	_00123_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  670     	.line	109, "main.c"; 	count1s = 0;
     0044 02rr                      1-  671     	CLRR	_count1s
                                    1-  672     	.line	110, "main.c"; 	if(ledLightTime > 0)
                                    1-  673     	BANKSEL	_ledLightTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  674     	MOVR	_ledLightTime,W
     0047 0903                      1-  675     	BTRSS	STATUS,2
                                    1-  676     	.line	111, "main.c"; 	ledLightTime--;
     0048 06rr                      1-  677     	DECR	_ledLightTime,F
                                    1-  678     	.line	112, "main.c"; 	if(workStep)
                                    1-  679     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  680     	MOVR	_workStep,W
     004B 0D03                      1-  681     	BTRSC	STATUS,2
                                    1-  682     	MGOTO	_00116_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  683     	.line	114, "main.c"; 	++count900s;
                                    1-  684     	BANKSEL	_count900s
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1-  685     	INCR	_count900s,F
     004F 0D03                      1-  686     	BTRSC	STATUS,2
     0050 05rr                      1-  687     	INCR	(_count900s + 1),F
                                    1-  688     	MGOTO	_00123_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  689     _00116_DS_:
                                    1-  690     	.line	118, "main.c"; 	count900s = 0;
                                    1-  691     	BANKSEL	_count900s
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1-  692     	CLRR	_count900s
     0054 02rr                      1-  693     	CLRR	(_count900s + 1)
     0055                           1-  694     _00123_DS_:
                                    1-  695     	.line	127, "main.c"; 	if(INTFbits.PABIF)
     0055 08rr                      1-  696     	BTRSS	_INTFbits,1
                                    1-  697     	MGOTO	_00125_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  698     	.line	129, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0057 21FD                      1-  699     	MOVIA	0xfd
     0058 00rr                      1-  700     	MOVAR	_INTF
     0059                           1-  701     _00125_DS_:
                                    1-  702     	.line	132, "main.c"; 	INTF = 0;
     0059 02rr                      1-  703     	CLRR	_INTF
                                    1-  704     	.line	134, "main.c"; 	}
                                    1-  705     	BANKSEL	___sdcc_saved_stk01
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  706     	MOVR	___sdcc_saved_stk01,W
     005C 00rr                      1-  707     	MOVAR	STK01
                                    1-  708     	BANKSEL	___sdcc_saved_stk00
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1-  709     	MOVR	___sdcc_saved_stk00,W
     005F 00rr                      1-  710     	MOVAR	STK00
                                    1-  711     	BANKSEL	___sdcc_saved_fsr
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  712     	MOVR	___sdcc_saved_fsr,W
     0062 0084                      1-  713     	MOVAR	FSR
     0063 01rr                      1-  714     	MOVR	PSAVE,W
     0064 008A                      1-  715     	MOVAR	PCHBUF
     0065 0283                      1-  716     	CLRR	STATUS
     0066 15rr                      1-  717     	SWAPR	SSAVE,W
     0067 0083                      1-  718     	MOVAR	STATUS
     0068 15rr                      1-  719     	SWAPR	WSAVE,F
     0069 15rr                      1-  720     	SWAPR	WSAVE,W
     006A                           1-  721     END_OF_INTERRUPT:
     006A 0011                      1-  722     	RETIE	
                                    1-  724     ;--------------------------------------------------------
                                    1-  725     ; code
                                    1-  726     ;--------------------------------------------------------
                                    1-  727     ;***
                                    1-  728     ;  pBlock Stats: dbName = M
                                    1-  729     ;***
                                    1-  730     ;has an exit
                                    1-  731     ;functions called:
                                    1-  732     ;   _initSys
                                    1-  733     ;   _initAD
                                    1-  734     ;   _refreshNub
                                    1-  735     ;   _pwmStop
                                    1-  736     ;   _powerOff
                                    1-  737     ;   _checkBatAD
                                    1-  738     ;   _checkBatAD
                                    1-  739     ;   _checkOutA
                                    1-  740     ;   _chrgCtr
                                    1-  741     ;   _keyCtr
                                    1-  742     ;   _gotoSleep
                                    1-  743     ;   _powerOff
                                    1-  744     ;   _initSys
                                    1-  745     ;   _initAD
                                    1-  746     ;   _refreshNub
                                    1-  747     ;   _pwmStop
                                    1-  748     ;   _powerOff
                                    1-  749     ;   _checkBatAD
                                    1-  750     ;   _checkBatAD
                                    1-  751     ;   _checkOutA
                                    1-  752     ;   _chrgCtr
                                    1-  753     ;   _keyCtr
                                    1-  754     ;   _gotoSleep
                                    1-  755     ;   _powerOff
                                    1-  756     ;; Starting pCode block
                                    1-  757     .segment "code"; module=main, function=_main
     0000                           1-  759     _main:
                                    1-  760     ; 2 exit points
                                    1-  761     	.line	139, "main.c"; 	initSys();
                                    1-  762     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  763     	.line	140, "main.c"; 	initAD();
                                    1-  764     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  765     	.line	141, "main.c"; 	firstShowCount = 100;
     0002 2164                      1-  766     	MOVIA	0x64
                                    1-  767     	BANKSEL	_firstShowCount
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  768     	MOVAR	_firstShowCount
                                    1-  769     	.line	142, "main.c"; 	ledLightTime = showFlag = 1;
                                    1-  770     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1-  771     	BSR	_Status,4
                                    1-  772     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  773     	CLRR	_ledLightTime
                                    1-  774     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  775     	BTRSS	_Status,4
                                    1-  776     	MGOTO	_00011_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  777     	BANKSEL	_ledLightTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  778     	INCR	_ledLightTime,F
     000E                           1-  779     _00011_DS_:
                                    1-  780     	.line	143, "main.c"; 	tempshiweiNum = shiweiNum = 8;
     000E 2108                      1-  781     	MOVIA	0x08
                                    1-  782     	BANKSEL	_shiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1-  783     	MOVAR	_shiweiNum
                                    1-  784     	BANKSEL	_tempshiweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  785     	MOVAR	_tempshiweiNum
                                    1-  786     	.line	144, "main.c"; 	tempgeweiNum = geweiNum = 8;
                                    1-  787     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  788     	MOVAR	_geweiNum
     0015 2108                      1-  789     	MOVIA	0x08
                                    1-  790     	BANKSEL	_tempgeweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  791     	MOVAR	_tempgeweiNum
     0018                           1-  792     _00217_DS_:
                                    1-  793     	.line	147, "main.c"; 	CLRWDT();
     0018 0002                      1-  794     	clrwdt
                                    1-  795     	.line	148, "main.c"; 	if(showFlag)
                                    1-  796     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1-  797     	BTRSC	_Status,4
                                    1-  798     	.line	149, "main.c"; 	refreshNub();
                                    1-  799     	MCALL	_refreshNub
     001B 2rrr                      3-   66 m1      LCALL rom_address
     001C                           1-  800     _00167_DS_:
                                    1-  801     	.line	150, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  802     	BANKSEL	_workStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1-  803     	MOVR	_workStep,W
     001E 0D03                      1-  804     	BTRSC	STATUS,2
                                    1-  805     	MGOTO	_00174_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  806     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  807     	MOVIA	0x28
                                    1-  808     	BANKSEL	_tempDuty
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 04rr                      1-  809     	SUBAR	_tempDuty,W
     0023 0803                      1-  810     	BTRSS	STATUS,0
                                    1-  811     	MGOTO	_00174_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  812     	.line	152, "main.c"; 	if(cDuty > tempDuty)
                                    1-  813     	BANKSEL	_cDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  814     	MOVR	_cDuty,W
                                    1-  815     	BANKSEL	_tempDuty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  816     	SUBAR	_tempDuty,W
     0029 0C03                      1-  817     	BTRSC	STATUS,0
                                    1-  818     	MGOTO	_00171_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  819     	.line	154, "main.c"; 	cDuty--;
                                    1-  820     	BANKSEL	_cDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 06rr                      1-  821     	DECR	_cDuty,F
                                    1-  822     	.line	155, "main.c"; 	PWM2DUTY = cDuty;
     002D 01rr                      1-  823     	MOVR	_cDuty,W
     002E 00rr                      1-  824     	SFUN	_PWM2DUTY
                                    1-  825     	MGOTO	_00174_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1-  826     _00171_DS_:
                                    1-  827     	.line	157, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  828     	BANKSEL	_tempDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1-  829     	MOVR	_tempDuty,W
                                    1-  830     	BANKSEL	_cDuty
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 04rr                      1-  831     	SUBAR	_cDuty,W
     0034 0C03                      1-  832     	BTRSC	STATUS,0
                                    1-  833     	MGOTO	_00174_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  834     	.line	159, "main.c"; 	cDuty++;
     0036 05rr                      1-  835     	INCR	_cDuty,F
                                    1-  836     	.line	160, "main.c"; 	PWM2DUTY = cDuty;
     0037 01rr                      1-  837     	MOVR	_cDuty,W
     0038 00rr                      1-  838     	SFUN	_PWM2DUTY
     0039                           1-  839     _00174_DS_:
                                    1-  840     	.line	163, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  841     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  842     	MOVR	_workStep,W
     003B 0D03                      1-  843     	BTRSC	STATUS,2
                                    1-  844     	MGOTO	_00177_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  845     	BANKSEL	_currentDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  846     	MOVR	_currentDuty,W
                                    1-  847     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 04rr                      1-  848     	SUBAR	_maxDuty,W
     0041 0C03                      1-  849     	BTRSC	STATUS,0
                                    1-  850     	MGOTO	_00177_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  851     	.line	165, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  852     	BANKSEL	_currentDuty
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 06rr                      1-  853     	DECR	_currentDuty,F
                                    1-  854     	.line	166, "main.c"; 	PWM2DUTY = currentDuty;
     0045 01rr                      1-  855     	MOVR	_currentDuty,W
     0046 00rr                      1-  856     	SFUN	_PWM2DUTY
                                    1-  857     	.line	167, "main.c"; 	cDuty = currentDuty;
     0047 01rr                      1-  858     	MOVR	_currentDuty,W
                                    1-  859     	BANKSEL	_cDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1-  860     	MOVAR	_cDuty
     004A                           1-  861     _00177_DS_:
                                    1-  862     	.line	169, "main.c"; 	if(!IntFlag)
                                    1-  863     	BANKSEL	_Status
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 08rr                      1-  864     	BTRSS	_Status,0
                                    1-  865     	MGOTO	_00217_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  866     	.line	171, "main.c"; 	IntFlag = 0;
     004D 1Crr                      1-  867     	BCR	_Status,0
                                    1-  868     	.line	172, "main.c"; 	if(firstShowCount > 0)
                                    1-  869     	BANKSEL	_firstShowCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1-  870     	MOVR	_firstShowCount,W
     0050 0D03                      1-  871     	BTRSC	STATUS,2
                                    1-  872     	MGOTO	_00182_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  873     	.line	174, "main.c"; 	firstShowCount--;
     0052 06rr                      1-  874     	DECR	_firstShowCount,F
                                    1-  875     	.line	175, "main.c"; 	preBatValue = batValue;
                                    1-  876     	BANKSEL	_batValue
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 01rr                      1-  877     	MOVR	_batValue,W
                                    1-  878     	BANKSEL	_preBatValue
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 00rr                      1-  879     	MOVAR	_preBatValue
                                    1-  880     ;;unsigned compare: left < lit (0x5=5), size=1
     0057                           1-  881     _00182_DS_:
                                    1-  882     	.line	178, "main.c"; 	if(batValue < 5 && workStep > 0)
     0057 2105                      1-  883     	MOVIA	0x05
                                    1-  884     	BANKSEL	_batValue
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 04rr                      1-  885     	SUBAR	_batValue,W
     005A 0C03                      1-  886     	BTRSC	STATUS,0
                                    1-  887     	MGOTO	_00186_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  888     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1-  889     	MOVR	_workStep,W
     005E 0D03                      1-  890     	BTRSC	STATUS,2
                                    1-  891     	MGOTO	_00186_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  892     	.line	180, "main.c"; 	if(++closeCount >= 6000)
                                    1-  893     	BANKSEL	_closeCount
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1-  894     	INCR	_closeCount,F
     0062 0D03                      1-  895     	BTRSC	STATUS,2
     0063 05rr                      1-  896     	INCR	(_closeCount + 1),F
                                    1-  897     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0064 2117                      1-  898     	MOVIA	0x17
     0065 04rr                      1-  899     	SUBAR	(_closeCount + 1),W
     0066 0903                      1-  900     	BTRSS	STATUS,2
                                    1-  901     	MGOTO	_00313_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 2170                      1-  902     	MOVIA	0x70
     0069 04rr                      1-  903     	SUBAR	_closeCount,W
     006A                           1-  904     _00313_DS_:
     006A 0803                      1-  905     	BTRSS	STATUS,0
                                    1-  906     	MGOTO	_00187_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  907     	.line	182, "main.c"; 	closeCount = 0;
                                    1-  908     	BANKSEL	_closeCount
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 02rr                      1-  909     	CLRR	_closeCount
     006E 02rr                      1-  910     	CLRR	(_closeCount + 1)
                                    1-  911     	.line	183, "main.c"; 	workStep = 0;
                                    1-  912     	BANKSEL	_workStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 02rr                      1-  913     	CLRR	_workStep
                                    1-  914     	.line	184, "main.c"; 	pwmStop();
                                    1-  915     	MCALL	_pwmStop
     0071 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  916     	MGOTO	_00187_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
     0073                           1-  917     _00186_DS_:
                                    1-  918     	.line	189, "main.c"; 	closeCount = 0;
                                    1-  919     	BANKSEL	_closeCount
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 02rr                      1-  920     	CLRR	_closeCount
     0075 02rr                      1-  921     	CLRR	(_closeCount + 1)
                                    1-  922     ;;unsigned compare: left < lit (0x5=5), size=1
     0076                           1-  923     _00187_DS_:
                                    1-  924     	.line	192, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0076 2105                      1-  925     	MOVIA	0x05
                                    1-  926     	BANKSEL	_overCount
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 04rr                      1-  927     	SUBAR	_overCount,W
     0079 0803                      1-  928     	BTRSS	STATUS,0
                                    1-  929     	MGOTO	_00192_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  930     	BANKSEL	_workStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1-  931     	MOVR	_workStep,W
     007D 0D03                      1-  932     	BTRSC	STATUS,2
                                    1-  933     	MGOTO	_00192_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  934     	.line	194, "main.c"; 	if(++count5S > 250)
                                    1-  935     	BANKSEL	_count5S
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 05rr                      1-  936     	INCR	_count5S,F
     0081 0D03                      1-  937     	BTRSC	STATUS,2
     0082 05rr                      1-  938     	INCR	(_count5S + 1),F
                                    1-  939     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  940     ;;unsigned compare: left >= lit (0xFB=251), size=2
     0083 2100                      1-  941     	MOVIA	0x00
     0084 04rr                      1-  942     	SUBAR	(_count5S + 1),W
     0085 0903                      1-  943     	BTRSS	STATUS,2
                                    1-  944     	MGOTO	_00315_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
     0087 21FB                      1-  945     	MOVIA	0xfb
     0088 04rr                      1-  946     	SUBAR	_count5S,W
     0089                           1-  947     _00315_DS_:
     0089 0803                      1-  948     	BTRSS	STATUS,0
                                    1-  949     	MGOTO	_00193_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  950     	.line	196, "main.c"; 	overCount = 0;
                                    1-  951     	BANKSEL	_overCount
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 02rr                      1-  952     	CLRR	_overCount
                                    1-  953     	.line	197, "main.c"; 	count5S = 0;
                                    1-  954     	BANKSEL	_count5S
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 02rr                      1-  955     	CLRR	_count5S
     008F 02rr                      1-  956     	CLRR	(_count5S + 1)
                                    1-  957     	.line	198, "main.c"; 	ledDeadTime = 25;
     0090 2119                      1-  958     	MOVIA	0x19
                                    1-  959     	BANKSEL	_ledDeadTime
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1-  960     	MOVAR	_ledDeadTime
                                    1-  961     	.line	199, "main.c"; 	powerOff();
                                    1-  962     	MCALL	_powerOff
     0093 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  963     	MGOTO	_00193_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
     0095                           1-  964     _00192_DS_:
                                    1-  965     	.line	204, "main.c"; 	count5S = 0;
                                    1-  966     	BANKSEL	_count5S
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 02rr                      1-  967     	CLRR	_count5S
     0097 02rr                      1-  968     	CLRR	(_count5S + 1)
                                    1-  969     ;;unsigned compare: left < lit (0x5=5), size=1
     0098                           1-  970     _00193_DS_:
                                    1-  971     	.line	206, "main.c"; 	if(count200ms < 5)
     0098 2105                      1-  972     	MOVIA	0x05
                                    1-  973     	BANKSEL	_count200ms
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1-  974     	SUBAR	_count200ms,W
     009B 0C03                      1-  975     	BTRSC	STATUS,0
                                    1-  976     	MGOTO	_00204_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  977     	.line	208, "main.c"; 	if(workStep > 0 &&cDuty == tempDuty)
                                    1-  978     	BANKSEL	_workStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 01rr                      1-  979     	MOVR	_workStep,W
     009F 0D03                      1-  980     	BTRSC	STATUS,2
                                    1-  981     	MGOTO	_00196_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  982     	BANKSEL	_tempDuty
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1-  983     	MOVR	_tempDuty,W
                                    1-  984     	BANKSEL	_cDuty
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 12rr                      1-  985     	XORAR	_cDuty,W
     00A5 0D03                      1-  986     	BTRSC	STATUS,2
                                    1-  987     	.line	209, "main.c"; 	checkBatAD();
                                    1-  988     	MCALL	_checkBatAD
     00A6 2rrr                      3-   66 m1      LCALL rom_address
     00A7                           1-  989     _00196_DS_:
                                    1-  990     	.line	210, "main.c"; 	if(workStep == 0)
                                    1-  991     	BANKSEL	_workStep
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 01rr                      1-  992     	MOVR	_workStep,W
     00A9 0903                      1-  993     	BTRSS	STATUS,2
                                    1-  994     	MGOTO	_00205_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	.line	211, "main.c"; 	checkBatAD();
                                    1-  996     	MCALL	_checkBatAD
     00AB 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  997     	MGOTO	_00205_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  998     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  999     ;;unsigned compare: left >= lit (0x9=9), size=1
     00AD                           1- 1000     _00204_DS_:
                                    1- 1001     	.line	213, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     00AD 2109                      1- 1002     	MOVIA	0x09
                                    1- 1003     	BANKSEL	_count200ms
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 04rr                      1- 1004     	SUBAR	_count200ms,W
     00B0 0803                      1- 1005     	BTRSS	STATUS,0
                                    1- 1006     	MGOTO	_00205_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1007     ;;unsigned compare: left < lit (0xB=11), size=1
     00B2 210B                      1- 1008     	MOVIA	0x0b
     00B3 04rr                      1- 1009     	SUBAR	_count200ms,W
     00B4 0803                      1- 1010     	BTRSS	STATUS,0
                                    1- 1011     	.line	215, "main.c"; 	checkOutA();
                                    1- 1012     	MCALL	_checkOutA
     00B5 2rrr                      3-   66 m1      LCALL rom_address
     00B6                           1- 1013     _00205_DS_:
                                    1- 1014     	.line	217, "main.c"; 	chrgCtr();
                                    1- 1015     	MCALL	_chrgCtr
     00B6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1016     	.line	218, "main.c"; 	if(chrgFlag == 0)
                                    1- 1017     	BANKSEL	_Status
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 09rr                      1- 1018     	BTRSS	_Status,3
                                    1- 1019     	.line	219, "main.c"; 	keyCtr();
                                    1- 1020     	MCALL	_keyCtr
     00B9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1021     	.line	220, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1022     	BANKSEL	_workStep
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 01rr                      1- 1023     	MOVR	_workStep,W
     00BC 0903                      1- 1024     	BTRSS	STATUS,2
                                    1- 1025     	MGOTO	_00209_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1026     	BANKSEL	_keyCount
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 01rr                      1- 1027     	MOVR	_keyCount,W
     00C0 0903                      1- 1028     	BTRSS	STATUS,2
                                    1- 1029     	MGOTO	_00209_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	BANKSEL	_PORTA
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 0Drr                      1- 1031     	BTRSC	_PORTA,3
                                    1- 1032     	MGOTO	_00209_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1033     	BANKSEL	_ledLightTime
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1034     	MOVR	_ledLightTime,W
     00C7 0903                      1- 1035     	BTRSS	STATUS,2
                                    1- 1036     	MGOTO	_00209_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1037     	BANKSEL	_ledDeadTime
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 1038     	MOVR	_ledDeadTime,W
     00CB 0D03                      1- 1039     	BTRSC	STATUS,2
                                    1- 1040     	.line	223, "main.c"; 	gotoSleep();
                                    1- 1041     	MCALL	_gotoSleep
     00CC 2rrr                      3-   66 m1      LCALL rom_address
     00CD                           1- 1042     _00209_DS_:
                                    1- 1043     	.line	227, "main.c"; 	if(count900s >= 900)
     00CD 2103                      1- 1044     	MOVIA	0x03
                                    1- 1045     	BANKSEL	_count900s
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 04rr                      1- 1046     	SUBAR	(_count900s + 1),W
     00D0 0903                      1- 1047     	BTRSS	STATUS,2
                                    1- 1048     	MGOTO	_00319_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
     00D2 2184                      1- 1049     	MOVIA	0x84
     00D3 04rr                      1- 1050     	SUBAR	_count900s,W
     00D4                           1- 1051     _00319_DS_:
     00D4 0803                      1- 1052     	BTRSS	STATUS,0
                                    1- 1053     	MGOTO	_00217_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1054     	.line	229, "main.c"; 	powerOff();
                                    1- 1055     	MCALL	_powerOff
     00D6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1056     	MGOTO	_00217_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1057     	.line	232, "main.c"; 	}
                                    1- 1058     	RETURN	
     00D8 0010                      3-   40 m1      ret
                                    1- 1059     ; exit point of _main
                                    1- 1061     ;***
                                    1- 1062     ;  pBlock Stats: dbName = C
                                    1- 1063     ;***
                                    1- 1064     ;has an exit
                                    1- 1065     ;6 compiler assigned registers:
                                    1- 1066     ;   r0x103B
                                    1- 1067     ;   STK00
                                    1- 1068     ;   r0x103C
                                    1- 1069     ;   r0x103D
                                    1- 1070     ;   r0x103E
                                    1- 1071     ;   r0x103F
                                    1- 1072     ;; Starting pCode block
                                    1- 1073     .segment "code"; module=main, function=_delay
                                    1- 1075     ;local variable name mapping:
     0000                           1- 1080     _delay:
                                    1- 1081     ; 2 exit points
                                    1- 1082     	.line	792, "main.c"; 	void delay(int count)
                                    1- 1083     	BANKSEL	r0x103B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1084     	MOVAR	r0x103B
     0002 01rr                      1- 1085     	MOVR	STK00,W
                                    1- 1086     	BANKSEL	r0x103C
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1087     	MOVAR	r0x103C
                                    1- 1088     	.line	795, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1089     	MOVIA	0x01
                                    1- 1090     	BANKSEL	r0x103D
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1091     	MOVAR	r0x103D
                                    1- 1092     	BANKSEL	r0x103E
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1093     	CLRR	r0x103E
     000A                           1- 1094     _00756_DS_:
                                    1- 1095     	BANKSEL	r0x103B
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1096     	MOVR	r0x103B,W
     000C 2580                      1- 1097     	ADDIA	0x80
                                    1- 1098     	BANKSEL	r0x103F
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1099     	MOVAR	r0x103F
                                    1- 1100     	BANKSEL	r0x103E
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1101     	MOVR	r0x103E,W
     0011 2580                      1- 1102     	ADDIA	0x80
                                    1- 1103     	BANKSEL	r0x103F
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1104     	SUBAR	r0x103F,W
     0014 0903                      1- 1105     	BTRSS	STATUS,2
                                    1- 1106     	MGOTO	_00767_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1107     	BANKSEL	r0x103D
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1108     	MOVR	r0x103D,W
                                    1- 1109     	BANKSEL	r0x103C
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1110     	SUBAR	r0x103C,W
     001A                           1- 1111     _00767_DS_:
     001A 0803                      1- 1112     	BTRSS	STATUS,0
                                    1- 1113     	MGOTO	_00758_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1114     	BANKSEL	r0x103D
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1115     	INCR	r0x103D,F
     001E 0903                      1- 1116     	BTRSS	STATUS,2
                                    1- 1117     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1118     	BANKSEL	r0x103E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1119     	INCR	r0x103E,F
     0022                           1- 1120     _00001_DS_:
                                    1- 1121     	MGOTO	_00756_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1122     _00758_DS_:
                                    1- 1123     	.line	797, "main.c"; 	}
                                    1- 1124     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1125     ; exit point of _delay
                                    1- 1127     ;***
                                    1- 1128     ;  pBlock Stats: dbName = C
                                    1- 1129     ;***
                                    1- 1130     ;has an exit
                                    1- 1131     ;; Starting pCode block
                                    1- 1132     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1134     _F_wait_eoc:
                                    1- 1135     ; 2 exit points
     0000                           1- 1136     _00749_DS_:
                                    1- 1137     	.line	787, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1138     	BTRSS	_ADMDbits,5
                                    1- 1139     	MGOTO	_00749_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1140     	.line	789, "main.c"; 	}
                                    1- 1141     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1142     ; exit point of _F_wait_eoc
                                    1- 1144     ;***
                                    1- 1145     ;  pBlock Stats: dbName = C
                                    1- 1146     ;***
                                    1- 1147     ;has an exit
                                    1- 1148     ;functions called:
                                    1- 1149     ;   _delay
                                    1- 1150     ;   _F_wait_eoc
                                    1- 1151     ;   _delay
                                    1- 1152     ;   _F_wait_eoc
                                    1- 1153     ;7 compiler assigned registers:
                                    1- 1154     ;   r0x1040
                                    1- 1155     ;   STK00
                                    1- 1156     ;   r0x1041
                                    1- 1157     ;   r0x1042
                                    1- 1158     ;   r0x1043
                                    1- 1159     ;   r0x1044
                                    1- 1160     ;   r0x1045
                                    1- 1161     ;; Starting pCode block
                                    1- 1162     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1164     ;local variable name mapping:
     0000                           1- 1167     _F_AIN2_Convert:
                                    1- 1168     ; 2 exit points
                                    1- 1169     	.line	770, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1170     	BANKSEL	r0x1040
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1171     	MOVAR	r0x1040
                                    1- 1172     	.line	772, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1173     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1174     	CLRR	_R_AIN2_DATA_LB
                                    1- 1175     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1176     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1177     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1178     	.line	774, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1179     	MOVIA	0x92
     0008 00rr                      1- 1180     	MOVAR	_ADMD
                                    1- 1181     	.line	775, "main.c"; 	delay(200);	
     0009 21C8                      1- 1182     	MOVIA	0xc8
     000A 00rr                      1- 1183     	MOVAR	STK00
     000B 2100                      1- 1184     	MOVIA	0x00
                                    1- 1185     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1186     	.line	776, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1187     	MOVIA	0x01
                                    1- 1188     	BANKSEL	r0x1041
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1189     	MOVAR	r0x1041
     0010                           1- 1190     _00742_DS_:
                                    1- 1191     	BANKSEL	r0x1041
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1192     	MOVR	r0x1041,W
                                    1- 1193     	BANKSEL	r0x1040
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1194     	SUBAR	r0x1040,W
     0014 0803                      1- 1195     	BTRSS	STATUS,0
                                    1- 1196     	MGOTO	_00744_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1197     	.line	778, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1198     	BSR	_ADMDbits,6
                                    1- 1199     	.line	779, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1200     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1201     	.line	780, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1202     	MOVIA	0x0f
     0019 10rr                      1- 1203     	ANDAR	_ADR,W
                                    1- 1204     ;;3	MOVAR	r0x1042
                                    1- 1205     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1206     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1207     	.line	781, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1208     	MOVR	_ADD,W
                                    1- 1209     	BANKSEL	r0x1042
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1210     	MOVAR	r0x1042
                                    1- 1211     ;;1	CLRR	r0x1043
                                    1- 1212     ;;109	MOVR	r0x1042,W
                                    1- 1213     ;;107	MOVAR	r0x1044
     001F 2100                      1- 1214     	MOVIA	0x00
                                    1- 1215     	BANKSEL	r0x1045
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1216     	MOVAR	r0x1045
                                    1- 1217     ;;108	MOVR	r0x1044,W
                                    1- 1218     	BANKSEL	r0x1042
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1219     	MOVR	r0x1042,W
                                    1- 1220     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1221     	ADDAR	_R_AIN2_DATA,F
                                    1- 1222     	BANKSEL	r0x1045
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1223     	MOVR	r0x1045,W
     0028 0C03                      1- 1224     	BTRSC	STATUS,0
     0029 05rr                      1- 1225     	INCR	r0x1045,W
     002A 0D03                      1- 1226     	BTRSC	STATUS,2
                                    1- 1227     	MGOTO	_00002_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1228     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1229     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1230     _00002_DS_:
                                    1- 1231     	.line	776, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1232     	BANKSEL	r0x1041
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1233     	INCR	r0x1041,F
                                    1- 1234     	MGOTO	_00742_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1235     _00744_DS_:
                                    1- 1236     	.line	783, "main.c"; 	}
                                    1- 1237     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1238     ; exit point of _F_AIN2_Convert
                                    1- 1240     ;***
                                    1- 1241     ;  pBlock Stats: dbName = C
                                    1- 1242     ;***
                                    1- 1243     ;has an exit
                                    1- 1244     ;functions called:
                                    1- 1245     ;   _delay
                                    1- 1246     ;   _F_wait_eoc
                                    1- 1247     ;   _delay
                                    1- 1248     ;   _F_wait_eoc
                                    1- 1249     ;7 compiler assigned registers:
                                    1- 1250     ;   r0x1046
                                    1- 1251     ;   STK00
                                    1- 1252     ;   r0x1047
                                    1- 1253     ;   r0x1048
                                    1- 1254     ;   r0x1049
                                    1- 1255     ;   r0x104A
                                    1- 1256     ;   r0x104B
                                    1- 1257     ;; Starting pCode block
                                    1- 1258     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1260     ;local variable name mapping:
     0000                           1- 1263     _F_AIN4_Convert:
                                    1- 1264     ; 2 exit points
                                    1- 1265     	.line	755, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1266     	BANKSEL	r0x1046
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1267     	MOVAR	r0x1046
                                    1- 1268     	.line	757, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1269     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1270     	CLRR	_R_AIN4_DATA_LB
                                    1- 1271     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1272     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1273     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1274     	.line	759, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1275     	MOVIA	0x94
     0008 00rr                      1- 1276     	MOVAR	_ADMD
                                    1- 1277     	.line	760, "main.c"; 	delay(200);	
     0009 21C8                      1- 1278     	MOVIA	0xc8
     000A 00rr                      1- 1279     	MOVAR	STK00
     000B 2100                      1- 1280     	MOVIA	0x00
                                    1- 1281     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1282     	.line	761, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1283     	MOVIA	0x01
                                    1- 1284     	BANKSEL	r0x1047
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1285     	MOVAR	r0x1047
     0010                           1- 1286     _00733_DS_:
                                    1- 1287     	BANKSEL	r0x1047
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1288     	MOVR	r0x1047,W
                                    1- 1289     	BANKSEL	r0x1046
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1290     	SUBAR	r0x1046,W
     0014 0803                      1- 1291     	BTRSS	STATUS,0
                                    1- 1292     	MGOTO	_00735_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1293     	.line	763, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1294     	BSR	_ADMDbits,6
                                    1- 1295     	.line	764, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1296     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1297     	.line	765, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1298     	MOVIA	0x0f
     0019 10rr                      1- 1299     	ANDAR	_ADR,W
                                    1- 1300     ;;3	MOVAR	r0x1048
                                    1- 1301     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1302     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1303     	.line	766, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1304     	MOVR	_ADD,W
                                    1- 1305     	BANKSEL	r0x1048
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1306     	MOVAR	r0x1048
                                    1- 1307     ;;1	CLRR	r0x1049
                                    1- 1308     ;;106	MOVR	r0x1048,W
                                    1- 1309     ;;104	MOVAR	r0x104A
     001F 2100                      1- 1310     	MOVIA	0x00
                                    1- 1311     	BANKSEL	r0x104B
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1312     	MOVAR	r0x104B
                                    1- 1313     ;;105	MOVR	r0x104A,W
                                    1- 1314     	BANKSEL	r0x1048
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1315     	MOVR	r0x1048,W
                                    1- 1316     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1317     	ADDAR	_R_AIN4_DATA,F
                                    1- 1318     	BANKSEL	r0x104B
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1319     	MOVR	r0x104B,W
     0028 0C03                      1- 1320     	BTRSC	STATUS,0
     0029 05rr                      1- 1321     	INCR	r0x104B,W
     002A 0D03                      1- 1322     	BTRSC	STATUS,2
                                    1- 1323     	MGOTO	_00003_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1324     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1325     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1326     _00003_DS_:
                                    1- 1327     	.line	761, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1328     	BANKSEL	r0x1047
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1329     	INCR	r0x1047,F
                                    1- 1330     	MGOTO	_00733_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1331     _00735_DS_:
                                    1- 1332     	.line	768, "main.c"; 	}
                                    1- 1333     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1334     ; exit point of _F_AIN4_Convert
                                    1- 1336     ;***
                                    1- 1337     ;  pBlock Stats: dbName = C
                                    1- 1338     ;***
                                    1- 1339     ;has an exit
                                    1- 1340     ;functions called:
                                    1- 1341     ;   _F_AIN4_Convert
                                    1- 1342     ;   __mulchar
                                    1- 1343     ;   __mulchar
                                    1- 1344     ;   _F_AIN4_Convert
                                    1- 1345     ;   __mulchar
                                    1- 1346     ;   __mulchar
                                    1- 1347     ;5 compiler assigned registers:
                                    1- 1348     ;   r0x104C
                                    1- 1349     ;   r0x104D
                                    1- 1350     ;   r0x104E
                                    1- 1351     ;   r0x104F
                                    1- 1352     ;   STK00
                                    1- 1353     ;; Starting pCode block
                                    1- 1354     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1356     _checkOutA:
                                    1- 1357     ; 2 exit points
                                    1- 1358     	.line	685, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1359     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1360     	CLRR	_R_AIN4_DATA_LB
                                    1- 1361     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1362     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1363     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1364     	.line	686, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1365     	MOVIA	0x08
                                    1- 1366     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1367     	.line	687, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1368     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1369     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1370     	ANDIA	0xf0
     000A 00rr                      1- 1371     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1372     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1373     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1374     	ANDIA	0x0f
     000E 11rr                      1- 1375     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1376     	XORAR	_R_AIN4_DATA,F
                                    1- 1377     	.line	688, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1378     	MOVIA	0xf0
                                    1- 1379     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1380     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1381     	.line	689, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1382     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1383     	BANKSEL	r0x104C
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1384     	MOVAR	r0x104C
                                    1- 1385     ;;1	CLRR	r0x104D
                                    1- 1386     ;;103	MOVR	r0x104C,W
                                    1- 1387     ;;101	MOVAR	r0x104E
     0016 2100                      1- 1388     	MOVIA	0x00
                                    1- 1389     	BANKSEL	r0x104F
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1390     	MOVAR	r0x104F
                                    1- 1391     ;;102	MOVR	r0x104E,W
                                    1- 1392     	BANKSEL	r0x104C
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1393     	MOVR	r0x104C,W
                                    1- 1394     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1395     	ADDAR	_R_AIN4_DATA,F
                                    1- 1396     	BANKSEL	r0x104F
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1397     	MOVR	r0x104F,W
     001F 0C03                      1- 1398     	BTRSC	STATUS,0
     0020 05rr                      1- 1399     	INCR	r0x104F,W
     0021 0D03                      1- 1400     	BTRSC	STATUS,2
                                    1- 1401     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1402     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1403     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1404     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1405     _00004_DS_:
                                    1- 1406     	.line	690, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1407     	BCR	STATUS,0
                                    1- 1408     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1409     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1410     	RRR	_R_AIN4_DATA,F
                                    1- 1411     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1412     	BCR	STATUS,0
     002A 13rr                      1- 1413     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1414     	RRR	_R_AIN4_DATA,F
                                    1- 1415     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1416     	BCR	STATUS,0
     002D 13rr                      1- 1417     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1418     	RRR	_R_AIN4_DATA,F
                                    1- 1419     	.line	691, "main.c"; 	if(debug)
                                    1- 1420     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1421     	MOVR	_debug,W
     0031 0D03                      1- 1422     	BTRSC	STATUS,2
                                    1- 1423     	MGOTO	_00644_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1424     	.line	692, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 212D                      1- 1425     	MOVIA	0x2d
                                    1- 1426     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1427     	MOVAR	_R_AIN4_DATA
     0036 2101                      1- 1428     	MOVIA	0x01
     0037 00rr                      1- 1429     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1430     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1431     _00644_DS_:
                                    1- 1432     	.line	693, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0038 2106                      1- 1433     	MOVIA	0x06
                                    1- 1434     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1435     	SUBAR	_workStep,W
     003B 0C03                      1- 1436     	BTRSC	STATUS,0
                                    1- 1437     	MGOTO	_00671_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1438     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1439     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1440     	MOVIA	0x00
                                    1- 1441     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1442     	SUBAR	(_R_AIN4_DATA + 1),W
     0040 0903                      1- 1443     	BTRSS	STATUS,2
                                    1- 1444     	MGOTO	_00719_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21C9                      1- 1445     	MOVIA	0xc9
     0043 04rr                      1- 1446     	SUBAR	_R_AIN4_DATA,W
     0044                           1- 1447     _00719_DS_:
     0044 0803                      1- 1448     	BTRSS	STATUS,0
                                    1- 1449     	MGOTO	_00671_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1450     	.line	695, "main.c"; 	if(++overCount > 5)
                                    1- 1451     	BANKSEL	_overCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1- 1452     	INCR	_overCount,F
                                    1- 1453     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1454     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1455     	MOVIA	0x06
     0049 04rr                      1- 1456     	SUBAR	_overCount,W
     004A 0803                      1- 1457     	BTRSS	STATUS,0
                                    1- 1458     	MGOTO	_00674_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1459     	.line	697, "main.c"; 	overCount = 5;
     004C 2105                      1- 1460     	MOVIA	0x05
     004D 00rr                      1- 1461     	MOVAR	_overCount
                                    1- 1462     	MGOTO	_00674_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1463     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1464     ;;unsigned compare: left >= lit (0x191=401), size=2
     004F                           1- 1465     _00671_DS_:
                                    1- 1466     	.line	700, "main.c"; 	else if(R_AIN4_DATA > 400)
     004F 2101                      1- 1467     	MOVIA	0x01
                                    1- 1468     	BANKSEL	_R_AIN4_DATA
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 04rr                      1- 1469     	SUBAR	(_R_AIN4_DATA + 1),W
     0052 0903                      1- 1470     	BTRSS	STATUS,2
                                    1- 1471     	MGOTO	_00721_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054 2191                      1- 1472     	MOVIA	0x91
     0055 04rr                      1- 1473     	SUBAR	_R_AIN4_DATA,W
     0056                           1- 1474     _00721_DS_:
     0056 0803                      1- 1475     	BTRSS	STATUS,0
                                    1- 1476     	MGOTO	_00668_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1477     	.line	702, "main.c"; 	if(++overCount > 5)
                                    1- 1478     	BANKSEL	_overCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 05rr                      1- 1479     	INCR	_overCount,F
                                    1- 1480     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1481     ;;unsigned compare: left >= lit (0x6=6), size=1
     005A 2106                      1- 1482     	MOVIA	0x06
     005B 04rr                      1- 1483     	SUBAR	_overCount,W
     005C 0803                      1- 1484     	BTRSS	STATUS,0
                                    1- 1485     	MGOTO	_00674_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1486     	.line	704, "main.c"; 	overCount = 5;
     005E 2105                      1- 1487     	MOVIA	0x05
     005F 00rr                      1- 1488     	MOVAR	_overCount
                                    1- 1489     	MGOTO	_00674_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1490     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1491     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0061                           1- 1492     _00668_DS_:
                                    1- 1493     	.line	712, "main.c"; 	else if(R_AIN4_DATA > 45)
     0061 2100                      1- 1494     	MOVIA	0x00
                                    1- 1495     	BANKSEL	_R_AIN4_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 1496     	SUBAR	(_R_AIN4_DATA + 1),W
     0064 0903                      1- 1497     	BTRSS	STATUS,2
                                    1- 1498     	MGOTO	_00723_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066 212E                      1- 1499     	MOVIA	0x2e
     0067 04rr                      1- 1500     	SUBAR	_R_AIN4_DATA,W
     0068                           1- 1501     _00723_DS_:
     0068 0803                      1- 1502     	BTRSS	STATUS,0
                                    1- 1503     	MGOTO	_00665_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1504     	.line	714, "main.c"; 	if(overCount > 0)
                                    1- 1505     	BANKSEL	_overCount
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 1506     	MOVR	_overCount,W
     006C 0903                      1- 1507     	BTRSS	STATUS,2
                                    1- 1508     	.line	716, "main.c"; 	overCount--;
     006D 06rr                      1- 1509     	DECR	_overCount,F
                                    1- 1510     	.line	719, "main.c"; 	tempDuty = 70 + workStep*5;
     006E 2105                      1- 1511     	MOVIA	0x05
     006F 00rr                      1- 1512     	MOVAR	STK00
                                    1- 1513     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 1514     	MOVR	_workStep,W
                                    1- 1515     	MCALL	__mulchar
     0072 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1516     	BANKSEL	r0x104C
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 1517     	MOVAR	r0x104C
     0075 2146                      1- 1518     	MOVIA	0x46
     0076 03rr                      1- 1519     	ADDAR	r0x104C,W
                                    1- 1520     	BANKSEL	_tempDuty
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 1521     	MOVAR	_tempDuty
                                    1- 1522     	.line	722, "main.c"; 	if(workStep == 1)
                                    1- 1523     	BANKSEL	_workStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 1524     	MOVR	_workStep,W
     007B 2401                      1- 1525     	XORIA	0x01
     007C 0903                      1- 1526     	BTRSS	STATUS,2
                                    1- 1527     	MGOTO	_00654_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1528     	.line	723, "main.c"; 	tempDuty = tempDuty + 2;
                                    1- 1529     	BANKSEL	_tempDuty
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 05rr                      1- 1530     	INCR	_tempDuty,F
     0080 05rr                      1- 1531     	INCR	_tempDuty,F
                                    1- 1532     	MGOTO	_00674_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
     0082                           1- 1533     _00654_DS_:
                                    1- 1534     	.line	724, "main.c"; 	else if(workStep == 2)
                                    1- 1535     	BANKSEL	_workStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1- 1536     	MOVR	_workStep,W
     0084 2402                      1- 1537     	XORIA	0x02
     0085 0903                      1- 1538     	BTRSS	STATUS,2
                                    1- 1539     	MGOTO	_00674_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1540     	.line	725, "main.c"; 	tempDuty = tempDuty + 1;
                                    1- 1541     	BANKSEL	_tempDuty
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 05rr                      1- 1542     	INCR	_tempDuty,F
                                    1- 1543     	MGOTO	_00674_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A                           1- 1544     _00665_DS_:
                                    1- 1545     	.line	729, "main.c"; 	if(overCount > 0)
                                    1- 1546     	BANKSEL	_overCount
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 01rr                      1- 1547     	MOVR	_overCount,W
     008C 0903                      1- 1548     	BTRSS	STATUS,2
                                    1- 1549     	.line	731, "main.c"; 	overCount--;
     008D 06rr                      1- 1550     	DECR	_overCount,F
                                    1- 1551     	.line	733, "main.c"; 	if(R_AIN4_DATA > 40 && workStep < 4)
     008E 2100                      1- 1552     	MOVIA	0x00
                                    1- 1553     	BANKSEL	_R_AIN4_DATA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 1554     	SUBAR	(_R_AIN4_DATA + 1),W
     0091 0903                      1- 1555     	BTRSS	STATUS,2
                                    1- 1556     	MGOTO	_00724_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 2129                      1- 1557     	MOVIA	0x29
     0094 04rr                      1- 1558     	SUBAR	_R_AIN4_DATA,W
     0095                           1- 1559     _00724_DS_:
     0095 0803                      1- 1560     	BTRSS	STATUS,0
                                    1- 1561     	MGOTO	_00661_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1562     ;;unsigned compare: left < lit (0x4=4), size=1
     0097 2104                      1- 1563     	MOVIA	0x04
                                    1- 1564     	BANKSEL	_workStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 04rr                      1- 1565     	SUBAR	_workStep,W
     009A 0C03                      1- 1566     	BTRSC	STATUS,0
                                    1- 1567     	MGOTO	_00661_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1568     	.line	735, "main.c"; 	tempDuty = 70 + workStep*5;
     009C 2105                      1- 1569     	MOVIA	0x05
     009D 00rr                      1- 1570     	MOVAR	STK00
     009E 01rr                      1- 1571     	MOVR	_workStep,W
                                    1- 1572     	MCALL	__mulchar
     009F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1573     	BANKSEL	r0x104C
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 1574     	MOVAR	r0x104C
     00A2 2146                      1- 1575     	MOVIA	0x46
     00A3 03rr                      1- 1576     	ADDAR	r0x104C,W
                                    1- 1577     	BANKSEL	_tempDuty
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1578     	MOVAR	_tempDuty
                                    1- 1579     	MGOTO	_00674_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1580     ;;unsigned compare: left < lit (0x44=68), size=2
     00A7                           1- 1581     _00661_DS_:
                                    1- 1582     	.line	738, "main.c"; 	else if(R_AIN4_DATA < 68)
     00A7 2100                      1- 1583     	MOVIA	0x00
                                    1- 1584     	BANKSEL	_R_AIN4_DATA
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 1585     	SUBAR	(_R_AIN4_DATA + 1),W
     00AA 0903                      1- 1586     	BTRSS	STATUS,2
                                    1- 1587     	MGOTO	_00726_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC 2144                      1- 1588     	MOVIA	0x44
     00AD 04rr                      1- 1589     	SUBAR	_R_AIN4_DATA,W
     00AE                           1- 1590     _00726_DS_:
     00AE 0C03                      1- 1591     	BTRSC	STATUS,0
                                    1- 1592     	MGOTO	_00674_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1593     	.line	741, "main.c"; 	tempDuty = maxDuty;
                                    1- 1594     	BANKSEL	_maxDuty
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 01rr                      1- 1595     	MOVR	_maxDuty,W
                                    1- 1596     	BANKSEL	_tempDuty
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1597     	MOVAR	_tempDuty
     00B4                           1- 1598     _00674_DS_:
                                    1- 1599     	.line	749, "main.c"; 	}
                                    1- 1600     	RETURN	
     00B4 0010                      3-   40 m1      ret
                                    1- 1601     ; exit point of _checkOutA
                                    1- 1603     ;***
                                    1- 1604     ;  pBlock Stats: dbName = C
                                    1- 1605     ;***
                                    1- 1606     ;has an exit
                                    1- 1607     ;functions called:
                                    1- 1608     ;   _F_AIN2_Convert
                                    1- 1609     ;   _F_AIN2_Convert
                                    1- 1610     ;6 compiler assigned registers:
                                    1- 1611     ;   r0x1050
                                    1- 1612     ;   r0x1051
                                    1- 1613     ;   r0x1052
                                    1- 1614     ;   r0x1053
                                    1- 1615     ;   r0x1054
                                    1- 1616     ;   r0x1055
                                    1- 1617     ;; Starting pCode block
                                    1- 1618     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1620     _checkBatAD:
                                    1- 1621     ; 2 exit points
                                    1- 1622     	.line	635, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1623     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1624     	CLRR	_R_AIN2_DATA_LB
                                    1- 1625     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1626     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1627     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1628     	.line	636, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1629     	MOVIA	0x08
                                    1- 1630     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1631     	.line	637, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1632     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1633     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1634     	ANDIA	0xf0
     000A 00rr                      1- 1635     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1636     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1637     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1638     	ANDIA	0x0f
     000E 11rr                      1- 1639     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1640     	XORAR	_R_AIN2_DATA,F
                                    1- 1641     	.line	638, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1642     	MOVIA	0xf0
                                    1- 1643     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1644     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1645     	.line	639, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1646     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1647     	BANKSEL	r0x1052
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1648     	MOVAR	r0x1052
                                    1- 1649     	BANKSEL	r0x1050
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1650     	MOVAR	r0x1050
                                    1- 1651     	BANKSEL	r0x1051
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1652     	CLRR	r0x1051
                                    1- 1653     ;;110	MOVR	r0x1050,W
     001A 2100                      1- 1654     	MOVIA	0x00
                                    1- 1655     	BANKSEL	r0x1053
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1656     	MOVAR	r0x1053
                                    1- 1657     	BANKSEL	r0x1052
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1658     	MOVR	r0x1052,W
                                    1- 1659     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1660     	ADDAR	_R_AIN2_DATA,F
                                    1- 1661     	BANKSEL	r0x1053
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1662     	MOVR	r0x1053,W
     0023 0C03                      1- 1663     	BTRSC	STATUS,0
     0024 05rr                      1- 1664     	INCR	r0x1053,W
     0025 0D03                      1- 1665     	BTRSC	STATUS,2
                                    1- 1666     	MGOTO	_00005_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1667     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1668     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1669     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1670     _00005_DS_:
                                    1- 1671     	.line	640, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1672     	BCR	STATUS,0
                                    1- 1673     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1674     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1675     	RRR	_R_AIN2_DATA,F
                                    1- 1676     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1677     	BCR	STATUS,0
     002E 13rr                      1- 1678     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1679     	RRR	_R_AIN2_DATA,F
                                    1- 1680     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1681     	BCR	STATUS,0
     0031 13rr                      1- 1682     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1683     	RRR	_R_AIN2_DATA,F
                                    1- 1684     	.line	641, "main.c"; 	if(debug)
                                    1- 1685     	BANKSEL	_debug
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1686     	MOVR	_debug,W
     0035 0D03                      1- 1687     	BTRSC	STATUS,2
                                    1- 1688     	MGOTO	_00586_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1689     	.line	642, "main.c"; 	R_AIN2_DATA = BATTLE;
     0037 210E                      1- 1690     	MOVIA	0x0e
                                    1- 1691     	BANKSEL	_R_AIN2_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1692     	MOVAR	_R_AIN2_DATA
     003A 2106                      1- 1693     	MOVIA	0x06
     003B 00rr                      1- 1694     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1695     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1696     ;;unsigned compare: left >= lit (0x48E=1166), size=2
     003C                           1- 1697     _00586_DS_:
                                    1- 1698     	.line	644, "main.c"; 	if(R_AIN2_DATA <= 1165)
     003C 2104                      1- 1699     	MOVIA	0x04
                                    1- 1700     	BANKSEL	_R_AIN2_DATA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1701     	SUBAR	(_R_AIN2_DATA + 1),W
     003F 0903                      1- 1702     	BTRSS	STATUS,2
                                    1- 1703     	MGOTO	_00635_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 218E                      1- 1704     	MOVIA	0x8e
     0042 04rr                      1- 1705     	SUBAR	_R_AIN2_DATA,W
     0043                           1- 1706     _00635_DS_:
     0043 0C03                      1- 1707     	BTRSC	STATUS,0
                                    1- 1708     	MGOTO	_00588_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1709     	.line	646, "main.c"; 	pwStep = 0;
                                    1- 1710     	BANKSEL	_pwStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 1711     	CLRR	_pwStep
                                    1- 1712     	.line	647, "main.c"; 	R_AIN2_DATA = 1165;
     0047 218D                      1- 1713     	MOVIA	0x8d
                                    1- 1714     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 1715     	MOVAR	_R_AIN2_DATA
     004A 2104                      1- 1716     	MOVIA	0x04
     004B 00rr                      1- 1717     	MOVAR	(_R_AIN2_DATA + 1)
     004C                           1- 1718     _00588_DS_:
                                    1- 1719     	.line	650, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1165;
     004C 2173                      1- 1720     	MOVIA	0x73
                                    1- 1721     	BANKSEL	_R_AIN2_DATA
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 03rr                      1- 1722     	ADDAR	_R_AIN2_DATA,F
     004F 21FB                      1- 1723     	MOVIA	0xfb
     0050 0C03                      1- 1724     	BTRSC	STATUS,0
     0051 21FC                      1- 1725     	MOVIA	0xfc
     0052 03rr                      1- 1726     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1727     ;;unsigned compare: left < lit (0x190=400), size=2
                                    1- 1728     	.line	651, "main.c"; 	if(R_AIN2_DATA >= 400)
     0053 2101                      1- 1729     	MOVIA	0x01
     0054 04rr                      1- 1730     	SUBAR	(_R_AIN2_DATA + 1),W
     0055 0903                      1- 1731     	BTRSS	STATUS,2
                                    1- 1732     	MGOTO	_00636_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057 2190                      1- 1733     	MOVIA	0x90
     0058 04rr                      1- 1734     	SUBAR	_R_AIN2_DATA,W
     0059                           1- 1735     _00636_DS_:
     0059 0803                      1- 1736     	BTRSS	STATUS,0
                                    1- 1737     	MGOTO	_00596_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1738     	.line	654, "main.c"; 	batValue = 75+(R_AIN2_DATA-300)/4;
     005B 21D4                      1- 1739     	MOVIA	0xd4
                                    1- 1740     	BANKSEL	_R_AIN2_DATA
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 03rr                      1- 1741     	ADDAR	_R_AIN2_DATA,W
                                    1- 1742     	BANKSEL	r0x1050
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 1743     	MOVAR	r0x1050
     0060 21FE                      1- 1744     	MOVIA	0xfe
                                    1- 1745     	BANKSEL	r0x1051
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 1746     	MOVAR	r0x1051
                                    1- 1747     	BANKSEL	_R_AIN2_DATA
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 1748     	MOVR	(_R_AIN2_DATA + 1),W
     0065 0C03                      1- 1749     	BTRSC	STATUS,0
     0066 05rr                      1- 1750     	INCR	(_R_AIN2_DATA + 1),W
     0067 0D03                      1- 1751     	BTRSC	STATUS,2
                                    1- 1752     	MGOTO	_00006_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1753     	BANKSEL	r0x1051
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 03rr                      1- 1754     	ADDAR	r0x1051,F
                                    1- 1755     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     006B                           1- 1756     _00006_DS_:
     006B 1C03                      1- 1757     	BCR	STATUS,0
                                    1- 1758     	BANKSEL	r0x1051
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 13rr                      1- 1759     	RRR	r0x1051,W
                                    1- 1760     	BANKSEL	r0x1053
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1761     	MOVAR	r0x1053
                                    1- 1762     	BANKSEL	r0x1050
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 13rr                      1- 1763     	RRR	r0x1050,W
                                    1- 1764     	BANKSEL	r0x1052
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1765     	MOVAR	r0x1052
                                    1- 1766     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0074 1C03                      1- 1767     	BCR	STATUS,0
                                    1- 1768     	BANKSEL	r0x1053
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 13rr                      1- 1769     	RRR	r0x1053,F
                                    1- 1770     	BANKSEL	r0x1052
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 13rr                      1- 1771     	RRR	r0x1052,F
     0079 01rr                      1- 1772     	MOVR	r0x1052,W
                                    1- 1773     	BANKSEL	r0x1050
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1- 1774     	MOVAR	r0x1050
     007C 214B                      1- 1775     	MOVIA	0x4b
     007D 03rr                      1- 1776     	ADDAR	r0x1050,W
                                    1- 1777     	BANKSEL	_batValue
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 1778     	MOVAR	_batValue
                                    1- 1779     	MGOTO	_00597_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1780     ;;unsigned compare: left < lit (0x12C=300), size=2
     0081                           1- 1781     _00596_DS_:
                                    1- 1782     	.line	656, "main.c"; 	else if(R_AIN2_DATA >= 300)
     0081 2101                      1- 1783     	MOVIA	0x01
                                    1- 1784     	BANKSEL	_R_AIN2_DATA
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 04rr                      1- 1785     	SUBAR	(_R_AIN2_DATA + 1),W
     0084 0903                      1- 1786     	BTRSS	STATUS,2
                                    1- 1787     	MGOTO	_00637_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086 212C                      1- 1788     	MOVIA	0x2c
     0087 04rr                      1- 1789     	SUBAR	_R_AIN2_DATA,W
     0088                           1- 1790     _00637_DS_:
     0088 0803                      1- 1791     	BTRSS	STATUS,0
                                    1- 1792     	MGOTO	_00593_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1793     	.line	658, "main.c"; 	batValue = 50+(R_AIN2_DATA-300)/2;
     008A 21D4                      1- 1794     	MOVIA	0xd4
                                    1- 1795     	BANKSEL	_R_AIN2_DATA
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 03rr                      1- 1796     	ADDAR	_R_AIN2_DATA,W
                                    1- 1797     	BANKSEL	r0x1050
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 1798     	MOVAR	r0x1050
     008F 21FE                      1- 1799     	MOVIA	0xfe
                                    1- 1800     	BANKSEL	r0x1052
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 00rr                      1- 1801     	MOVAR	r0x1052
                                    1- 1802     	BANKSEL	_R_AIN2_DATA
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1- 1803     	MOVR	(_R_AIN2_DATA + 1),W
     0094 0C03                      1- 1804     	BTRSC	STATUS,0
     0095 05rr                      1- 1805     	INCR	(_R_AIN2_DATA + 1),W
     0096 0D03                      1- 1806     	BTRSC	STATUS,2
                                    1- 1807     	MGOTO	_00007_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1808     	BANKSEL	r0x1052
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 03rr                      1- 1809     	ADDAR	r0x1052,F
                                    1- 1810     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     009A                           1- 1811     _00007_DS_:
     009A 1C03                      1- 1812     	BCR	STATUS,0
                                    1- 1813     	BANKSEL	r0x1052
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 13rr                      1- 1814     	RRR	r0x1052,W
                                    1- 1815     	BANKSEL	r0x1054
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 1816     	MOVAR	r0x1054
                                    1- 1817     	BANKSEL	r0x1050
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 13rr                      1- 1818     	RRR	r0x1050,W
                                    1- 1819     	BANKSEL	r0x1053
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 00rr                      1- 1820     	MOVAR	r0x1053
                                    1- 1821     	BANKSEL	r0x1050
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 00rr                      1- 1822     	MOVAR	r0x1050
     00A5 2132                      1- 1823     	MOVIA	0x32
     00A6 03rr                      1- 1824     	ADDAR	r0x1050,W
                                    1- 1825     	BANKSEL	_batValue
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 00rr                      1- 1826     	MOVAR	_batValue
                                    1- 1827     	MGOTO	_00597_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1828     ;;unsigned compare: left < lit (0xC8=200), size=2
     00AA                           1- 1829     _00593_DS_:
                                    1- 1830     	.line	661, "main.c"; 	else if(R_AIN2_DATA >= 200)
     00AA 2100                      1- 1831     	MOVIA	0x00
                                    1- 1832     	BANKSEL	_R_AIN2_DATA
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 04rr                      1- 1833     	SUBAR	(_R_AIN2_DATA + 1),W
     00AD 0903                      1- 1834     	BTRSS	STATUS,2
                                    1- 1835     	MGOTO	_00638_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF 21C8                      1- 1836     	MOVIA	0xc8
     00B0 04rr                      1- 1837     	SUBAR	_R_AIN2_DATA,W
     00B1                           1- 1838     _00638_DS_:
     00B1 0803                      1- 1839     	BTRSS	STATUS,0
                                    1- 1840     	MGOTO	_00590_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1841     	.line	663, "main.c"; 	batValue = 25+(R_AIN2_DATA-200)/4;
     00B3 2138                      1- 1842     	MOVIA	0x38
                                    1- 1843     	BANKSEL	_R_AIN2_DATA
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 03rr                      1- 1844     	ADDAR	_R_AIN2_DATA,W
                                    1- 1845     	BANKSEL	r0x1050
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1846     	MOVAR	r0x1050
     00B8 21FF                      1- 1847     	MOVIA	0xff
                                    1- 1848     	BANKSEL	r0x1053
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 1849     	MOVAR	r0x1053
                                    1- 1850     	BANKSEL	_R_AIN2_DATA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 01rr                      1- 1851     	MOVR	(_R_AIN2_DATA + 1),W
     00BD 0C03                      1- 1852     	BTRSC	STATUS,0
     00BE 05rr                      1- 1853     	INCR	(_R_AIN2_DATA + 1),W
     00BF 0D03                      1- 1854     	BTRSC	STATUS,2
                                    1- 1855     	MGOTO	_00008_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1856     	BANKSEL	r0x1053
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 03rr                      1- 1857     	ADDAR	r0x1053,F
                                    1- 1858     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00C3                           1- 1859     _00008_DS_:
     00C3 1C03                      1- 1860     	BCR	STATUS,0
                                    1- 1861     	BANKSEL	r0x1053
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 13rr                      1- 1862     	RRR	r0x1053,W
                                    1- 1863     	BANKSEL	r0x1055
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 00rr                      1- 1864     	MOVAR	r0x1055
                                    1- 1865     	BANKSEL	r0x1050
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 13rr                      1- 1866     	RRR	r0x1050,W
                                    1- 1867     	BANKSEL	r0x1054
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 1868     	MOVAR	r0x1054
                                    1- 1869     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00CC 1C03                      1- 1870     	BCR	STATUS,0
                                    1- 1871     	BANKSEL	r0x1055
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 13rr                      1- 1872     	RRR	r0x1055,F
                                    1- 1873     	BANKSEL	r0x1054
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 13rr                      1- 1874     	RRR	r0x1054,F
     00D1 01rr                      1- 1875     	MOVR	r0x1054,W
                                    1- 1876     	BANKSEL	r0x1050
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 1877     	MOVAR	r0x1050
     00D4 2119                      1- 1878     	MOVIA	0x19
     00D5 03rr                      1- 1879     	ADDAR	r0x1050,W
                                    1- 1880     	BANKSEL	_batValue
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 00rr                      1- 1881     	MOVAR	_batValue
                                    1- 1882     	MGOTO	_00597_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1883     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00D9                           1- 1884     _00590_DS_:
                                    1- 1885     	.line	667, "main.c"; 	batValue = R_AIN2_DATA/8;
     00D9 1C03                      1- 1886     	BCR	STATUS,0
                                    1- 1887     	BANKSEL	_R_AIN2_DATA
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 13rr                      1- 1888     	RRR	(_R_AIN2_DATA + 1),W
                                    1- 1889     	BANKSEL	r0x1054
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 00rr                      1- 1890     	MOVAR	r0x1054
                                    1- 1891     	BANKSEL	_R_AIN2_DATA
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 13rr                      1- 1892     	RRR	_R_AIN2_DATA,W
                                    1- 1893     	BANKSEL	r0x1050
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 00rr                      1- 1894     	MOVAR	r0x1050
                                    1- 1895     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00E2 1C03                      1- 1896     	BCR	STATUS,0
                                    1- 1897     	BANKSEL	r0x1054
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 13rr                      1- 1898     	RRR	r0x1054,F
                                    1- 1899     	BANKSEL	r0x1050
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 13rr                      1- 1900     	RRR	r0x1050,F
                                    1- 1901     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00E7 1C03                      1- 1902     	BCR	STATUS,0
                                    1- 1903     	BANKSEL	r0x1054
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 13rr                      1- 1904     	RRR	r0x1054,F
                                    1- 1905     	BANKSEL	r0x1050
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 13rr                      1- 1906     	RRR	r0x1050,F
     00EC 01rr                      1- 1907     	MOVR	r0x1050,W
                                    1- 1908     	BANKSEL	_batValue
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 1909     	MOVAR	_batValue
     00EF                           1- 1910     _00597_DS_:
                                    1- 1911     	.line	669, "main.c"; 	if(0x08 & PORTA)
                                    1- 1912     	BANKSEL	_PORTA
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 09rr                      1- 1913     	BTRSS	_PORTA,3
                                    1- 1914     	MGOTO	_00604_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1915     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1916     ;;unsigned compare: left >= lit (0xB=11), size=1
                                    1- 1917     	.line	671, "main.c"; 	if(batValue > 10)
     00F2 210B                      1- 1918     	MOVIA	0x0b
                                    1- 1919     	BANKSEL	_batValue
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 04rr                      1- 1920     	SUBAR	_batValue,W
     00F5 0803                      1- 1921     	BTRSS	STATUS,0
                                    1- 1922     	MGOTO	_00606_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1923     	.line	672, "main.c"; 	batValue = batValue - 10 +  shiweiNum;
     00F7 21F6                      1- 1924     	MOVIA	0xf6
     00F8 03rr                      1- 1925     	ADDAR	_batValue,W
                                    1- 1926     	BANKSEL	r0x1050
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 1927     	MOVAR	r0x1050
                                    1- 1928     	BANKSEL	_shiweiNum
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 1929     	MOVR	_shiweiNum,W
                                    1- 1930     	BANKSEL	r0x1050
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 03rr                      1- 1931     	ADDAR	r0x1050,W
                                    1- 1932     	BANKSEL	_batValue
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 00rr                      1- 1933     	MOVAR	_batValue
                                    1- 1934     	MGOTO	_00606_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1935     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1936     ;;unsigned compare: left >= lit (0xB=11), size=1
     0102                           1- 1937     _00604_DS_:
                                    1- 1938     	.line	674, "main.c"; 	else if(batValue > 10 && batValue < 99)
     0102 210B                      1- 1939     	MOVIA	0x0b
                                    1- 1940     	BANKSEL	_batValue
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 04rr                      1- 1941     	SUBAR	_batValue,W
     0105 0803                      1- 1942     	BTRSS	STATUS,0
                                    1- 1943     	MGOTO	_00606_DS_
     0106 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1944     ;;unsigned compare: left < lit (0x63=99), size=1
     0107 2163                      1- 1945     	MOVIA	0x63
     0108 04rr                      1- 1946     	SUBAR	_batValue,W
     0109 0C03                      1- 1947     	BTRSC	STATUS,0
                                    1- 1948     	MGOTO	_00606_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1949     	.line	676, "main.c"; 	batValue = batValue + shiweiNum +  shiweiNum + 3;
                                    1- 1950     	BANKSEL	_shiweiNum
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 01rr                      1- 1951     	MOVR	_shiweiNum,W
                                    1- 1952     	BANKSEL	_batValue
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 03rr                      1- 1953     	ADDAR	_batValue,W
                                    1- 1954     	BANKSEL	r0x1050
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 00rr                      1- 1955     	MOVAR	r0x1050
                                    1- 1956     	BANKSEL	_shiweiNum
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 01rr                      1- 1957     	MOVR	_shiweiNum,W
                                    1- 1958     	BANKSEL	r0x1050
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 03rr                      1- 1959     	ADDAR	r0x1050,F
     0115 2103                      1- 1960     	MOVIA	0x03
     0116 03rr                      1- 1961     	ADDAR	r0x1050,W
                                    1- 1962     	BANKSEL	_batValue
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 00rr                      1- 1963     	MOVAR	_batValue
     0119                           1- 1964     _00606_DS_:
                                    1- 1965     	.line	679, "main.c"; 	}
                                    1- 1966     	RETURN	
     0119 0010                      3-   40 m1      ret
                                    1- 1967     ; exit point of _checkBatAD
                                    1- 1969     ;***
                                    1- 1970     ;  pBlock Stats: dbName = C
                                    1- 1971     ;***
                                    1- 1972     ;has an exit
                                    1- 1973     ;functions called:
                                    1- 1974     ;   _delay
                                    1- 1975     ;   _delay
                                    1- 1976     ;1 compiler assigned register :
                                    1- 1977     ;   STK00
                                    1- 1978     ;; Starting pCode block
                                    1- 1979     .segment "code"; module=main, function=_initAD
     0000                           1- 1981     _initAD:
                                    1- 1982     ; 2 exit points
                                    1- 1983     	.line	611, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1984     	MOVIA	0x84
     0001 00rr                      1- 1985     	MOVAR	_ADMD
                                    1- 1986     	.line	616, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1987     	CLRR	_ADVREFH
                                    1- 1988     	.line	621, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1989     	MOVIA	0x10
     0004 00rr                      1- 1990     	MOVAR	_ADR
                                    1- 1991     	.line	623, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1992     	MOVIA	0x03
     0006 00rr                      1- 1993     	MOVAR	_ADCR
                                    1- 1994     	.line	625, "main.c"; 	PACON = C_PA2_AIN2 | C_PA1_AIN1 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2116                      1- 1995     	MOVIA	0x16
     0008 00rr                      1- 1996     	MOVAR	_PACON
                                    1- 1997     	.line	626, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 1998     	BSR	_ADMDbits,4
                                    1- 1999     	.line	627, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 2000     	MOVIA	0x64
     000B 00rr                      1- 2001     	MOVAR	STK00
     000C 2100                      1- 2002     	MOVIA	0x00
                                    1- 2003     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2004     	.line	630, "main.c"; 	}
                                    1- 2005     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2006     ; exit point of _initAD
                                    1- 2008     ;***
                                    1- 2009     ;  pBlock Stats: dbName = C
                                    1- 2010     ;***
                                    1- 2011     ;has an exit
                                    1- 2012     ;1 compiler assigned register :
                                    1- 2013     ;   r0x1056
                                    1- 2014     ;; Starting pCode block
                                    1- 2015     .segment "code"; module=main, function=_keyRead
                                    1- 2017     ;local variable name mapping:
     0000                           1- 2019     _keyRead:
                                    1- 2020     ; 2 exit points
                                    1- 2021     	.line	574, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2022     	BANKSEL	r0x1056
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2023     	MOVAR	r0x1056
                                    1- 2024     	.line	576, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2025     	MOVR	r0x1056,W
     0003 0D03                      1- 2026     	BTRSC	STATUS,2
                                    1- 2027     	MGOTO	_00574_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2028     	.line	578, "main.c"; 	keyCount++;
                                    1- 2029     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2030     	INCR	_keyCount,F
                                    1- 2031     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2032     	.line	579, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2033     	MOVIA	0xc8
     0008 04rr                      1- 2034     	SUBAR	_keyCount,W
     0009 0803                      1- 2035     	BTRSS	STATUS,0
                                    1- 2036     	MGOTO	_00575_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2037     	.line	581, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2038     	MOVIA	0xc8
     000C 00rr                      1- 2039     	MOVAR	_keyCount
                                    1- 2040     	.line	582, "main.c"; 	if(!longPressFlag)
                                    1- 2041     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2042     	BTRSC	_Status,1
                                    1- 2043     	MGOTO	_00575_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2044     	.line	584, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2045     	BSR	_Status,1
                                    1- 2046     	.line	585, "main.c"; 	return 2;
     0011 2102                      1- 2047     	MOVIA	0x02
                                    1- 2048     	MGOTO	_00576_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2049     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 2050     _00574_DS_:
                                    1- 2051     	.line	591, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 2052     	MOVIA	0xc8
                                    1- 2053     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2054     	SUBAR	_keyCount,W
     0016 0803                      1- 2055     	BTRSS	STATUS,0
                                    1- 2056     	MGOTO	_00571_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2057     	.line	593, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2058     	CLRR	_keyCount
                                    1- 2059     	.line	594, "main.c"; 	longPressFlag = 0;
                                    1- 2060     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2061     	BCR	_Status,1
                                    1- 2062     	.line	595, "main.c"; 	return	0;
     001B 2100                      1- 2063     	MOVIA	0x00
                                    1- 2064     	MGOTO	_00576_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2065     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2066     _00571_DS_:
                                    1- 2067     	.line	597, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2068     	MOVIA	0x04
                                    1- 2069     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2070     	SUBAR	_keyCount,W
     0020 0803                      1- 2071     	BTRSS	STATUS,0
                                    1- 2072     	MGOTO	_00572_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2073     	.line	599, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2074     	CLRR	_keyCount
                                    1- 2075     	.line	600, "main.c"; 	return	1;
     0023 2101                      1- 2076     	MOVIA	0x01
                                    1- 2077     	MGOTO	_00576_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2078     _00572_DS_:
                                    1- 2079     	.line	602, "main.c"; 	keyCount = 0;
                                    1- 2080     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2081     	CLRR	_keyCount
     0027                           1- 2082     _00575_DS_:
                                    1- 2083     	.line	604, "main.c"; 	return 0;
     0027 2100                      1- 2084     	MOVIA	0x00
     0028                           1- 2085     _00576_DS_:
                                    1- 2086     	.line	605, "main.c"; 	}
                                    1- 2087     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2088     ; exit point of _keyRead
                                    1- 2090     ;***
                                    1- 2091     ;  pBlock Stats: dbName = C
                                    1- 2092     ;***
                                    1- 2093     ;has an exit
                                    1- 2094     ;functions called:
                                    1- 2095     ;   _setInput
                                    1- 2096     ;   _pwmStop
                                    1- 2097     ;   _pwm1Stop
                                    1- 2098     ;   _setInput
                                    1- 2099     ;   _pwmStop
                                    1- 2100     ;   _pwm1Stop
                                    1- 2101     ;; Starting pCode block
                                    1- 2102     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2104     _gotoSleep:
                                    1- 2105     ; 2 exit points
                                    1- 2106     	.line	543, "main.c"; 	setInput();
                                    1- 2107     	MCALL	_setInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2108     	.line	544, "main.c"; 	count5s = 0;
                                    1- 2109     	BANKSEL	_count5s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2110     	CLRR	_count5s
     0003 02rr                      1- 2111     	CLRR	(_count5s + 1)
                                    1- 2112     	.line	545, "main.c"; 	showFlag = 0;
                                    1- 2113     	BANKSEL	_Status
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 1Err                      1- 2114     	BCR	_Status,4
                                    1- 2115     	.line	546, "main.c"; 	IOSTA = C_PA5_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0006 212E                      1- 2116     	MOVIA	0x2e
     0007 000r                      1- 2117     	IOST	_IOSTA
                                    1- 2118     	.line	548, "main.c"; 	IOSTB = 0x00;
     0008 0200                      1- 2119     	CLRA	
     0009 000r                      1- 2120     	IOST	_IOSTB
                                    1- 2121     	.line	549, "main.c"; 	PORTB = 0x00;
     000A 02rr                      1- 2122     	CLRR	_PORTB
                                    1- 2123     	.line	550, "main.c"; 	PORTA = 0x00;
                                    1- 2124     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2125     	CLRR	_PORTA
                                    1- 2126     	.line	551, "main.c"; 	sleepTime = 0;
                                    1- 2127     	BANKSEL	_sleepTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2128     	CLRR	_sleepTime
     000F 02rr                      1- 2129     	CLRR	(_sleepTime + 1)
                                    1- 2130     	.line	553, "main.c"; 	pwmStop();
                                    1- 2131     	MCALL	_pwmStop
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2132     	.line	554, "main.c"; 	pwm1Stop();
                                    1- 2133     	MCALL	_pwm1Stop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2134     	.line	555, "main.c"; 	workStep = 0;
                                    1- 2135     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 2136     	CLRR	_workStep
                                    1- 2137     	.line	556, "main.c"; 	AWUCON = 0x28;
     0014 2128                      1- 2138     	MOVIA	0x28
     0015 00rr                      1- 2139     	MOVAR	_AWUCON
                                    1- 2140     	.line	557, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0016 210B                      1- 2141     	MOVIA	0x0b
     0017 00rr                      1- 2142     	MOVAR	_INTE
                                    1- 2143     	.line	558, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0018 2118                      1- 2144     	MOVIA	0x18
     0019 00rr                      1- 2145     	MOVAR	_PCON
                                    1- 2146     	.line	559, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001A 02rr                      1- 2147     	CLRR	_INTF
                                    1- 2148     	.line	560, "main.c"; 	CLRWDT();
     001B 0002                      1- 2149     	clrwdt
                                    1- 2150     	.line	561, "main.c"; 	ENI();
     001C 0004                      1- 2151     	ENI
                                    1- 2152     	.line	562, "main.c"; 	SLEEP();
     001D 0001                      1- 2153     	sleep
                                    1- 2154     	.line	563, "main.c"; 	AWUCON = 0x00;
     001E 02rr                      1- 2155     	CLRR	_AWUCON
                                    1- 2156     	.line	565, "main.c"; 	IOSTA =  C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     001F 213E                      1- 2157     	MOVIA	0x3e
     0020 000r                      1- 2158     	IOST	_IOSTA
                                    1- 2159     	.line	566, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0021 2101                      1- 2160     	MOVIA	0x01
     0022 00rr                      1- 2161     	MOVAR	_INTE
                                    1- 2162     	.line	567, "main.c"; 	INTF = 0;
     0023 02rr                      1- 2163     	CLRR	_INTF
                                    1- 2164     	.line	569, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0024 21A8                      1- 2165     	MOVIA	0xa8
     0025 00rr                      1- 2166     	MOVAR	_PCON
                                    1- 2167     	.line	571, "main.c"; 	}
                                    1- 2168     	RETURN	
     0026 0010                      3-   40 m1      ret
                                    1- 2169     ; exit point of _gotoSleep
                                    1- 2171     ;***
                                    1- 2172     ;  pBlock Stats: dbName = C
                                    1- 2173     ;***
                                    1- 2174     ;has an exit
                                    1- 2175     ;; Starting pCode block
                                    1- 2176     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2178     _pwmStop:
                                    1- 2179     ; 2 exit points
                                    1- 2180     	.line	537, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2181     	CLRA	
     0001 00rr                      1- 2182     	SFUN	_T2CR1
                                    1- 2183     	.line	538, "main.c"; 	}
                                    1- 2184     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2185     ; exit point of _pwmStop
                                    1- 2187     ;***
                                    1- 2188     ;  pBlock Stats: dbName = C
                                    1- 2189     ;***
                                    1- 2190     ;has an exit
                                    1- 2191     ;1 compiler assigned register :
                                    1- 2192     ;   r0x1057
                                    1- 2193     ;; Starting pCode block
                                    1- 2194     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2196     _pwmInit:
                                    1- 2197     ; 2 exit points
                                    1- 2198     	.line	525, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2199     	SFUNR	_T2CR1
                                    1- 2200     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2201     	MOVAR	r0x1057
     0003 0Frr                      1- 2202     	BTRSC	r0x1057,7
                                    1- 2203     	.line	526, "main.c"; 	return;
                                    1- 2204     	MGOTO	_00551_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2205     	.line	527, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2206     	CLRR	_TMRH
                                    1- 2207     	.line	528, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2208     	MOVIA	0x64
     0007 00rr                      1- 2209     	SFUN	_TMR2
                                    1- 2210     	.line	531, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2211     	MOVIA	0x01
     0009 00rr                      1- 2212     	SFUN	_T2CR2
                                    1- 2213     	.line	532, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2214     	MOVIA	0x83
     000B 00rr                      1- 2215     	SFUN	_T2CR1
     000C                           1- 2216     _00551_DS_:
                                    1- 2217     	.line	533, "main.c"; 	}
                                    1- 2218     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2219     ; exit point of _pwmInit
                                    1- 2221     ;***
                                    1- 2222     ;  pBlock Stats: dbName = C
                                    1- 2223     ;***
                                    1- 2224     ;has an exit
                                    1- 2225     ;; Starting pCode block
                                    1- 2226     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2228     _pwm1Stop:
                                    1- 2229     ; 2 exit points
                                    1- 2230     	.line	518, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2231     	CLRA	
     0001 00rr                      1- 2232     	SFUN	_T1CR1
                                    1- 2233     	.line	519, "main.c"; 	}
                                    1- 2234     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2235     ; exit point of _pwm1Stop
                                    1- 2237     ;***
                                    1- 2238     ;  pBlock Stats: dbName = C
                                    1- 2239     ;***
                                    1- 2240     ;has an exit
                                    1- 2241     ;1 compiler assigned register :
                                    1- 2242     ;   r0x1058
                                    1- 2243     ;; Starting pCode block
                                    1- 2244     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2246     _pwm1Init:
                                    1- 2247     ; 2 exit points
                                    1- 2248     	.line	506, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2249     	SFUNR	_T1CR1
                                    1- 2250     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2251     	MOVAR	r0x1058
     0003 0Frr                      1- 2252     	BTRSC	r0x1058,7
                                    1- 2253     	.line	507, "main.c"; 	return;
                                    1- 2254     	MGOTO	_00540_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2255     	.line	508, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2256     	CLRR	_TMRH
                                    1- 2257     	.line	509, "main.c"; 	TMR1 = 24;							//频率为110K
     0006 2118                      1- 2258     	MOVIA	0x18
     0007 00rr                      1- 2259     	SFUN	_TMR1
                                    1- 2260     	.line	512, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2261     	CLRA	
     0009 00rr                      1- 2262     	SFUN	_T1CR2
                                    1- 2263     	.line	513, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2264     	MOVIA	0x83
     000B 00rr                      1- 2265     	SFUN	_T1CR1
     000C                           1- 2266     _00540_DS_:
                                    1- 2267     	.line	514, "main.c"; 	}
                                    1- 2268     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2269     ; exit point of _pwm1Init
                                    1- 2271     ;***
                                    1- 2272     ;  pBlock Stats: dbName = C
                                    1- 2273     ;***
                                    1- 2274     ;has an exit
                                    1- 2275     ;functions called:
                                    1- 2276     ;   _pwmStop
                                    1- 2277     ;   _pwmStop
                                    1- 2278     ;; Starting pCode block
                                    1- 2279     .segment "code"; module=main, function=_powerOff
     0000                           1- 2281     _powerOff:
                                    1- 2282     ; 2 exit points
                                    1- 2283     	.line	499, "main.c"; 	workStep = 0;
                                    1- 2284     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2285     	CLRR	_workStep
                                    1- 2286     	.line	500, "main.c"; 	pwmStop();
                                    1- 2287     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2288     	.line	501, "main.c"; 	}
                                    1- 2289     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2290     ; exit point of _powerOff
                                    1- 2292     ;***
                                    1- 2293     ;  pBlock Stats: dbName = C
                                    1- 2294     ;***
                                    1- 2295     ;has an exit
                                    1- 2296     ;; Starting pCode block
                                    1- 2297     .segment "code"; module=main, function=_initSys
     0000                           1- 2299     _initSys:
                                    1- 2300     ; 2 exit points
                                    1- 2301     	.line	471, "main.c"; 	DISI();
     0000 0013                      1- 2302     	DISI
                                    1- 2303     	.line	472, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2304     	MOVIA	0x3e
     0002 000r                      1- 2305     	IOST	_IOSTA
                                    1- 2306     	.line	473, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2307     	CLRA	
     0004 000r                      1- 2308     	IOST	_IOSTB
                                    1- 2309     	.line	474, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2310     	CLRR	_PORTB
                                    1- 2311     	.line	475, "main.c"; 	PORTA = 0x00;
                                    1- 2312     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2313     	CLRR	_PORTA
                                    1- 2314     	.line	476, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2315     	MOVIA	0xff
     0009 000r                      1- 2316     	IOST	_APHCON
                                    1- 2317     	.line	477, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2318     	MOVAR	_BPHCON
                                    1- 2319     	.line	478, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2320     	MOVAR	_ABPLCON
                                    1- 2321     	.line	480, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2322     	MOVIA	0x01
     000D 00rr                      1- 2323     	MOVAR	_INTE
                                    1- 2324     	.line	482, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2325     	CLRA	
     000F 000r                      1- 2326     	IOST	_PCON1
                                    1- 2327     	.line	484, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2328     	MOVIA	0x37
     0011 00rr                      1- 2329     	MOVAR	_TMR0
                                    1- 2330     	.line	485, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2331     	MOVIA	0x01
     0013 0003                      1- 2332     	T0MD	
                                    1- 2333     	.line	487, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2334     	IOST	_PCON1
                                    1- 2335     	.line	490, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2336     	MOVIA	0x88
     0016 00rr                      1- 2337     	MOVAR	_PCON
                                    1- 2338     	.line	493, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2339     	MOVIA	0x01
     0018 000r                      1- 2340     	IOST	_PCON1
                                    1- 2341     	.line	494, "main.c"; 	ENI();
     0019 0004                      1- 2342     	ENI
                                    1- 2343     	.line	495, "main.c"; 	}
                                    1- 2344     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2345     ; exit point of _initSys
                                    1- 2347     ;***
                                    1- 2348     ;  pBlock Stats: dbName = C
                                    1- 2349     ;***
                                    1- 2350     ;has an exit
                                    1- 2351     ;functions called:
                                    1- 2352     ;   _keyRead
                                    1- 2353     ;   _pwmInit
                                    1- 2354     ;   _powerOff
                                    1- 2355     ;   _pwmInit
                                    1- 2356     ;   _keyRead
                                    1- 2357     ;   _pwmInit
                                    1- 2358     ;   _powerOff
                                    1- 2359     ;   _pwmInit
                                    1- 2360     ;1 compiler assigned register :
                                    1- 2361     ;   r0x1059
                                    1- 2362     ;; Starting pCode block
                                    1- 2363     .segment "code"; module=main, function=_keyCtr
                                    1- 2365     ;local variable name mapping:
     0000                           1- 2367     _keyCtr:
                                    1- 2368     ; 2 exit points
                                    1- 2369     	.line	399, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2370     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2371     	COMR	_PORTA,W
                                    1- 2372     	BANKSEL	r0x1059
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2373     	MOVAR	r0x1059
     0004 2120                      1- 2374     	MOVIA	0x20
     0005 10rr                      1- 2375     	ANDAR	r0x1059,F
     0006 01rr                      1- 2376     	MOVR	r0x1059,W
                                    1- 2377     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2378     	BANKSEL	r0x1059
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2379     	MOVAR	r0x1059
                                    1- 2380     	.line	400, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2381     	XORIA	0x01
     000B 0903                      1- 2382     	BTRSS	STATUS,2
                                    1- 2383     	MGOTO	_00523_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2384     	.line	402, "main.c"; 	count500ms = 0;
                                    1- 2385     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2386     	CLRR	_count500ms
                                    1- 2387     	.line	403, "main.c"; 	ledLightTime = 0;
                                    1- 2388     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2389     	CLRR	_ledLightTime
                                    1- 2390     	.line	404, "main.c"; 	count5S = 0;
                                    1- 2391     	BANKSEL	_count5S
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2392     	CLRR	_count5S
     0013 02rr                      1- 2393     	CLRR	(_count5S + 1)
                                    1- 2394     	.line	405, "main.c"; 	if(workStep == 0)
                                    1- 2395     	BANKSEL	_workStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2396     	MOVR	_workStep,W
     0016 0903                      1- 2397     	BTRSS	STATUS,2
                                    1- 2398     	MGOTO	_00492_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2399     	.line	407, "main.c"; 	count1s = 0;
                                    1- 2400     	BANKSEL	_count1s
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2401     	CLRR	_count1s
                                    1- 2402     	.line	408, "main.c"; 	ledLightTime = 3;
     001A 2103                      1- 2403     	MOVIA	0x03
                                    1- 2404     	BANKSEL	_ledLightTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2405     	MOVAR	_ledLightTime
                                    1- 2406     	.line	415, "main.c"; 	showFlag = 1;
                                    1- 2407     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2408     	BSR	_Status,4
                                    1- 2409     	.line	416, "main.c"; 	return;
                                    1- 2410     	MGOTO	_00525_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 2411     _00492_DS_:
                                    1- 2412     	.line	418, "main.c"; 	if(++workStep > 6)
                                    1- 2413     	BANKSEL	_workStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 2414     	INCR	_workStep,F
                                    1- 2415     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2416     ;;unsigned compare: left >= lit (0x7=7), size=1
     0022 2107                      1- 2417     	MOVIA	0x07
     0023 04rr                      1- 2418     	SUBAR	_workStep,W
     0024 0803                      1- 2419     	BTRSS	STATUS,0
                                    1- 2420     	MGOTO	_00494_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2421     	.line	419, "main.c"; 	workStep = 1;
     0026 2101                      1- 2422     	MOVIA	0x01
     0027 00rr                      1- 2423     	MOVAR	_workStep
     0028                           1- 2424     _00494_DS_:
                                    1- 2425     	.line	420, "main.c"; 	if(workStep == 1)
                                    1- 2426     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2427     	MOVR	_workStep,W
     002A 2401                      1- 2428     	XORIA	0x01
     002B 0903                      1- 2429     	BTRSS	STATUS,2
                                    1- 2430     	MGOTO	_00510_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2431     	.line	421, "main.c"; 	maxDuty = 40;
     002D 2128                      1- 2432     	MOVIA	0x28
                                    1- 2433     	BANKSEL	_maxDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2434     	MOVAR	_maxDuty
                                    1- 2435     	MGOTO	_00511_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 2436     _00510_DS_:
                                    1- 2437     	.line	422, "main.c"; 	else if(workStep == 2)
                                    1- 2438     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2439     	MOVR	_workStep,W
     0033 2402                      1- 2440     	XORIA	0x02
     0034 0903                      1- 2441     	BTRSS	STATUS,2
                                    1- 2442     	MGOTO	_00507_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2443     	.line	423, "main.c"; 	maxDuty = 42;
     0036 212A                      1- 2444     	MOVIA	0x2a
                                    1- 2445     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2446     	MOVAR	_maxDuty
                                    1- 2447     	MGOTO	_00511_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2448     _00507_DS_:
                                    1- 2449     	.line	424, "main.c"; 	else if(workStep == 3)
                                    1- 2450     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2451     	MOVR	_workStep,W
     003C 2403                      1- 2452     	XORIA	0x03
     003D 0903                      1- 2453     	BTRSS	STATUS,2
                                    1- 2454     	MGOTO	_00504_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2455     	.line	425, "main.c"; 	maxDuty = 44;
     003F 212C                      1- 2456     	MOVIA	0x2c
                                    1- 2457     	BANKSEL	_maxDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2458     	MOVAR	_maxDuty
                                    1- 2459     	MGOTO	_00511_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 2460     _00504_DS_:
                                    1- 2461     	.line	426, "main.c"; 	else if(workStep == 4)
                                    1- 2462     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2463     	MOVR	_workStep,W
     0045 2404                      1- 2464     	XORIA	0x04
     0046 0903                      1- 2465     	BTRSS	STATUS,2
                                    1- 2466     	MGOTO	_00501_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2467     	.line	427, "main.c"; 	maxDuty = 46;
     0048 212E                      1- 2468     	MOVIA	0x2e
                                    1- 2469     	BANKSEL	_maxDuty
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2470     	MOVAR	_maxDuty
                                    1- 2471     	MGOTO	_00511_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 2472     _00501_DS_:
                                    1- 2473     	.line	428, "main.c"; 	else if(workStep == 5)
                                    1- 2474     	BANKSEL	_workStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 2475     	MOVR	_workStep,W
     004E 2405                      1- 2476     	XORIA	0x05
     004F 0903                      1- 2477     	BTRSS	STATUS,2
                                    1- 2478     	MGOTO	_00498_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2479     	.line	429, "main.c"; 	maxDuty = 48;
     0051 2130                      1- 2480     	MOVIA	0x30
                                    1- 2481     	BANKSEL	_maxDuty
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 2482     	MOVAR	_maxDuty
                                    1- 2483     	MGOTO	_00511_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 2484     _00498_DS_:
                                    1- 2485     	.line	430, "main.c"; 	else if(workStep == 6)
                                    1- 2486     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 2487     	MOVR	_workStep,W
     0057 2406                      1- 2488     	XORIA	0x06
     0058 0903                      1- 2489     	BTRSS	STATUS,2
                                    1- 2490     	MGOTO	_00511_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2491     	.line	431, "main.c"; 	maxDuty = 50;
     005A 2132                      1- 2492     	MOVIA	0x32
                                    1- 2493     	BANKSEL	_maxDuty
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 2494     	MOVAR	_maxDuty
     005D                           1- 2495     _00511_DS_:
                                    1- 2496     	.line	432, "main.c"; 	if(workStep > 0)
                                    1- 2497     	BANKSEL	_workStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 2498     	MOVR	_workStep,W
     005F 0D03                      1- 2499     	BTRSC	STATUS,2
                                    1- 2500     	MGOTO	_00525_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2501     	.line	434, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2502     	BANKSEL	_maxDuty
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 2503     	MOVR	_maxDuty,W
     0063 00rr                      1- 2504     	SFUN	_PWM2DUTY
                                    1- 2505     	.line	435, "main.c"; 	pwmInit();
                                    1- 2506     	MCALL	_pwmInit
     0064 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2507     	MGOTO	_00525_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066                           1- 2508     _00523_DS_:
                                    1- 2509     	.line	438, "main.c"; 	else if(kclick == 2)
                                    1- 2510     	BANKSEL	r0x1059
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2511     	MOVR	r0x1059,W
     0068 2402                      1- 2512     	XORIA	0x02
     0069 0903                      1- 2513     	BTRSS	STATUS,2
                                    1- 2514     	MGOTO	_00525_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2515     	.line	440, "main.c"; 	if(workStep > 0)
                                    1- 2516     	BANKSEL	_workStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 2517     	MOVR	_workStep,W
     006D 0D03                      1- 2518     	BTRSC	STATUS,2
                                    1- 2519     	MGOTO	_00518_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2520     	.line	442, "main.c"; 	workStep = 0;
     006F 02rr                      1- 2521     	CLRR	_workStep
                                    1- 2522     	.line	443, "main.c"; 	powerOff();
                                    1- 2523     	MCALL	_powerOff
     0070 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2524     	.line	444, "main.c"; 	showFlag = 0;
                                    1- 2525     	BANKSEL	_Status
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 1Err                      1- 2526     	BCR	_Status,4
                                    1- 2527     	MGOTO	_00525_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074                           1- 2528     _00518_DS_:
                                    1- 2529     	.line	448, "main.c"; 	if(batValue == 0 || preBatValue == 0)
                                    1- 2530     	BANKSEL	_batValue
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 2531     	MOVR	_batValue,W
     0076 0D03                      1- 2532     	BTRSC	STATUS,2
                                    1- 2533     	MGOTO	_00514_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2534     	BANKSEL	_preBatValue
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1- 2535     	MOVR	_preBatValue,W
     007A 0903                      1- 2536     	BTRSS	STATUS,2
                                    1- 2537     	MGOTO	_00515_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C                           1- 2538     _00514_DS_:
                                    1- 2539     	.line	450, "main.c"; 	ledLightTime = 3;
     007C 2103                      1- 2540     	MOVIA	0x03
                                    1- 2541     	BANKSEL	_ledLightTime
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 2542     	MOVAR	_ledLightTime
                                    1- 2543     	.line	451, "main.c"; 	preBatValue = 0;
                                    1- 2544     	BANKSEL	_preBatValue
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 02rr                      1- 2545     	CLRR	_preBatValue
                                    1- 2546     	.line	452, "main.c"; 	showFlag = 1;
                                    1- 2547     	BANKSEL	_Status
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 1Arr                      1- 2548     	BSR	_Status,4
                                    1- 2549     	.line	453, "main.c"; 	return;
                                    1- 2550     	MGOTO	_00525_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084                           1- 2551     _00515_DS_:
                                    1- 2552     	.line	455, "main.c"; 	workStep = 1;
     0084 2101                      1- 2553     	MOVIA	0x01
                                    1- 2554     	BANKSEL	_workStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 2555     	MOVAR	_workStep
                                    1- 2556     	.line	456, "main.c"; 	PWM2DUTY = 70;
     0087 2146                      1- 2557     	MOVIA	0x46
     0088 00rr                      1- 2558     	SFUN	_PWM2DUTY
                                    1- 2559     	.line	457, "main.c"; 	currentDuty = 70;
                                    1- 2560     	BANKSEL	_currentDuty
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 2561     	MOVAR	_currentDuty
                                    1- 2562     	.line	458, "main.c"; 	maxDuty = 40;
     008B 2128                      1- 2563     	MOVIA	0x28
                                    1- 2564     	BANKSEL	_maxDuty
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 2565     	MOVAR	_maxDuty
                                    1- 2566     	.line	459, "main.c"; 	pwmInit();
                                    1- 2567     	MCALL	_pwmInit
     008E 2rrr                      3-   66 m1      LCALL rom_address
     008F                           1- 2568     _00525_DS_:
                                    1- 2569     	.line	464, "main.c"; 	}
                                    1- 2570     	RETURN	
     008F 0010                      3-   40 m1      ret
                                    1- 2571     ; exit point of _keyCtr
                                    1- 2573     ;***
                                    1- 2574     ;  pBlock Stats: dbName = C
                                    1- 2575     ;***
                                    1- 2576     ;has an exit
                                    1- 2577     ;functions called:
                                    1- 2578     ;   _setInput
                                    1- 2579     ;   _showKeyLed
                                    1- 2580     ;   __gptrget1
                                    1- 2581     ;   _showNubShiwei
                                    1- 2582     ;   __gptrget1
                                    1- 2583     ;   _showNubGewei
                                    1- 2584     ;   _setInput
                                    1- 2585     ;   _showKeyLed
                                    1- 2586     ;   __gptrget1
                                    1- 2587     ;   _showNubShiwei
                                    1- 2588     ;   __gptrget1
                                    1- 2589     ;   _showNubGewei
                                    1- 2590     ;5 compiler assigned registers:
                                    1- 2591     ;   r0x105A
                                    1- 2592     ;   r0x105B
                                    1- 2593     ;   STK01
                                    1- 2594     ;   STK00
                                    1- 2595     ;   r0x105C
                                    1- 2596     ;; Starting pCode block
                                    1- 2597     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2599     _refreshNub:
                                    1- 2600     ; 2 exit points
                                    1- 2601     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2602     	.line	347, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2603     	MOVIA	0x03
                                    1- 2604     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2605     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2606     	BTRSS	STATUS,2
                                    1- 2607     	MGOTO	_00483_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2608     	MOVIA	0x84
     0006 04rr                      1- 2609     	SUBAR	_count900s,W
     0007                           1- 2610     _00483_DS_:
     0007 0803                      1- 2611     	BTRSS	STATUS,0
                                    1- 2612     	MGOTO	_00438_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2613     	.line	349, "main.c"; 	setInput();
                                    1- 2614     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2615     	.line	350, "main.c"; 	return;
                                    1- 2616     	MGOTO	_00457_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2617     _00438_DS_:
                                    1- 2618     	.line	352, "main.c"; 	if(tempshiweiNum != shiweiNum || tempgeweiNum != geweiNum)
                                    1- 2619     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2620     	MOVR	_shiweiNum,W
                                    1- 2621     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 12rr                      1- 2622     	XORAR	_tempshiweiNum,W
     000F 0903                      1- 2623     	BTRSS	STATUS,2
                                    1- 2624     	MGOTO	_00446_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2625     	BANKSEL	_geweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 2626     	MOVR	_geweiNum,W
                                    1- 2627     	BANKSEL	_tempgeweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 12rr                      1- 2628     	XORAR	_tempgeweiNum,W
     0015 0D03                      1- 2629     	BTRSC	STATUS,2
                                    1- 2630     	MGOTO	_00447_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1- 2631     _00446_DS_:
                                    1- 2632     	.line	355, "main.c"; 	if(workStep == 0)
                                    1- 2633     	BANKSEL	_workStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2634     	MOVR	_workStep,W
     0019 0903                      1- 2635     	BTRSS	STATUS,2
                                    1- 2636     	MGOTO	_00444_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2637     	.line	357, "main.c"; 	if(++refreshCount >= 20)
                                    1- 2638     	BANKSEL	_refreshCount
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 05rr                      1- 2639     	INCR	_refreshCount,F
     001D 0D03                      1- 2640     	BTRSC	STATUS,2
     001E 05rr                      1- 2641     	INCR	(_refreshCount + 1),F
                                    1- 2642     ;;unsigned compare: left < lit (0x14=20), size=2
     001F 2100                      1- 2643     	MOVIA	0x00
     0020 04rr                      1- 2644     	SUBAR	(_refreshCount + 1),W
     0021 0903                      1- 2645     	BTRSS	STATUS,2
                                    1- 2646     	MGOTO	_00485_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023 2114                      1- 2647     	MOVIA	0x14
     0024 04rr                      1- 2648     	SUBAR	_refreshCount,W
     0025                           1- 2649     _00485_DS_:
     0025 0803                      1- 2650     	BTRSS	STATUS,0
                                    1- 2651     	MGOTO	_00448_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2652     	.line	359, "main.c"; 	refreshCount = 0;
                                    1- 2653     	BANKSEL	_refreshCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2654     	CLRR	_refreshCount
     0029 02rr                      1- 2655     	CLRR	(_refreshCount + 1)
                                    1- 2656     	.line	360, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2657     	BANKSEL	_shiweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2658     	MOVR	_shiweiNum,W
                                    1- 2659     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2660     	MOVAR	_tempshiweiNum
                                    1- 2661     	.line	361, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2662     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2663     	MOVR	_geweiNum,W
                                    1- 2664     	BANKSEL	_tempgeweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 2665     	MOVAR	_tempgeweiNum
                                    1- 2666     	MGOTO	_00448_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 2667     _00444_DS_:
                                    1- 2668     	.line	366, "main.c"; 	if(++refreshCount >= 20)
                                    1- 2669     	BANKSEL	_refreshCount
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 05rr                      1- 2670     	INCR	_refreshCount,F
     0035 0D03                      1- 2671     	BTRSC	STATUS,2
     0036 05rr                      1- 2672     	INCR	(_refreshCount + 1),F
                                    1- 2673     ;;unsigned compare: left < lit (0x14=20), size=2
     0037 2100                      1- 2674     	MOVIA	0x00
     0038 04rr                      1- 2675     	SUBAR	(_refreshCount + 1),W
     0039 0903                      1- 2676     	BTRSS	STATUS,2
                                    1- 2677     	MGOTO	_00486_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B 2114                      1- 2678     	MOVIA	0x14
     003C 04rr                      1- 2679     	SUBAR	_refreshCount,W
     003D                           1- 2680     _00486_DS_:
     003D 0803                      1- 2681     	BTRSS	STATUS,0
                                    1- 2682     	MGOTO	_00448_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2683     	.line	368, "main.c"; 	refreshCount = 0;
                                    1- 2684     	BANKSEL	_refreshCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 02rr                      1- 2685     	CLRR	_refreshCount
     0041 02rr                      1- 2686     	CLRR	(_refreshCount + 1)
                                    1- 2687     	.line	369, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2688     	BANKSEL	_shiweiNum
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2689     	MOVR	_shiweiNum,W
                                    1- 2690     	BANKSEL	_tempshiweiNum
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2691     	MOVAR	_tempshiweiNum
                                    1- 2692     	.line	370, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2693     	BANKSEL	_geweiNum
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 2694     	MOVR	_geweiNum,W
                                    1- 2695     	BANKSEL	_tempgeweiNum
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 2696     	MOVAR	_tempgeweiNum
                                    1- 2697     	MGOTO	_00448_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 2698     _00447_DS_:
                                    1- 2699     	.line	376, "main.c"; 	refreshCount = 0;
                                    1- 2700     	BANKSEL	_refreshCount
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2701     	CLRR	_refreshCount
     004D 02rr                      1- 2702     	CLRR	(_refreshCount + 1)
     004E                           1- 2703     _00448_DS_:
                                    1- 2704     	.line	378, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2705     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2706     	MOVR	_workStep,W
     0050 0903                      1- 2707     	BTRSS	STATUS,2
                                    1- 2708     	MGOTO	_00450_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2709     	BANKSEL	_ledLightTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2710     	MOVR	_ledLightTime,W
     0054 0903                      1- 2711     	BTRSS	STATUS,2
     0055                           1- 2712     _00450_DS_:
                                    1- 2713     	.line	380, "main.c"; 	showKeyLed();
                                    1- 2714     	MCALL	_showKeyLed
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2715     	.line	383, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2716     	BANKSEL	_ledDeadTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1- 2717     	MOVR	_ledDeadTime,W
     0058 0D03                      1- 2718     	BTRSC	STATUS,2
                                    1- 2719     	MGOTO	_00454_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2720     	.line	385, "main.c"; 	tempshiweiNum = 11;
     005A 210B                      1- 2721     	MOVIA	0x0b
                                    1- 2722     	BANKSEL	_tempshiweiNum
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 2723     	MOVAR	_tempshiweiNum
                                    1- 2724     	.line	386, "main.c"; 	tempgeweiNum = 12;
     005D 210C                      1- 2725     	MOVIA	0x0c
                                    1- 2726     	BANKSEL	_tempgeweiNum
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2727     	MOVAR	_tempgeweiNum
     0060                           1- 2728     _00454_DS_:
                                    1- 2729     	.line	389, "main.c"; 	if(firstShowCount > 0)
                                    1- 2730     	BANKSEL	_firstShowCount
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2731     	MOVR	_firstShowCount,W
     0062 0D03                      1- 2732     	BTRSC	STATUS,2
                                    1- 2733     	MGOTO	_00456_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2734     	.line	390, "main.c"; 	tempshiweiNum = tempgeweiNum = 8;
     0064 2108                      1- 2735     	MOVIA	0x08
                                    1- 2736     	BANKSEL	_tempgeweiNum
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 2737     	MOVAR	_tempgeweiNum
                                    1- 2738     	BANKSEL	_tempshiweiNum
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 2739     	MOVAR	_tempshiweiNum
     0069                           1- 2740     _00456_DS_:
                                    1- 2741     	.line	391, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2742     	BANKSEL	_tempshiweiNum
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 2743     	MOVR	_tempshiweiNum,W
     006B 25rr                      1- 2744     	ADDIA	(_numArray + 0)
                                    1- 2745     	BANKSEL	r0x105A
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 00rr                      1- 2746     	MOVAR	r0x105A
     006E 21rr                      1- 2747     	MOVIA	((_numArray + 0) >> 8) & 0xff
     006F 0C03                      1- 2748     	BTRSC	STATUS,0
     0070 2501                      1- 2749     	ADDIA	0x01
                                    1- 2750     	BANKSEL	r0x105B
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 2751     	MOVAR	r0x105B
                                    1- 2752     	BANKSEL	r0x105A
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 2753     	MOVR	r0x105A,W
     0075 00rr                      1- 2754     	MOVAR	STK01
                                    1- 2755     	BANKSEL	r0x105B
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 2756     	MOVR	r0x105B,W
     0078 00rr                      1- 2757     	MOVAR	STK00
     0079 2100                      1- 2758     	MOVIA	0x00
                                    1- 2759     	MCALL	__gptrget1
     007A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2760     ;;100	MOVAR	r0x105C
                                    1- 2761     	MCALL	_showNubShiwei
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2762     	.line	392, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2763     	BANKSEL	_tempgeweiNum
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 2764     	MOVR	_tempgeweiNum,W
     007E 25rr                      1- 2765     	ADDIA	(_numArray + 0)
                                    1- 2766     	BANKSEL	r0x105A
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 00rr                      1- 2767     	MOVAR	r0x105A
     0081 21rr                      1- 2768     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0082 0C03                      1- 2769     	BTRSC	STATUS,0
     0083 2501                      1- 2770     	ADDIA	0x01
                                    1- 2771     	BANKSEL	r0x105B
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 00rr                      1- 2772     	MOVAR	r0x105B
                                    1- 2773     	BANKSEL	r0x105A
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1- 2774     	MOVR	r0x105A,W
     0088 00rr                      1- 2775     	MOVAR	STK01
                                    1- 2776     	BANKSEL	r0x105B
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 2777     	MOVR	r0x105B,W
     008B 00rr                      1- 2778     	MOVAR	STK00
     008C 2100                      1- 2779     	MOVIA	0x00
                                    1- 2780     	MCALL	__gptrget1
     008D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2781     ;;99	MOVAR	r0x105C
                                    1- 2782     	MCALL	_showNubGewei
     008E 2rrr                      3-   66 m1      LCALL rom_address
     008F                           1- 2783     _00457_DS_:
                                    1- 2784     	.line	393, "main.c"; 	}
                                    1- 2785     	RETURN	
     008F 0010                      3-   40 m1      ret
                                    1- 2786     ; exit point of _refreshNub
                                    1- 2788     ;***
                                    1- 2789     ;  pBlock Stats: dbName = C
                                    1- 2790     ;***
                                    1- 2791     ;has an exit
                                    1- 2792     ;functions called:
                                    1- 2793     ;   __divuchar
                                    1- 2794     ;   __moduchar
                                    1- 2795     ;   _pwmStop
                                    1- 2796     ;   _pwm1Stop
                                    1- 2797     ;   _pwm1Init
                                    1- 2798     ;   _pwm1Init
                                    1- 2799     ;   _pwm1Init
                                    1- 2800     ;   _pwm1Stop
                                    1- 2801     ;   __divuchar
                                    1- 2802     ;   __moduchar
                                    1- 2803     ;   _pwmStop
                                    1- 2804     ;   _pwm1Stop
                                    1- 2805     ;   _pwm1Init
                                    1- 2806     ;   _pwm1Init
                                    1- 2807     ;   _pwm1Init
                                    1- 2808     ;   _pwm1Stop
                                    1- 2809     ;6 compiler assigned registers:
                                    1- 2810     ;   STK00
                                    1- 2811     ;   r0x105D
                                    1- 2812     ;   r0x105E
                                    1- 2813     ;   r0x105F
                                    1- 2814     ;   r0x1060
                                    1- 2815     ;   r0x1061
                                    1- 2816     ;; Starting pCode block
                                    1- 2817     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2819     _chrgCtr:
                                    1- 2820     ; 2 exit points
                                    1- 2821     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2822     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2823     	.line	238, "main.c"; 	if(preBatValue > 99)
     0000 2164                      1- 2824     	MOVIA	0x64
                                    1- 2825     	BANKSEL	_preBatValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2826     	SUBAR	_preBatValue,W
     0003 0803                      1- 2827     	BTRSS	STATUS,0
                                    1- 2828     	MGOTO	_00325_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2829     	.line	240, "main.c"; 	shiweiNum = geweiNum = 9;
     0005 2109                      1- 2830     	MOVIA	0x09
                                    1- 2831     	BANKSEL	_geweiNum
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2832     	MOVAR	_geweiNum
                                    1- 2833     	BANKSEL	_shiweiNum
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2834     	MOVAR	_shiweiNum
                                    1- 2835     	MGOTO	_00326_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2836     _00325_DS_:
                                    1- 2837     	.line	244, "main.c"; 	shiweiNum = preBatValue/10;
     000B 210A                      1- 2838     	MOVIA	0x0a
     000C 00rr                      1- 2839     	MOVAR	STK00
                                    1- 2840     	BANKSEL	_preBatValue
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2841     	MOVR	_preBatValue,W
                                    1- 2842     	MCALL	__divuchar
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2843     	BANKSEL	_shiweiNum
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2844     	MOVAR	_shiweiNum
                                    1- 2845     	.line	245, "main.c"; 	geweiNum = preBatValue%10;
     0012 210A                      1- 2846     	MOVIA	0x0a
     0013 00rr                      1- 2847     	MOVAR	STK00
                                    1- 2848     	BANKSEL	_preBatValue
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2849     	MOVR	_preBatValue,W
                                    1- 2850     	MCALL	__moduchar
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2851     	BANKSEL	_geweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2852     	MOVAR	_geweiNum
     0019                           1- 2853     _00326_DS_:
                                    1- 2854     	.line	247, "main.c"; 	if(workStep > 0)
                                    1- 2855     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2856     	MOVR	_workStep,W
     001B 0D03                      1- 2857     	BTRSC	STATUS,2
                                    1- 2858     	MGOTO	_00328_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2859     	.line	249, "main.c"; 	showFlag = 1;
                                    1- 2860     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2861     	BSR	_Status,4
                                    1- 2862     	.line	250, "main.c"; 	shiweiNum = 0;
                                    1- 2863     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 2864     	CLRR	_shiweiNum
                                    1- 2865     	.line	251, "main.c"; 	geweiNum = workStep;
                                    1- 2866     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2867     	MOVR	_workStep,W
                                    1- 2868     	BANKSEL	_geweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2869     	MOVAR	_geweiNum
     0025                           1- 2870     _00328_DS_:
                                    1- 2871     	.line	253, "main.c"; 	if(0x08 & PORTA)
                                    1- 2872     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 09rr                      1- 2873     	BTRSS	_PORTA,3
                                    1- 2874     	MGOTO	_00360_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2875     	.line	256, "main.c"; 	chrgFlag = 1;
                                    1- 2876     	BANKSEL	_Status
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 19rr                      1- 2877     	BSR	_Status,3
                                    1- 2878     	.line	257, "main.c"; 	showFlag = 1;
     002A 1Arr                      1- 2879     	BSR	_Status,4
                                    1- 2880     	.line	258, "main.c"; 	workStep = 0;
                                    1- 2881     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1- 2882     	CLRR	_workStep
                                    1- 2883     	.line	259, "main.c"; 	ledLightTime = 0;
                                    1- 2884     	BANKSEL	_ledLightTime
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1- 2885     	CLRR	_ledLightTime
                                    1- 2886     	.line	260, "main.c"; 	pwmStop();
                                    1- 2887     	MCALL	_pwmStop
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2888     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 2889     	.line	261, "main.c"; 	if(preBatValue < 99 && batValue >= preBatValue && count5s == 1)
     0030 2163                      1- 2890     	MOVIA	0x63
                                    1- 2891     	BANKSEL	_preBatValue
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 04rr                      1- 2892     	SUBAR	_preBatValue,W
     0033 0C03                      1- 2893     	BTRSC	STATUS,0
                                    1- 2894     	MGOTO	_00009_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 01rr                      1- 2895     	MOVR	_preBatValue,W
                                    1- 2896     	BANKSEL	_batValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 04rr                      1- 2897     	SUBAR	_batValue,W
     0038 0803                      1- 2898     	BTRSS	STATUS,0
                                    1- 2899     	MGOTO	_00009_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2900     	BANKSEL	_count5s
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2901     	MOVR	_count5s,W
     003C 2401                      1- 2902     	XORIA	0x01
     003D 0903                      1- 2903     	BTRSS	STATUS,2
                                    1- 2904     	MGOTO	_00009_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 01rr                      1- 2905     	MOVR	(_count5s + 1),W
     0040 2400                      1- 2906     	XORIA	0x00
     0041 0903                      1- 2907     	BTRSS	STATUS,2
                                    1- 2908     	MGOTO	_00009_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2909     	.line	263, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2910     	BANKSEL	_preBatValue
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 2911     	INCR	_preBatValue,F
     0045                           1- 2912     _00009_DS_:
                                    1- 2913     	.line	265, "main.c"; 	if(batValue >= 99)
     0045 2163                      1- 2914     	MOVIA	0x63
                                    1- 2915     	BANKSEL	_batValue
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2916     	SUBAR	_batValue,W
     0048 0803                      1- 2917     	BTRSS	STATUS,0
                                    1- 2918     	MGOTO	_00351_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2919     	.line	267, "main.c"; 	chrgStep = 4;
     004A 2104                      1- 2920     	MOVIA	0x04
                                    1- 2921     	BANKSEL	_chrgStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2922     	MOVAR	_chrgStep
                                    1- 2923     	.line	269, "main.c"; 	if(shiweiNum == 9 &&  geweiNum == 9 && batValue > 102 && ++countFull > 200)
                                    1- 2924     	BANKSEL	_shiweiNum
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 2925     	MOVR	_shiweiNum,W
     004F 2409                      1- 2926     	XORIA	0x09
     0050 0903                      1- 2927     	BTRSS	STATUS,2
                                    1- 2928     	MGOTO	_00362_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2929     	BANKSEL	_geweiNum
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2930     	MOVR	_geweiNum,W
     0054 2409                      1- 2931     	XORIA	0x09
     0055 0903                      1- 2932     	BTRSS	STATUS,2
                                    1- 2933     	MGOTO	_00362_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2934     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2935     ;;unsigned compare: left >= lit (0x67=103), size=1
     0057 2167                      1- 2936     	MOVIA	0x67
                                    1- 2937     	BANKSEL	_batValue
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 04rr                      1- 2938     	SUBAR	_batValue,W
     005A 0803                      1- 2939     	BTRSS	STATUS,0
                                    1- 2940     	MGOTO	_00362_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2941     	BANKSEL	_countFull
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 05rr                      1- 2942     	INCR	_countFull,F
                                    1- 2943     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2944     ;;unsigned compare: left >= lit (0xC9=201), size=1
     005E 21C9                      1- 2945     	MOVIA	0xc9
     005F 04rr                      1- 2946     	SUBAR	_countFull,W
     0060 0803                      1- 2947     	BTRSS	STATUS,0
                                    1- 2948     	MGOTO	_00362_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2949     	.line	271, "main.c"; 	pwm1Stop();
                                    1- 2950     	MCALL	_pwm1Stop
     0062 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2951     	.line	273, "main.c"; 	PORTB &= 0xF7;
     0063 1Drr                      1- 2952     	BCR	_PORTB,3
                                    1- 2953     	.line	274, "main.c"; 	IOSTB |= 0X08;
     0064 001r                      1- 2954     	IOSTR	_IOSTB
                                    1- 2955     	BANKSEL	r0x105D
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 2956     	MOVAR	r0x105D
     0067 19rr                      1- 2957     	BSR	r0x105D,3
     0068 01rr                      1- 2958     	MOVR	r0x105D,W
     0069 000r                      1- 2959     	IOST	_IOSTB
                                    1- 2960     	MGOTO	_00362_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B                           1- 2961     _00351_DS_:
                                    1- 2962     	.line	280, "main.c"; 	countFull = 0;
                                    1- 2963     	BANKSEL	_countFull
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 02rr                      1- 2964     	CLRR	_countFull
                                    1- 2965     	.line	281, "main.c"; 	IOSTB &= 0xF7;
     006D 001r                      1- 2966     	IOSTR	_IOSTB
                                    1- 2967     	BANKSEL	r0x105D
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 2968     	MOVAR	r0x105D
     0070 1Drr                      1- 2969     	BCR	r0x105D,3
     0071 01rr                      1- 2970     	MOVR	r0x105D,W
     0072 000r                      1- 2971     	IOST	_IOSTB
                                    1- 2972     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 2973     	.line	283, "main.c"; 	if(shiweiNum < 5)
     0073 2105                      1- 2974     	MOVIA	0x05
                                    1- 2975     	BANKSEL	_shiweiNum
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1- 2976     	SUBAR	_shiweiNum,W
     0076 0C03                      1- 2977     	BTRSC	STATUS,0
                                    1- 2978     	MGOTO	_00348_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2979     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2980     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2981     	.line	285, "main.c"; 	if(chrgStep <= 1)
     0078 2102                      1- 2982     	MOVIA	0x02
                                    1- 2983     	BANKSEL	_chrgStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 04rr                      1- 2984     	SUBAR	_chrgStep,W
     007B 0C03                      1- 2985     	BTRSC	STATUS,0
                                    1- 2986     	MGOTO	_00362_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2987     	.line	287, "main.c"; 	PWM1DUTY = 10;
     007D 210A                      1- 2988     	MOVIA	0x0a
     007E 00rr                      1- 2989     	SFUN	_PWM1DUTY
                                    1- 2990     	.line	288, "main.c"; 	chrgStep = 1;
     007F 2101                      1- 2991     	MOVIA	0x01
     0080 00rr                      1- 2992     	MOVAR	_chrgStep
                                    1- 2993     	.line	289, "main.c"; 	pwm1Init();
                                    1- 2994     	MCALL	_pwm1Init
     0081 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2995     	MGOTO	_00362_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2996     ;;unsigned compare: left < lit (0x9=9), size=1
     0083                           1- 2997     _00348_DS_:
                                    1- 2998     	.line	292, "main.c"; 	else if(shiweiNum < 9)
     0083 2109                      1- 2999     	MOVIA	0x09
                                    1- 3000     	BANKSEL	_shiweiNum
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 04rr                      1- 3001     	SUBAR	_shiweiNum,W
     0086 0C03                      1- 3002     	BTRSC	STATUS,0
                                    1- 3003     	MGOTO	_00345_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3004     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3005     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 3006     	.line	294, "main.c"; 	if(chrgStep <= 2)
     0088 2103                      1- 3007     	MOVIA	0x03
                                    1- 3008     	BANKSEL	_chrgStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 3009     	SUBAR	_chrgStep,W
     008B 0C03                      1- 3010     	BTRSC	STATUS,0
                                    1- 3011     	MGOTO	_00362_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3012     	.line	296, "main.c"; 	chrgStep = 2;
     008D 2102                      1- 3013     	MOVIA	0x02
     008E 00rr                      1- 3014     	MOVAR	_chrgStep
                                    1- 3015     	.line	297, "main.c"; 	PWM1DUTY = 11;
     008F 210B                      1- 3016     	MOVIA	0x0b
     0090 00rr                      1- 3017     	SFUN	_PWM1DUTY
                                    1- 3018     	.line	298, "main.c"; 	pwm1Init();
                                    1- 3019     	MCALL	_pwm1Init
     0091 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3020     	MGOTO	_00362_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3021     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3022     ;;unsigned compare: left >= lit (0x4=4), size=1
     0093                           1- 3023     _00345_DS_:
                                    1- 3024     	.line	303, "main.c"; 	if(chrgStep <= 3)
     0093 2104                      1- 3025     	MOVIA	0x04
                                    1- 3026     	BANKSEL	_chrgStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 3027     	SUBAR	_chrgStep,W
     0096 0C03                      1- 3028     	BTRSC	STATUS,0
                                    1- 3029     	MGOTO	_00362_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3030     	.line	305, "main.c"; 	PWM1DUTY = 12;
     0098 210C                      1- 3031     	MOVIA	0x0c
     0099 00rr                      1- 3032     	SFUN	_PWM1DUTY
                                    1- 3033     	.line	306, "main.c"; 	chrgStep = 3;
     009A 2103                      1- 3034     	MOVIA	0x03
     009B 00rr                      1- 3035     	MOVAR	_chrgStep
                                    1- 3036     	.line	307, "main.c"; 	pwm1Init();
                                    1- 3037     	MCALL	_pwm1Init
     009C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3038     	MGOTO	_00362_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
     009E                           1- 3039     _00360_DS_:
                                    1- 3040     	.line	315, "main.c"; 	chrgStep = 0;
                                    1- 3041     	BANKSEL	_chrgStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 02rr                      1- 3042     	CLRR	_chrgStep
                                    1- 3043     	.line	316, "main.c"; 	countFull = 0;
                                    1- 3044     	BANKSEL	_countFull
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 3045     	CLRR	_countFull
                                    1- 3046     	.line	317, "main.c"; 	pwm1Stop();
                                    1- 3047     	MCALL	_pwm1Stop
     00A2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3048     	.line	318, "main.c"; 	chrgFlag = 0;
                                    1- 3049     	BANKSEL	_Status
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 1Drr                      1- 3050     	BCR	_Status,3
                                    1- 3051     	.line	322, "main.c"; 	if(workStep == 0 && (preBatValue > batValue + 1))
                                    1- 3052     	BANKSEL	_workStep
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 01rr                      1- 3053     	MOVR	_workStep,W
     00A7 0903                      1- 3054     	BTRSS	STATUS,2
                                    1- 3055     	MGOTO	_00356_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3056     	BANKSEL	_batValue
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 01rr                      1- 3057     	MOVR	_batValue,W
                                    1- 3058     	BANKSEL	r0x105D
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1- 3059     	MOVAR	r0x105D
                                    1- 3060     	BANKSEL	r0x105E
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 02rr                      1- 3061     	CLRR	r0x105E
                                    1- 3062     	BANKSEL	r0x105D
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 05rr                      1- 3063     	INCR	r0x105D,F
     00B1 0903                      1- 3064     	BTRSS	STATUS,2
                                    1- 3065     	MGOTO	_00010_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3066     	BANKSEL	r0x105E
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 05rr                      1- 3067     	INCR	r0x105E,F
     00B5                           1- 3068     _00010_DS_:
                                    1- 3069     	BANKSEL	_preBatValue
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 3070     	MOVR	_preBatValue,W
                                    1- 3071     	BANKSEL	r0x105F
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 3072     	MOVAR	r0x105F
                                    1- 3073     ;;1	CLRR	r0x1060
                                    1- 3074     	BANKSEL	r0x105E
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 3075     	MOVR	r0x105E,W
     00BB 2580                      1- 3076     	ADDIA	0x80
                                    1- 3077     	BANKSEL	r0x1061
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 3078     	MOVAR	r0x1061
     00BE 2100                      1- 3079     	MOVIA	0x00
     00BF 2580                      1- 3080     	ADDIA	0x80
     00C0 04rr                      1- 3081     	SUBAR	r0x1061,W
     00C1 0903                      1- 3082     	BTRSS	STATUS,2
                                    1- 3083     	MGOTO	_00432_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3084     	BANKSEL	r0x105F
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 3085     	MOVR	r0x105F,W
                                    1- 3086     	BANKSEL	r0x105D
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 04rr                      1- 3087     	SUBAR	r0x105D,W
     00C7                           1- 3088     _00432_DS_:
     00C7 0C03                      1- 3089     	BTRSC	STATUS,0
                                    1- 3090     	MGOTO	_00356_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3091     	.line	324, "main.c"; 	if(++batCount > 30)
                                    1- 3092     	BANKSEL	_batCount
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 05rr                      1- 3093     	INCR	_batCount,F
                                    1- 3094     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3095     ;;unsigned compare: left >= lit (0x1F=31), size=1
     00CB 211F                      1- 3096     	MOVIA	0x1f
     00CC 04rr                      1- 3097     	SUBAR	_batCount,W
     00CD 0803                      1- 3098     	BTRSS	STATUS,0
                                    1- 3099     	MGOTO	_00362_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3100     	.line	326, "main.c"; 	batCount = 0;
     00CF 02rr                      1- 3101     	CLRR	_batCount
                                    1- 3102     	.line	327, "main.c"; 	preBatValue = batValue;
                                    1- 3103     	BANKSEL	_batValue
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 3104     	MOVR	_batValue,W
                                    1- 3105     	BANKSEL	_preBatValue
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 3106     	MOVAR	_preBatValue
                                    1- 3107     	MGOTO	_00362_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
     00D5                           1- 3108     _00356_DS_:
                                    1- 3109     	.line	336, "main.c"; 	batCount = 0;
                                    1- 3110     	BANKSEL	_batCount
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 02rr                      1- 3111     	CLRR	_batCount
     00D7                           1- 3112     _00362_DS_:
                                    1- 3113     	.line	340, "main.c"; 	}
                                    1- 3114     	RETURN	
     00D7 0010                      3-   40 m1      ret
                                    1- 3115     ; exit point of _chrgCtr
                                    1- 3118     ;	code size estimation:
                                    1- 3119     ;	 1214+  368 =  1582 instructions ( 3900 byte)
                                    1- 3121     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
