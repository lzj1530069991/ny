
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_showKeyLed
                                    1-   25     	extern	_B1
                                    1-   26     	extern	_C1
                                    1-   27     	extern	_A2
                                    1-   28     	extern	_B2
                                    1-   29     	extern	_C2
                                    1-   30     	extern	_D2
                                    1-   31     	extern	_E2
                                    1-   32     	extern	_F2
                                    1-   33     	extern	_G2
                                    1-   34     	extern	_A3
                                    1-   35     	extern	_B3
                                    1-   36     	extern	_C3
                                    1-   37     	extern	_D3
                                    1-   38     	extern	_E3
                                    1-   39     	extern	_F3
                                    1-   40     	extern	_G3
                                    1-   41     	extern	_delayms
                                    1-   42     	extern	_LedCtr2
                                    1-   43     	extern	_checkInAD
                                    1-   44     	extern	_F_AIN3_Convert
                                    1-   45     	extern	_fgCtr
                                    1-   46     	extern	_ledCtr
                                    1-   47     	extern	_workCtr
                                    1-   48     	extern	__divuchar
                                    1-   49     	extern	__moduchar
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__mulchar
                                    1-  130     	extern	__nyc_ny8_startup
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; global declarations
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     	extern	_delay
                                    1-  135     	extern	_F_wait_eoc
                                    1-  136     	extern	_F_AIN2_Convert
                                    1-  137     	extern	_F_AIN4_Convert
                                    1-  138     	extern	_checkOutA
                                    1-  139     	extern	_checkBatAD
                                    1-  140     	extern	_initAD
                                    1-  141     	extern	_keyRead
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_pwmStop
                                    1-  144     	extern	_pwmInit
                                    1-  145     	extern	_pwm1Stop
                                    1-  146     	extern	_pwm1Init
                                    1-  147     	extern	_powerOff
                                    1-  148     	extern	_initSys
                                    1-  149     	extern	_keyCtr
                                    1-  150     	extern	_refreshNub
                                    1-  151     	extern	_chrgCtr
                                    1-  152     	extern	_isr
                                    1-  153     	extern	_main
                                    1-  154     	extern	_setMaxDuty
                                    1-  155     	extern	_debug
                                    1-  156     	extern	_Status
                                    1-  157     	extern	_R_AIN4_DATA
                                    1-  158     	extern	_R_AIN4_DATA_LB
                                    1-  159     	extern	_R_AIN2_DATA
                                    1-  160     	extern	_R_AIN2_DATA_LB
                                    1-  161     	extern	_intCount
                                    1-  162     	extern	_sleepTime
                                    1-  163     	extern	_count200ms
                                    1-  164     	extern	_count500ms
                                    1-  165     	extern	_count1s
                                    1-  166     	extern	_count5s
                                    1-  167     	extern	_count900s
                                    1-  168     	extern	_workStep
                                    1-  169     	extern	_keyCount
                                    1-  170     	extern	_pwStep
                                    1-  171     	extern	_ledLightTime
                                    1-  172     	extern	_maxDuty
                                    1-  173     	extern	_currentDuty
                                    1-  174     	extern	_overCount
                                    1-  175     	extern	_tempDuty
                                    1-  176     	extern	_count5S
                                    1-  177     	extern	_ledDeadTime
                                    1-  178     	extern	_countFull
                                    1-  179     	extern	_tempshiweiNum
                                    1-  180     	extern	_tempgeweiNum
                                    1-  181     	extern	_refreshCount
                                    1-  182     	extern	_shiweiNum
                                    1-  183     	extern	_geweiNum
                                    1-  184     	extern	_batValue
                                    1-  185     	extern	_cDuty
                                    1-  186     	extern	_preBatValue
                                    1-  187     	extern	_chrgStep
                                    1-  188     	extern	_lightBat
                                    1-  189     	extern	_closeCount
                                    1-  190     	extern	_firstShowCount
                                    1-  191     	extern	_batCount
                                    1-  193     	extern PSAVE
                                    1-  194     	extern SSAVE
                                    1-  195     	extern WSAVE
                                    1-  196     	extern STK02
                                    1-  197     	extern STK01
                                    1-  198     	extern STK00
                                    1-  200     .segment "uninit", 0x20000040
 20000040                           1-  201     PSAVE:
                                    1-  202     	.res 1
 20000041                           1-  203     SSAVE:
                                    1-  204     	.res 1
 20000042                           1-  205     WSAVE:
                                    1-  206     	.res 1
 20000043                           1-  207     STK02:
                                    1-  208     	.res 1
 20000044                           1-  209     STK01:
                                    1-  210     	.res 1
 20000045                           1-  211     STK00:
                                    1-  212     	.res 1
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ; global definitions
                                    1-  216     ;--------------------------------------------------------
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN4_DATA:
                                    1-  219     	.res	2
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_AIN4_DATA_LB:
                                    1-  224     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     _R_AIN2_DATA:
                                    1-  229     	.res	2
                                    1-  232     .segment "uninit"
     0000                           1-  233     _R_AIN2_DATA_LB:
                                    1-  234     	.res	1
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ; absolute symbol definitions
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ; compiler-defined variables
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x105E:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x105F:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1060:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1062:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x105B:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x105C:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1058:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x105A:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1057:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1056:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1055:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1050:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1051:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x1052:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x1053:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x104C:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x104F:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x1046:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1047:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x1048:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x104B:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x1040:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x1041:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x1042:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x1045:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x103C:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x103B:
                                    1-  323     	.res	1
                                    1-  324     .segment "uninit"
     0000                           1-  325     r0x103D:
                                    1-  326     	.res	1
                                    1-  327     .segment "uninit"
     0000                           1-  328     r0x103E:
                                    1-  329     	.res	1
                                    1-  330     .segment "uninit"
     0000                           1-  331     r0x103F:
                                    1-  332     	.res	1
                                    1-  333     ;--------------------------------------------------------
                                    1-  334     ; initialized data
                                    1-  335     ;--------------------------------------------------------
                                    1-  337     .segment "idata"
     0000                           1-  338     _debug:
     0000 0000                      1-  339     	dw	0x00
                                    1-  343     .segment "idata"
     0000                           1-  344     _numArray:
     0000 003F                      1-  345     	dw	0x3f
     0001 0006                      1-  346     	dw	0x06
     0002 005B                      1-  347     	dw	0x5b
     0003 004F                      1-  348     	dw	0x4f
     0004 0066                      1-  349     	dw	0x66
     0005 006D                      1-  350     	dw	0x6d
     0006 007D                      1-  351     	dw	0x7d
     0007 0007                      1-  352     	dw	0x07
     0008 007F                      1-  353     	dw	0x7f
     0009 006F                      1-  354     	dw	0x6f
     000A 0071                      1-  355     	dw	0x71
     000B 0079                      1-  356     	dw	0x79
     000C 0050                      1-  357     	dw	0x50
                                    1-  361     .segment "idata"
     0000                           1-  362     _Status:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _intCount:
     0000 0000                      1-  369     	dw	0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _sleepTime:
     0000 0000 0000                 1-  375     	dw	0x00, 0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _count200ms:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _count500ms:
     0000 0000                      1-  387     	dw	0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _count1s:
     0000 0000                      1-  393     	dw	0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _count5s:
     0000 0000 0000                 1-  399     	dw	0x00, 0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _count900s:
     0000 0000 0000                 1-  405     	dw	0x00, 0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _workStep:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _keyCount:
     0000 0000                      1-  417     	dw	0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _pwStep:
     0000 0000                      1-  423     	dw	0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _ledLightTime:
     0000 0000                      1-  429     	dw	0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _maxDuty:
     0000 0000                      1-  435     	dw	0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _currentDuty:
     0000 0000                      1-  441     	dw	0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _overCount:
     0000 0000                      1-  447     	dw	0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _tempDuty:
     0000 0000                      1-  453     	dw	0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _count5S:
     0000 0000 0000                 1-  459     	dw	0x00, 0x00
                                    1-  463     .segment "idata"
     0000                           1-  464     _ledDeadTime:
     0000 0000                      1-  465     	dw	0x00
                                    1-  469     .segment "idata"
     0000                           1-  470     _countFull:
     0000 0000 0000                 1-  471     	dw	0x00, 0x00
                                    1-  475     .segment "idata"
     0000                           1-  476     _tempshiweiNum:
     0000 0000                      1-  477     	dw	0x00
                                    1-  481     .segment "idata"
     0000                           1-  482     _tempgeweiNum:
     0000 0000                      1-  483     	dw	0x00
                                    1-  487     .segment "idata"
     0000                           1-  488     _refreshCount:
     0000 0000 0000                 1-  489     	dw	0x00, 0x00
                                    1-  493     .segment "idata"
     0000                           1-  494     _shiweiNum:
     0000 0000                      1-  495     	dw	0x00
                                    1-  499     .segment "idata"
     0000                           1-  500     _geweiNum:
     0000 0000                      1-  501     	dw	0x00
                                    1-  505     .segment "idata"
     0000                           1-  506     _batValue:
     0000 0000                      1-  507     	dw	0x00
                                    1-  511     .segment "idata"
     0000                           1-  512     _cDuty:
     0000 0000                      1-  513     	dw	0x00
                                    1-  517     .segment "idata"
     0000                           1-  518     _preBatValue:
     0000 0000                      1-  519     	dw	0x00
                                    1-  523     .segment "idata"
     0000                           1-  524     _chrgStep:
     0000 0000                      1-  525     	dw	0x00
                                    1-  529     .segment "idata"
     0000                           1-  530     _lightBat:
     0000 0000                      1-  531     	dw	0x00
                                    1-  535     .segment "idata"
     0000                           1-  536     _closeCount:
     0000 0000 0000                 1-  537     	dw	0x00, 0x00
                                    1-  541     .segment "idata"
     0000                           1-  542     _firstShowCount:
     0000 0000                      1-  543     	dw	0x00
                                    1-  547     .segment "idata"
     0000                           1-  548     _batCount:
     0000 0000 0000                 1-  549     	dw	0x00, 0x00
                                    1-  552     ;--------------------------------------------------------
                                    1-  553     ; overlayable items in internal ram 
                                    1-  554     ;--------------------------------------------------------
                                    1-  555     ;	udata_ovr
                                    1-  556     ;--------------------------------------------------------
                                    1-  557     ; reset vector 
                                    1-  558     ;--------------------------------------------------------
                                    1-  559     ORG	0x0000
     0000 3rrr                      1-  560     	LGOTO	__nyc_ny8_startup
                                    1-  561     ;--------------------------------------------------------
                                    1-  562     ; interrupt and initialization code
                                    1-  563     ;--------------------------------------------------------
                                    1-  564     ORG 0x0008
                                    1-  565     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  567     .segment "code"
     0000                           1-  568     __sdcc_interrupt:
                                    1-  569     ;***
                                    1-  570     ;  pBlock Stats: dbName = I
                                    1-  571     ;***
                                    1-  572     ;2 compiler assigned registers:
                                    1-  573     ;   STK00
                                    1-  574     ;   STK01
                                    1-  575     ;; Starting pCode block
     0000                           1-  576     _isr:
                                    1-  577     ; 0 exit points
                                    1-  578     	.line	87, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  579     	MOVAR	WSAVE
     0001 1503                      1-  580     	SWAPR	STATUS,W
     0002 0283                      1-  581     	CLRR	STATUS
     0003 00rr                      1-  582     	MOVAR	SSAVE
     0004 010A                      1-  583     	MOVR	PCHBUF,W
     0005 028A                      1-  584     	CLRR	PCHBUF
     0006 00rr                      1-  585     	MOVAR	PSAVE
     0007 0104                      1-  586     	MOVR	FSR,W
                                    1-  587     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  588     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  589     	MOVR	STK00,W
                                    1-  590     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  591     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  592     	MOVR	STK01,W
                                    1-  593     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  594     	MOVAR	___sdcc_saved_stk01
                                    1-  595     	.line	89, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  596     	BTRSS	_INTFbits,0
                                    1-  597     	MGOTO	_00123_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  598     	.line	91, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  599     	MOVIA	0x37
     0013 03rr                      1-  600     	ADDAR	_TMR0,F
                                    1-  601     	.line	93, "main.c"; 	if(++intCount >= 100)
                                    1-  602     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  603     	INCR	_intCount,F
                                    1-  604     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  605     	MOVIA	0x64
     0017 04rr                      1-  606     	SUBAR	_intCount,W
     0018 0803                      1-  607     	BTRSS	STATUS,0
                                    1-  608     	MGOTO	_00123_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  609     	.line	95, "main.c"; 	IntFlag = 1;
                                    1-  610     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  611     	BSR	_Status,0
                                    1-  612     	.line	96, "main.c"; 	intCount = 0;
                                    1-  613     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  614     	CLRR	_intCount
                                    1-  615     	.line	97, "main.c"; 	if(++count500ms >= 40)
                                    1-  616     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  617     	INCR	_count500ms,F
                                    1-  618     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  619     	MOVIA	0x28
     0021 04rr                      1-  620     	SUBAR	_count500ms,W
     0022 0C03                      1-  621     	BTRSC	STATUS,0
                                    1-  622     	.line	98, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  623     	CLRR	_count500ms
                                    1-  624     	.line	99, "main.c"; 	if(++count200ms >= 20)
                                    1-  625     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  626     	INCR	_count200ms,F
     0026 2114                      1-  627     	MOVIA	0x14
     0027 04rr                      1-  628     	SUBAR	_count200ms,W
     0028 0803                      1-  629     	BTRSS	STATUS,0
                                    1-  630     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  631     	.line	101, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  632     	CLRR	_count200ms
                                    1-  633     	.line	102, "main.c"; 	if(ledDeadTime > 0)
                                    1-  634     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  635     	MOVR	_ledDeadTime,W
     002D 0903                      1-  636     	BTRSS	STATUS,2
                                    1-  637     	.line	103, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  638     	DECR	_ledDeadTime,F
     002F                           1-  639     _00110_DS_:
                                    1-  640     	.line	105, "main.c"; 	if(++count5s >= 500)
                                    1-  641     	BANKSEL	_count5s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  642     	INCR	_count5s,F
     0031 0D03                      1-  643     	BTRSC	STATUS,2
     0032 05rr                      1-  644     	INCR	(_count5s + 1),F
                                    1-  645     ;;unsigned compare: left < lit (0x1F4=500), size=2
     0033 2101                      1-  646     	MOVIA	0x01
     0034 04rr                      1-  647     	SUBAR	(_count5s + 1),W
     0035 0903                      1-  648     	BTRSS	STATUS,2
                                    1-  649     	MGOTO	_00161_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21F4                      1-  650     	MOVIA	0xf4
     0038 04rr                      1-  651     	SUBAR	_count5s,W
     0039                           1-  652     _00161_DS_:
     0039 0803                      1-  653     	BTRSS	STATUS,0
                                    1-  654     	MGOTO	_00112_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  655     	.line	106, "main.c"; 	count5s = 0;
                                    1-  656     	BANKSEL	_count5s
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  657     	CLRR	_count5s
     003D 02rr                      1-  658     	CLRR	(_count5s + 1)
     003E                           1-  659     _00112_DS_:
                                    1-  660     	.line	107, "main.c"; 	if(++count1s >= 100)
                                    1-  661     	BANKSEL	_count1s
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  662     	INCR	_count1s,F
                                    1-  663     ;;unsigned compare: left < lit (0x64=100), size=1
     0040 2164                      1-  664     	MOVIA	0x64
     0041 04rr                      1-  665     	SUBAR	_count1s,W
     0042 0803                      1-  666     	BTRSS	STATUS,0
                                    1-  667     	MGOTO	_00123_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  668     	.line	109, "main.c"; 	count1s = 0;
     0044 02rr                      1-  669     	CLRR	_count1s
                                    1-  670     	.line	110, "main.c"; 	if(ledLightTime > 0)
                                    1-  671     	BANKSEL	_ledLightTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  672     	MOVR	_ledLightTime,W
     0047 0903                      1-  673     	BTRSS	STATUS,2
                                    1-  674     	.line	111, "main.c"; 	ledLightTime--;
     0048 06rr                      1-  675     	DECR	_ledLightTime,F
                                    1-  676     	.line	112, "main.c"; 	if(workStep)
                                    1-  677     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  678     	MOVR	_workStep,W
     004B 0D03                      1-  679     	BTRSC	STATUS,2
                                    1-  680     	MGOTO	_00116_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  681     	.line	114, "main.c"; 	++count900s;
                                    1-  682     	BANKSEL	_count900s
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1-  683     	INCR	_count900s,F
     004F 0D03                      1-  684     	BTRSC	STATUS,2
     0050 05rr                      1-  685     	INCR	(_count900s + 1),F
                                    1-  686     	MGOTO	_00123_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  687     _00116_DS_:
                                    1-  688     	.line	118, "main.c"; 	count900s = 0;
                                    1-  689     	BANKSEL	_count900s
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1-  690     	CLRR	_count900s
     0054 02rr                      1-  691     	CLRR	(_count900s + 1)
     0055                           1-  692     _00123_DS_:
                                    1-  693     	.line	127, "main.c"; 	if(INTFbits.PABIF)
     0055 08rr                      1-  694     	BTRSS	_INTFbits,1
                                    1-  695     	MGOTO	_00125_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  696     	.line	129, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0057 21FD                      1-  697     	MOVIA	0xfd
     0058 00rr                      1-  698     	MOVAR	_INTF
     0059                           1-  699     _00125_DS_:
                                    1-  700     	.line	132, "main.c"; 	INTF = 0;
     0059 02rr                      1-  701     	CLRR	_INTF
                                    1-  702     	.line	134, "main.c"; 	}
                                    1-  703     	BANKSEL	___sdcc_saved_stk01
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  704     	MOVR	___sdcc_saved_stk01,W
     005C 00rr                      1-  705     	MOVAR	STK01
                                    1-  706     	BANKSEL	___sdcc_saved_stk00
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1-  707     	MOVR	___sdcc_saved_stk00,W
     005F 00rr                      1-  708     	MOVAR	STK00
                                    1-  709     	BANKSEL	___sdcc_saved_fsr
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  710     	MOVR	___sdcc_saved_fsr,W
     0062 0084                      1-  711     	MOVAR	FSR
     0063 01rr                      1-  712     	MOVR	PSAVE,W
     0064 008A                      1-  713     	MOVAR	PCHBUF
     0065 0283                      1-  714     	CLRR	STATUS
     0066 15rr                      1-  715     	SWAPR	SSAVE,W
     0067 0083                      1-  716     	MOVAR	STATUS
     0068 15rr                      1-  717     	SWAPR	WSAVE,F
     0069 15rr                      1-  718     	SWAPR	WSAVE,W
     006A                           1-  719     END_OF_INTERRUPT:
     006A 0011                      1-  720     	RETIE	
                                    1-  722     ;--------------------------------------------------------
                                    1-  723     ; code
                                    1-  724     ;--------------------------------------------------------
                                    1-  725     ;***
                                    1-  726     ;  pBlock Stats: dbName = M
                                    1-  727     ;***
                                    1-  728     ;has an exit
                                    1-  729     ;functions called:
                                    1-  730     ;   _initSys
                                    1-  731     ;   _initAD
                                    1-  732     ;   _refreshNub
                                    1-  733     ;   _setInput
                                    1-  734     ;   _pwmStop
                                    1-  735     ;   _powerOff
                                    1-  736     ;   _checkBatAD
                                    1-  737     ;   _checkBatAD
                                    1-  738     ;   _checkOutA
                                    1-  739     ;   _chrgCtr
                                    1-  740     ;   _keyCtr
                                    1-  741     ;   _gotoSleep
                                    1-  742     ;   _powerOff
                                    1-  743     ;   _initSys
                                    1-  744     ;   _initAD
                                    1-  745     ;   _refreshNub
                                    1-  746     ;   _setInput
                                    1-  747     ;   _pwmStop
                                    1-  748     ;   _powerOff
                                    1-  749     ;   _checkBatAD
                                    1-  750     ;   _checkBatAD
                                    1-  751     ;   _checkOutA
                                    1-  752     ;   _chrgCtr
                                    1-  753     ;   _keyCtr
                                    1-  754     ;   _gotoSleep
                                    1-  755     ;   _powerOff
                                    1-  756     ;; Starting pCode block
                                    1-  757     .segment "code"; module=main, function=_main
     0000                           1-  759     _main:
                                    1-  760     ; 2 exit points
                                    1-  761     	.line	139, "main.c"; 	initSys();
                                    1-  762     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  763     	.line	140, "main.c"; 	initAD();
                                    1-  764     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  765     	.line	141, "main.c"; 	firstShowCount = 100;
     0002 2164                      1-  766     	MOVIA	0x64
                                    1-  767     	BANKSEL	_firstShowCount
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  768     	MOVAR	_firstShowCount
                                    1-  769     	.line	142, "main.c"; 	ledLightTime = showFlag = 1;
                                    1-  770     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1-  771     	BSR	_Status,4
                                    1-  772     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  773     	CLRR	_ledLightTime
                                    1-  774     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  775     	BTRSS	_Status,4
                                    1-  776     	MGOTO	_00010_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  777     	BANKSEL	_ledLightTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  778     	INCR	_ledLightTime,F
     000E                           1-  779     _00010_DS_:
                                    1-  780     	.line	143, "main.c"; 	tempshiweiNum = shiweiNum = 8;
     000E 2108                      1-  781     	MOVIA	0x08
                                    1-  782     	BANKSEL	_shiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1-  783     	MOVAR	_shiweiNum
                                    1-  784     	BANKSEL	_tempshiweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  785     	MOVAR	_tempshiweiNum
                                    1-  786     	.line	144, "main.c"; 	tempgeweiNum = geweiNum = 8;
                                    1-  787     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  788     	MOVAR	_geweiNum
     0015 2108                      1-  789     	MOVIA	0x08
                                    1-  790     	BANKSEL	_tempgeweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  791     	MOVAR	_tempgeweiNum
     0018                           1-  792     _00220_DS_:
                                    1-  793     	.line	147, "main.c"; 	CLRWDT();
     0018 0002                      1-  794     	clrwdt
                                    1-  795     	.line	148, "main.c"; 	if(showFlag)
                                    1-  796     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Arr                      1-  797     	BTRSS	_Status,4
                                    1-  798     	MGOTO	_00167_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  799     	.line	149, "main.c"; 	refreshNub();
                                    1-  800     	MCALL	_refreshNub
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  801     	MGOTO	_00168_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1-  802     _00167_DS_:
                                    1-  803     	.line	151, "main.c"; 	setInput();
                                    1-  804     	MCALL	_setInput
     001E 2rrr                      3-   66 m1      LCALL rom_address
     001F                           1-  805     _00168_DS_:
                                    1-  806     	.line	152, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  807     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  808     	MOVR	_workStep,W
     0021 0D03                      1-  809     	BTRSC	STATUS,2
                                    1-  810     	MGOTO	_00175_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  811     ;;unsigned compare: left < lit (0x28=40), size=1
     0023 2128                      1-  812     	MOVIA	0x28
                                    1-  813     	BANKSEL	_tempDuty
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 04rr                      1-  814     	SUBAR	_tempDuty,W
     0026 0803                      1-  815     	BTRSS	STATUS,0
                                    1-  816     	MGOTO	_00175_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  817     	.line	154, "main.c"; 	if(cDuty > tempDuty)
                                    1-  818     	BANKSEL	_cDuty
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  819     	MOVR	_cDuty,W
                                    1-  820     	BANKSEL	_tempDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 04rr                      1-  821     	SUBAR	_tempDuty,W
     002C 0C03                      1-  822     	BTRSC	STATUS,0
                                    1-  823     	MGOTO	_00172_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  824     	.line	156, "main.c"; 	cDuty--;
                                    1-  825     	BANKSEL	_cDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 06rr                      1-  826     	DECR	_cDuty,F
                                    1-  827     	.line	157, "main.c"; 	PWM2DUTY = cDuty;
     0030 01rr                      1-  828     	MOVR	_cDuty,W
     0031 00rr                      1-  829     	SFUN	_PWM2DUTY
                                    1-  830     	MGOTO	_00175_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1-  831     _00172_DS_:
                                    1-  832     	.line	159, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  833     	BANKSEL	_tempDuty
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  834     	MOVR	_tempDuty,W
                                    1-  835     	BANKSEL	_cDuty
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 04rr                      1-  836     	SUBAR	_cDuty,W
     0037 0C03                      1-  837     	BTRSC	STATUS,0
                                    1-  838     	MGOTO	_00175_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  839     	.line	161, "main.c"; 	cDuty++;
     0039 05rr                      1-  840     	INCR	_cDuty,F
                                    1-  841     	.line	162, "main.c"; 	PWM2DUTY = cDuty;
     003A 01rr                      1-  842     	MOVR	_cDuty,W
     003B 00rr                      1-  843     	SFUN	_PWM2DUTY
     003C                           1-  844     _00175_DS_:
                                    1-  845     	.line	165, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  846     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  847     	MOVR	_workStep,W
     003E 0D03                      1-  848     	BTRSC	STATUS,2
                                    1-  849     	MGOTO	_00178_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  850     	BANKSEL	_currentDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1-  851     	MOVR	_currentDuty,W
                                    1-  852     	BANKSEL	_maxDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 04rr                      1-  853     	SUBAR	_maxDuty,W
     0044 0C03                      1-  854     	BTRSC	STATUS,0
                                    1-  855     	MGOTO	_00178_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  856     	.line	167, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  857     	BANKSEL	_currentDuty
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 06rr                      1-  858     	DECR	_currentDuty,F
                                    1-  859     	.line	168, "main.c"; 	PWM2DUTY = currentDuty;
     0048 01rr                      1-  860     	MOVR	_currentDuty,W
     0049 00rr                      1-  861     	SFUN	_PWM2DUTY
                                    1-  862     	.line	169, "main.c"; 	cDuty = currentDuty;
     004A 01rr                      1-  863     	MOVR	_currentDuty,W
                                    1-  864     	BANKSEL	_cDuty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1-  865     	MOVAR	_cDuty
     004D                           1-  866     _00178_DS_:
                                    1-  867     	.line	171, "main.c"; 	if(!IntFlag)
                                    1-  868     	BANKSEL	_Status
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 08rr                      1-  869     	BTRSS	_Status,0
                                    1-  870     	MGOTO	_00220_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  871     	.line	173, "main.c"; 	IntFlag = 0;
     0050 1Crr                      1-  872     	BCR	_Status,0
                                    1-  873     	.line	174, "main.c"; 	if(firstShowCount > 0)
                                    1-  874     	BANKSEL	_firstShowCount
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1-  875     	MOVR	_firstShowCount,W
     0053 0D03                      1-  876     	BTRSC	STATUS,2
                                    1-  877     	MGOTO	_00183_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  878     	.line	176, "main.c"; 	firstShowCount--;
     0055 06rr                      1-  879     	DECR	_firstShowCount,F
                                    1-  880     	.line	177, "main.c"; 	preBatValue = batValue;
                                    1-  881     	BANKSEL	_batValue
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1-  882     	MOVR	_batValue,W
                                    1-  883     	BANKSEL	_preBatValue
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1-  884     	MOVAR	_preBatValue
                                    1-  885     ;;unsigned compare: left < lit (0x5=5), size=1
     005A                           1-  886     _00183_DS_:
                                    1-  887     	.line	180, "main.c"; 	if(batValue < 5 && workStep > 0)
     005A 2105                      1-  888     	MOVIA	0x05
                                    1-  889     	BANKSEL	_batValue
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1-  890     	SUBAR	_batValue,W
     005D 0C03                      1-  891     	BTRSC	STATUS,0
                                    1-  892     	MGOTO	_00187_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  893     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1-  894     	MOVR	_workStep,W
     0061 0D03                      1-  895     	BTRSC	STATUS,2
                                    1-  896     	MGOTO	_00187_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  897     	.line	182, "main.c"; 	if(++closeCount >= 6000)
                                    1-  898     	BANKSEL	_closeCount
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 05rr                      1-  899     	INCR	_closeCount,F
     0065 0D03                      1-  900     	BTRSC	STATUS,2
     0066 05rr                      1-  901     	INCR	(_closeCount + 1),F
                                    1-  902     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0067 2117                      1-  903     	MOVIA	0x17
     0068 04rr                      1-  904     	SUBAR	(_closeCount + 1),W
     0069 0903                      1-  905     	BTRSS	STATUS,2
                                    1-  906     	MGOTO	_00319_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 2170                      1-  907     	MOVIA	0x70
     006C 04rr                      1-  908     	SUBAR	_closeCount,W
     006D                           1-  909     _00319_DS_:
     006D 0803                      1-  910     	BTRSS	STATUS,0
                                    1-  911     	MGOTO	_00188_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  912     	.line	184, "main.c"; 	closeCount = 0;
                                    1-  913     	BANKSEL	_closeCount
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 02rr                      1-  914     	CLRR	_closeCount
     0071 02rr                      1-  915     	CLRR	(_closeCount + 1)
                                    1-  916     	.line	185, "main.c"; 	preBatValue = 0;
                                    1-  917     	BANKSEL	_preBatValue
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 02rr                      1-  918     	CLRR	_preBatValue
                                    1-  919     	.line	186, "main.c"; 	workStep = 0;
                                    1-  920     	BANKSEL	_workStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 02rr                      1-  921     	CLRR	_workStep
                                    1-  922     	.line	187, "main.c"; 	pwmStop();
                                    1-  923     	MCALL	_pwmStop
     0076 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  924     	MGOTO	_00188_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1-  925     _00187_DS_:
                                    1-  926     	.line	192, "main.c"; 	closeCount = 0;
                                    1-  927     	BANKSEL	_closeCount
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 02rr                      1-  928     	CLRR	_closeCount
     007A 02rr                      1-  929     	CLRR	(_closeCount + 1)
                                    1-  930     ;;unsigned compare: left < lit (0x5=5), size=1
     007B                           1-  931     _00188_DS_:
                                    1-  932     	.line	195, "main.c"; 	if(overCount >= 5 && workStep > 0)
     007B 2105                      1-  933     	MOVIA	0x05
                                    1-  934     	BANKSEL	_overCount
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 04rr                      1-  935     	SUBAR	_overCount,W
     007E 0803                      1-  936     	BTRSS	STATUS,0
                                    1-  937     	MGOTO	_00193_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  938     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1-  939     	MOVR	_workStep,W
     0082 0D03                      1-  940     	BTRSC	STATUS,2
                                    1-  941     	MGOTO	_00193_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  942     	.line	197, "main.c"; 	if(++count5S > 250)
                                    1-  943     	BANKSEL	_count5S
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 05rr                      1-  944     	INCR	_count5S,F
     0086 0D03                      1-  945     	BTRSC	STATUS,2
     0087 05rr                      1-  946     	INCR	(_count5S + 1),F
                                    1-  947     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  948     ;;unsigned compare: left >= lit (0xFB=251), size=2
     0088 2100                      1-  949     	MOVIA	0x00
     0089 04rr                      1-  950     	SUBAR	(_count5S + 1),W
     008A 0903                      1-  951     	BTRSS	STATUS,2
                                    1-  952     	MGOTO	_00321_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
     008C 21FB                      1-  953     	MOVIA	0xfb
     008D 04rr                      1-  954     	SUBAR	_count5S,W
     008E                           1-  955     _00321_DS_:
     008E 0803                      1-  956     	BTRSS	STATUS,0
                                    1-  957     	MGOTO	_00194_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  958     	.line	199, "main.c"; 	overCount = 0;
                                    1-  959     	BANKSEL	_overCount
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 02rr                      1-  960     	CLRR	_overCount
                                    1-  961     	.line	200, "main.c"; 	count5S = 0;
                                    1-  962     	BANKSEL	_count5S
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 02rr                      1-  963     	CLRR	_count5S
     0094 02rr                      1-  964     	CLRR	(_count5S + 1)
                                    1-  965     	.line	201, "main.c"; 	ledDeadTime = 25;
     0095 2119                      1-  966     	MOVIA	0x19
                                    1-  967     	BANKSEL	_ledDeadTime
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1-  968     	MOVAR	_ledDeadTime
                                    1-  969     	.line	202, "main.c"; 	powerOff();
                                    1-  970     	MCALL	_powerOff
     0098 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  971     	MGOTO	_00194_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A                           1-  972     _00193_DS_:
                                    1-  973     	.line	207, "main.c"; 	count5S = 0;
                                    1-  974     	BANKSEL	_count5S
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 02rr                      1-  975     	CLRR	_count5S
     009C 02rr                      1-  976     	CLRR	(_count5S + 1)
                                    1-  977     ;;unsigned compare: left < lit (0x5=5), size=1
     009D                           1-  978     _00194_DS_:
                                    1-  979     	.line	209, "main.c"; 	if(count200ms < 5)
     009D 2105                      1-  980     	MOVIA	0x05
                                    1-  981     	BANKSEL	_count200ms
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 04rr                      1-  982     	SUBAR	_count200ms,W
     00A0 0C03                      1-  983     	BTRSC	STATUS,0
                                    1-  984     	MGOTO	_00205_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  985     	.line	211, "main.c"; 	if(workStep > 0 &&cDuty == tempDuty)
                                    1-  986     	BANKSEL	_workStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 01rr                      1-  987     	MOVR	_workStep,W
     00A4 0D03                      1-  988     	BTRSC	STATUS,2
                                    1-  989     	MGOTO	_00197_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  990     	BANKSEL	_tempDuty
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1-  991     	MOVR	_tempDuty,W
                                    1-  992     	BANKSEL	_cDuty
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 12rr                      1-  993     	XORAR	_cDuty,W
     00AA 0D03                      1-  994     	BTRSC	STATUS,2
                                    1-  995     	.line	212, "main.c"; 	checkBatAD();
                                    1-  996     	MCALL	_checkBatAD
     00AB 2rrr                      3-   66 m1      LCALL rom_address
     00AC                           1-  997     _00197_DS_:
                                    1-  998     	.line	213, "main.c"; 	if(workStep == 0)
                                    1-  999     	BANKSEL	_workStep
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1000     	MOVR	_workStep,W
     00AE 0903                      1- 1001     	BTRSS	STATUS,2
                                    1- 1002     	MGOTO	_00206_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1003     	.line	214, "main.c"; 	checkBatAD();
                                    1- 1004     	MCALL	_checkBatAD
     00B0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1005     	MGOTO	_00206_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1006     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1007     ;;unsigned compare: left >= lit (0x9=9), size=1
     00B2                           1- 1008     _00205_DS_:
                                    1- 1009     	.line	216, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     00B2 2109                      1- 1010     	MOVIA	0x09
                                    1- 1011     	BANKSEL	_count200ms
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 04rr                      1- 1012     	SUBAR	_count200ms,W
     00B5 0803                      1- 1013     	BTRSS	STATUS,0
                                    1- 1014     	MGOTO	_00206_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1015     ;;unsigned compare: left < lit (0xB=11), size=1
     00B7 210B                      1- 1016     	MOVIA	0x0b
     00B8 04rr                      1- 1017     	SUBAR	_count200ms,W
     00B9 0803                      1- 1018     	BTRSS	STATUS,0
                                    1- 1019     	.line	218, "main.c"; 	checkOutA();
                                    1- 1020     	MCALL	_checkOutA
     00BA 2rrr                      3-   66 m1      LCALL rom_address
     00BB                           1- 1021     _00206_DS_:
                                    1- 1022     	.line	220, "main.c"; 	chrgCtr();
                                    1- 1023     	MCALL	_chrgCtr
     00BB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1024     	.line	221, "main.c"; 	if(chrgFlag == 0)
                                    1- 1025     	BANKSEL	_Status
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 09rr                      1- 1026     	BTRSS	_Status,3
                                    1- 1027     	.line	222, "main.c"; 	keyCtr();
                                    1- 1028     	MCALL	_keyCtr
     00BE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1029     	.line	223, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1030     	BANKSEL	_workStep
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 01rr                      1- 1031     	MOVR	_workStep,W
     00C1 0903                      1- 1032     	BTRSS	STATUS,2
                                    1- 1033     	MGOTO	_00212_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1034     	BANKSEL	_keyCount
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 1035     	MOVR	_keyCount,W
     00C5 0903                      1- 1036     	BTRSS	STATUS,2
                                    1- 1037     	MGOTO	_00212_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1038     	BANKSEL	_PORTA
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 0Drr                      1- 1039     	BTRSC	_PORTA,3
                                    1- 1040     	MGOTO	_00212_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1041     	BANKSEL	_ledLightTime
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 01rr                      1- 1042     	MOVR	_ledLightTime,W
     00CC 0903                      1- 1043     	BTRSS	STATUS,2
                                    1- 1044     	MGOTO	_00212_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1045     	BANKSEL	_ledDeadTime
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 1046     	MOVR	_ledDeadTime,W
     00D0 0903                      1- 1047     	BTRSS	STATUS,2
                                    1- 1048     	MGOTO	_00212_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1049     	.line	225, "main.c"; 	if(++sleepTime > 200)
                                    1- 1050     	BANKSEL	_sleepTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 05rr                      1- 1051     	INCR	_sleepTime,F
     00D4 0D03                      1- 1052     	BTRSC	STATUS,2
     00D5 05rr                      1- 1053     	INCR	(_sleepTime + 1),F
                                    1- 1054     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1055     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00D6 2100                      1- 1056     	MOVIA	0x00
     00D7 04rr                      1- 1057     	SUBAR	(_sleepTime + 1),W
     00D8 0903                      1- 1058     	BTRSS	STATUS,2
                                    1- 1059     	MGOTO	_00325_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
     00DA 21C9                      1- 1060     	MOVIA	0xc9
     00DB 04rr                      1- 1061     	SUBAR	_sleepTime,W
     00DC                           1- 1062     _00325_DS_:
     00DC 0803                      1- 1063     	BTRSS	STATUS,0
                                    1- 1064     	MGOTO	_00212_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1065     	.line	226, "main.c"; 	gotoSleep();
                                    1- 1066     	MCALL	_gotoSleep
     00DE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1067     ;;unsigned compare: left < lit (0x384=900), size=2
     00DF                           1- 1068     _00212_DS_:
                                    1- 1069     	.line	230, "main.c"; 	if(count900s >= 900)
     00DF 2103                      1- 1070     	MOVIA	0x03
                                    1- 1071     	BANKSEL	_count900s
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 04rr                      1- 1072     	SUBAR	(_count900s + 1),W
     00E2 0903                      1- 1073     	BTRSS	STATUS,2
                                    1- 1074     	MGOTO	_00326_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
     00E4 2184                      1- 1075     	MOVIA	0x84
     00E5 04rr                      1- 1076     	SUBAR	_count900s,W
     00E6                           1- 1077     _00326_DS_:
     00E6 0803                      1- 1078     	BTRSS	STATUS,0
                                    1- 1079     	MGOTO	_00220_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1080     	.line	232, "main.c"; 	powerOff();
                                    1- 1081     	MCALL	_powerOff
     00E8 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1082     	MGOTO	_00220_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1083     	.line	235, "main.c"; 	}
                                    1- 1084     	RETURN	
     00EA 0010                      3-   40 m1      ret
                                    1- 1085     ; exit point of _main
                                    1- 1087     ;***
                                    1- 1088     ;  pBlock Stats: dbName = C
                                    1- 1089     ;***
                                    1- 1090     ;has an exit
                                    1- 1091     ;6 compiler assigned registers:
                                    1- 1092     ;   r0x103B
                                    1- 1093     ;   STK00
                                    1- 1094     ;   r0x103C
                                    1- 1095     ;   r0x103D
                                    1- 1096     ;   r0x103E
                                    1- 1097     ;   r0x103F
                                    1- 1098     ;; Starting pCode block
                                    1- 1099     .segment "code"; module=main, function=_delay
                                    1- 1101     ;local variable name mapping:
     0000                           1- 1106     _delay:
                                    1- 1107     ; 2 exit points
                                    1- 1108     	.line	785, "main.c"; 	void delay(int count)
                                    1- 1109     	BANKSEL	r0x103B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1110     	MOVAR	r0x103B
     0002 01rr                      1- 1111     	MOVR	STK00,W
                                    1- 1112     	BANKSEL	r0x103C
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1113     	MOVAR	r0x103C
                                    1- 1114     	.line	788, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1115     	MOVIA	0x01
                                    1- 1116     	BANKSEL	r0x103D
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1117     	MOVAR	r0x103D
                                    1- 1118     	BANKSEL	r0x103E
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1119     	CLRR	r0x103E
     000A                           1- 1120     _00769_DS_:
                                    1- 1121     	BANKSEL	r0x103B
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1122     	MOVR	r0x103B,W
     000C 2580                      1- 1123     	ADDIA	0x80
                                    1- 1124     	BANKSEL	r0x103F
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1125     	MOVAR	r0x103F
                                    1- 1126     	BANKSEL	r0x103E
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1127     	MOVR	r0x103E,W
     0011 2580                      1- 1128     	ADDIA	0x80
                                    1- 1129     	BANKSEL	r0x103F
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1130     	SUBAR	r0x103F,W
     0014 0903                      1- 1131     	BTRSS	STATUS,2
                                    1- 1132     	MGOTO	_00780_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1133     	BANKSEL	r0x103D
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1134     	MOVR	r0x103D,W
                                    1- 1135     	BANKSEL	r0x103C
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1136     	SUBAR	r0x103C,W
     001A                           1- 1137     _00780_DS_:
     001A 0803                      1- 1138     	BTRSS	STATUS,0
                                    1- 1139     	MGOTO	_00771_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1140     	BANKSEL	r0x103D
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1141     	INCR	r0x103D,F
     001E 0903                      1- 1142     	BTRSS	STATUS,2
                                    1- 1143     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1144     	BANKSEL	r0x103E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1145     	INCR	r0x103E,F
     0022                           1- 1146     _00001_DS_:
                                    1- 1147     	MGOTO	_00769_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1148     _00771_DS_:
                                    1- 1149     	.line	790, "main.c"; 	}
                                    1- 1150     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1151     ; exit point of _delay
                                    1- 1153     ;***
                                    1- 1154     ;  pBlock Stats: dbName = C
                                    1- 1155     ;***
                                    1- 1156     ;has an exit
                                    1- 1157     ;; Starting pCode block
                                    1- 1158     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1160     _F_wait_eoc:
                                    1- 1161     ; 2 exit points
     0000                           1- 1162     _00762_DS_:
                                    1- 1163     	.line	780, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1164     	BTRSS	_ADMDbits,5
                                    1- 1165     	MGOTO	_00762_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1166     	.line	782, "main.c"; 	}
                                    1- 1167     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1168     ; exit point of _F_wait_eoc
                                    1- 1170     ;***
                                    1- 1171     ;  pBlock Stats: dbName = C
                                    1- 1172     ;***
                                    1- 1173     ;has an exit
                                    1- 1174     ;functions called:
                                    1- 1175     ;   _delay
                                    1- 1176     ;   _F_wait_eoc
                                    1- 1177     ;   _delay
                                    1- 1178     ;   _F_wait_eoc
                                    1- 1179     ;7 compiler assigned registers:
                                    1- 1180     ;   r0x1040
                                    1- 1181     ;   STK00
                                    1- 1182     ;   r0x1041
                                    1- 1183     ;   r0x1042
                                    1- 1184     ;   r0x1043
                                    1- 1185     ;   r0x1044
                                    1- 1186     ;   r0x1045
                                    1- 1187     ;; Starting pCode block
                                    1- 1188     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1190     ;local variable name mapping:
     0000                           1- 1193     _F_AIN2_Convert:
                                    1- 1194     ; 2 exit points
                                    1- 1195     	.line	763, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1196     	BANKSEL	r0x1040
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1197     	MOVAR	r0x1040
                                    1- 1198     	.line	765, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1199     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1200     	CLRR	_R_AIN2_DATA_LB
                                    1- 1201     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1202     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1203     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1204     	.line	767, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1205     	MOVIA	0x92
     0008 00rr                      1- 1206     	MOVAR	_ADMD
                                    1- 1207     	.line	768, "main.c"; 	delay(200);	
     0009 21C8                      1- 1208     	MOVIA	0xc8
     000A 00rr                      1- 1209     	MOVAR	STK00
     000B 2100                      1- 1210     	MOVIA	0x00
                                    1- 1211     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1212     	.line	769, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1213     	MOVIA	0x01
                                    1- 1214     	BANKSEL	r0x1041
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1215     	MOVAR	r0x1041
     0010                           1- 1216     _00755_DS_:
                                    1- 1217     	BANKSEL	r0x1041
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1218     	MOVR	r0x1041,W
                                    1- 1219     	BANKSEL	r0x1040
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1220     	SUBAR	r0x1040,W
     0014 0803                      1- 1221     	BTRSS	STATUS,0
                                    1- 1222     	MGOTO	_00757_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1223     	.line	771, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1224     	BSR	_ADMDbits,6
                                    1- 1225     	.line	772, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1226     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1227     	.line	773, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1228     	MOVIA	0x0f
     0019 10rr                      1- 1229     	ANDAR	_ADR,W
                                    1- 1230     ;;3	MOVAR	r0x1042
                                    1- 1231     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1232     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1233     	.line	774, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1234     	MOVR	_ADD,W
                                    1- 1235     	BANKSEL	r0x1042
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1236     	MOVAR	r0x1042
                                    1- 1237     ;;1	CLRR	r0x1043
                                    1- 1238     ;;109	MOVR	r0x1042,W
                                    1- 1239     ;;107	MOVAR	r0x1044
     001F 2100                      1- 1240     	MOVIA	0x00
                                    1- 1241     	BANKSEL	r0x1045
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1242     	MOVAR	r0x1045
                                    1- 1243     ;;108	MOVR	r0x1044,W
                                    1- 1244     	BANKSEL	r0x1042
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1245     	MOVR	r0x1042,W
                                    1- 1246     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1247     	ADDAR	_R_AIN2_DATA,F
                                    1- 1248     	BANKSEL	r0x1045
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1249     	MOVR	r0x1045,W
     0028 0C03                      1- 1250     	BTRSC	STATUS,0
     0029 05rr                      1- 1251     	INCR	r0x1045,W
     002A 0D03                      1- 1252     	BTRSC	STATUS,2
                                    1- 1253     	MGOTO	_00002_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1254     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1255     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1256     _00002_DS_:
                                    1- 1257     	.line	769, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1258     	BANKSEL	r0x1041
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1259     	INCR	r0x1041,F
                                    1- 1260     	MGOTO	_00755_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1261     _00757_DS_:
                                    1- 1262     	.line	776, "main.c"; 	}
                                    1- 1263     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1264     ; exit point of _F_AIN2_Convert
                                    1- 1266     ;***
                                    1- 1267     ;  pBlock Stats: dbName = C
                                    1- 1268     ;***
                                    1- 1269     ;has an exit
                                    1- 1270     ;functions called:
                                    1- 1271     ;   _delay
                                    1- 1272     ;   _F_wait_eoc
                                    1- 1273     ;   _delay
                                    1- 1274     ;   _F_wait_eoc
                                    1- 1275     ;7 compiler assigned registers:
                                    1- 1276     ;   r0x1046
                                    1- 1277     ;   STK00
                                    1- 1278     ;   r0x1047
                                    1- 1279     ;   r0x1048
                                    1- 1280     ;   r0x1049
                                    1- 1281     ;   r0x104A
                                    1- 1282     ;   r0x104B
                                    1- 1283     ;; Starting pCode block
                                    1- 1284     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1286     ;local variable name mapping:
     0000                           1- 1289     _F_AIN4_Convert:
                                    1- 1290     ; 2 exit points
                                    1- 1291     	.line	748, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1292     	BANKSEL	r0x1046
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1293     	MOVAR	r0x1046
                                    1- 1294     	.line	750, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1295     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1296     	CLRR	_R_AIN4_DATA_LB
                                    1- 1297     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1298     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1299     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1300     	.line	752, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1301     	MOVIA	0x94
     0008 00rr                      1- 1302     	MOVAR	_ADMD
                                    1- 1303     	.line	753, "main.c"; 	delay(200);	
     0009 21C8                      1- 1304     	MOVIA	0xc8
     000A 00rr                      1- 1305     	MOVAR	STK00
     000B 2100                      1- 1306     	MOVIA	0x00
                                    1- 1307     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1308     	.line	754, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1309     	MOVIA	0x01
                                    1- 1310     	BANKSEL	r0x1047
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1311     	MOVAR	r0x1047
     0010                           1- 1312     _00746_DS_:
                                    1- 1313     	BANKSEL	r0x1047
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1314     	MOVR	r0x1047,W
                                    1- 1315     	BANKSEL	r0x1046
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1316     	SUBAR	r0x1046,W
     0014 0803                      1- 1317     	BTRSS	STATUS,0
                                    1- 1318     	MGOTO	_00748_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1319     	.line	756, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1320     	BSR	_ADMDbits,6
                                    1- 1321     	.line	757, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1322     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1323     	.line	758, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1324     	MOVIA	0x0f
     0019 10rr                      1- 1325     	ANDAR	_ADR,W
                                    1- 1326     ;;3	MOVAR	r0x1048
                                    1- 1327     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1328     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1329     	.line	759, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1330     	MOVR	_ADD,W
                                    1- 1331     	BANKSEL	r0x1048
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1332     	MOVAR	r0x1048
                                    1- 1333     ;;1	CLRR	r0x1049
                                    1- 1334     ;;106	MOVR	r0x1048,W
                                    1- 1335     ;;104	MOVAR	r0x104A
     001F 2100                      1- 1336     	MOVIA	0x00
                                    1- 1337     	BANKSEL	r0x104B
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1338     	MOVAR	r0x104B
                                    1- 1339     ;;105	MOVR	r0x104A,W
                                    1- 1340     	BANKSEL	r0x1048
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1341     	MOVR	r0x1048,W
                                    1- 1342     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1343     	ADDAR	_R_AIN4_DATA,F
                                    1- 1344     	BANKSEL	r0x104B
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1345     	MOVR	r0x104B,W
     0028 0C03                      1- 1346     	BTRSC	STATUS,0
     0029 05rr                      1- 1347     	INCR	r0x104B,W
     002A 0D03                      1- 1348     	BTRSC	STATUS,2
                                    1- 1349     	MGOTO	_00003_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1350     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1351     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1352     _00003_DS_:
                                    1- 1353     	.line	754, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1354     	BANKSEL	r0x1047
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1355     	INCR	r0x1047,F
                                    1- 1356     	MGOTO	_00746_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1357     _00748_DS_:
                                    1- 1358     	.line	761, "main.c"; 	}
                                    1- 1359     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1360     ; exit point of _F_AIN4_Convert
                                    1- 1362     ;***
                                    1- 1363     ;  pBlock Stats: dbName = C
                                    1- 1364     ;***
                                    1- 1365     ;has an exit
                                    1- 1366     ;functions called:
                                    1- 1367     ;   _F_AIN4_Convert
                                    1- 1368     ;   __mulchar
                                    1- 1369     ;   __mulchar
                                    1- 1370     ;   _F_AIN4_Convert
                                    1- 1371     ;   __mulchar
                                    1- 1372     ;   __mulchar
                                    1- 1373     ;5 compiler assigned registers:
                                    1- 1374     ;   r0x104C
                                    1- 1375     ;   r0x104D
                                    1- 1376     ;   r0x104E
                                    1- 1377     ;   r0x104F
                                    1- 1378     ;   STK00
                                    1- 1379     ;; Starting pCode block
                                    1- 1380     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1382     _checkOutA:
                                    1- 1383     ; 2 exit points
                                    1- 1384     	.line	678, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1385     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1386     	CLRR	_R_AIN4_DATA_LB
                                    1- 1387     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1388     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1389     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1390     	.line	679, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1391     	MOVIA	0x08
                                    1- 1392     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1393     	.line	680, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1394     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1395     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1396     	ANDIA	0xf0
     000A 00rr                      1- 1397     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1398     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1399     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1400     	ANDIA	0x0f
     000E 11rr                      1- 1401     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1402     	XORAR	_R_AIN4_DATA,F
                                    1- 1403     	.line	681, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1404     	MOVIA	0xf0
                                    1- 1405     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1406     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1407     	.line	682, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1408     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1409     	BANKSEL	r0x104C
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1410     	MOVAR	r0x104C
                                    1- 1411     ;;1	CLRR	r0x104D
                                    1- 1412     ;;103	MOVR	r0x104C,W
                                    1- 1413     ;;101	MOVAR	r0x104E
     0016 2100                      1- 1414     	MOVIA	0x00
                                    1- 1415     	BANKSEL	r0x104F
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1416     	MOVAR	r0x104F
                                    1- 1417     ;;102	MOVR	r0x104E,W
                                    1- 1418     	BANKSEL	r0x104C
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1419     	MOVR	r0x104C,W
                                    1- 1420     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1421     	ADDAR	_R_AIN4_DATA,F
                                    1- 1422     	BANKSEL	r0x104F
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1423     	MOVR	r0x104F,W
     001F 0C03                      1- 1424     	BTRSC	STATUS,0
     0020 05rr                      1- 1425     	INCR	r0x104F,W
     0021 0D03                      1- 1426     	BTRSC	STATUS,2
                                    1- 1427     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1428     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1429     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1430     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1431     _00004_DS_:
                                    1- 1432     	.line	683, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1433     	BCR	STATUS,0
                                    1- 1434     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1435     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1436     	RRR	_R_AIN4_DATA,F
                                    1- 1437     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1438     	BCR	STATUS,0
     002A 13rr                      1- 1439     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1440     	RRR	_R_AIN4_DATA,F
                                    1- 1441     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1442     	BCR	STATUS,0
     002D 13rr                      1- 1443     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1444     	RRR	_R_AIN4_DATA,F
                                    1- 1445     	.line	684, "main.c"; 	if(debug)
                                    1- 1446     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1447     	MOVR	_debug,W
     0031 0D03                      1- 1448     	BTRSC	STATUS,2
                                    1- 1449     	MGOTO	_00657_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1450     	.line	685, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 2164                      1- 1451     	MOVIA	0x64
                                    1- 1452     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1453     	MOVAR	_R_AIN4_DATA
     0036 02rr                      1- 1454     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1455     ;;unsigned compare: left < lit (0x6=6), size=1
     0037                           1- 1456     _00657_DS_:
                                    1- 1457     	.line	686, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0037 2106                      1- 1458     	MOVIA	0x06
                                    1- 1459     	BANKSEL	_workStep
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 1460     	SUBAR	_workStep,W
     003A 0C03                      1- 1461     	BTRSC	STATUS,0
                                    1- 1462     	MGOTO	_00684_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1463     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1464     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003C 2100                      1- 1465     	MOVIA	0x00
                                    1- 1466     	BANKSEL	_R_AIN4_DATA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1467     	SUBAR	(_R_AIN4_DATA + 1),W
     003F 0903                      1- 1468     	BTRSS	STATUS,2
                                    1- 1469     	MGOTO	_00732_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 21C9                      1- 1470     	MOVIA	0xc9
     0042 04rr                      1- 1471     	SUBAR	_R_AIN4_DATA,W
     0043                           1- 1472     _00732_DS_:
     0043 0803                      1- 1473     	BTRSS	STATUS,0
                                    1- 1474     	MGOTO	_00684_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1475     	.line	688, "main.c"; 	if(++overCount > 5)
                                    1- 1476     	BANKSEL	_overCount
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 05rr                      1- 1477     	INCR	_overCount,F
                                    1- 1478     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1479     ;;unsigned compare: left >= lit (0x6=6), size=1
     0047 2106                      1- 1480     	MOVIA	0x06
     0048 04rr                      1- 1481     	SUBAR	_overCount,W
     0049 0803                      1- 1482     	BTRSS	STATUS,0
                                    1- 1483     	MGOTO	_00687_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1484     	.line	690, "main.c"; 	overCount = 5;
     004B 2105                      1- 1485     	MOVIA	0x05
     004C 00rr                      1- 1486     	MOVAR	_overCount
                                    1- 1487     	MGOTO	_00687_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1488     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1489     ;;unsigned compare: left >= lit (0x191=401), size=2
     004E                           1- 1490     _00684_DS_:
                                    1- 1491     	.line	693, "main.c"; 	else if(R_AIN4_DATA > 400)
     004E 2101                      1- 1492     	MOVIA	0x01
                                    1- 1493     	BANKSEL	_R_AIN4_DATA
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 04rr                      1- 1494     	SUBAR	(_R_AIN4_DATA + 1),W
     0051 0903                      1- 1495     	BTRSS	STATUS,2
                                    1- 1496     	MGOTO	_00734_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053 2191                      1- 1497     	MOVIA	0x91
     0054 04rr                      1- 1498     	SUBAR	_R_AIN4_DATA,W
     0055                           1- 1499     _00734_DS_:
     0055 0803                      1- 1500     	BTRSS	STATUS,0
                                    1- 1501     	MGOTO	_00681_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1502     	.line	695, "main.c"; 	if(++overCount > 5)
                                    1- 1503     	BANKSEL	_overCount
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 05rr                      1- 1504     	INCR	_overCount,F
                                    1- 1505     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1506     ;;unsigned compare: left >= lit (0x6=6), size=1
     0059 2106                      1- 1507     	MOVIA	0x06
     005A 04rr                      1- 1508     	SUBAR	_overCount,W
     005B 0803                      1- 1509     	BTRSS	STATUS,0
                                    1- 1510     	MGOTO	_00687_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1511     	.line	697, "main.c"; 	overCount = 5;
     005D 2105                      1- 1512     	MOVIA	0x05
     005E 00rr                      1- 1513     	MOVAR	_overCount
                                    1- 1514     	MGOTO	_00687_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1515     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1516     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0060                           1- 1517     _00681_DS_:
                                    1- 1518     	.line	705, "main.c"; 	else if(R_AIN4_DATA > 45)
     0060 2100                      1- 1519     	MOVIA	0x00
                                    1- 1520     	BANKSEL	_R_AIN4_DATA
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 04rr                      1- 1521     	SUBAR	(_R_AIN4_DATA + 1),W
     0063 0903                      1- 1522     	BTRSS	STATUS,2
                                    1- 1523     	MGOTO	_00736_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
     0065 212E                      1- 1524     	MOVIA	0x2e
     0066 04rr                      1- 1525     	SUBAR	_R_AIN4_DATA,W
     0067                           1- 1526     _00736_DS_:
     0067 0803                      1- 1527     	BTRSS	STATUS,0
                                    1- 1528     	MGOTO	_00678_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1529     	.line	707, "main.c"; 	if(overCount > 0)
                                    1- 1530     	BANKSEL	_overCount
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 1531     	MOVR	_overCount,W
     006B 0903                      1- 1532     	BTRSS	STATUS,2
                                    1- 1533     	.line	709, "main.c"; 	overCount--;
     006C 06rr                      1- 1534     	DECR	_overCount,F
                                    1- 1535     	.line	712, "main.c"; 	tempDuty = 70 + workStep*5;
     006D 2105                      1- 1536     	MOVIA	0x05
     006E 00rr                      1- 1537     	MOVAR	STK00
                                    1- 1538     	BANKSEL	_workStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 01rr                      1- 1539     	MOVR	_workStep,W
                                    1- 1540     	MCALL	__mulchar
     0071 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1541     	BANKSEL	r0x104C
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1542     	MOVAR	r0x104C
     0074 2146                      1- 1543     	MOVIA	0x46
     0075 03rr                      1- 1544     	ADDAR	r0x104C,W
                                    1- 1545     	BANKSEL	_tempDuty
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 1546     	MOVAR	_tempDuty
                                    1- 1547     	.line	715, "main.c"; 	if(workStep == 1)
                                    1- 1548     	BANKSEL	_workStep
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1- 1549     	MOVR	_workStep,W
     007A 2401                      1- 1550     	XORIA	0x01
     007B 0903                      1- 1551     	BTRSS	STATUS,2
                                    1- 1552     	MGOTO	_00667_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1553     	.line	716, "main.c"; 	tempDuty = tempDuty + 2;
                                    1- 1554     	BANKSEL	_tempDuty
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 05rr                      1- 1555     	INCR	_tempDuty,F
     007F 05rr                      1- 1556     	INCR	_tempDuty,F
                                    1- 1557     	MGOTO	_00687_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081                           1- 1558     _00667_DS_:
                                    1- 1559     	.line	717, "main.c"; 	else if(workStep == 2)
                                    1- 1560     	BANKSEL	_workStep
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 1561     	MOVR	_workStep,W
     0083 2402                      1- 1562     	XORIA	0x02
     0084 0903                      1- 1563     	BTRSS	STATUS,2
                                    1- 1564     	MGOTO	_00687_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1565     	.line	718, "main.c"; 	tempDuty = tempDuty + 1;
                                    1- 1566     	BANKSEL	_tempDuty
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 05rr                      1- 1567     	INCR	_tempDuty,F
                                    1- 1568     	MGOTO	_00687_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
     0089                           1- 1569     _00678_DS_:
                                    1- 1570     	.line	722, "main.c"; 	if(overCount > 0)
                                    1- 1571     	BANKSEL	_overCount
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 1572     	MOVR	_overCount,W
     008B 0903                      1- 1573     	BTRSS	STATUS,2
                                    1- 1574     	.line	724, "main.c"; 	overCount--;
     008C 06rr                      1- 1575     	DECR	_overCount,F
                                    1- 1576     	.line	726, "main.c"; 	if(R_AIN4_DATA > 40 && workStep < 4)
     008D 2100                      1- 1577     	MOVIA	0x00
                                    1- 1578     	BANKSEL	_R_AIN4_DATA
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 1579     	SUBAR	(_R_AIN4_DATA + 1),W
     0090 0903                      1- 1580     	BTRSS	STATUS,2
                                    1- 1581     	MGOTO	_00737_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092 2129                      1- 1582     	MOVIA	0x29
     0093 04rr                      1- 1583     	SUBAR	_R_AIN4_DATA,W
     0094                           1- 1584     _00737_DS_:
     0094 0803                      1- 1585     	BTRSS	STATUS,0
                                    1- 1586     	MGOTO	_00674_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1587     ;;unsigned compare: left < lit (0x4=4), size=1
     0096 2104                      1- 1588     	MOVIA	0x04
                                    1- 1589     	BANKSEL	_workStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 04rr                      1- 1590     	SUBAR	_workStep,W
     0099 0C03                      1- 1591     	BTRSC	STATUS,0
                                    1- 1592     	MGOTO	_00674_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1593     	.line	728, "main.c"; 	tempDuty = 70 + workStep*5;
     009B 2105                      1- 1594     	MOVIA	0x05
     009C 00rr                      1- 1595     	MOVAR	STK00
     009D 01rr                      1- 1596     	MOVR	_workStep,W
                                    1- 1597     	MCALL	__mulchar
     009E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1598     	BANKSEL	r0x104C
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 1599     	MOVAR	r0x104C
     00A1 2146                      1- 1600     	MOVIA	0x46
     00A2 03rr                      1- 1601     	ADDAR	r0x104C,W
                                    1- 1602     	BANKSEL	_tempDuty
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 00rr                      1- 1603     	MOVAR	_tempDuty
                                    1- 1604     	MGOTO	_00687_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1605     ;;unsigned compare: left < lit (0x44=68), size=2
     00A6                           1- 1606     _00674_DS_:
                                    1- 1607     	.line	731, "main.c"; 	else if(R_AIN4_DATA < 68)
     00A6 2100                      1- 1608     	MOVIA	0x00
                                    1- 1609     	BANKSEL	_R_AIN4_DATA
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 04rr                      1- 1610     	SUBAR	(_R_AIN4_DATA + 1),W
     00A9 0903                      1- 1611     	BTRSS	STATUS,2
                                    1- 1612     	MGOTO	_00739_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
     00AB 2144                      1- 1613     	MOVIA	0x44
     00AC 04rr                      1- 1614     	SUBAR	_R_AIN4_DATA,W
     00AD                           1- 1615     _00739_DS_:
     00AD 0C03                      1- 1616     	BTRSC	STATUS,0
                                    1- 1617     	MGOTO	_00687_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1618     	.line	734, "main.c"; 	tempDuty = maxDuty;
                                    1- 1619     	BANKSEL	_maxDuty
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 01rr                      1- 1620     	MOVR	_maxDuty,W
                                    1- 1621     	BANKSEL	_tempDuty
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 1622     	MOVAR	_tempDuty
     00B3                           1- 1623     _00687_DS_:
                                    1- 1624     	.line	742, "main.c"; 	}
                                    1- 1625     	RETURN	
     00B3 0010                      3-   40 m1      ret
                                    1- 1626     ; exit point of _checkOutA
                                    1- 1628     ;***
                                    1- 1629     ;  pBlock Stats: dbName = C
                                    1- 1630     ;***
                                    1- 1631     ;has an exit
                                    1- 1632     ;functions called:
                                    1- 1633     ;   _F_AIN2_Convert
                                    1- 1634     ;   _pwm1Stop
                                    1- 1635     ;   __mulchar
                                    1- 1636     ;   _F_AIN2_Convert
                                    1- 1637     ;   _pwm1Stop
                                    1- 1638     ;   __mulchar
                                    1- 1639     ;6 compiler assigned registers:
                                    1- 1640     ;   r0x1050
                                    1- 1641     ;   r0x1051
                                    1- 1642     ;   r0x1052
                                    1- 1643     ;   r0x1053
                                    1- 1644     ;   r0x1054
                                    1- 1645     ;   STK00
                                    1- 1646     ;; Starting pCode block
                                    1- 1647     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1649     _checkBatAD:
                                    1- 1650     ; 2 exit points
                                    1- 1651     	.line	623, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1652     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1653     	CLRR	_R_AIN2_DATA_LB
                                    1- 1654     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1655     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1656     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1657     	.line	624, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1658     	MOVIA	0x08
                                    1- 1659     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1660     	.line	625, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1661     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1662     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1663     	ANDIA	0xf0
     000A 00rr                      1- 1664     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1665     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1666     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1667     	ANDIA	0x0f
     000E 11rr                      1- 1668     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1669     	XORAR	_R_AIN2_DATA,F
                                    1- 1670     	.line	626, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1671     	MOVIA	0xf0
                                    1- 1672     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1673     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1674     	.line	627, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1675     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1676     	BANKSEL	r0x1052
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1677     	MOVAR	r0x1052
                                    1- 1678     	BANKSEL	r0x1050
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1679     	MOVAR	r0x1050
                                    1- 1680     	BANKSEL	r0x1051
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1681     	CLRR	r0x1051
                                    1- 1682     ;;110	MOVR	r0x1050,W
     001A 2100                      1- 1683     	MOVIA	0x00
                                    1- 1684     	BANKSEL	r0x1053
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1685     	MOVAR	r0x1053
                                    1- 1686     	BANKSEL	r0x1052
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1687     	MOVR	r0x1052,W
                                    1- 1688     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1689     	ADDAR	_R_AIN2_DATA,F
                                    1- 1690     	BANKSEL	r0x1053
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1691     	MOVR	r0x1053,W
     0023 0C03                      1- 1692     	BTRSC	STATUS,0
     0024 05rr                      1- 1693     	INCR	r0x1053,W
     0025 0D03                      1- 1694     	BTRSC	STATUS,2
                                    1- 1695     	MGOTO	_00005_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1696     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1697     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1698     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1699     _00005_DS_:
                                    1- 1700     	.line	628, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1701     	BCR	STATUS,0
                                    1- 1702     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1703     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1704     	RRR	_R_AIN2_DATA,F
                                    1- 1705     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1706     	BCR	STATUS,0
     002E 13rr                      1- 1707     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1708     	RRR	_R_AIN2_DATA,F
                                    1- 1709     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1710     	BCR	STATUS,0
     0031 13rr                      1- 1711     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1712     	RRR	_R_AIN2_DATA,F
                                    1- 1713     	.line	629, "main.c"; 	if(debug)
                                    1- 1714     	BANKSEL	_debug
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1715     	MOVR	_debug,W
     0035 0D03                      1- 1716     	BTRSC	STATUS,2
                                    1- 1717     	MGOTO	_00583_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1718     	.line	630, "main.c"; 	R_AIN2_DATA = BATTLE;
     0037 210E                      1- 1719     	MOVIA	0x0e
                                    1- 1720     	BANKSEL	_R_AIN2_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1721     	MOVAR	_R_AIN2_DATA
     003A 2106                      1- 1722     	MOVIA	0x06
     003B 00rr                      1- 1723     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1724     ;;unsigned compare: left < lit (0x672=1650), size=2
     003C                           1- 1725     _00583_DS_:
                                    1- 1726     	.line	631, "main.c"; 	if(R_AIN2_DATA >= 1650)
     003C 2106                      1- 1727     	MOVIA	0x06
                                    1- 1728     	BANKSEL	_R_AIN2_DATA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1729     	SUBAR	(_R_AIN2_DATA + 1),W
     003F 0903                      1- 1730     	BTRSS	STATUS,2
                                    1- 1731     	MGOTO	_00648_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 2172                      1- 1732     	MOVIA	0x72
     0042 04rr                      1- 1733     	SUBAR	_R_AIN2_DATA,W
     0043                           1- 1734     _00648_DS_:
     0043 0803                      1- 1735     	BTRSS	STATUS,0
                                    1- 1736     	MGOTO	_00585_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1737     	.line	633, "main.c"; 	chrgStep = 4;
     0045 2104                      1- 1738     	MOVIA	0x04
                                    1- 1739     	BANKSEL	_chrgStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1740     	MOVAR	_chrgStep
                                    1- 1741     	.line	634, "main.c"; 	pwm1Stop();
                                    1- 1742     	MCALL	_pwm1Stop
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1743     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1744     ;;unsigned compare: left >= lit (0x49B=1179), size=2
     0049                           1- 1745     _00585_DS_:
                                    1- 1746     	.line	636, "main.c"; 	if(R_AIN2_DATA <= 1178)
     0049 2104                      1- 1747     	MOVIA	0x04
                                    1- 1748     	BANKSEL	_R_AIN2_DATA
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 04rr                      1- 1749     	SUBAR	(_R_AIN2_DATA + 1),W
     004C 0903                      1- 1750     	BTRSS	STATUS,2
                                    1- 1751     	MGOTO	_00649_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E 219B                      1- 1752     	MOVIA	0x9b
     004F 04rr                      1- 1753     	SUBAR	_R_AIN2_DATA,W
     0050                           1- 1754     _00649_DS_:
     0050 0C03                      1- 1755     	BTRSC	STATUS,0
                                    1- 1756     	MGOTO	_00587_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1757     	.line	638, "main.c"; 	pwStep = 0;
                                    1- 1758     	BANKSEL	_pwStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1- 1759     	CLRR	_pwStep
                                    1- 1760     	.line	639, "main.c"; 	R_AIN2_DATA = 1170;
     0054 2192                      1- 1761     	MOVIA	0x92
                                    1- 1762     	BANKSEL	_R_AIN2_DATA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 00rr                      1- 1763     	MOVAR	_R_AIN2_DATA
     0057 2104                      1- 1764     	MOVIA	0x04
     0058 00rr                      1- 1765     	MOVAR	(_R_AIN2_DATA + 1)
     0059                           1- 1766     _00587_DS_:
                                    1- 1767     	.line	642, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1170;
     0059 216E                      1- 1768     	MOVIA	0x6e
                                    1- 1769     	BANKSEL	_R_AIN2_DATA
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 03rr                      1- 1770     	ADDAR	_R_AIN2_DATA,F
     005C 21FB                      1- 1771     	MOVIA	0xfb
     005D 0C03                      1- 1772     	BTRSC	STATUS,0
     005E 21FC                      1- 1773     	MOVIA	0xfc
     005F 03rr                      1- 1774     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1775     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 1776     	.line	643, "main.c"; 	if(R_AIN2_DATA >= 340)
     0060 2101                      1- 1777     	MOVIA	0x01
     0061 04rr                      1- 1778     	SUBAR	(_R_AIN2_DATA + 1),W
     0062 0903                      1- 1779     	BTRSS	STATUS,2
                                    1- 1780     	MGOTO	_00650_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064 2154                      1- 1781     	MOVIA	0x54
     0065 04rr                      1- 1782     	SUBAR	_R_AIN2_DATA,W
     0066                           1- 1783     _00650_DS_:
     0066 0803                      1- 1784     	BTRSS	STATUS,0
                                    1- 1785     	MGOTO	_00594_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1786     	.line	645, "main.c"; 	batValue = 80+(R_AIN2_DATA-300)/4;
     0068 21D4                      1- 1787     	MOVIA	0xd4
                                    1- 1788     	BANKSEL	_R_AIN2_DATA
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 03rr                      1- 1789     	ADDAR	_R_AIN2_DATA,W
                                    1- 1790     	BANKSEL	r0x1050
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 1791     	MOVAR	r0x1050
     006D 21FE                      1- 1792     	MOVIA	0xfe
                                    1- 1793     	BANKSEL	r0x1051
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1794     	MOVAR	r0x1051
                                    1- 1795     	BANKSEL	_R_AIN2_DATA
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 1796     	MOVR	(_R_AIN2_DATA + 1),W
     0072 0C03                      1- 1797     	BTRSC	STATUS,0
     0073 05rr                      1- 1798     	INCR	(_R_AIN2_DATA + 1),W
     0074 0D03                      1- 1799     	BTRSC	STATUS,2
                                    1- 1800     	MGOTO	_00006_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1801     	BANKSEL	r0x1051
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 1802     	ADDAR	r0x1051,F
                                    1- 1803     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0078                           1- 1804     _00006_DS_:
     0078 1C03                      1- 1805     	BCR	STATUS,0
                                    1- 1806     	BANKSEL	r0x1051
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 13rr                      1- 1807     	RRR	r0x1051,W
                                    1- 1808     	BANKSEL	r0x1053
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1809     	MOVAR	r0x1053
                                    1- 1810     	BANKSEL	r0x1050
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 13rr                      1- 1811     	RRR	r0x1050,W
                                    1- 1812     	BANKSEL	r0x1052
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 00rr                      1- 1813     	MOVAR	r0x1052
                                    1- 1814     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0081 1C03                      1- 1815     	BCR	STATUS,0
                                    1- 1816     	BANKSEL	r0x1053
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 13rr                      1- 1817     	RRR	r0x1053,F
                                    1- 1818     	BANKSEL	r0x1052
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 13rr                      1- 1819     	RRR	r0x1052,F
     0086 01rr                      1- 1820     	MOVR	r0x1052,W
                                    1- 1821     	BANKSEL	r0x1050
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1822     	MOVAR	r0x1050
     0089 2150                      1- 1823     	MOVIA	0x50
     008A 03rr                      1- 1824     	ADDAR	r0x1050,W
                                    1- 1825     	BANKSEL	_batValue
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1826     	MOVAR	_batValue
                                    1- 1827     	MGOTO	_00595_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1828     ;;unsigned compare: left < lit (0xC8=200), size=2
     008E                           1- 1829     _00594_DS_:
                                    1- 1830     	.line	647, "main.c"; 	else if(R_AIN2_DATA >= 200)
     008E 2100                      1- 1831     	MOVIA	0x00
                                    1- 1832     	BANKSEL	_R_AIN2_DATA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 1833     	SUBAR	(_R_AIN2_DATA + 1),W
     0091 0903                      1- 1834     	BTRSS	STATUS,2
                                    1- 1835     	MGOTO	_00651_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 21C8                      1- 1836     	MOVIA	0xc8
     0094 04rr                      1- 1837     	SUBAR	_R_AIN2_DATA,W
     0095                           1- 1838     _00651_DS_:
     0095 0803                      1- 1839     	BTRSS	STATUS,0
                                    1- 1840     	MGOTO	_00591_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1841     	.line	649, "main.c"; 	batValue = 25 + (R_AIN2_DATA-200)/2;
     0097 2138                      1- 1842     	MOVIA	0x38
                                    1- 1843     	BANKSEL	_R_AIN2_DATA
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 03rr                      1- 1844     	ADDAR	_R_AIN2_DATA,W
                                    1- 1845     	BANKSEL	r0x1050
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 1846     	MOVAR	r0x1050
     009C 21FF                      1- 1847     	MOVIA	0xff
                                    1- 1848     	BANKSEL	r0x1052
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 1849     	MOVAR	r0x1052
                                    1- 1850     	BANKSEL	_R_AIN2_DATA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 1851     	MOVR	(_R_AIN2_DATA + 1),W
     00A1 0C03                      1- 1852     	BTRSC	STATUS,0
     00A2 05rr                      1- 1853     	INCR	(_R_AIN2_DATA + 1),W
     00A3 0D03                      1- 1854     	BTRSC	STATUS,2
                                    1- 1855     	MGOTO	_00007_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1856     	BANKSEL	r0x1052
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 03rr                      1- 1857     	ADDAR	r0x1052,F
                                    1- 1858     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00A7                           1- 1859     _00007_DS_:
     00A7 1C03                      1- 1860     	BCR	STATUS,0
                                    1- 1861     	BANKSEL	r0x1052
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 13rr                      1- 1862     	RRR	r0x1052,W
                                    1- 1863     ;;1	MOVAR	r0x1054
                                    1- 1864     	BANKSEL	r0x1050
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 13rr                      1- 1865     	RRR	r0x1050,W
                                    1- 1866     	BANKSEL	r0x1053
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 00rr                      1- 1867     	MOVAR	r0x1053
                                    1- 1868     	BANKSEL	r0x1050
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 1869     	MOVAR	r0x1050
     00B0 2119                      1- 1870     	MOVIA	0x19
     00B1 03rr                      1- 1871     	ADDAR	r0x1050,W
                                    1- 1872     	BANKSEL	_batValue
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1873     	MOVAR	_batValue
                                    1- 1874     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1875     ;;unsigned compare: left >= lit (0x60=96), size=1
                                    1- 1876     	.line	650, "main.c"; 	if(batValue > 95)
     00B4 2160                      1- 1877     	MOVIA	0x60
     00B5 04rr                      1- 1878     	SUBAR	_batValue,W
     00B6 0803                      1- 1879     	BTRSS	STATUS,0
                                    1- 1880     	MGOTO	_00595_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1881     	.line	651, "main.c"; 	batValue = 90;
     00B8 215A                      1- 1882     	MOVIA	0x5a
     00B9 00rr                      1- 1883     	MOVAR	_batValue
                                    1- 1884     	MGOTO	_00595_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1885     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00BB                           1- 1886     _00591_DS_:
                                    1- 1887     	.line	655, "main.c"; 	batValue = R_AIN2_DATA/8;
     00BB 1C03                      1- 1888     	BCR	STATUS,0
                                    1- 1889     	BANKSEL	_R_AIN2_DATA
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 13rr                      1- 1890     	RRR	(_R_AIN2_DATA + 1),W
                                    1- 1891     	BANKSEL	r0x1053
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 1892     	MOVAR	r0x1053
                                    1- 1893     	BANKSEL	_R_AIN2_DATA
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 13rr                      1- 1894     	RRR	_R_AIN2_DATA,W
                                    1- 1895     	BANKSEL	r0x1050
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 1896     	MOVAR	r0x1050
                                    1- 1897     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C4 1C03                      1- 1898     	BCR	STATUS,0
                                    1- 1899     	BANKSEL	r0x1053
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 13rr                      1- 1900     	RRR	r0x1053,F
                                    1- 1901     	BANKSEL	r0x1050
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 13rr                      1- 1902     	RRR	r0x1050,F
                                    1- 1903     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C9 1C03                      1- 1904     	BCR	STATUS,0
                                    1- 1905     	BANKSEL	r0x1053
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 13rr                      1- 1906     	RRR	r0x1053,F
                                    1- 1907     	BANKSEL	r0x1050
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 13rr                      1- 1908     	RRR	r0x1050,F
     00CE 01rr                      1- 1909     	MOVR	r0x1050,W
                                    1- 1910     	BANKSEL	_batValue
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 00rr                      1- 1911     	MOVAR	_batValue
     00D1                           1- 1912     _00595_DS_:
                                    1- 1913     	.line	657, "main.c"; 	if(0x08 & PORTA)
                                    1- 1914     	BANKSEL	_PORTA
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 09rr                      1- 1915     	BTRSS	_PORTA,3
                                    1- 1916     	MGOTO	_00608_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1917     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1918     ;;unsigned compare: left >= lit (0x1F=31), size=1
                                    1- 1919     	.line	660, "main.c"; 	if(batValue > 30)
     00D4 211F                      1- 1920     	MOVIA	0x1f
                                    1- 1921     	BANKSEL	_batValue
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 04rr                      1- 1922     	SUBAR	_batValue,W
     00D7 0803                      1- 1923     	BTRSS	STATUS,0
                                    1- 1924     	MGOTO	_00602_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1925     	.line	661, "main.c"; 	batValue = batValue - 20 +  shiweiNum*2;
     00D9 21EC                      1- 1926     	MOVIA	0xec
     00DA 03rr                      1- 1927     	ADDAR	_batValue,W
                                    1- 1928     	BANKSEL	r0x1050
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 1929     	MOVAR	r0x1050
     00DD 2102                      1- 1930     	MOVIA	0x02
     00DE 00rr                      1- 1931     	MOVAR	STK00
                                    1- 1932     	BANKSEL	_shiweiNum
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1933     	MOVR	_shiweiNum,W
                                    1- 1934     	MCALL	__mulchar
     00E1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1935     	BANKSEL	r0x1053
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 00rr                      1- 1936     	MOVAR	r0x1053
                                    1- 1937     	BANKSEL	r0x1050
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 03rr                      1- 1938     	ADDAR	r0x1050,W
                                    1- 1939     	BANKSEL	_batValue
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 00rr                      1- 1940     	MOVAR	_batValue
                                    1- 1941     	MGOTO	_00610_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1942     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1943     ;;unsigned compare: left >= lit (0xB=11), size=1
     00E9                           1- 1944     _00602_DS_:
                                    1- 1945     	.line	662, "main.c"; 	else if(batValue > 10)
     00E9 210B                      1- 1946     	MOVIA	0x0b
                                    1- 1947     	BANKSEL	_batValue
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 04rr                      1- 1948     	SUBAR	_batValue,W
     00EC 0803                      1- 1949     	BTRSS	STATUS,0
                                    1- 1950     	MGOTO	_00599_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1951     	.line	663, "main.c"; 	batValue = batValue - 10 +  shiweiNum;
     00EE 21F6                      1- 1952     	MOVIA	0xf6
     00EF 03rr                      1- 1953     	ADDAR	_batValue,W
                                    1- 1954     	BANKSEL	r0x1050
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 00rr                      1- 1955     	MOVAR	r0x1050
                                    1- 1956     	BANKSEL	_shiweiNum
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 01rr                      1- 1957     	MOVR	_shiweiNum,W
                                    1- 1958     	BANKSEL	r0x1050
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 03rr                      1- 1959     	ADDAR	r0x1050,W
                                    1- 1960     	BANKSEL	_batValue
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 00rr                      1- 1961     	MOVAR	_batValue
                                    1- 1962     	MGOTO	_00610_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
     00F9                           1- 1963     _00599_DS_:
                                    1- 1964     	.line	664, "main.c"; 	else if(batValue > 0)
                                    1- 1965     	BANKSEL	_batValue
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 01rr                      1- 1966     	MOVR	_batValue,W
     00FB 0D03                      1- 1967     	BTRSC	STATUS,2
                                    1- 1968     	MGOTO	_00610_DS_
     00FC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1969     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=0, offr=0
                                    1- 1970     	.line	665, "main.c"; 	batValue = batValue/2 + 1;
     00FD 1C03                      1- 1971     	BCR	STATUS,0
     00FE 13rr                      1- 1972     	RRR	_batValue,W
                                    1- 1973     	BANKSEL	r0x1050
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 00rr                      1- 1974     	MOVAR	r0x1050
     0101 05rr                      1- 1975     	INCR	r0x1050,W
                                    1- 1976     	BANKSEL	_batValue
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 00rr                      1- 1977     	MOVAR	_batValue
                                    1- 1978     	MGOTO	_00610_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1979     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1980     ;;unsigned compare: left >= lit (0x15=21), size=1
     0105                           1- 1981     _00608_DS_:
                                    1- 1982     	.line	667, "main.c"; 	else if(batValue > 20 && batValue < 98)
     0105 2115                      1- 1983     	MOVIA	0x15
                                    1- 1984     	BANKSEL	_batValue
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 04rr                      1- 1985     	SUBAR	_batValue,W
     0108 0803                      1- 1986     	BTRSS	STATUS,0
                                    1- 1987     	MGOTO	_00610_DS_
     0109 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1988     ;;unsigned compare: left < lit (0x62=98), size=1
     010A 2162                      1- 1989     	MOVIA	0x62
     010B 04rr                      1- 1990     	SUBAR	_batValue,W
     010C 0C03                      1- 1991     	BTRSC	STATUS,0
                                    1- 1992     	MGOTO	_00610_DS_
     010D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1993     	.line	669, "main.c"; 	batValue = batValue + 7;
     010E 2107                      1- 1994     	MOVIA	0x07
     010F 03rr                      1- 1995     	ADDAR	_batValue,F
     0110                           1- 1996     _00610_DS_:
                                    1- 1997     	.line	672, "main.c"; 	}
                                    1- 1998     	RETURN	
     0110 0010                      3-   40 m1      ret
                                    1- 1999     ; exit point of _checkBatAD
                                    1- 2001     ;***
                                    1- 2002     ;  pBlock Stats: dbName = C
                                    1- 2003     ;***
                                    1- 2004     ;has an exit
                                    1- 2005     ;functions called:
                                    1- 2006     ;   _delay
                                    1- 2007     ;   _delay
                                    1- 2008     ;1 compiler assigned register :
                                    1- 2009     ;   STK00
                                    1- 2010     ;; Starting pCode block
                                    1- 2011     .segment "code"; module=main, function=_initAD
     0000                           1- 2013     _initAD:
                                    1- 2014     ; 2 exit points
                                    1- 2015     	.line	599, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2016     	MOVIA	0x84
     0001 00rr                      1- 2017     	MOVAR	_ADMD
                                    1- 2018     	.line	604, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2019     	CLRR	_ADVREFH
                                    1- 2020     	.line	609, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2021     	MOVIA	0x10
     0004 00rr                      1- 2022     	MOVAR	_ADR
                                    1- 2023     	.line	611, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2024     	MOVIA	0x03
     0006 00rr                      1- 2025     	MOVAR	_ADCR
                                    1- 2026     	.line	613, "main.c"; 	PACON = C_PA2_AIN2 | C_PA1_AIN1 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2116                      1- 2027     	MOVIA	0x16
     0008 00rr                      1- 2028     	MOVAR	_PACON
                                    1- 2029     	.line	614, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 2030     	BSR	_ADMDbits,4
                                    1- 2031     	.line	615, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 2032     	MOVIA	0x64
     000B 00rr                      1- 2033     	MOVAR	STK00
     000C 2100                      1- 2034     	MOVIA	0x00
                                    1- 2035     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2036     	.line	618, "main.c"; 	}
                                    1- 2037     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2038     ; exit point of _initAD
                                    1- 2040     ;***
                                    1- 2041     ;  pBlock Stats: dbName = C
                                    1- 2042     ;***
                                    1- 2043     ;has an exit
                                    1- 2044     ;functions called:
                                    1- 2045     ;   _checkBatAD
                                    1- 2046     ;   _checkBatAD
                                    1- 2047     ;1 compiler assigned register :
                                    1- 2048     ;   r0x1055
                                    1- 2049     ;; Starting pCode block
                                    1- 2050     .segment "code"; module=main, function=_keyRead
                                    1- 2052     ;local variable name mapping:
     0000                           1- 2054     _keyRead:
                                    1- 2055     ; 2 exit points
                                    1- 2056     	.line	561, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2057     	BANKSEL	r0x1055
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2058     	MOVAR	r0x1055
                                    1- 2059     	.line	563, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2060     	MOVR	r0x1055,W
     0003 0D03                      1- 2061     	BTRSC	STATUS,2
                                    1- 2062     	MGOTO	_00571_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2063     	.line	565, "main.c"; 	keyCount++;
                                    1- 2064     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2065     	INCR	_keyCount,F
                                    1- 2066     	.line	566, "main.c"; 	checkBatAD();
                                    1- 2067     	MCALL	_checkBatAD
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2068     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2069     	.line	567, "main.c"; 	if(keyCount >= 200)
     0008 21C8                      1- 2070     	MOVIA	0xc8
                                    1- 2071     	BANKSEL	_keyCount
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 2072     	SUBAR	_keyCount,W
     000B 0803                      1- 2073     	BTRSS	STATUS,0
                                    1- 2074     	MGOTO	_00572_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2075     	.line	569, "main.c"; 	keyCount = 200;
     000D 21C8                      1- 2076     	MOVIA	0xc8
     000E 00rr                      1- 2077     	MOVAR	_keyCount
                                    1- 2078     	.line	570, "main.c"; 	if(!longPressFlag)
                                    1- 2079     	BANKSEL	_Status
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 0Crr                      1- 2080     	BTRSC	_Status,1
                                    1- 2081     	MGOTO	_00572_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2082     	.line	572, "main.c"; 	longPressFlag = 1;
     0012 18rr                      1- 2083     	BSR	_Status,1
                                    1- 2084     	.line	573, "main.c"; 	return 2;
     0013 2102                      1- 2085     	MOVIA	0x02
                                    1- 2086     	MGOTO	_00573_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2087     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 2088     _00571_DS_:
                                    1- 2089     	.line	579, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 2090     	MOVIA	0xc8
                                    1- 2091     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2092     	SUBAR	_keyCount,W
     0018 0803                      1- 2093     	BTRSS	STATUS,0
                                    1- 2094     	MGOTO	_00568_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2095     	.line	581, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2096     	CLRR	_keyCount
                                    1- 2097     	.line	582, "main.c"; 	longPressFlag = 0;
                                    1- 2098     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 1Crr                      1- 2099     	BCR	_Status,1
                                    1- 2100     	.line	583, "main.c"; 	return	0;
     001D 2100                      1- 2101     	MOVIA	0x00
                                    1- 2102     	MGOTO	_00573_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2103     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2104     _00568_DS_:
                                    1- 2105     	.line	585, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2106     	MOVIA	0x04
                                    1- 2107     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2108     	SUBAR	_keyCount,W
     0022 0803                      1- 2109     	BTRSS	STATUS,0
                                    1- 2110     	MGOTO	_00569_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2111     	.line	587, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2112     	CLRR	_keyCount
                                    1- 2113     	.line	588, "main.c"; 	return	1;
     0025 2101                      1- 2114     	MOVIA	0x01
                                    1- 2115     	MGOTO	_00573_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2116     _00569_DS_:
                                    1- 2117     	.line	590, "main.c"; 	keyCount = 0;
                                    1- 2118     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2119     	CLRR	_keyCount
     0029                           1- 2120     _00572_DS_:
                                    1- 2121     	.line	592, "main.c"; 	return 0;
     0029 2100                      1- 2122     	MOVIA	0x00
     002A                           1- 2123     _00573_DS_:
                                    1- 2124     	.line	593, "main.c"; 	}
                                    1- 2125     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2126     ; exit point of _keyRead
                                    1- 2128     ;***
                                    1- 2129     ;  pBlock Stats: dbName = C
                                    1- 2130     ;***
                                    1- 2131     ;has an exit
                                    1- 2132     ;functions called:
                                    1- 2133     ;   _checkBatAD
                                    1- 2134     ;   _setInput
                                    1- 2135     ;   _pwmStop
                                    1- 2136     ;   _pwm1Stop
                                    1- 2137     ;   _checkBatAD
                                    1- 2138     ;   _setInput
                                    1- 2139     ;   _pwmStop
                                    1- 2140     ;   _pwm1Stop
                                    1- 2141     ;; Starting pCode block
                                    1- 2142     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2144     _gotoSleep:
                                    1- 2145     ; 2 exit points
                                    1- 2146     	.line	529, "main.c"; 	checkBatAD();
                                    1- 2147     	MCALL	_checkBatAD
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2148     	.line	530, "main.c"; 	setInput();
                                    1- 2149     	MCALL	_setInput
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2150     	.line	531, "main.c"; 	count5s = 0;
                                    1- 2151     	BANKSEL	_count5s
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2152     	CLRR	_count5s
     0004 02rr                      1- 2153     	CLRR	(_count5s + 1)
                                    1- 2154     	.line	532, "main.c"; 	showFlag = 0;
                                    1- 2155     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Err                      1- 2156     	BCR	_Status,4
                                    1- 2157     	.line	533, "main.c"; 	IOSTA = C_PA5_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0007 212E                      1- 2158     	MOVIA	0x2e
     0008 000r                      1- 2159     	IOST	_IOSTA
                                    1- 2160     	.line	535, "main.c"; 	IOSTB = 0x00;
     0009 0200                      1- 2161     	CLRA	
     000A 000r                      1- 2162     	IOST	_IOSTB
                                    1- 2163     	.line	536, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2164     	CLRR	_PORTB
                                    1- 2165     	.line	537, "main.c"; 	PORTA = 0x00;
                                    1- 2166     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2167     	CLRR	_PORTA
                                    1- 2168     	.line	538, "main.c"; 	sleepTime = 0;
                                    1- 2169     	BANKSEL	_sleepTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2170     	CLRR	_sleepTime
     0010 02rr                      1- 2171     	CLRR	(_sleepTime + 1)
                                    1- 2172     	.line	540, "main.c"; 	pwmStop();
                                    1- 2173     	MCALL	_pwmStop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2174     	.line	541, "main.c"; 	pwm1Stop();
                                    1- 2175     	MCALL	_pwm1Stop
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2176     	.line	542, "main.c"; 	workStep = 0;
                                    1- 2177     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2178     	CLRR	_workStep
                                    1- 2179     	.line	543, "main.c"; 	AWUCON = 0x28;
     0015 2128                      1- 2180     	MOVIA	0x28
     0016 00rr                      1- 2181     	MOVAR	_AWUCON
                                    1- 2182     	.line	544, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0017 210B                      1- 2183     	MOVIA	0x0b
     0018 00rr                      1- 2184     	MOVAR	_INTE
                                    1- 2185     	.line	545, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0019 2118                      1- 2186     	MOVIA	0x18
     001A 00rr                      1- 2187     	MOVAR	_PCON
                                    1- 2188     	.line	546, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001B 02rr                      1- 2189     	CLRR	_INTF
                                    1- 2190     	.line	547, "main.c"; 	CLRWDT();
     001C 0002                      1- 2191     	clrwdt
                                    1- 2192     	.line	548, "main.c"; 	ENI();
     001D 0004                      1- 2193     	ENI
                                    1- 2194     	.line	549, "main.c"; 	SLEEP();
     001E 0001                      1- 2195     	sleep
                                    1- 2196     	.line	550, "main.c"; 	AWUCON = 0x00;
     001F 02rr                      1- 2197     	CLRR	_AWUCON
                                    1- 2198     	.line	552, "main.c"; 	IOSTA =  C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0020 213E                      1- 2199     	MOVIA	0x3e
     0021 000r                      1- 2200     	IOST	_IOSTA
                                    1- 2201     	.line	553, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2202     	MOVIA	0x01
     0023 00rr                      1- 2203     	MOVAR	_INTE
                                    1- 2204     	.line	554, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2205     	CLRR	_INTF
                                    1- 2206     	.line	556, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0025 21A8                      1- 2207     	MOVIA	0xa8
     0026 00rr                      1- 2208     	MOVAR	_PCON
                                    1- 2209     	.line	558, "main.c"; 	}
                                    1- 2210     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2211     ; exit point of _gotoSleep
                                    1- 2213     ;***
                                    1- 2214     ;  pBlock Stats: dbName = C
                                    1- 2215     ;***
                                    1- 2216     ;has an exit
                                    1- 2217     ;; Starting pCode block
                                    1- 2218     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2220     _pwmStop:
                                    1- 2221     ; 2 exit points
                                    1- 2222     	.line	523, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2223     	CLRA	
     0001 00rr                      1- 2224     	SFUN	_T2CR1
                                    1- 2225     	.line	524, "main.c"; 	}
                                    1- 2226     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2227     ; exit point of _pwmStop
                                    1- 2229     ;***
                                    1- 2230     ;  pBlock Stats: dbName = C
                                    1- 2231     ;***
                                    1- 2232     ;has an exit
                                    1- 2233     ;1 compiler assigned register :
                                    1- 2234     ;   r0x1056
                                    1- 2235     ;; Starting pCode block
                                    1- 2236     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2238     _pwmInit:
                                    1- 2239     ; 2 exit points
                                    1- 2240     	.line	511, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2241     	SFUNR	_T2CR1
                                    1- 2242     	BANKSEL	r0x1056
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2243     	MOVAR	r0x1056
     0003 0Frr                      1- 2244     	BTRSC	r0x1056,7
                                    1- 2245     	.line	512, "main.c"; 	return;
                                    1- 2246     	MGOTO	_00548_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2247     	.line	513, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2248     	CLRR	_TMRH
                                    1- 2249     	.line	514, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2250     	MOVIA	0x64
     0007 00rr                      1- 2251     	SFUN	_TMR2
                                    1- 2252     	.line	517, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2253     	MOVIA	0x01
     0009 00rr                      1- 2254     	SFUN	_T2CR2
                                    1- 2255     	.line	518, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2256     	MOVIA	0x83
     000B 00rr                      1- 2257     	SFUN	_T2CR1
     000C                           1- 2258     _00548_DS_:
                                    1- 2259     	.line	519, "main.c"; 	}
                                    1- 2260     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2261     ; exit point of _pwmInit
                                    1- 2263     ;***
                                    1- 2264     ;  pBlock Stats: dbName = C
                                    1- 2265     ;***
                                    1- 2266     ;has an exit
                                    1- 2267     ;; Starting pCode block
                                    1- 2268     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2270     _pwm1Stop:
                                    1- 2271     ; 2 exit points
                                    1- 2272     	.line	504, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2273     	CLRA	
     0001 00rr                      1- 2274     	SFUN	_T1CR1
                                    1- 2275     	.line	505, "main.c"; 	}
                                    1- 2276     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2277     ; exit point of _pwm1Stop
                                    1- 2279     ;***
                                    1- 2280     ;  pBlock Stats: dbName = C
                                    1- 2281     ;***
                                    1- 2282     ;has an exit
                                    1- 2283     ;1 compiler assigned register :
                                    1- 2284     ;   r0x1057
                                    1- 2285     ;; Starting pCode block
                                    1- 2286     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2288     _pwm1Init:
                                    1- 2289     ; 2 exit points
                                    1- 2290     	.line	492, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2291     	SFUNR	_T1CR1
                                    1- 2292     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2293     	MOVAR	r0x1057
     0003 0Frr                      1- 2294     	BTRSC	r0x1057,7
                                    1- 2295     	.line	493, "main.c"; 	return;
                                    1- 2296     	MGOTO	_00537_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2297     	.line	494, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2298     	CLRR	_TMRH
                                    1- 2299     	.line	495, "main.c"; 	TMR1 = 24;							//频率为110K
     0006 2118                      1- 2300     	MOVIA	0x18
     0007 00rr                      1- 2301     	SFUN	_TMR1
                                    1- 2302     	.line	498, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2303     	CLRA	
     0009 00rr                      1- 2304     	SFUN	_T1CR2
                                    1- 2305     	.line	499, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2306     	MOVIA	0x83
     000B 00rr                      1- 2307     	SFUN	_T1CR1
     000C                           1- 2308     _00537_DS_:
                                    1- 2309     	.line	500, "main.c"; 	}
                                    1- 2310     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2311     ; exit point of _pwm1Init
                                    1- 2313     ;***
                                    1- 2314     ;  pBlock Stats: dbName = C
                                    1- 2315     ;***
                                    1- 2316     ;has an exit
                                    1- 2317     ;functions called:
                                    1- 2318     ;   _pwmStop
                                    1- 2319     ;   _pwmStop
                                    1- 2320     ;; Starting pCode block
                                    1- 2321     .segment "code"; module=main, function=_powerOff
     0000                           1- 2323     _powerOff:
                                    1- 2324     ; 2 exit points
                                    1- 2325     	.line	485, "main.c"; 	workStep = 0;
                                    1- 2326     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2327     	CLRR	_workStep
                                    1- 2328     	.line	486, "main.c"; 	pwmStop();
                                    1- 2329     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2330     	.line	487, "main.c"; 	}
                                    1- 2331     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2332     ; exit point of _powerOff
                                    1- 2334     ;***
                                    1- 2335     ;  pBlock Stats: dbName = C
                                    1- 2336     ;***
                                    1- 2337     ;has an exit
                                    1- 2338     ;; Starting pCode block
                                    1- 2339     .segment "code"; module=main, function=_initSys
     0000                           1- 2341     _initSys:
                                    1- 2342     ; 2 exit points
                                    1- 2343     	.line	457, "main.c"; 	DISI();
     0000 0013                      1- 2344     	DISI
                                    1- 2345     	.line	458, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2346     	MOVIA	0x3e
     0002 000r                      1- 2347     	IOST	_IOSTA
                                    1- 2348     	.line	459, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2349     	CLRA	
     0004 000r                      1- 2350     	IOST	_IOSTB
                                    1- 2351     	.line	460, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2352     	CLRR	_PORTB
                                    1- 2353     	.line	461, "main.c"; 	PORTA = 0x00;
                                    1- 2354     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2355     	CLRR	_PORTA
                                    1- 2356     	.line	462, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2357     	MOVIA	0xff
     0009 000r                      1- 2358     	IOST	_APHCON
                                    1- 2359     	.line	463, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2360     	MOVAR	_BPHCON
                                    1- 2361     	.line	464, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2362     	MOVAR	_ABPLCON
                                    1- 2363     	.line	466, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2364     	MOVIA	0x01
     000D 00rr                      1- 2365     	MOVAR	_INTE
                                    1- 2366     	.line	468, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2367     	CLRA	
     000F 000r                      1- 2368     	IOST	_PCON1
                                    1- 2369     	.line	470, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2370     	MOVIA	0x37
     0011 00rr                      1- 2371     	MOVAR	_TMR0
                                    1- 2372     	.line	471, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2373     	MOVIA	0x01
     0013 0003                      1- 2374     	T0MD	
                                    1- 2375     	.line	473, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2376     	IOST	_PCON1
                                    1- 2377     	.line	476, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2378     	MOVIA	0x88
     0016 00rr                      1- 2379     	MOVAR	_PCON
                                    1- 2380     	.line	479, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2381     	MOVIA	0x01
     0018 000r                      1- 2382     	IOST	_PCON1
                                    1- 2383     	.line	480, "main.c"; 	ENI();
     0019 0004                      1- 2384     	ENI
                                    1- 2385     	.line	481, "main.c"; 	}
                                    1- 2386     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2387     ; exit point of _initSys
                                    1- 2389     ;***
                                    1- 2390     ;  pBlock Stats: dbName = C
                                    1- 2391     ;***
                                    1- 2392     ;has an exit
                                    1- 2393     ;functions called:
                                    1- 2394     ;   _keyRead
                                    1- 2395     ;   _setMaxDuty
                                    1- 2396     ;   _powerOff
                                    1- 2397     ;   _setMaxDuty
                                    1- 2398     ;   _keyRead
                                    1- 2399     ;   _setMaxDuty
                                    1- 2400     ;   _powerOff
                                    1- 2401     ;   _setMaxDuty
                                    1- 2402     ;1 compiler assigned register :
                                    1- 2403     ;   r0x105A
                                    1- 2404     ;; Starting pCode block
                                    1- 2405     .segment "code"; module=main, function=_keyCtr
                                    1- 2407     ;local variable name mapping:
     0000                           1- 2409     _keyCtr:
                                    1- 2410     ; 2 exit points
                                    1- 2411     	.line	390, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2412     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2413     	COMR	_PORTA,W
                                    1- 2414     	BANKSEL	r0x105A
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2415     	MOVAR	r0x105A
     0004 2120                      1- 2416     	MOVIA	0x20
     0005 10rr                      1- 2417     	ANDAR	r0x105A,F
     0006 01rr                      1- 2418     	MOVR	r0x105A,W
                                    1- 2419     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2420     	BANKSEL	r0x105A
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2421     	MOVAR	r0x105A
                                    1- 2422     	.line	391, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2423     	XORIA	0x01
     000B 0903                      1- 2424     	BTRSS	STATUS,2
                                    1- 2425     	MGOTO	_00520_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2426     	.line	393, "main.c"; 	count500ms = 0;
                                    1- 2427     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2428     	CLRR	_count500ms
                                    1- 2429     	.line	394, "main.c"; 	ledLightTime = 0;
                                    1- 2430     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2431     	CLRR	_ledLightTime
                                    1- 2432     	.line	395, "main.c"; 	count5S = 0;
                                    1- 2433     	BANKSEL	_count5S
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2434     	CLRR	_count5S
     0013 02rr                      1- 2435     	CLRR	(_count5S + 1)
                                    1- 2436     	.line	396, "main.c"; 	if(workStep == 0)
                                    1- 2437     	BANKSEL	_workStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2438     	MOVR	_workStep,W
     0016 0903                      1- 2439     	BTRSS	STATUS,2
                                    1- 2440     	MGOTO	_00491_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2441     	.line	398, "main.c"; 	count1s = 0;
                                    1- 2442     	BANKSEL	_count1s
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2443     	CLRR	_count1s
                                    1- 2444     	.line	399, "main.c"; 	ledLightTime = 3;
     001A 2103                      1- 2445     	MOVIA	0x03
                                    1- 2446     	BANKSEL	_ledLightTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2447     	MOVAR	_ledLightTime
                                    1- 2448     	.line	406, "main.c"; 	showFlag = 1;
                                    1- 2449     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2450     	BSR	_Status,4
                                    1- 2451     	.line	407, "main.c"; 	return;
                                    1- 2452     	MGOTO	_00522_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 2453     _00491_DS_:
                                    1- 2454     	.line	409, "main.c"; 	if(++workStep > 6)
                                    1- 2455     	BANKSEL	_workStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 2456     	INCR	_workStep,F
                                    1- 2457     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2458     ;;unsigned compare: left >= lit (0x7=7), size=1
     0022 2107                      1- 2459     	MOVIA	0x07
     0023 04rr                      1- 2460     	SUBAR	_workStep,W
     0024 0803                      1- 2461     	BTRSS	STATUS,0
                                    1- 2462     	MGOTO	_00493_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2463     	.line	410, "main.c"; 	workStep = 1;
     0026 2101                      1- 2464     	MOVIA	0x01
     0027 00rr                      1- 2465     	MOVAR	_workStep
     0028                           1- 2466     _00493_DS_:
                                    1- 2467     	.line	411, "main.c"; 	if(workStep == 1)
                                    1- 2468     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2469     	MOVR	_workStep,W
     002A 2401                      1- 2470     	XORIA	0x01
     002B 0903                      1- 2471     	BTRSS	STATUS,2
                                    1- 2472     	MGOTO	_00509_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2473     	.line	412, "main.c"; 	maxDuty = 40;
     002D 2128                      1- 2474     	MOVIA	0x28
                                    1- 2475     	BANKSEL	_maxDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2476     	MOVAR	_maxDuty
                                    1- 2477     	MGOTO	_00510_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 2478     _00509_DS_:
                                    1- 2479     	.line	413, "main.c"; 	else if(workStep == 2)
                                    1- 2480     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2481     	MOVR	_workStep,W
     0033 2402                      1- 2482     	XORIA	0x02
     0034 0903                      1- 2483     	BTRSS	STATUS,2
                                    1- 2484     	MGOTO	_00506_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2485     	.line	414, "main.c"; 	maxDuty = 42;
     0036 212A                      1- 2486     	MOVIA	0x2a
                                    1- 2487     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2488     	MOVAR	_maxDuty
                                    1- 2489     	MGOTO	_00510_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2490     _00506_DS_:
                                    1- 2491     	.line	415, "main.c"; 	else if(workStep == 3)
                                    1- 2492     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2493     	MOVR	_workStep,W
     003C 2403                      1- 2494     	XORIA	0x03
     003D 0903                      1- 2495     	BTRSS	STATUS,2
                                    1- 2496     	MGOTO	_00503_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2497     	.line	416, "main.c"; 	maxDuty = 44;
     003F 212C                      1- 2498     	MOVIA	0x2c
                                    1- 2499     	BANKSEL	_maxDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2500     	MOVAR	_maxDuty
                                    1- 2501     	MGOTO	_00510_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 2502     _00503_DS_:
                                    1- 2503     	.line	417, "main.c"; 	else if(workStep == 4)
                                    1- 2504     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2505     	MOVR	_workStep,W
     0045 2404                      1- 2506     	XORIA	0x04
     0046 0903                      1- 2507     	BTRSS	STATUS,2
                                    1- 2508     	MGOTO	_00500_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2509     	.line	418, "main.c"; 	maxDuty = 46;
     0048 212E                      1- 2510     	MOVIA	0x2e
                                    1- 2511     	BANKSEL	_maxDuty
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2512     	MOVAR	_maxDuty
                                    1- 2513     	MGOTO	_00510_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 2514     _00500_DS_:
                                    1- 2515     	.line	419, "main.c"; 	else if(workStep == 5)
                                    1- 2516     	BANKSEL	_workStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 2517     	MOVR	_workStep,W
     004E 2405                      1- 2518     	XORIA	0x05
     004F 0903                      1- 2519     	BTRSS	STATUS,2
                                    1- 2520     	MGOTO	_00497_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2521     	.line	420, "main.c"; 	maxDuty = 48;
     0051 2130                      1- 2522     	MOVIA	0x30
                                    1- 2523     	BANKSEL	_maxDuty
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 2524     	MOVAR	_maxDuty
                                    1- 2525     	MGOTO	_00510_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 2526     _00497_DS_:
                                    1- 2527     	.line	421, "main.c"; 	else if(workStep == 6)
                                    1- 2528     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 2529     	MOVR	_workStep,W
     0057 2406                      1- 2530     	XORIA	0x06
     0058 0903                      1- 2531     	BTRSS	STATUS,2
                                    1- 2532     	MGOTO	_00510_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2533     	.line	422, "main.c"; 	maxDuty = 50;
     005A 2132                      1- 2534     	MOVIA	0x32
                                    1- 2535     	BANKSEL	_maxDuty
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 2536     	MOVAR	_maxDuty
     005D                           1- 2537     _00510_DS_:
                                    1- 2538     	.line	423, "main.c"; 	setMaxDuty();
                                    1- 2539     	MCALL	_setMaxDuty
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2540     	MGOTO	_00522_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 2541     _00520_DS_:
                                    1- 2542     	.line	425, "main.c"; 	else if(kclick == 2)
                                    1- 2543     	BANKSEL	r0x105A
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 2544     	MOVR	r0x105A,W
     0061 2402                      1- 2545     	XORIA	0x02
     0062 0903                      1- 2546     	BTRSS	STATUS,2
                                    1- 2547     	MGOTO	_00522_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2548     	.line	427, "main.c"; 	if(workStep > 0)
                                    1- 2549     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 2550     	MOVR	_workStep,W
     0066 0D03                      1- 2551     	BTRSC	STATUS,2
                                    1- 2552     	MGOTO	_00515_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2553     	.line	429, "main.c"; 	workStep = 0;
     0068 02rr                      1- 2554     	CLRR	_workStep
                                    1- 2555     	.line	430, "main.c"; 	powerOff();
                                    1- 2556     	MCALL	_powerOff
     0069 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2557     	.line	431, "main.c"; 	showFlag = 0;
                                    1- 2558     	BANKSEL	_Status
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 1Err                      1- 2559     	BCR	_Status,4
                                    1- 2560     	MGOTO	_00522_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D                           1- 2561     _00515_DS_:
                                    1- 2562     	.line	435, "main.c"; 	if(batValue == 0 || preBatValue == 0)
                                    1- 2563     	BANKSEL	_batValue
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2564     	MOVR	_batValue,W
     006F 0D03                      1- 2565     	BTRSC	STATUS,2
                                    1- 2566     	MGOTO	_00511_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2567     	BANKSEL	_preBatValue
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 01rr                      1- 2568     	MOVR	_preBatValue,W
     0073 0903                      1- 2569     	BTRSS	STATUS,2
                                    1- 2570     	MGOTO	_00512_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 2571     _00511_DS_:
                                    1- 2572     	.line	437, "main.c"; 	ledLightTime = 3;
     0075 2103                      1- 2573     	MOVIA	0x03
                                    1- 2574     	BANKSEL	_ledLightTime
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 2575     	MOVAR	_ledLightTime
                                    1- 2576     	.line	438, "main.c"; 	preBatValue = 0;
                                    1- 2577     	BANKSEL	_preBatValue
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 02rr                      1- 2578     	CLRR	_preBatValue
                                    1- 2579     	.line	439, "main.c"; 	showFlag = 1;
                                    1- 2580     	BANKSEL	_Status
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 1Arr                      1- 2581     	BSR	_Status,4
                                    1- 2582     	.line	440, "main.c"; 	return;
                                    1- 2583     	MGOTO	_00522_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 2584     _00512_DS_:
                                    1- 2585     	.line	442, "main.c"; 	workStep = 1;
     007D 2101                      1- 2586     	MOVIA	0x01
                                    1- 2587     	BANKSEL	_workStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 2588     	MOVAR	_workStep
                                    1- 2589     	.line	443, "main.c"; 	PWM2DUTY = 60;
     0080 213C                      1- 2590     	MOVIA	0x3c
     0081 00rr                      1- 2591     	SFUN	_PWM2DUTY
                                    1- 2592     	.line	444, "main.c"; 	currentDuty = 60;
                                    1- 2593     	BANKSEL	_currentDuty
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 2594     	MOVAR	_currentDuty
                                    1- 2595     	.line	445, "main.c"; 	maxDuty = 40;
     0084 2128                      1- 2596     	MOVIA	0x28
                                    1- 2597     	BANKSEL	_maxDuty
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 2598     	MOVAR	_maxDuty
                                    1- 2599     	.line	446, "main.c"; 	setMaxDuty();
                                    1- 2600     	MCALL	_setMaxDuty
     0087 2rrr                      3-   66 m1      LCALL rom_address
     0088                           1- 2601     _00522_DS_:
                                    1- 2602     	.line	450, "main.c"; 	}
                                    1- 2603     	RETURN	
     0088 0010                      3-   40 m1      ret
                                    1- 2604     ; exit point of _keyCtr
                                    1- 2606     ;***
                                    1- 2607     ;  pBlock Stats: dbName = C
                                    1- 2608     ;***
                                    1- 2609     ;has an exit
                                    1- 2610     ;functions called:
                                    1- 2611     ;   __divuchar
                                    1- 2612     ;   _pwmInit
                                    1- 2613     ;   __divuchar
                                    1- 2614     ;   _pwmInit
                                    1- 2615     ;3 compiler assigned registers:
                                    1- 2616     ;   r0x1058
                                    1- 2617     ;   STK00
                                    1- 2618     ;   r0x1059
                                    1- 2619     ;; Starting pCode block
                                    1- 2620     .segment "code"; module=main, function=_setMaxDuty
     0000                           1- 2622     _setMaxDuty:
                                    1- 2623     ; 2 exit points
                                    1- 2624     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2625     	.line	381, "main.c"; 	if(batValue < 50)
     0000 2132                      1- 2626     	MOVIA	0x32
                                    1- 2627     	BANKSEL	_batValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2628     	SUBAR	_batValue,W
     0003 0C03                      1- 2629     	BTRSC	STATUS,0
                                    1- 2630     	MGOTO	_00485_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2631     	.line	382, "main.c"; 	maxDuty = maxDuty + 10 - (batValue/10);
     0005 210A                      1- 2632     	MOVIA	0x0a
                                    1- 2633     	BANKSEL	_maxDuty
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 03rr                      1- 2634     	ADDAR	_maxDuty,W
                                    1- 2635     	BANKSEL	r0x1058
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2636     	MOVAR	r0x1058
     000A 210A                      1- 2637     	MOVIA	0x0a
     000B 00rr                      1- 2638     	MOVAR	STK00
                                    1- 2639     	BANKSEL	_batValue
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2640     	MOVR	_batValue,W
                                    1- 2641     	MCALL	__divuchar
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2642     ;;1	MOVAR	r0x1059
                                    1- 2643     	BANKSEL	r0x1058
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 2644     	SUBAR	r0x1058,W
                                    1- 2645     	BANKSEL	_maxDuty
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2646     	MOVAR	_maxDuty
     0013                           1- 2647     _00485_DS_:
                                    1- 2648     	.line	383, "main.c"; 	tempDuty = maxDuty;
                                    1- 2649     	BANKSEL	_maxDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2650     	MOVR	_maxDuty,W
                                    1- 2651     	BANKSEL	_tempDuty
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 2652     	MOVAR	_tempDuty
                                    1- 2653     	.line	384, "main.c"; 	pwmInit();
                                    1- 2654     	MCALL	_pwmInit
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2655     	.line	385, "main.c"; 	}
                                    1- 2656     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1- 2657     ; exit point of _setMaxDuty
                                    1- 2659     ;***
                                    1- 2660     ;  pBlock Stats: dbName = C
                                    1- 2661     ;***
                                    1- 2662     ;has an exit
                                    1- 2663     ;functions called:
                                    1- 2664     ;   _setInput
                                    1- 2665     ;   _showKeyLed
                                    1- 2666     ;   __gptrget1
                                    1- 2667     ;   _showNubShiwei
                                    1- 2668     ;   __gptrget1
                                    1- 2669     ;   _showNubGewei
                                    1- 2670     ;   _setInput
                                    1- 2671     ;   _showKeyLed
                                    1- 2672     ;   __gptrget1
                                    1- 2673     ;   _showNubShiwei
                                    1- 2674     ;   __gptrget1
                                    1- 2675     ;   _showNubGewei
                                    1- 2676     ;5 compiler assigned registers:
                                    1- 2677     ;   r0x105B
                                    1- 2678     ;   r0x105C
                                    1- 2679     ;   STK01
                                    1- 2680     ;   STK00
                                    1- 2681     ;   r0x105D
                                    1- 2682     ;; Starting pCode block
                                    1- 2683     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2685     _refreshNub:
                                    1- 2686     ; 2 exit points
                                    1- 2687     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2688     	.line	355, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2689     	MOVIA	0x03
                                    1- 2690     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2691     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2692     	BTRSS	STATUS,2
                                    1- 2693     	MGOTO	_00479_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2694     	MOVIA	0x84
     0006 04rr                      1- 2695     	SUBAR	_count900s,W
     0007                           1- 2696     _00479_DS_:
     0007 0803                      1- 2697     	BTRSS	STATUS,0
                                    1- 2698     	MGOTO	_00457_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2699     	.line	357, "main.c"; 	setInput();
                                    1- 2700     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2701     	.line	358, "main.c"; 	return;
                                    1- 2702     	MGOTO	_00465_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2703     _00457_DS_:
                                    1- 2704     	.line	360, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2705     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2706     	MOVR	_shiweiNum,W
                                    1- 2707     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2708     	MOVAR	_tempshiweiNum
                                    1- 2709     	.line	361, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2710     	BANKSEL	_geweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2711     	MOVR	_geweiNum,W
                                    1- 2712     	BANKSEL	_tempgeweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2713     	MOVAR	_tempgeweiNum
                                    1- 2714     	.line	362, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2715     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2716     	MOVR	_workStep,W
     0015 0903                      1- 2717     	BTRSS	STATUS,2
                                    1- 2718     	MGOTO	_00458_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2719     	BANKSEL	_ledLightTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2720     	MOVR	_ledLightTime,W
     0019 0903                      1- 2721     	BTRSS	STATUS,2
     001A                           1- 2722     _00458_DS_:
                                    1- 2723     	.line	364, "main.c"; 	showKeyLed();
                                    1- 2724     	MCALL	_showKeyLed
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2725     	.line	367, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2726     	BANKSEL	_ledDeadTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2727     	MOVR	_ledDeadTime,W
     001D 0D03                      1- 2728     	BTRSC	STATUS,2
                                    1- 2729     	MGOTO	_00462_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2730     	.line	369, "main.c"; 	tempshiweiNum = 11;
     001F 210B                      1- 2731     	MOVIA	0x0b
                                    1- 2732     	BANKSEL	_tempshiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2733     	MOVAR	_tempshiweiNum
                                    1- 2734     	.line	370, "main.c"; 	tempgeweiNum = 12;
     0022 210C                      1- 2735     	MOVIA	0x0c
                                    1- 2736     	BANKSEL	_tempgeweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2737     	MOVAR	_tempgeweiNum
     0025                           1- 2738     _00462_DS_:
                                    1- 2739     	.line	373, "main.c"; 	if(firstShowCount > 0)
                                    1- 2740     	BANKSEL	_firstShowCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2741     	MOVR	_firstShowCount,W
     0027 0D03                      1- 2742     	BTRSC	STATUS,2
                                    1- 2743     	MGOTO	_00464_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2744     	.line	374, "main.c"; 	tempshiweiNum = tempgeweiNum = 8;
     0029 2108                      1- 2745     	MOVIA	0x08
                                    1- 2746     	BANKSEL	_tempgeweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2747     	MOVAR	_tempgeweiNum
                                    1- 2748     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2749     	MOVAR	_tempshiweiNum
     002E                           1- 2750     _00464_DS_:
                                    1- 2751     	.line	375, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2752     	BANKSEL	_tempshiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2753     	MOVR	_tempshiweiNum,W
     0030 25rr                      1- 2754     	ADDIA	(_numArray + 0)
                                    1- 2755     	BANKSEL	r0x105B
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2756     	MOVAR	r0x105B
     0033 21rr                      1- 2757     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0034 0C03                      1- 2758     	BTRSC	STATUS,0
     0035 2501                      1- 2759     	ADDIA	0x01
                                    1- 2760     	BANKSEL	r0x105C
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2761     	MOVAR	r0x105C
                                    1- 2762     	BANKSEL	r0x105B
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2763     	MOVR	r0x105B,W
     003A 00rr                      1- 2764     	MOVAR	STK01
                                    1- 2765     	BANKSEL	r0x105C
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2766     	MOVR	r0x105C,W
     003D 00rr                      1- 2767     	MOVAR	STK00
     003E 2100                      1- 2768     	MOVIA	0x00
                                    1- 2769     	MCALL	__gptrget1
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2770     ;;100	MOVAR	r0x105D
                                    1- 2771     	MCALL	_showNubShiwei
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2772     	.line	376, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2773     	BANKSEL	_tempgeweiNum
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2774     	MOVR	_tempgeweiNum,W
     0043 25rr                      1- 2775     	ADDIA	(_numArray + 0)
                                    1- 2776     	BANKSEL	r0x105B
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2777     	MOVAR	r0x105B
     0046 21rr                      1- 2778     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0047 0C03                      1- 2779     	BTRSC	STATUS,0
     0048 2501                      1- 2780     	ADDIA	0x01
                                    1- 2781     	BANKSEL	r0x105C
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2782     	MOVAR	r0x105C
                                    1- 2783     	BANKSEL	r0x105B
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 2784     	MOVR	r0x105B,W
     004D 00rr                      1- 2785     	MOVAR	STK01
                                    1- 2786     	BANKSEL	r0x105C
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2787     	MOVR	r0x105C,W
     0050 00rr                      1- 2788     	MOVAR	STK00
     0051 2100                      1- 2789     	MOVIA	0x00
                                    1- 2790     	MCALL	__gptrget1
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2791     ;;99	MOVAR	r0x105D
                                    1- 2792     	MCALL	_showNubGewei
     0053 2rrr                      3-   66 m1      LCALL rom_address
     0054                           1- 2793     _00465_DS_:
                                    1- 2794     	.line	377, "main.c"; 	}
                                    1- 2795     	RETURN	
     0054 0010                      3-   40 m1      ret
                                    1- 2796     ; exit point of _refreshNub
                                    1- 2798     ;***
                                    1- 2799     ;  pBlock Stats: dbName = C
                                    1- 2800     ;***
                                    1- 2801     ;has an exit
                                    1- 2802     ;functions called:
                                    1- 2803     ;   __divuchar
                                    1- 2804     ;   __moduchar
                                    1- 2805     ;   _pwmStop
                                    1- 2806     ;   _pwm1Stop
                                    1- 2807     ;   _pwm1Init
                                    1- 2808     ;   _pwm1Init
                                    1- 2809     ;   _pwm1Init
                                    1- 2810     ;   _pwm1Init
                                    1- 2811     ;   _pwm1Stop
                                    1- 2812     ;   __divuchar
                                    1- 2813     ;   __moduchar
                                    1- 2814     ;   _pwmStop
                                    1- 2815     ;   _pwm1Stop
                                    1- 2816     ;   _pwm1Init
                                    1- 2817     ;   _pwm1Init
                                    1- 2818     ;   _pwm1Init
                                    1- 2819     ;   _pwm1Init
                                    1- 2820     ;   _pwm1Stop
                                    1- 2821     ;6 compiler assigned registers:
                                    1- 2822     ;   STK00
                                    1- 2823     ;   r0x105E
                                    1- 2824     ;   r0x105F
                                    1- 2825     ;   r0x1060
                                    1- 2826     ;   r0x1061
                                    1- 2827     ;   r0x1062
                                    1- 2828     ;; Starting pCode block
                                    1- 2829     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2831     _chrgCtr:
                                    1- 2832     ; 2 exit points
                                    1- 2833     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2834     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2835     	.line	241, "main.c"; 	if(preBatValue > 99)
     0000 2164                      1- 2836     	MOVIA	0x64
                                    1- 2837     	BANKSEL	_preBatValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2838     	SUBAR	_preBatValue,W
     0003 0803                      1- 2839     	BTRSS	STATUS,0
                                    1- 2840     	MGOTO	_00332_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2841     	.line	243, "main.c"; 	shiweiNum = geweiNum = 9;
     0005 2109                      1- 2842     	MOVIA	0x09
                                    1- 2843     	BANKSEL	_geweiNum
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2844     	MOVAR	_geweiNum
                                    1- 2845     	BANKSEL	_shiweiNum
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2846     	MOVAR	_shiweiNum
                                    1- 2847     	MGOTO	_00333_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2848     _00332_DS_:
                                    1- 2849     	.line	247, "main.c"; 	shiweiNum = preBatValue/10;
     000B 210A                      1- 2850     	MOVIA	0x0a
     000C 00rr                      1- 2851     	MOVAR	STK00
                                    1- 2852     	BANKSEL	_preBatValue
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2853     	MOVR	_preBatValue,W
                                    1- 2854     	MCALL	__divuchar
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2855     	BANKSEL	_shiweiNum
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2856     	MOVAR	_shiweiNum
                                    1- 2857     	.line	248, "main.c"; 	geweiNum = preBatValue%10;
     0012 210A                      1- 2858     	MOVIA	0x0a
     0013 00rr                      1- 2859     	MOVAR	STK00
                                    1- 2860     	BANKSEL	_preBatValue
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2861     	MOVR	_preBatValue,W
                                    1- 2862     	MCALL	__moduchar
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2863     	BANKSEL	_geweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2864     	MOVAR	_geweiNum
     0019                           1- 2865     _00333_DS_:
                                    1- 2866     	.line	250, "main.c"; 	if(workStep > 0)
                                    1- 2867     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2868     	MOVR	_workStep,W
     001B 0D03                      1- 2869     	BTRSC	STATUS,2
                                    1- 2870     	MGOTO	_00335_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2871     	.line	252, "main.c"; 	showFlag = 1;
                                    1- 2872     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2873     	BSR	_Status,4
                                    1- 2874     	.line	253, "main.c"; 	shiweiNum = 0;
                                    1- 2875     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 2876     	CLRR	_shiweiNum
                                    1- 2877     	.line	254, "main.c"; 	geweiNum = workStep;
                                    1- 2878     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2879     	MOVR	_workStep,W
                                    1- 2880     	BANKSEL	_geweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2881     	MOVAR	_geweiNum
     0025                           1- 2882     _00335_DS_:
                                    1- 2883     	.line	256, "main.c"; 	if(0x08 & PORTA)
                                    1- 2884     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 09rr                      1- 2885     	BTRSS	_PORTA,3
                                    1- 2886     	MGOTO	_00371_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2887     	.line	259, "main.c"; 	chrgFlag = 1;
                                    1- 2888     	BANKSEL	_Status
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 19rr                      1- 2889     	BSR	_Status,3
                                    1- 2890     	.line	260, "main.c"; 	showFlag = 1;
     002A 1Arr                      1- 2891     	BSR	_Status,4
                                    1- 2892     	.line	261, "main.c"; 	workStep = 0;
                                    1- 2893     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1- 2894     	CLRR	_workStep
                                    1- 2895     	.line	262, "main.c"; 	ledLightTime = 0;
                                    1- 2896     	BANKSEL	_ledLightTime
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1- 2897     	CLRR	_ledLightTime
                                    1- 2898     	.line	263, "main.c"; 	pwmStop();
                                    1- 2899     	MCALL	_pwmStop
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2900     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 2901     	.line	264, "main.c"; 	if(preBatValue < 99 && batValue >= preBatValue && count5s == 1)
     0030 2163                      1- 2902     	MOVIA	0x63
                                    1- 2903     	BANKSEL	_preBatValue
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 04rr                      1- 2904     	SUBAR	_preBatValue,W
     0033 0C03                      1- 2905     	BTRSC	STATUS,0
                                    1- 2906     	MGOTO	_00008_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 01rr                      1- 2907     	MOVR	_preBatValue,W
                                    1- 2908     	BANKSEL	_batValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 04rr                      1- 2909     	SUBAR	_batValue,W
     0038 0803                      1- 2910     	BTRSS	STATUS,0
                                    1- 2911     	MGOTO	_00008_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2912     	BANKSEL	_count5s
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2913     	MOVR	_count5s,W
     003C 2401                      1- 2914     	XORIA	0x01
     003D 0903                      1- 2915     	BTRSS	STATUS,2
                                    1- 2916     	MGOTO	_00008_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 01rr                      1- 2917     	MOVR	(_count5s + 1),W
     0040 2400                      1- 2918     	XORIA	0x00
     0041 0903                      1- 2919     	BTRSS	STATUS,2
                                    1- 2920     	MGOTO	_00008_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2921     	.line	266, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2922     	BANKSEL	_preBatValue
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 2923     	INCR	_preBatValue,F
     0045                           1- 2924     _00008_DS_:
                                    1- 2925     	.line	268, "main.c"; 	if(batValue >= 99)
     0045 2163                      1- 2926     	MOVIA	0x63
                                    1- 2927     	BANKSEL	_batValue
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2928     	SUBAR	_batValue,W
     0048 0803                      1- 2929     	BTRSS	STATUS,0
                                    1- 2930     	MGOTO	_00362_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2931     	.line	270, "main.c"; 	chrgStep = 4;
     004A 2104                      1- 2932     	MOVIA	0x04
                                    1- 2933     	BANKSEL	_chrgStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2934     	MOVAR	_chrgStep
                                    1- 2935     	.line	272, "main.c"; 	if(shiweiNum == 9 &&  geweiNum == 9 && batValue >= 101 && ++countFull > 2000)
                                    1- 2936     	BANKSEL	_shiweiNum
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 2937     	MOVR	_shiweiNum,W
     004F 2409                      1- 2938     	XORIA	0x09
     0050 0903                      1- 2939     	BTRSS	STATUS,2
                                    1- 2940     	MGOTO	_00373_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2941     	BANKSEL	_geweiNum
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2942     	MOVR	_geweiNum,W
     0054 2409                      1- 2943     	XORIA	0x09
     0055 0903                      1- 2944     	BTRSS	STATUS,2
                                    1- 2945     	MGOTO	_00373_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2946     ;;unsigned compare: left < lit (0x65=101), size=1
     0057 2165                      1- 2947     	MOVIA	0x65
                                    1- 2948     	BANKSEL	_batValue
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 04rr                      1- 2949     	SUBAR	_batValue,W
     005A 0803                      1- 2950     	BTRSS	STATUS,0
                                    1- 2951     	MGOTO	_00373_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2952     	BANKSEL	_countFull
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 05rr                      1- 2953     	INCR	_countFull,F
     005E 0D03                      1- 2954     	BTRSC	STATUS,2
     005F 05rr                      1- 2955     	INCR	(_countFull + 1),F
                                    1- 2956     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2957     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0060 2107                      1- 2958     	MOVIA	0x07
     0061 04rr                      1- 2959     	SUBAR	(_countFull + 1),W
     0062 0903                      1- 2960     	BTRSS	STATUS,2
                                    1- 2961     	MGOTO	_00443_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064 21D1                      1- 2962     	MOVIA	0xd1
     0065 04rr                      1- 2963     	SUBAR	_countFull,W
     0066                           1- 2964     _00443_DS_:
     0066 0803                      1- 2965     	BTRSS	STATUS,0
                                    1- 2966     	MGOTO	_00373_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2967     	.line	274, "main.c"; 	pwm1Stop();
                                    1- 2968     	MCALL	_pwm1Stop
     0068 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2969     	.line	276, "main.c"; 	PORTB &= 0xF7;
     0069 1Drr                      1- 2970     	BCR	_PORTB,3
                                    1- 2971     	.line	277, "main.c"; 	IOSTB |= 0X08;
     006A 001r                      1- 2972     	IOSTR	_IOSTB
                                    1- 2973     	BANKSEL	r0x105E
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 2974     	MOVAR	r0x105E
     006D 19rr                      1- 2975     	BSR	r0x105E,3
     006E 01rr                      1- 2976     	MOVR	r0x105E,W
     006F 000r                      1- 2977     	IOST	_IOSTB
                                    1- 2978     	MGOTO	_00373_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 2979     _00362_DS_:
                                    1- 2980     	.line	283, "main.c"; 	countFull = 0;
                                    1- 2981     	BANKSEL	_countFull
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1- 2982     	CLRR	_countFull
     0073 02rr                      1- 2983     	CLRR	(_countFull + 1)
                                    1- 2984     	.line	284, "main.c"; 	IOSTB &= 0xF7;
     0074 001r                      1- 2985     	IOSTR	_IOSTB
                                    1- 2986     	BANKSEL	r0x105E
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 2987     	MOVAR	r0x105E
     0077 1Drr                      1- 2988     	BCR	r0x105E,3
     0078 01rr                      1- 2989     	MOVR	r0x105E,W
     0079 000r                      1- 2990     	IOST	_IOSTB
                                    1- 2991     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1- 2992     	.line	285, "main.c"; 	if(shiweiNum < 2)
     007A 2102                      1- 2993     	MOVIA	0x02
                                    1- 2994     	BANKSEL	_shiweiNum
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 04rr                      1- 2995     	SUBAR	_shiweiNum,W
     007D 0C03                      1- 2996     	BTRSC	STATUS,0
                                    1- 2997     	MGOTO	_00348_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2998     	.line	287, "main.c"; 	if(chrgStep <= 0)
                                    1- 2999     	BANKSEL	_chrgStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 3000     	MOVR	_chrgStep,W
     0081 0903                      1- 3001     	BTRSS	STATUS,2
                                    1- 3002     	MGOTO	_00348_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3003     	.line	289, "main.c"; 	PWM1DUTY = 9;
     0083 2109                      1- 3004     	MOVIA	0x09
     0084 00rr                      1- 3005     	SFUN	_PWM1DUTY
                                    1- 3006     	.line	290, "main.c"; 	chrgStep = 0;
     0085 02rr                      1- 3007     	CLRR	_chrgStep
                                    1- 3008     	.line	291, "main.c"; 	pwm1Init();
                                    1- 3009     	MCALL	_pwm1Init
     0086 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3010     ;;unsigned compare: left < lit (0x5=5), size=1
     0087                           1- 3011     _00348_DS_:
                                    1- 3012     	.line	294, "main.c"; 	if(shiweiNum < 5)
     0087 2105                      1- 3013     	MOVIA	0x05
                                    1- 3014     	BANKSEL	_shiweiNum
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 04rr                      1- 3015     	SUBAR	_shiweiNum,W
     008A 0C03                      1- 3016     	BTRSC	STATUS,0
                                    1- 3017     	MGOTO	_00359_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3018     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3019     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 3020     	.line	296, "main.c"; 	if(chrgStep <= 1)
     008C 2102                      1- 3021     	MOVIA	0x02
                                    1- 3022     	BANKSEL	_chrgStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 04rr                      1- 3023     	SUBAR	_chrgStep,W
     008F 0C03                      1- 3024     	BTRSC	STATUS,0
                                    1- 3025     	MGOTO	_00373_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3026     	.line	298, "main.c"; 	PWM1DUTY = 11;
     0091 210B                      1- 3027     	MOVIA	0x0b
     0092 00rr                      1- 3028     	SFUN	_PWM1DUTY
                                    1- 3029     	.line	299, "main.c"; 	chrgStep = 1;
     0093 2101                      1- 3030     	MOVIA	0x01
     0094 00rr                      1- 3031     	MOVAR	_chrgStep
                                    1- 3032     	.line	300, "main.c"; 	pwm1Init();
                                    1- 3033     	MCALL	_pwm1Init
     0095 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3034     	MGOTO	_00373_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3035     ;;unsigned compare: left < lit (0x8=8), size=1
     0097                           1- 3036     _00359_DS_:
                                    1- 3037     	.line	303, "main.c"; 	else if(shiweiNum < 8)
     0097 2108                      1- 3038     	MOVIA	0x08
                                    1- 3039     	BANKSEL	_shiweiNum
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 04rr                      1- 3040     	SUBAR	_shiweiNum,W
     009A 0C03                      1- 3041     	BTRSC	STATUS,0
                                    1- 3042     	MGOTO	_00356_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3044     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 3045     	.line	305, "main.c"; 	if(chrgStep <= 2)
     009C 2103                      1- 3046     	MOVIA	0x03
                                    1- 3047     	BANKSEL	_chrgStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 04rr                      1- 3048     	SUBAR	_chrgStep,W
     009F 0C03                      1- 3049     	BTRSC	STATUS,0
                                    1- 3050     	MGOTO	_00373_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3051     	.line	307, "main.c"; 	chrgStep = 2;
     00A1 2102                      1- 3052     	MOVIA	0x02
     00A2 00rr                      1- 3053     	MOVAR	_chrgStep
                                    1- 3054     	.line	308, "main.c"; 	PWM1DUTY = 12;
     00A3 210C                      1- 3055     	MOVIA	0x0c
     00A4 00rr                      1- 3056     	SFUN	_PWM1DUTY
                                    1- 3057     	.line	309, "main.c"; 	pwm1Init();
                                    1- 3058     	MCALL	_pwm1Init
     00A5 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3059     	MGOTO	_00373_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3060     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3061     ;;unsigned compare: left >= lit (0x4=4), size=1
     00A7                           1- 3062     _00356_DS_:
                                    1- 3063     	.line	314, "main.c"; 	if(chrgStep <= 3)
     00A7 2104                      1- 3064     	MOVIA	0x04
                                    1- 3065     	BANKSEL	_chrgStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 3066     	SUBAR	_chrgStep,W
     00AA 0C03                      1- 3067     	BTRSC	STATUS,0
                                    1- 3068     	MGOTO	_00373_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3069     	.line	316, "main.c"; 	PWM1DUTY = 13;
     00AC 210D                      1- 3070     	MOVIA	0x0d
     00AD 00rr                      1- 3071     	SFUN	_PWM1DUTY
                                    1- 3072     	.line	317, "main.c"; 	chrgStep = 3;
     00AE 2103                      1- 3073     	MOVIA	0x03
     00AF 00rr                      1- 3074     	MOVAR	_chrgStep
                                    1- 3075     	.line	318, "main.c"; 	pwm1Init();
                                    1- 3076     	MCALL	_pwm1Init
     00B0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3077     	MGOTO	_00373_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 3078     _00371_DS_:
                                    1- 3079     	.line	326, "main.c"; 	chrgStep = 0;
                                    1- 3080     	BANKSEL	_chrgStep
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 02rr                      1- 3081     	CLRR	_chrgStep
                                    1- 3082     	.line	327, "main.c"; 	countFull = 0;
                                    1- 3083     	BANKSEL	_countFull
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 02rr                      1- 3084     	CLRR	_countFull
     00B6 02rr                      1- 3085     	CLRR	(_countFull + 1)
                                    1- 3086     	.line	328, "main.c"; 	pwm1Stop();
                                    1- 3087     	MCALL	_pwm1Stop
     00B7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3088     	.line	329, "main.c"; 	chrgFlag = 0;
                                    1- 3089     	BANKSEL	_Status
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 1Drr                      1- 3090     	BCR	_Status,3
                                    1- 3091     	.line	333, "main.c"; 	if(workStep == 0 && (preBatValue > batValue + 1))
                                    1- 3092     	BANKSEL	_workStep
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 01rr                      1- 3093     	MOVR	_workStep,W
     00BC 0903                      1- 3094     	BTRSS	STATUS,2
                                    1- 3095     	MGOTO	_00367_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3096     	BANKSEL	_batValue
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 01rr                      1- 3097     	MOVR	_batValue,W
                                    1- 3098     	BANKSEL	r0x105E
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 3099     	MOVAR	r0x105E
                                    1- 3100     	BANKSEL	r0x105F
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 02rr                      1- 3101     	CLRR	r0x105F
                                    1- 3102     	BANKSEL	r0x105E
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 05rr                      1- 3103     	INCR	r0x105E,F
     00C6 0903                      1- 3104     	BTRSS	STATUS,2
                                    1- 3105     	MGOTO	_00009_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3106     	BANKSEL	r0x105F
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 05rr                      1- 3107     	INCR	r0x105F,F
     00CA                           1- 3108     _00009_DS_:
                                    1- 3109     	BANKSEL	_preBatValue
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 01rr                      1- 3110     	MOVR	_preBatValue,W
                                    1- 3111     	BANKSEL	r0x1060
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 3112     	MOVAR	r0x1060
                                    1- 3113     ;;1	CLRR	r0x1061
                                    1- 3114     	BANKSEL	r0x105F
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 3115     	MOVR	r0x105F,W
     00D0 2580                      1- 3116     	ADDIA	0x80
                                    1- 3117     	BANKSEL	r0x1062
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 00rr                      1- 3118     	MOVAR	r0x1062
     00D3 2100                      1- 3119     	MOVIA	0x00
     00D4 2580                      1- 3120     	ADDIA	0x80
     00D5 04rr                      1- 3121     	SUBAR	r0x1062,W
     00D6 0903                      1- 3122     	BTRSS	STATUS,2
                                    1- 3123     	MGOTO	_00450_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3124     	BANKSEL	r0x1060
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 01rr                      1- 3125     	MOVR	r0x1060,W
                                    1- 3126     	BANKSEL	r0x105E
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 04rr                      1- 3127     	SUBAR	r0x105E,W
     00DC                           1- 3128     _00450_DS_:
     00DC 0C03                      1- 3129     	BTRSC	STATUS,0
                                    1- 3130     	MGOTO	_00367_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3131     	.line	335, "main.c"; 	if(++batCount > 30)
                                    1- 3132     	BANKSEL	_batCount
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 05rr                      1- 3133     	INCR	_batCount,F
     00E0 0D03                      1- 3134     	BTRSC	STATUS,2
     00E1 05rr                      1- 3135     	INCR	(_batCount + 1),F
                                    1- 3136     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3137     ;;unsigned compare: left >= lit (0x1F=31), size=2
     00E2 2100                      1- 3138     	MOVIA	0x00
     00E3 04rr                      1- 3139     	SUBAR	(_batCount + 1),W
     00E4 0903                      1- 3140     	BTRSS	STATUS,2
                                    1- 3141     	MGOTO	_00451_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
     00E6 211F                      1- 3142     	MOVIA	0x1f
     00E7 04rr                      1- 3143     	SUBAR	_batCount,W
     00E8                           1- 3144     _00451_DS_:
     00E8 0803                      1- 3145     	BTRSS	STATUS,0
                                    1- 3146     	MGOTO	_00373_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3147     	.line	337, "main.c"; 	batCount = 0;
                                    1- 3148     	BANKSEL	_batCount
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 02rr                      1- 3149     	CLRR	_batCount
     00EC 02rr                      1- 3150     	CLRR	(_batCount + 1)
                                    1- 3151     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 3152     	.line	338, "main.c"; 	preBatValue = preBatValue/2;
     00ED 1C03                      1- 3153     	BCR	STATUS,0
                                    1- 3154     	BANKSEL	_preBatValue
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 13rr                      1- 3155     	RRR	_preBatValue,F
                                    1- 3156     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=0, offr=0
                                    1- 3157     	.line	339, "main.c"; 	preBatValue = preBatValue + batValue/2;
     00F0 1C03                      1- 3158     	BCR	STATUS,0
                                    1- 3159     	BANKSEL	_batValue
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 13rr                      1- 3160     	RRR	_batValue,W
                                    1- 3161     	BANKSEL	r0x105E
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 00rr                      1- 3162     	MOVAR	r0x105E
                                    1- 3163     	BANKSEL	_preBatValue
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 03rr                      1- 3164     	ADDAR	_preBatValue,F
                                    1- 3165     	MGOTO	_00373_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
     00F8                           1- 3166     _00367_DS_:
                                    1- 3167     	.line	344, "main.c"; 	batCount = 0;
                                    1- 3168     	BANKSEL	_batCount
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 02rr                      1- 3169     	CLRR	_batCount
     00FA 02rr                      1- 3170     	CLRR	(_batCount + 1)
     00FB                           1- 3171     _00373_DS_:
                                    1- 3172     	.line	348, "main.c"; 	}
                                    1- 3173     	RETURN	
     00FB 0010                      3-   40 m1      ret
                                    1- 3174     ; exit point of _chrgCtr
                                    1- 3177     ;	code size estimation:
                                    1- 3178     ;	 1230+  358 =  1588 instructions ( 3892 byte)
                                    1- 3180     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
