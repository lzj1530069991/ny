
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_showKeyLed
                                    1-   25     	extern	_B1
                                    1-   26     	extern	_C1
                                    1-   27     	extern	_A2
                                    1-   28     	extern	_B2
                                    1-   29     	extern	_C2
                                    1-   30     	extern	_D2
                                    1-   31     	extern	_E2
                                    1-   32     	extern	_F2
                                    1-   33     	extern	_G2
                                    1-   34     	extern	_A3
                                    1-   35     	extern	_B3
                                    1-   36     	extern	_C3
                                    1-   37     	extern	_D3
                                    1-   38     	extern	_E3
                                    1-   39     	extern	_F3
                                    1-   40     	extern	_G3
                                    1-   41     	extern	_delayms
                                    1-   42     	extern	_LedCtr2
                                    1-   43     	extern	_checkInAD
                                    1-   44     	extern	_F_AIN3_Convert
                                    1-   45     	extern	_fgCtr
                                    1-   46     	extern	_ledCtr
                                    1-   47     	extern	_workCtr
                                    1-   48     	extern	__divuchar
                                    1-   49     	extern	__moduchar
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__mulchar
                                    1-  130     	extern	__nyc_ny8_startup
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; global declarations
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     	extern	_delay
                                    1-  135     	extern	_F_wait_eoc
                                    1-  136     	extern	_F_AIN2_Convert
                                    1-  137     	extern	_F_AIN4_Convert
                                    1-  138     	extern	_checkOutA
                                    1-  139     	extern	_checkBatAD
                                    1-  140     	extern	_initAD
                                    1-  141     	extern	_keyRead
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_pwmStop
                                    1-  144     	extern	_pwmInit
                                    1-  145     	extern	_pwm1Stop
                                    1-  146     	extern	_pwm1Init
                                    1-  147     	extern	_powerOff
                                    1-  148     	extern	_initSys
                                    1-  149     	extern	_keyCtr
                                    1-  150     	extern	_refreshNub
                                    1-  151     	extern	_chrgCtr
                                    1-  152     	extern	_isr
                                    1-  153     	extern	_main
                                    1-  154     	extern	_setMaxDuty
                                    1-  155     	extern	_debug
                                    1-  156     	extern	_Status
                                    1-  157     	extern	_R_AIN4_DATA
                                    1-  158     	extern	_R_AIN4_DATA_LB
                                    1-  159     	extern	_R_AIN2_DATA
                                    1-  160     	extern	_R_AIN2_DATA_LB
                                    1-  161     	extern	_intCount
                                    1-  162     	extern	_sleepTime
                                    1-  163     	extern	_count200ms
                                    1-  164     	extern	_count500ms
                                    1-  165     	extern	_count1s
                                    1-  166     	extern	_count5s
                                    1-  167     	extern	_count900s
                                    1-  168     	extern	_workStep
                                    1-  169     	extern	_keyCount
                                    1-  170     	extern	_pwStep
                                    1-  171     	extern	_ledLightTime
                                    1-  172     	extern	_maxDuty
                                    1-  173     	extern	_currentDuty
                                    1-  174     	extern	_overCount
                                    1-  175     	extern	_tempDuty
                                    1-  176     	extern	_count5S
                                    1-  177     	extern	_ledDeadTime
                                    1-  178     	extern	_countFull
                                    1-  179     	extern	_tempshiweiNum
                                    1-  180     	extern	_tempgeweiNum
                                    1-  181     	extern	_refreshCount
                                    1-  182     	extern	_shiweiNum
                                    1-  183     	extern	_geweiNum
                                    1-  184     	extern	_batValue
                                    1-  185     	extern	_cDuty
                                    1-  186     	extern	_preBatValue
                                    1-  187     	extern	_chrgStep
                                    1-  188     	extern	_lightBat
                                    1-  189     	extern	_closeCount
                                    1-  190     	extern	_firstShowCount
                                    1-  191     	extern	_batCount
                                    1-  192     	extern	_maxChrgDuty
                                    1-  194     	extern PSAVE
                                    1-  195     	extern SSAVE
                                    1-  196     	extern WSAVE
                                    1-  197     	extern STK02
                                    1-  198     	extern STK01
                                    1-  199     	extern STK00
                                    1-  201     .segment "uninit", 0x20000040
 20000040                           1-  202     PSAVE:
                                    1-  203     	.res 1
 20000041                           1-  204     SSAVE:
                                    1-  205     	.res 1
 20000042                           1-  206     WSAVE:
                                    1-  207     	.res 1
 20000043                           1-  208     STK02:
                                    1-  209     	.res 1
 20000044                           1-  210     STK01:
                                    1-  211     	.res 1
 20000045                           1-  212     STK00:
                                    1-  213     	.res 1
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ; global definitions
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN4_DATA:
                                    1-  220     	.res	2
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN4_DATA_LB:
                                    1-  225     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN2_DATA:
                                    1-  230     	.res	2
                                    1-  233     .segment "uninit"
     0000                           1-  234     _R_AIN2_DATA_LB:
                                    1-  235     	.res	1
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ; absolute symbol definitions
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; compiler-defined variables
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x105F:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1060:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1061:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1063:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x105C:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x105D:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1059:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x105B:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1058:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1057:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1056:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1051:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1052:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1053:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1054:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x104D:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x104E:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x104F:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1050:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1047:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1048:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1049:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x104C:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1041:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x1042:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x1043:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x1046:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x103D:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x103C:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x103E:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x103F:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x1040:
                                    1-  339     	.res	1
                                    1-  340     ;--------------------------------------------------------
                                    1-  341     ; initialized data
                                    1-  342     ;--------------------------------------------------------
                                    1-  344     .segment "idata"
     0000                           1-  345     _debug:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _numArray:
     0000 003F                      1-  352     	dw	0x3f
     0001 0006                      1-  353     	dw	0x06
     0002 005B                      1-  354     	dw	0x5b
     0003 004F                      1-  355     	dw	0x4f
     0004 0066                      1-  356     	dw	0x66
     0005 006D                      1-  357     	dw	0x6d
     0006 007D                      1-  358     	dw	0x7d
     0007 0007                      1-  359     	dw	0x07
     0008 007F                      1-  360     	dw	0x7f
     0009 006F                      1-  361     	dw	0x6f
     000A 0071                      1-  362     	dw	0x71
     000B 0079                      1-  363     	dw	0x79
     000C 0050                      1-  364     	dw	0x50
                                    1-  368     .segment "idata"
     0000                           1-  369     _Status:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _intCount:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _sleepTime:
     0000 0000 0000                 1-  382     	dw	0x00, 0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _count200ms:
     0000 0000                      1-  388     	dw	0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _count500ms:
     0000 0000                      1-  394     	dw	0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _count1s:
     0000 0000                      1-  400     	dw	0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _count5s:
     0000 0000 0000                 1-  406     	dw	0x00, 0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _count900s:
     0000 0000 0000                 1-  412     	dw	0x00, 0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _workStep:
     0000 0000                      1-  418     	dw	0x00
                                    1-  422     .segment "idata"
     0000                           1-  423     _keyCount:
     0000 0000                      1-  424     	dw	0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _pwStep:
     0000 0000                      1-  430     	dw	0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _ledLightTime:
     0000 0000                      1-  436     	dw	0x00
                                    1-  440     .segment "idata"
     0000                           1-  441     _maxDuty:
     0000 0000                      1-  442     	dw	0x00
                                    1-  446     .segment "idata"
     0000                           1-  447     _currentDuty:
     0000 0000                      1-  448     	dw	0x00
                                    1-  452     .segment "idata"
     0000                           1-  453     _overCount:
     0000 0000                      1-  454     	dw	0x00
                                    1-  458     .segment "idata"
     0000                           1-  459     _tempDuty:
     0000 0000                      1-  460     	dw	0x00
                                    1-  464     .segment "idata"
     0000                           1-  465     _count5S:
     0000 0000 0000                 1-  466     	dw	0x00, 0x00
                                    1-  470     .segment "idata"
     0000                           1-  471     _ledDeadTime:
     0000 0000                      1-  472     	dw	0x00
                                    1-  476     .segment "idata"
     0000                           1-  477     _countFull:
     0000 0000 0000                 1-  478     	dw	0x00, 0x00
                                    1-  482     .segment "idata"
     0000                           1-  483     _tempshiweiNum:
     0000 0000                      1-  484     	dw	0x00
                                    1-  488     .segment "idata"
     0000                           1-  489     _tempgeweiNum:
     0000 0000                      1-  490     	dw	0x00
                                    1-  494     .segment "idata"
     0000                           1-  495     _refreshCount:
     0000 0000 0000                 1-  496     	dw	0x00, 0x00
                                    1-  500     .segment "idata"
     0000                           1-  501     _shiweiNum:
     0000 0000                      1-  502     	dw	0x00
                                    1-  506     .segment "idata"
     0000                           1-  507     _geweiNum:
     0000 0000                      1-  508     	dw	0x00
                                    1-  512     .segment "idata"
     0000                           1-  513     _batValue:
     0000 0000                      1-  514     	dw	0x00
                                    1-  518     .segment "idata"
     0000                           1-  519     _cDuty:
     0000 0000                      1-  520     	dw	0x00
                                    1-  524     .segment "idata"
     0000                           1-  525     _preBatValue:
     0000 0000                      1-  526     	dw	0x00
                                    1-  530     .segment "idata"
     0000                           1-  531     _chrgStep:
     0000 0000                      1-  532     	dw	0x00
                                    1-  536     .segment "idata"
     0000                           1-  537     _lightBat:
     0000 0000                      1-  538     	dw	0x00
                                    1-  542     .segment "idata"
     0000                           1-  543     _closeCount:
     0000 0000 0000                 1-  544     	dw	0x00, 0x00
                                    1-  548     .segment "idata"
     0000                           1-  549     _firstShowCount:
     0000 0000                      1-  550     	dw	0x00
                                    1-  554     .segment "idata"
     0000                           1-  555     _batCount:
     0000 0000 0000                 1-  556     	dw	0x00, 0x00
                                    1-  560     .segment "idata"
     0000                           1-  561     _maxChrgDuty:
     0000 0000                      1-  562     	dw	0x00
                                    1-  565     ;--------------------------------------------------------
                                    1-  566     ; overlayable items in internal ram 
                                    1-  567     ;--------------------------------------------------------
                                    1-  568     ;	udata_ovr
                                    1-  569     ;--------------------------------------------------------
                                    1-  570     ; reset vector 
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ORG	0x0000
     0000 3rrr                      1-  573     	LGOTO	__nyc_ny8_startup
                                    1-  574     ;--------------------------------------------------------
                                    1-  575     ; interrupt and initialization code
                                    1-  576     ;--------------------------------------------------------
                                    1-  577     ORG 0x0008
                                    1-  578     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  580     .segment "code"
     0000                           1-  581     __sdcc_interrupt:
                                    1-  582     ;***
                                    1-  583     ;  pBlock Stats: dbName = I
                                    1-  584     ;***
                                    1-  585     ;2 compiler assigned registers:
                                    1-  586     ;   STK00
                                    1-  587     ;   STK01
                                    1-  588     ;; Starting pCode block
     0000                           1-  589     _isr:
                                    1-  590     ; 0 exit points
                                    1-  591     	.line	88, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  592     	MOVAR	WSAVE
     0001 1503                      1-  593     	SWAPR	STATUS,W
     0002 0283                      1-  594     	CLRR	STATUS
     0003 00rr                      1-  595     	MOVAR	SSAVE
     0004 010A                      1-  596     	MOVR	PCHBUF,W
     0005 028A                      1-  597     	CLRR	PCHBUF
     0006 00rr                      1-  598     	MOVAR	PSAVE
     0007 0104                      1-  599     	MOVR	FSR,W
                                    1-  600     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  601     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  602     	MOVR	STK00,W
                                    1-  603     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  604     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  605     	MOVR	STK01,W
                                    1-  606     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  607     	MOVAR	___sdcc_saved_stk01
                                    1-  608     	.line	90, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  609     	BTRSS	_INTFbits,0
                                    1-  610     	MGOTO	_00123_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  611     	.line	92, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  612     	MOVIA	0x37
     0013 03rr                      1-  613     	ADDAR	_TMR0,F
                                    1-  614     	.line	94, "main.c"; 	if(++intCount >= 100)
                                    1-  615     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  616     	INCR	_intCount,F
                                    1-  617     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  618     	MOVIA	0x64
     0017 04rr                      1-  619     	SUBAR	_intCount,W
     0018 0803                      1-  620     	BTRSS	STATUS,0
                                    1-  621     	MGOTO	_00123_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  622     	.line	96, "main.c"; 	IntFlag = 1;
                                    1-  623     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  624     	BSR	_Status,0
                                    1-  625     	.line	97, "main.c"; 	intCount = 0;
                                    1-  626     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  627     	CLRR	_intCount
                                    1-  628     	.line	98, "main.c"; 	if(++count500ms >= 40)
                                    1-  629     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  630     	INCR	_count500ms,F
                                    1-  631     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  632     	MOVIA	0x28
     0021 04rr                      1-  633     	SUBAR	_count500ms,W
     0022 0C03                      1-  634     	BTRSC	STATUS,0
                                    1-  635     	.line	99, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  636     	CLRR	_count500ms
                                    1-  637     	.line	100, "main.c"; 	if(++count200ms >= 20)
                                    1-  638     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  639     	INCR	_count200ms,F
     0026 2114                      1-  640     	MOVIA	0x14
     0027 04rr                      1-  641     	SUBAR	_count200ms,W
     0028 0803                      1-  642     	BTRSS	STATUS,0
                                    1-  643     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  644     	.line	102, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  645     	CLRR	_count200ms
                                    1-  646     	.line	103, "main.c"; 	if(ledDeadTime > 0)
                                    1-  647     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  648     	MOVR	_ledDeadTime,W
     002D 0903                      1-  649     	BTRSS	STATUS,2
                                    1-  650     	.line	104, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  651     	DECR	_ledDeadTime,F
     002F                           1-  652     _00110_DS_:
                                    1-  653     	.line	106, "main.c"; 	if(++count5s >= 500)
                                    1-  654     	BANKSEL	_count5s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  655     	INCR	_count5s,F
     0031 0D03                      1-  656     	BTRSC	STATUS,2
     0032 05rr                      1-  657     	INCR	(_count5s + 1),F
                                    1-  658     ;;unsigned compare: left < lit (0x1F4=500), size=2
     0033 2101                      1-  659     	MOVIA	0x01
     0034 04rr                      1-  660     	SUBAR	(_count5s + 1),W
     0035 0903                      1-  661     	BTRSS	STATUS,2
                                    1-  662     	MGOTO	_00161_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21F4                      1-  663     	MOVIA	0xf4
     0038 04rr                      1-  664     	SUBAR	_count5s,W
     0039                           1-  665     _00161_DS_:
     0039 0803                      1-  666     	BTRSS	STATUS,0
                                    1-  667     	MGOTO	_00112_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  668     	.line	108, "main.c"; 	count5s = 0;
                                    1-  669     	BANKSEL	_count5s
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  670     	CLRR	_count5s
     003D 02rr                      1-  671     	CLRR	(_count5s + 1)
     003E                           1-  672     _00112_DS_:
                                    1-  673     	.line	110, "main.c"; 	if(++count1s >= 100)
                                    1-  674     	BANKSEL	_count1s
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  675     	INCR	_count1s,F
                                    1-  676     ;;unsigned compare: left < lit (0x64=100), size=1
     0040 2164                      1-  677     	MOVIA	0x64
     0041 04rr                      1-  678     	SUBAR	_count1s,W
     0042 0803                      1-  679     	BTRSS	STATUS,0
                                    1-  680     	MGOTO	_00123_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  681     	.line	112, "main.c"; 	count1s = 0;
     0044 02rr                      1-  682     	CLRR	_count1s
                                    1-  683     	.line	113, "main.c"; 	if(ledLightTime > 0)
                                    1-  684     	BANKSEL	_ledLightTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  685     	MOVR	_ledLightTime,W
     0047 0903                      1-  686     	BTRSS	STATUS,2
                                    1-  687     	.line	114, "main.c"; 	ledLightTime--;
     0048 06rr                      1-  688     	DECR	_ledLightTime,F
                                    1-  689     	.line	115, "main.c"; 	if(workStep)
                                    1-  690     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  691     	MOVR	_workStep,W
     004B 0D03                      1-  692     	BTRSC	STATUS,2
                                    1-  693     	MGOTO	_00116_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  694     	.line	117, "main.c"; 	++count900s;
                                    1-  695     	BANKSEL	_count900s
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1-  696     	INCR	_count900s,F
     004F 0D03                      1-  697     	BTRSC	STATUS,2
     0050 05rr                      1-  698     	INCR	(_count900s + 1),F
                                    1-  699     	MGOTO	_00123_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  700     _00116_DS_:
                                    1-  701     	.line	121, "main.c"; 	count900s = 0;
                                    1-  702     	BANKSEL	_count900s
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1-  703     	CLRR	_count900s
     0054 02rr                      1-  704     	CLRR	(_count900s + 1)
     0055                           1-  705     _00123_DS_:
                                    1-  706     	.line	130, "main.c"; 	if(INTFbits.PABIF)
     0055 08rr                      1-  707     	BTRSS	_INTFbits,1
                                    1-  708     	MGOTO	_00125_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  709     	.line	132, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0057 21FD                      1-  710     	MOVIA	0xfd
     0058 00rr                      1-  711     	MOVAR	_INTF
     0059                           1-  712     _00125_DS_:
                                    1-  713     	.line	135, "main.c"; 	INTF = 0;
     0059 02rr                      1-  714     	CLRR	_INTF
                                    1-  715     	.line	137, "main.c"; 	}
                                    1-  716     	BANKSEL	___sdcc_saved_stk01
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  717     	MOVR	___sdcc_saved_stk01,W
     005C 00rr                      1-  718     	MOVAR	STK01
                                    1-  719     	BANKSEL	___sdcc_saved_stk00
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1-  720     	MOVR	___sdcc_saved_stk00,W
     005F 00rr                      1-  721     	MOVAR	STK00
                                    1-  722     	BANKSEL	___sdcc_saved_fsr
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  723     	MOVR	___sdcc_saved_fsr,W
     0062 0084                      1-  724     	MOVAR	FSR
     0063 01rr                      1-  725     	MOVR	PSAVE,W
     0064 008A                      1-  726     	MOVAR	PCHBUF
     0065 0283                      1-  727     	CLRR	STATUS
     0066 15rr                      1-  728     	SWAPR	SSAVE,W
     0067 0083                      1-  729     	MOVAR	STATUS
     0068 15rr                      1-  730     	SWAPR	WSAVE,F
     0069 15rr                      1-  731     	SWAPR	WSAVE,W
     006A                           1-  732     END_OF_INTERRUPT:
     006A 0011                      1-  733     	RETIE	
                                    1-  735     ;--------------------------------------------------------
                                    1-  736     ; code
                                    1-  737     ;--------------------------------------------------------
                                    1-  738     ;***
                                    1-  739     ;  pBlock Stats: dbName = M
                                    1-  740     ;***
                                    1-  741     ;has an exit
                                    1-  742     ;functions called:
                                    1-  743     ;   _initSys
                                    1-  744     ;   _initAD
                                    1-  745     ;   _delay
                                    1-  746     ;   _refreshNub
                                    1-  747     ;   _setInput
                                    1-  748     ;   _pwmStop
                                    1-  749     ;   _powerOff
                                    1-  750     ;   _checkBatAD
                                    1-  751     ;   _checkOutA
                                    1-  752     ;   _chrgCtr
                                    1-  753     ;   _keyCtr
                                    1-  754     ;   _gotoSleep
                                    1-  755     ;   _powerOff
                                    1-  756     ;   _initSys
                                    1-  757     ;   _initAD
                                    1-  758     ;   _delay
                                    1-  759     ;   _refreshNub
                                    1-  760     ;   _setInput
                                    1-  761     ;   _pwmStop
                                    1-  762     ;   _powerOff
                                    1-  763     ;   _checkBatAD
                                    1-  764     ;   _checkOutA
                                    1-  765     ;   _chrgCtr
                                    1-  766     ;   _keyCtr
                                    1-  767     ;   _gotoSleep
                                    1-  768     ;   _powerOff
                                    1-  769     ;1 compiler assigned register :
                                    1-  770     ;   STK00
                                    1-  771     ;; Starting pCode block
                                    1-  772     .segment "code"; module=main, function=_main
     0000                           1-  774     _main:
                                    1-  775     ; 2 exit points
                                    1-  776     	.line	142, "main.c"; 	initSys();
                                    1-  777     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  778     	.line	143, "main.c"; 	initAD();
                                    1-  779     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  780     	.line	144, "main.c"; 	firstShowCount = 100;
     0002 2164                      1-  781     	MOVIA	0x64
                                    1-  782     	BANKSEL	_firstShowCount
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  783     	MOVAR	_firstShowCount
                                    1-  784     	.line	145, "main.c"; 	ledLightTime = showFlag = 1;
                                    1-  785     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1-  786     	BSR	_Status,4
                                    1-  787     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  788     	CLRR	_ledLightTime
                                    1-  789     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  790     	BTRSS	_Status,4
                                    1-  791     	MGOTO	_00010_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  792     	BANKSEL	_ledLightTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  793     	INCR	_ledLightTime,F
     000E                           1-  794     _00010_DS_:
                                    1-  795     	.line	146, "main.c"; 	tempshiweiNum = shiweiNum = 8;
     000E 2108                      1-  796     	MOVIA	0x08
                                    1-  797     	BANKSEL	_shiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1-  798     	MOVAR	_shiweiNum
                                    1-  799     	BANKSEL	_tempshiweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  800     	MOVAR	_tempshiweiNum
                                    1-  801     	.line	147, "main.c"; 	tempgeweiNum = geweiNum = 8;
                                    1-  802     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  803     	MOVAR	_geweiNum
     0015 2108                      1-  804     	MOVIA	0x08
                                    1-  805     	BANKSEL	_tempgeweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  806     	MOVAR	_tempgeweiNum
                                    1-  807     	.line	148, "main.c"; 	delay(250);
     0018 21FA                      1-  808     	MOVIA	0xfa
     0019 00rr                      1-  809     	MOVAR	STK00
     001A 2100                      1-  810     	MOVIA	0x00
                                    1-  811     	MCALL	_delay
     001B 2rrr                      3-   66 m1      LCALL rom_address
     001C                           1-  812     _00215_DS_:
                                    1-  813     	.line	151, "main.c"; 	CLRWDT();
     001C 0002                      1-  814     	clrwdt
                                    1-  815     	.line	152, "main.c"; 	if(showFlag)
                                    1-  816     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 0Arr                      1-  817     	BTRSS	_Status,4
                                    1-  818     	MGOTO	_00167_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  819     	.line	153, "main.c"; 	refreshNub();
                                    1-  820     	MCALL	_refreshNub
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  821     	MGOTO	_00168_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1-  822     _00167_DS_:
                                    1-  823     	.line	155, "main.c"; 	setInput();
                                    1-  824     	MCALL	_setInput
     0022 2rrr                      3-   66 m1      LCALL rom_address
     0023                           1-  825     _00168_DS_:
                                    1-  826     	.line	156, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  827     	BANKSEL	_workStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1-  828     	MOVR	_workStep,W
     0025 0D03                      1-  829     	BTRSC	STATUS,2
                                    1-  830     	MGOTO	_00175_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  831     ;;unsigned compare: left < lit (0x28=40), size=1
     0027 2128                      1-  832     	MOVIA	0x28
                                    1-  833     	BANKSEL	_tempDuty
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 04rr                      1-  834     	SUBAR	_tempDuty,W
     002A 0803                      1-  835     	BTRSS	STATUS,0
                                    1-  836     	MGOTO	_00175_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  837     	.line	158, "main.c"; 	if(cDuty > tempDuty)
                                    1-  838     	BANKSEL	_cDuty
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  839     	MOVR	_cDuty,W
                                    1-  840     	BANKSEL	_tempDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 04rr                      1-  841     	SUBAR	_tempDuty,W
     0030 0C03                      1-  842     	BTRSC	STATUS,0
                                    1-  843     	MGOTO	_00172_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  844     	.line	160, "main.c"; 	cDuty--;
                                    1-  845     	BANKSEL	_cDuty
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 06rr                      1-  846     	DECR	_cDuty,F
                                    1-  847     	.line	161, "main.c"; 	PWM2DUTY = cDuty;
     0034 01rr                      1-  848     	MOVR	_cDuty,W
     0035 00rr                      1-  849     	SFUN	_PWM2DUTY
                                    1-  850     	MGOTO	_00175_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1-  851     _00172_DS_:
                                    1-  852     	.line	163, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  853     	BANKSEL	_tempDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1-  854     	MOVR	_tempDuty,W
                                    1-  855     	BANKSEL	_cDuty
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1-  856     	SUBAR	_cDuty,W
     003B 0C03                      1-  857     	BTRSC	STATUS,0
                                    1-  858     	MGOTO	_00175_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  859     	.line	165, "main.c"; 	cDuty++;
     003D 05rr                      1-  860     	INCR	_cDuty,F
                                    1-  861     	.line	166, "main.c"; 	PWM2DUTY = cDuty;
     003E 01rr                      1-  862     	MOVR	_cDuty,W
     003F 00rr                      1-  863     	SFUN	_PWM2DUTY
     0040                           1-  864     _00175_DS_:
                                    1-  865     	.line	169, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  866     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1-  867     	MOVR	_workStep,W
     0042 0D03                      1-  868     	BTRSC	STATUS,2
                                    1-  869     	MGOTO	_00178_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  870     	BANKSEL	_currentDuty
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1-  871     	MOVR	_currentDuty,W
                                    1-  872     	BANKSEL	_maxDuty
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1-  873     	SUBAR	_maxDuty,W
     0048 0C03                      1-  874     	BTRSC	STATUS,0
                                    1-  875     	MGOTO	_00178_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  876     	.line	171, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  877     	BANKSEL	_currentDuty
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 06rr                      1-  878     	DECR	_currentDuty,F
                                    1-  879     	.line	172, "main.c"; 	PWM2DUTY = currentDuty;
     004C 01rr                      1-  880     	MOVR	_currentDuty,W
     004D 00rr                      1-  881     	SFUN	_PWM2DUTY
                                    1-  882     	.line	173, "main.c"; 	cDuty = currentDuty;
     004E 01rr                      1-  883     	MOVR	_currentDuty,W
                                    1-  884     	BANKSEL	_cDuty
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1-  885     	MOVAR	_cDuty
     0051                           1-  886     _00178_DS_:
                                    1-  887     	.line	175, "main.c"; 	if(!IntFlag)
                                    1-  888     	BANKSEL	_Status
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 08rr                      1-  889     	BTRSS	_Status,0
                                    1-  890     	MGOTO	_00215_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  891     	.line	177, "main.c"; 	IntFlag = 0;
     0054 1Crr                      1-  892     	BCR	_Status,0
                                    1-  893     	.line	178, "main.c"; 	if(firstShowCount > 0)
                                    1-  894     	BANKSEL	_firstShowCount
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1-  895     	MOVR	_firstShowCount,W
     0057 0D03                      1-  896     	BTRSC	STATUS,2
                                    1-  897     	MGOTO	_00183_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  898     	.line	180, "main.c"; 	firstShowCount--;
     0059 06rr                      1-  899     	DECR	_firstShowCount,F
                                    1-  900     	.line	181, "main.c"; 	preBatValue = batValue;
                                    1-  901     	BANKSEL	_batValue
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  902     	MOVR	_batValue,W
                                    1-  903     	BANKSEL	_preBatValue
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1-  904     	MOVAR	_preBatValue
                                    1-  905     ;;unsigned compare: left < lit (0x5=5), size=1
     005E                           1-  906     _00183_DS_:
                                    1-  907     	.line	184, "main.c"; 	if(batValue < 5 && workStep > 0)
     005E 2105                      1-  908     	MOVIA	0x05
                                    1-  909     	BANKSEL	_batValue
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 04rr                      1-  910     	SUBAR	_batValue,W
     0061 0C03                      1-  911     	BTRSC	STATUS,0
                                    1-  912     	MGOTO	_00187_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  913     	BANKSEL	_workStep
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1-  914     	MOVR	_workStep,W
     0065 0D03                      1-  915     	BTRSC	STATUS,2
                                    1-  916     	MGOTO	_00187_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  917     	.line	186, "main.c"; 	if(++closeCount >= 6000)
                                    1-  918     	BANKSEL	_closeCount
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 05rr                      1-  919     	INCR	_closeCount,F
     0069 0D03                      1-  920     	BTRSC	STATUS,2
     006A 05rr                      1-  921     	INCR	(_closeCount + 1),F
                                    1-  922     ;;unsigned compare: left < lit (0x1770=6000), size=2
     006B 2117                      1-  923     	MOVIA	0x17
     006C 04rr                      1-  924     	SUBAR	(_closeCount + 1),W
     006D 0903                      1-  925     	BTRSS	STATUS,2
                                    1-  926     	MGOTO	_00305_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
     006F 2170                      1-  927     	MOVIA	0x70
     0070 04rr                      1-  928     	SUBAR	_closeCount,W
     0071                           1-  929     _00305_DS_:
     0071 0803                      1-  930     	BTRSS	STATUS,0
                                    1-  931     	MGOTO	_00188_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  932     	.line	188, "main.c"; 	closeCount = 0;
                                    1-  933     	BANKSEL	_closeCount
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 02rr                      1-  934     	CLRR	_closeCount
     0075 02rr                      1-  935     	CLRR	(_closeCount + 1)
                                    1-  936     	.line	189, "main.c"; 	preBatValue = 0;
                                    1-  937     	BANKSEL	_preBatValue
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 02rr                      1-  938     	CLRR	_preBatValue
                                    1-  939     	.line	190, "main.c"; 	workStep = 0;
                                    1-  940     	BANKSEL	_workStep
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 02rr                      1-  941     	CLRR	_workStep
                                    1-  942     	.line	191, "main.c"; 	pwmStop();
                                    1-  943     	MCALL	_pwmStop
     007A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  944     	MGOTO	_00188_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C                           1-  945     _00187_DS_:
                                    1-  946     	.line	196, "main.c"; 	closeCount = 0;
                                    1-  947     	BANKSEL	_closeCount
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 02rr                      1-  948     	CLRR	_closeCount
     007E 02rr                      1-  949     	CLRR	(_closeCount + 1)
                                    1-  950     ;;unsigned compare: left < lit (0x5=5), size=1
     007F                           1-  951     _00188_DS_:
                                    1-  952     	.line	199, "main.c"; 	if(overCount >= 5 && workStep > 0)
     007F 2105                      1-  953     	MOVIA	0x05
                                    1-  954     	BANKSEL	_overCount
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1-  955     	SUBAR	_overCount,W
     0082 0803                      1-  956     	BTRSS	STATUS,0
                                    1-  957     	MGOTO	_00193_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  958     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1-  959     	MOVR	_workStep,W
     0086 0D03                      1-  960     	BTRSC	STATUS,2
                                    1-  961     	MGOTO	_00193_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  962     	.line	201, "main.c"; 	if(++count5S > 250)
                                    1-  963     	BANKSEL	_count5S
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 05rr                      1-  964     	INCR	_count5S,F
     008A 0D03                      1-  965     	BTRSC	STATUS,2
     008B 05rr                      1-  966     	INCR	(_count5S + 1),F
                                    1-  967     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  968     ;;unsigned compare: left >= lit (0xFB=251), size=2
     008C 2100                      1-  969     	MOVIA	0x00
     008D 04rr                      1-  970     	SUBAR	(_count5S + 1),W
     008E 0903                      1-  971     	BTRSS	STATUS,2
                                    1-  972     	MGOTO	_00307_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090 21FB                      1-  973     	MOVIA	0xfb
     0091 04rr                      1-  974     	SUBAR	_count5S,W
     0092                           1-  975     _00307_DS_:
     0092 0803                      1-  976     	BTRSS	STATUS,0
                                    1-  977     	MGOTO	_00194_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  978     	.line	203, "main.c"; 	overCount = 0;
                                    1-  979     	BANKSEL	_overCount
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 02rr                      1-  980     	CLRR	_overCount
                                    1-  981     	.line	204, "main.c"; 	count5S = 0;
                                    1-  982     	BANKSEL	_count5S
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 02rr                      1-  983     	CLRR	_count5S
     0098 02rr                      1-  984     	CLRR	(_count5S + 1)
                                    1-  985     	.line	205, "main.c"; 	ledDeadTime = 25;
     0099 2119                      1-  986     	MOVIA	0x19
                                    1-  987     	BANKSEL	_ledDeadTime
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1-  988     	MOVAR	_ledDeadTime
                                    1-  989     	.line	206, "main.c"; 	powerOff();
                                    1-  990     	MCALL	_powerOff
     009C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  991     	MGOTO	_00194_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
     009E                           1-  992     _00193_DS_:
                                    1-  993     	.line	211, "main.c"; 	count5S = 0;
                                    1-  994     	BANKSEL	_count5S
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 02rr                      1-  995     	CLRR	_count5S
     00A0 02rr                      1-  996     	CLRR	(_count5S + 1)
                                    1-  997     ;;unsigned compare: left < lit (0x5=5), size=1
     00A1                           1-  998     _00194_DS_:
                                    1-  999     	.line	213, "main.c"; 	if(count200ms < 5)
     00A1 2105                      1- 1000     	MOVIA	0x05
                                    1- 1001     	BANKSEL	_count200ms
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 04rr                      1- 1002     	SUBAR	_count200ms,W
     00A4 0C03                      1- 1003     	BTRSC	STATUS,0
                                    1- 1004     	MGOTO	_00200_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1005     	.line	215, "main.c"; 	checkBatAD();
                                    1- 1006     	MCALL	_checkBatAD
     00A6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1007     	MGOTO	_00201_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1008     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1009     ;;unsigned compare: left >= lit (0xB=11), size=1
     00A8                           1- 1010     _00200_DS_:
                                    1- 1011     	.line	217, "main.c"; 	else if(count200ms > 10 && count200ms < 15)
     00A8 210B                      1- 1012     	MOVIA	0x0b
                                    1- 1013     	BANKSEL	_count200ms
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 04rr                      1- 1014     	SUBAR	_count200ms,W
     00AB 0803                      1- 1015     	BTRSS	STATUS,0
                                    1- 1016     	MGOTO	_00201_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1017     ;;unsigned compare: left < lit (0xF=15), size=1
     00AD 210F                      1- 1018     	MOVIA	0x0f
     00AE 04rr                      1- 1019     	SUBAR	_count200ms,W
     00AF 0803                      1- 1020     	BTRSS	STATUS,0
                                    1- 1021     	.line	219, "main.c"; 	checkOutA();
                                    1- 1022     	MCALL	_checkOutA
     00B0 2rrr                      3-   66 m1      LCALL rom_address
     00B1                           1- 1023     _00201_DS_:
                                    1- 1024     	.line	221, "main.c"; 	chrgCtr();
                                    1- 1025     	MCALL	_chrgCtr
     00B1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1026     	.line	222, "main.c"; 	if(chrgFlag == 0)
                                    1- 1027     	BANKSEL	_Status
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 09rr                      1- 1028     	BTRSS	_Status,3
                                    1- 1029     	.line	223, "main.c"; 	keyCtr();
                                    1- 1030     	MCALL	_keyCtr
     00B4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1031     	.line	224, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1032     	BANKSEL	_workStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 1033     	MOVR	_workStep,W
     00B7 0903                      1- 1034     	BTRSS	STATUS,2
                                    1- 1035     	MGOTO	_00207_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1036     	BANKSEL	_keyCount
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 1037     	MOVR	_keyCount,W
     00BB 0903                      1- 1038     	BTRSS	STATUS,2
                                    1- 1039     	MGOTO	_00207_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1040     	BANKSEL	_PORTA
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 0Drr                      1- 1041     	BTRSC	_PORTA,3
                                    1- 1042     	MGOTO	_00207_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1043     	BANKSEL	_ledLightTime
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 01rr                      1- 1044     	MOVR	_ledLightTime,W
     00C2 0903                      1- 1045     	BTRSS	STATUS,2
                                    1- 1046     	MGOTO	_00207_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1047     	BANKSEL	_ledDeadTime
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 01rr                      1- 1048     	MOVR	_ledDeadTime,W
     00C6 0903                      1- 1049     	BTRSS	STATUS,2
                                    1- 1050     	MGOTO	_00207_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1051     	.line	226, "main.c"; 	showFlag = 0;
                                    1- 1052     	BANKSEL	_Status
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 1Err                      1- 1053     	BCR	_Status,4
                                    1- 1054     	.line	227, "main.c"; 	if(++sleepTime > 200)
                                    1- 1055     	BANKSEL	_sleepTime
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 05rr                      1- 1056     	INCR	_sleepTime,F
     00CC 0D03                      1- 1057     	BTRSC	STATUS,2
     00CD 05rr                      1- 1058     	INCR	(_sleepTime + 1),F
                                    1- 1059     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1060     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00CE 2100                      1- 1061     	MOVIA	0x00
     00CF 04rr                      1- 1062     	SUBAR	(_sleepTime + 1),W
     00D0 0903                      1- 1063     	BTRSS	STATUS,2
                                    1- 1064     	MGOTO	_00311_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
     00D2 21C9                      1- 1065     	MOVIA	0xc9
     00D3 04rr                      1- 1066     	SUBAR	_sleepTime,W
     00D4                           1- 1067     _00311_DS_:
     00D4 0803                      1- 1068     	BTRSS	STATUS,0
                                    1- 1069     	MGOTO	_00207_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1070     	.line	228, "main.c"; 	gotoSleep();
                                    1- 1071     	MCALL	_gotoSleep
     00D6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1072     ;;unsigned compare: left < lit (0x384=900), size=2
     00D7                           1- 1073     _00207_DS_:
                                    1- 1074     	.line	232, "main.c"; 	if(count900s >= 900)
     00D7 2103                      1- 1075     	MOVIA	0x03
                                    1- 1076     	BANKSEL	_count900s
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 04rr                      1- 1077     	SUBAR	(_count900s + 1),W
     00DA 0903                      1- 1078     	BTRSS	STATUS,2
                                    1- 1079     	MGOTO	_00312_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
     00DC 2184                      1- 1080     	MOVIA	0x84
     00DD 04rr                      1- 1081     	SUBAR	_count900s,W
     00DE                           1- 1082     _00312_DS_:
     00DE 0803                      1- 1083     	BTRSS	STATUS,0
                                    1- 1084     	MGOTO	_00215_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1085     	.line	234, "main.c"; 	powerOff();
                                    1- 1086     	MCALL	_powerOff
     00E0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1087     	MGOTO	_00215_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1088     	.line	237, "main.c"; 	}
                                    1- 1089     	RETURN	
     00E2 0010                      3-   40 m1      ret
                                    1- 1090     ; exit point of _main
                                    1- 1092     ;***
                                    1- 1093     ;  pBlock Stats: dbName = C
                                    1- 1094     ;***
                                    1- 1095     ;has an exit
                                    1- 1096     ;6 compiler assigned registers:
                                    1- 1097     ;   r0x103C
                                    1- 1098     ;   STK00
                                    1- 1099     ;   r0x103D
                                    1- 1100     ;   r0x103E
                                    1- 1101     ;   r0x103F
                                    1- 1102     ;   r0x1040
                                    1- 1103     ;; Starting pCode block
                                    1- 1104     .segment "code"; module=main, function=_delay
                                    1- 1106     ;local variable name mapping:
     0000                           1- 1111     _delay:
                                    1- 1112     ; 2 exit points
                                    1- 1113     	.line	792, "main.c"; 	void delay(int count)
                                    1- 1114     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1115     	MOVAR	r0x103C
     0002 01rr                      1- 1116     	MOVR	STK00,W
                                    1- 1117     	BANKSEL	r0x103D
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1118     	MOVAR	r0x103D
                                    1- 1119     	.line	795, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1120     	MOVIA	0x01
                                    1- 1121     	BANKSEL	r0x103E
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1122     	MOVAR	r0x103E
                                    1- 1123     	BANKSEL	r0x103F
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1124     	CLRR	r0x103F
     000A                           1- 1125     _00761_DS_:
                                    1- 1126     	BANKSEL	r0x103C
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1127     	MOVR	r0x103C,W
     000C 2580                      1- 1128     	ADDIA	0x80
                                    1- 1129     	BANKSEL	r0x1040
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1130     	MOVAR	r0x1040
                                    1- 1131     	BANKSEL	r0x103F
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1132     	MOVR	r0x103F,W
     0011 2580                      1- 1133     	ADDIA	0x80
                                    1- 1134     	BANKSEL	r0x1040
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1135     	SUBAR	r0x1040,W
     0014 0903                      1- 1136     	BTRSS	STATUS,2
                                    1- 1137     	MGOTO	_00772_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1138     	BANKSEL	r0x103E
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1139     	MOVR	r0x103E,W
                                    1- 1140     	BANKSEL	r0x103D
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1141     	SUBAR	r0x103D,W
     001A                           1- 1142     _00772_DS_:
     001A 0803                      1- 1143     	BTRSS	STATUS,0
                                    1- 1144     	MGOTO	_00763_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1145     	BANKSEL	r0x103E
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1146     	INCR	r0x103E,F
     001E 0903                      1- 1147     	BTRSS	STATUS,2
                                    1- 1148     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1149     	BANKSEL	r0x103F
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1150     	INCR	r0x103F,F
     0022                           1- 1151     _00001_DS_:
                                    1- 1152     	MGOTO	_00761_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1153     _00763_DS_:
                                    1- 1154     	.line	797, "main.c"; 	}
                                    1- 1155     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1156     ; exit point of _delay
                                    1- 1158     ;***
                                    1- 1159     ;  pBlock Stats: dbName = C
                                    1- 1160     ;***
                                    1- 1161     ;has an exit
                                    1- 1162     ;; Starting pCode block
                                    1- 1163     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1165     _F_wait_eoc:
                                    1- 1166     ; 2 exit points
     0000                           1- 1167     _00754_DS_:
                                    1- 1168     	.line	787, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1169     	BTRSS	_ADMDbits,5
                                    1- 1170     	MGOTO	_00754_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1171     	.line	789, "main.c"; 	}
                                    1- 1172     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1173     ; exit point of _F_wait_eoc
                                    1- 1175     ;***
                                    1- 1176     ;  pBlock Stats: dbName = C
                                    1- 1177     ;***
                                    1- 1178     ;has an exit
                                    1- 1179     ;functions called:
                                    1- 1180     ;   _delay
                                    1- 1181     ;   _F_wait_eoc
                                    1- 1182     ;   _delay
                                    1- 1183     ;   _F_wait_eoc
                                    1- 1184     ;7 compiler assigned registers:
                                    1- 1185     ;   r0x1041
                                    1- 1186     ;   STK00
                                    1- 1187     ;   r0x1042
                                    1- 1188     ;   r0x1043
                                    1- 1189     ;   r0x1044
                                    1- 1190     ;   r0x1045
                                    1- 1191     ;   r0x1046
                                    1- 1192     ;; Starting pCode block
                                    1- 1193     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1195     ;local variable name mapping:
     0000                           1- 1198     _F_AIN2_Convert:
                                    1- 1199     ; 2 exit points
                                    1- 1200     	.line	770, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1201     	BANKSEL	r0x1041
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1202     	MOVAR	r0x1041
                                    1- 1203     	.line	772, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1204     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1205     	CLRR	_R_AIN2_DATA_LB
                                    1- 1206     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1207     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1208     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1209     	.line	774, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1210     	MOVIA	0x92
     0008 00rr                      1- 1211     	MOVAR	_ADMD
                                    1- 1212     	.line	775, "main.c"; 	delay(200);	
     0009 21C8                      1- 1213     	MOVIA	0xc8
     000A 00rr                      1- 1214     	MOVAR	STK00
     000B 2100                      1- 1215     	MOVIA	0x00
                                    1- 1216     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1217     	.line	776, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1218     	MOVIA	0x01
                                    1- 1219     	BANKSEL	r0x1042
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1220     	MOVAR	r0x1042
     0010                           1- 1221     _00747_DS_:
                                    1- 1222     	BANKSEL	r0x1042
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1223     	MOVR	r0x1042,W
                                    1- 1224     	BANKSEL	r0x1041
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1225     	SUBAR	r0x1041,W
     0014 0803                      1- 1226     	BTRSS	STATUS,0
                                    1- 1227     	MGOTO	_00749_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1228     	.line	778, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1229     	BSR	_ADMDbits,6
                                    1- 1230     	.line	779, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1231     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1232     	.line	780, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1233     	MOVIA	0x0f
     0019 10rr                      1- 1234     	ANDAR	_ADR,W
                                    1- 1235     ;;3	MOVAR	r0x1043
                                    1- 1236     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1237     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1238     	.line	781, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1239     	MOVR	_ADD,W
                                    1- 1240     	BANKSEL	r0x1043
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1241     	MOVAR	r0x1043
                                    1- 1242     ;;1	CLRR	r0x1044
                                    1- 1243     ;;106	MOVR	r0x1043,W
                                    1- 1244     ;;104	MOVAR	r0x1045
     001F 2100                      1- 1245     	MOVIA	0x00
                                    1- 1246     	BANKSEL	r0x1046
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1247     	MOVAR	r0x1046
                                    1- 1248     ;;105	MOVR	r0x1045,W
                                    1- 1249     	BANKSEL	r0x1043
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1250     	MOVR	r0x1043,W
                                    1- 1251     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1252     	ADDAR	_R_AIN2_DATA,F
                                    1- 1253     	BANKSEL	r0x1046
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1254     	MOVR	r0x1046,W
     0028 0C03                      1- 1255     	BTRSC	STATUS,0
     0029 05rr                      1- 1256     	INCR	r0x1046,W
     002A 0D03                      1- 1257     	BTRSC	STATUS,2
                                    1- 1258     	MGOTO	_00002_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1259     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1260     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1261     _00002_DS_:
                                    1- 1262     	.line	776, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1263     	BANKSEL	r0x1042
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1264     	INCR	r0x1042,F
                                    1- 1265     	MGOTO	_00747_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1266     _00749_DS_:
                                    1- 1267     	.line	783, "main.c"; 	}
                                    1- 1268     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1269     ; exit point of _F_AIN2_Convert
                                    1- 1271     ;***
                                    1- 1272     ;  pBlock Stats: dbName = C
                                    1- 1273     ;***
                                    1- 1274     ;has an exit
                                    1- 1275     ;functions called:
                                    1- 1276     ;   _delay
                                    1- 1277     ;   _F_wait_eoc
                                    1- 1278     ;   _delay
                                    1- 1279     ;   _F_wait_eoc
                                    1- 1280     ;7 compiler assigned registers:
                                    1- 1281     ;   r0x1047
                                    1- 1282     ;   STK00
                                    1- 1283     ;   r0x1048
                                    1- 1284     ;   r0x1049
                                    1- 1285     ;   r0x104A
                                    1- 1286     ;   r0x104B
                                    1- 1287     ;   r0x104C
                                    1- 1288     ;; Starting pCode block
                                    1- 1289     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1291     ;local variable name mapping:
     0000                           1- 1294     _F_AIN4_Convert:
                                    1- 1295     ; 2 exit points
                                    1- 1296     	.line	755, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1297     	BANKSEL	r0x1047
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1298     	MOVAR	r0x1047
                                    1- 1299     	.line	757, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1300     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1301     	CLRR	_R_AIN4_DATA_LB
                                    1- 1302     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1303     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1304     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1305     	.line	759, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1306     	MOVIA	0x94
     0008 00rr                      1- 1307     	MOVAR	_ADMD
                                    1- 1308     	.line	760, "main.c"; 	delay(200);	
     0009 21C8                      1- 1309     	MOVIA	0xc8
     000A 00rr                      1- 1310     	MOVAR	STK00
     000B 2100                      1- 1311     	MOVIA	0x00
                                    1- 1312     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1313     	.line	761, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1314     	MOVIA	0x01
                                    1- 1315     	BANKSEL	r0x1048
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1316     	MOVAR	r0x1048
     0010                           1- 1317     _00738_DS_:
                                    1- 1318     	BANKSEL	r0x1048
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1319     	MOVR	r0x1048,W
                                    1- 1320     	BANKSEL	r0x1047
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1321     	SUBAR	r0x1047,W
     0014 0803                      1- 1322     	BTRSS	STATUS,0
                                    1- 1323     	MGOTO	_00740_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1324     	.line	763, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1325     	BSR	_ADMDbits,6
                                    1- 1326     	.line	764, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1327     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1328     	.line	765, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1329     	MOVIA	0x0f
     0019 10rr                      1- 1330     	ANDAR	_ADR,W
                                    1- 1331     ;;3	MOVAR	r0x1049
                                    1- 1332     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1333     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1334     	.line	766, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1335     	MOVR	_ADD,W
                                    1- 1336     	BANKSEL	r0x1049
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1337     	MOVAR	r0x1049
                                    1- 1338     ;;1	CLRR	r0x104A
                                    1- 1339     ;;103	MOVR	r0x1049,W
                                    1- 1340     ;;101	MOVAR	r0x104B
     001F 2100                      1- 1341     	MOVIA	0x00
                                    1- 1342     	BANKSEL	r0x104C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1343     	MOVAR	r0x104C
                                    1- 1344     ;;102	MOVR	r0x104B,W
                                    1- 1345     	BANKSEL	r0x1049
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1346     	MOVR	r0x1049,W
                                    1- 1347     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1348     	ADDAR	_R_AIN4_DATA,F
                                    1- 1349     	BANKSEL	r0x104C
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1350     	MOVR	r0x104C,W
     0028 0C03                      1- 1351     	BTRSC	STATUS,0
     0029 05rr                      1- 1352     	INCR	r0x104C,W
     002A 0D03                      1- 1353     	BTRSC	STATUS,2
                                    1- 1354     	MGOTO	_00003_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1355     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1356     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1357     _00003_DS_:
                                    1- 1358     	.line	761, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1359     	BANKSEL	r0x1048
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1360     	INCR	r0x1048,F
                                    1- 1361     	MGOTO	_00738_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1362     _00740_DS_:
                                    1- 1363     	.line	768, "main.c"; 	}
                                    1- 1364     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1365     ; exit point of _F_AIN4_Convert
                                    1- 1367     ;***
                                    1- 1368     ;  pBlock Stats: dbName = C
                                    1- 1369     ;***
                                    1- 1370     ;has an exit
                                    1- 1371     ;functions called:
                                    1- 1372     ;   _F_AIN4_Convert
                                    1- 1373     ;   __mulchar
                                    1- 1374     ;   __mulchar
                                    1- 1375     ;   _F_AIN4_Convert
                                    1- 1376     ;   __mulchar
                                    1- 1377     ;   __mulchar
                                    1- 1378     ;5 compiler assigned registers:
                                    1- 1379     ;   r0x104D
                                    1- 1380     ;   r0x104E
                                    1- 1381     ;   r0x104F
                                    1- 1382     ;   r0x1050
                                    1- 1383     ;   STK00
                                    1- 1384     ;; Starting pCode block
                                    1- 1385     .segment "code"; module=main, function=_checkOutA
                                    1- 1387     ;local variable name mapping:
     0000                           1- 1389     _checkOutA:
                                    1- 1390     ; 2 exit points
                                    1- 1391     	.line	680, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1392     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1393     	CLRR	_R_AIN4_DATA_LB
                                    1- 1394     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1395     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1396     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1397     	.line	681, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1398     	MOVIA	0x08
                                    1- 1399     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1400     	.line	682, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1401     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1402     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1403     	ANDIA	0xf0
     000A 00rr                      1- 1404     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1405     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1406     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1407     	ANDIA	0x0f
     000E 11rr                      1- 1408     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1409     	XORAR	_R_AIN4_DATA,F
                                    1- 1410     	.line	683, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1411     	MOVIA	0xf0
                                    1- 1412     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1413     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1414     	.line	684, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1415     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1416     	BANKSEL	r0x104F
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1417     	MOVAR	r0x104F
                                    1- 1418     	BANKSEL	r0x104D
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1419     	MOVAR	r0x104D
                                    1- 1420     	BANKSEL	r0x104E
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1421     	CLRR	r0x104E
                                    1- 1422     ;;108	MOVR	r0x104D,W
     001A 2100                      1- 1423     	MOVIA	0x00
                                    1- 1424     	BANKSEL	r0x1050
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1425     	MOVAR	r0x1050
                                    1- 1426     	BANKSEL	r0x104F
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1427     	MOVR	r0x104F,W
                                    1- 1428     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1429     	ADDAR	_R_AIN4_DATA,F
                                    1- 1430     	BANKSEL	r0x1050
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1431     	MOVR	r0x1050,W
     0023 0C03                      1- 1432     	BTRSC	STATUS,0
     0024 05rr                      1- 1433     	INCR	r0x1050,W
     0025 0D03                      1- 1434     	BTRSC	STATUS,2
                                    1- 1435     	MGOTO	_00004_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1436     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1437     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1438     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1439     _00004_DS_:
                                    1- 1440     	.line	685, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1441     	BCR	STATUS,0
                                    1- 1442     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1443     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1444     	RRR	_R_AIN4_DATA,F
                                    1- 1445     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1446     	BCR	STATUS,0
     002E 13rr                      1- 1447     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1448     	RRR	_R_AIN4_DATA,F
                                    1- 1449     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1450     	BCR	STATUS,0
     0031 13rr                      1- 1451     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1452     	RRR	_R_AIN4_DATA,F
                                    1- 1453     	.line	686, "main.c"; 	if(debug)
                                    1- 1454     	BANKSEL	_debug
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1455     	MOVR	_debug,W
     0035 0D03                      1- 1456     	BTRSC	STATUS,2
                                    1- 1457     	MGOTO	_00643_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1458     	.line	687, "main.c"; 	R_AIN4_DATA = OUTA;
     0037 2164                      1- 1459     	MOVIA	0x64
                                    1- 1460     	BANKSEL	_R_AIN4_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1461     	MOVAR	_R_AIN4_DATA
     003A 02rr                      1- 1462     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1463     ;;unsigned compare: left < lit (0x6=6), size=1
     003B                           1- 1464     _00643_DS_:
                                    1- 1465     	.line	688, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     003B 2106                      1- 1466     	MOVIA	0x06
                                    1- 1467     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 04rr                      1- 1468     	SUBAR	_workStep,W
     003E 0C03                      1- 1469     	BTRSC	STATUS,0
                                    1- 1470     	MGOTO	_00672_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1471     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1472     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0040 2100                      1- 1473     	MOVIA	0x00
                                    1- 1474     	BANKSEL	_R_AIN4_DATA
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 04rr                      1- 1475     	SUBAR	(_R_AIN4_DATA + 1),W
     0043 0903                      1- 1476     	BTRSS	STATUS,2
                                    1- 1477     	MGOTO	_00723_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045 21C9                      1- 1478     	MOVIA	0xc9
     0046 04rr                      1- 1479     	SUBAR	_R_AIN4_DATA,W
     0047                           1- 1480     _00723_DS_:
     0047 0803                      1- 1481     	BTRSS	STATUS,0
                                    1- 1482     	MGOTO	_00672_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1483     	.line	690, "main.c"; 	if(++overCount > 5)
                                    1- 1484     	BANKSEL	_overCount
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1- 1485     	INCR	_overCount,F
                                    1- 1486     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1487     ;;unsigned compare: left >= lit (0x6=6), size=1
     004B 2106                      1- 1488     	MOVIA	0x06
     004C 04rr                      1- 1489     	SUBAR	_overCount,W
     004D 0803                      1- 1490     	BTRSS	STATUS,0
                                    1- 1491     	MGOTO	_00675_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1492     	.line	692, "main.c"; 	overCount = 5;
     004F 2105                      1- 1493     	MOVIA	0x05
     0050 00rr                      1- 1494     	MOVAR	_overCount
                                    1- 1495     	MGOTO	_00675_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1496     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1497     ;;unsigned compare: left >= lit (0x191=401), size=2
     0052                           1- 1498     _00672_DS_:
                                    1- 1499     	.line	695, "main.c"; 	else if(R_AIN4_DATA > 400)
     0052 2101                      1- 1500     	MOVIA	0x01
                                    1- 1501     	BANKSEL	_R_AIN4_DATA
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 04rr                      1- 1502     	SUBAR	(_R_AIN4_DATA + 1),W
     0055 0903                      1- 1503     	BTRSS	STATUS,2
                                    1- 1504     	MGOTO	_00725_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057 2191                      1- 1505     	MOVIA	0x91
     0058 04rr                      1- 1506     	SUBAR	_R_AIN4_DATA,W
     0059                           1- 1507     _00725_DS_:
     0059 0803                      1- 1508     	BTRSS	STATUS,0
                                    1- 1509     	MGOTO	_00669_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1510     	.line	697, "main.c"; 	if(++overCount > 5)
                                    1- 1511     	BANKSEL	_overCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 05rr                      1- 1512     	INCR	_overCount,F
                                    1- 1513     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1514     ;;unsigned compare: left >= lit (0x6=6), size=1
     005D 2106                      1- 1515     	MOVIA	0x06
     005E 04rr                      1- 1516     	SUBAR	_overCount,W
     005F 0803                      1- 1517     	BTRSS	STATUS,0
                                    1- 1518     	MGOTO	_00675_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1519     	.line	699, "main.c"; 	overCount = 5;
     0061 2105                      1- 1520     	MOVIA	0x05
     0062 00rr                      1- 1521     	MOVAR	_overCount
                                    1- 1522     	MGOTO	_00675_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1523     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1524     ;;unsigned compare: left >= lit (0x4E=78), size=2
     0064                           1- 1525     _00669_DS_:
                                    1- 1526     	.line	707, "main.c"; 	else if(R_AIN4_DATA > 77)
     0064 2100                      1- 1527     	MOVIA	0x00
                                    1- 1528     	BANKSEL	_R_AIN4_DATA
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 1529     	SUBAR	(_R_AIN4_DATA + 1),W
     0067 0903                      1- 1530     	BTRSS	STATUS,2
                                    1- 1531     	MGOTO	_00727_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069 214E                      1- 1532     	MOVIA	0x4e
     006A 04rr                      1- 1533     	SUBAR	_R_AIN4_DATA,W
     006B                           1- 1534     _00727_DS_:
     006B 0803                      1- 1535     	BTRSS	STATUS,0
                                    1- 1536     	MGOTO	_00666_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1537     	.line	709, "main.c"; 	if(overCount > 0)
                                    1- 1538     	BANKSEL	_overCount
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 1539     	MOVR	_overCount,W
     006F 0903                      1- 1540     	BTRSS	STATUS,2
                                    1- 1541     	.line	711, "main.c"; 	overCount--;
     0070 06rr                      1- 1542     	DECR	_overCount,F
                                    1- 1543     	.line	714, "main.c"; 	tempDuty = 70 + workStep*5;
     0071 2105                      1- 1544     	MOVIA	0x05
     0072 00rr                      1- 1545     	MOVAR	STK00
                                    1- 1546     	BANKSEL	_workStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 1547     	MOVR	_workStep,W
                                    1- 1548     	MCALL	__mulchar
     0075 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1549     	BANKSEL	r0x104D
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 1550     	MOVAR	r0x104D
     0078 2146                      1- 1551     	MOVIA	0x46
     0079 03rr                      1- 1552     	ADDAR	r0x104D,W
                                    1- 1553     	BANKSEL	_tempDuty
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1- 1554     	MOVAR	_tempDuty
                                    1- 1555     	.line	717, "main.c"; 	if(workStep == 1)
                                    1- 1556     	BANKSEL	_workStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 1557     	MOVR	_workStep,W
     007E 2401                      1- 1558     	XORIA	0x01
     007F 0903                      1- 1559     	BTRSS	STATUS,2
                                    1- 1560     	MGOTO	_00653_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1561     	.line	718, "main.c"; 	tempDuty = tempDuty + 2;
                                    1- 1562     	BANKSEL	_tempDuty
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 05rr                      1- 1563     	INCR	_tempDuty,F
     0083 05rr                      1- 1564     	INCR	_tempDuty,F
                                    1- 1565     	MGOTO	_00675_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085                           1- 1566     _00653_DS_:
                                    1- 1567     	.line	719, "main.c"; 	else if(workStep == 2)
                                    1- 1568     	BANKSEL	_workStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 01rr                      1- 1569     	MOVR	_workStep,W
     0087 2402                      1- 1570     	XORIA	0x02
     0088 0903                      1- 1571     	BTRSS	STATUS,2
                                    1- 1572     	MGOTO	_00675_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1573     	.line	720, "main.c"; 	tempDuty = tempDuty + 1;
                                    1- 1574     	BANKSEL	_tempDuty
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 05rr                      1- 1575     	INCR	_tempDuty,F
                                    1- 1576     	MGOTO	_00675_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D                           1- 1577     _00666_DS_:
                                    1- 1578     	.line	724, "main.c"; 	u8t maxAout = 40;
     008D 2128                      1- 1579     	MOVIA	0x28
                                    1- 1580     	BANKSEL	r0x104D
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1581     	MOVAR	r0x104D
                                    1- 1582     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1583     ;;unsigned compare: left >= lit (0x47=71), size=1
                                    1- 1584     	.line	725, "main.c"; 	if(batValue > 70)
     0090 2147                      1- 1585     	MOVIA	0x47
                                    1- 1586     	BANKSEL	_batValue
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 04rr                      1- 1587     	SUBAR	_batValue,W
     0093 0803                      1- 1588     	BTRSS	STATUS,0
                                    1- 1589     	MGOTO	_00656_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1590     	.line	727, "main.c"; 	maxAout = 60;
     0095 213C                      1- 1591     	MOVIA	0x3c
                                    1- 1592     	BANKSEL	r0x104D
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 1593     	MOVAR	r0x104D
     0098                           1- 1594     _00656_DS_:
                                    1- 1595     	.line	729, "main.c"; 	if(overCount > 0)
                                    1- 1596     	BANKSEL	_overCount
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1597     	MOVR	_overCount,W
     009A 0903                      1- 1598     	BTRSS	STATUS,2
                                    1- 1599     	.line	731, "main.c"; 	overCount--;
     009B 06rr                      1- 1600     	DECR	_overCount,F
                                    1- 1601     	.line	733, "main.c"; 	if(R_AIN4_DATA > maxAout && workStep < 4)
                                    1- 1602     	BANKSEL	r0x104D
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 01rr                      1- 1603     	MOVR	r0x104D,W
                                    1- 1604     	BANKSEL	r0x104E
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 1605     	MOVAR	r0x104E
                                    1- 1606     	BANKSEL	r0x104F
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 1607     	CLRR	r0x104F
                                    1- 1608     	BANKSEL	_R_AIN4_DATA
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 01rr                      1- 1609     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1610     	BANKSEL	r0x104F
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 04rr                      1- 1611     	SUBAR	r0x104F,W
     00A6 0903                      1- 1612     	BTRSS	STATUS,2
                                    1- 1613     	MGOTO	_00729_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1614     	BANKSEL	_R_AIN4_DATA
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 1615     	MOVR	_R_AIN4_DATA,W
                                    1- 1616     	BANKSEL	r0x104E
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 04rr                      1- 1617     	SUBAR	r0x104E,W
     00AC                           1- 1618     _00729_DS_:
     00AC 0C03                      1- 1619     	BTRSC	STATUS,0
                                    1- 1620     	MGOTO	_00662_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1621     ;;unsigned compare: left < lit (0x4=4), size=1
     00AE 2104                      1- 1622     	MOVIA	0x04
                                    1- 1623     	BANKSEL	_workStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 1624     	SUBAR	_workStep,W
     00B1 0C03                      1- 1625     	BTRSC	STATUS,0
                                    1- 1626     	MGOTO	_00662_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1627     	.line	735, "main.c"; 	tempDuty = 70 + workStep*5;
     00B3 2105                      1- 1628     	MOVIA	0x05
     00B4 00rr                      1- 1629     	MOVAR	STK00
     00B5 01rr                      1- 1630     	MOVR	_workStep,W
                                    1- 1631     	MCALL	__mulchar
     00B6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1632     	BANKSEL	r0x104D
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 1633     	MOVAR	r0x104D
     00B9 2146                      1- 1634     	MOVIA	0x46
     00BA 03rr                      1- 1635     	ADDAR	r0x104D,W
                                    1- 1636     	BANKSEL	_tempDuty
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 00rr                      1- 1637     	MOVAR	_tempDuty
                                    1- 1638     	MGOTO	_00675_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1639     ;;unsigned compare: left < lit (0x4B=75), size=2
     00BE                           1- 1640     _00662_DS_:
                                    1- 1641     	.line	738, "main.c"; 	else if(R_AIN4_DATA < 75)
     00BE 2100                      1- 1642     	MOVIA	0x00
                                    1- 1643     	BANKSEL	_R_AIN4_DATA
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 04rr                      1- 1644     	SUBAR	(_R_AIN4_DATA + 1),W
     00C1 0903                      1- 1645     	BTRSS	STATUS,2
                                    1- 1646     	MGOTO	_00731_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3 214B                      1- 1647     	MOVIA	0x4b
     00C4 04rr                      1- 1648     	SUBAR	_R_AIN4_DATA,W
     00C5                           1- 1649     _00731_DS_:
     00C5 0C03                      1- 1650     	BTRSC	STATUS,0
                                    1- 1651     	MGOTO	_00675_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1652     	.line	741, "main.c"; 	tempDuty = maxDuty;
                                    1- 1653     	BANKSEL	_maxDuty
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 01rr                      1- 1654     	MOVR	_maxDuty,W
                                    1- 1655     	BANKSEL	_tempDuty
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 1656     	MOVAR	_tempDuty
     00CB                           1- 1657     _00675_DS_:
                                    1- 1658     	.line	749, "main.c"; 	}
                                    1- 1659     	RETURN	
     00CB 0010                      3-   40 m1      ret
                                    1- 1660     ; exit point of _checkOutA
                                    1- 1662     ;***
                                    1- 1663     ;  pBlock Stats: dbName = C
                                    1- 1664     ;***
                                    1- 1665     ;has an exit
                                    1- 1666     ;functions called:
                                    1- 1667     ;   _F_AIN2_Convert
                                    1- 1668     ;   _pwm1Stop
                                    1- 1669     ;   __mulchar
                                    1- 1670     ;   _F_AIN2_Convert
                                    1- 1671     ;   _pwm1Stop
                                    1- 1672     ;   __mulchar
                                    1- 1673     ;6 compiler assigned registers:
                                    1- 1674     ;   r0x1051
                                    1- 1675     ;   r0x1052
                                    1- 1676     ;   r0x1053
                                    1- 1677     ;   r0x1054
                                    1- 1678     ;   r0x1055
                                    1- 1679     ;   STK00
                                    1- 1680     ;; Starting pCode block
                                    1- 1681     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1683     _checkBatAD:
                                    1- 1684     ; 2 exit points
                                    1- 1685     	.line	625, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1686     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1687     	CLRR	_R_AIN2_DATA_LB
                                    1- 1688     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1689     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1690     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1691     	.line	626, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1692     	MOVIA	0x08
                                    1- 1693     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1694     	.line	627, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1695     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1696     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1697     	ANDIA	0xf0
     000A 00rr                      1- 1698     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1699     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1700     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1701     	ANDIA	0x0f
     000E 11rr                      1- 1702     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1703     	XORAR	_R_AIN2_DATA,F
                                    1- 1704     	.line	628, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1705     	MOVIA	0xf0
                                    1- 1706     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1707     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1708     	.line	629, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1709     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1710     	BANKSEL	r0x1053
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1711     	MOVAR	r0x1053
                                    1- 1712     	BANKSEL	r0x1051
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1713     	MOVAR	r0x1051
                                    1- 1714     	BANKSEL	r0x1052
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1715     	CLRR	r0x1052
                                    1- 1716     ;;107	MOVR	r0x1051,W
     001A 2100                      1- 1717     	MOVIA	0x00
                                    1- 1718     	BANKSEL	r0x1054
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1719     	MOVAR	r0x1054
                                    1- 1720     	BANKSEL	r0x1053
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1721     	MOVR	r0x1053,W
                                    1- 1722     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1723     	ADDAR	_R_AIN2_DATA,F
                                    1- 1724     	BANKSEL	r0x1054
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1725     	MOVR	r0x1054,W
     0023 0C03                      1- 1726     	BTRSC	STATUS,0
     0024 05rr                      1- 1727     	INCR	r0x1054,W
     0025 0D03                      1- 1728     	BTRSC	STATUS,2
                                    1- 1729     	MGOTO	_00005_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1730     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1731     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1732     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1733     _00005_DS_:
                                    1- 1734     	.line	630, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1735     	BCR	STATUS,0
                                    1- 1736     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1737     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1738     	RRR	_R_AIN2_DATA,F
                                    1- 1739     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1740     	BCR	STATUS,0
     002E 13rr                      1- 1741     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1742     	RRR	_R_AIN2_DATA,F
                                    1- 1743     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1744     	BCR	STATUS,0
     0031 13rr                      1- 1745     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1746     	RRR	_R_AIN2_DATA,F
                                    1- 1747     	.line	631, "main.c"; 	if(debug)
                                    1- 1748     	BANKSEL	_debug
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1749     	MOVR	_debug,W
     0035 0D03                      1- 1750     	BTRSC	STATUS,2
                                    1- 1751     	MGOTO	_00569_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1752     	.line	632, "main.c"; 	R_AIN2_DATA = BATTLE;
     0037 210E                      1- 1753     	MOVIA	0x0e
                                    1- 1754     	BANKSEL	_R_AIN2_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1755     	MOVAR	_R_AIN2_DATA
     003A 2106                      1- 1756     	MOVIA	0x06
     003B 00rr                      1- 1757     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1758     ;;unsigned compare: left < lit (0x672=1650), size=2
     003C                           1- 1759     _00569_DS_:
                                    1- 1760     	.line	633, "main.c"; 	if(R_AIN2_DATA >= 1650)
     003C 2106                      1- 1761     	MOVIA	0x06
                                    1- 1762     	BANKSEL	_R_AIN2_DATA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1763     	SUBAR	(_R_AIN2_DATA + 1),W
     003F 0903                      1- 1764     	BTRSS	STATUS,2
                                    1- 1765     	MGOTO	_00634_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 2172                      1- 1766     	MOVIA	0x72
     0042 04rr                      1- 1767     	SUBAR	_R_AIN2_DATA,W
     0043                           1- 1768     _00634_DS_:
     0043 0803                      1- 1769     	BTRSS	STATUS,0
                                    1- 1770     	MGOTO	_00571_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1771     	.line	635, "main.c"; 	chrgStep = 4;
     0045 2104                      1- 1772     	MOVIA	0x04
                                    1- 1773     	BANKSEL	_chrgStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1774     	MOVAR	_chrgStep
                                    1- 1775     	.line	636, "main.c"; 	pwm1Stop();
                                    1- 1776     	MCALL	_pwm1Stop
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1777     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1778     ;;unsigned compare: left >= lit (0x49B=1179), size=2
     0049                           1- 1779     _00571_DS_:
                                    1- 1780     	.line	638, "main.c"; 	if(R_AIN2_DATA <= 1178)
     0049 2104                      1- 1781     	MOVIA	0x04
                                    1- 1782     	BANKSEL	_R_AIN2_DATA
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 04rr                      1- 1783     	SUBAR	(_R_AIN2_DATA + 1),W
     004C 0903                      1- 1784     	BTRSS	STATUS,2
                                    1- 1785     	MGOTO	_00635_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E 219B                      1- 1786     	MOVIA	0x9b
     004F 04rr                      1- 1787     	SUBAR	_R_AIN2_DATA,W
     0050                           1- 1788     _00635_DS_:
     0050 0C03                      1- 1789     	BTRSC	STATUS,0
                                    1- 1790     	MGOTO	_00573_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1791     	.line	640, "main.c"; 	pwStep = 0;
                                    1- 1792     	BANKSEL	_pwStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1- 1793     	CLRR	_pwStep
                                    1- 1794     	.line	641, "main.c"; 	R_AIN2_DATA = 1170;
     0054 2192                      1- 1795     	MOVIA	0x92
                                    1- 1796     	BANKSEL	_R_AIN2_DATA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 00rr                      1- 1797     	MOVAR	_R_AIN2_DATA
     0057 2104                      1- 1798     	MOVIA	0x04
     0058 00rr                      1- 1799     	MOVAR	(_R_AIN2_DATA + 1)
     0059                           1- 1800     _00573_DS_:
                                    1- 1801     	.line	644, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1170;
     0059 216E                      1- 1802     	MOVIA	0x6e
                                    1- 1803     	BANKSEL	_R_AIN2_DATA
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 03rr                      1- 1804     	ADDAR	_R_AIN2_DATA,F
     005C 21FB                      1- 1805     	MOVIA	0xfb
     005D 0C03                      1- 1806     	BTRSC	STATUS,0
     005E 21FC                      1- 1807     	MOVIA	0xfc
     005F 03rr                      1- 1808     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1809     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 1810     	.line	645, "main.c"; 	if(R_AIN2_DATA >= 340)
     0060 2101                      1- 1811     	MOVIA	0x01
     0061 04rr                      1- 1812     	SUBAR	(_R_AIN2_DATA + 1),W
     0062 0903                      1- 1813     	BTRSS	STATUS,2
                                    1- 1814     	MGOTO	_00636_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064 2154                      1- 1815     	MOVIA	0x54
     0065 04rr                      1- 1816     	SUBAR	_R_AIN2_DATA,W
     0066                           1- 1817     _00636_DS_:
     0066 0803                      1- 1818     	BTRSS	STATUS,0
                                    1- 1819     	MGOTO	_00580_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1820     	.line	647, "main.c"; 	batValue = 80+(R_AIN2_DATA-300)/4;
     0068 21D4                      1- 1821     	MOVIA	0xd4
                                    1- 1822     	BANKSEL	_R_AIN2_DATA
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 03rr                      1- 1823     	ADDAR	_R_AIN2_DATA,W
                                    1- 1824     	BANKSEL	r0x1051
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 1825     	MOVAR	r0x1051
     006D 21FE                      1- 1826     	MOVIA	0xfe
                                    1- 1827     	BANKSEL	r0x1052
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1828     	MOVAR	r0x1052
                                    1- 1829     	BANKSEL	_R_AIN2_DATA
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 1830     	MOVR	(_R_AIN2_DATA + 1),W
     0072 0C03                      1- 1831     	BTRSC	STATUS,0
     0073 05rr                      1- 1832     	INCR	(_R_AIN2_DATA + 1),W
     0074 0D03                      1- 1833     	BTRSC	STATUS,2
                                    1- 1834     	MGOTO	_00006_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1835     	BANKSEL	r0x1052
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 1836     	ADDAR	r0x1052,F
                                    1- 1837     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0078                           1- 1838     _00006_DS_:
     0078 1C03                      1- 1839     	BCR	STATUS,0
                                    1- 1840     	BANKSEL	r0x1052
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 13rr                      1- 1841     	RRR	r0x1052,W
                                    1- 1842     	BANKSEL	r0x1054
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1843     	MOVAR	r0x1054
                                    1- 1844     	BANKSEL	r0x1051
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 13rr                      1- 1845     	RRR	r0x1051,W
                                    1- 1846     	BANKSEL	r0x1053
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 00rr                      1- 1847     	MOVAR	r0x1053
                                    1- 1848     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0081 1C03                      1- 1849     	BCR	STATUS,0
                                    1- 1850     	BANKSEL	r0x1054
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 13rr                      1- 1851     	RRR	r0x1054,F
                                    1- 1852     	BANKSEL	r0x1053
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 13rr                      1- 1853     	RRR	r0x1053,F
     0086 01rr                      1- 1854     	MOVR	r0x1053,W
                                    1- 1855     	BANKSEL	r0x1051
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1856     	MOVAR	r0x1051
     0089 2150                      1- 1857     	MOVIA	0x50
     008A 03rr                      1- 1858     	ADDAR	r0x1051,W
                                    1- 1859     	BANKSEL	_batValue
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1860     	MOVAR	_batValue
                                    1- 1861     	MGOTO	_00581_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1862     ;;unsigned compare: left < lit (0xC8=200), size=2
     008E                           1- 1863     _00580_DS_:
                                    1- 1864     	.line	649, "main.c"; 	else if(R_AIN2_DATA >= 200)
     008E 2100                      1- 1865     	MOVIA	0x00
                                    1- 1866     	BANKSEL	_R_AIN2_DATA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 1867     	SUBAR	(_R_AIN2_DATA + 1),W
     0091 0903                      1- 1868     	BTRSS	STATUS,2
                                    1- 1869     	MGOTO	_00637_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 21C8                      1- 1870     	MOVIA	0xc8
     0094 04rr                      1- 1871     	SUBAR	_R_AIN2_DATA,W
     0095                           1- 1872     _00637_DS_:
     0095 0803                      1- 1873     	BTRSS	STATUS,0
                                    1- 1874     	MGOTO	_00577_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1875     	.line	651, "main.c"; 	batValue = 25 + (R_AIN2_DATA-200)/2;
     0097 2138                      1- 1876     	MOVIA	0x38
                                    1- 1877     	BANKSEL	_R_AIN2_DATA
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 03rr                      1- 1878     	ADDAR	_R_AIN2_DATA,W
                                    1- 1879     	BANKSEL	r0x1051
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 1880     	MOVAR	r0x1051
     009C 21FF                      1- 1881     	MOVIA	0xff
                                    1- 1882     	BANKSEL	r0x1053
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 1883     	MOVAR	r0x1053
                                    1- 1884     	BANKSEL	_R_AIN2_DATA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 1885     	MOVR	(_R_AIN2_DATA + 1),W
     00A1 0C03                      1- 1886     	BTRSC	STATUS,0
     00A2 05rr                      1- 1887     	INCR	(_R_AIN2_DATA + 1),W
     00A3 0D03                      1- 1888     	BTRSC	STATUS,2
                                    1- 1889     	MGOTO	_00007_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1890     	BANKSEL	r0x1053
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 03rr                      1- 1891     	ADDAR	r0x1053,F
                                    1- 1892     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00A7                           1- 1893     _00007_DS_:
     00A7 1C03                      1- 1894     	BCR	STATUS,0
                                    1- 1895     	BANKSEL	r0x1053
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 13rr                      1- 1896     	RRR	r0x1053,W
                                    1- 1897     ;;1	MOVAR	r0x1055
                                    1- 1898     	BANKSEL	r0x1051
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 13rr                      1- 1899     	RRR	r0x1051,W
                                    1- 1900     	BANKSEL	r0x1054
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 00rr                      1- 1901     	MOVAR	r0x1054
                                    1- 1902     	BANKSEL	r0x1051
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 1903     	MOVAR	r0x1051
     00B0 2119                      1- 1904     	MOVIA	0x19
     00B1 03rr                      1- 1905     	ADDAR	r0x1051,W
                                    1- 1906     	BANKSEL	_batValue
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1907     	MOVAR	_batValue
                                    1- 1908     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1909     ;;unsigned compare: left >= lit (0x60=96), size=1
                                    1- 1910     	.line	652, "main.c"; 	if(batValue > 95)
     00B4 2160                      1- 1911     	MOVIA	0x60
     00B5 04rr                      1- 1912     	SUBAR	_batValue,W
     00B6 0803                      1- 1913     	BTRSS	STATUS,0
                                    1- 1914     	MGOTO	_00581_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1915     	.line	653, "main.c"; 	batValue = 90;
     00B8 215A                      1- 1916     	MOVIA	0x5a
     00B9 00rr                      1- 1917     	MOVAR	_batValue
                                    1- 1918     	MGOTO	_00581_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1919     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00BB                           1- 1920     _00577_DS_:
                                    1- 1921     	.line	657, "main.c"; 	batValue = R_AIN2_DATA/8;
     00BB 1C03                      1- 1922     	BCR	STATUS,0
                                    1- 1923     	BANKSEL	_R_AIN2_DATA
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 13rr                      1- 1924     	RRR	(_R_AIN2_DATA + 1),W
                                    1- 1925     	BANKSEL	r0x1054
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 1926     	MOVAR	r0x1054
                                    1- 1927     	BANKSEL	_R_AIN2_DATA
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 13rr                      1- 1928     	RRR	_R_AIN2_DATA,W
                                    1- 1929     	BANKSEL	r0x1051
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 1930     	MOVAR	r0x1051
                                    1- 1931     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C4 1C03                      1- 1932     	BCR	STATUS,0
                                    1- 1933     	BANKSEL	r0x1054
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 13rr                      1- 1934     	RRR	r0x1054,F
                                    1- 1935     	BANKSEL	r0x1051
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 13rr                      1- 1936     	RRR	r0x1051,F
                                    1- 1937     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C9 1C03                      1- 1938     	BCR	STATUS,0
                                    1- 1939     	BANKSEL	r0x1054
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 13rr                      1- 1940     	RRR	r0x1054,F
                                    1- 1941     	BANKSEL	r0x1051
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 13rr                      1- 1942     	RRR	r0x1051,F
     00CE 01rr                      1- 1943     	MOVR	r0x1051,W
                                    1- 1944     	BANKSEL	_batValue
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 00rr                      1- 1945     	MOVAR	_batValue
     00D1                           1- 1946     _00581_DS_:
                                    1- 1947     	.line	659, "main.c"; 	if(0x08 & PORTA)
                                    1- 1948     	BANKSEL	_PORTA
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 09rr                      1- 1949     	BTRSS	_PORTA,3
                                    1- 1950     	MGOTO	_00594_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1951     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1952     ;;unsigned compare: left >= lit (0x1F=31), size=1
                                    1- 1953     	.line	662, "main.c"; 	if(batValue > 30)
     00D4 211F                      1- 1954     	MOVIA	0x1f
                                    1- 1955     	BANKSEL	_batValue
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 04rr                      1- 1956     	SUBAR	_batValue,W
     00D7 0803                      1- 1957     	BTRSS	STATUS,0
                                    1- 1958     	MGOTO	_00588_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1959     	.line	663, "main.c"; 	batValue = batValue - 20 +  shiweiNum*2;
     00D9 21EC                      1- 1960     	MOVIA	0xec
     00DA 03rr                      1- 1961     	ADDAR	_batValue,W
                                    1- 1962     	BANKSEL	r0x1051
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 1963     	MOVAR	r0x1051
     00DD 2102                      1- 1964     	MOVIA	0x02
     00DE 00rr                      1- 1965     	MOVAR	STK00
                                    1- 1966     	BANKSEL	_shiweiNum
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1967     	MOVR	_shiweiNum,W
                                    1- 1968     	MCALL	__mulchar
     00E1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1969     	BANKSEL	r0x1054
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 00rr                      1- 1970     	MOVAR	r0x1054
                                    1- 1971     	BANKSEL	r0x1051
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 03rr                      1- 1972     	ADDAR	r0x1051,W
                                    1- 1973     	BANKSEL	_batValue
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 00rr                      1- 1974     	MOVAR	_batValue
                                    1- 1975     	MGOTO	_00596_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1976     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1977     ;;unsigned compare: left >= lit (0xB=11), size=1
     00E9                           1- 1978     _00588_DS_:
                                    1- 1979     	.line	664, "main.c"; 	else if(batValue > 10)
     00E9 210B                      1- 1980     	MOVIA	0x0b
                                    1- 1981     	BANKSEL	_batValue
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 04rr                      1- 1982     	SUBAR	_batValue,W
     00EC 0803                      1- 1983     	BTRSS	STATUS,0
                                    1- 1984     	MGOTO	_00585_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1985     	.line	665, "main.c"; 	batValue = batValue - 10 +  shiweiNum;
     00EE 21F6                      1- 1986     	MOVIA	0xf6
     00EF 03rr                      1- 1987     	ADDAR	_batValue,W
                                    1- 1988     	BANKSEL	r0x1051
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 00rr                      1- 1989     	MOVAR	r0x1051
                                    1- 1990     	BANKSEL	_shiweiNum
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 01rr                      1- 1991     	MOVR	_shiweiNum,W
                                    1- 1992     	BANKSEL	r0x1051
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 03rr                      1- 1993     	ADDAR	r0x1051,W
                                    1- 1994     	BANKSEL	_batValue
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 00rr                      1- 1995     	MOVAR	_batValue
                                    1- 1996     	MGOTO	_00596_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
     00F9                           1- 1997     _00585_DS_:
                                    1- 1998     	.line	666, "main.c"; 	else if(batValue > 0)
                                    1- 1999     	BANKSEL	_batValue
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 01rr                      1- 2000     	MOVR	_batValue,W
     00FB 0D03                      1- 2001     	BTRSC	STATUS,2
                                    1- 2002     	MGOTO	_00596_DS_
     00FC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2003     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=0, offr=0
                                    1- 2004     	.line	667, "main.c"; 	batValue = batValue/2 + 1;
     00FD 1C03                      1- 2005     	BCR	STATUS,0
     00FE 13rr                      1- 2006     	RRR	_batValue,W
                                    1- 2007     	BANKSEL	r0x1051
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 00rr                      1- 2008     	MOVAR	r0x1051
     0101 05rr                      1- 2009     	INCR	r0x1051,W
                                    1- 2010     	BANKSEL	_batValue
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 00rr                      1- 2011     	MOVAR	_batValue
                                    1- 2012     	MGOTO	_00596_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2013     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2014     ;;unsigned compare: left >= lit (0x15=21), size=1
     0105                           1- 2015     _00594_DS_:
                                    1- 2016     	.line	669, "main.c"; 	else if(batValue > 20 && batValue < 98)
     0105 2115                      1- 2017     	MOVIA	0x15
                                    1- 2018     	BANKSEL	_batValue
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 04rr                      1- 2019     	SUBAR	_batValue,W
     0108 0803                      1- 2020     	BTRSS	STATUS,0
                                    1- 2021     	MGOTO	_00596_DS_
     0109 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2022     ;;unsigned compare: left < lit (0x62=98), size=1
     010A 2162                      1- 2023     	MOVIA	0x62
     010B 04rr                      1- 2024     	SUBAR	_batValue,W
     010C 0C03                      1- 2025     	BTRSC	STATUS,0
                                    1- 2026     	MGOTO	_00596_DS_
     010D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2027     	.line	671, "main.c"; 	batValue = batValue + 7;
     010E 2107                      1- 2028     	MOVIA	0x07
     010F 03rr                      1- 2029     	ADDAR	_batValue,F
     0110                           1- 2030     _00596_DS_:
                                    1- 2031     	.line	674, "main.c"; 	}
                                    1- 2032     	RETURN	
     0110 0010                      3-   40 m1      ret
                                    1- 2033     ; exit point of _checkBatAD
                                    1- 2035     ;***
                                    1- 2036     ;  pBlock Stats: dbName = C
                                    1- 2037     ;***
                                    1- 2038     ;has an exit
                                    1- 2039     ;functions called:
                                    1- 2040     ;   _delay
                                    1- 2041     ;   _delay
                                    1- 2042     ;1 compiler assigned register :
                                    1- 2043     ;   STK00
                                    1- 2044     ;; Starting pCode block
                                    1- 2045     .segment "code"; module=main, function=_initAD
     0000                           1- 2047     _initAD:
                                    1- 2048     ; 2 exit points
                                    1- 2049     	.line	601, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2050     	MOVIA	0x84
     0001 00rr                      1- 2051     	MOVAR	_ADMD
                                    1- 2052     	.line	606, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2053     	CLRR	_ADVREFH
                                    1- 2054     	.line	611, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2055     	MOVIA	0x10
     0004 00rr                      1- 2056     	MOVAR	_ADR
                                    1- 2057     	.line	613, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2058     	MOVIA	0x03
     0006 00rr                      1- 2059     	MOVAR	_ADCR
                                    1- 2060     	.line	615, "main.c"; 	PACON = C_PA2_AIN2 | C_PA1_AIN1 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2116                      1- 2061     	MOVIA	0x16
     0008 00rr                      1- 2062     	MOVAR	_PACON
                                    1- 2063     	.line	616, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 2064     	BSR	_ADMDbits,4
                                    1- 2065     	.line	617, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 2066     	MOVIA	0x64
     000B 00rr                      1- 2067     	MOVAR	STK00
     000C 2100                      1- 2068     	MOVIA	0x00
                                    1- 2069     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2070     	.line	620, "main.c"; 	}
                                    1- 2071     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2072     ; exit point of _initAD
                                    1- 2074     ;***
                                    1- 2075     ;  pBlock Stats: dbName = C
                                    1- 2076     ;***
                                    1- 2077     ;has an exit
                                    1- 2078     ;1 compiler assigned register :
                                    1- 2079     ;   r0x1056
                                    1- 2080     ;; Starting pCode block
                                    1- 2081     .segment "code"; module=main, function=_keyRead
                                    1- 2083     ;local variable name mapping:
     0000                           1- 2085     _keyRead:
                                    1- 2086     ; 2 exit points
                                    1- 2087     	.line	563, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2088     	BANKSEL	r0x1056
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2089     	MOVAR	r0x1056
                                    1- 2090     	.line	565, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2091     	MOVR	r0x1056,W
     0003 0D03                      1- 2092     	BTRSC	STATUS,2
                                    1- 2093     	MGOTO	_00557_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2094     	.line	567, "main.c"; 	keyCount++;
                                    1- 2095     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2096     	INCR	_keyCount,F
                                    1- 2097     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2098     	.line	569, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2099     	MOVIA	0xc8
     0008 04rr                      1- 2100     	SUBAR	_keyCount,W
     0009 0803                      1- 2101     	BTRSS	STATUS,0
                                    1- 2102     	MGOTO	_00558_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2103     	.line	571, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2104     	MOVIA	0xc8
     000C 00rr                      1- 2105     	MOVAR	_keyCount
                                    1- 2106     	.line	572, "main.c"; 	if(!longPressFlag)
                                    1- 2107     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2108     	BTRSC	_Status,1
                                    1- 2109     	MGOTO	_00558_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2110     	.line	574, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2111     	BSR	_Status,1
                                    1- 2112     	.line	575, "main.c"; 	return 2;
     0011 2102                      1- 2113     	MOVIA	0x02
                                    1- 2114     	MGOTO	_00559_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2115     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 2116     _00557_DS_:
                                    1- 2117     	.line	581, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 2118     	MOVIA	0xc8
                                    1- 2119     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2120     	SUBAR	_keyCount,W
     0016 0803                      1- 2121     	BTRSS	STATUS,0
                                    1- 2122     	MGOTO	_00554_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2123     	.line	583, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2124     	CLRR	_keyCount
                                    1- 2125     	.line	584, "main.c"; 	longPressFlag = 0;
                                    1- 2126     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2127     	BCR	_Status,1
                                    1- 2128     	.line	585, "main.c"; 	return	0;
     001B 2100                      1- 2129     	MOVIA	0x00
                                    1- 2130     	MGOTO	_00559_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2131     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2132     _00554_DS_:
                                    1- 2133     	.line	587, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2134     	MOVIA	0x04
                                    1- 2135     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2136     	SUBAR	_keyCount,W
     0020 0803                      1- 2137     	BTRSS	STATUS,0
                                    1- 2138     	MGOTO	_00555_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2139     	.line	589, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2140     	CLRR	_keyCount
                                    1- 2141     	.line	590, "main.c"; 	return	1;
     0023 2101                      1- 2142     	MOVIA	0x01
                                    1- 2143     	MGOTO	_00559_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2144     _00555_DS_:
                                    1- 2145     	.line	592, "main.c"; 	keyCount = 0;
                                    1- 2146     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2147     	CLRR	_keyCount
     0027                           1- 2148     _00558_DS_:
                                    1- 2149     	.line	594, "main.c"; 	return 0;
     0027 2100                      1- 2150     	MOVIA	0x00
     0028                           1- 2151     _00559_DS_:
                                    1- 2152     	.line	595, "main.c"; 	}
                                    1- 2153     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2154     ; exit point of _keyRead
                                    1- 2156     ;***
                                    1- 2157     ;  pBlock Stats: dbName = C
                                    1- 2158     ;***
                                    1- 2159     ;has an exit
                                    1- 2160     ;functions called:
                                    1- 2161     ;   _checkBatAD
                                    1- 2162     ;   _setInput
                                    1- 2163     ;   _pwmStop
                                    1- 2164     ;   _pwm1Stop
                                    1- 2165     ;   _checkBatAD
                                    1- 2166     ;   _setInput
                                    1- 2167     ;   _pwmStop
                                    1- 2168     ;   _pwm1Stop
                                    1- 2169     ;; Starting pCode block
                                    1- 2170     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2172     _gotoSleep:
                                    1- 2173     ; 2 exit points
                                    1- 2174     	.line	531, "main.c"; 	checkBatAD();
                                    1- 2175     	MCALL	_checkBatAD
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2176     	.line	532, "main.c"; 	setInput();
                                    1- 2177     	MCALL	_setInput
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2178     	.line	533, "main.c"; 	count5s = 0;
                                    1- 2179     	BANKSEL	_count5s
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2180     	CLRR	_count5s
     0004 02rr                      1- 2181     	CLRR	(_count5s + 1)
                                    1- 2182     	.line	534, "main.c"; 	showFlag = 0;
                                    1- 2183     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Err                      1- 2184     	BCR	_Status,4
                                    1- 2185     	.line	535, "main.c"; 	IOSTA = C_PA5_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0007 212E                      1- 2186     	MOVIA	0x2e
     0008 000r                      1- 2187     	IOST	_IOSTA
                                    1- 2188     	.line	537, "main.c"; 	IOSTB = 0x00;
     0009 0200                      1- 2189     	CLRA	
     000A 000r                      1- 2190     	IOST	_IOSTB
                                    1- 2191     	.line	538, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2192     	CLRR	_PORTB
                                    1- 2193     	.line	539, "main.c"; 	PORTA = 0x00;
                                    1- 2194     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2195     	CLRR	_PORTA
                                    1- 2196     	.line	540, "main.c"; 	sleepTime = 0;
                                    1- 2197     	BANKSEL	_sleepTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2198     	CLRR	_sleepTime
     0010 02rr                      1- 2199     	CLRR	(_sleepTime + 1)
                                    1- 2200     	.line	542, "main.c"; 	pwmStop();
                                    1- 2201     	MCALL	_pwmStop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2202     	.line	543, "main.c"; 	pwm1Stop();
                                    1- 2203     	MCALL	_pwm1Stop
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2204     	.line	544, "main.c"; 	workStep = 0;
                                    1- 2205     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2206     	CLRR	_workStep
                                    1- 2207     	.line	545, "main.c"; 	AWUCON = 0x28;
     0015 2128                      1- 2208     	MOVIA	0x28
     0016 00rr                      1- 2209     	MOVAR	_AWUCON
                                    1- 2210     	.line	546, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0017 210B                      1- 2211     	MOVIA	0x0b
     0018 00rr                      1- 2212     	MOVAR	_INTE
                                    1- 2213     	.line	547, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0019 2118                      1- 2214     	MOVIA	0x18
     001A 00rr                      1- 2215     	MOVAR	_PCON
                                    1- 2216     	.line	548, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001B 02rr                      1- 2217     	CLRR	_INTF
                                    1- 2218     	.line	549, "main.c"; 	CLRWDT();
     001C 0002                      1- 2219     	clrwdt
                                    1- 2220     	.line	550, "main.c"; 	ENI();
     001D 0004                      1- 2221     	ENI
                                    1- 2222     	.line	551, "main.c"; 	SLEEP();
     001E 0001                      1- 2223     	sleep
                                    1- 2224     	.line	552, "main.c"; 	AWUCON = 0x00;
     001F 02rr                      1- 2225     	CLRR	_AWUCON
                                    1- 2226     	.line	554, "main.c"; 	IOSTA =  C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0020 213E                      1- 2227     	MOVIA	0x3e
     0021 000r                      1- 2228     	IOST	_IOSTA
                                    1- 2229     	.line	555, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2230     	MOVIA	0x01
     0023 00rr                      1- 2231     	MOVAR	_INTE
                                    1- 2232     	.line	556, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2233     	CLRR	_INTF
                                    1- 2234     	.line	558, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0025 21A8                      1- 2235     	MOVIA	0xa8
     0026 00rr                      1- 2236     	MOVAR	_PCON
                                    1- 2237     	.line	560, "main.c"; 	}
                                    1- 2238     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2239     ; exit point of _gotoSleep
                                    1- 2241     ;***
                                    1- 2242     ;  pBlock Stats: dbName = C
                                    1- 2243     ;***
                                    1- 2244     ;has an exit
                                    1- 2245     ;; Starting pCode block
                                    1- 2246     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2248     _pwmStop:
                                    1- 2249     ; 2 exit points
                                    1- 2250     	.line	525, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2251     	CLRA	
     0001 00rr                      1- 2252     	SFUN	_T2CR1
                                    1- 2253     	.line	526, "main.c"; 	}
                                    1- 2254     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2255     ; exit point of _pwmStop
                                    1- 2257     ;***
                                    1- 2258     ;  pBlock Stats: dbName = C
                                    1- 2259     ;***
                                    1- 2260     ;has an exit
                                    1- 2261     ;1 compiler assigned register :
                                    1- 2262     ;   r0x1057
                                    1- 2263     ;; Starting pCode block
                                    1- 2264     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2266     _pwmInit:
                                    1- 2267     ; 2 exit points
                                    1- 2268     	.line	513, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2269     	SFUNR	_T2CR1
                                    1- 2270     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2271     	MOVAR	r0x1057
     0003 0Frr                      1- 2272     	BTRSC	r0x1057,7
                                    1- 2273     	.line	514, "main.c"; 	return;
                                    1- 2274     	MGOTO	_00534_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2275     	.line	515, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2276     	CLRR	_TMRH
                                    1- 2277     	.line	516, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2278     	MOVIA	0x64
     0007 00rr                      1- 2279     	SFUN	_TMR2
                                    1- 2280     	.line	519, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2281     	MOVIA	0x01
     0009 00rr                      1- 2282     	SFUN	_T2CR2
                                    1- 2283     	.line	520, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2284     	MOVIA	0x83
     000B 00rr                      1- 2285     	SFUN	_T2CR1
     000C                           1- 2286     _00534_DS_:
                                    1- 2287     	.line	521, "main.c"; 	}
                                    1- 2288     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2289     ; exit point of _pwmInit
                                    1- 2291     ;***
                                    1- 2292     ;  pBlock Stats: dbName = C
                                    1- 2293     ;***
                                    1- 2294     ;has an exit
                                    1- 2295     ;; Starting pCode block
                                    1- 2296     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2298     _pwm1Stop:
                                    1- 2299     ; 2 exit points
                                    1- 2300     	.line	506, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2301     	CLRA	
     0001 00rr                      1- 2302     	SFUN	_T1CR1
                                    1- 2303     	.line	507, "main.c"; 	}
                                    1- 2304     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2305     ; exit point of _pwm1Stop
                                    1- 2307     ;***
                                    1- 2308     ;  pBlock Stats: dbName = C
                                    1- 2309     ;***
                                    1- 2310     ;has an exit
                                    1- 2311     ;1 compiler assigned register :
                                    1- 2312     ;   r0x1058
                                    1- 2313     ;; Starting pCode block
                                    1- 2314     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2316     _pwm1Init:
                                    1- 2317     ; 2 exit points
                                    1- 2318     	.line	494, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2319     	SFUNR	_T1CR1
                                    1- 2320     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2321     	MOVAR	r0x1058
     0003 0Frr                      1- 2322     	BTRSC	r0x1058,7
                                    1- 2323     	.line	495, "main.c"; 	return;
                                    1- 2324     	MGOTO	_00523_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2325     	.line	496, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2326     	CLRR	_TMRH
                                    1- 2327     	.line	497, "main.c"; 	TMR1 = 24;							//频率为110K
     0006 2118                      1- 2328     	MOVIA	0x18
     0007 00rr                      1- 2329     	SFUN	_TMR1
                                    1- 2330     	.line	500, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2331     	CLRA	
     0009 00rr                      1- 2332     	SFUN	_T1CR2
                                    1- 2333     	.line	501, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2334     	MOVIA	0x83
     000B 00rr                      1- 2335     	SFUN	_T1CR1
     000C                           1- 2336     _00523_DS_:
                                    1- 2337     	.line	502, "main.c"; 	}
                                    1- 2338     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2339     ; exit point of _pwm1Init
                                    1- 2341     ;***
                                    1- 2342     ;  pBlock Stats: dbName = C
                                    1- 2343     ;***
                                    1- 2344     ;has an exit
                                    1- 2345     ;functions called:
                                    1- 2346     ;   _pwmStop
                                    1- 2347     ;   _pwmStop
                                    1- 2348     ;; Starting pCode block
                                    1- 2349     .segment "code"; module=main, function=_powerOff
     0000                           1- 2351     _powerOff:
                                    1- 2352     ; 2 exit points
                                    1- 2353     	.line	487, "main.c"; 	workStep = 0;
                                    1- 2354     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2355     	CLRR	_workStep
                                    1- 2356     	.line	488, "main.c"; 	pwmStop();
                                    1- 2357     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2358     	.line	489, "main.c"; 	}
                                    1- 2359     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2360     ; exit point of _powerOff
                                    1- 2362     ;***
                                    1- 2363     ;  pBlock Stats: dbName = C
                                    1- 2364     ;***
                                    1- 2365     ;has an exit
                                    1- 2366     ;; Starting pCode block
                                    1- 2367     .segment "code"; module=main, function=_initSys
     0000                           1- 2369     _initSys:
                                    1- 2370     ; 2 exit points
                                    1- 2371     	.line	459, "main.c"; 	DISI();
     0000 0013                      1- 2372     	DISI
                                    1- 2373     	.line	460, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2374     	MOVIA	0x3e
     0002 000r                      1- 2375     	IOST	_IOSTA
                                    1- 2376     	.line	461, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2377     	CLRA	
     0004 000r                      1- 2378     	IOST	_IOSTB
                                    1- 2379     	.line	462, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2380     	CLRR	_PORTB
                                    1- 2381     	.line	463, "main.c"; 	PORTA = 0x00;
                                    1- 2382     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2383     	CLRR	_PORTA
                                    1- 2384     	.line	464, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2385     	MOVIA	0xff
     0009 000r                      1- 2386     	IOST	_APHCON
                                    1- 2387     	.line	465, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2388     	MOVAR	_BPHCON
                                    1- 2389     	.line	466, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2390     	MOVAR	_ABPLCON
                                    1- 2391     	.line	468, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2392     	MOVIA	0x01
     000D 00rr                      1- 2393     	MOVAR	_INTE
                                    1- 2394     	.line	470, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2395     	CLRA	
     000F 000r                      1- 2396     	IOST	_PCON1
                                    1- 2397     	.line	472, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2398     	MOVIA	0x37
     0011 00rr                      1- 2399     	MOVAR	_TMR0
                                    1- 2400     	.line	473, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2401     	MOVIA	0x01
     0013 0003                      1- 2402     	T0MD	
                                    1- 2403     	.line	475, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2404     	IOST	_PCON1
                                    1- 2405     	.line	478, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2406     	MOVIA	0x88
     0016 00rr                      1- 2407     	MOVAR	_PCON
                                    1- 2408     	.line	481, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2409     	MOVIA	0x01
     0018 000r                      1- 2410     	IOST	_PCON1
                                    1- 2411     	.line	482, "main.c"; 	ENI();
     0019 0004                      1- 2412     	ENI
                                    1- 2413     	.line	483, "main.c"; 	}
                                    1- 2414     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2415     ; exit point of _initSys
                                    1- 2417     ;***
                                    1- 2418     ;  pBlock Stats: dbName = C
                                    1- 2419     ;***
                                    1- 2420     ;has an exit
                                    1- 2421     ;functions called:
                                    1- 2422     ;   _keyRead
                                    1- 2423     ;   _setMaxDuty
                                    1- 2424     ;   _powerOff
                                    1- 2425     ;   _setMaxDuty
                                    1- 2426     ;   _keyRead
                                    1- 2427     ;   _setMaxDuty
                                    1- 2428     ;   _powerOff
                                    1- 2429     ;   _setMaxDuty
                                    1- 2430     ;1 compiler assigned register :
                                    1- 2431     ;   r0x105B
                                    1- 2432     ;; Starting pCode block
                                    1- 2433     .segment "code"; module=main, function=_keyCtr
                                    1- 2435     ;local variable name mapping:
     0000                           1- 2437     _keyCtr:
                                    1- 2438     ; 2 exit points
                                    1- 2439     	.line	392, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2440     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2441     	COMR	_PORTA,W
                                    1- 2442     	BANKSEL	r0x105B
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2443     	MOVAR	r0x105B
     0004 2120                      1- 2444     	MOVIA	0x20
     0005 10rr                      1- 2445     	ANDAR	r0x105B,F
     0006 01rr                      1- 2446     	MOVR	r0x105B,W
                                    1- 2447     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2448     	BANKSEL	r0x105B
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2449     	MOVAR	r0x105B
                                    1- 2450     	.line	393, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2451     	XORIA	0x01
     000B 0903                      1- 2452     	BTRSS	STATUS,2
                                    1- 2453     	MGOTO	_00506_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2454     	.line	395, "main.c"; 	count500ms = 0;
                                    1- 2455     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2456     	CLRR	_count500ms
                                    1- 2457     	.line	396, "main.c"; 	ledLightTime = 0;
                                    1- 2458     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2459     	CLRR	_ledLightTime
                                    1- 2460     	.line	397, "main.c"; 	count5S = 0;
                                    1- 2461     	BANKSEL	_count5S
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2462     	CLRR	_count5S
     0013 02rr                      1- 2463     	CLRR	(_count5S + 1)
                                    1- 2464     	.line	398, "main.c"; 	if(workStep == 0)
                                    1- 2465     	BANKSEL	_workStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2466     	MOVR	_workStep,W
     0016 0903                      1- 2467     	BTRSS	STATUS,2
                                    1- 2468     	MGOTO	_00477_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2469     	.line	400, "main.c"; 	count1s = 0;
                                    1- 2470     	BANKSEL	_count1s
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2471     	CLRR	_count1s
                                    1- 2472     	.line	401, "main.c"; 	ledLightTime = 3;
     001A 2103                      1- 2473     	MOVIA	0x03
                                    1- 2474     	BANKSEL	_ledLightTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2475     	MOVAR	_ledLightTime
                                    1- 2476     	.line	408, "main.c"; 	showFlag = 1;
                                    1- 2477     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2478     	BSR	_Status,4
                                    1- 2479     	.line	409, "main.c"; 	return;
                                    1- 2480     	MGOTO	_00508_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 2481     _00477_DS_:
                                    1- 2482     	.line	411, "main.c"; 	if(++workStep > 6)
                                    1- 2483     	BANKSEL	_workStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 2484     	INCR	_workStep,F
                                    1- 2485     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2486     ;;unsigned compare: left >= lit (0x7=7), size=1
     0022 2107                      1- 2487     	MOVIA	0x07
     0023 04rr                      1- 2488     	SUBAR	_workStep,W
     0024 0803                      1- 2489     	BTRSS	STATUS,0
                                    1- 2490     	MGOTO	_00479_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2491     	.line	412, "main.c"; 	workStep = 1;
     0026 2101                      1- 2492     	MOVIA	0x01
     0027 00rr                      1- 2493     	MOVAR	_workStep
     0028                           1- 2494     _00479_DS_:
                                    1- 2495     	.line	413, "main.c"; 	if(workStep == 1)
                                    1- 2496     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2497     	MOVR	_workStep,W
     002A 2401                      1- 2498     	XORIA	0x01
     002B 0903                      1- 2499     	BTRSS	STATUS,2
                                    1- 2500     	MGOTO	_00495_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2501     	.line	414, "main.c"; 	maxDuty = 40;
     002D 2128                      1- 2502     	MOVIA	0x28
                                    1- 2503     	BANKSEL	_maxDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2504     	MOVAR	_maxDuty
                                    1- 2505     	MGOTO	_00496_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 2506     _00495_DS_:
                                    1- 2507     	.line	415, "main.c"; 	else if(workStep == 2)
                                    1- 2508     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2509     	MOVR	_workStep,W
     0033 2402                      1- 2510     	XORIA	0x02
     0034 0903                      1- 2511     	BTRSS	STATUS,2
                                    1- 2512     	MGOTO	_00492_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2513     	.line	416, "main.c"; 	maxDuty = 42;
     0036 212A                      1- 2514     	MOVIA	0x2a
                                    1- 2515     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2516     	MOVAR	_maxDuty
                                    1- 2517     	MGOTO	_00496_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2518     _00492_DS_:
                                    1- 2519     	.line	417, "main.c"; 	else if(workStep == 3)
                                    1- 2520     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2521     	MOVR	_workStep,W
     003C 2403                      1- 2522     	XORIA	0x03
     003D 0903                      1- 2523     	BTRSS	STATUS,2
                                    1- 2524     	MGOTO	_00489_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2525     	.line	418, "main.c"; 	maxDuty = 44;
     003F 212C                      1- 2526     	MOVIA	0x2c
                                    1- 2527     	BANKSEL	_maxDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2528     	MOVAR	_maxDuty
                                    1- 2529     	MGOTO	_00496_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 2530     _00489_DS_:
                                    1- 2531     	.line	419, "main.c"; 	else if(workStep == 4)
                                    1- 2532     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2533     	MOVR	_workStep,W
     0045 2404                      1- 2534     	XORIA	0x04
     0046 0903                      1- 2535     	BTRSS	STATUS,2
                                    1- 2536     	MGOTO	_00486_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2537     	.line	420, "main.c"; 	maxDuty = 46;
     0048 212E                      1- 2538     	MOVIA	0x2e
                                    1- 2539     	BANKSEL	_maxDuty
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2540     	MOVAR	_maxDuty
                                    1- 2541     	MGOTO	_00496_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 2542     _00486_DS_:
                                    1- 2543     	.line	421, "main.c"; 	else if(workStep == 5)
                                    1- 2544     	BANKSEL	_workStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 2545     	MOVR	_workStep,W
     004E 2405                      1- 2546     	XORIA	0x05
     004F 0903                      1- 2547     	BTRSS	STATUS,2
                                    1- 2548     	MGOTO	_00483_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2549     	.line	422, "main.c"; 	maxDuty = 48;
     0051 2130                      1- 2550     	MOVIA	0x30
                                    1- 2551     	BANKSEL	_maxDuty
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 2552     	MOVAR	_maxDuty
                                    1- 2553     	MGOTO	_00496_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 2554     _00483_DS_:
                                    1- 2555     	.line	423, "main.c"; 	else if(workStep == 6)
                                    1- 2556     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 2557     	MOVR	_workStep,W
     0057 2406                      1- 2558     	XORIA	0x06
     0058 0903                      1- 2559     	BTRSS	STATUS,2
                                    1- 2560     	MGOTO	_00496_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2561     	.line	424, "main.c"; 	maxDuty = 50;
     005A 2132                      1- 2562     	MOVIA	0x32
                                    1- 2563     	BANKSEL	_maxDuty
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 2564     	MOVAR	_maxDuty
     005D                           1- 2565     _00496_DS_:
                                    1- 2566     	.line	425, "main.c"; 	setMaxDuty();
                                    1- 2567     	MCALL	_setMaxDuty
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2568     	MGOTO	_00508_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 2569     _00506_DS_:
                                    1- 2570     	.line	427, "main.c"; 	else if(kclick == 2)
                                    1- 2571     	BANKSEL	r0x105B
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 2572     	MOVR	r0x105B,W
     0061 2402                      1- 2573     	XORIA	0x02
     0062 0903                      1- 2574     	BTRSS	STATUS,2
                                    1- 2575     	MGOTO	_00508_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2576     	.line	429, "main.c"; 	if(workStep > 0)
                                    1- 2577     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 2578     	MOVR	_workStep,W
     0066 0D03                      1- 2579     	BTRSC	STATUS,2
                                    1- 2580     	MGOTO	_00501_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2581     	.line	431, "main.c"; 	workStep = 0;
     0068 02rr                      1- 2582     	CLRR	_workStep
                                    1- 2583     	.line	432, "main.c"; 	powerOff();
                                    1- 2584     	MCALL	_powerOff
     0069 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2585     	.line	433, "main.c"; 	showFlag = 0;
                                    1- 2586     	BANKSEL	_Status
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 1Err                      1- 2587     	BCR	_Status,4
                                    1- 2588     	MGOTO	_00508_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D                           1- 2589     _00501_DS_:
                                    1- 2590     	.line	437, "main.c"; 	if(batValue == 0 || preBatValue == 0)
                                    1- 2591     	BANKSEL	_batValue
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2592     	MOVR	_batValue,W
     006F 0D03                      1- 2593     	BTRSC	STATUS,2
                                    1- 2594     	MGOTO	_00497_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2595     	BANKSEL	_preBatValue
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 01rr                      1- 2596     	MOVR	_preBatValue,W
     0073 0903                      1- 2597     	BTRSS	STATUS,2
                                    1- 2598     	MGOTO	_00498_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 2599     _00497_DS_:
                                    1- 2600     	.line	439, "main.c"; 	ledLightTime = 3;
     0075 2103                      1- 2601     	MOVIA	0x03
                                    1- 2602     	BANKSEL	_ledLightTime
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 2603     	MOVAR	_ledLightTime
                                    1- 2604     	.line	440, "main.c"; 	preBatValue = 0;
                                    1- 2605     	BANKSEL	_preBatValue
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 02rr                      1- 2606     	CLRR	_preBatValue
                                    1- 2607     	.line	441, "main.c"; 	showFlag = 1;
                                    1- 2608     	BANKSEL	_Status
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 1Arr                      1- 2609     	BSR	_Status,4
                                    1- 2610     	.line	442, "main.c"; 	return;
                                    1- 2611     	MGOTO	_00508_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 2612     _00498_DS_:
                                    1- 2613     	.line	444, "main.c"; 	workStep = 1;
     007D 2101                      1- 2614     	MOVIA	0x01
                                    1- 2615     	BANKSEL	_workStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 2616     	MOVAR	_workStep
                                    1- 2617     	.line	445, "main.c"; 	PWM2DUTY = 60;
     0080 213C                      1- 2618     	MOVIA	0x3c
     0081 00rr                      1- 2619     	SFUN	_PWM2DUTY
                                    1- 2620     	.line	446, "main.c"; 	currentDuty = 60;
                                    1- 2621     	BANKSEL	_currentDuty
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 2622     	MOVAR	_currentDuty
                                    1- 2623     	.line	447, "main.c"; 	maxDuty = 40;
     0084 2128                      1- 2624     	MOVIA	0x28
                                    1- 2625     	BANKSEL	_maxDuty
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 2626     	MOVAR	_maxDuty
                                    1- 2627     	.line	448, "main.c"; 	setMaxDuty();
                                    1- 2628     	MCALL	_setMaxDuty
     0087 2rrr                      3-   66 m1      LCALL rom_address
     0088                           1- 2629     _00508_DS_:
                                    1- 2630     	.line	452, "main.c"; 	}
                                    1- 2631     	RETURN	
     0088 0010                      3-   40 m1      ret
                                    1- 2632     ; exit point of _keyCtr
                                    1- 2634     ;***
                                    1- 2635     ;  pBlock Stats: dbName = C
                                    1- 2636     ;***
                                    1- 2637     ;has an exit
                                    1- 2638     ;functions called:
                                    1- 2639     ;   __divuchar
                                    1- 2640     ;   _pwmInit
                                    1- 2641     ;   __divuchar
                                    1- 2642     ;   _pwmInit
                                    1- 2643     ;3 compiler assigned registers:
                                    1- 2644     ;   r0x1059
                                    1- 2645     ;   STK00
                                    1- 2646     ;   r0x105A
                                    1- 2647     ;; Starting pCode block
                                    1- 2648     .segment "code"; module=main, function=_setMaxDuty
     0000                           1- 2650     _setMaxDuty:
                                    1- 2651     ; 2 exit points
                                    1- 2652     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2653     	.line	383, "main.c"; 	if(batValue < 50)
     0000 2132                      1- 2654     	MOVIA	0x32
                                    1- 2655     	BANKSEL	_batValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2656     	SUBAR	_batValue,W
     0003 0C03                      1- 2657     	BTRSC	STATUS,0
                                    1- 2658     	MGOTO	_00471_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2659     	.line	384, "main.c"; 	maxDuty = maxDuty + 10 - (batValue/10);
     0005 210A                      1- 2660     	MOVIA	0x0a
                                    1- 2661     	BANKSEL	_maxDuty
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 03rr                      1- 2662     	ADDAR	_maxDuty,W
                                    1- 2663     	BANKSEL	r0x1059
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2664     	MOVAR	r0x1059
     000A 210A                      1- 2665     	MOVIA	0x0a
     000B 00rr                      1- 2666     	MOVAR	STK00
                                    1- 2667     	BANKSEL	_batValue
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2668     	MOVR	_batValue,W
                                    1- 2669     	MCALL	__divuchar
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2670     ;;1	MOVAR	r0x105A
                                    1- 2671     	BANKSEL	r0x1059
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 2672     	SUBAR	r0x1059,W
                                    1- 2673     	BANKSEL	_maxDuty
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2674     	MOVAR	_maxDuty
     0013                           1- 2675     _00471_DS_:
                                    1- 2676     	.line	385, "main.c"; 	tempDuty = maxDuty;
                                    1- 2677     	BANKSEL	_maxDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2678     	MOVR	_maxDuty,W
                                    1- 2679     	BANKSEL	_tempDuty
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 2680     	MOVAR	_tempDuty
                                    1- 2681     	.line	386, "main.c"; 	pwmInit();
                                    1- 2682     	MCALL	_pwmInit
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2683     	.line	387, "main.c"; 	}
                                    1- 2684     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1- 2685     ; exit point of _setMaxDuty
                                    1- 2687     ;***
                                    1- 2688     ;  pBlock Stats: dbName = C
                                    1- 2689     ;***
                                    1- 2690     ;has an exit
                                    1- 2691     ;functions called:
                                    1- 2692     ;   _setInput
                                    1- 2693     ;   _showKeyLed
                                    1- 2694     ;   __gptrget1
                                    1- 2695     ;   _showNubShiwei
                                    1- 2696     ;   __gptrget1
                                    1- 2697     ;   _showNubGewei
                                    1- 2698     ;   _setInput
                                    1- 2699     ;   _showKeyLed
                                    1- 2700     ;   __gptrget1
                                    1- 2701     ;   _showNubShiwei
                                    1- 2702     ;   __gptrget1
                                    1- 2703     ;   _showNubGewei
                                    1- 2704     ;5 compiler assigned registers:
                                    1- 2705     ;   r0x105C
                                    1- 2706     ;   r0x105D
                                    1- 2707     ;   STK01
                                    1- 2708     ;   STK00
                                    1- 2709     ;   r0x105E
                                    1- 2710     ;; Starting pCode block
                                    1- 2711     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2713     _refreshNub:
                                    1- 2714     ; 2 exit points
                                    1- 2715     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2716     	.line	357, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2717     	MOVIA	0x03
                                    1- 2718     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2719     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2720     	BTRSS	STATUS,2
                                    1- 2721     	MGOTO	_00465_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2722     	MOVIA	0x84
     0006 04rr                      1- 2723     	SUBAR	_count900s,W
     0007                           1- 2724     _00465_DS_:
     0007 0803                      1- 2725     	BTRSS	STATUS,0
                                    1- 2726     	MGOTO	_00443_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2727     	.line	359, "main.c"; 	setInput();
                                    1- 2728     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2729     	.line	360, "main.c"; 	return;
                                    1- 2730     	MGOTO	_00451_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2731     _00443_DS_:
                                    1- 2732     	.line	362, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2733     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2734     	MOVR	_shiweiNum,W
                                    1- 2735     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2736     	MOVAR	_tempshiweiNum
                                    1- 2737     	.line	363, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2738     	BANKSEL	_geweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2739     	MOVR	_geweiNum,W
                                    1- 2740     	BANKSEL	_tempgeweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2741     	MOVAR	_tempgeweiNum
                                    1- 2742     	.line	364, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2743     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2744     	MOVR	_workStep,W
     0015 0903                      1- 2745     	BTRSS	STATUS,2
                                    1- 2746     	MGOTO	_00444_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2747     	BANKSEL	_ledLightTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2748     	MOVR	_ledLightTime,W
     0019 0903                      1- 2749     	BTRSS	STATUS,2
     001A                           1- 2750     _00444_DS_:
                                    1- 2751     	.line	366, "main.c"; 	showKeyLed();
                                    1- 2752     	MCALL	_showKeyLed
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2753     	.line	369, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2754     	BANKSEL	_ledDeadTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2755     	MOVR	_ledDeadTime,W
     001D 0D03                      1- 2756     	BTRSC	STATUS,2
                                    1- 2757     	MGOTO	_00448_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2758     	.line	371, "main.c"; 	tempshiweiNum = 11;
     001F 210B                      1- 2759     	MOVIA	0x0b
                                    1- 2760     	BANKSEL	_tempshiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2761     	MOVAR	_tempshiweiNum
                                    1- 2762     	.line	372, "main.c"; 	tempgeweiNum = 12;
     0022 210C                      1- 2763     	MOVIA	0x0c
                                    1- 2764     	BANKSEL	_tempgeweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2765     	MOVAR	_tempgeweiNum
     0025                           1- 2766     _00448_DS_:
                                    1- 2767     	.line	375, "main.c"; 	if(firstShowCount > 0)
                                    1- 2768     	BANKSEL	_firstShowCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2769     	MOVR	_firstShowCount,W
     0027 0D03                      1- 2770     	BTRSC	STATUS,2
                                    1- 2771     	MGOTO	_00450_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2772     	.line	376, "main.c"; 	tempshiweiNum = tempgeweiNum = 8;
     0029 2108                      1- 2773     	MOVIA	0x08
                                    1- 2774     	BANKSEL	_tempgeweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2775     	MOVAR	_tempgeweiNum
                                    1- 2776     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2777     	MOVAR	_tempshiweiNum
     002E                           1- 2778     _00450_DS_:
                                    1- 2779     	.line	377, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2780     	BANKSEL	_tempshiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2781     	MOVR	_tempshiweiNum,W
     0030 25rr                      1- 2782     	ADDIA	(_numArray + 0)
                                    1- 2783     	BANKSEL	r0x105C
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2784     	MOVAR	r0x105C
     0033 21rr                      1- 2785     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0034 0C03                      1- 2786     	BTRSC	STATUS,0
     0035 2501                      1- 2787     	ADDIA	0x01
                                    1- 2788     	BANKSEL	r0x105D
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2789     	MOVAR	r0x105D
                                    1- 2790     	BANKSEL	r0x105C
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2791     	MOVR	r0x105C,W
     003A 00rr                      1- 2792     	MOVAR	STK01
                                    1- 2793     	BANKSEL	r0x105D
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2794     	MOVR	r0x105D,W
     003D 00rr                      1- 2795     	MOVAR	STK00
     003E 2100                      1- 2796     	MOVIA	0x00
                                    1- 2797     	MCALL	__gptrget1
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2798     ;;100	MOVAR	r0x105E
                                    1- 2799     	MCALL	_showNubShiwei
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2800     	.line	378, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2801     	BANKSEL	_tempgeweiNum
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2802     	MOVR	_tempgeweiNum,W
     0043 25rr                      1- 2803     	ADDIA	(_numArray + 0)
                                    1- 2804     	BANKSEL	r0x105C
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2805     	MOVAR	r0x105C
     0046 21rr                      1- 2806     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0047 0C03                      1- 2807     	BTRSC	STATUS,0
     0048 2501                      1- 2808     	ADDIA	0x01
                                    1- 2809     	BANKSEL	r0x105D
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2810     	MOVAR	r0x105D
                                    1- 2811     	BANKSEL	r0x105C
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 2812     	MOVR	r0x105C,W
     004D 00rr                      1- 2813     	MOVAR	STK01
                                    1- 2814     	BANKSEL	r0x105D
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2815     	MOVR	r0x105D,W
     0050 00rr                      1- 2816     	MOVAR	STK00
     0051 2100                      1- 2817     	MOVIA	0x00
                                    1- 2818     	MCALL	__gptrget1
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2819     ;;99	MOVAR	r0x105E
                                    1- 2820     	MCALL	_showNubGewei
     0053 2rrr                      3-   66 m1      LCALL rom_address
     0054                           1- 2821     _00451_DS_:
                                    1- 2822     	.line	379, "main.c"; 	}
                                    1- 2823     	RETURN	
     0054 0010                      3-   40 m1      ret
                                    1- 2824     ; exit point of _refreshNub
                                    1- 2826     ;***
                                    1- 2827     ;  pBlock Stats: dbName = C
                                    1- 2828     ;***
                                    1- 2829     ;has an exit
                                    1- 2830     ;functions called:
                                    1- 2831     ;   __divuchar
                                    1- 2832     ;   __moduchar
                                    1- 2833     ;   _pwmStop
                                    1- 2834     ;   _pwm1Stop
                                    1- 2835     ;   _pwm1Init
                                    1- 2836     ;   _pwm1Init
                                    1- 2837     ;   _pwm1Init
                                    1- 2838     ;   _pwm1Init
                                    1- 2839     ;   _pwm1Stop
                                    1- 2840     ;   __divuchar
                                    1- 2841     ;   __moduchar
                                    1- 2842     ;   _pwmStop
                                    1- 2843     ;   _pwm1Stop
                                    1- 2844     ;   _pwm1Init
                                    1- 2845     ;   _pwm1Init
                                    1- 2846     ;   _pwm1Init
                                    1- 2847     ;   _pwm1Init
                                    1- 2848     ;   _pwm1Stop
                                    1- 2849     ;6 compiler assigned registers:
                                    1- 2850     ;   STK00
                                    1- 2851     ;   r0x105F
                                    1- 2852     ;   r0x1060
                                    1- 2853     ;   r0x1061
                                    1- 2854     ;   r0x1062
                                    1- 2855     ;   r0x1063
                                    1- 2856     ;; Starting pCode block
                                    1- 2857     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2859     _chrgCtr:
                                    1- 2860     ; 2 exit points
                                    1- 2861     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2862     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2863     	.line	243, "main.c"; 	if(preBatValue > 99)
     0000 2164                      1- 2864     	MOVIA	0x64
                                    1- 2865     	BANKSEL	_preBatValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2866     	SUBAR	_preBatValue,W
     0003 0803                      1- 2867     	BTRSS	STATUS,0
                                    1- 2868     	MGOTO	_00318_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2869     	.line	245, "main.c"; 	shiweiNum = geweiNum = 9;
     0005 2109                      1- 2870     	MOVIA	0x09
                                    1- 2871     	BANKSEL	_geweiNum
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2872     	MOVAR	_geweiNum
                                    1- 2873     	BANKSEL	_shiweiNum
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2874     	MOVAR	_shiweiNum
                                    1- 2875     	MGOTO	_00319_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2876     _00318_DS_:
                                    1- 2877     	.line	249, "main.c"; 	shiweiNum = preBatValue/10;
     000B 210A                      1- 2878     	MOVIA	0x0a
     000C 00rr                      1- 2879     	MOVAR	STK00
                                    1- 2880     	BANKSEL	_preBatValue
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2881     	MOVR	_preBatValue,W
                                    1- 2882     	MCALL	__divuchar
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2883     	BANKSEL	_shiweiNum
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2884     	MOVAR	_shiweiNum
                                    1- 2885     	.line	250, "main.c"; 	geweiNum = preBatValue%10;
     0012 210A                      1- 2886     	MOVIA	0x0a
     0013 00rr                      1- 2887     	MOVAR	STK00
                                    1- 2888     	BANKSEL	_preBatValue
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2889     	MOVR	_preBatValue,W
                                    1- 2890     	MCALL	__moduchar
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2891     	BANKSEL	_geweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2892     	MOVAR	_geweiNum
     0019                           1- 2893     _00319_DS_:
                                    1- 2894     	.line	252, "main.c"; 	if(workStep > 0)
                                    1- 2895     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2896     	MOVR	_workStep,W
     001B 0D03                      1- 2897     	BTRSC	STATUS,2
                                    1- 2898     	MGOTO	_00321_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2899     	.line	254, "main.c"; 	showFlag = 1;
                                    1- 2900     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2901     	BSR	_Status,4
                                    1- 2902     	.line	255, "main.c"; 	shiweiNum = 0;
                                    1- 2903     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 2904     	CLRR	_shiweiNum
                                    1- 2905     	.line	256, "main.c"; 	geweiNum = workStep;
                                    1- 2906     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2907     	MOVR	_workStep,W
                                    1- 2908     	BANKSEL	_geweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2909     	MOVAR	_geweiNum
     0025                           1- 2910     _00321_DS_:
                                    1- 2911     	.line	258, "main.c"; 	if(0x08 & PORTA)
                                    1- 2912     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 09rr                      1- 2913     	BTRSS	_PORTA,3
                                    1- 2914     	MGOTO	_00357_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2915     	.line	261, "main.c"; 	chrgFlag = 1;
                                    1- 2916     	BANKSEL	_Status
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 19rr                      1- 2917     	BSR	_Status,3
                                    1- 2918     	.line	262, "main.c"; 	showFlag = 1;
     002A 1Arr                      1- 2919     	BSR	_Status,4
                                    1- 2920     	.line	263, "main.c"; 	workStep = 0;
                                    1- 2921     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1- 2922     	CLRR	_workStep
                                    1- 2923     	.line	264, "main.c"; 	ledLightTime = 0;
                                    1- 2924     	BANKSEL	_ledLightTime
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1- 2925     	CLRR	_ledLightTime
                                    1- 2926     	.line	265, "main.c"; 	pwmStop();
                                    1- 2927     	MCALL	_pwmStop
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2928     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 2929     	.line	266, "main.c"; 	if(preBatValue < 99 && batValue >= preBatValue && count5s == 1)
     0030 2163                      1- 2930     	MOVIA	0x63
                                    1- 2931     	BANKSEL	_preBatValue
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 04rr                      1- 2932     	SUBAR	_preBatValue,W
     0033 0C03                      1- 2933     	BTRSC	STATUS,0
                                    1- 2934     	MGOTO	_00008_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 01rr                      1- 2935     	MOVR	_preBatValue,W
                                    1- 2936     	BANKSEL	_batValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 04rr                      1- 2937     	SUBAR	_batValue,W
     0038 0803                      1- 2938     	BTRSS	STATUS,0
                                    1- 2939     	MGOTO	_00008_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2940     	BANKSEL	_count5s
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2941     	MOVR	_count5s,W
     003C 2401                      1- 2942     	XORIA	0x01
     003D 0903                      1- 2943     	BTRSS	STATUS,2
                                    1- 2944     	MGOTO	_00008_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 01rr                      1- 2945     	MOVR	(_count5s + 1),W
     0040 2400                      1- 2946     	XORIA	0x00
     0041 0903                      1- 2947     	BTRSS	STATUS,2
                                    1- 2948     	MGOTO	_00008_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2949     	.line	268, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2950     	BANKSEL	_preBatValue
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 2951     	INCR	_preBatValue,F
     0045                           1- 2952     _00008_DS_:
                                    1- 2953     	.line	270, "main.c"; 	if(batValue >= 99)
     0045 2163                      1- 2954     	MOVIA	0x63
                                    1- 2955     	BANKSEL	_batValue
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2956     	SUBAR	_batValue,W
     0048 0803                      1- 2957     	BTRSS	STATUS,0
                                    1- 2958     	MGOTO	_00348_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2959     	.line	272, "main.c"; 	chrgStep = 4;
     004A 2104                      1- 2960     	MOVIA	0x04
                                    1- 2961     	BANKSEL	_chrgStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2962     	MOVAR	_chrgStep
                                    1- 2963     	.line	274, "main.c"; 	if(shiweiNum == 9 &&  geweiNum == 9 && batValue >= 101 && ++countFull > 2000)
                                    1- 2964     	BANKSEL	_shiweiNum
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 2965     	MOVR	_shiweiNum,W
     004F 2409                      1- 2966     	XORIA	0x09
     0050 0903                      1- 2967     	BTRSS	STATUS,2
                                    1- 2968     	MGOTO	_00359_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2969     	BANKSEL	_geweiNum
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2970     	MOVR	_geweiNum,W
     0054 2409                      1- 2971     	XORIA	0x09
     0055 0903                      1- 2972     	BTRSS	STATUS,2
                                    1- 2973     	MGOTO	_00359_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2974     ;;unsigned compare: left < lit (0x65=101), size=1
     0057 2165                      1- 2975     	MOVIA	0x65
                                    1- 2976     	BANKSEL	_batValue
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 04rr                      1- 2977     	SUBAR	_batValue,W
     005A 0803                      1- 2978     	BTRSS	STATUS,0
                                    1- 2979     	MGOTO	_00359_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2980     	BANKSEL	_countFull
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 05rr                      1- 2981     	INCR	_countFull,F
     005E 0D03                      1- 2982     	BTRSC	STATUS,2
     005F 05rr                      1- 2983     	INCR	(_countFull + 1),F
                                    1- 2984     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2985     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0060 2107                      1- 2986     	MOVIA	0x07
     0061 04rr                      1- 2987     	SUBAR	(_countFull + 1),W
     0062 0903                      1- 2988     	BTRSS	STATUS,2
                                    1- 2989     	MGOTO	_00429_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064 21D1                      1- 2990     	MOVIA	0xd1
     0065 04rr                      1- 2991     	SUBAR	_countFull,W
     0066                           1- 2992     _00429_DS_:
     0066 0803                      1- 2993     	BTRSS	STATUS,0
                                    1- 2994     	MGOTO	_00359_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2995     	.line	276, "main.c"; 	pwm1Stop();
                                    1- 2996     	MCALL	_pwm1Stop
     0068 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2997     	.line	278, "main.c"; 	PORTB &= 0xF7;
     0069 1Drr                      1- 2998     	BCR	_PORTB,3
                                    1- 2999     	.line	279, "main.c"; 	IOSTB |= 0X08;
     006A 001r                      1- 3000     	IOSTR	_IOSTB
                                    1- 3001     	BANKSEL	r0x105F
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 3002     	MOVAR	r0x105F
     006D 19rr                      1- 3003     	BSR	r0x105F,3
     006E 01rr                      1- 3004     	MOVR	r0x105F,W
     006F 000r                      1- 3005     	IOST	_IOSTB
                                    1- 3006     	MGOTO	_00359_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 3007     _00348_DS_:
                                    1- 3008     	.line	285, "main.c"; 	countFull = 0;
                                    1- 3009     	BANKSEL	_countFull
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1- 3010     	CLRR	_countFull
     0073 02rr                      1- 3011     	CLRR	(_countFull + 1)
                                    1- 3012     	.line	286, "main.c"; 	IOSTB &= 0xF7;
     0074 001r                      1- 3013     	IOSTR	_IOSTB
                                    1- 3014     	BANKSEL	r0x105F
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 3015     	MOVAR	r0x105F
     0077 1Drr                      1- 3016     	BCR	r0x105F,3
     0078 01rr                      1- 3017     	MOVR	r0x105F,W
     0079 000r                      1- 3018     	IOST	_IOSTB
                                    1- 3019     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 3020     	.line	287, "main.c"; 	if(preBatValue < 8)
     007A 2108                      1- 3021     	MOVIA	0x08
                                    1- 3022     	BANKSEL	_preBatValue
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 04rr                      1- 3023     	SUBAR	_preBatValue,W
     007D 0C03                      1- 3024     	BTRSC	STATUS,0
                                    1- 3025     	MGOTO	_00334_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3026     	.line	289, "main.c"; 	if(chrgStep <= 0)
                                    1- 3027     	BANKSEL	_chrgStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 3028     	MOVR	_chrgStep,W
     0081 0903                      1- 3029     	BTRSS	STATUS,2
                                    1- 3030     	MGOTO	_00334_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3031     	.line	291, "main.c"; 	PWM1DUTY = 6;
     0083 2106                      1- 3032     	MOVIA	0x06
     0084 00rr                      1- 3033     	SFUN	_PWM1DUTY
                                    1- 3034     	.line	292, "main.c"; 	chrgStep = 0;
     0085 02rr                      1- 3035     	CLRR	_chrgStep
                                    1- 3036     	.line	293, "main.c"; 	pwm1Init();
                                    1- 3037     	MCALL	_pwm1Init
     0086 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3038     ;;unsigned compare: left < lit (0x28=40), size=1
     0087                           1- 3039     _00334_DS_:
                                    1- 3040     	.line	296, "main.c"; 	if(preBatValue < 40)
     0087 2128                      1- 3041     	MOVIA	0x28
                                    1- 3042     	BANKSEL	_preBatValue
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 04rr                      1- 3043     	SUBAR	_preBatValue,W
     008A 0C03                      1- 3044     	BTRSC	STATUS,0
                                    1- 3045     	MGOTO	_00345_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3046     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3047     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 3048     	.line	298, "main.c"; 	if(chrgStep <= 1)
     008C 2102                      1- 3049     	MOVIA	0x02
                                    1- 3050     	BANKSEL	_chrgStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 04rr                      1- 3051     	SUBAR	_chrgStep,W
     008F 0C03                      1- 3052     	BTRSC	STATUS,0
                                    1- 3053     	MGOTO	_00359_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3054     	.line	300, "main.c"; 	PWM1DUTY = 7;
     0091 2107                      1- 3055     	MOVIA	0x07
     0092 00rr                      1- 3056     	SFUN	_PWM1DUTY
                                    1- 3057     	.line	301, "main.c"; 	chrgStep = 1;
     0093 2101                      1- 3058     	MOVIA	0x01
     0094 00rr                      1- 3059     	MOVAR	_chrgStep
                                    1- 3060     	.line	302, "main.c"; 	pwm1Init();
                                    1- 3061     	MCALL	_pwm1Init
     0095 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3062     	MGOTO	_00359_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3063     ;;unsigned compare: left < lit (0x46=70), size=1
     0097                           1- 3064     _00345_DS_:
                                    1- 3065     	.line	305, "main.c"; 	else if(preBatValue < 70)
     0097 2146                      1- 3066     	MOVIA	0x46
                                    1- 3067     	BANKSEL	_preBatValue
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 04rr                      1- 3068     	SUBAR	_preBatValue,W
     009A 0C03                      1- 3069     	BTRSC	STATUS,0
                                    1- 3070     	MGOTO	_00342_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3071     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3072     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 3073     	.line	307, "main.c"; 	if(chrgStep <= 2)
     009C 2103                      1- 3074     	MOVIA	0x03
                                    1- 3075     	BANKSEL	_chrgStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 04rr                      1- 3076     	SUBAR	_chrgStep,W
     009F 0C03                      1- 3077     	BTRSC	STATUS,0
                                    1- 3078     	MGOTO	_00359_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3079     	.line	309, "main.c"; 	chrgStep = 2;
     00A1 2102                      1- 3080     	MOVIA	0x02
     00A2 00rr                      1- 3081     	MOVAR	_chrgStep
                                    1- 3082     	.line	310, "main.c"; 	PWM1DUTY = 9;
     00A3 2109                      1- 3083     	MOVIA	0x09
     00A4 00rr                      1- 3084     	SFUN	_PWM1DUTY
                                    1- 3085     	.line	311, "main.c"; 	pwm1Init();
                                    1- 3086     	MCALL	_pwm1Init
     00A5 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3087     	MGOTO	_00359_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3088     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3089     ;;unsigned compare: left >= lit (0x4=4), size=1
     00A7                           1- 3090     _00342_DS_:
                                    1- 3091     	.line	316, "main.c"; 	if(chrgStep <= 3)
     00A7 2104                      1- 3092     	MOVIA	0x04
                                    1- 3093     	BANKSEL	_chrgStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 3094     	SUBAR	_chrgStep,W
     00AA 0C03                      1- 3095     	BTRSC	STATUS,0
                                    1- 3096     	MGOTO	_00359_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3097     	.line	318, "main.c"; 	PWM1DUTY = 10;
     00AC 210A                      1- 3098     	MOVIA	0x0a
     00AD 00rr                      1- 3099     	SFUN	_PWM1DUTY
                                    1- 3100     	.line	319, "main.c"; 	chrgStep = 3;
     00AE 2103                      1- 3101     	MOVIA	0x03
     00AF 00rr                      1- 3102     	MOVAR	_chrgStep
                                    1- 3103     	.line	320, "main.c"; 	pwm1Init();
                                    1- 3104     	MCALL	_pwm1Init
     00B0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3105     	MGOTO	_00359_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 3106     _00357_DS_:
                                    1- 3107     	.line	328, "main.c"; 	chrgStep = 0;
                                    1- 3108     	BANKSEL	_chrgStep
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 02rr                      1- 3109     	CLRR	_chrgStep
                                    1- 3110     	.line	329, "main.c"; 	countFull = 0;
                                    1- 3111     	BANKSEL	_countFull
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 02rr                      1- 3112     	CLRR	_countFull
     00B6 02rr                      1- 3113     	CLRR	(_countFull + 1)
                                    1- 3114     	.line	330, "main.c"; 	pwm1Stop();
                                    1- 3115     	MCALL	_pwm1Stop
     00B7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3116     	.line	331, "main.c"; 	chrgFlag = 0;
                                    1- 3117     	BANKSEL	_Status
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 1Drr                      1- 3118     	BCR	_Status,3
                                    1- 3119     	.line	333, "main.c"; 	maxChrgDuty = 0;
                                    1- 3120     	BANKSEL	_maxChrgDuty
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 02rr                      1- 3121     	CLRR	_maxChrgDuty
                                    1- 3122     	.line	335, "main.c"; 	if(workStep == 0 && (preBatValue > batValue + 1))
                                    1- 3123     	BANKSEL	_workStep
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 3124     	MOVR	_workStep,W
     00BE 0903                      1- 3125     	BTRSS	STATUS,2
                                    1- 3126     	MGOTO	_00353_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3127     	BANKSEL	_batValue
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 01rr                      1- 3128     	MOVR	_batValue,W
                                    1- 3129     	BANKSEL	r0x105F
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 3130     	MOVAR	r0x105F
                                    1- 3131     	BANKSEL	r0x1060
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 02rr                      1- 3132     	CLRR	r0x1060
                                    1- 3133     	BANKSEL	r0x105F
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 05rr                      1- 3134     	INCR	r0x105F,F
     00C8 0903                      1- 3135     	BTRSS	STATUS,2
                                    1- 3136     	MGOTO	_00009_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3137     	BANKSEL	r0x1060
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 05rr                      1- 3138     	INCR	r0x1060,F
     00CC                           1- 3139     _00009_DS_:
                                    1- 3140     	BANKSEL	_preBatValue
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 01rr                      1- 3141     	MOVR	_preBatValue,W
                                    1- 3142     	BANKSEL	r0x1061
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 3143     	MOVAR	r0x1061
                                    1- 3144     ;;1	CLRR	r0x1062
                                    1- 3145     	BANKSEL	r0x1060
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 3146     	MOVR	r0x1060,W
     00D2 2580                      1- 3147     	ADDIA	0x80
                                    1- 3148     	BANKSEL	r0x1063
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 3149     	MOVAR	r0x1063
     00D5 2100                      1- 3150     	MOVIA	0x00
     00D6 2580                      1- 3151     	ADDIA	0x80
     00D7 04rr                      1- 3152     	SUBAR	r0x1063,W
     00D8 0903                      1- 3153     	BTRSS	STATUS,2
                                    1- 3154     	MGOTO	_00436_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3155     	BANKSEL	r0x1061
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 01rr                      1- 3156     	MOVR	r0x1061,W
                                    1- 3157     	BANKSEL	r0x105F
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 04rr                      1- 3158     	SUBAR	r0x105F,W
     00DE                           1- 3159     _00436_DS_:
     00DE 0C03                      1- 3160     	BTRSC	STATUS,0
                                    1- 3161     	MGOTO	_00353_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3162     	.line	337, "main.c"; 	if(++batCount > 30)
                                    1- 3163     	BANKSEL	_batCount
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 05rr                      1- 3164     	INCR	_batCount,F
     00E2 0D03                      1- 3165     	BTRSC	STATUS,2
     00E3 05rr                      1- 3166     	INCR	(_batCount + 1),F
                                    1- 3167     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3168     ;;unsigned compare: left >= lit (0x1F=31), size=2
     00E4 2100                      1- 3169     	MOVIA	0x00
     00E5 04rr                      1- 3170     	SUBAR	(_batCount + 1),W
     00E6 0903                      1- 3171     	BTRSS	STATUS,2
                                    1- 3172     	MGOTO	_00437_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8 211F                      1- 3173     	MOVIA	0x1f
     00E9 04rr                      1- 3174     	SUBAR	_batCount,W
     00EA                           1- 3175     _00437_DS_:
     00EA 0803                      1- 3176     	BTRSS	STATUS,0
                                    1- 3177     	MGOTO	_00359_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3178     	.line	339, "main.c"; 	batCount = 0;
                                    1- 3179     	BANKSEL	_batCount
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 02rr                      1- 3180     	CLRR	_batCount
     00EE 02rr                      1- 3181     	CLRR	(_batCount + 1)
                                    1- 3182     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 3183     	.line	340, "main.c"; 	preBatValue = preBatValue/2;
     00EF 1C03                      1- 3184     	BCR	STATUS,0
                                    1- 3185     	BANKSEL	_preBatValue
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 13rr                      1- 3186     	RRR	_preBatValue,F
                                    1- 3187     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=1, sign=0, same=0, offr=0
                                    1- 3188     	.line	341, "main.c"; 	preBatValue = preBatValue + batValue/2;
     00F2 1C03                      1- 3189     	BCR	STATUS,0
                                    1- 3190     	BANKSEL	_batValue
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 13rr                      1- 3191     	RRR	_batValue,W
                                    1- 3192     	BANKSEL	r0x105F
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 3193     	MOVAR	r0x105F
                                    1- 3194     	BANKSEL	_preBatValue
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 03rr                      1- 3195     	ADDAR	_preBatValue,F
                                    1- 3196     	MGOTO	_00359_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
     00FA                           1- 3197     _00353_DS_:
                                    1- 3198     	.line	346, "main.c"; 	batCount = 0;
                                    1- 3199     	BANKSEL	_batCount
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 02rr                      1- 3200     	CLRR	_batCount
     00FC 02rr                      1- 3201     	CLRR	(_batCount + 1)
     00FD                           1- 3202     _00359_DS_:
                                    1- 3203     	.line	350, "main.c"; 	}
                                    1- 3204     	RETURN	
     00FD 0010                      3-   40 m1      ret
                                    1- 3205     ; exit point of _chrgCtr
                                    1- 3208     ;	code size estimation:
                                    1- 3209     ;	 1238+  366 =  1604 instructions ( 3940 byte)
                                    1- 3211     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
