
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_Quarter_VDD_Convert
                                    1-  136     	extern	_checkBat
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyCtr
                                    1-  139     	extern	_pwmStop
                                    1-  140     	extern	_pwmInit
                                    1-  141     	extern	_gotoSleep
                                    1-  142     	extern	_initSys
                                    1-  143     	extern	_refreshNub
                                    1-  144     	extern	_checkIRKey
                                    1-  145     	extern	_chrgCtr
                                    1-  146     	extern	_isr
                                    1-  147     	extern	_main
                                    1-  148     	extern	_keyRead
                                    1-  149     	extern	_R_Quarter_VDD_DATA
                                    1-  150     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  151     	extern	_intCount
                                    1-  152     	extern	_IntFlag
                                    1-  153     	extern	_baiweiNum
                                    1-  154     	extern	_shiweiNum
                                    1-  155     	extern	_geweiNum
                                    1-  156     	extern	_showFlag
                                    1-  157     	extern	_irStep
                                    1-  158     	extern	_revCount
                                    1-  159     	extern	_checkCount
                                    1-  160     	extern	_pwmTime
                                    1-  161     	extern	_sendFlag
                                    1-  162     	extern	_workTime
                                    1-  163     	extern	_workStep
                                    1-  164     	extern	_pwFlag
                                    1-  165     	extern	_pwShowTime
                                    1-  166     	extern	_stepShowTime
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_keyCount
                                    1-  169     	extern	_longPressFlag
                                    1-  170     	extern	_sleepTime
                                    1-  171     	extern	_fullFlag
                                    1-  172     	extern	_shanTime
                                    1-  173     	extern	_count1s
                                    1-  174     	extern	_waitTime
                                    1-  175     	extern	_offShowTime
                                    1-  176     	extern	_notRecv
                                    1-  177     	extern	_zhedangFlag
                                    1-  178     	extern	_zhedangTime
                                    1-  179     	extern	_sleepFlag
                                    1-  180     	extern	_powerShi
                                    1-  181     	extern	_powerGe
                                    1-  182     	extern	_count5s
                                    1-  183     	extern	_count250ms
                                    1-  184     	extern	_checkBatTime
                                    1-  185     	extern	_fullTime
                                    1-  186     	extern	_waitBatTime
                                    1-  187     	extern	_startTime
                                    1-  188     	extern	_zhedangCount
                                    1-  189     	extern	_revCountFlag
                                    1-  190     	extern	_revCountTime
                                    1-  191     	extern	_revOKCount
                                    1-  193     	extern PSAVE
                                    1-  194     	extern SSAVE
                                    1-  195     	extern WSAVE
                                    1-  196     	extern STK04
                                    1-  197     	extern STK03
                                    1-  198     	extern STK02
                                    1-  199     	extern STK01
                                    1-  200     	extern STK00
                                    1-  202     .segment "uninit", 0x20000040
 20000040                           1-  203     PSAVE:
                                    1-  204     	.res 1
 20000041                           1-  205     SSAVE:
                                    1-  206     	.res 1
 20000042                           1-  207     WSAVE:
                                    1-  208     	.res 1
 20000043                           1-  209     STK04:
                                    1-  210     	.res 1
 20000044                           1-  211     STK03:
                                    1-  212     	.res 1
 20000045                           1-  213     STK02:
                                    1-  214     	.res 1
 20000046                           1-  215     STK01:
                                    1-  216     	.res 1
 20000047                           1-  217     STK00:
                                    1-  218     	.res 1
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ; global definitions
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_Quarter_VDD_DATA:
                                    1-  225     	.res	2
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_Quarter_VDD_DATA_LB:
                                    1-  230     	.res	1
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; absolute symbol definitions
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; compiler-defined variables
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1050:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1051:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x104E:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x104F:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x104B:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x104C:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x104A:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1048:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1049:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1042:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1043:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1044:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1045:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1047:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1046:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x103C:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x103D:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x103E:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1041:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x103A:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x103B:
                                    1-  301     	.res	1
                                    1-  302     ;--------------------------------------------------------
                                    1-  303     ; initialized data
                                    1-  304     ;--------------------------------------------------------
                                    1-  306     .segment "idata"
     0000                           1-  307     _intCount:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _IntFlag:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _baiweiNum:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _shiweiNum:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _geweiNum:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _showFlag:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _irStep:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _revCount:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _checkCount:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _pwmTime:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _sendFlag:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _workTime:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _workStep:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _pwFlag:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _pwShowTime:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _stepShowTime:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _pwStep:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _keyCount:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _longPressFlag:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _sleepTime:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _fullFlag:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _shanTime:
     0000 0000 0000                 1-  434     	dw	0x00, 0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _count1s:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _waitTime:
     0000 0000 0000                 1-  446     	dw	0x00, 0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _offShowTime:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _notRecv:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _zhedangFlag:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _zhedangTime:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _sleepFlag:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _powerShi:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _powerGe:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _count5s:
     0000 0000 0000                 1-  494     	dw	0x00, 0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _count250ms:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _checkBatTime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _fullTime:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _waitBatTime:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _startTime:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _zhedangCount:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _revCountFlag:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _revCountTime:
     0000 0000                      1-  542     	dw	0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _revOKCount:
     0000 0000                      1-  548     	dw	0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _numArray:
     0000 003F                      1-  554     	dw	0x3f
     0001 0006                      1-  555     	dw	0x06
     0002 005B                      1-  556     	dw	0x5b
     0003 004F                      1-  557     	dw	0x4f
     0004 0066                      1-  558     	dw	0x66
     0005 006D                      1-  559     	dw	0x6d
     0006 007D                      1-  560     	dw	0x7d
     0007 0007                      1-  561     	dw	0x07
     0008 007F                      1-  562     	dw	0x7f
     0009 006F                      1-  563     	dw	0x6f
     000A 0071                      1-  564     	dw	0x71
     000B 0079                      1-  565     	dw	0x79
     000C 0050                      1-  566     	dw	0x50
                                    1-  569     ;--------------------------------------------------------
                                    1-  570     ; overlayable items in internal ram 
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ;	udata_ovr
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ; reset vector 
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ORG	0x0000
     0000 3rrr                      1-  577     	LGOTO	__nyc_ny8_startup
                                    1-  578     ;--------------------------------------------------------
                                    1-  579     ; interrupt and initialization code
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ORG 0x0008
                                    1-  582     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  584     .segment "code"
     0000                           1-  585     __sdcc_interrupt:
                                    1-  586     ;***
                                    1-  587     ;  pBlock Stats: dbName = I
                                    1-  588     ;***
                                    1-  589     ;2 compiler assigned registers:
                                    1-  590     ;   STK00
                                    1-  591     ;   STK01
                                    1-  592     ;; Starting pCode block
     0000                           1-  593     _isr:
                                    1-  594     ; 0 exit points
                                    1-  595     	.line	84, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  596     	MOVAR	WSAVE
     0001 1503                      1-  597     	SWAPR	STATUS,W
     0002 0283                      1-  598     	CLRR	STATUS
     0003 00rr                      1-  599     	MOVAR	SSAVE
     0004 010A                      1-  600     	MOVR	PCHBUF,W
     0005 028A                      1-  601     	CLRR	PCHBUF
     0006 00rr                      1-  602     	MOVAR	PSAVE
     0007 0104                      1-  603     	MOVR	FSR,W
                                    1-  604     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  605     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  606     	MOVR	STK00,W
                                    1-  607     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  608     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  609     	MOVR	STK01,W
                                    1-  610     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  611     	MOVAR	___sdcc_saved_stk01
                                    1-  612     	.line	86, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  613     	BTRSS	_INTFbits,0
                                    1-  614     	MGOTO	_00120_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  615     	.line	88, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  616     	MOVIA	0x37
     0013 03rr                      1-  617     	ADDAR	_TMR0,F
                                    1-  618     	.line	90, "main.c"; 	if(++intCount >= 100)
                                    1-  619     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  620     	INCR	_intCount,F
                                    1-  621     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  622     	MOVIA	0x64
     0017 04rr                      1-  623     	SUBAR	_intCount,W
     0018 0803                      1-  624     	BTRSS	STATUS,0
                                    1-  625     	MGOTO	_00120_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  626     	.line	92, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  627     	MOVIA	0x01
                                    1-  628     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  629     	MOVAR	_IntFlag
                                    1-  630     	.line	93, "main.c"; 	intCount = 0;	
                                    1-  631     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  632     	CLRR	_intCount
                                    1-  633     	.line	94, "main.c"; 	if(++count1s > 100)
                                    1-  634     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  635     	INCR	_count1s,F
                                    1-  636     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  637     ;;unsigned compare: left >= lit (0x65=101), size=1
     0021 2165                      1-  638     	MOVIA	0x65
     0022 04rr                      1-  639     	SUBAR	_count1s,W
     0023 0803                      1-  640     	BTRSS	STATUS,0
                                    1-  641     	MGOTO	_00120_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  642     	.line	96, "main.c"; 	count1s = 0;
     0025 02rr                      1-  643     	CLRR	_count1s
                                    1-  644     	.line	97, "main.c"; 	if(stepShowTime > 0)
                                    1-  645     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  646     	MOVR	_stepShowTime,W
     0028 0D03                      1-  647     	BTRSC	STATUS,2
                                    1-  648     	MGOTO	_00113_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  649     	.line	98, "main.c"; 	stepShowTime--;
     002A 06rr                      1-  650     	DECR	_stepShowTime,F
                                    1-  651     	MGOTO	_00120_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  652     _00113_DS_:
                                    1-  653     	.line	99, "main.c"; 	else if(pwShowTime > 0)
                                    1-  654     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  655     	MOVR	_pwShowTime,W
     002E 0D03                      1-  656     	BTRSC	STATUS,2
                                    1-  657     	MGOTO	_00110_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  658     	.line	101, "main.c"; 	pwShowTime--;
     0030 06rr                      1-  659     	DECR	_pwShowTime,F
                                    1-  660     	MGOTO	_00120_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  661     _00110_DS_:
                                    1-  662     	.line	103, "main.c"; 	else if(offShowTime > 0)
                                    1-  663     	BANKSEL	_offShowTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  664     	MOVR	_offShowTime,W
     0034 0D03                      1-  665     	BTRSC	STATUS,2
                                    1-  666     	MGOTO	_00120_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  667     	.line	105, "main.c"; 	--offShowTime;
     0036 17rr                      1-  668     	DECRSZ	_offShowTime,F
                                    1-  669     	.line	106, "main.c"; 	if(offShowTime == 0)
                                    1-  670     	MGOTO	_00120_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  671     	.line	107, "main.c"; 	sleepFlag = 1;
     0038 2101                      1-  672     	MOVIA	0x01
                                    1-  673     	BANKSEL	_sleepFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1-  674     	MOVAR	_sleepFlag
     003B                           1-  675     _00120_DS_:
                                    1-  676     	.line	124, "main.c"; 	if(INTFbits.PABIF)
     003B 08rr                      1-  677     	BTRSS	_INTFbits,1
                                    1-  678     	MGOTO	_00122_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  679     	.line	126, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003D 21FD                      1-  680     	MOVIA	0xfd
     003E 00rr                      1-  681     	MOVAR	_INTF
                                    1-  682     	.line	127, "main.c"; 	revCount++;
                                    1-  683     	BANKSEL	_revCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 05rr                      1-  684     	INCR	_revCount,F
     0041                           1-  685     _00122_DS_:
                                    1-  686     	.line	130, "main.c"; 	INTF = 0;
     0041 02rr                      1-  687     	CLRR	_INTF
                                    1-  688     	.line	132, "main.c"; 	}
                                    1-  689     	BANKSEL	___sdcc_saved_stk01
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  690     	MOVR	___sdcc_saved_stk01,W
     0044 00rr                      1-  691     	MOVAR	STK01
                                    1-  692     	BANKSEL	___sdcc_saved_stk00
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  693     	MOVR	___sdcc_saved_stk00,W
     0047 00rr                      1-  694     	MOVAR	STK00
                                    1-  695     	BANKSEL	___sdcc_saved_fsr
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  696     	MOVR	___sdcc_saved_fsr,W
     004A 0084                      1-  697     	MOVAR	FSR
     004B 01rr                      1-  698     	MOVR	PSAVE,W
     004C 008A                      1-  699     	MOVAR	PCHBUF
     004D 0283                      1-  700     	CLRR	STATUS
     004E 15rr                      1-  701     	SWAPR	SSAVE,W
     004F 0083                      1-  702     	MOVAR	STATUS
     0050 15rr                      1-  703     	SWAPR	WSAVE,F
     0051 15rr                      1-  704     	SWAPR	WSAVE,W
     0052                           1-  705     END_OF_INTERRUPT:
     0052 0011                      1-  706     	RETIE	
                                    1-  708     ;--------------------------------------------------------
                                    1-  709     ; code
                                    1-  710     ;--------------------------------------------------------
                                    1-  711     ;***
                                    1-  712     ;  pBlock Stats: dbName = M
                                    1-  713     ;***
                                    1-  714     ;has an exit
                                    1-  715     ;functions called:
                                    1-  716     ;   _initSys
                                    1-  717     ;   _initAD
                                    1-  718     ;   _refreshNub
                                    1-  719     ;   _refreshNub
                                    1-  720     ;   _setInput
                                    1-  721     ;   __divuchar
                                    1-  722     ;   __moduchar
                                    1-  723     ;   _delay
                                    1-  724     ;   _delay
                                    1-  725     ;   _delay
                                    1-  726     ;   _delay
                                    1-  727     ;   _checkIRKey
                                    1-  728     ;   _delay
                                    1-  729     ;   _keyCtr
                                    1-  730     ;   _checkBat
                                    1-  731     ;   _chrgCtr
                                    1-  732     ;   _gotoSleep
                                    1-  733     ;   _gotoSleep
                                    1-  734     ;   _delay
                                    1-  735     ;   _initSys
                                    1-  736     ;   _initAD
                                    1-  737     ;   _refreshNub
                                    1-  738     ;   _refreshNub
                                    1-  739     ;   _setInput
                                    1-  740     ;   __divuchar
                                    1-  741     ;   __moduchar
                                    1-  742     ;   _delay
                                    1-  743     ;   _delay
                                    1-  744     ;   _delay
                                    1-  745     ;   _delay
                                    1-  746     ;   _checkIRKey
                                    1-  747     ;   _delay
                                    1-  748     ;   _keyCtr
                                    1-  749     ;   _checkBat
                                    1-  750     ;   _chrgCtr
                                    1-  751     ;   _gotoSleep
                                    1-  752     ;   _gotoSleep
                                    1-  753     ;   _delay
                                    1-  754     ;4 compiler assigned registers:
                                    1-  755     ;   STK00
                                    1-  756     ;   r0x1050
                                    1-  757     ;   r0x1051
                                    1-  758     ;   r0x1052
                                    1-  759     ;; Starting pCode block
                                    1-  760     .segment "code"; module=main, function=_main
                                    1-  762     ;local variable name mapping:
     0000                           1-  764     _main:
                                    1-  765     ; 2 exit points
                                    1-  766     	.line	136, "main.c"; 	initSys();
                                    1-  767     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  768     	.line	137, "main.c"; 	initAD();
                                    1-  769     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  770     	.line	138, "main.c"; 	startTime = 200;
     0002 21C8                      1-  771     	MOVIA	0xc8
                                    1-  772     	BANKSEL	_startTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  773     	MOVAR	_startTime
     0005                           1-  774     _00176_DS_:
                                    1-  775     	.line	142, "main.c"; 	CLRWDT();							// Clear WatchDog
     0005 0002                      1-  776     	clrwdt
                                    1-  777     	.line	143, "main.c"; 	if(showFlag)
                                    1-  778     	BANKSEL	_showFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  779     	MOVR	_showFlag,W
     0008 0D03                      1-  780     	BTRSC	STATUS,2
                                    1-  781     	MGOTO	_00135_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  782     	.line	144, "main.c"; 	refreshNub();
                                    1-  783     	MCALL	_refreshNub
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  784     	MGOTO	_00136_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1-  785     _00135_DS_:
                                    1-  786     	.line	147, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  787     	BANKSEL	_keyCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  788     	MOVR	_keyCount,W
     000E 0D03                      1-  789     	BTRSC	STATUS,2
                                    1-  790     	MGOTO	_00131_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  791     	BANKSEL	_pwFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  792     	MOVR	_pwFlag,W
     0012 2401                      1-  793     	XORIA	0x01
     0013 0903                      1-  794     	BTRSS	STATUS,2
                                    1-  795     	MGOTO	_00131_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  796     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  797     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  798     	.line	149, "main.c"; 	if(pwStep > 99)
     0015 2164                      1-  799     	MOVIA	0x64
                                    1-  800     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1-  801     	SUBAR	_pwStep,W
     0018 0803                      1-  802     	BTRSS	STATUS,0
                                    1-  803     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  804     	.line	151, "main.c"; 	baiweiNum = 1;
     001A 2101                      1-  805     	MOVIA	0x01
                                    1-  806     	BANKSEL	_baiweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  807     	MOVAR	_baiweiNum
                                    1-  808     	.line	152, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  809     	BANKSEL	_geweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  810     	CLRR	_geweiNum
                                    1-  811     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1-  812     	CLRR	_shiweiNum
                                    1-  813     	MGOTO	_00129_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1-  814     _00128_DS_:
                                    1-  815     	.line	156, "main.c"; 	baiweiNum = 0;
                                    1-  816     	BANKSEL	_baiweiNum
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  817     	CLRR	_baiweiNum
                                    1-  818     	.line	157, "main.c"; 	shiweiNum = powerShi;
                                    1-  819     	BANKSEL	_powerShi
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  820     	MOVR	_powerShi,W
                                    1-  821     	BANKSEL	_shiweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  822     	MOVAR	_shiweiNum
                                    1-  823     	.line	158, "main.c"; 	geweiNum = powerGe;
                                    1-  824     	BANKSEL	_powerGe
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  825     	MOVR	_powerGe,W
                                    1-  826     	BANKSEL	_geweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  827     	MOVAR	_geweiNum
     002C                           1-  828     _00129_DS_:
                                    1-  829     	.line	160, "main.c"; 	refreshNub();
                                    1-  830     	MCALL	_refreshNub
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  831     	MGOTO	_00136_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1-  832     _00131_DS_:
                                    1-  833     	.line	164, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  834     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  835     	CLRR	_geweiNum
                                    1-  836     	BANKSEL	_shiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  837     	CLRR	_shiweiNum
                                    1-  838     	BANKSEL	_baiweiNum
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 02rr                      1-  839     	CLRR	_baiweiNum
                                    1-  840     	.line	165, "main.c"; 	setInput();
                                    1-  841     	MCALL	_setInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
     0035                           1-  842     _00136_DS_:
                                    1-  843     	.line	168, "main.c"; 	if(!IntFlag)
                                    1-  844     	BANKSEL	_IntFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  845     	MOVR	_IntFlag,W
     0037 0D03                      1-  846     	BTRSC	STATUS,2
                                    1-  847     	MGOTO	_00176_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  848     	.line	170, "main.c"; 	IntFlag = 0;
     0039 02rr                      1-  849     	CLRR	_IntFlag
                                    1-  850     	.line	171, "main.c"; 	powerShi = pwStep/10;
     003A 210A                      1-  851     	MOVIA	0x0a
     003B 00rr                      1-  852     	MOVAR	STK00
                                    1-  853     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  854     	MOVR	_pwStep,W
                                    1-  855     	MCALL	__divuchar
     003E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  856     	BANKSEL	_powerShi
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1-  857     	MOVAR	_powerShi
                                    1-  858     	.line	172, "main.c"; 	powerGe = pwStep%10;
     0041 210A                      1-  859     	MOVIA	0x0a
     0042 00rr                      1-  860     	MOVAR	STK00
                                    1-  861     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  862     	MOVR	_pwStep,W
                                    1-  863     	MCALL	__moduchar
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  864     	BANKSEL	_powerGe
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1-  865     	MOVAR	_powerGe
                                    1-  866     	.line	176, "main.c"; 	if(pwFlag)
                                    1-  867     	BANKSEL	_pwFlag
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  868     	MOVR	_pwFlag,W
     004A 0D03                      1-  869     	BTRSC	STATUS,2
                                    1-  870     	MGOTO	_00158_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  871     	.line	179, "main.c"; 	if((++count250ms >= 35) || revCountFlag || irStep)
                                    1-  872     	BANKSEL	_count250ms
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 05rr                      1-  873     	INCR	_count250ms,F
                                    1-  874     ;;unsigned compare: left < lit (0x23=35), size=1
     004E 2123                      1-  875     	MOVIA	0x23
     004F 04rr                      1-  876     	SUBAR	_count250ms,W
     0050 0C03                      1-  877     	BTRSC	STATUS,0
                                    1-  878     	MGOTO	_00153_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  879     	BANKSEL	_revCountFlag
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  880     	MOVR	_revCountFlag,W
     0054 0903                      1-  881     	BTRSS	STATUS,2
                                    1-  882     	MGOTO	_00153_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  883     	BANKSEL	_irStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1-  884     	MOVR	_irStep,W
     0058 0D03                      1-  885     	BTRSC	STATUS,2
                                    1-  886     	MGOTO	_00158_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A                           1-  887     _00153_DS_:
                                    1-  888     	.line	182, "main.c"; 	count250ms = 0;
                                    1-  889     	BANKSEL	_count250ms
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1-  890     	CLRR	_count250ms
                                    1-  891     	.line	183, "main.c"; 	zhedangCount = 0;
                                    1-  892     	BANKSEL	_zhedangCount
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1-  893     	CLRR	_zhedangCount
                                    1-  894     	.line	185, "main.c"; 	revCount = 0;
                                    1-  895     	BANKSEL	_revCount
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1-  896     	CLRR	_revCount
                                    1-  897     	.line	186, "main.c"; 	PORTBbits.PB1 = 1;						// Set PB[1]= 1
     0060 18rr                      1-  898     	BSR	_PORTBbits,1
                                    1-  899     	.line	187, "main.c"; 	IRCR = C_IR_38K | C_IR_En;	
     0061 2101                      1-  900     	MOVIA	0x01
     0062 00rr                      1-  901     	SFUN	_IRCR
                                    1-  902     	.line	188, "main.c"; 	delay(10);
     0063 210A                      1-  903     	MOVIA	0x0a
                                    1-  904     	MCALL	_delay
     0064 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  905     	.line	189, "main.c"; 	PORTA |= 0x40;
                                    1-  906     	BANKSEL	_PORTA
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 1Brr                      1-  907     	BSR	_PORTA,6
                                    1-  908     	.line	190, "main.c"; 	for(i=0;i<6;i++)
                                    1-  909     	BANKSEL	r0x1050
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 02rr                      1-  910     	CLRR	r0x1050
     0069                           1-  911     _00178_DS_:
                                    1-  912     	.line	192, "main.c"; 	delay(10);
     0069 210A                      1-  913     	MOVIA	0x0a
                                    1-  914     	MCALL	_delay
     006A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  915     	.line	190, "main.c"; 	for(i=0;i<6;i++)
                                    1-  916     	BANKSEL	r0x1050
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 05rr                      1-  917     	INCR	r0x1050,F
                                    1-  918     ;;unsigned compare: left < lit (0x6=6), size=1
     006D 2106                      1-  919     	MOVIA	0x06
     006E 04rr                      1-  920     	SUBAR	r0x1050,W
     006F 0803                      1-  921     	BTRSS	STATUS,0
                                    1-  922     	MGOTO	_00178_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  923     	.line	195, "main.c"; 	PORTBbits.PB1 = 0;						// Set PB[1]= 1
     0071 1Crr                      1-  924     	BCR	_PORTBbits,1
                                    1-  925     	.line	196, "main.c"; 	IRCR = C_IR_38K;
     0072 0200                      1-  926     	CLRA	
     0073 00rr                      1-  927     	SFUN	_IRCR
                                    1-  928     	.line	197, "main.c"; 	PORTA &= 0xBF;
                                    1-  929     	BANKSEL	_PORTA
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 1Frr                      1-  930     	BCR	_PORTA,6
                                    1-  931     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  932     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1-  933     	.line	198, "main.c"; 	if(revCount > 5)
     0076 2106                      1-  934     	MOVIA	0x06
                                    1-  935     	BANKSEL	_revCount
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 04rr                      1-  936     	SUBAR	_revCount,W
     0079 0803                      1-  937     	BTRSS	STATUS,0
                                    1-  938     	MGOTO	_00151_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  939     	.line	200, "main.c"; 	revCountTime = 0;
                                    1-  940     	BANKSEL	_revCountTime
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 02rr                      1-  941     	CLRR	_revCountTime
                                    1-  942     	.line	201, "main.c"; 	revCount = 0;
                                    1-  943     	BANKSEL	_revCount
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1-  944     	CLRR	_revCount
                                    1-  945     	.line	202, "main.c"; 	revCountFlag = 1;
     007F 2101                      1-  946     	MOVIA	0x01
                                    1-  947     	BANKSEL	_revCountFlag
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1-  948     	MOVAR	_revCountFlag
                                    1-  949     	.line	203, "main.c"; 	delay(30);
     0082 211E                      1-  950     	MOVIA	0x1e
                                    1-  951     	MCALL	_delay
     0083 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  952     	.line	204, "main.c"; 	PORTBbits.PB1 = 1;						// Set PB[1]= 1
     0084 18rr                      1-  953     	BSR	_PORTBbits,1
                                    1-  954     	.line	205, "main.c"; 	IRCR = C_IR_38K | C_IR_En;	
     0085 2101                      1-  955     	MOVIA	0x01
     0086 00rr                      1-  956     	SFUN	_IRCR
                                    1-  957     	.line	206, "main.c"; 	delay(10);
     0087 210A                      1-  958     	MOVIA	0x0a
                                    1-  959     	MCALL	_delay
     0088 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  960     	.line	207, "main.c"; 	PORTA |= 0x40;
                                    1-  961     	BANKSEL	_PORTA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 1Brr                      1-  962     	BSR	_PORTA,6
                                    1-  963     	.line	208, "main.c"; 	zhedangCount = 0;
                                    1-  964     	BANKSEL	_zhedangCount
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 02rr                      1-  965     	CLRR	_zhedangCount
                                    1-  966     	.line	211, "main.c"; 	while(PORTBbits.PB3 == 1)
                                    1-  967     	BANKSEL	r0x1050
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 02rr                      1-  968     	CLRR	r0x1050
     008F                           1-  969     _00140_DS_:
                                    1-  970     	BANKSEL	r0x1051
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 02rr                      1-  971     	CLRR	r0x1051
     0091 0Drr                      1-  972     	BTRSC	_PORTBbits,3
     0092 05rr                      1-  973     	INCR	r0x1051,F
     0093 01rr                      1-  974     	MOVR	r0x1051,W
                                    1-  975     ;;1	MOVAR	r0x1052
     0094 2401                      1-  976     	XORIA	0x01
     0095 0903                      1-  977     	BTRSS	STATUS,2
                                    1-  978     	MGOTO	_00181_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  979     	.line	213, "main.c"; 	zhedangCount++;
                                    1-  980     	BANKSEL	_zhedangCount
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 05rr                      1-  981     	INCR	_zhedangCount,F
                                    1-  982     	MGOTO	_00140_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A                           1-  983     _00181_DS_:
                                    1-  984     	.line	209, "main.c"; 	for(i=0;i<50;i++)
                                    1-  985     	BANKSEL	r0x1050
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 05rr                      1-  986     	INCR	r0x1050,F
                                    1-  987     ;;unsigned compare: left < lit (0x32=50), size=1
     009C 2132                      1-  988     	MOVIA	0x32
     009D 04rr                      1-  989     	SUBAR	r0x1050,W
     009E 0803                      1-  990     	BTRSS	STATUS,0
                                    1-  991     	MGOTO	_00140_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     	.line	217, "main.c"; 	PORTA &= 0xBF;
                                    1-  993     	BANKSEL	_PORTA
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 1Frr                      1-  994     	BCR	_PORTA,6
                                    1-  995     	.line	218, "main.c"; 	checkIRKey();
                                    1-  996     	MCALL	_checkIRKey
     00A2 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  997     	.line	219, "main.c"; 	PORTBbits.PB1 = 0;						// Set PB[1]= 1
     00A3 1Crr                      1-  998     	BCR	_PORTBbits,1
                                    1-  999     	.line	220, "main.c"; 	IRCR = C_IR_38K;
     00A4 0200                      1- 1000     	CLRA	
     00A5 00rr                      1- 1001     	SFUN	_IRCR
                                    1- 1002     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1003     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1004     	.line	222, "main.c"; 	if(zhedangCount > 5)
     00A6 2106                      1- 1005     	MOVIA	0x06
                                    1- 1006     	BANKSEL	_zhedangCount
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 04rr                      1- 1007     	SUBAR	_zhedangCount,W
     00A9 0803                      1- 1008     	BTRSS	STATUS,0
                                    1- 1009     	MGOTO	_00152_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1010     	.line	224, "main.c"; 	if(++zhedangTime > 40)
                                    1- 1011     	BANKSEL	_zhedangTime
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 05rr                      1- 1012     	INCR	_zhedangTime,F
                                    1- 1013     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1014     ;;unsigned compare: left >= lit (0x29=41), size=1
     00AD 2129                      1- 1015     	MOVIA	0x29
     00AE 04rr                      1- 1016     	SUBAR	_zhedangTime,W
     00AF 0803                      1- 1017     	BTRSS	STATUS,0
                                    1- 1018     	MGOTO	_00152_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1019     	.line	226, "main.c"; 	zhedangTime = 40;
     00B1 2128                      1- 1020     	MOVIA	0x28
     00B2 00rr                      1- 1021     	MOVAR	_zhedangTime
                                    1- 1022     	MGOTO	_00152_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 1023     _00151_DS_:
                                    1- 1024     	.line	232, "main.c"; 	if(++revCountTime > 50)
                                    1- 1025     	BANKSEL	_revCountTime
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 05rr                      1- 1026     	INCR	_revCountTime,F
                                    1- 1027     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1028     ;;unsigned compare: left >= lit (0x33=51), size=1
     00B6 2133                      1- 1029     	MOVIA	0x33
     00B7 04rr                      1- 1030     	SUBAR	_revCountTime,W
     00B8 0803                      1- 1031     	BTRSS	STATUS,0
                                    1- 1032     	MGOTO	_00152_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1033     	.line	234, "main.c"; 	revCountTime = 0;
     00BA 02rr                      1- 1034     	CLRR	_revCountTime
                                    1- 1035     	.line	235, "main.c"; 	revCountFlag = 0;
                                    1- 1036     	BANKSEL	_revCountFlag
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 02rr                      1- 1037     	CLRR	_revCountFlag
                                    1- 1038     	.line	236, "main.c"; 	zhedangTime = 0;
                                    1- 1039     	BANKSEL	_zhedangTime
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 02rr                      1- 1040     	CLRR	_zhedangTime
                                    1- 1041     	.line	237, "main.c"; 	irStep = 0;			//移开了
                                    1- 1042     	BANKSEL	_irStep
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 02rr                      1- 1043     	CLRR	_irStep
     00C1                           1- 1044     _00152_DS_:
                                    1- 1045     	.line	240, "main.c"; 	delay(5);
     00C1 2105                      1- 1046     	MOVIA	0x05
                                    1- 1047     	MCALL	_delay
     00C2 2rrr                      3-   66 m1      LCALL rom_address
     00C3                           1- 1048     _00158_DS_:
                                    1- 1049     	.line	245, "main.c"; 	keyCtr();
                                    1- 1050     	MCALL	_keyCtr
     00C3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1051     	.line	246, "main.c"; 	if(++checkBatTime >= 20)
                                    1- 1052     	BANKSEL	_checkBatTime
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 05rr                      1- 1053     	INCR	_checkBatTime,F
                                    1- 1054     ;;unsigned compare: left < lit (0x14=20), size=1
     00C6 2114                      1- 1055     	MOVIA	0x14
     00C7 04rr                      1- 1056     	SUBAR	_checkBatTime,W
     00C8 0803                      1- 1057     	BTRSS	STATUS,0
                                    1- 1058     	MGOTO	_00162_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1059     	.line	248, "main.c"; 	checkBatTime = 0;
     00CA 02rr                      1- 1060     	CLRR	_checkBatTime
                                    1- 1061     	.line	249, "main.c"; 	if(workTime == 0)
                                    1- 1062     	BANKSEL	_workTime
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 01rr                      1- 1063     	MOVR	_workTime,W
     00CD 0D03                      1- 1064     	BTRSC	STATUS,2
                                    1- 1065     	.line	250, "main.c"; 	checkBat();
                                    1- 1066     	MCALL	_checkBat
     00CE 2rrr                      3-   66 m1      LCALL rom_address
     00CF                           1- 1067     _00162_DS_:
                                    1- 1068     	.line	252, "main.c"; 	chrgCtr();
                                    1- 1069     	MCALL	_chrgCtr
     00CF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1070     	.line	254, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0 && startTime == 0)
                                    1- 1071     	BANKSEL	_PORTA
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 1072     	MOVR	_PORTA,W
                                    1- 1073     	BANKSEL	r0x1050
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 1074     	MOVAR	r0x1050
                                    1- 1075     	BANKSEL	r0x1051
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 02rr                      1- 1076     	CLRR	r0x1051
                                    1- 1077     	BANKSEL	r0x1050
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 07rr                      1- 1078     	COMR	r0x1050,W
     00D8 00rr                      1- 1079     	MOVAR	r0x1050
                                    1- 1080     	BANKSEL	r0x1051
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 07rr                      1- 1081     	COMR	r0x1051,W
     00DB 00rr                      1- 1082     	MOVAR	r0x1051
                                    1- 1083     	BANKSEL	r0x1050
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 0Arr                      1- 1084     	BTRSS	r0x1050,5
                                    1- 1085     	MGOTO	_00166_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1086     	BANKSEL	_keyCount
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1087     	MOVR	_keyCount,W
     00E1 0903                      1- 1088     	BTRSS	STATUS,2
                                    1- 1089     	MGOTO	_00166_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1090     	BANKSEL	_pwFlag
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 01rr                      1- 1091     	MOVR	_pwFlag,W
     00E5 0903                      1- 1092     	BTRSS	STATUS,2
                                    1- 1093     	MGOTO	_00166_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1094     	BANKSEL	_stepShowTime
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 01rr                      1- 1095     	MOVR	_stepShowTime,W
     00E9 0903                      1- 1096     	BTRSS	STATUS,2
                                    1- 1097     	MGOTO	_00166_DS_
     00EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1098     	BANKSEL	_pwShowTime
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 01rr                      1- 1099     	MOVR	_pwShowTime,W
     00ED 0903                      1- 1100     	BTRSS	STATUS,2
                                    1- 1101     	MGOTO	_00166_DS_
     00EE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1102     	BANKSEL	_offShowTime
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 01rr                      1- 1103     	MOVR	_offShowTime,W
     00F1 0903                      1- 1104     	BTRSS	STATUS,2
                                    1- 1105     	MGOTO	_00166_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1106     	BANKSEL	_startTime
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 01rr                      1- 1107     	MOVR	_startTime,W
     00F5 0903                      1- 1108     	BTRSS	STATUS,2
                                    1- 1109     	MGOTO	_00166_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1110     	.line	257, "main.c"; 	if(++sleepTime > 100)
                                    1- 1111     	BANKSEL	_sleepTime
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 05rr                      1- 1112     	INCR	_sleepTime,F
                                    1- 1113     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1114     ;;unsigned compare: left >= lit (0x65=101), size=1
     00F9 2165                      1- 1115     	MOVIA	0x65
     00FA 04rr                      1- 1116     	SUBAR	_sleepTime,W
     00FB 0C03                      1- 1117     	BTRSC	STATUS,0
                                    1- 1118     	.line	258, "main.c"; 	gotoSleep();
                                    1- 1119     	MCALL	_gotoSleep
     00FC 2rrr                      3-   66 m1      LCALL rom_address
     00FD                           1- 1120     _00166_DS_:
                                    1- 1121     	.line	260, "main.c"; 	if(sleepFlag)
                                    1- 1122     	BANKSEL	_sleepFlag
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 01rr                      1- 1123     	MOVR	_sleepFlag,W
     00FF 0903                      1- 1124     	BTRSS	STATUS,2
                                    1- 1125     	.line	262, "main.c"; 	gotoSleep();
                                    1- 1126     	MCALL	_gotoSleep
     0100 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1127     	.line	264, "main.c"; 	delay(100);
     0101 2164                      1- 1128     	MOVIA	0x64
                                    1- 1129     	MCALL	_delay
     0102 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1130     	.line	264, "main.c"; 	//    	if(getbit(PORTB, 3) == 0)
                                    1- 1131     	MGOTO	_00176_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1132     	.line	286, "main.c"; 	}
                                    1- 1133     	RETURN	
     0104 0010                      3-   40 m1      ret
                                    1- 1134     ; exit point of _main
                                    1- 1136     ;***
                                    1- 1137     ;  pBlock Stats: dbName = C
                                    1- 1138     ;***
                                    1- 1139     ;has an exit
                                    1- 1140     ;2 compiler assigned registers:
                                    1- 1141     ;   r0x103A
                                    1- 1142     ;   r0x103B
                                    1- 1143     ;; Starting pCode block
                                    1- 1144     .segment "code"; module=main, function=_delay
                                    1- 1146     ;local variable name mapping:
     0000                           1- 1149     _delay:
                                    1- 1150     ; 2 exit points
                                    1- 1151     	.line	832, "main.c"; 	void delay(u8t count)
                                    1- 1152     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1153     	MOVAR	r0x103A
                                    1- 1154     	.line	835, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1- 1155     	MOVIA	0x01
                                    1- 1156     	BANKSEL	r0x103B
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1157     	MOVAR	r0x103B
     0005                           1- 1158     _00539_DS_:
                                    1- 1159     	BANKSEL	r0x103B
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1160     	MOVR	r0x103B,W
                                    1- 1161     	BANKSEL	r0x103A
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1162     	SUBAR	r0x103A,W
     0009 0803                      1- 1163     	BTRSS	STATUS,0
                                    1- 1164     	MGOTO	_00541_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1165     	BANKSEL	r0x103B
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1166     	INCR	r0x103B,F
                                    1- 1167     	MGOTO	_00539_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1168     _00541_DS_:
                                    1- 1169     	.line	837, "main.c"; 	}
                                    1- 1170     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1171     ; exit point of _delay
                                    1- 1173     ;***
                                    1- 1174     ;  pBlock Stats: dbName = C
                                    1- 1175     ;***
                                    1- 1176     ;has an exit
                                    1- 1177     ;; Starting pCode block
                                    1- 1178     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1180     _F_wait_eoc:
                                    1- 1181     ; 2 exit points
     0000                           1- 1182     _00532_DS_:
                                    1- 1183     	.line	828, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1184     	BTRSS	_ADMDbits,5
                                    1- 1185     	MGOTO	_00532_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1186     	.line	830, "main.c"; 	}
                                    1- 1187     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1188     ; exit point of _F_wait_eoc
                                    1- 1190     ;***
                                    1- 1191     ;  pBlock Stats: dbName = C
                                    1- 1192     ;***
                                    1- 1193     ;has an exit
                                    1- 1194     ;functions called:
                                    1- 1195     ;   _F_wait_eoc
                                    1- 1196     ;   _F_wait_eoc
                                    1- 1197     ;6 compiler assigned registers:
                                    1- 1198     ;   r0x103C
                                    1- 1199     ;   r0x103D
                                    1- 1200     ;   r0x103E
                                    1- 1201     ;   r0x103F
                                    1- 1202     ;   r0x1040
                                    1- 1203     ;   r0x1041
                                    1- 1204     ;; Starting pCode block
                                    1- 1205     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1207     ;local variable name mapping:
     0000                           1- 1210     _F_Quarter_VDD_Convert:
                                    1- 1211     ; 2 exit points
                                    1- 1212     	.line	813, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1213     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1214     	MOVAR	r0x103C
                                    1- 1215     	.line	816, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1- 1216     	MOVIA	0x9b
     0003 00rr                      1- 1217     	MOVAR	_ADMD
                                    1- 1218     	.line	817, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1219     	MOVIA	0x01
                                    1- 1220     	BANKSEL	r0x103D
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1221     	MOVAR	r0x103D
     0007                           1- 1222     _00525_DS_:
                                    1- 1223     	BANKSEL	r0x103D
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1224     	MOVR	r0x103D,W
                                    1- 1225     	BANKSEL	r0x103C
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1226     	SUBAR	r0x103C,W
     000B 0803                      1- 1227     	BTRSS	STATUS,0
                                    1- 1228     	MGOTO	_00527_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1229     	.line	819, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1230     	BSR	_ADMDbits,6
                                    1- 1231     	.line	820, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1232     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1233     	.line	821, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1234     	MOVIA	0x0f
     0010 10rr                      1- 1235     	ANDAR	_ADR,W
                                    1- 1236     ;;3	MOVAR	r0x103E
                                    1- 1237     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1238     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1239     	.line	822, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1240     	MOVR	_ADD,W
                                    1- 1241     	BANKSEL	r0x103E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1242     	MOVAR	r0x103E
                                    1- 1243     ;;1	CLRR	r0x103F
                                    1- 1244     ;;101	MOVR	r0x103E,W
                                    1- 1245     ;;99	MOVAR	r0x1040
     0016 2100                      1- 1246     	MOVIA	0x00
                                    1- 1247     	BANKSEL	r0x1041
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1248     	MOVAR	r0x1041
                                    1- 1249     ;;100	MOVR	r0x1040,W
                                    1- 1250     	BANKSEL	r0x103E
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1251     	MOVR	r0x103E,W
                                    1- 1252     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1253     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1254     	BANKSEL	r0x1041
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1255     	MOVR	r0x1041,W
     001F 0C03                      1- 1256     	BTRSC	STATUS,0
     0020 05rr                      1- 1257     	INCR	r0x1041,W
     0021 0D03                      1- 1258     	BTRSC	STATUS,2
                                    1- 1259     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1260     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1261     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1262     _00001_DS_:
                                    1- 1263     	.line	817, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1264     	BANKSEL	r0x103D
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1265     	INCR	r0x103D,F
                                    1- 1266     	MGOTO	_00525_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1267     _00527_DS_:
                                    1- 1268     	.line	824, "main.c"; 	}
                                    1- 1269     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1270     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1272     ;***
                                    1- 1273     ;  pBlock Stats: dbName = C
                                    1- 1274     ;***
                                    1- 1275     ;has an exit
                                    1- 1276     ;functions called:
                                    1- 1277     ;   _F_Quarter_VDD_Convert
                                    1- 1278     ;   _F_Quarter_VDD_Convert
                                    1- 1279     ;6 compiler assigned registers:
                                    1- 1280     ;   r0x1042
                                    1- 1281     ;   r0x1043
                                    1- 1282     ;   r0x1044
                                    1- 1283     ;   r0x1045
                                    1- 1284     ;   r0x1046
                                    1- 1285     ;   r0x1047
                                    1- 1286     ;; Starting pCode block
                                    1- 1287     .segment "code"; module=main, function=_checkBat
                                    1- 1289     ;local variable name mapping:
     0000                           1- 1292     _checkBat:
                                    1- 1293     ; 2 exit points
                                    1- 1294     	.line	697, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1295     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1296     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1297     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1298     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1299     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1300     	.line	698, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1301     	MOVIA	0x08
                                    1- 1302     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1303     	.line	699, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1304     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1305     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1306     	ANDIA	0xf0
     000A 00rr                      1- 1307     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1308     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1309     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1310     	ANDIA	0x0f
     000E 11rr                      1- 1311     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1312     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1313     	.line	700, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1314     	MOVIA	0xf0
                                    1- 1315     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1316     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1317     	.line	701, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1318     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1319     	BANKSEL	r0x1044
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1320     	MOVAR	r0x1044
                                    1- 1321     	BANKSEL	r0x1042
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1322     	MOVAR	r0x1042
                                    1- 1323     	BANKSEL	r0x1043
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1324     	CLRR	r0x1043
                                    1- 1325     ;;104	MOVR	r0x1042,W
     001A 2100                      1- 1326     	MOVIA	0x00
                                    1- 1327     	BANKSEL	r0x1045
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1328     	MOVAR	r0x1045
                                    1- 1329     	BANKSEL	r0x1044
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1330     	MOVR	r0x1044,W
                                    1- 1331     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1332     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1333     	BANKSEL	r0x1045
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1334     	MOVR	r0x1045,W
     0023 0C03                      1- 1335     	BTRSC	STATUS,0
     0024 05rr                      1- 1336     	INCR	r0x1045,W
     0025 0D03                      1- 1337     	BTRSC	STATUS,2
                                    1- 1338     	MGOTO	_00002_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1339     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1340     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1341     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1342     _00002_DS_:
                                    1- 1343     	.line	702, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1344     	BCR	STATUS,0
                                    1- 1345     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1346     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1347     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1348     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1349     	BCR	STATUS,0
     002E 13rr                      1- 1350     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1351     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1352     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1353     	BCR	STATUS,0
     0031 13rr                      1- 1354     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1355     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1356     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1357     ;;unsigned compare: left >= lit (0x835=2101), size=2
                                    1- 1358     	.line	703, "main.c"; 	if(R_Quarter_VDD_DATA > 2100)
     0033 2108                      1- 1359     	MOVIA	0x08
     0034 04rr                      1- 1360     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1361     	BTRSS	STATUS,2
                                    1- 1362     	MGOTO	_00501_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 2135                      1- 1363     	MOVIA	0x35
     0038 04rr                      1- 1364     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1365     _00501_DS_:
     0039 0803                      1- 1366     	BTRSS	STATUS,0
                                    1- 1367     	MGOTO	_00434_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1368     	.line	705, "main.c"; 	if(++fullTime > 200)
                                    1- 1369     	BANKSEL	_fullTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 1370     	INCR	_fullTime,F
                                    1- 1371     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1372     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003D 21C9                      1- 1373     	MOVIA	0xc9
     003E 04rr                      1- 1374     	SUBAR	_fullTime,W
     003F 0803                      1- 1375     	BTRSS	STATUS,0
                                    1- 1376     	MGOTO	_00436_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1377     	.line	707, "main.c"; 	fullFlag = 1;
     0041 2101                      1- 1378     	MOVIA	0x01
                                    1- 1379     	BANKSEL	_fullFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1380     	MOVAR	_fullFlag
                                    1- 1381     	.line	708, "main.c"; 	pwStep = 100;
     0044 2164                      1- 1382     	MOVIA	0x64
                                    1- 1383     	BANKSEL	_pwStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1384     	MOVAR	_pwStep
                                    1- 1385     	MGOTO	_00436_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1386     ;;unsigned compare: left < lit (0x60E=1550), size=2
     0048                           1- 1387     _00434_DS_:
                                    1- 1388     	.line	711, "main.c"; 	else if(R_Quarter_VDD_DATA < 1550)
     0048 2106                      1- 1389     	MOVIA	0x06
                                    1- 1390     	BANKSEL	_R_Quarter_VDD_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1391     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     004B 0903                      1- 1392     	BTRSS	STATUS,2
                                    1- 1393     	MGOTO	_00503_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 210E                      1- 1394     	MOVIA	0x0e
     004E 04rr                      1- 1395     	SUBAR	_R_Quarter_VDD_DATA,W
     004F                           1- 1396     _00503_DS_:
     004F 0C03                      1- 1397     	BTRSC	STATUS,0
                                    1- 1398     	MGOTO	_00431_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1399     	.line	713, "main.c"; 	pwStep = 0;
                                    1- 1400     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 1401     	CLRR	_pwStep
                                    1- 1402     	.line	714, "main.c"; 	fullTime = 0;
                                    1- 1403     	BANKSEL	_fullTime
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1404     	CLRR	_fullTime
                                    1- 1405     	.line	715, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 1406     	BANKSEL	_PORTA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 0Err                      1- 1407     	BTRSC	_PORTA,5
                                    1- 1408     	MGOTO	_00436_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1409     	.line	717, "main.c"; 	pwFlag = 0;		//关机
                                    1- 1410     	BANKSEL	_pwFlag
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1411     	CLRR	_pwFlag
                                    1- 1412     	.line	718, "main.c"; 	workStep = 0;
                                    1- 1413     	BANKSEL	_workStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1- 1414     	CLRR	_workStep
                                    1- 1415     	.line	719, "main.c"; 	pwShowTime = 0;
                                    1- 1416     	BANKSEL	_pwShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 1417     	CLRR	_pwShowTime
                                    1- 1418     	.line	720, "main.c"; 	stepShowTime = 0;
                                    1- 1419     	BANKSEL	_stepShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1420     	CLRR	_stepShowTime
                                    1- 1421     	.line	721, "main.c"; 	offShowTime = 0;
                                    1- 1422     	BANKSEL	_offShowTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1423     	CLRR	_offShowTime
                                    1- 1424     	MGOTO	_00436_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 1425     _00431_DS_:
                                    1- 1426     	.line	727, "main.c"; 	fullTime = 0;
                                    1- 1427     	BANKSEL	_fullTime
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 02rr                      1- 1428     	CLRR	_fullTime
                                    1- 1429     ;;unsigned compare: left < lit (0x802=2050), size=2
                                    1- 1430     	.line	728, "main.c"; 	if(R_Quarter_VDD_DATA >= 2050)
     0065 2108                      1- 1431     	MOVIA	0x08
                                    1- 1432     	BANKSEL	_R_Quarter_VDD_DATA
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 1433     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0068 0903                      1- 1434     	BTRSS	STATUS,2
                                    1- 1435     	MGOTO	_00504_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 2102                      1- 1436     	MOVIA	0x02
     006B 04rr                      1- 1437     	SUBAR	_R_Quarter_VDD_DATA,W
     006C                           1- 1438     _00504_DS_:
     006C 0803                      1- 1439     	BTRSS	STATUS,0
                                    1- 1440     	MGOTO	_00396_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1441     	.line	730, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 2050) + 75;
     006E 2149                      1- 1442     	MOVIA	0x49
                                    1- 1443     	BANKSEL	_R_Quarter_VDD_DATA
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 03rr                      1- 1444     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1445     	BANKSEL	r0x1042
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1446     	MOVAR	r0x1042
     0073 21F8                      1- 1447     	MOVIA	0xf8
                                    1- 1448     	BANKSEL	r0x1043
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1449     	MOVAR	r0x1043
                                    1- 1450     	BANKSEL	_R_Quarter_VDD_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 1451     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0078 0C03                      1- 1452     	BTRSC	STATUS,0
     0079 05rr                      1- 1453     	INCR	(_R_Quarter_VDD_DATA + 1),W
     007A 0D03                      1- 1454     	BTRSC	STATUS,2
                                    1- 1455     	MGOTO	_00003_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1456     	BANKSEL	r0x1043
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 03rr                      1- 1457     	ADDAR	r0x1043,F
     007E                           1- 1458     _00003_DS_:
                                    1- 1459     	MGOTO	_00397_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1460     ;;unsigned compare: left < lit (0x7CE=1998), size=2
     007F                           1- 1461     _00396_DS_:
                                    1- 1462     	.line	732, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1998)
     007F 2107                      1- 1463     	MOVIA	0x07
                                    1- 1464     	BANKSEL	_R_Quarter_VDD_DATA
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1- 1465     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0082 0903                      1- 1466     	BTRSS	STATUS,2
                                    1- 1467     	MGOTO	_00505_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084 21CE                      1- 1468     	MOVIA	0xce
     0085 04rr                      1- 1469     	SUBAR	_R_Quarter_VDD_DATA,W
     0086                           1- 1470     _00505_DS_:
     0086 0803                      1- 1471     	BTRSS	STATUS,0
                                    1- 1472     	MGOTO	_00393_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1473     	.line	734, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1998)/2 + 49;
     0088 2132                      1- 1474     	MOVIA	0x32
                                    1- 1475     	BANKSEL	_R_Quarter_VDD_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 03rr                      1- 1476     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1477     	BANKSEL	r0x1044
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1478     	MOVAR	r0x1044
     008D 21F8                      1- 1479     	MOVIA	0xf8
                                    1- 1480     	BANKSEL	r0x1045
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1481     	MOVAR	r0x1045
                                    1- 1482     	BANKSEL	_R_Quarter_VDD_DATA
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 01rr                      1- 1483     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0092 0C03                      1- 1484     	BTRSC	STATUS,0
     0093 05rr                      1- 1485     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0094 0D03                      1- 1486     	BTRSC	STATUS,2
                                    1- 1487     	MGOTO	_00004_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1488     	BANKSEL	r0x1045
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 03rr                      1- 1489     	ADDAR	r0x1045,F
                                    1- 1490     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0098                           1- 1491     _00004_DS_:
     0098 1C03                      1- 1492     	BCR	STATUS,0
                                    1- 1493     	BANKSEL	r0x1045
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 13rr                      1- 1494     	RRR	r0x1045,W
                                    1- 1495     	BANKSEL	r0x1046
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 00rr                      1- 1496     	MOVAR	r0x1046
                                    1- 1497     	BANKSEL	r0x1044
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 13rr                      1- 1498     	RRR	r0x1044,W
                                    1- 1499     	BANKSEL	r0x1047
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 1500     	MOVAR	r0x1047
     00A1 2131                      1- 1501     	MOVIA	0x31
     00A2 03rr                      1- 1502     	ADDAR	r0x1047,W
                                    1- 1503     	BANKSEL	r0x1042
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 00rr                      1- 1504     	MOVAR	r0x1042
                                    1- 1505     	BANKSEL	r0x1043
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 02rr                      1- 1506     	CLRR	r0x1043
     00A7 14rr                      1- 1507     	RLR	r0x1043,F
                                    1- 1508     	BANKSEL	r0x1046
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 1509     	MOVR	r0x1046,W
                                    1- 1510     	BANKSEL	r0x1043
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 03rr                      1- 1511     	ADDAR	r0x1043,F
                                    1- 1512     	MGOTO	_00397_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1513     ;;unsigned compare: left < lit (0x75E=1886), size=2
     00AD                           1- 1514     _00393_DS_:
                                    1- 1515     	.line	736, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1886)
     00AD 2107                      1- 1516     	MOVIA	0x07
                                    1- 1517     	BANKSEL	_R_Quarter_VDD_DATA
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 04rr                      1- 1518     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00B0 0903                      1- 1519     	BTRSS	STATUS,2
                                    1- 1520     	MGOTO	_00506_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2 215E                      1- 1521     	MOVIA	0x5e
     00B3 04rr                      1- 1522     	SUBAR	_R_Quarter_VDD_DATA,W
     00B4                           1- 1523     _00506_DS_:
     00B4 0803                      1- 1524     	BTRSS	STATUS,0
                                    1- 1525     	MGOTO	_00390_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1526     	.line	738, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 1886)/4) + 21;
     00B6 21A2                      1- 1527     	MOVIA	0xa2
                                    1- 1528     	BANKSEL	_R_Quarter_VDD_DATA
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 03rr                      1- 1529     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1530     	BANKSEL	r0x1044
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 1531     	MOVAR	r0x1044
     00BB 21F8                      1- 1532     	MOVIA	0xf8
                                    1- 1533     	BANKSEL	r0x1045
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 1534     	MOVAR	r0x1045
                                    1- 1535     	BANKSEL	_R_Quarter_VDD_DATA
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 01rr                      1- 1536     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00C0 0C03                      1- 1537     	BTRSC	STATUS,0
     00C1 05rr                      1- 1538     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00C2 0D03                      1- 1539     	BTRSC	STATUS,2
                                    1- 1540     	MGOTO	_00005_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1541     	BANKSEL	r0x1045
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 03rr                      1- 1542     	ADDAR	r0x1045,F
                                    1- 1543     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00C6                           1- 1544     _00005_DS_:
     00C6 1C03                      1- 1545     	BCR	STATUS,0
                                    1- 1546     	BANKSEL	r0x1045
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 13rr                      1- 1547     	RRR	r0x1045,W
                                    1- 1548     	BANKSEL	r0x1046
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 1549     	MOVAR	r0x1046
                                    1- 1550     	BANKSEL	r0x1044
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 13rr                      1- 1551     	RRR	r0x1044,W
                                    1- 1552     	BANKSEL	r0x1047
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 00rr                      1- 1553     	MOVAR	r0x1047
                                    1- 1554     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00CF 1C03                      1- 1555     	BCR	STATUS,0
                                    1- 1556     	BANKSEL	r0x1046
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 13rr                      1- 1557     	RRR	r0x1046,F
                                    1- 1558     	BANKSEL	r0x1047
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 13rr                      1- 1559     	RRR	r0x1047,F
     00D4 2115                      1- 1560     	MOVIA	0x15
     00D5 03rr                      1- 1561     	ADDAR	r0x1047,W
                                    1- 1562     	BANKSEL	r0x1042
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 00rr                      1- 1563     	MOVAR	r0x1042
                                    1- 1564     	BANKSEL	r0x1043
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 02rr                      1- 1565     	CLRR	r0x1043
     00DA 14rr                      1- 1566     	RLR	r0x1043,F
                                    1- 1567     	BANKSEL	r0x1046
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 01rr                      1- 1568     	MOVR	r0x1046,W
                                    1- 1569     	BANKSEL	r0x1043
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 03rr                      1- 1570     	ADDAR	r0x1043,F
                                    1- 1571     	MGOTO	_00397_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1572     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1573     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     00E0                           1- 1574     _00390_DS_:
                                    1- 1575     	.line	740, "main.c"; 	else if(R_Quarter_VDD_DATA > 1550)
     00E0 2106                      1- 1576     	MOVIA	0x06
                                    1- 1577     	BANKSEL	_R_Quarter_VDD_DATA
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 04rr                      1- 1578     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00E3 0903                      1- 1579     	BTRSS	STATUS,2
                                    1- 1580     	MGOTO	_00507_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
     00E5 210F                      1- 1581     	MOVIA	0x0f
     00E6 04rr                      1- 1582     	SUBAR	_R_Quarter_VDD_DATA,W
     00E7                           1- 1583     _00507_DS_:
     00E7 0803                      1- 1584     	BTRSS	STATUS,0
                                    1- 1585     	MGOTO	_00387_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1586     	.line	742, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1550)/16;
     00E9 21F2                      1- 1587     	MOVIA	0xf2
                                    1- 1588     	BANKSEL	_R_Quarter_VDD_DATA
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 03rr                      1- 1589     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1590     	BANKSEL	r0x1044
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1- 1591     	MOVAR	r0x1044
     00EE 21F9                      1- 1592     	MOVIA	0xf9
                                    1- 1593     	BANKSEL	r0x1045
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 00rr                      1- 1594     	MOVAR	r0x1045
                                    1- 1595     	BANKSEL	_R_Quarter_VDD_DATA
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 1596     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00F3 0C03                      1- 1597     	BTRSC	STATUS,0
     00F4 05rr                      1- 1598     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00F5 0D03                      1- 1599     	BTRSC	STATUS,2
                                    1- 1600     	MGOTO	_00006_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1601     	BANKSEL	r0x1045
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 03rr                      1- 1602     	ADDAR	r0x1045,F
     00F9                           1- 1603     _00006_DS_:
                                    1- 1604     	BANKSEL	r0x1044
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 15rr                      1- 1605     	SWAPR	r0x1044,W
     00FB 220F                      1- 1606     	ANDIA	0x0f
                                    1- 1607     	BANKSEL	r0x1042
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 00rr                      1- 1608     	MOVAR	r0x1042
                                    1- 1609     	BANKSEL	r0x1045
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 15rr                      1- 1610     	SWAPR	r0x1045,W
                                    1- 1611     	BANKSEL	r0x1043
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 00rr                      1- 1612     	MOVAR	r0x1043
     0102 22F0                      1- 1613     	ANDIA	0xf0
                                    1- 1614     	BANKSEL	r0x1042
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 11rr                      1- 1615     	IORAR	r0x1042,F
                                    1- 1616     	BANKSEL	r0x1043
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 12rr                      1- 1617     	XORAR	r0x1043,F
                                    1- 1618     	MGOTO	_00397_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
     0108                           1- 1619     _00387_DS_:
                                    1- 1620     	.line	746, "main.c"; 	tempValue = 0;
                                    1- 1621     	BANKSEL	r0x1042
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 02rr                      1- 1622     	CLRR	r0x1042
                                    1- 1623     	BANKSEL	r0x1043
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 02rr                      1- 1624     	CLRR	r0x1043
     010C                           1- 1625     _00397_DS_:
                                    1- 1626     	.line	748, "main.c"; 	if(0x20 & PORTA)
                                    1- 1627     	BANKSEL	_PORTA
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 0Arr                      1- 1628     	BTRSS	_PORTA,5
                                    1- 1629     	MGOTO	_00428_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1630     ;;unsigned compare: left < lit (0x5=5), size=2
                                    1- 1631     	.line	752, "main.c"; 	if(tempValue < 5)
     010F 2100                      1- 1632     	MOVIA	0x00
                                    1- 1633     	BANKSEL	r0x1043
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 04rr                      1- 1634     	SUBAR	r0x1043,W
     0112 0903                      1- 1635     	BTRSS	STATUS,2
                                    1- 1636     	MGOTO	_00508_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
     0114 2105                      1- 1637     	MOVIA	0x05
                                    1- 1638     	BANKSEL	r0x1042
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 04rr                      1- 1639     	SUBAR	r0x1042,W
     0117                           1- 1640     _00508_DS_:
     0117 0C03                      1- 1641     	BTRSC	STATUS,0
                                    1- 1642     	MGOTO	_00413_DS_
     0118 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1643     	.line	754, "main.c"; 	tempValue = 1;
     0119 2101                      1- 1644     	MOVIA	0x01
                                    1- 1645     	BANKSEL	r0x1042
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 00rr                      1- 1646     	MOVAR	r0x1042
                                    1- 1647     	BANKSEL	r0x1043
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 02rr                      1- 1648     	CLRR	r0x1043
                                    1- 1649     	MGOTO	_00011_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1650     ;;unsigned compare: left < lit (0x14=20), size=2
     011F                           1- 1651     _00413_DS_:
                                    1- 1652     	.line	756, "main.c"; 	else if(tempValue < 20)
     011F 2100                      1- 1653     	MOVIA	0x00
                                    1- 1654     	BANKSEL	r0x1043
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 04rr                      1- 1655     	SUBAR	r0x1043,W
     0122 0903                      1- 1656     	BTRSS	STATUS,2
                                    1- 1657     	MGOTO	_00509_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
     0124 2114                      1- 1658     	MOVIA	0x14
                                    1- 1659     	BANKSEL	r0x1042
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 04rr                      1- 1660     	SUBAR	r0x1042,W
     0127                           1- 1661     _00509_DS_:
     0127 0C03                      1- 1662     	BTRSC	STATUS,0
                                    1- 1663     	MGOTO	_00410_DS_
     0128 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1664     	.line	758, "main.c"; 	tempValue = tempValue - 5;
     0129 21FB                      1- 1665     	MOVIA	0xfb
                                    1- 1666     	BANKSEL	r0x1042
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 03rr                      1- 1667     	ADDAR	r0x1042,F
     012C 0C03                      1- 1668     	BTRSC	STATUS,0
                                    1- 1669     	MGOTO	_00007_DS_
     012D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1670     	BANKSEL	r0x1043
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 06rr                      1- 1671     	DECR	r0x1043,F
     0130                           1- 1672     _00007_DS_:
                                    1- 1673     	MGOTO	_00011_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1674     ;;unsigned compare: left < lit (0x1E=30), size=2
     0131                           1- 1675     _00410_DS_:
                                    1- 1676     	.line	760, "main.c"; 	else if(tempValue < 30)
     0131 2100                      1- 1677     	MOVIA	0x00
                                    1- 1678     	BANKSEL	r0x1043
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 04rr                      1- 1679     	SUBAR	r0x1043,W
     0134 0903                      1- 1680     	BTRSS	STATUS,2
                                    1- 1681     	MGOTO	_00510_DS_
     0135 3rrr                      3-   63 m1      LGOTO rom_address
     0136 211E                      1- 1682     	MOVIA	0x1e
                                    1- 1683     	BANKSEL	r0x1042
     0137 rrrr                      3-  110 m1      .banksel ram_address
     0138 04rr                      1- 1684     	SUBAR	r0x1042,W
     0139                           1- 1685     _00510_DS_:
     0139 0C03                      1- 1686     	BTRSC	STATUS,0
                                    1- 1687     	MGOTO	_00407_DS_
     013A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1688     	.line	762, "main.c"; 	tempValue = tempValue - 10;
     013B 21F6                      1- 1689     	MOVIA	0xf6
                                    1- 1690     	BANKSEL	r0x1042
     013C rrrr                      3-  110 m1      .banksel ram_address
     013D 03rr                      1- 1691     	ADDAR	r0x1042,F
     013E 0C03                      1- 1692     	BTRSC	STATUS,0
                                    1- 1693     	MGOTO	_00008_DS_
     013F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1694     	BANKSEL	r0x1043
     0140 rrrr                      3-  110 m1      .banksel ram_address
     0141 06rr                      1- 1695     	DECR	r0x1043,F
     0142                           1- 1696     _00008_DS_:
                                    1- 1697     	MGOTO	_00011_DS_
     0142 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1698     ;;unsigned compare: left < lit (0x28=40), size=2
     0143                           1- 1699     _00407_DS_:
                                    1- 1700     	.line	764, "main.c"; 	else if(tempValue < 40)
     0143 2100                      1- 1701     	MOVIA	0x00
                                    1- 1702     	BANKSEL	r0x1043
     0144 rrrr                      3-  110 m1      .banksel ram_address
     0145 04rr                      1- 1703     	SUBAR	r0x1043,W
     0146 0903                      1- 1704     	BTRSS	STATUS,2
                                    1- 1705     	MGOTO	_00511_DS_
     0147 3rrr                      3-   63 m1      LGOTO rom_address
     0148 2128                      1- 1706     	MOVIA	0x28
                                    1- 1707     	BANKSEL	r0x1042
     0149 rrrr                      3-  110 m1      .banksel ram_address
     014A 04rr                      1- 1708     	SUBAR	r0x1042,W
     014B                           1- 1709     _00511_DS_:
     014B 0C03                      1- 1710     	BTRSC	STATUS,0
                                    1- 1711     	MGOTO	_00404_DS_
     014C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1712     	.line	766, "main.c"; 	tempValue = tempValue - 15;
     014D 21F1                      1- 1713     	MOVIA	0xf1
                                    1- 1714     	BANKSEL	r0x1042
     014E rrrr                      3-  110 m1      .banksel ram_address
     014F 03rr                      1- 1715     	ADDAR	r0x1042,F
     0150 0C03                      1- 1716     	BTRSC	STATUS,0
                                    1- 1717     	MGOTO	_00009_DS_
     0151 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1718     	BANKSEL	r0x1043
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 06rr                      1- 1719     	DECR	r0x1043,F
     0154                           1- 1720     _00009_DS_:
                                    1- 1721     	MGOTO	_00011_DS_
     0154 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1722     ;;unsigned compare: left < lit (0x32=50), size=2
     0155                           1- 1723     _00404_DS_:
                                    1- 1724     	.line	768, "main.c"; 	else if(tempValue < 50)
     0155 2100                      1- 1725     	MOVIA	0x00
                                    1- 1726     	BANKSEL	r0x1043
     0156 rrrr                      3-  110 m1      .banksel ram_address
     0157 04rr                      1- 1727     	SUBAR	r0x1043,W
     0158 0903                      1- 1728     	BTRSS	STATUS,2
                                    1- 1729     	MGOTO	_00512_DS_
     0159 3rrr                      3-   63 m1      LGOTO rom_address
     015A 2132                      1- 1730     	MOVIA	0x32
                                    1- 1731     	BANKSEL	r0x1042
     015B rrrr                      3-  110 m1      .banksel ram_address
     015C 04rr                      1- 1732     	SUBAR	r0x1042,W
     015D                           1- 1733     _00512_DS_:
     015D 0C03                      1- 1734     	BTRSC	STATUS,0
                                    1- 1735     	MGOTO	_00401_DS_
     015E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1736     	.line	770, "main.c"; 	tempValue = tempValue - 21;
     015F 21EB                      1- 1737     	MOVIA	0xeb
                                    1- 1738     	BANKSEL	r0x1042
     0160 rrrr                      3-  110 m1      .banksel ram_address
     0161 03rr                      1- 1739     	ADDAR	r0x1042,F
     0162 0C03                      1- 1740     	BTRSC	STATUS,0
                                    1- 1741     	MGOTO	_00010_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1742     	BANKSEL	r0x1043
     0164 rrrr                      3-  110 m1      .banksel ram_address
     0165 06rr                      1- 1743     	DECR	r0x1043,F
     0166                           1- 1744     _00010_DS_:
                                    1- 1745     	MGOTO	_00011_DS_
     0166 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1746     ;;unsigned compare: left < lit (0x78=120), size=2
     0167                           1- 1747     _00401_DS_:
                                    1- 1748     	.line	772, "main.c"; 	else if(tempValue < 120)
     0167 2100                      1- 1749     	MOVIA	0x00
                                    1- 1750     	BANKSEL	r0x1043
     0168 rrrr                      3-  110 m1      .banksel ram_address
     0169 04rr                      1- 1751     	SUBAR	r0x1043,W
     016A 0903                      1- 1752     	BTRSS	STATUS,2
                                    1- 1753     	MGOTO	_00513_DS_
     016B 3rrr                      3-   63 m1      LGOTO rom_address
     016C 2178                      1- 1754     	MOVIA	0x78
                                    1- 1755     	BANKSEL	r0x1042
     016D rrrr                      3-  110 m1      .banksel ram_address
     016E 04rr                      1- 1756     	SUBAR	r0x1042,W
     016F                           1- 1757     _00513_DS_:
     016F 0C03                      1- 1758     	BTRSC	STATUS,0
                                    1- 1759     	MGOTO	_00011_DS_
     0170 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1760     	.line	774, "main.c"; 	tempValue = tempValue - 23;
     0171 21E9                      1- 1761     	MOVIA	0xe9
                                    1- 1762     	BANKSEL	r0x1042
     0172 rrrr                      3-  110 m1      .banksel ram_address
     0173 03rr                      1- 1763     	ADDAR	r0x1042,F
     0174 0C03                      1- 1764     	BTRSC	STATUS,0
                                    1- 1765     	MGOTO	_00011_DS_
     0175 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1766     	BANKSEL	r0x1043
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 06rr                      1- 1767     	DECR	r0x1043,F
                                    1- 1768     ;;unsigned compare: left < lit (0x64=100), size=2
     0178                           1- 1769     _00011_DS_:
                                    1- 1770     	.line	776, "main.c"; 	if(tempValue >= 100)
     0178 2100                      1- 1771     	MOVIA	0x00
                                    1- 1772     	BANKSEL	r0x1043
     0179 rrrr                      3-  110 m1      .banksel ram_address
     017A 04rr                      1- 1773     	SUBAR	r0x1043,W
     017B 0903                      1- 1774     	BTRSS	STATUS,2
                                    1- 1775     	MGOTO	_00514_DS_
     017C 3rrr                      3-   63 m1      LGOTO rom_address
     017D 2164                      1- 1776     	MOVIA	0x64
                                    1- 1777     	BANKSEL	r0x1042
     017E rrrr                      3-  110 m1      .banksel ram_address
     017F 04rr                      1- 1778     	SUBAR	r0x1042,W
     0180                           1- 1779     _00514_DS_:
     0180 0803                      1- 1780     	BTRSS	STATUS,0
                                    1- 1781     	MGOTO	_00416_DS_
     0181 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1782     	.line	778, "main.c"; 	tempValue = 100;
     0182 2164                      1- 1783     	MOVIA	0x64
                                    1- 1784     	BANKSEL	r0x1042
     0183 rrrr                      3-  110 m1      .banksel ram_address
     0184 00rr                      1- 1785     	MOVAR	r0x1042
                                    1- 1786     	BANKSEL	r0x1043
     0185 rrrr                      3-  110 m1      .banksel ram_address
     0186 02rr                      1- 1787     	CLRR	r0x1043
     0187                           1- 1788     _00416_DS_:
                                    1- 1789     	.line	781, "main.c"; 	if(pwStep < tempValue)
                                    1- 1790     	BANKSEL	_pwStep
     0187 rrrr                      3-  110 m1      .banksel ram_address
     0188 01rr                      1- 1791     	MOVR	_pwStep,W
                                    1- 1792     	BANKSEL	r0x1044
     0189 rrrr                      3-  110 m1      .banksel ram_address
     018A 00rr                      1- 1793     	MOVAR	r0x1044
                                    1- 1794     	BANKSEL	r0x1045
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 02rr                      1- 1795     	CLRR	r0x1045
                                    1- 1796     	BANKSEL	r0x1043
     018D rrrr                      3-  110 m1      .banksel ram_address
     018E 01rr                      1- 1797     	MOVR	r0x1043,W
                                    1- 1798     	BANKSEL	r0x1045
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 04rr                      1- 1799     	SUBAR	r0x1045,W
     0191 0903                      1- 1800     	BTRSS	STATUS,2
                                    1- 1801     	MGOTO	_00515_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1802     	BANKSEL	r0x1042
     0193 rrrr                      3-  110 m1      .banksel ram_address
     0194 01rr                      1- 1803     	MOVR	r0x1042,W
                                    1- 1804     	BANKSEL	r0x1044
     0195 rrrr                      3-  110 m1      .banksel ram_address
     0196 04rr                      1- 1805     	SUBAR	r0x1044,W
     0197                           1- 1806     _00515_DS_:
     0197 0C03                      1- 1807     	BTRSC	STATUS,0
                                    1- 1808     	MGOTO	_00436_DS_
     0198 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1809     	.line	783, "main.c"; 	pwStep++;
                                    1- 1810     	BANKSEL	_pwStep
     0199 rrrr                      3-  110 m1      .banksel ram_address
     019A 05rr                      1- 1811     	INCR	_pwStep,F
                                    1- 1812     	MGOTO	_00436_DS_
     019B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1813     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1814     ;;unsigned compare: left >= lit (0x65=101), size=2
     019C                           1- 1815     _00428_DS_:
                                    1- 1816     	.line	790, "main.c"; 	if(tempValue > 100)
     019C 2100                      1- 1817     	MOVIA	0x00
                                    1- 1818     	BANKSEL	r0x1043
     019D rrrr                      3-  110 m1      .banksel ram_address
     019E 04rr                      1- 1819     	SUBAR	r0x1043,W
     019F 0903                      1- 1820     	BTRSS	STATUS,2
                                    1- 1821     	MGOTO	_00516_DS_
     01A0 3rrr                      3-   63 m1      LGOTO rom_address
     01A1 2165                      1- 1822     	MOVIA	0x65
                                    1- 1823     	BANKSEL	r0x1042
     01A2 rrrr                      3-  110 m1      .banksel ram_address
     01A3 04rr                      1- 1824     	SUBAR	r0x1042,W
     01A4                           1- 1825     _00516_DS_:
     01A4 0803                      1- 1826     	BTRSS	STATUS,0
                                    1- 1827     	MGOTO	_00420_DS_
     01A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1828     	.line	791, "main.c"; 	tempValue = 100;
     01A6 2164                      1- 1829     	MOVIA	0x64
                                    1- 1830     	BANKSEL	r0x1042
     01A7 rrrr                      3-  110 m1      .banksel ram_address
     01A8 00rr                      1- 1831     	MOVAR	r0x1042
                                    1- 1832     	BANKSEL	r0x1043
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 02rr                      1- 1833     	CLRR	r0x1043
     01AB                           1- 1834     _00420_DS_:
                                    1- 1835     	.line	792, "main.c"; 	if(pwStep == 0)
                                    1- 1836     	BANKSEL	_pwStep
     01AB rrrr                      3-  110 m1      .banksel ram_address
     01AC 01rr                      1- 1837     	MOVR	_pwStep,W
     01AD 0903                      1- 1838     	BTRSS	STATUS,2
                                    1- 1839     	MGOTO	_00422_DS_
     01AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1840     	.line	794, "main.c"; 	pwStep = tempValue;
                                    1- 1841     	BANKSEL	r0x1042
     01AF rrrr                      3-  110 m1      .banksel ram_address
     01B0 01rr                      1- 1842     	MOVR	r0x1042,W
                                    1- 1843     	BANKSEL	_pwStep
     01B1 rrrr                      3-  110 m1      .banksel ram_address
     01B2 00rr                      1- 1844     	MOVAR	_pwStep
     01B3                           1- 1845     _00422_DS_:
                                    1- 1846     	.line	796, "main.c"; 	if(pwStep > tempValue)
                                    1- 1847     	BANKSEL	_pwStep
     01B3 rrrr                      3-  110 m1      .banksel ram_address
     01B4 01rr                      1- 1848     	MOVR	_pwStep,W
                                    1- 1849     	BANKSEL	r0x1044
     01B5 rrrr                      3-  110 m1      .banksel ram_address
     01B6 00rr                      1- 1850     	MOVAR	r0x1044
                                    1- 1851     	BANKSEL	r0x1045
     01B7 rrrr                      3-  110 m1      .banksel ram_address
     01B8 02rr                      1- 1852     	CLRR	r0x1045
     01B9 2100                      1- 1853     	MOVIA	0x00
                                    1- 1854     	BANKSEL	r0x1043
     01BA rrrr                      3-  110 m1      .banksel ram_address
     01BB 04rr                      1- 1855     	SUBAR	r0x1043,W
     01BC 0903                      1- 1856     	BTRSS	STATUS,2
                                    1- 1857     	MGOTO	_00517_DS_
     01BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1858     	BANKSEL	r0x1044
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 01rr                      1- 1859     	MOVR	r0x1044,W
                                    1- 1860     	BANKSEL	r0x1042
     01C0 rrrr                      3-  110 m1      .banksel ram_address
     01C1 04rr                      1- 1861     	SUBAR	r0x1042,W
     01C2                           1- 1862     _00517_DS_:
     01C2 0C03                      1- 1863     	BTRSC	STATUS,0
                                    1- 1864     	MGOTO	_00436_DS_
     01C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1865     	.line	798, "main.c"; 	if(++count5s > 10)
                                    1- 1866     	BANKSEL	_count5s
     01C4 rrrr                      3-  110 m1      .banksel ram_address
     01C5 05rr                      1- 1867     	INCR	_count5s,F
     01C6 0D03                      1- 1868     	BTRSC	STATUS,2
     01C7 05rr                      1- 1869     	INCR	(_count5s + 1),F
                                    1- 1870     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1871     ;;unsigned compare: left >= lit (0xB=11), size=2
     01C8 2100                      1- 1872     	MOVIA	0x00
     01C9 04rr                      1- 1873     	SUBAR	(_count5s + 1),W
     01CA 0903                      1- 1874     	BTRSS	STATUS,2
                                    1- 1875     	MGOTO	_00518_DS_
     01CB 3rrr                      3-   63 m1      LGOTO rom_address
     01CC 210B                      1- 1876     	MOVIA	0x0b
     01CD 04rr                      1- 1877     	SUBAR	_count5s,W
     01CE                           1- 1878     _00518_DS_:
     01CE 0803                      1- 1879     	BTRSS	STATUS,0
                                    1- 1880     	MGOTO	_00436_DS_
     01CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1881     	.line	800, "main.c"; 	count5s = 0;
                                    1- 1882     	BANKSEL	_count5s
     01D0 rrrr                      3-  110 m1      .banksel ram_address
     01D1 02rr                      1- 1883     	CLRR	_count5s
     01D2 02rr                      1- 1884     	CLRR	(_count5s + 1)
                                    1- 1885     	.line	801, "main.c"; 	pwStep--;
                                    1- 1886     	BANKSEL	_pwStep
     01D3 rrrr                      3-  110 m1      .banksel ram_address
     01D4 06rr                      1- 1887     	DECR	_pwStep,F
     01D5                           1- 1888     _00436_DS_:
                                    1- 1889     	.line	809, "main.c"; 	}
                                    1- 1890     	RETURN	
     01D5 0010                      3-   40 m1      ret
                                    1- 1891     ; exit point of _checkBat
                                    1- 1893     ;***
                                    1- 1894     ;  pBlock Stats: dbName = C
                                    1- 1895     ;***
                                    1- 1896     ;has an exit
                                    1- 1897     ;functions called:
                                    1- 1898     ;   _delay
                                    1- 1899     ;   _delay
                                    1- 1900     ;; Starting pCode block
                                    1- 1901     .segment "code"; module=main, function=_initAD
     0000                           1- 1903     _initAD:
                                    1- 1904     ; 2 exit points
                                    1- 1905     	.line	669, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1906     	MOVIA	0x80
     0001 00rr                      1- 1907     	MOVAR	_ADMD
                                    1- 1908     	.line	674, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1909     	CLRR	_ADVREFH
                                    1- 1910     	.line	679, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1911     	MOVIA	0x10
     0004 00rr                      1- 1912     	MOVAR	_ADR
                                    1- 1913     	.line	683, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1914     	MOVIA	0x03
     0006 00rr                      1- 1915     	MOVAR	_ADCR
                                    1- 1916     	.line	690, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1917     	BSR	_ADMDbits,4
                                    1- 1918     	.line	691, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1919     	MOVIA	0x32
                                    1- 1920     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1921     	.line	692, "main.c"; 	}
                                    1- 1922     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1923     ; exit point of _initAD
                                    1- 1925     ;***
                                    1- 1926     ;  pBlock Stats: dbName = C
                                    1- 1927     ;***
                                    1- 1928     ;has an exit
                                    1- 1929     ;functions called:
                                    1- 1930     ;   _keyRead
                                    1- 1931     ;   _checkBat
                                    1- 1932     ;   _checkBat
                                    1- 1933     ;   _keyRead
                                    1- 1934     ;   _checkBat
                                    1- 1935     ;   _checkBat
                                    1- 1936     ;1 compiler assigned register :
                                    1- 1937     ;   r0x1049
                                    1- 1938     ;; Starting pCode block
                                    1- 1939     .segment "code"; module=main, function=_keyCtr
                                    1- 1941     ;local variable name mapping:
     0000                           1- 1943     _keyCtr:
                                    1- 1944     ; 2 exit points
                                    1- 1945     	.line	613, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1946     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1947     	COMR	_PORTA,W
                                    1- 1948     	BANKSEL	r0x1049
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1949     	MOVAR	r0x1049
     0004 2180                      1- 1950     	MOVIA	0x80
     0005 10rr                      1- 1951     	ANDAR	r0x1049,F
     0006 01rr                      1- 1952     	MOVR	r0x1049,W
                                    1- 1953     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1954     	BANKSEL	r0x1049
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1955     	MOVAR	r0x1049
                                    1- 1956     	.line	614, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1957     	XORIA	0x01
     000B 0903                      1- 1958     	BTRSS	STATUS,2
                                    1- 1959     	MGOTO	_00371_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1960     	.line	616, "main.c"; 	checkBat();
                                    1- 1961     	MCALL	_checkBat
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1962     	.line	617, "main.c"; 	if(pwFlag && pwStep > 0)
                                    1- 1963     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1964     	MOVR	_pwFlag,W
     0010 0D03                      1- 1965     	BTRSC	STATUS,2
                                    1- 1966     	MGOTO	_00373_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1967     	BANKSEL	_pwStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1968     	MOVR	_pwStep,W
     0014 0D03                      1- 1969     	BTRSC	STATUS,2
                                    1- 1970     	MGOTO	_00373_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1971     	.line	619, "main.c"; 	if(showFlag == 0)
                                    1- 1972     	BANKSEL	_showFlag
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1973     	MOVR	_showFlag,W
     0018 0903                      1- 1974     	BTRSS	STATUS,2
                                    1- 1975     	MGOTO	_00356_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1976     	.line	622, "main.c"; 	pwShowTime = 3;
     001A 2103                      1- 1977     	MOVIA	0x03
                                    1- 1978     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1979     	MOVAR	_pwShowTime
                                    1- 1980     	.line	623, "main.c"; 	offShowTime = 0;
                                    1- 1981     	BANKSEL	_offShowTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 1982     	CLRR	_offShowTime
                                    1- 1983     	MGOTO	_00373_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1984     _00356_DS_:
                                    1- 1985     	.line	625, "main.c"; 	else if(stepShowTime == 0)
                                    1- 1986     	BANKSEL	_stepShowTime
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1987     	MOVR	_stepShowTime,W
     0022 0903                      1- 1988     	BTRSS	STATUS,2
                                    1- 1989     	MGOTO	_00353_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1990     	.line	627, "main.c"; 	pwShowTime = 0;
                                    1- 1991     	BANKSEL	_pwShowTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1992     	CLRR	_pwShowTime
                                    1- 1993     	.line	628, "main.c"; 	stepShowTime = 2;
     0026 2102                      1- 1994     	MOVIA	0x02
                                    1- 1995     	BANKSEL	_stepShowTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1996     	MOVAR	_stepShowTime
                                    1- 1997     	.line	629, "main.c"; 	offShowTime = 0;
                                    1- 1998     	BANKSEL	_offShowTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 1999     	CLRR	_offShowTime
                                    1- 2000     	MGOTO	_00373_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 2001     _00353_DS_:
                                    1- 2002     	.line	633, "main.c"; 	pwShowTime = 0;
                                    1- 2003     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1- 2004     	CLRR	_pwShowTime
                                    1- 2005     	.line	634, "main.c"; 	if(++workStep > 3)
                                    1- 2006     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 2007     	INCR	_workStep,F
                                    1- 2008     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2009     ;;unsigned compare: left >= lit (0x4=4), size=1
     0030 2104                      1- 2010     	MOVIA	0x04
     0031 04rr                      1- 2011     	SUBAR	_workStep,W
     0032 0803                      1- 2012     	BTRSS	STATUS,0
                                    1- 2013     	MGOTO	_00351_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2014     	.line	635, "main.c"; 	workStep = 1;
     0034 2101                      1- 2015     	MOVIA	0x01
     0035 00rr                      1- 2016     	MOVAR	_workStep
     0036                           1- 2017     _00351_DS_:
                                    1- 2018     	.line	636, "main.c"; 	stepShowTime = 2;
     0036 2102                      1- 2019     	MOVIA	0x02
                                    1- 2020     	BANKSEL	_stepShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2021     	MOVAR	_stepShowTime
                                    1- 2022     	.line	637, "main.c"; 	offShowTime = 0;
                                    1- 2023     	BANKSEL	_offShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 2024     	CLRR	_offShowTime
                                    1- 2025     	MGOTO	_00373_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 2026     _00371_DS_:
                                    1- 2027     	.line	641, "main.c"; 	else if(kclick == 2)
                                    1- 2028     	BANKSEL	r0x1049
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2029     	MOVR	r0x1049,W
     003E 2402                      1- 2030     	XORIA	0x02
     003F 0903                      1- 2031     	BTRSS	STATUS,2
                                    1- 2032     	MGOTO	_00373_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2033     	.line	643, "main.c"; 	checkBat();
                                    1- 2034     	MCALL	_checkBat
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2035     	.line	644, "main.c"; 	if(pwFlag)
                                    1- 2036     	BANKSEL	_pwFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2037     	MOVR	_pwFlag,W
     0044 0D03                      1- 2038     	BTRSC	STATUS,2
                                    1- 2039     	MGOTO	_00366_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2040     	.line	646, "main.c"; 	pwFlag = 0;		//关机
     0046 02rr                      1- 2041     	CLRR	_pwFlag
                                    1- 2042     	.line	647, "main.c"; 	workStep = 0;
                                    1- 2043     	BANKSEL	_workStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 2044     	CLRR	_workStep
                                    1- 2045     	.line	648, "main.c"; 	pwShowTime = 0;
                                    1- 2046     	BANKSEL	_pwShowTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 2047     	CLRR	_pwShowTime
                                    1- 2048     	.line	649, "main.c"; 	stepShowTime = 0;
                                    1- 2049     	BANKSEL	_stepShowTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2050     	CLRR	_stepShowTime
                                    1- 2051     	.line	650, "main.c"; 	offShowTime = 5;
     004D 2105                      1- 2052     	MOVIA	0x05
                                    1- 2053     	BANKSEL	_offShowTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 2054     	MOVAR	_offShowTime
                                    1- 2055     	MGOTO	_00373_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 2056     _00366_DS_:
                                    1- 2057     	.line	652, "main.c"; 	else if(pwStep > 0)
                                    1- 2058     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2059     	MOVR	_pwStep,W
     0053 0D03                      1- 2060     	BTRSC	STATUS,2
                                    1- 2061     	MGOTO	_00373_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2062     	.line	655, "main.c"; 	pwFlag = 1;		//开机
     0055 2101                      1- 2063     	MOVIA	0x01
                                    1- 2064     	BANKSEL	_pwFlag
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 2065     	MOVAR	_pwFlag
                                    1- 2066     	.line	656, "main.c"; 	pwShowTime = 3;
     0058 2103                      1- 2067     	MOVIA	0x03
                                    1- 2068     	BANKSEL	_pwShowTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 2069     	MOVAR	_pwShowTime
                                    1- 2070     	.line	657, "main.c"; 	stepShowTime = 2;
     005B 2102                      1- 2071     	MOVIA	0x02
                                    1- 2072     	BANKSEL	_stepShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 2073     	MOVAR	_stepShowTime
                                    1- 2074     	.line	658, "main.c"; 	offShowTime = 0;
                                    1- 2075     	BANKSEL	_offShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 2076     	CLRR	_offShowTime
                                    1- 2077     	.line	659, "main.c"; 	if(workStep == 0)
                                    1- 2078     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2079     	MOVR	_workStep,W
     0062 0903                      1- 2080     	BTRSS	STATUS,2
                                    1- 2081     	MGOTO	_00373_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2082     	.line	660, "main.c"; 	workStep = 1;
     0064 2101                      1- 2083     	MOVIA	0x01
     0065 00rr                      1- 2084     	MOVAR	_workStep
     0066                           1- 2085     _00373_DS_:
                                    1- 2086     	.line	663, "main.c"; 	}
                                    1- 2087     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 2088     ; exit point of _keyCtr
                                    1- 2090     ;***
                                    1- 2091     ;  pBlock Stats: dbName = C
                                    1- 2092     ;***
                                    1- 2093     ;has an exit
                                    1- 2094     ;1 compiler assigned register :
                                    1- 2095     ;   r0x1048
                                    1- 2096     ;; Starting pCode block
                                    1- 2097     .segment "code"; module=main, function=_keyRead
                                    1- 2099     ;local variable name mapping:
     0000                           1- 2101     _keyRead:
                                    1- 2102     ; 2 exit points
                                    1- 2103     	.line	578, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2104     	BANKSEL	r0x1048
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2105     	MOVAR	r0x1048
                                    1- 2106     	.line	580, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2107     	MOVR	r0x1048,W
     0003 0D03                      1- 2108     	BTRSC	STATUS,2
                                    1- 2109     	MGOTO	_00343_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2110     	.line	582, "main.c"; 	keyCount++;
                                    1- 2111     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2112     	INCR	_keyCount,F
                                    1- 2113     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2114     	.line	583, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2115     	MOVIA	0xc8
     0008 04rr                      1- 2116     	SUBAR	_keyCount,W
     0009 0803                      1- 2117     	BTRSS	STATUS,0
                                    1- 2118     	MGOTO	_00344_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2119     	.line	585, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2120     	MOVIA	0xc8
     000C 00rr                      1- 2121     	MOVAR	_keyCount
                                    1- 2122     	.line	586, "main.c"; 	if(!longPressFlag)
                                    1- 2123     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2124     	MOVR	_longPressFlag,W
     000F 0903                      1- 2125     	BTRSS	STATUS,2
                                    1- 2126     	MGOTO	_00344_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2127     	.line	588, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2128     	MOVIA	0x01
     0012 00rr                      1- 2129     	MOVAR	_longPressFlag
                                    1- 2130     	.line	589, "main.c"; 	return 2;
     0013 2102                      1- 2131     	MOVIA	0x02
                                    1- 2132     	MGOTO	_00345_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2133     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 2134     _00343_DS_:
                                    1- 2135     	.line	595, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 2136     	MOVIA	0xc8
                                    1- 2137     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2138     	SUBAR	_keyCount,W
     0018 0803                      1- 2139     	BTRSS	STATUS,0
                                    1- 2140     	MGOTO	_00340_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2141     	.line	597, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2142     	CLRR	_keyCount
                                    1- 2143     	.line	598, "main.c"; 	longPressFlag = 0;
                                    1- 2144     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2145     	CLRR	_longPressFlag
                                    1- 2146     	.line	599, "main.c"; 	return	0;
     001D 2100                      1- 2147     	MOVIA	0x00
                                    1- 2148     	MGOTO	_00345_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2149     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2150     _00340_DS_:
                                    1- 2151     	.line	601, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2152     	MOVIA	0x04
                                    1- 2153     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2154     	SUBAR	_keyCount,W
     0022 0803                      1- 2155     	BTRSS	STATUS,0
                                    1- 2156     	MGOTO	_00341_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2157     	.line	603, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2158     	CLRR	_keyCount
                                    1- 2159     	.line	604, "main.c"; 	return	1;
     0025 2101                      1- 2160     	MOVIA	0x01
                                    1- 2161     	MGOTO	_00345_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2162     _00341_DS_:
                                    1- 2163     	.line	606, "main.c"; 	keyCount = 0;
                                    1- 2164     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2165     	CLRR	_keyCount
     0029                           1- 2166     _00344_DS_:
                                    1- 2167     	.line	608, "main.c"; 	return 0;
     0029 2100                      1- 2168     	MOVIA	0x00
     002A                           1- 2169     _00345_DS_:
                                    1- 2170     	.line	609, "main.c"; 	}
                                    1- 2171     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2172     ; exit point of _keyRead
                                    1- 2174     ;***
                                    1- 2175     ;  pBlock Stats: dbName = C
                                    1- 2176     ;***
                                    1- 2177     ;has an exit
                                    1- 2178     ;; Starting pCode block
                                    1- 2179     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2181     _pwmStop:
                                    1- 2182     ; 2 exit points
                                    1- 2183     	.line	572, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2184     	CLRA	
     0001 00rr                      1- 2185     	SFUN	_T2CR1
                                    1- 2186     	.line	573, "main.c"; 	}
                                    1- 2187     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2188     ; exit point of _pwmStop
                                    1- 2190     ;***
                                    1- 2191     ;  pBlock Stats: dbName = C
                                    1- 2192     ;***
                                    1- 2193     ;has an exit
                                    1- 2194     ;1 compiler assigned register :
                                    1- 2195     ;   r0x104A
                                    1- 2196     ;; Starting pCode block
                                    1- 2197     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2199     _pwmInit:
                                    1- 2200     ; 2 exit points
                                    1- 2201     	.line	560, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2202     	SFUNR	_T2CR1
                                    1- 2203     	BANKSEL	r0x104A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2204     	MOVAR	r0x104A
     0003 0Frr                      1- 2205     	BTRSC	r0x104A,7
                                    1- 2206     	.line	561, "main.c"; 	return;
                                    1- 2207     	MGOTO	_00324_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2208     	.line	562, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2209     	CLRR	_TMRH
                                    1- 2210     	.line	563, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2211     	MOVIA	0x64
     0007 00rr                      1- 2212     	SFUN	_TMR2
                                    1- 2213     	.line	564, "main.c"; 	PWM2DUTY = 69;				// 		
     0008 2145                      1- 2214     	MOVIA	0x45
     0009 00rr                      1- 2215     	SFUN	_PWM2DUTY
                                    1- 2216     	.line	566, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div256;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 2107                      1- 2217     	MOVIA	0x07
     000B 00rr                      1- 2218     	SFUN	_T2CR2
                                    1- 2219     	.line	567, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2220     	MOVIA	0x83
     000D 00rr                      1- 2221     	SFUN	_T2CR1
     000E                           1- 2222     _00324_DS_:
                                    1- 2223     	.line	568, "main.c"; 	}
                                    1- 2224     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2225     ; exit point of _pwmInit
                                    1- 2227     ;***
                                    1- 2228     ;  pBlock Stats: dbName = C
                                    1- 2229     ;***
                                    1- 2230     ;has an exit
                                    1- 2231     ;functions called:
                                    1- 2232     ;   _setInput
                                    1- 2233     ;   _pwmStop
                                    1- 2234     ;   _setInput
                                    1- 2235     ;   _pwmStop
                                    1- 2236     ;; Starting pCode block
                                    1- 2237     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2239     _gotoSleep:
                                    1- 2240     ; 2 exit points
                                    1- 2241     	.line	527, "main.c"; 	sleepFlag = 0;
                                    1- 2242     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2243     	CLRR	_sleepFlag
                                    1- 2244     	.line	528, "main.c"; 	waitTime = 0;
                                    1- 2245     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2246     	CLRR	_waitTime
     0004 02rr                      1- 2247     	CLRR	(_waitTime + 1)
                                    1- 2248     	.line	529, "main.c"; 	setInput();
                                    1- 2249     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2250     	.line	530, "main.c"; 	sleepTime = 0;
                                    1- 2251     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2252     	CLRR	_sleepTime
                                    1- 2253     	.line	531, "main.c"; 	pwFlag = 0;
                                    1- 2254     	BANKSEL	_pwFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2255     	CLRR	_pwFlag
                                    1- 2256     	.line	532, "main.c"; 	pwmStop();
                                    1- 2257     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2258     	.line	533, "main.c"; 	AWUCON = 0xA0;
     000B 21A0                      1- 2259     	MOVIA	0xa0
     000C 00rr                      1- 2260     	MOVAR	_AWUCON
                                    1- 2261     	.line	535, "main.c"; 	IOSTB = C_PB3_Input;
     000D 2108                      1- 2262     	MOVIA	0x08
     000E 000r                      1- 2263     	IOST	_IOSTB
                                    1- 2264     	.line	536, "main.c"; 	PORTA = 0X00;
                                    1- 2265     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2266     	CLRR	_PORTA
                                    1- 2267     	.line	537, "main.c"; 	PORTB = 0X00;
     0011 02rr                      1- 2268     	CLRR	_PORTB
                                    1- 2269     	.line	538, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2270     	MOVIA	0x02
     0013 00rr                      1- 2271     	MOVAR	_INTE
                                    1- 2272     	.line	539, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2273     	MOVIA	0x18
     0015 00rr                      1- 2274     	MOVAR	_PCON
                                    1- 2275     	.line	540, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2276     	CLRR	_INTF
                                    1- 2277     	.line	541, "main.c"; 	CLRWDT();
     0017 0002                      1- 2278     	clrwdt
                                    1- 2279     	.line	542, "main.c"; 	ENI();
     0018 0004                      1- 2280     	ENI
                                    1- 2281     	.line	543, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2282     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1- 2283     	BTRSC	_PORTA,5
                                    1- 2284     	MGOTO	_00317_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2285     	.line	544, "main.c"; 	SLEEP();
     001C 0001                      1- 2286     	sleep
     001D                           1- 2287     _00317_DS_:
                                    1- 2288     	.line	545, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2289     	CLRR	_AWUCON
                                    1- 2290     	.line	546, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001E 21A0                      1- 2291     	MOVIA	0xa0
     001F 000r                      1- 2292     	IOST	_IOSTA
                                    1- 2293     	.line	547, "main.c"; 	IOSTB = C_PB3_Input ;
     0020 2108                      1- 2294     	MOVIA	0x08
     0021 000r                      1- 2295     	IOST	_IOSTB
                                    1- 2296     	.line	548, "main.c"; 	PORTA = 0x00;
                                    1- 2297     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2298     	CLRR	_PORTA
                                    1- 2299     	.line	549, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2103                      1- 2300     	MOVIA	0x03
     0025 00rr                      1- 2301     	MOVAR	_INTE
                                    1- 2302     	.line	550, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2303     	CLRR	_INTF
                                    1- 2304     	.line	552, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2305     	MOVIA	0xb8
     0028 00rr                      1- 2306     	MOVAR	_PCON
                                    1- 2307     	.line	555, "main.c"; 	}
                                    1- 2308     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2309     ; exit point of _gotoSleep
                                    1- 2311     ;***
                                    1- 2312     ;  pBlock Stats: dbName = C
                                    1- 2313     ;***
                                    1- 2314     ;has an exit
                                    1- 2315     ;functions called:
                                    1- 2316     ;   _setInput
                                    1- 2317     ;   _setInput
                                    1- 2318     ;; Starting pCode block
                                    1- 2319     .segment "code"; module=main, function=_initSys
     0000                           1- 2321     _initSys:
                                    1- 2322     ; 2 exit points
                                    1- 2323     	.line	495, "main.c"; 	DISI();
     0000 0013                      1- 2324     	DISI
                                    1- 2325     	.line	496, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 2326     	MOVIA	0xa0
     0002 000r                      1- 2327     	IOST	_IOSTA
                                    1- 2328     	.line	497, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2329     	MOVIA	0x08
     0004 000r                      1- 2330     	IOST	_IOSTB
                                    1- 2331     	.line	498, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2332     	CLRR	_PORTB
                                    1- 2333     	.line	499, "main.c"; 	PORTA = 0x00;
                                    1- 2334     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2335     	CLRR	_PORTA
                                    1- 2336     	.line	501, "main.c"; 	setInput();
                                    1- 2337     	MCALL	_setInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2338     	.line	502, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2339     	MOVIA	0x7f
     000A 000r                      1- 2340     	IOST	_APHCON
                                    1- 2341     	.line	503, "main.c"; 	BPHCON = 0xFF;		//PB3上拉
     000B 21FF                      1- 2342     	MOVIA	0xff
     000C 00rr                      1- 2343     	MOVAR	_BPHCON
                                    1- 2344     	.line	504, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2345     	MOVAR	_ABPLCON
                                    1- 2346     	.line	506, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2103                      1- 2347     	MOVIA	0x03
     000F 00rr                      1- 2348     	MOVAR	_INTE
                                    1- 2349     	.line	508, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2350     	CLRA	
     0011 000r                      1- 2351     	IOST	_PCON1
                                    1- 2352     	.line	510, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2353     	MOVIA	0x37
     0013 00rr                      1- 2354     	MOVAR	_TMR0
                                    1- 2355     	.line	511, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2356     	CLRA	
     0015 0003                      1- 2357     	T0MD	
                                    1- 2358     	.line	513, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2359     	MOVIA	0x01
     0017 000r                      1- 2360     	IOST	_PCON1
                                    1- 2361     	.line	516, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2362     	MOVIA	0x98
     0019 00rr                      1- 2363     	MOVAR	_PCON
                                    1- 2364     	.line	519, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2365     	MOVIA	0x01
     001B 000r                      1- 2366     	IOST	_PCON1
                                    1- 2367     	.line	520, "main.c"; 	ENI();
     001C 0004                      1- 2368     	ENI
                                    1- 2369     	.line	521, "main.c"; 	}
                                    1- 2370     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2371     ; exit point of _initSys
                                    1- 2373     ;***
                                    1- 2374     ;  pBlock Stats: dbName = C
                                    1- 2375     ;***
                                    1- 2376     ;has an exit
                                    1- 2377     ;functions called:
                                    1- 2378     ;   __gptrget1
                                    1- 2379     ;   _showNubBaiwei
                                    1- 2380     ;   __gptrget1
                                    1- 2381     ;   _showNubShiwei
                                    1- 2382     ;   __gptrget1
                                    1- 2383     ;   _showNubGewei
                                    1- 2384     ;   _setInput
                                    1- 2385     ;   __gptrget1
                                    1- 2386     ;   _showNubBaiwei
                                    1- 2387     ;   __gptrget1
                                    1- 2388     ;   _showNubShiwei
                                    1- 2389     ;   __gptrget1
                                    1- 2390     ;   _showNubGewei
                                    1- 2391     ;   _setInput
                                    1- 2392     ;5 compiler assigned registers:
                                    1- 2393     ;   r0x104B
                                    1- 2394     ;   r0x104C
                                    1- 2395     ;   STK01
                                    1- 2396     ;   STK00
                                    1- 2397     ;   r0x104D
                                    1- 2398     ;; Starting pCode block
                                    1- 2399     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2401     _refreshNub:
                                    1- 2402     ; 2 exit points
                                    1- 2403     	.line	486, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 2404     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2405     	MOVR	_baiweiNum,W
     0002 25rr                      1- 2406     	ADDIA	(_numArray + 0)
                                    1- 2407     	BANKSEL	r0x104B
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2408     	MOVAR	r0x104B
     0005 21rr                      1- 2409     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 2410     	BTRSC	STATUS,0
     0007 2501                      1- 2411     	ADDIA	0x01
                                    1- 2412     	BANKSEL	r0x104C
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2413     	MOVAR	r0x104C
                                    1- 2414     	BANKSEL	r0x104B
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2415     	MOVR	r0x104B,W
     000C 00rr                      1- 2416     	MOVAR	STK01
                                    1- 2417     	BANKSEL	r0x104C
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2418     	MOVR	r0x104C,W
     000F 00rr                      1- 2419     	MOVAR	STK00
     0010 2100                      1- 2420     	MOVIA	0x00
                                    1- 2421     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2422     ;;103	MOVAR	r0x104D
                                    1- 2423     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2424     	.line	487, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2425     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2426     	MOVR	_shiweiNum,W
     0015 25rr                      1- 2427     	ADDIA	(_numArray + 0)
                                    1- 2428     	BANKSEL	r0x104B
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2429     	MOVAR	r0x104B
     0018 21rr                      1- 2430     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 2431     	BTRSC	STATUS,0
     001A 2501                      1- 2432     	ADDIA	0x01
                                    1- 2433     	BANKSEL	r0x104C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2434     	MOVAR	r0x104C
                                    1- 2435     	BANKSEL	r0x104B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2436     	MOVR	r0x104B,W
     001F 00rr                      1- 2437     	MOVAR	STK01
                                    1- 2438     	BANKSEL	r0x104C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2439     	MOVR	r0x104C,W
     0022 00rr                      1- 2440     	MOVAR	STK00
     0023 2100                      1- 2441     	MOVIA	0x00
                                    1- 2442     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2443     ;;102	MOVAR	r0x104D
                                    1- 2444     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2445     	.line	488, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2446     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2447     	MOVR	_geweiNum,W
     0028 25rr                      1- 2448     	ADDIA	(_numArray + 0)
                                    1- 2449     	BANKSEL	r0x104B
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2450     	MOVAR	r0x104B
     002B 21rr                      1- 2451     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2452     	BTRSC	STATUS,0
     002D 2501                      1- 2453     	ADDIA	0x01
                                    1- 2454     	BANKSEL	r0x104C
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2455     	MOVAR	r0x104C
                                    1- 2456     	BANKSEL	r0x104B
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2457     	MOVR	r0x104B,W
     0032 00rr                      1- 2458     	MOVAR	STK01
                                    1- 2459     	BANKSEL	r0x104C
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2460     	MOVR	r0x104C,W
     0035 00rr                      1- 2461     	MOVAR	STK00
     0036 2100                      1- 2462     	MOVIA	0x00
                                    1- 2463     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2464     ;;2	MOVAR	r0x104D
                                    1- 2465     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2466     	.line	489, "main.c"; 	setInput();
                                    1- 2467     	MCALL	_setInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2468     	.line	490, "main.c"; 	}
                                    1- 2469     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 2470     ; exit point of _refreshNub
                                    1- 2472     ;***
                                    1- 2473     ;  pBlock Stats: dbName = C
                                    1- 2474     ;***
                                    1- 2475     ;has an exit
                                    1- 2476     ;; Starting pCode block
                                    1- 2477     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2479     _checkIRKey:
                                    1- 2480     ; 2 exit points
                                    1- 2481     	.line	429, "main.c"; 	if(pwFlag == 0)
                                    1- 2482     	BANKSEL	_pwFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2483     	MOVR	_pwFlag,W
     0002 0903                      1- 2484     	BTRSS	STATUS,2
                                    1- 2485     	MGOTO	_00286_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2486     	.line	431, "main.c"; 	irStep = 0;
                                    1- 2487     	BANKSEL	_irStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2488     	CLRR	_irStep
                                    1- 2489     	.line	432, "main.c"; 	return;
                                    1- 2490     	MGOTO	_00303_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2491     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2492     ;;unsigned compare: left >= lit (0x6=6), size=1
     0007                           1- 2493     _00286_DS_:
                                    1- 2494     	.line	434, "main.c"; 	if(zhedangCount > 5)
     0007 2106                      1- 2495     	MOVIA	0x06
                                    1- 2496     	BANKSEL	_zhedangCount
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 04rr                      1- 2497     	SUBAR	_zhedangCount,W
     000A 0803                      1- 2498     	BTRSS	STATUS,0
                                    1- 2499     	MGOTO	_00290_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2500     	.line	436, "main.c"; 	if(++revOKCount > 2)
                                    1- 2501     	BANKSEL	_revOKCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1- 2502     	INCR	_revOKCount,F
                                    1- 2503     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2504     ;;unsigned compare: left >= lit (0x3=3), size=1
     000E 2103                      1- 2505     	MOVIA	0x03
     000F 04rr                      1- 2506     	SUBAR	_revOKCount,W
     0010 0803                      1- 2507     	BTRSS	STATUS,0
                                    1- 2508     	MGOTO	_00291_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2509     	.line	437, "main.c"; 	revOKCount = 3;
     0012 2103                      1- 2510     	MOVIA	0x03
     0013 00rr                      1- 2511     	MOVAR	_revOKCount
                                    1- 2512     	MGOTO	_00291_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1- 2513     _00290_DS_:
                                    1- 2514     	.line	441, "main.c"; 	revOKCount = 0;
                                    1- 2515     	BANKSEL	_revOKCount
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 2516     	CLRR	_revOKCount
                                    1- 2517     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2518     ;;unsigned compare: left >= lit (0x3=3), size=1
     0017                           1- 2519     _00291_DS_:
                                    1- 2520     	.line	443, "main.c"; 	if(revOKCount > 2 && irStep == 0)
     0017 2103                      1- 2521     	MOVIA	0x03
                                    1- 2522     	BANKSEL	_revOKCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 2523     	SUBAR	_revOKCount,W
     001A 0803                      1- 2524     	BTRSS	STATUS,0
                                    1- 2525     	MGOTO	_00303_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2526     	BANKSEL	_irStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2527     	MOVR	_irStep,W
     001E 0903                      1- 2528     	BTRSS	STATUS,2
                                    1- 2529     	MGOTO	_00303_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2530     	.line	446, "main.c"; 	if(workStep == 1)
                                    1- 2531     	BANKSEL	_workStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2532     	MOVR	_workStep,W
     0022 2401                      1- 2533     	XORIA	0x01
     0023 0903                      1- 2534     	BTRSS	STATUS,2
                                    1- 2535     	MGOTO	_00298_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2536     	.line	448, "main.c"; 	workTime = 50;
     0025 2132                      1- 2537     	MOVIA	0x32
                                    1- 2538     	BANKSEL	_workTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 2539     	MOVAR	_workTime
                                    1- 2540     	MGOTO	_00299_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
     0029                           1- 2541     _00298_DS_:
                                    1- 2542     	.line	450, "main.c"; 	else if(workStep == 2)
                                    1- 2543     	BANKSEL	_workStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 2544     	MOVR	_workStep,W
     002B 2402                      1- 2545     	XORIA	0x02
     002C 0903                      1- 2546     	BTRSS	STATUS,2
                                    1- 2547     	MGOTO	_00295_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2548     	.line	452, "main.c"; 	workTime = 80;
     002E 2150                      1- 2549     	MOVIA	0x50
                                    1- 2550     	BANKSEL	_workTime
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 2551     	MOVAR	_workTime
                                    1- 2552     	MGOTO	_00299_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1- 2553     _00295_DS_:
                                    1- 2554     	.line	454, "main.c"; 	else if(workStep == 3)
                                    1- 2555     	BANKSEL	_workStep
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 2556     	MOVR	_workStep,W
     0034 2403                      1- 2557     	XORIA	0x03
     0035 0903                      1- 2558     	BTRSS	STATUS,2
                                    1- 2559     	MGOTO	_00299_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2560     	.line	456, "main.c"; 	workTime = 120;
     0037 2178                      1- 2561     	MOVIA	0x78
                                    1- 2562     	BANKSEL	_workTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 2563     	MOVAR	_workTime
     003A                           1- 2564     _00299_DS_:
                                    1- 2565     	.line	458, "main.c"; 	waitBatTime = 120;
     003A 2178                      1- 2566     	MOVIA	0x78
                                    1- 2567     	BANKSEL	_waitBatTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 2568     	MOVAR	_waitBatTime
                                    1- 2569     	.line	460, "main.c"; 	irStep = 1;
     003D 2101                      1- 2570     	MOVIA	0x01
                                    1- 2571     	BANKSEL	_irStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 2572     	MOVAR	_irStep
     0040                           1- 2573     _00303_DS_:
                                    1- 2574     	.line	479, "main.c"; 	}
                                    1- 2575     	RETURN	
     0040 0010                      3-   40 m1      ret
                                    1- 2576     ; exit point of _checkIRKey
                                    1- 2578     ;***
                                    1- 2579     ;  pBlock Stats: dbName = C
                                    1- 2580     ;***
                                    1- 2581     ;has an exit
                                    1- 2582     ;functions called:
                                    1- 2583     ;   _pwmInit
                                    1- 2584     ;   _pwmStop
                                    1- 2585     ;   _checkBat
                                    1- 2586     ;   __divuchar
                                    1- 2587     ;   __moduchar
                                    1- 2588     ;   __moduint
                                    1- 2589     ;   __divuchar
                                    1- 2590     ;   __moduchar
                                    1- 2591     ;   _pwmInit
                                    1- 2592     ;   _pwmStop
                                    1- 2593     ;   _checkBat
                                    1- 2594     ;   __divuchar
                                    1- 2595     ;   __moduchar
                                    1- 2596     ;   __moduint
                                    1- 2597     ;   __divuchar
                                    1- 2598     ;   __moduchar
                                    1- 2599     ;5 compiler assigned registers:
                                    1- 2600     ;   r0x104E
                                    1- 2601     ;   STK00
                                    1- 2602     ;   STK02
                                    1- 2603     ;   STK01
                                    1- 2604     ;   r0x104F
                                    1- 2605     ;; Starting pCode block
                                    1- 2606     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2608     _chrgCtr:
                                    1- 2609     ; 2 exit points
                                    1- 2610     	.line	294, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2611     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Err                      1- 2612     	BTRSC	_PORTA,5
                                    1- 2613     	MGOTO	_00187_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2614     	.line	296, "main.c"; 	fullFlag = 0;
                                    1- 2615     	BANKSEL	_fullFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2616     	CLRR	_fullFlag
     0005                           1- 2617     _00187_DS_:
                                    1- 2618     	.line	298, "main.c"; 	BPHCON |= 0x04;
     0005 19rr                      1- 2619     	BSR	_BPHCON,2
                                    1- 2620     	.line	299, "main.c"; 	IOSTB &= 0xFB;
     0006 001r                      1- 2621     	IOSTR	_IOSTB
                                    1- 2622     	BANKSEL	r0x104E
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2623     	MOVAR	r0x104E
     0009 1Drr                      1- 2624     	BCR	r0x104E,2
     000A 01rr                      1- 2625     	MOVR	r0x104E,W
     000B 000r                      1- 2626     	IOST	_IOSTB
                                    1- 2627     	.line	300, "main.c"; 	if(workTime > 0)
                                    1- 2628     	BANKSEL	_workTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2629     	MOVR	_workTime,W
     000E 0D03                      1- 2630     	BTRSC	STATUS,2
                                    1- 2631     	MGOTO	_00189_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2632     	.line	302, "main.c"; 	pwmInit();
                                    1- 2633     	MCALL	_pwmInit
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2634     	.line	303, "main.c"; 	workTime--;
                                    1- 2635     	BANKSEL	_workTime
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 06rr                      1- 2636     	DECR	_workTime,F
                                    1- 2637     	MGOTO	_00190_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1- 2638     _00189_DS_:
                                    1- 2639     	.line	307, "main.c"; 	pwmStop();
                                    1- 2640     	MCALL	_pwmStop
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2641     	.line	308, "main.c"; 	PORTB &= 0xFB;
     0015 1Drr                      1- 2642     	BCR	_PORTB,2
     0016                           1- 2643     _00190_DS_:
                                    1- 2644     	.line	310, "main.c"; 	if(startTime)
                                    1- 2645     	BANKSEL	_startTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2646     	MOVR	_startTime,W
     0018 0D03                      1- 2647     	BTRSC	STATUS,2
                                    1- 2648     	MGOTO	_00225_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2649     	.line	312, "main.c"; 	checkBat();
                                    1- 2650     	MCALL	_checkBat
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2651     	.line	313, "main.c"; 	startTime--;
                                    1- 2652     	BANKSEL	_startTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 06rr                      1- 2653     	DECR	_startTime,F
                                    1- 2654     	.line	314, "main.c"; 	showFlag = 1;
     001D 2101                      1- 2655     	MOVIA	0x01
                                    1- 2656     	BANKSEL	_showFlag
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2657     	MOVAR	_showFlag
                                    1- 2658     	.line	315, "main.c"; 	baiweiNum = shiweiNum = 8;
     0020 2108                      1- 2659     	MOVIA	0x08
                                    1- 2660     	BANKSEL	_shiweiNum
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2661     	MOVAR	_shiweiNum
                                    1- 2662     	BANKSEL	_baiweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2663     	MOVAR	_baiweiNum
                                    1- 2664     	.line	316, "main.c"; 	geweiNum = 8;
                                    1- 2665     	BANKSEL	_geweiNum
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2666     	MOVAR	_geweiNum
                                    1- 2667     	.line	316, "main.c"; 	}
                                    1- 2668     	MGOTO	_00227_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 2669     _00225_DS_:
                                    1- 2670     	.line	318, "main.c"; 	else if(stepShowTime)
                                    1- 2671     	BANKSEL	_stepShowTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2672     	MOVR	_stepShowTime,W
     002A 0D03                      1- 2673     	BTRSC	STATUS,2
                                    1- 2674     	MGOTO	_00222_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2675     	.line	320, "main.c"; 	showFlag = 1;
     002C 2101                      1- 2676     	MOVIA	0x01
                                    1- 2677     	BANKSEL	_showFlag
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2678     	MOVAR	_showFlag
                                    1- 2679     	.line	321, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2680     	BANKSEL	_shiweiNum
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1- 2681     	CLRR	_shiweiNum
                                    1- 2682     	BANKSEL	_baiweiNum
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 2683     	CLRR	_baiweiNum
                                    1- 2684     	.line	322, "main.c"; 	geweiNum = workStep;
                                    1- 2685     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2686     	MOVR	_workStep,W
                                    1- 2687     	BANKSEL	_geweiNum
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 2688     	MOVAR	_geweiNum
                                    1- 2689     	.line	322, "main.c"; 	}
                                    1- 2690     	MGOTO	_00227_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1- 2691     _00222_DS_:
                                    1- 2692     	.line	324, "main.c"; 	else if(pwShowTime || workTime)
                                    1- 2693     	BANKSEL	_pwShowTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2694     	MOVR	_pwShowTime,W
     003A 0903                      1- 2695     	BTRSS	STATUS,2
                                    1- 2696     	MGOTO	_00217_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2697     	BANKSEL	_workTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2698     	MOVR	_workTime,W
     003E 0D03                      1- 2699     	BTRSC	STATUS,2
                                    1- 2700     	MGOTO	_00218_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 2701     _00217_DS_:
                                    1- 2702     	.line	326, "main.c"; 	showFlag = 1;
     0040 2101                      1- 2703     	MOVIA	0x01
                                    1- 2704     	BANKSEL	_showFlag
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2705     	MOVAR	_showFlag
                                    1- 2706     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2707     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2708     	.line	327, "main.c"; 	if(pwStep > 99)
     0043 2164                      1- 2709     	MOVIA	0x64
                                    1- 2710     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 04rr                      1- 2711     	SUBAR	_pwStep,W
     0046 0803                      1- 2712     	BTRSS	STATUS,0
                                    1- 2713     	MGOTO	_00192_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2714     	.line	329, "main.c"; 	baiweiNum = 1;
     0048 2101                      1- 2715     	MOVIA	0x01
                                    1- 2716     	BANKSEL	_baiweiNum
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2717     	MOVAR	_baiweiNum
                                    1- 2718     	.line	330, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2719     	BANKSEL	_geweiNum
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2720     	CLRR	_geweiNum
                                    1- 2721     	BANKSEL	_shiweiNum
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1- 2722     	CLRR	_shiweiNum
                                    1- 2723     	MGOTO	_00227_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1- 2724     _00192_DS_:
                                    1- 2725     	.line	334, "main.c"; 	baiweiNum = 0;
                                    1- 2726     	BANKSEL	_baiweiNum
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 2727     	CLRR	_baiweiNum
                                    1- 2728     	.line	335, "main.c"; 	shiweiNum = pwStep/10;
     0052 210A                      1- 2729     	MOVIA	0x0a
     0053 00rr                      1- 2730     	MOVAR	STK00
                                    1- 2731     	BANKSEL	_pwStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 2732     	MOVR	_pwStep,W
                                    1- 2733     	MCALL	__divuchar
     0056 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2734     	BANKSEL	_shiweiNum
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 2735     	MOVAR	_shiweiNum
                                    1- 2736     	.line	336, "main.c"; 	geweiNum = pwStep%10;
     0059 210A                      1- 2737     	MOVIA	0x0a
     005A 00rr                      1- 2738     	MOVAR	STK00
                                    1- 2739     	BANKSEL	_pwStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 2740     	MOVR	_pwStep,W
                                    1- 2741     	MCALL	__moduchar
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2742     	BANKSEL	_geweiNum
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2743     	MOVAR	_geweiNum
                                    1- 2744     	.line	336, "main.c"; 	}
                                    1- 2745     	MGOTO	_00227_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2746     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2747     ;;unsigned compare: left >= lit (0x6=6), size=1
     0061                           1- 2748     _00218_DS_:
                                    1- 2749     	.line	341, "main.c"; 	if(pwStep <= 5 && offShowTime == 0 && ((0x20 & PORTA) == 0) && pwFlag)
     0061 2106                      1- 2750     	MOVIA	0x06
                                    1- 2751     	BANKSEL	_pwStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 2752     	SUBAR	_pwStep,W
     0064 0C03                      1- 2753     	BTRSC	STATUS,0
                                    1- 2754     	MGOTO	_00212_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2755     	BANKSEL	_offShowTime
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2756     	MOVR	_offShowTime,W
     0068 0903                      1- 2757     	BTRSS	STATUS,2
                                    1- 2758     	MGOTO	_00212_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2759     	BANKSEL	_PORTA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 0Err                      1- 2760     	BTRSC	_PORTA,5
                                    1- 2761     	MGOTO	_00212_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2762     	BANKSEL	_pwFlag
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2763     	MOVR	_pwFlag,W
     006F 0D03                      1- 2764     	BTRSC	STATUS,2
                                    1- 2765     	MGOTO	_00212_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2766     	.line	343, "main.c"; 	showFlag = 1;
     0071 2101                      1- 2767     	MOVIA	0x01
                                    1- 2768     	BANKSEL	_showFlag
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 2769     	MOVAR	_showFlag
                                    1- 2770     	.line	344, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2771     	BANKSEL	_shanTime
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 05rr                      1- 2772     	INCR	_shanTime,F
     0076 0D03                      1- 2773     	BTRSC	STATUS,2
     0077 05rr                      1- 2774     	INCR	(_shanTime + 1),F
                                    1- 2775     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2776     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0078 2101                      1- 2777     	MOVIA	0x01
     0079 04rr                      1- 2778     	SUBAR	(_shanTime + 1),W
     007A 0903                      1- 2779     	BTRSS	STATUS,2
                                    1- 2780     	MGOTO	_00279_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C 21F5                      1- 2781     	MOVIA	0xf5
     007D 04rr                      1- 2782     	SUBAR	_shanTime,W
     007E                           1- 2783     _00279_DS_:
     007E 0803                      1- 2784     	BTRSS	STATUS,0
                                    1- 2785     	MGOTO	_00195_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2786     	.line	346, "main.c"; 	shanTime = 0;
                                    1- 2787     	BANKSEL	_shanTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1- 2788     	CLRR	_shanTime
     0082 02rr                      1- 2789     	CLRR	(_shanTime + 1)
                                    1- 2790     	.line	347, "main.c"; 	showFlag = 0;
                                    1- 2791     	BANKSEL	_showFlag
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 02rr                      1- 2792     	CLRR	_showFlag
     0085                           1- 2793     _00195_DS_:
                                    1- 2794     	.line	350, "main.c"; 	if(shanTime % 100 < 50)
     0085 2164                      1- 2795     	MOVIA	0x64
     0086 00rr                      1- 2796     	MOVAR	STK02
     0087 2100                      1- 2797     	MOVIA	0x00
     0088 00rr                      1- 2798     	MOVAR	STK01
                                    1- 2799     	BANKSEL	_shanTime
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 2800     	MOVR	_shanTime,W
     008B 00rr                      1- 2801     	MOVAR	STK00
     008C 01rr                      1- 2802     	MOVR	(_shanTime + 1),W
                                    1- 2803     	MCALL	__moduint
     008D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2804     	BANKSEL	r0x104F
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 2805     	MOVAR	r0x104F
     0090 01rr                      1- 2806     	MOVR	STK00,W
                                    1- 2807     	BANKSEL	r0x104E
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 2808     	MOVAR	r0x104E
                                    1- 2809     ;;unsigned compare: left < lit (0x32=50), size=2
     0093 2100                      1- 2810     	MOVIA	0x00
                                    1- 2811     	BANKSEL	r0x104F
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 2812     	SUBAR	r0x104F,W
     0096 0903                      1- 2813     	BTRSS	STATUS,2
                                    1- 2814     	MGOTO	_00280_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098 2132                      1- 2815     	MOVIA	0x32
                                    1- 2816     	BANKSEL	r0x104E
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 2817     	SUBAR	r0x104E,W
     009B                           1- 2818     _00280_DS_:
     009B 0C03                      1- 2819     	BTRSC	STATUS,0
                                    1- 2820     	MGOTO	_00197_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2821     	.line	352, "main.c"; 	showFlag = 1;
     009D 2101                      1- 2822     	MOVIA	0x01
                                    1- 2823     	BANKSEL	_showFlag
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 2824     	MOVAR	_showFlag
                                    1- 2825     	.line	353, "main.c"; 	baiweiNum = 0;
                                    1- 2826     	BANKSEL	_baiweiNum
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 2827     	CLRR	_baiweiNum
                                    1- 2828     	.line	354, "main.c"; 	shiweiNum = 0;
                                    1- 2829     	BANKSEL	_shiweiNum
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 02rr                      1- 2830     	CLRR	_shiweiNum
                                    1- 2831     	.line	355, "main.c"; 	geweiNum = pwStep;
                                    1- 2832     	BANKSEL	_pwStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 2833     	MOVR	_pwStep,W
                                    1- 2834     	BANKSEL	_geweiNum
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 2835     	MOVAR	_geweiNum
                                    1- 2836     	MGOTO	_00227_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
     00A9                           1- 2837     _00197_DS_:
                                    1- 2838     	.line	359, "main.c"; 	showFlag = 0;
                                    1- 2839     	BANKSEL	_showFlag
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 02rr                      1- 2840     	CLRR	_showFlag
                                    1- 2841     	.line	359, "main.c"; 	}
                                    1- 2842     	MGOTO	_00227_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC                           1- 2843     _00212_DS_:
                                    1- 2844     	.line	362, "main.c"; 	else if(offShowTime > 0)
                                    1- 2845     	BANKSEL	_offShowTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 2846     	MOVR	_offShowTime,W
     00AE 0D03                      1- 2847     	BTRSC	STATUS,2
                                    1- 2848     	MGOTO	_00209_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2849     	.line	364, "main.c"; 	showFlag = 1;
     00B0 2101                      1- 2850     	MOVIA	0x01
                                    1- 2851     	BANKSEL	_showFlag
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 2852     	MOVAR	_showFlag
                                    1- 2853     	.line	365, "main.c"; 	baiweiNum = 0;
                                    1- 2854     	BANKSEL	_baiweiNum
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 02rr                      1- 2855     	CLRR	_baiweiNum
                                    1- 2856     	.line	366, "main.c"; 	shiweiNum = 10;
     00B5 210A                      1- 2857     	MOVIA	0x0a
                                    1- 2858     	BANKSEL	_shiweiNum
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 2859     	MOVAR	_shiweiNum
                                    1- 2860     	.line	367, "main.c"; 	geweiNum = 10;
                                    1- 2861     	BANKSEL	_geweiNum
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 00rr                      1- 2862     	MOVAR	_geweiNum
                                    1- 2863     	.line	367, "main.c"; 	}
                                    1- 2864     	MGOTO	_00227_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
     00BB                           1- 2865     _00209_DS_:
                                    1- 2866     	.line	369, "main.c"; 	else if(0x20 & PORTA)
                                    1- 2867     	BANKSEL	_PORTA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 0Arr                      1- 2868     	BTRSS	_PORTA,5
                                    1- 2869     	MGOTO	_00206_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2870     	.line	375, "main.c"; 	showFlag = 1;
     00BE 2101                      1- 2871     	MOVIA	0x01
                                    1- 2872     	BANKSEL	_showFlag
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 2873     	MOVAR	_showFlag
                                    1- 2874     	.line	379, "main.c"; 	if(fullFlag)
                                    1- 2875     	BANKSEL	_fullFlag
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 2876     	MOVR	_fullFlag,W
     00C3 0D03                      1- 2877     	BTRSC	STATUS,2
                                    1- 2878     	MGOTO	_00203_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2879     	.line	381, "main.c"; 	fullFlag = 1;
     00C5 2101                      1- 2880     	MOVIA	0x01
     00C6 00rr                      1- 2881     	MOVAR	_fullFlag
                                    1- 2882     	.line	383, "main.c"; 	baiweiNum = 1;
                                    1- 2883     	BANKSEL	_baiweiNum
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 2884     	MOVAR	_baiweiNum
                                    1- 2885     	.line	384, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2886     	BANKSEL	_geweiNum
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 02rr                      1- 2887     	CLRR	_geweiNum
                                    1- 2888     	BANKSEL	_shiweiNum
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 02rr                      1- 2889     	CLRR	_shiweiNum
                                    1- 2890     	.line	384, "main.c"; 	}
                                    1- 2891     	MGOTO	_00227_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
     00CE                           1- 2892     _00203_DS_:
                                    1- 2893     	.line	389, "main.c"; 	if(pwStep == 100)
                                    1- 2894     	BANKSEL	_pwStep
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 2895     	MOVR	_pwStep,W
     00D0 2464                      1- 2896     	XORIA	0x64
     00D1 0903                      1- 2897     	BTRSS	STATUS,2
                                    1- 2898     	MGOTO	_00200_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2899     	.line	391, "main.c"; 	fullFlag = 1;
     00D3 2101                      1- 2900     	MOVIA	0x01
                                    1- 2901     	BANKSEL	_fullFlag
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 00rr                      1- 2902     	MOVAR	_fullFlag
                                    1- 2903     	.line	392, "main.c"; 	baiweiNum = 0;
                                    1- 2904     	BANKSEL	_baiweiNum
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 2905     	CLRR	_baiweiNum
                                    1- 2906     	.line	393, "main.c"; 	shiweiNum = 9;
     00D8 2109                      1- 2907     	MOVIA	0x09
                                    1- 2908     	BANKSEL	_shiweiNum
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 2909     	MOVAR	_shiweiNum
                                    1- 2910     	.line	394, "main.c"; 	geweiNum = 9;
                                    1- 2911     	BANKSEL	_geweiNum
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 2912     	MOVAR	_geweiNum
                                    1- 2913     	MGOTO	_00227_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
     00DE                           1- 2914     _00200_DS_:
                                    1- 2915     	.line	398, "main.c"; 	baiweiNum = 0;
                                    1- 2916     	BANKSEL	_baiweiNum
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 02rr                      1- 2917     	CLRR	_baiweiNum
                                    1- 2918     	.line	399, "main.c"; 	shiweiNum = pwStep/10;
     00E0 210A                      1- 2919     	MOVIA	0x0a
     00E1 00rr                      1- 2920     	MOVAR	STK00
                                    1- 2921     	BANKSEL	_pwStep
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 01rr                      1- 2922     	MOVR	_pwStep,W
                                    1- 2923     	MCALL	__divuchar
     00E4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2924     	BANKSEL	_shiweiNum
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 2925     	MOVAR	_shiweiNum
                                    1- 2926     	.line	400, "main.c"; 	geweiNum = pwStep%10;
     00E7 210A                      1- 2927     	MOVIA	0x0a
     00E8 00rr                      1- 2928     	MOVAR	STK00
                                    1- 2929     	BANKSEL	_pwStep
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 01rr                      1- 2930     	MOVR	_pwStep,W
                                    1- 2931     	MCALL	__moduchar
     00EB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2932     	BANKSEL	_geweiNum
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1- 2933     	MOVAR	_geweiNum
                                    1- 2934     	.line	400, "main.c"; 	}
                                    1- 2935     	MGOTO	_00227_DS_
     00EE 3rrr                      3-   63 m1      LGOTO rom_address
     00EF                           1- 2936     _00206_DS_:
                                    1- 2937     	.line	419, "main.c"; 	showFlag = 0;
                                    1- 2938     	BANKSEL	_showFlag
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 02rr                      1- 2939     	CLRR	_showFlag
     00F1                           1- 2940     _00227_DS_:
                                    1- 2941     	.line	423, "main.c"; 	}
                                    1- 2942     	RETURN	
     00F1 0010                      3-   40 m1      ret
                                    1- 2943     ; exit point of _chrgCtr
                                    1- 2946     ;	code size estimation:
                                    1- 2947     ;	 1110+  370 =  1480 instructions ( 3700 byte)
                                    1- 2949     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
