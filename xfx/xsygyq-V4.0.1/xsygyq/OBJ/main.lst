
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_Quarter_VDD_Convert
                                    1-  136     	extern	_checkBat
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyCtr
                                    1-  139     	extern	_pwmStop
                                    1-  140     	extern	_pwmInit
                                    1-  141     	extern	_gotoSleep
                                    1-  142     	extern	_initSys
                                    1-  143     	extern	_refreshNub
                                    1-  144     	extern	_checkIRKey
                                    1-  145     	extern	_chrgCtr
                                    1-  146     	extern	_isr
                                    1-  147     	extern	_main
                                    1-  148     	extern	_keyRead
                                    1-  149     	extern	_R_Quarter_VDD_DATA
                                    1-  150     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  151     	extern	_intCount
                                    1-  152     	extern	_IntFlag
                                    1-  153     	extern	_baiweiNum
                                    1-  154     	extern	_shiweiNum
                                    1-  155     	extern	_geweiNum
                                    1-  156     	extern	_showFlag
                                    1-  157     	extern	_irStep
                                    1-  158     	extern	_revCount
                                    1-  159     	extern	_checkCount
                                    1-  160     	extern	_pwmTime
                                    1-  161     	extern	_sendFlag
                                    1-  162     	extern	_workTime
                                    1-  163     	extern	_workStep
                                    1-  164     	extern	_pwFlag
                                    1-  165     	extern	_pwShowTime
                                    1-  166     	extern	_stepShowTime
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_keyCount
                                    1-  169     	extern	_longPressFlag
                                    1-  170     	extern	_sleepTime
                                    1-  171     	extern	_fullFlag
                                    1-  172     	extern	_shanTime
                                    1-  173     	extern	_count1s
                                    1-  174     	extern	_waitTime
                                    1-  175     	extern	_offShowTime
                                    1-  176     	extern	_notRecv
                                    1-  177     	extern	_zhedangFlag
                                    1-  178     	extern	_zhedangTime
                                    1-  179     	extern	_sleepFlag
                                    1-  180     	extern	_powerShi
                                    1-  181     	extern	_powerGe
                                    1-  182     	extern	_count5s
                                    1-  183     	extern	_count250ms
                                    1-  184     	extern	_checkBatTime
                                    1-  185     	extern	_fullTime
                                    1-  186     	extern	_waitBatTime
                                    1-  187     	extern	_startTime
                                    1-  188     	extern	_zhedangCount
                                    1-  189     	extern	_revCountFlag
                                    1-  190     	extern	_revCountTime
                                    1-  192     	extern PSAVE
                                    1-  193     	extern SSAVE
                                    1-  194     	extern WSAVE
                                    1-  195     	extern STK04
                                    1-  196     	extern STK03
                                    1-  197     	extern STK02
                                    1-  198     	extern STK01
                                    1-  199     	extern STK00
                                    1-  201     .segment "uninit", 0x20000040
 20000040                           1-  202     PSAVE:
                                    1-  203     	.res 1
 20000041                           1-  204     SSAVE:
                                    1-  205     	.res 1
 20000042                           1-  206     WSAVE:
                                    1-  207     	.res 1
 20000043                           1-  208     STK04:
                                    1-  209     	.res 1
 20000044                           1-  210     STK03:
                                    1-  211     	.res 1
 20000045                           1-  212     STK02:
                                    1-  213     	.res 1
 20000046                           1-  214     STK01:
                                    1-  215     	.res 1
 20000047                           1-  216     STK00:
                                    1-  217     	.res 1
                                    1-  219     ;--------------------------------------------------------
                                    1-  220     ; global definitions
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_Quarter_VDD_DATA:
                                    1-  224     	.res	2
                                    1-  227     .segment "uninit"
     0000                           1-  228     _R_Quarter_VDD_DATA_LB:
                                    1-  229     	.res	1
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     ; absolute symbol definitions
                                    1-  234     ;--------------------------------------------------------
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ; compiler-defined variables
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x104C:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x104D:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x104A:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x104B:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1047:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1048:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1046:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1044:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1045:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x103E:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x103F:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1040:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1041:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1043:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1042:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1038:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1039:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x103A:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x103D:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1036:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1037:
                                    1-  300     	.res	1
                                    1-  301     ;--------------------------------------------------------
                                    1-  302     ; initialized data
                                    1-  303     ;--------------------------------------------------------
                                    1-  305     .segment "idata"
     0000                           1-  306     _intCount:
     0000 0000                      1-  307     	dw	0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _IntFlag:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _baiweiNum:
     0000 0000                      1-  319     	dw	0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _shiweiNum:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _geweiNum:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _showFlag:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _irStep:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _revCount:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _checkCount:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _pwmTime:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _sendFlag:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _workTime:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _workStep:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _pwFlag:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _pwShowTime:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _stepShowTime:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _pwStep:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _keyCount:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _longPressFlag:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _sleepTime:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _fullFlag:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _shanTime:
     0000 0000 0000                 1-  433     	dw	0x00, 0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _count1s:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _waitTime:
     0000 0000 0000                 1-  445     	dw	0x00, 0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _offShowTime:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _notRecv:
     0000 0000                      1-  457     	dw	0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _zhedangFlag:
     0000 0000                      1-  463     	dw	0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _zhedangTime:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _sleepFlag:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _powerShi:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _powerGe:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _count5s:
     0000 0000 0000                 1-  493     	dw	0x00, 0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _count250ms:
     0000 0000                      1-  499     	dw	0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _checkBatTime:
     0000 0000                      1-  505     	dw	0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _fullTime:
     0000 0000                      1-  511     	dw	0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _waitBatTime:
     0000 0000                      1-  517     	dw	0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _startTime:
     0000 0000                      1-  523     	dw	0x00
                                    1-  527     .segment "idata"
     0000                           1-  528     _zhedangCount:
     0000 0000                      1-  529     	dw	0x00
                                    1-  533     .segment "idata"
     0000                           1-  534     _revCountFlag:
     0000 0000                      1-  535     	dw	0x00
                                    1-  539     .segment "idata"
     0000                           1-  540     _revCountTime:
     0000 0000                      1-  541     	dw	0x00
                                    1-  545     .segment "idata"
     0000                           1-  546     _numArray:
     0000 003F                      1-  547     	dw	0x3f
     0001 0006                      1-  548     	dw	0x06
     0002 005B                      1-  549     	dw	0x5b
     0003 004F                      1-  550     	dw	0x4f
     0004 0066                      1-  551     	dw	0x66
     0005 006D                      1-  552     	dw	0x6d
     0006 007D                      1-  553     	dw	0x7d
     0007 0007                      1-  554     	dw	0x07
     0008 007F                      1-  555     	dw	0x7f
     0009 006F                      1-  556     	dw	0x6f
     000A 0071                      1-  557     	dw	0x71
     000B 0079                      1-  558     	dw	0x79
     000C 0050                      1-  559     	dw	0x50
                                    1-  562     ;--------------------------------------------------------
                                    1-  563     ; overlayable items in internal ram 
                                    1-  564     ;--------------------------------------------------------
                                    1-  565     ;	udata_ovr
                                    1-  566     ;--------------------------------------------------------
                                    1-  567     ; reset vector 
                                    1-  568     ;--------------------------------------------------------
                                    1-  569     ORG	0x0000
     0000 3rrr                      1-  570     	LGOTO	__nyc_ny8_startup
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ; interrupt and initialization code
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ORG 0x0008
                                    1-  575     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  577     .segment "code"
     0000                           1-  578     __sdcc_interrupt:
                                    1-  579     ;***
                                    1-  580     ;  pBlock Stats: dbName = I
                                    1-  581     ;***
                                    1-  582     ;2 compiler assigned registers:
                                    1-  583     ;   STK00
                                    1-  584     ;   STK01
                                    1-  585     ;; Starting pCode block
     0000                           1-  586     _isr:
                                    1-  587     ; 0 exit points
                                    1-  588     	.line	83, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  589     	MOVAR	WSAVE
     0001 1503                      1-  590     	SWAPR	STATUS,W
     0002 0283                      1-  591     	CLRR	STATUS
     0003 00rr                      1-  592     	MOVAR	SSAVE
     0004 010A                      1-  593     	MOVR	PCHBUF,W
     0005 028A                      1-  594     	CLRR	PCHBUF
     0006 00rr                      1-  595     	MOVAR	PSAVE
     0007 0104                      1-  596     	MOVR	FSR,W
                                    1-  597     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  598     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  599     	MOVR	STK00,W
                                    1-  600     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  601     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  602     	MOVR	STK01,W
                                    1-  603     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  604     	MOVAR	___sdcc_saved_stk01
                                    1-  605     	.line	85, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  606     	BTRSS	_INTFbits,0
                                    1-  607     	MGOTO	_00120_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  608     	.line	87, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  609     	MOVIA	0x37
     0013 03rr                      1-  610     	ADDAR	_TMR0,F
                                    1-  611     	.line	89, "main.c"; 	if(++intCount >= 100)
                                    1-  612     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  613     	INCR	_intCount,F
                                    1-  614     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  615     	MOVIA	0x64
     0017 04rr                      1-  616     	SUBAR	_intCount,W
     0018 0803                      1-  617     	BTRSS	STATUS,0
                                    1-  618     	MGOTO	_00120_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  619     	.line	91, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  620     	MOVIA	0x01
                                    1-  621     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  622     	MOVAR	_IntFlag
                                    1-  623     	.line	92, "main.c"; 	intCount = 0;	
                                    1-  624     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  625     	CLRR	_intCount
                                    1-  626     	.line	93, "main.c"; 	if(++count1s > 100)
                                    1-  627     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  628     	INCR	_count1s,F
                                    1-  629     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  630     ;;unsigned compare: left >= lit (0x65=101), size=1
     0021 2165                      1-  631     	MOVIA	0x65
     0022 04rr                      1-  632     	SUBAR	_count1s,W
     0023 0803                      1-  633     	BTRSS	STATUS,0
                                    1-  634     	MGOTO	_00120_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  635     	.line	95, "main.c"; 	count1s = 0;
     0025 02rr                      1-  636     	CLRR	_count1s
                                    1-  637     	.line	96, "main.c"; 	if(stepShowTime > 0)
                                    1-  638     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  639     	MOVR	_stepShowTime,W
     0028 0D03                      1-  640     	BTRSC	STATUS,2
                                    1-  641     	MGOTO	_00113_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  642     	.line	97, "main.c"; 	stepShowTime--;
     002A 06rr                      1-  643     	DECR	_stepShowTime,F
                                    1-  644     	MGOTO	_00120_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  645     _00113_DS_:
                                    1-  646     	.line	98, "main.c"; 	else if(pwShowTime > 0)
                                    1-  647     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  648     	MOVR	_pwShowTime,W
     002E 0D03                      1-  649     	BTRSC	STATUS,2
                                    1-  650     	MGOTO	_00110_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  651     	.line	100, "main.c"; 	pwShowTime--;
     0030 06rr                      1-  652     	DECR	_pwShowTime,F
                                    1-  653     	MGOTO	_00120_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  654     _00110_DS_:
                                    1-  655     	.line	102, "main.c"; 	else if(offShowTime > 0)
                                    1-  656     	BANKSEL	_offShowTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  657     	MOVR	_offShowTime,W
     0034 0D03                      1-  658     	BTRSC	STATUS,2
                                    1-  659     	MGOTO	_00120_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  660     	.line	104, "main.c"; 	--offShowTime;
     0036 17rr                      1-  661     	DECRSZ	_offShowTime,F
                                    1-  662     	.line	105, "main.c"; 	if(offShowTime == 0)
                                    1-  663     	MGOTO	_00120_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  664     	.line	106, "main.c"; 	sleepFlag = 1;
     0038 2101                      1-  665     	MOVIA	0x01
                                    1-  666     	BANKSEL	_sleepFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1-  667     	MOVAR	_sleepFlag
     003B                           1-  668     _00120_DS_:
                                    1-  669     	.line	123, "main.c"; 	if(INTFbits.PABIF)
     003B 08rr                      1-  670     	BTRSS	_INTFbits,1
                                    1-  671     	MGOTO	_00122_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     	.line	125, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003D 21FD                      1-  673     	MOVIA	0xfd
     003E 00rr                      1-  674     	MOVAR	_INTF
                                    1-  675     	.line	126, "main.c"; 	revCount++;
                                    1-  676     	BANKSEL	_revCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 05rr                      1-  677     	INCR	_revCount,F
     0041                           1-  678     _00122_DS_:
                                    1-  679     	.line	129, "main.c"; 	INTF = 0;
     0041 02rr                      1-  680     	CLRR	_INTF
                                    1-  681     	.line	131, "main.c"; 	}
                                    1-  682     	BANKSEL	___sdcc_saved_stk01
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  683     	MOVR	___sdcc_saved_stk01,W
     0044 00rr                      1-  684     	MOVAR	STK01
                                    1-  685     	BANKSEL	___sdcc_saved_stk00
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  686     	MOVR	___sdcc_saved_stk00,W
     0047 00rr                      1-  687     	MOVAR	STK00
                                    1-  688     	BANKSEL	___sdcc_saved_fsr
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  689     	MOVR	___sdcc_saved_fsr,W
     004A 0084                      1-  690     	MOVAR	FSR
     004B 01rr                      1-  691     	MOVR	PSAVE,W
     004C 008A                      1-  692     	MOVAR	PCHBUF
     004D 0283                      1-  693     	CLRR	STATUS
     004E 15rr                      1-  694     	SWAPR	SSAVE,W
     004F 0083                      1-  695     	MOVAR	STATUS
     0050 15rr                      1-  696     	SWAPR	WSAVE,F
     0051 15rr                      1-  697     	SWAPR	WSAVE,W
     0052                           1-  698     END_OF_INTERRUPT:
     0052 0011                      1-  699     	RETIE	
                                    1-  701     ;--------------------------------------------------------
                                    1-  702     ; code
                                    1-  703     ;--------------------------------------------------------
                                    1-  704     ;***
                                    1-  705     ;  pBlock Stats: dbName = M
                                    1-  706     ;***
                                    1-  707     ;has an exit
                                    1-  708     ;functions called:
                                    1-  709     ;   _initSys
                                    1-  710     ;   _initAD
                                    1-  711     ;   _refreshNub
                                    1-  712     ;   _refreshNub
                                    1-  713     ;   _setInput
                                    1-  714     ;   __divuchar
                                    1-  715     ;   __moduchar
                                    1-  716     ;   _delay
                                    1-  717     ;   _delay
                                    1-  718     ;   _keyCtr
                                    1-  719     ;   _checkBat
                                    1-  720     ;   _chrgCtr
                                    1-  721     ;   _gotoSleep
                                    1-  722     ;   _gotoSleep
                                    1-  723     ;   _delay
                                    1-  724     ;   _initSys
                                    1-  725     ;   _initAD
                                    1-  726     ;   _refreshNub
                                    1-  727     ;   _refreshNub
                                    1-  728     ;   _setInput
                                    1-  729     ;   __divuchar
                                    1-  730     ;   __moduchar
                                    1-  731     ;   _delay
                                    1-  732     ;   _delay
                                    1-  733     ;   _keyCtr
                                    1-  734     ;   _checkBat
                                    1-  735     ;   _chrgCtr
                                    1-  736     ;   _gotoSleep
                                    1-  737     ;   _gotoSleep
                                    1-  738     ;   _delay
                                    1-  739     ;3 compiler assigned registers:
                                    1-  740     ;   STK00
                                    1-  741     ;   r0x104C
                                    1-  742     ;   r0x104D
                                    1-  743     ;; Starting pCode block
                                    1-  744     .segment "code"; module=main, function=_main
                                    1-  746     ;local variable name mapping:
     0000                           1-  748     _main:
                                    1-  749     ; 2 exit points
                                    1-  750     	.line	135, "main.c"; 	initSys();
                                    1-  751     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  752     	.line	136, "main.c"; 	initAD();
                                    1-  753     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  754     	.line	137, "main.c"; 	startTime = 200;
     0002 21C8                      1-  755     	MOVIA	0xc8
                                    1-  756     	BANKSEL	_startTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  757     	MOVAR	_startTime
     0005                           1-  758     _00164_DS_:
                                    1-  759     	.line	141, "main.c"; 	CLRWDT();							// Clear WatchDog
     0005 0002                      1-  760     	clrwdt
                                    1-  761     	.line	142, "main.c"; 	if(showFlag)
                                    1-  762     	BANKSEL	_showFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  763     	MOVR	_showFlag,W
     0008 0D03                      1-  764     	BTRSC	STATUS,2
                                    1-  765     	MGOTO	_00135_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  766     	.line	143, "main.c"; 	refreshNub();
                                    1-  767     	MCALL	_refreshNub
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  768     	MGOTO	_00136_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1-  769     _00135_DS_:
                                    1-  770     	.line	146, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  771     	BANKSEL	_keyCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  772     	MOVR	_keyCount,W
     000E 0D03                      1-  773     	BTRSC	STATUS,2
                                    1-  774     	MGOTO	_00131_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  775     	BANKSEL	_pwFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  776     	MOVR	_pwFlag,W
     0012 2401                      1-  777     	XORIA	0x01
     0013 0903                      1-  778     	BTRSS	STATUS,2
                                    1-  779     	MGOTO	_00131_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  780     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  781     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  782     	.line	148, "main.c"; 	if(pwStep > 99)
     0015 2164                      1-  783     	MOVIA	0x64
                                    1-  784     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1-  785     	SUBAR	_pwStep,W
     0018 0803                      1-  786     	BTRSS	STATUS,0
                                    1-  787     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  788     	.line	150, "main.c"; 	baiweiNum = 1;
     001A 2101                      1-  789     	MOVIA	0x01
                                    1-  790     	BANKSEL	_baiweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  791     	MOVAR	_baiweiNum
                                    1-  792     	.line	151, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  793     	BANKSEL	_geweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  794     	CLRR	_geweiNum
                                    1-  795     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1-  796     	CLRR	_shiweiNum
                                    1-  797     	MGOTO	_00129_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1-  798     _00128_DS_:
                                    1-  799     	.line	155, "main.c"; 	baiweiNum = 0;
                                    1-  800     	BANKSEL	_baiweiNum
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  801     	CLRR	_baiweiNum
                                    1-  802     	.line	156, "main.c"; 	shiweiNum = powerShi;
                                    1-  803     	BANKSEL	_powerShi
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  804     	MOVR	_powerShi,W
                                    1-  805     	BANKSEL	_shiweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  806     	MOVAR	_shiweiNum
                                    1-  807     	.line	157, "main.c"; 	geweiNum = powerGe;
                                    1-  808     	BANKSEL	_powerGe
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  809     	MOVR	_powerGe,W
                                    1-  810     	BANKSEL	_geweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  811     	MOVAR	_geweiNum
     002C                           1-  812     _00129_DS_:
                                    1-  813     	.line	159, "main.c"; 	refreshNub();
                                    1-  814     	MCALL	_refreshNub
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  815     	MGOTO	_00136_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1-  816     _00131_DS_:
                                    1-  817     	.line	163, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  818     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  819     	CLRR	_geweiNum
                                    1-  820     	BANKSEL	_shiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  821     	CLRR	_shiweiNum
                                    1-  822     	BANKSEL	_baiweiNum
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 02rr                      1-  823     	CLRR	_baiweiNum
                                    1-  824     	.line	164, "main.c"; 	setInput();
                                    1-  825     	MCALL	_setInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
     0035                           1-  826     _00136_DS_:
                                    1-  827     	.line	167, "main.c"; 	if(!IntFlag)
                                    1-  828     	BANKSEL	_IntFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  829     	MOVR	_IntFlag,W
     0037 0D03                      1-  830     	BTRSC	STATUS,2
                                    1-  831     	MGOTO	_00164_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  832     	.line	169, "main.c"; 	IntFlag = 0;
     0039 02rr                      1-  833     	CLRR	_IntFlag
                                    1-  834     	.line	170, "main.c"; 	powerShi = pwStep/10;
     003A 210A                      1-  835     	MOVIA	0x0a
     003B 00rr                      1-  836     	MOVAR	STK00
                                    1-  837     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  838     	MOVR	_pwStep,W
                                    1-  839     	MCALL	__divuchar
     003E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  840     	BANKSEL	_powerShi
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1-  841     	MOVAR	_powerShi
                                    1-  842     	.line	171, "main.c"; 	powerGe = pwStep%10;
     0041 210A                      1-  843     	MOVIA	0x0a
     0042 00rr                      1-  844     	MOVAR	STK00
                                    1-  845     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  846     	MOVR	_pwStep,W
                                    1-  847     	MCALL	__moduchar
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  848     	BANKSEL	_powerGe
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1-  849     	MOVAR	_powerGe
                                    1-  850     	.line	173, "main.c"; 	if(waitTime > 0)
                                    1-  851     	BANKSEL	_waitTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  852     	MOVR	_waitTime,W
     004A 11rr                      1-  853     	IORAR	(_waitTime + 1),W
     004B 0D03                      1-  854     	BTRSC	STATUS,2
                                    1-  855     	MGOTO	_00161_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  856     	.line	174, "main.c"; 	waitTime--;
     004D 21FF                      1-  857     	MOVIA	0xff
     004E 03rr                      1-  858     	ADDAR	_waitTime,F
     004F 0803                      1-  859     	BTRSS	STATUS,0
     0050 06rr                      1-  860     	DECR	(_waitTime + 1),F
                                    1-  861     	.line	174, "main.c"; 	else if(pwFlag)
                                    1-  862     	MGOTO	_00164_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  863     _00161_DS_:
                                    1-  864     	.line	175, "main.c"; 	{
                                    1-  865     	BANKSEL	_pwFlag
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  866     	MOVR	_pwFlag,W
     0054 0D03                      1-  867     	BTRSC	STATUS,2
                                    1-  868     	MGOTO	_00164_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     	.line	178, "main.c"; 	if((++count250ms >= 50))
                                    1-  870     	BANKSEL	_count250ms
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1-  871     	INCR	_count250ms,F
                                    1-  872     ;;unsigned compare: left < lit (0x32=50), size=1
     0058 2132                      1-  873     	MOVIA	0x32
     0059 04rr                      1-  874     	SUBAR	_count250ms,W
     005A 0803                      1-  875     	BTRSS	STATUS,0
                                    1-  876     	MGOTO	_00141_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  877     	.line	181, "main.c"; 	count250ms = 0;
     005C 02rr                      1-  878     	CLRR	_count250ms
                                    1-  879     	.line	182, "main.c"; 	zhedangCount = 0;
                                    1-  880     	BANKSEL	_zhedangCount
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 02rr                      1-  881     	CLRR	_zhedangCount
                                    1-  882     	.line	184, "main.c"; 	revCount = 0;
                                    1-  883     	BANKSEL	_revCount
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1-  884     	CLRR	_revCount
                                    1-  885     	.line	185, "main.c"; 	PORTBbits.PB1 = 1;						// Set PB[1]= 1
     0061 18rr                      1-  886     	BSR	_PORTBbits,1
                                    1-  887     	.line	186, "main.c"; 	IRCR = C_IR_38K | C_IR_En;	
     0062 2101                      1-  888     	MOVIA	0x01
     0063 00rr                      1-  889     	SFUN	_IRCR
                                    1-  890     	.line	187, "main.c"; 	delay(10);
     0064 210A                      1-  891     	MOVIA	0x0a
                                    1-  892     	MCALL	_delay
     0065 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  893     	.line	188, "main.c"; 	PORTA |= 0x40;
                                    1-  894     	BANKSEL	_PORTA
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 1Brr                      1-  895     	BSR	_PORTA,6
                                    1-  896     	.line	189, "main.c"; 	for(i=0;i<6;i++)
                                    1-  897     	BANKSEL	r0x104C
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 02rr                      1-  898     	CLRR	r0x104C
     006A                           1-  899     _00166_DS_:
                                    1-  900     	.line	191, "main.c"; 	delay(10);
     006A 210A                      1-  901     	MOVIA	0x0a
                                    1-  902     	MCALL	_delay
     006B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  903     	.line	189, "main.c"; 	for(i=0;i<6;i++)
                                    1-  904     	BANKSEL	r0x104C
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 05rr                      1-  905     	INCR	r0x104C,F
                                    1-  906     ;;unsigned compare: left < lit (0x6=6), size=1
     006E 2106                      1-  907     	MOVIA	0x06
     006F 04rr                      1-  908     	SUBAR	r0x104C,W
     0070 0803                      1-  909     	BTRSS	STATUS,0
                                    1-  910     	MGOTO	_00166_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  911     	.line	194, "main.c"; 	PORTBbits.PB1 = 0;						// Set PB[1]= 1
     0072 1Crr                      1-  912     	BCR	_PORTBbits,1
                                    1-  913     	.line	195, "main.c"; 	IRCR = C_IR_38K;
     0073 0200                      1-  914     	CLRA	
     0074 00rr                      1-  915     	SFUN	_IRCR
                                    1-  916     	.line	196, "main.c"; 	PORTA &= 0xBF;
                                    1-  917     	BANKSEL	_PORTA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 1Frr                      1-  918     	BCR	_PORTA,6
                                    1-  919     	.line	197, "main.c"; 	revCount = 0;
                                    1-  920     	BANKSEL	_revCount
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 02rr                      1-  921     	CLRR	_revCount
     0079                           1-  922     _00141_DS_:
                                    1-  923     	.line	260, "main.c"; 	keyCtr();
                                    1-  924     	MCALL	_keyCtr
     0079 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  925     	.line	261, "main.c"; 	if(++checkBatTime >= 20)
                                    1-  926     	BANKSEL	_checkBatTime
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 05rr                      1-  927     	INCR	_checkBatTime,F
                                    1-  928     ;;unsigned compare: left < lit (0x14=20), size=1
     007C 2114                      1-  929     	MOVIA	0x14
     007D 04rr                      1-  930     	SUBAR	_checkBatTime,W
     007E 0803                      1-  931     	BTRSS	STATUS,0
                                    1-  932     	MGOTO	_00145_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  933     	.line	263, "main.c"; 	checkBatTime = 0;
     0080 02rr                      1-  934     	CLRR	_checkBatTime
                                    1-  935     	.line	264, "main.c"; 	if(workTime == 0)
                                    1-  936     	BANKSEL	_workTime
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1-  937     	MOVR	_workTime,W
     0083 0D03                      1-  938     	BTRSC	STATUS,2
                                    1-  939     	.line	265, "main.c"; 	checkBat();
                                    1-  940     	MCALL	_checkBat
     0084 2rrr                      3-   66 m1      LCALL rom_address
     0085                           1-  941     _00145_DS_:
                                    1-  942     	.line	267, "main.c"; 	chrgCtr();
                                    1-  943     	MCALL	_chrgCtr
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  944     	.line	269, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0 && startTime == 0)
                                    1-  945     	BANKSEL	_PORTA
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1-  946     	MOVR	_PORTA,W
                                    1-  947     	BANKSEL	r0x104C
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1-  948     	MOVAR	r0x104C
                                    1-  949     	BANKSEL	r0x104D
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 02rr                      1-  950     	CLRR	r0x104D
                                    1-  951     	BANKSEL	r0x104C
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 07rr                      1-  952     	COMR	r0x104C,W
     008E 00rr                      1-  953     	MOVAR	r0x104C
                                    1-  954     	BANKSEL	r0x104D
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 07rr                      1-  955     	COMR	r0x104D,W
     0091 00rr                      1-  956     	MOVAR	r0x104D
                                    1-  957     	BANKSEL	r0x104C
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 0Arr                      1-  958     	BTRSS	r0x104C,5
                                    1-  959     	MGOTO	_00149_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  960     	BANKSEL	_keyCount
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1-  961     	MOVR	_keyCount,W
     0097 0903                      1-  962     	BTRSS	STATUS,2
                                    1-  963     	MGOTO	_00149_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  964     	BANKSEL	_pwFlag
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 01rr                      1-  965     	MOVR	_pwFlag,W
     009B 0903                      1-  966     	BTRSS	STATUS,2
                                    1-  967     	MGOTO	_00149_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  968     	BANKSEL	_stepShowTime
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 01rr                      1-  969     	MOVR	_stepShowTime,W
     009F 0903                      1-  970     	BTRSS	STATUS,2
                                    1-  971     	MGOTO	_00149_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  972     	BANKSEL	_pwShowTime
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1-  973     	MOVR	_pwShowTime,W
     00A3 0903                      1-  974     	BTRSS	STATUS,2
                                    1-  975     	MGOTO	_00149_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  976     	BANKSEL	_offShowTime
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 01rr                      1-  977     	MOVR	_offShowTime,W
     00A7 0903                      1-  978     	BTRSS	STATUS,2
                                    1-  979     	MGOTO	_00149_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  980     	BANKSEL	_startTime
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 01rr                      1-  981     	MOVR	_startTime,W
     00AB 0903                      1-  982     	BTRSS	STATUS,2
                                    1-  983     	MGOTO	_00149_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  984     	.line	272, "main.c"; 	if(++sleepTime > 100)
                                    1-  985     	BANKSEL	_sleepTime
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 05rr                      1-  986     	INCR	_sleepTime,F
                                    1-  987     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  988     ;;unsigned compare: left >= lit (0x65=101), size=1
     00AF 2165                      1-  989     	MOVIA	0x65
     00B0 04rr                      1-  990     	SUBAR	_sleepTime,W
     00B1 0C03                      1-  991     	BTRSC	STATUS,0
                                    1-  992     	.line	273, "main.c"; 	gotoSleep();
                                    1-  993     	MCALL	_gotoSleep
     00B2 2rrr                      3-   66 m1      LCALL rom_address
     00B3                           1-  994     _00149_DS_:
                                    1-  995     	.line	275, "main.c"; 	if(sleepFlag)
                                    1-  996     	BANKSEL	_sleepFlag
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 01rr                      1-  997     	MOVR	_sleepFlag,W
     00B5 0903                      1-  998     	BTRSS	STATUS,2
                                    1-  999     	.line	277, "main.c"; 	gotoSleep();
                                    1- 1000     	MCALL	_gotoSleep
     00B6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1001     	.line	279, "main.c"; 	delay(100);
     00B7 2164                      1- 1002     	MOVIA	0x64
                                    1- 1003     	MCALL	_delay
     00B8 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1004     	.line	279, "main.c"; 	//    	if(getbit(PORTB, 3) == 0)
                                    1- 1005     	MGOTO	_00164_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1006     	.line	301, "main.c"; 	}
                                    1- 1007     	RETURN	
     00BA 0010                      3-   40 m1      ret
                                    1- 1008     ; exit point of _main
                                    1- 1010     ;***
                                    1- 1011     ;  pBlock Stats: dbName = C
                                    1- 1012     ;***
                                    1- 1013     ;has an exit
                                    1- 1014     ;2 compiler assigned registers:
                                    1- 1015     ;   r0x1036
                                    1- 1016     ;   r0x1037
                                    1- 1017     ;; Starting pCode block
                                    1- 1018     .segment "code"; module=main, function=_delay
                                    1- 1020     ;local variable name mapping:
     0000                           1- 1023     _delay:
                                    1- 1024     ; 2 exit points
                                    1- 1025     	.line	838, "main.c"; 	void delay(u8t count)
                                    1- 1026     	BANKSEL	r0x1036
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1027     	MOVAR	r0x1036
                                    1- 1028     	.line	841, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1- 1029     	MOVIA	0x01
                                    1- 1030     	BANKSEL	r0x1037
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1031     	MOVAR	r0x1037
     0005                           1- 1032     _00519_DS_:
                                    1- 1033     	BANKSEL	r0x1037
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1034     	MOVR	r0x1037,W
                                    1- 1035     	BANKSEL	r0x1036
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1036     	SUBAR	r0x1036,W
     0009 0803                      1- 1037     	BTRSS	STATUS,0
                                    1- 1038     	MGOTO	_00521_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1039     	BANKSEL	r0x1037
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1040     	INCR	r0x1037,F
                                    1- 1041     	MGOTO	_00519_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1042     _00521_DS_:
                                    1- 1043     	.line	843, "main.c"; 	}
                                    1- 1044     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1045     ; exit point of _delay
                                    1- 1047     ;***
                                    1- 1048     ;  pBlock Stats: dbName = C
                                    1- 1049     ;***
                                    1- 1050     ;has an exit
                                    1- 1051     ;; Starting pCode block
                                    1- 1052     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1054     _F_wait_eoc:
                                    1- 1055     ; 2 exit points
     0000                           1- 1056     _00512_DS_:
                                    1- 1057     	.line	834, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1058     	BTRSS	_ADMDbits,5
                                    1- 1059     	MGOTO	_00512_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1060     	.line	836, "main.c"; 	}
                                    1- 1061     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1062     ; exit point of _F_wait_eoc
                                    1- 1064     ;***
                                    1- 1065     ;  pBlock Stats: dbName = C
                                    1- 1066     ;***
                                    1- 1067     ;has an exit
                                    1- 1068     ;functions called:
                                    1- 1069     ;   _F_wait_eoc
                                    1- 1070     ;   _F_wait_eoc
                                    1- 1071     ;6 compiler assigned registers:
                                    1- 1072     ;   r0x1038
                                    1- 1073     ;   r0x1039
                                    1- 1074     ;   r0x103A
                                    1- 1075     ;   r0x103B
                                    1- 1076     ;   r0x103C
                                    1- 1077     ;   r0x103D
                                    1- 1078     ;; Starting pCode block
                                    1- 1079     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1081     ;local variable name mapping:
     0000                           1- 1084     _F_Quarter_VDD_Convert:
                                    1- 1085     ; 2 exit points
                                    1- 1086     	.line	819, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1087     	BANKSEL	r0x1038
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1088     	MOVAR	r0x1038
                                    1- 1089     	.line	822, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1- 1090     	MOVIA	0x9b
     0003 00rr                      1- 1091     	MOVAR	_ADMD
                                    1- 1092     	.line	823, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1093     	MOVIA	0x01
                                    1- 1094     	BANKSEL	r0x1039
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1095     	MOVAR	r0x1039
     0007                           1- 1096     _00505_DS_:
                                    1- 1097     	BANKSEL	r0x1039
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1098     	MOVR	r0x1039,W
                                    1- 1099     	BANKSEL	r0x1038
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1100     	SUBAR	r0x1038,W
     000B 0803                      1- 1101     	BTRSS	STATUS,0
                                    1- 1102     	MGOTO	_00507_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1103     	.line	825, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1104     	BSR	_ADMDbits,6
                                    1- 1105     	.line	826, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1106     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1107     	.line	827, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1108     	MOVIA	0x0f
     0010 10rr                      1- 1109     	ANDAR	_ADR,W
                                    1- 1110     ;;3	MOVAR	r0x103A
                                    1- 1111     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1112     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1113     	.line	828, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1114     	MOVR	_ADD,W
                                    1- 1115     	BANKSEL	r0x103A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1116     	MOVAR	r0x103A
                                    1- 1117     ;;1	CLRR	r0x103B
                                    1- 1118     ;;101	MOVR	r0x103A,W
                                    1- 1119     ;;99	MOVAR	r0x103C
     0016 2100                      1- 1120     	MOVIA	0x00
                                    1- 1121     	BANKSEL	r0x103D
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1122     	MOVAR	r0x103D
                                    1- 1123     ;;100	MOVR	r0x103C,W
                                    1- 1124     	BANKSEL	r0x103A
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1125     	MOVR	r0x103A,W
                                    1- 1126     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1127     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1128     	BANKSEL	r0x103D
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1129     	MOVR	r0x103D,W
     001F 0C03                      1- 1130     	BTRSC	STATUS,0
     0020 05rr                      1- 1131     	INCR	r0x103D,W
     0021 0D03                      1- 1132     	BTRSC	STATUS,2
                                    1- 1133     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1134     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1135     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1136     _00001_DS_:
                                    1- 1137     	.line	823, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1138     	BANKSEL	r0x1039
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1139     	INCR	r0x1039,F
                                    1- 1140     	MGOTO	_00505_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1141     _00507_DS_:
                                    1- 1142     	.line	830, "main.c"; 	}
                                    1- 1143     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1144     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1146     ;***
                                    1- 1147     ;  pBlock Stats: dbName = C
                                    1- 1148     ;***
                                    1- 1149     ;has an exit
                                    1- 1150     ;functions called:
                                    1- 1151     ;   _F_Quarter_VDD_Convert
                                    1- 1152     ;   _F_Quarter_VDD_Convert
                                    1- 1153     ;6 compiler assigned registers:
                                    1- 1154     ;   r0x103E
                                    1- 1155     ;   r0x103F
                                    1- 1156     ;   r0x1040
                                    1- 1157     ;   r0x1041
                                    1- 1158     ;   r0x1042
                                    1- 1159     ;   r0x1043
                                    1- 1160     ;; Starting pCode block
                                    1- 1161     .segment "code"; module=main, function=_checkBat
                                    1- 1163     ;local variable name mapping:
     0000                           1- 1166     _checkBat:
                                    1- 1167     ; 2 exit points
                                    1- 1168     	.line	703, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1169     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1170     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1171     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1172     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1173     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1174     	.line	704, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1175     	MOVIA	0x08
                                    1- 1176     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1177     	.line	705, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1178     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1179     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1180     	ANDIA	0xf0
     000A 00rr                      1- 1181     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1182     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1183     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1184     	ANDIA	0x0f
     000E 11rr                      1- 1185     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1186     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1187     	.line	706, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1188     	MOVIA	0xf0
                                    1- 1189     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1190     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1191     	.line	707, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1192     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1193     	BANKSEL	r0x1040
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1194     	MOVAR	r0x1040
                                    1- 1195     	BANKSEL	r0x103E
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1196     	MOVAR	r0x103E
                                    1- 1197     	BANKSEL	r0x103F
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1198     	CLRR	r0x103F
                                    1- 1199     ;;104	MOVR	r0x103E,W
     001A 2100                      1- 1200     	MOVIA	0x00
                                    1- 1201     	BANKSEL	r0x1041
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1202     	MOVAR	r0x1041
                                    1- 1203     	BANKSEL	r0x1040
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1204     	MOVR	r0x1040,W
                                    1- 1205     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1206     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1207     	BANKSEL	r0x1041
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1208     	MOVR	r0x1041,W
     0023 0C03                      1- 1209     	BTRSC	STATUS,0
     0024 05rr                      1- 1210     	INCR	r0x1041,W
     0025 0D03                      1- 1211     	BTRSC	STATUS,2
                                    1- 1212     	MGOTO	_00002_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1213     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1214     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1215     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1216     _00002_DS_:
                                    1- 1217     	.line	708, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1218     	BCR	STATUS,0
                                    1- 1219     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1220     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1221     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1222     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1223     	BCR	STATUS,0
     002E 13rr                      1- 1224     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1225     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1226     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1227     	BCR	STATUS,0
     0031 13rr                      1- 1228     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1229     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1230     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1231     ;;unsigned compare: left >= lit (0x835=2101), size=2
                                    1- 1232     	.line	709, "main.c"; 	if(R_Quarter_VDD_DATA > 2100)
     0033 2108                      1- 1233     	MOVIA	0x08
     0034 04rr                      1- 1234     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1235     	BTRSS	STATUS,2
                                    1- 1236     	MGOTO	_00481_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 2135                      1- 1237     	MOVIA	0x35
     0038 04rr                      1- 1238     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1239     _00481_DS_:
     0039 0803                      1- 1240     	BTRSS	STATUS,0
                                    1- 1241     	MGOTO	_00414_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1242     	.line	711, "main.c"; 	if(++fullTime > 200)
                                    1- 1243     	BANKSEL	_fullTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 1244     	INCR	_fullTime,F
                                    1- 1245     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1246     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003D 21C9                      1- 1247     	MOVIA	0xc9
     003E 04rr                      1- 1248     	SUBAR	_fullTime,W
     003F 0803                      1- 1249     	BTRSS	STATUS,0
                                    1- 1250     	MGOTO	_00416_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1251     	.line	713, "main.c"; 	fullFlag = 1;
     0041 2101                      1- 1252     	MOVIA	0x01
                                    1- 1253     	BANKSEL	_fullFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1254     	MOVAR	_fullFlag
                                    1- 1255     	.line	714, "main.c"; 	pwStep = 100;
     0044 2164                      1- 1256     	MOVIA	0x64
                                    1- 1257     	BANKSEL	_pwStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1258     	MOVAR	_pwStep
                                    1- 1259     	MGOTO	_00416_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1260     ;;unsigned compare: left < lit (0x60E=1550), size=2
     0048                           1- 1261     _00414_DS_:
                                    1- 1262     	.line	717, "main.c"; 	else if(R_Quarter_VDD_DATA < 1550)
     0048 2106                      1- 1263     	MOVIA	0x06
                                    1- 1264     	BANKSEL	_R_Quarter_VDD_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1265     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     004B 0903                      1- 1266     	BTRSS	STATUS,2
                                    1- 1267     	MGOTO	_00483_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 210E                      1- 1268     	MOVIA	0x0e
     004E 04rr                      1- 1269     	SUBAR	_R_Quarter_VDD_DATA,W
     004F                           1- 1270     _00483_DS_:
     004F 0C03                      1- 1271     	BTRSC	STATUS,0
                                    1- 1272     	MGOTO	_00411_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1273     	.line	719, "main.c"; 	pwStep = 0;
                                    1- 1274     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 1275     	CLRR	_pwStep
                                    1- 1276     	.line	720, "main.c"; 	fullTime = 0;
                                    1- 1277     	BANKSEL	_fullTime
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1278     	CLRR	_fullTime
                                    1- 1279     	.line	721, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 1280     	BANKSEL	_PORTA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 0Err                      1- 1281     	BTRSC	_PORTA,5
                                    1- 1282     	MGOTO	_00416_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1283     	.line	723, "main.c"; 	pwFlag = 0;		//关机
                                    1- 1284     	BANKSEL	_pwFlag
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1285     	CLRR	_pwFlag
                                    1- 1286     	.line	724, "main.c"; 	workStep = 0;
                                    1- 1287     	BANKSEL	_workStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1- 1288     	CLRR	_workStep
                                    1- 1289     	.line	725, "main.c"; 	pwShowTime = 0;
                                    1- 1290     	BANKSEL	_pwShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 1291     	CLRR	_pwShowTime
                                    1- 1292     	.line	726, "main.c"; 	stepShowTime = 0;
                                    1- 1293     	BANKSEL	_stepShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1294     	CLRR	_stepShowTime
                                    1- 1295     	.line	727, "main.c"; 	offShowTime = 0;
                                    1- 1296     	BANKSEL	_offShowTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1297     	CLRR	_offShowTime
                                    1- 1298     	MGOTO	_00416_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 1299     _00411_DS_:
                                    1- 1300     	.line	733, "main.c"; 	fullTime = 0;
                                    1- 1301     	BANKSEL	_fullTime
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 02rr                      1- 1302     	CLRR	_fullTime
                                    1- 1303     ;;unsigned compare: left < lit (0x802=2050), size=2
                                    1- 1304     	.line	734, "main.c"; 	if(R_Quarter_VDD_DATA >= 2050)
     0065 2108                      1- 1305     	MOVIA	0x08
                                    1- 1306     	BANKSEL	_R_Quarter_VDD_DATA
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 1307     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0068 0903                      1- 1308     	BTRSS	STATUS,2
                                    1- 1309     	MGOTO	_00484_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 2102                      1- 1310     	MOVIA	0x02
     006B 04rr                      1- 1311     	SUBAR	_R_Quarter_VDD_DATA,W
     006C                           1- 1312     _00484_DS_:
     006C 0803                      1- 1313     	BTRSS	STATUS,0
                                    1- 1314     	MGOTO	_00376_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1315     	.line	736, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 2050) + 75;
     006E 2149                      1- 1316     	MOVIA	0x49
                                    1- 1317     	BANKSEL	_R_Quarter_VDD_DATA
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 03rr                      1- 1318     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1319     	BANKSEL	r0x103E
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1320     	MOVAR	r0x103E
     0073 21F8                      1- 1321     	MOVIA	0xf8
                                    1- 1322     	BANKSEL	r0x103F
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1323     	MOVAR	r0x103F
                                    1- 1324     	BANKSEL	_R_Quarter_VDD_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 1325     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0078 0C03                      1- 1326     	BTRSC	STATUS,0
     0079 05rr                      1- 1327     	INCR	(_R_Quarter_VDD_DATA + 1),W
     007A 0D03                      1- 1328     	BTRSC	STATUS,2
                                    1- 1329     	MGOTO	_00003_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1330     	BANKSEL	r0x103F
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 03rr                      1- 1331     	ADDAR	r0x103F,F
     007E                           1- 1332     _00003_DS_:
                                    1- 1333     	MGOTO	_00377_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1334     ;;unsigned compare: left < lit (0x7CE=1998), size=2
     007F                           1- 1335     _00376_DS_:
                                    1- 1336     	.line	738, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1998)
     007F 2107                      1- 1337     	MOVIA	0x07
                                    1- 1338     	BANKSEL	_R_Quarter_VDD_DATA
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1- 1339     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0082 0903                      1- 1340     	BTRSS	STATUS,2
                                    1- 1341     	MGOTO	_00485_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084 21CE                      1- 1342     	MOVIA	0xce
     0085 04rr                      1- 1343     	SUBAR	_R_Quarter_VDD_DATA,W
     0086                           1- 1344     _00485_DS_:
     0086 0803                      1- 1345     	BTRSS	STATUS,0
                                    1- 1346     	MGOTO	_00373_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1347     	.line	740, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1998)/2 + 49;
     0088 2132                      1- 1348     	MOVIA	0x32
                                    1- 1349     	BANKSEL	_R_Quarter_VDD_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 03rr                      1- 1350     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1351     	BANKSEL	r0x1040
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1352     	MOVAR	r0x1040
     008D 21F8                      1- 1353     	MOVIA	0xf8
                                    1- 1354     	BANKSEL	r0x1041
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1355     	MOVAR	r0x1041
                                    1- 1356     	BANKSEL	_R_Quarter_VDD_DATA
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 01rr                      1- 1357     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0092 0C03                      1- 1358     	BTRSC	STATUS,0
     0093 05rr                      1- 1359     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0094 0D03                      1- 1360     	BTRSC	STATUS,2
                                    1- 1361     	MGOTO	_00004_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1362     	BANKSEL	r0x1041
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 03rr                      1- 1363     	ADDAR	r0x1041,F
                                    1- 1364     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0098                           1- 1365     _00004_DS_:
     0098 1C03                      1- 1366     	BCR	STATUS,0
                                    1- 1367     	BANKSEL	r0x1041
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 13rr                      1- 1368     	RRR	r0x1041,W
                                    1- 1369     	BANKSEL	r0x1042
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 00rr                      1- 1370     	MOVAR	r0x1042
                                    1- 1371     	BANKSEL	r0x1040
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 13rr                      1- 1372     	RRR	r0x1040,W
                                    1- 1373     	BANKSEL	r0x1043
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 1374     	MOVAR	r0x1043
     00A1 2131                      1- 1375     	MOVIA	0x31
     00A2 03rr                      1- 1376     	ADDAR	r0x1043,W
                                    1- 1377     	BANKSEL	r0x103E
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 00rr                      1- 1378     	MOVAR	r0x103E
                                    1- 1379     	BANKSEL	r0x103F
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 02rr                      1- 1380     	CLRR	r0x103F
     00A7 14rr                      1- 1381     	RLR	r0x103F,F
                                    1- 1382     	BANKSEL	r0x1042
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 1383     	MOVR	r0x1042,W
                                    1- 1384     	BANKSEL	r0x103F
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 03rr                      1- 1385     	ADDAR	r0x103F,F
                                    1- 1386     	MGOTO	_00377_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1387     ;;unsigned compare: left < lit (0x75E=1886), size=2
     00AD                           1- 1388     _00373_DS_:
                                    1- 1389     	.line	742, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1886)
     00AD 2107                      1- 1390     	MOVIA	0x07
                                    1- 1391     	BANKSEL	_R_Quarter_VDD_DATA
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 04rr                      1- 1392     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00B0 0903                      1- 1393     	BTRSS	STATUS,2
                                    1- 1394     	MGOTO	_00486_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2 215E                      1- 1395     	MOVIA	0x5e
     00B3 04rr                      1- 1396     	SUBAR	_R_Quarter_VDD_DATA,W
     00B4                           1- 1397     _00486_DS_:
     00B4 0803                      1- 1398     	BTRSS	STATUS,0
                                    1- 1399     	MGOTO	_00370_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1400     	.line	744, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 1886)/4) + 21;
     00B6 21A2                      1- 1401     	MOVIA	0xa2
                                    1- 1402     	BANKSEL	_R_Quarter_VDD_DATA
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 03rr                      1- 1403     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1404     	BANKSEL	r0x1040
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 1405     	MOVAR	r0x1040
     00BB 21F8                      1- 1406     	MOVIA	0xf8
                                    1- 1407     	BANKSEL	r0x1041
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 1408     	MOVAR	r0x1041
                                    1- 1409     	BANKSEL	_R_Quarter_VDD_DATA
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 01rr                      1- 1410     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00C0 0C03                      1- 1411     	BTRSC	STATUS,0
     00C1 05rr                      1- 1412     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00C2 0D03                      1- 1413     	BTRSC	STATUS,2
                                    1- 1414     	MGOTO	_00005_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1415     	BANKSEL	r0x1041
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 03rr                      1- 1416     	ADDAR	r0x1041,F
                                    1- 1417     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00C6                           1- 1418     _00005_DS_:
     00C6 1C03                      1- 1419     	BCR	STATUS,0
                                    1- 1420     	BANKSEL	r0x1041
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 13rr                      1- 1421     	RRR	r0x1041,W
                                    1- 1422     	BANKSEL	r0x1042
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 1423     	MOVAR	r0x1042
                                    1- 1424     	BANKSEL	r0x1040
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 13rr                      1- 1425     	RRR	r0x1040,W
                                    1- 1426     	BANKSEL	r0x1043
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 00rr                      1- 1427     	MOVAR	r0x1043
                                    1- 1428     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00CF 1C03                      1- 1429     	BCR	STATUS,0
                                    1- 1430     	BANKSEL	r0x1042
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 13rr                      1- 1431     	RRR	r0x1042,F
                                    1- 1432     	BANKSEL	r0x1043
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 13rr                      1- 1433     	RRR	r0x1043,F
     00D4 2115                      1- 1434     	MOVIA	0x15
     00D5 03rr                      1- 1435     	ADDAR	r0x1043,W
                                    1- 1436     	BANKSEL	r0x103E
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 00rr                      1- 1437     	MOVAR	r0x103E
                                    1- 1438     	BANKSEL	r0x103F
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 02rr                      1- 1439     	CLRR	r0x103F
     00DA 14rr                      1- 1440     	RLR	r0x103F,F
                                    1- 1441     	BANKSEL	r0x1042
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 01rr                      1- 1442     	MOVR	r0x1042,W
                                    1- 1443     	BANKSEL	r0x103F
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 03rr                      1- 1444     	ADDAR	r0x103F,F
                                    1- 1445     	MGOTO	_00377_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1446     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1447     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     00E0                           1- 1448     _00370_DS_:
                                    1- 1449     	.line	746, "main.c"; 	else if(R_Quarter_VDD_DATA > 1550)
     00E0 2106                      1- 1450     	MOVIA	0x06
                                    1- 1451     	BANKSEL	_R_Quarter_VDD_DATA
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 04rr                      1- 1452     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00E3 0903                      1- 1453     	BTRSS	STATUS,2
                                    1- 1454     	MGOTO	_00487_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
     00E5 210F                      1- 1455     	MOVIA	0x0f
     00E6 04rr                      1- 1456     	SUBAR	_R_Quarter_VDD_DATA,W
     00E7                           1- 1457     _00487_DS_:
     00E7 0803                      1- 1458     	BTRSS	STATUS,0
                                    1- 1459     	MGOTO	_00367_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1460     	.line	748, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1550)/16;
     00E9 21F2                      1- 1461     	MOVIA	0xf2
                                    1- 1462     	BANKSEL	_R_Quarter_VDD_DATA
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 03rr                      1- 1463     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1464     	BANKSEL	r0x1040
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1- 1465     	MOVAR	r0x1040
     00EE 21F9                      1- 1466     	MOVIA	0xf9
                                    1- 1467     	BANKSEL	r0x1041
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 00rr                      1- 1468     	MOVAR	r0x1041
                                    1- 1469     	BANKSEL	_R_Quarter_VDD_DATA
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 1470     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00F3 0C03                      1- 1471     	BTRSC	STATUS,0
     00F4 05rr                      1- 1472     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00F5 0D03                      1- 1473     	BTRSC	STATUS,2
                                    1- 1474     	MGOTO	_00006_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1475     	BANKSEL	r0x1041
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 03rr                      1- 1476     	ADDAR	r0x1041,F
     00F9                           1- 1477     _00006_DS_:
                                    1- 1478     	BANKSEL	r0x1040
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 15rr                      1- 1479     	SWAPR	r0x1040,W
     00FB 220F                      1- 1480     	ANDIA	0x0f
                                    1- 1481     	BANKSEL	r0x103E
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 00rr                      1- 1482     	MOVAR	r0x103E
                                    1- 1483     	BANKSEL	r0x1041
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 15rr                      1- 1484     	SWAPR	r0x1041,W
                                    1- 1485     	BANKSEL	r0x103F
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 00rr                      1- 1486     	MOVAR	r0x103F
     0102 22F0                      1- 1487     	ANDIA	0xf0
                                    1- 1488     	BANKSEL	r0x103E
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 11rr                      1- 1489     	IORAR	r0x103E,F
                                    1- 1490     	BANKSEL	r0x103F
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 12rr                      1- 1491     	XORAR	r0x103F,F
                                    1- 1492     	MGOTO	_00377_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
     0108                           1- 1493     _00367_DS_:
                                    1- 1494     	.line	752, "main.c"; 	tempValue = 0;
                                    1- 1495     	BANKSEL	r0x103E
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 02rr                      1- 1496     	CLRR	r0x103E
                                    1- 1497     	BANKSEL	r0x103F
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 02rr                      1- 1498     	CLRR	r0x103F
     010C                           1- 1499     _00377_DS_:
                                    1- 1500     	.line	754, "main.c"; 	if(0x20 & PORTA)
                                    1- 1501     	BANKSEL	_PORTA
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 0Arr                      1- 1502     	BTRSS	_PORTA,5
                                    1- 1503     	MGOTO	_00408_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1504     ;;unsigned compare: left < lit (0x5=5), size=2
                                    1- 1505     	.line	758, "main.c"; 	if(tempValue < 5)
     010F 2100                      1- 1506     	MOVIA	0x00
                                    1- 1507     	BANKSEL	r0x103F
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 04rr                      1- 1508     	SUBAR	r0x103F,W
     0112 0903                      1- 1509     	BTRSS	STATUS,2
                                    1- 1510     	MGOTO	_00488_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
     0114 2105                      1- 1511     	MOVIA	0x05
                                    1- 1512     	BANKSEL	r0x103E
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 04rr                      1- 1513     	SUBAR	r0x103E,W
     0117                           1- 1514     _00488_DS_:
     0117 0C03                      1- 1515     	BTRSC	STATUS,0
                                    1- 1516     	MGOTO	_00393_DS_
     0118 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1517     	.line	760, "main.c"; 	tempValue = 1;
     0119 2101                      1- 1518     	MOVIA	0x01
                                    1- 1519     	BANKSEL	r0x103E
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 00rr                      1- 1520     	MOVAR	r0x103E
                                    1- 1521     	BANKSEL	r0x103F
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 02rr                      1- 1522     	CLRR	r0x103F
                                    1- 1523     	MGOTO	_00011_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1524     ;;unsigned compare: left < lit (0x14=20), size=2
     011F                           1- 1525     _00393_DS_:
                                    1- 1526     	.line	762, "main.c"; 	else if(tempValue < 20)
     011F 2100                      1- 1527     	MOVIA	0x00
                                    1- 1528     	BANKSEL	r0x103F
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 04rr                      1- 1529     	SUBAR	r0x103F,W
     0122 0903                      1- 1530     	BTRSS	STATUS,2
                                    1- 1531     	MGOTO	_00489_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
     0124 2114                      1- 1532     	MOVIA	0x14
                                    1- 1533     	BANKSEL	r0x103E
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 04rr                      1- 1534     	SUBAR	r0x103E,W
     0127                           1- 1535     _00489_DS_:
     0127 0C03                      1- 1536     	BTRSC	STATUS,0
                                    1- 1537     	MGOTO	_00390_DS_
     0128 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1538     	.line	764, "main.c"; 	tempValue = tempValue - 5;
     0129 21FB                      1- 1539     	MOVIA	0xfb
                                    1- 1540     	BANKSEL	r0x103E
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 03rr                      1- 1541     	ADDAR	r0x103E,F
     012C 0C03                      1- 1542     	BTRSC	STATUS,0
                                    1- 1543     	MGOTO	_00007_DS_
     012D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1544     	BANKSEL	r0x103F
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 06rr                      1- 1545     	DECR	r0x103F,F
     0130                           1- 1546     _00007_DS_:
                                    1- 1547     	MGOTO	_00011_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1548     ;;unsigned compare: left < lit (0x1E=30), size=2
     0131                           1- 1549     _00390_DS_:
                                    1- 1550     	.line	766, "main.c"; 	else if(tempValue < 30)
     0131 2100                      1- 1551     	MOVIA	0x00
                                    1- 1552     	BANKSEL	r0x103F
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 04rr                      1- 1553     	SUBAR	r0x103F,W
     0134 0903                      1- 1554     	BTRSS	STATUS,2
                                    1- 1555     	MGOTO	_00490_DS_
     0135 3rrr                      3-   63 m1      LGOTO rom_address
     0136 211E                      1- 1556     	MOVIA	0x1e
                                    1- 1557     	BANKSEL	r0x103E
     0137 rrrr                      3-  110 m1      .banksel ram_address
     0138 04rr                      1- 1558     	SUBAR	r0x103E,W
     0139                           1- 1559     _00490_DS_:
     0139 0C03                      1- 1560     	BTRSC	STATUS,0
                                    1- 1561     	MGOTO	_00387_DS_
     013A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1562     	.line	768, "main.c"; 	tempValue = tempValue - 10;
     013B 21F6                      1- 1563     	MOVIA	0xf6
                                    1- 1564     	BANKSEL	r0x103E
     013C rrrr                      3-  110 m1      .banksel ram_address
     013D 03rr                      1- 1565     	ADDAR	r0x103E,F
     013E 0C03                      1- 1566     	BTRSC	STATUS,0
                                    1- 1567     	MGOTO	_00008_DS_
     013F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1568     	BANKSEL	r0x103F
     0140 rrrr                      3-  110 m1      .banksel ram_address
     0141 06rr                      1- 1569     	DECR	r0x103F,F
     0142                           1- 1570     _00008_DS_:
                                    1- 1571     	MGOTO	_00011_DS_
     0142 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1572     ;;unsigned compare: left < lit (0x28=40), size=2
     0143                           1- 1573     _00387_DS_:
                                    1- 1574     	.line	770, "main.c"; 	else if(tempValue < 40)
     0143 2100                      1- 1575     	MOVIA	0x00
                                    1- 1576     	BANKSEL	r0x103F
     0144 rrrr                      3-  110 m1      .banksel ram_address
     0145 04rr                      1- 1577     	SUBAR	r0x103F,W
     0146 0903                      1- 1578     	BTRSS	STATUS,2
                                    1- 1579     	MGOTO	_00491_DS_
     0147 3rrr                      3-   63 m1      LGOTO rom_address
     0148 2128                      1- 1580     	MOVIA	0x28
                                    1- 1581     	BANKSEL	r0x103E
     0149 rrrr                      3-  110 m1      .banksel ram_address
     014A 04rr                      1- 1582     	SUBAR	r0x103E,W
     014B                           1- 1583     _00491_DS_:
     014B 0C03                      1- 1584     	BTRSC	STATUS,0
                                    1- 1585     	MGOTO	_00384_DS_
     014C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1586     	.line	772, "main.c"; 	tempValue = tempValue - 15;
     014D 21F1                      1- 1587     	MOVIA	0xf1
                                    1- 1588     	BANKSEL	r0x103E
     014E rrrr                      3-  110 m1      .banksel ram_address
     014F 03rr                      1- 1589     	ADDAR	r0x103E,F
     0150 0C03                      1- 1590     	BTRSC	STATUS,0
                                    1- 1591     	MGOTO	_00009_DS_
     0151 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1592     	BANKSEL	r0x103F
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 06rr                      1- 1593     	DECR	r0x103F,F
     0154                           1- 1594     _00009_DS_:
                                    1- 1595     	MGOTO	_00011_DS_
     0154 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1596     ;;unsigned compare: left < lit (0x32=50), size=2
     0155                           1- 1597     _00384_DS_:
                                    1- 1598     	.line	774, "main.c"; 	else if(tempValue < 50)
     0155 2100                      1- 1599     	MOVIA	0x00
                                    1- 1600     	BANKSEL	r0x103F
     0156 rrrr                      3-  110 m1      .banksel ram_address
     0157 04rr                      1- 1601     	SUBAR	r0x103F,W
     0158 0903                      1- 1602     	BTRSS	STATUS,2
                                    1- 1603     	MGOTO	_00492_DS_
     0159 3rrr                      3-   63 m1      LGOTO rom_address
     015A 2132                      1- 1604     	MOVIA	0x32
                                    1- 1605     	BANKSEL	r0x103E
     015B rrrr                      3-  110 m1      .banksel ram_address
     015C 04rr                      1- 1606     	SUBAR	r0x103E,W
     015D                           1- 1607     _00492_DS_:
     015D 0C03                      1- 1608     	BTRSC	STATUS,0
                                    1- 1609     	MGOTO	_00381_DS_
     015E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1610     	.line	776, "main.c"; 	tempValue = tempValue - 21;
     015F 21EB                      1- 1611     	MOVIA	0xeb
                                    1- 1612     	BANKSEL	r0x103E
     0160 rrrr                      3-  110 m1      .banksel ram_address
     0161 03rr                      1- 1613     	ADDAR	r0x103E,F
     0162 0C03                      1- 1614     	BTRSC	STATUS,0
                                    1- 1615     	MGOTO	_00010_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1616     	BANKSEL	r0x103F
     0164 rrrr                      3-  110 m1      .banksel ram_address
     0165 06rr                      1- 1617     	DECR	r0x103F,F
     0166                           1- 1618     _00010_DS_:
                                    1- 1619     	MGOTO	_00011_DS_
     0166 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1620     ;;unsigned compare: left < lit (0x78=120), size=2
     0167                           1- 1621     _00381_DS_:
                                    1- 1622     	.line	778, "main.c"; 	else if(tempValue < 120)
     0167 2100                      1- 1623     	MOVIA	0x00
                                    1- 1624     	BANKSEL	r0x103F
     0168 rrrr                      3-  110 m1      .banksel ram_address
     0169 04rr                      1- 1625     	SUBAR	r0x103F,W
     016A 0903                      1- 1626     	BTRSS	STATUS,2
                                    1- 1627     	MGOTO	_00493_DS_
     016B 3rrr                      3-   63 m1      LGOTO rom_address
     016C 2178                      1- 1628     	MOVIA	0x78
                                    1- 1629     	BANKSEL	r0x103E
     016D rrrr                      3-  110 m1      .banksel ram_address
     016E 04rr                      1- 1630     	SUBAR	r0x103E,W
     016F                           1- 1631     _00493_DS_:
     016F 0C03                      1- 1632     	BTRSC	STATUS,0
                                    1- 1633     	MGOTO	_00011_DS_
     0170 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1634     	.line	780, "main.c"; 	tempValue = tempValue - 23;
     0171 21E9                      1- 1635     	MOVIA	0xe9
                                    1- 1636     	BANKSEL	r0x103E
     0172 rrrr                      3-  110 m1      .banksel ram_address
     0173 03rr                      1- 1637     	ADDAR	r0x103E,F
     0174 0C03                      1- 1638     	BTRSC	STATUS,0
                                    1- 1639     	MGOTO	_00011_DS_
     0175 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1640     	BANKSEL	r0x103F
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 06rr                      1- 1641     	DECR	r0x103F,F
                                    1- 1642     ;;unsigned compare: left < lit (0x64=100), size=2
     0178                           1- 1643     _00011_DS_:
                                    1- 1644     	.line	782, "main.c"; 	if(tempValue >= 100)
     0178 2100                      1- 1645     	MOVIA	0x00
                                    1- 1646     	BANKSEL	r0x103F
     0179 rrrr                      3-  110 m1      .banksel ram_address
     017A 04rr                      1- 1647     	SUBAR	r0x103F,W
     017B 0903                      1- 1648     	BTRSS	STATUS,2
                                    1- 1649     	MGOTO	_00494_DS_
     017C 3rrr                      3-   63 m1      LGOTO rom_address
     017D 2164                      1- 1650     	MOVIA	0x64
                                    1- 1651     	BANKSEL	r0x103E
     017E rrrr                      3-  110 m1      .banksel ram_address
     017F 04rr                      1- 1652     	SUBAR	r0x103E,W
     0180                           1- 1653     _00494_DS_:
     0180 0803                      1- 1654     	BTRSS	STATUS,0
                                    1- 1655     	MGOTO	_00396_DS_
     0181 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1656     	.line	784, "main.c"; 	tempValue = 100;
     0182 2164                      1- 1657     	MOVIA	0x64
                                    1- 1658     	BANKSEL	r0x103E
     0183 rrrr                      3-  110 m1      .banksel ram_address
     0184 00rr                      1- 1659     	MOVAR	r0x103E
                                    1- 1660     	BANKSEL	r0x103F
     0185 rrrr                      3-  110 m1      .banksel ram_address
     0186 02rr                      1- 1661     	CLRR	r0x103F
     0187                           1- 1662     _00396_DS_:
                                    1- 1663     	.line	787, "main.c"; 	if(pwStep < tempValue)
                                    1- 1664     	BANKSEL	_pwStep
     0187 rrrr                      3-  110 m1      .banksel ram_address
     0188 01rr                      1- 1665     	MOVR	_pwStep,W
                                    1- 1666     	BANKSEL	r0x1040
     0189 rrrr                      3-  110 m1      .banksel ram_address
     018A 00rr                      1- 1667     	MOVAR	r0x1040
                                    1- 1668     	BANKSEL	r0x1041
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 02rr                      1- 1669     	CLRR	r0x1041
                                    1- 1670     	BANKSEL	r0x103F
     018D rrrr                      3-  110 m1      .banksel ram_address
     018E 01rr                      1- 1671     	MOVR	r0x103F,W
                                    1- 1672     	BANKSEL	r0x1041
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 04rr                      1- 1673     	SUBAR	r0x1041,W
     0191 0903                      1- 1674     	BTRSS	STATUS,2
                                    1- 1675     	MGOTO	_00495_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1676     	BANKSEL	r0x103E
     0193 rrrr                      3-  110 m1      .banksel ram_address
     0194 01rr                      1- 1677     	MOVR	r0x103E,W
                                    1- 1678     	BANKSEL	r0x1040
     0195 rrrr                      3-  110 m1      .banksel ram_address
     0196 04rr                      1- 1679     	SUBAR	r0x1040,W
     0197                           1- 1680     _00495_DS_:
     0197 0C03                      1- 1681     	BTRSC	STATUS,0
                                    1- 1682     	MGOTO	_00416_DS_
     0198 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1683     	.line	789, "main.c"; 	pwStep++;
                                    1- 1684     	BANKSEL	_pwStep
     0199 rrrr                      3-  110 m1      .banksel ram_address
     019A 05rr                      1- 1685     	INCR	_pwStep,F
                                    1- 1686     	MGOTO	_00416_DS_
     019B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1687     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1688     ;;unsigned compare: left >= lit (0x65=101), size=2
     019C                           1- 1689     _00408_DS_:
                                    1- 1690     	.line	796, "main.c"; 	if(tempValue > 100)
     019C 2100                      1- 1691     	MOVIA	0x00
                                    1- 1692     	BANKSEL	r0x103F
     019D rrrr                      3-  110 m1      .banksel ram_address
     019E 04rr                      1- 1693     	SUBAR	r0x103F,W
     019F 0903                      1- 1694     	BTRSS	STATUS,2
                                    1- 1695     	MGOTO	_00496_DS_
     01A0 3rrr                      3-   63 m1      LGOTO rom_address
     01A1 2165                      1- 1696     	MOVIA	0x65
                                    1- 1697     	BANKSEL	r0x103E
     01A2 rrrr                      3-  110 m1      .banksel ram_address
     01A3 04rr                      1- 1698     	SUBAR	r0x103E,W
     01A4                           1- 1699     _00496_DS_:
     01A4 0803                      1- 1700     	BTRSS	STATUS,0
                                    1- 1701     	MGOTO	_00400_DS_
     01A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1702     	.line	797, "main.c"; 	tempValue = 100;
     01A6 2164                      1- 1703     	MOVIA	0x64
                                    1- 1704     	BANKSEL	r0x103E
     01A7 rrrr                      3-  110 m1      .banksel ram_address
     01A8 00rr                      1- 1705     	MOVAR	r0x103E
                                    1- 1706     	BANKSEL	r0x103F
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 02rr                      1- 1707     	CLRR	r0x103F
     01AB                           1- 1708     _00400_DS_:
                                    1- 1709     	.line	798, "main.c"; 	if(pwStep == 0)
                                    1- 1710     	BANKSEL	_pwStep
     01AB rrrr                      3-  110 m1      .banksel ram_address
     01AC 01rr                      1- 1711     	MOVR	_pwStep,W
     01AD 0903                      1- 1712     	BTRSS	STATUS,2
                                    1- 1713     	MGOTO	_00402_DS_
     01AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1714     	.line	800, "main.c"; 	pwStep = tempValue;
                                    1- 1715     	BANKSEL	r0x103E
     01AF rrrr                      3-  110 m1      .banksel ram_address
     01B0 01rr                      1- 1716     	MOVR	r0x103E,W
                                    1- 1717     	BANKSEL	_pwStep
     01B1 rrrr                      3-  110 m1      .banksel ram_address
     01B2 00rr                      1- 1718     	MOVAR	_pwStep
     01B3                           1- 1719     _00402_DS_:
                                    1- 1720     	.line	802, "main.c"; 	if(pwStep > tempValue)
                                    1- 1721     	BANKSEL	_pwStep
     01B3 rrrr                      3-  110 m1      .banksel ram_address
     01B4 01rr                      1- 1722     	MOVR	_pwStep,W
                                    1- 1723     	BANKSEL	r0x1040
     01B5 rrrr                      3-  110 m1      .banksel ram_address
     01B6 00rr                      1- 1724     	MOVAR	r0x1040
                                    1- 1725     	BANKSEL	r0x1041
     01B7 rrrr                      3-  110 m1      .banksel ram_address
     01B8 02rr                      1- 1726     	CLRR	r0x1041
     01B9 2100                      1- 1727     	MOVIA	0x00
                                    1- 1728     	BANKSEL	r0x103F
     01BA rrrr                      3-  110 m1      .banksel ram_address
     01BB 04rr                      1- 1729     	SUBAR	r0x103F,W
     01BC 0903                      1- 1730     	BTRSS	STATUS,2
                                    1- 1731     	MGOTO	_00497_DS_
     01BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1732     	BANKSEL	r0x1040
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 01rr                      1- 1733     	MOVR	r0x1040,W
                                    1- 1734     	BANKSEL	r0x103E
     01C0 rrrr                      3-  110 m1      .banksel ram_address
     01C1 04rr                      1- 1735     	SUBAR	r0x103E,W
     01C2                           1- 1736     _00497_DS_:
     01C2 0C03                      1- 1737     	BTRSC	STATUS,0
                                    1- 1738     	MGOTO	_00416_DS_
     01C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1739     	.line	804, "main.c"; 	if(++count5s > 10)
                                    1- 1740     	BANKSEL	_count5s
     01C4 rrrr                      3-  110 m1      .banksel ram_address
     01C5 05rr                      1- 1741     	INCR	_count5s,F
     01C6 0D03                      1- 1742     	BTRSC	STATUS,2
     01C7 05rr                      1- 1743     	INCR	(_count5s + 1),F
                                    1- 1744     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1745     ;;unsigned compare: left >= lit (0xB=11), size=2
     01C8 2100                      1- 1746     	MOVIA	0x00
     01C9 04rr                      1- 1747     	SUBAR	(_count5s + 1),W
     01CA 0903                      1- 1748     	BTRSS	STATUS,2
                                    1- 1749     	MGOTO	_00498_DS_
     01CB 3rrr                      3-   63 m1      LGOTO rom_address
     01CC 210B                      1- 1750     	MOVIA	0x0b
     01CD 04rr                      1- 1751     	SUBAR	_count5s,W
     01CE                           1- 1752     _00498_DS_:
     01CE 0803                      1- 1753     	BTRSS	STATUS,0
                                    1- 1754     	MGOTO	_00416_DS_
     01CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1755     	.line	806, "main.c"; 	count5s = 0;
                                    1- 1756     	BANKSEL	_count5s
     01D0 rrrr                      3-  110 m1      .banksel ram_address
     01D1 02rr                      1- 1757     	CLRR	_count5s
     01D2 02rr                      1- 1758     	CLRR	(_count5s + 1)
                                    1- 1759     	.line	807, "main.c"; 	pwStep--;
                                    1- 1760     	BANKSEL	_pwStep
     01D3 rrrr                      3-  110 m1      .banksel ram_address
     01D4 06rr                      1- 1761     	DECR	_pwStep,F
     01D5                           1- 1762     _00416_DS_:
                                    1- 1763     	.line	815, "main.c"; 	}
                                    1- 1764     	RETURN	
     01D5 0010                      3-   40 m1      ret
                                    1- 1765     ; exit point of _checkBat
                                    1- 1767     ;***
                                    1- 1768     ;  pBlock Stats: dbName = C
                                    1- 1769     ;***
                                    1- 1770     ;has an exit
                                    1- 1771     ;functions called:
                                    1- 1772     ;   _delay
                                    1- 1773     ;   _delay
                                    1- 1774     ;; Starting pCode block
                                    1- 1775     .segment "code"; module=main, function=_initAD
     0000                           1- 1777     _initAD:
                                    1- 1778     ; 2 exit points
                                    1- 1779     	.line	675, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1780     	MOVIA	0x80
     0001 00rr                      1- 1781     	MOVAR	_ADMD
                                    1- 1782     	.line	680, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1783     	CLRR	_ADVREFH
                                    1- 1784     	.line	685, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1785     	MOVIA	0x10
     0004 00rr                      1- 1786     	MOVAR	_ADR
                                    1- 1787     	.line	689, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1788     	MOVIA	0x03
     0006 00rr                      1- 1789     	MOVAR	_ADCR
                                    1- 1790     	.line	696, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1791     	BSR	_ADMDbits,4
                                    1- 1792     	.line	697, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1793     	MOVIA	0x32
                                    1- 1794     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1795     	.line	698, "main.c"; 	}
                                    1- 1796     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1797     ; exit point of _initAD
                                    1- 1799     ;***
                                    1- 1800     ;  pBlock Stats: dbName = C
                                    1- 1801     ;***
                                    1- 1802     ;has an exit
                                    1- 1803     ;functions called:
                                    1- 1804     ;   _keyRead
                                    1- 1805     ;   _checkBat
                                    1- 1806     ;   _checkBat
                                    1- 1807     ;   _keyRead
                                    1- 1808     ;   _checkBat
                                    1- 1809     ;   _checkBat
                                    1- 1810     ;1 compiler assigned register :
                                    1- 1811     ;   r0x1045
                                    1- 1812     ;; Starting pCode block
                                    1- 1813     .segment "code"; module=main, function=_keyCtr
                                    1- 1815     ;local variable name mapping:
     0000                           1- 1817     _keyCtr:
                                    1- 1818     ; 2 exit points
                                    1- 1819     	.line	619, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1820     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1821     	COMR	_PORTA,W
                                    1- 1822     	BANKSEL	r0x1045
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1823     	MOVAR	r0x1045
     0004 2180                      1- 1824     	MOVIA	0x80
     0005 10rr                      1- 1825     	ANDAR	r0x1045,F
     0006 01rr                      1- 1826     	MOVR	r0x1045,W
                                    1- 1827     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1828     	BANKSEL	r0x1045
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1829     	MOVAR	r0x1045
                                    1- 1830     	.line	620, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1831     	XORIA	0x01
     000B 0903                      1- 1832     	BTRSS	STATUS,2
                                    1- 1833     	MGOTO	_00351_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1834     	.line	622, "main.c"; 	checkBat();
                                    1- 1835     	MCALL	_checkBat
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1836     	.line	623, "main.c"; 	if(pwFlag && pwStep > 0)
                                    1- 1837     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1838     	MOVR	_pwFlag,W
     0010 0D03                      1- 1839     	BTRSC	STATUS,2
                                    1- 1840     	MGOTO	_00353_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1841     	BANKSEL	_pwStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1842     	MOVR	_pwStep,W
     0014 0D03                      1- 1843     	BTRSC	STATUS,2
                                    1- 1844     	MGOTO	_00353_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1845     	.line	625, "main.c"; 	if(showFlag == 0)
                                    1- 1846     	BANKSEL	_showFlag
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1847     	MOVR	_showFlag,W
     0018 0903                      1- 1848     	BTRSS	STATUS,2
                                    1- 1849     	MGOTO	_00336_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1850     	.line	628, "main.c"; 	pwShowTime = 3;
     001A 2103                      1- 1851     	MOVIA	0x03
                                    1- 1852     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1853     	MOVAR	_pwShowTime
                                    1- 1854     	.line	629, "main.c"; 	offShowTime = 0;
                                    1- 1855     	BANKSEL	_offShowTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 1856     	CLRR	_offShowTime
                                    1- 1857     	MGOTO	_00353_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1858     _00336_DS_:
                                    1- 1859     	.line	631, "main.c"; 	else if(stepShowTime == 0)
                                    1- 1860     	BANKSEL	_stepShowTime
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1861     	MOVR	_stepShowTime,W
     0022 0903                      1- 1862     	BTRSS	STATUS,2
                                    1- 1863     	MGOTO	_00333_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1864     	.line	633, "main.c"; 	pwShowTime = 0;
                                    1- 1865     	BANKSEL	_pwShowTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1866     	CLRR	_pwShowTime
                                    1- 1867     	.line	634, "main.c"; 	stepShowTime = 2;
     0026 2102                      1- 1868     	MOVIA	0x02
                                    1- 1869     	BANKSEL	_stepShowTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1870     	MOVAR	_stepShowTime
                                    1- 1871     	.line	635, "main.c"; 	offShowTime = 0;
                                    1- 1872     	BANKSEL	_offShowTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 1873     	CLRR	_offShowTime
                                    1- 1874     	MGOTO	_00353_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 1875     _00333_DS_:
                                    1- 1876     	.line	639, "main.c"; 	pwShowTime = 0;
                                    1- 1877     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1- 1878     	CLRR	_pwShowTime
                                    1- 1879     	.line	640, "main.c"; 	if(++workStep > 3)
                                    1- 1880     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1881     	INCR	_workStep,F
                                    1- 1882     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1883     ;;unsigned compare: left >= lit (0x4=4), size=1
     0030 2104                      1- 1884     	MOVIA	0x04
     0031 04rr                      1- 1885     	SUBAR	_workStep,W
     0032 0803                      1- 1886     	BTRSS	STATUS,0
                                    1- 1887     	MGOTO	_00331_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1888     	.line	641, "main.c"; 	workStep = 1;
     0034 2101                      1- 1889     	MOVIA	0x01
     0035 00rr                      1- 1890     	MOVAR	_workStep
     0036                           1- 1891     _00331_DS_:
                                    1- 1892     	.line	642, "main.c"; 	stepShowTime = 2;
     0036 2102                      1- 1893     	MOVIA	0x02
                                    1- 1894     	BANKSEL	_stepShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 1895     	MOVAR	_stepShowTime
                                    1- 1896     	.line	643, "main.c"; 	offShowTime = 0;
                                    1- 1897     	BANKSEL	_offShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1898     	CLRR	_offShowTime
                                    1- 1899     	MGOTO	_00353_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 1900     _00351_DS_:
                                    1- 1901     	.line	647, "main.c"; 	else if(kclick == 2)
                                    1- 1902     	BANKSEL	r0x1045
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 1903     	MOVR	r0x1045,W
     003E 2402                      1- 1904     	XORIA	0x02
     003F 0903                      1- 1905     	BTRSS	STATUS,2
                                    1- 1906     	MGOTO	_00353_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1907     	.line	649, "main.c"; 	checkBat();
                                    1- 1908     	MCALL	_checkBat
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1909     	.line	650, "main.c"; 	if(pwFlag)
                                    1- 1910     	BANKSEL	_pwFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 1911     	MOVR	_pwFlag,W
     0044 0D03                      1- 1912     	BTRSC	STATUS,2
                                    1- 1913     	MGOTO	_00346_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1914     	.line	652, "main.c"; 	pwFlag = 0;		//关机
     0046 02rr                      1- 1915     	CLRR	_pwFlag
                                    1- 1916     	.line	653, "main.c"; 	workStep = 0;
                                    1- 1917     	BANKSEL	_workStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1918     	CLRR	_workStep
                                    1- 1919     	.line	654, "main.c"; 	pwShowTime = 0;
                                    1- 1920     	BANKSEL	_pwShowTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 1921     	CLRR	_pwShowTime
                                    1- 1922     	.line	655, "main.c"; 	stepShowTime = 0;
                                    1- 1923     	BANKSEL	_stepShowTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 1924     	CLRR	_stepShowTime
                                    1- 1925     	.line	656, "main.c"; 	offShowTime = 5;
     004D 2105                      1- 1926     	MOVIA	0x05
                                    1- 1927     	BANKSEL	_offShowTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1928     	MOVAR	_offShowTime
                                    1- 1929     	MGOTO	_00353_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 1930     _00346_DS_:
                                    1- 1931     	.line	658, "main.c"; 	else if(pwStep > 0)
                                    1- 1932     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 1933     	MOVR	_pwStep,W
     0053 0D03                      1- 1934     	BTRSC	STATUS,2
                                    1- 1935     	MGOTO	_00353_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1936     	.line	661, "main.c"; 	pwFlag = 1;		//开机
     0055 2101                      1- 1937     	MOVIA	0x01
                                    1- 1938     	BANKSEL	_pwFlag
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 1939     	MOVAR	_pwFlag
                                    1- 1940     	.line	662, "main.c"; 	pwShowTime = 3;
     0058 2103                      1- 1941     	MOVIA	0x03
                                    1- 1942     	BANKSEL	_pwShowTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1943     	MOVAR	_pwShowTime
                                    1- 1944     	.line	663, "main.c"; 	stepShowTime = 2;
     005B 2102                      1- 1945     	MOVIA	0x02
                                    1- 1946     	BANKSEL	_stepShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 1947     	MOVAR	_stepShowTime
                                    1- 1948     	.line	664, "main.c"; 	offShowTime = 0;
                                    1- 1949     	BANKSEL	_offShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1950     	CLRR	_offShowTime
                                    1- 1951     	.line	665, "main.c"; 	if(workStep == 0)
                                    1- 1952     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 1953     	MOVR	_workStep,W
     0062 0903                      1- 1954     	BTRSS	STATUS,2
                                    1- 1955     	MGOTO	_00353_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1956     	.line	666, "main.c"; 	workStep = 1;
     0064 2101                      1- 1957     	MOVIA	0x01
     0065 00rr                      1- 1958     	MOVAR	_workStep
     0066                           1- 1959     _00353_DS_:
                                    1- 1960     	.line	669, "main.c"; 	}
                                    1- 1961     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 1962     ; exit point of _keyCtr
                                    1- 1964     ;***
                                    1- 1965     ;  pBlock Stats: dbName = C
                                    1- 1966     ;***
                                    1- 1967     ;has an exit
                                    1- 1968     ;1 compiler assigned register :
                                    1- 1969     ;   r0x1044
                                    1- 1970     ;; Starting pCode block
                                    1- 1971     .segment "code"; module=main, function=_keyRead
                                    1- 1973     ;local variable name mapping:
     0000                           1- 1975     _keyRead:
                                    1- 1976     ; 2 exit points
                                    1- 1977     	.line	584, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1978     	BANKSEL	r0x1044
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1979     	MOVAR	r0x1044
                                    1- 1980     	.line	586, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1981     	MOVR	r0x1044,W
     0003 0D03                      1- 1982     	BTRSC	STATUS,2
                                    1- 1983     	MGOTO	_00323_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1984     	.line	588, "main.c"; 	keyCount++;
                                    1- 1985     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1986     	INCR	_keyCount,F
                                    1- 1987     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1988     	.line	589, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1989     	MOVIA	0xc8
     0008 04rr                      1- 1990     	SUBAR	_keyCount,W
     0009 0803                      1- 1991     	BTRSS	STATUS,0
                                    1- 1992     	MGOTO	_00324_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1993     	.line	591, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1994     	MOVIA	0xc8
     000C 00rr                      1- 1995     	MOVAR	_keyCount
                                    1- 1996     	.line	592, "main.c"; 	if(!longPressFlag)
                                    1- 1997     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1998     	MOVR	_longPressFlag,W
     000F 0903                      1- 1999     	BTRSS	STATUS,2
                                    1- 2000     	MGOTO	_00324_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2001     	.line	594, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2002     	MOVIA	0x01
     0012 00rr                      1- 2003     	MOVAR	_longPressFlag
                                    1- 2004     	.line	595, "main.c"; 	return 2;
     0013 2102                      1- 2005     	MOVIA	0x02
                                    1- 2006     	MGOTO	_00325_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2007     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 2008     _00323_DS_:
                                    1- 2009     	.line	601, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 2010     	MOVIA	0xc8
                                    1- 2011     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2012     	SUBAR	_keyCount,W
     0018 0803                      1- 2013     	BTRSS	STATUS,0
                                    1- 2014     	MGOTO	_00320_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2015     	.line	603, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2016     	CLRR	_keyCount
                                    1- 2017     	.line	604, "main.c"; 	longPressFlag = 0;
                                    1- 2018     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2019     	CLRR	_longPressFlag
                                    1- 2020     	.line	605, "main.c"; 	return	0;
     001D 2100                      1- 2021     	MOVIA	0x00
                                    1- 2022     	MGOTO	_00325_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2023     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2024     _00320_DS_:
                                    1- 2025     	.line	607, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2026     	MOVIA	0x04
                                    1- 2027     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2028     	SUBAR	_keyCount,W
     0022 0803                      1- 2029     	BTRSS	STATUS,0
                                    1- 2030     	MGOTO	_00321_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2031     	.line	609, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2032     	CLRR	_keyCount
                                    1- 2033     	.line	610, "main.c"; 	return	1;
     0025 2101                      1- 2034     	MOVIA	0x01
                                    1- 2035     	MGOTO	_00325_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2036     _00321_DS_:
                                    1- 2037     	.line	612, "main.c"; 	keyCount = 0;
                                    1- 2038     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2039     	CLRR	_keyCount
     0029                           1- 2040     _00324_DS_:
                                    1- 2041     	.line	614, "main.c"; 	return 0;
     0029 2100                      1- 2042     	MOVIA	0x00
     002A                           1- 2043     _00325_DS_:
                                    1- 2044     	.line	615, "main.c"; 	}
                                    1- 2045     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2046     ; exit point of _keyRead
                                    1- 2048     ;***
                                    1- 2049     ;  pBlock Stats: dbName = C
                                    1- 2050     ;***
                                    1- 2051     ;has an exit
                                    1- 2052     ;; Starting pCode block
                                    1- 2053     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2055     _pwmStop:
                                    1- 2056     ; 2 exit points
                                    1- 2057     	.line	578, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2058     	CLRA	
     0001 00rr                      1- 2059     	SFUN	_T2CR1
                                    1- 2060     	.line	579, "main.c"; 	}
                                    1- 2061     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2062     ; exit point of _pwmStop
                                    1- 2064     ;***
                                    1- 2065     ;  pBlock Stats: dbName = C
                                    1- 2066     ;***
                                    1- 2067     ;has an exit
                                    1- 2068     ;1 compiler assigned register :
                                    1- 2069     ;   r0x1046
                                    1- 2070     ;; Starting pCode block
                                    1- 2071     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2073     _pwmInit:
                                    1- 2074     ; 2 exit points
                                    1- 2075     	.line	566, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2076     	SFUNR	_T2CR1
                                    1- 2077     	BANKSEL	r0x1046
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2078     	MOVAR	r0x1046
     0003 0Frr                      1- 2079     	BTRSC	r0x1046,7
                                    1- 2080     	.line	567, "main.c"; 	return;
                                    1- 2081     	MGOTO	_00304_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2082     	.line	568, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2083     	CLRR	_TMRH
                                    1- 2084     	.line	569, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2085     	MOVIA	0x64
     0007 00rr                      1- 2086     	SFUN	_TMR2
                                    1- 2087     	.line	570, "main.c"; 	PWM2DUTY = 85;				// 		
     0008 2155                      1- 2088     	MOVIA	0x55
     0009 00rr                      1- 2089     	SFUN	_PWM2DUTY
                                    1- 2090     	.line	572, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 2101                      1- 2091     	MOVIA	0x01
     000B 00rr                      1- 2092     	SFUN	_T2CR2
                                    1- 2093     	.line	573, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2094     	MOVIA	0x83
     000D 00rr                      1- 2095     	SFUN	_T2CR1
     000E                           1- 2096     _00304_DS_:
                                    1- 2097     	.line	574, "main.c"; 	}
                                    1- 2098     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2099     ; exit point of _pwmInit
                                    1- 2101     ;***
                                    1- 2102     ;  pBlock Stats: dbName = C
                                    1- 2103     ;***
                                    1- 2104     ;has an exit
                                    1- 2105     ;functions called:
                                    1- 2106     ;   _setInput
                                    1- 2107     ;   _pwmStop
                                    1- 2108     ;   _setInput
                                    1- 2109     ;   _pwmStop
                                    1- 2110     ;; Starting pCode block
                                    1- 2111     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2113     _gotoSleep:
                                    1- 2114     ; 2 exit points
                                    1- 2115     	.line	533, "main.c"; 	sleepFlag = 0;
                                    1- 2116     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2117     	CLRR	_sleepFlag
                                    1- 2118     	.line	534, "main.c"; 	waitTime = 0;
                                    1- 2119     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2120     	CLRR	_waitTime
     0004 02rr                      1- 2121     	CLRR	(_waitTime + 1)
                                    1- 2122     	.line	535, "main.c"; 	setInput();
                                    1- 2123     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2124     	.line	536, "main.c"; 	sleepTime = 0;
                                    1- 2125     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2126     	CLRR	_sleepTime
                                    1- 2127     	.line	537, "main.c"; 	pwFlag = 0;
                                    1- 2128     	BANKSEL	_pwFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2129     	CLRR	_pwFlag
                                    1- 2130     	.line	538, "main.c"; 	pwmStop();
                                    1- 2131     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2132     	.line	539, "main.c"; 	AWUCON = 0xA0;
     000B 21A0                      1- 2133     	MOVIA	0xa0
     000C 00rr                      1- 2134     	MOVAR	_AWUCON
                                    1- 2135     	.line	541, "main.c"; 	IOSTB = C_PB3_Input;
     000D 2108                      1- 2136     	MOVIA	0x08
     000E 000r                      1- 2137     	IOST	_IOSTB
                                    1- 2138     	.line	542, "main.c"; 	PORTA = 0X00;
                                    1- 2139     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2140     	CLRR	_PORTA
                                    1- 2141     	.line	543, "main.c"; 	PORTB = 0X00;
     0011 02rr                      1- 2142     	CLRR	_PORTB
                                    1- 2143     	.line	544, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2144     	MOVIA	0x02
     0013 00rr                      1- 2145     	MOVAR	_INTE
                                    1- 2146     	.line	545, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2147     	MOVIA	0x18
     0015 00rr                      1- 2148     	MOVAR	_PCON
                                    1- 2149     	.line	546, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2150     	CLRR	_INTF
                                    1- 2151     	.line	547, "main.c"; 	CLRWDT();
     0017 0002                      1- 2152     	clrwdt
                                    1- 2153     	.line	548, "main.c"; 	ENI();
     0018 0004                      1- 2154     	ENI
                                    1- 2155     	.line	549, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2156     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1- 2157     	BTRSC	_PORTA,5
                                    1- 2158     	MGOTO	_00297_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2159     	.line	550, "main.c"; 	SLEEP();
     001C 0001                      1- 2160     	sleep
     001D                           1- 2161     _00297_DS_:
                                    1- 2162     	.line	551, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2163     	CLRR	_AWUCON
                                    1- 2164     	.line	552, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001E 21A0                      1- 2165     	MOVIA	0xa0
     001F 000r                      1- 2166     	IOST	_IOSTA
                                    1- 2167     	.line	553, "main.c"; 	IOSTB = C_PB3_Input ;
     0020 2108                      1- 2168     	MOVIA	0x08
     0021 000r                      1- 2169     	IOST	_IOSTB
                                    1- 2170     	.line	554, "main.c"; 	PORTA = 0x00;
                                    1- 2171     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2172     	CLRR	_PORTA
                                    1- 2173     	.line	555, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2103                      1- 2174     	MOVIA	0x03
     0025 00rr                      1- 2175     	MOVAR	_INTE
                                    1- 2176     	.line	556, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2177     	CLRR	_INTF
                                    1- 2178     	.line	558, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2179     	MOVIA	0xb8
     0028 00rr                      1- 2180     	MOVAR	_PCON
                                    1- 2181     	.line	561, "main.c"; 	}
                                    1- 2182     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2183     ; exit point of _gotoSleep
                                    1- 2185     ;***
                                    1- 2186     ;  pBlock Stats: dbName = C
                                    1- 2187     ;***
                                    1- 2188     ;has an exit
                                    1- 2189     ;functions called:
                                    1- 2190     ;   _setInput
                                    1- 2191     ;   _setInput
                                    1- 2192     ;; Starting pCode block
                                    1- 2193     .segment "code"; module=main, function=_initSys
     0000                           1- 2195     _initSys:
                                    1- 2196     ; 2 exit points
                                    1- 2197     	.line	501, "main.c"; 	DISI();
     0000 0013                      1- 2198     	DISI
                                    1- 2199     	.line	502, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 2200     	MOVIA	0xa0
     0002 000r                      1- 2201     	IOST	_IOSTA
                                    1- 2202     	.line	503, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2203     	MOVIA	0x08
     0004 000r                      1- 2204     	IOST	_IOSTB
                                    1- 2205     	.line	504, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2206     	CLRR	_PORTB
                                    1- 2207     	.line	505, "main.c"; 	PORTA = 0x00;
                                    1- 2208     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2209     	CLRR	_PORTA
                                    1- 2210     	.line	507, "main.c"; 	setInput();
                                    1- 2211     	MCALL	_setInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2212     	.line	508, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2213     	MOVIA	0x7f
     000A 000r                      1- 2214     	IOST	_APHCON
                                    1- 2215     	.line	509, "main.c"; 	BPHCON = 0xFF;		//PB3上拉
     000B 21FF                      1- 2216     	MOVIA	0xff
     000C 00rr                      1- 2217     	MOVAR	_BPHCON
                                    1- 2218     	.line	510, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2219     	MOVAR	_ABPLCON
                                    1- 2220     	.line	512, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2103                      1- 2221     	MOVIA	0x03
     000F 00rr                      1- 2222     	MOVAR	_INTE
                                    1- 2223     	.line	514, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2224     	CLRA	
     0011 000r                      1- 2225     	IOST	_PCON1
                                    1- 2226     	.line	516, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2227     	MOVIA	0x37
     0013 00rr                      1- 2228     	MOVAR	_TMR0
                                    1- 2229     	.line	517, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2230     	CLRA	
     0015 0003                      1- 2231     	T0MD	
                                    1- 2232     	.line	519, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2233     	MOVIA	0x01
     0017 000r                      1- 2234     	IOST	_PCON1
                                    1- 2235     	.line	522, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2236     	MOVIA	0x98
     0019 00rr                      1- 2237     	MOVAR	_PCON
                                    1- 2238     	.line	525, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2239     	MOVIA	0x01
     001B 000r                      1- 2240     	IOST	_PCON1
                                    1- 2241     	.line	526, "main.c"; 	ENI();
     001C 0004                      1- 2242     	ENI
                                    1- 2243     	.line	527, "main.c"; 	}
                                    1- 2244     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2245     ; exit point of _initSys
                                    1- 2247     ;***
                                    1- 2248     ;  pBlock Stats: dbName = C
                                    1- 2249     ;***
                                    1- 2250     ;has an exit
                                    1- 2251     ;functions called:
                                    1- 2252     ;   __gptrget1
                                    1- 2253     ;   _showNubBaiwei
                                    1- 2254     ;   __gptrget1
                                    1- 2255     ;   _showNubShiwei
                                    1- 2256     ;   __gptrget1
                                    1- 2257     ;   _showNubGewei
                                    1- 2258     ;   _setInput
                                    1- 2259     ;   __gptrget1
                                    1- 2260     ;   _showNubBaiwei
                                    1- 2261     ;   __gptrget1
                                    1- 2262     ;   _showNubShiwei
                                    1- 2263     ;   __gptrget1
                                    1- 2264     ;   _showNubGewei
                                    1- 2265     ;   _setInput
                                    1- 2266     ;5 compiler assigned registers:
                                    1- 2267     ;   r0x1047
                                    1- 2268     ;   r0x1048
                                    1- 2269     ;   STK01
                                    1- 2270     ;   STK00
                                    1- 2271     ;   r0x1049
                                    1- 2272     ;; Starting pCode block
                                    1- 2273     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2275     _refreshNub:
                                    1- 2276     ; 2 exit points
                                    1- 2277     	.line	492, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 2278     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2279     	MOVR	_baiweiNum,W
     0002 25rr                      1- 2280     	ADDIA	(_numArray + 0)
                                    1- 2281     	BANKSEL	r0x1047
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2282     	MOVAR	r0x1047
     0005 21rr                      1- 2283     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 2284     	BTRSC	STATUS,0
     0007 2501                      1- 2285     	ADDIA	0x01
                                    1- 2286     	BANKSEL	r0x1048
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2287     	MOVAR	r0x1048
                                    1- 2288     	BANKSEL	r0x1047
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2289     	MOVR	r0x1047,W
     000C 00rr                      1- 2290     	MOVAR	STK01
                                    1- 2291     	BANKSEL	r0x1048
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2292     	MOVR	r0x1048,W
     000F 00rr                      1- 2293     	MOVAR	STK00
     0010 2100                      1- 2294     	MOVIA	0x00
                                    1- 2295     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2296     ;;103	MOVAR	r0x1049
                                    1- 2297     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2298     	.line	493, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2299     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2300     	MOVR	_shiweiNum,W
     0015 25rr                      1- 2301     	ADDIA	(_numArray + 0)
                                    1- 2302     	BANKSEL	r0x1047
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2303     	MOVAR	r0x1047
     0018 21rr                      1- 2304     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 2305     	BTRSC	STATUS,0
     001A 2501                      1- 2306     	ADDIA	0x01
                                    1- 2307     	BANKSEL	r0x1048
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2308     	MOVAR	r0x1048
                                    1- 2309     	BANKSEL	r0x1047
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2310     	MOVR	r0x1047,W
     001F 00rr                      1- 2311     	MOVAR	STK01
                                    1- 2312     	BANKSEL	r0x1048
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2313     	MOVR	r0x1048,W
     0022 00rr                      1- 2314     	MOVAR	STK00
     0023 2100                      1- 2315     	MOVIA	0x00
                                    1- 2316     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2317     ;;102	MOVAR	r0x1049
                                    1- 2318     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2319     	.line	494, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2320     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2321     	MOVR	_geweiNum,W
     0028 25rr                      1- 2322     	ADDIA	(_numArray + 0)
                                    1- 2323     	BANKSEL	r0x1047
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2324     	MOVAR	r0x1047
     002B 21rr                      1- 2325     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2326     	BTRSC	STATUS,0
     002D 2501                      1- 2327     	ADDIA	0x01
                                    1- 2328     	BANKSEL	r0x1048
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2329     	MOVAR	r0x1048
                                    1- 2330     	BANKSEL	r0x1047
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2331     	MOVR	r0x1047,W
     0032 00rr                      1- 2332     	MOVAR	STK01
                                    1- 2333     	BANKSEL	r0x1048
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2334     	MOVR	r0x1048,W
     0035 00rr                      1- 2335     	MOVAR	STK00
     0036 2100                      1- 2336     	MOVIA	0x00
                                    1- 2337     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2338     ;;2	MOVAR	r0x1049
                                    1- 2339     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2340     	.line	495, "main.c"; 	setInput();
                                    1- 2341     	MCALL	_setInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2342     	.line	496, "main.c"; 	}
                                    1- 2343     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 2344     ; exit point of _refreshNub
                                    1- 2346     ;***
                                    1- 2347     ;  pBlock Stats: dbName = C
                                    1- 2348     ;***
                                    1- 2349     ;has an exit
                                    1- 2350     ;; Starting pCode block
                                    1- 2351     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2353     _checkIRKey:
                                    1- 2354     ; 2 exit points
                                    1- 2355     	.line	444, "main.c"; 	if(pwFlag == 0)
                                    1- 2356     	BANKSEL	_pwFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2357     	MOVR	_pwFlag,W
     0002 0903                      1- 2358     	BTRSS	STATUS,2
                                    1- 2359     	MGOTO	_00271_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2360     	.line	446, "main.c"; 	irStep = 0;
                                    1- 2361     	BANKSEL	_irStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2362     	CLRR	_irStep
                                    1- 2363     	.line	447, "main.c"; 	return;
                                    1- 2364     	MGOTO	_00283_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2365     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2366     ;;unsigned compare: left >= lit (0x6=6), size=1
     0007                           1- 2367     _00271_DS_:
                                    1- 2368     	.line	449, "main.c"; 	if(zhedangCount > 5 && irStep == 0)
     0007 2106                      1- 2369     	MOVIA	0x06
                                    1- 2370     	BANKSEL	_zhedangCount
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 04rr                      1- 2371     	SUBAR	_zhedangCount,W
     000A 0803                      1- 2372     	BTRSS	STATUS,0
                                    1- 2373     	MGOTO	_00283_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2374     	BANKSEL	_irStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2375     	MOVR	_irStep,W
     000E 0903                      1- 2376     	BTRSS	STATUS,2
                                    1- 2377     	MGOTO	_00283_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2378     	.line	452, "main.c"; 	if(workStep == 1)
                                    1- 2379     	BANKSEL	_workStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 2380     	MOVR	_workStep,W
     0012 2401                      1- 2381     	XORIA	0x01
     0013 0903                      1- 2382     	BTRSS	STATUS,2
                                    1- 2383     	MGOTO	_00278_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2384     	.line	454, "main.c"; 	workTime = 50;
     0015 2132                      1- 2385     	MOVIA	0x32
                                    1- 2386     	BANKSEL	_workTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2387     	MOVAR	_workTime
                                    1- 2388     	MGOTO	_00279_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1- 2389     _00278_DS_:
                                    1- 2390     	.line	456, "main.c"; 	else if(workStep == 2)
                                    1- 2391     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2392     	MOVR	_workStep,W
     001B 2402                      1- 2393     	XORIA	0x02
     001C 0903                      1- 2394     	BTRSS	STATUS,2
                                    1- 2395     	MGOTO	_00275_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2396     	.line	458, "main.c"; 	workTime = 80;
     001E 2150                      1- 2397     	MOVIA	0x50
                                    1- 2398     	BANKSEL	_workTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 2399     	MOVAR	_workTime
                                    1- 2400     	MGOTO	_00279_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 2401     _00275_DS_:
                                    1- 2402     	.line	460, "main.c"; 	else if(workStep == 3)
                                    1- 2403     	BANKSEL	_workStep
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 2404     	MOVR	_workStep,W
     0024 2403                      1- 2405     	XORIA	0x03
     0025 0903                      1- 2406     	BTRSS	STATUS,2
                                    1- 2407     	MGOTO	_00279_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2408     	.line	462, "main.c"; 	workTime = 120;
     0027 2178                      1- 2409     	MOVIA	0x78
                                    1- 2410     	BANKSEL	_workTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2411     	MOVAR	_workTime
     002A                           1- 2412     _00279_DS_:
                                    1- 2413     	.line	464, "main.c"; 	waitBatTime = 120;
     002A 2178                      1- 2414     	MOVIA	0x78
                                    1- 2415     	BANKSEL	_waitBatTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 2416     	MOVAR	_waitBatTime
                                    1- 2417     	.line	466, "main.c"; 	irStep = 1;
     002D 2101                      1- 2418     	MOVIA	0x01
                                    1- 2419     	BANKSEL	_irStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2420     	MOVAR	_irStep
     0030                           1- 2421     _00283_DS_:
                                    1- 2422     	.line	485, "main.c"; 	}
                                    1- 2423     	RETURN	
     0030 0010                      3-   40 m1      ret
                                    1- 2424     ; exit point of _checkIRKey
                                    1- 2426     ;***
                                    1- 2427     ;  pBlock Stats: dbName = C
                                    1- 2428     ;***
                                    1- 2429     ;has an exit
                                    1- 2430     ;functions called:
                                    1- 2431     ;   _pwmInit
                                    1- 2432     ;   _pwmStop
                                    1- 2433     ;   _checkBat
                                    1- 2434     ;   __divuchar
                                    1- 2435     ;   __moduchar
                                    1- 2436     ;   __moduint
                                    1- 2437     ;   __divuchar
                                    1- 2438     ;   __moduchar
                                    1- 2439     ;   _pwmInit
                                    1- 2440     ;   _pwmStop
                                    1- 2441     ;   _checkBat
                                    1- 2442     ;   __divuchar
                                    1- 2443     ;   __moduchar
                                    1- 2444     ;   __moduint
                                    1- 2445     ;   __divuchar
                                    1- 2446     ;   __moduchar
                                    1- 2447     ;5 compiler assigned registers:
                                    1- 2448     ;   r0x104A
                                    1- 2449     ;   STK00
                                    1- 2450     ;   STK02
                                    1- 2451     ;   STK01
                                    1- 2452     ;   r0x104B
                                    1- 2453     ;; Starting pCode block
                                    1- 2454     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2456     _chrgCtr:
                                    1- 2457     ; 2 exit points
                                    1- 2458     	.line	309, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2459     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Err                      1- 2460     	BTRSC	_PORTA,5
                                    1- 2461     	MGOTO	_00172_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2462     	.line	311, "main.c"; 	fullFlag = 0;
                                    1- 2463     	BANKSEL	_fullFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2464     	CLRR	_fullFlag
     0005                           1- 2465     _00172_DS_:
                                    1- 2466     	.line	313, "main.c"; 	BPHCON |= 0x04;
     0005 19rr                      1- 2467     	BSR	_BPHCON,2
                                    1- 2468     	.line	314, "main.c"; 	IOSTB &= 0xFB;
     0006 001r                      1- 2469     	IOSTR	_IOSTB
                                    1- 2470     	BANKSEL	r0x104A
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2471     	MOVAR	r0x104A
     0009 1Drr                      1- 2472     	BCR	r0x104A,2
     000A 01rr                      1- 2473     	MOVR	r0x104A,W
     000B 000r                      1- 2474     	IOST	_IOSTB
                                    1- 2475     	.line	315, "main.c"; 	if(workTime > 0)
                                    1- 2476     	BANKSEL	_workTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2477     	MOVR	_workTime,W
     000E 0D03                      1- 2478     	BTRSC	STATUS,2
                                    1- 2479     	MGOTO	_00174_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2480     	.line	317, "main.c"; 	pwmInit();
                                    1- 2481     	MCALL	_pwmInit
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2482     	.line	318, "main.c"; 	workTime--;
                                    1- 2483     	BANKSEL	_workTime
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 06rr                      1- 2484     	DECR	_workTime,F
                                    1- 2485     	MGOTO	_00175_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1- 2486     _00174_DS_:
                                    1- 2487     	.line	322, "main.c"; 	pwmStop();
                                    1- 2488     	MCALL	_pwmStop
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2489     	.line	323, "main.c"; 	PORTB &= 0xFB;
     0015 1Drr                      1- 2490     	BCR	_PORTB,2
     0016                           1- 2491     _00175_DS_:
                                    1- 2492     	.line	325, "main.c"; 	if(startTime)
                                    1- 2493     	BANKSEL	_startTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2494     	MOVR	_startTime,W
     0018 0D03                      1- 2495     	BTRSC	STATUS,2
                                    1- 2496     	MGOTO	_00210_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2497     	.line	327, "main.c"; 	checkBat();
                                    1- 2498     	MCALL	_checkBat
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2499     	.line	328, "main.c"; 	startTime--;
                                    1- 2500     	BANKSEL	_startTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 06rr                      1- 2501     	DECR	_startTime,F
                                    1- 2502     	.line	329, "main.c"; 	showFlag = 1;
     001D 2101                      1- 2503     	MOVIA	0x01
                                    1- 2504     	BANKSEL	_showFlag
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2505     	MOVAR	_showFlag
                                    1- 2506     	.line	330, "main.c"; 	baiweiNum = shiweiNum = 8;
     0020 2108                      1- 2507     	MOVIA	0x08
                                    1- 2508     	BANKSEL	_shiweiNum
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2509     	MOVAR	_shiweiNum
                                    1- 2510     	BANKSEL	_baiweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2511     	MOVAR	_baiweiNum
                                    1- 2512     	.line	331, "main.c"; 	geweiNum = 8;
                                    1- 2513     	BANKSEL	_geweiNum
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2514     	MOVAR	_geweiNum
                                    1- 2515     	.line	331, "main.c"; 	}
                                    1- 2516     	MGOTO	_00212_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 2517     _00210_DS_:
                                    1- 2518     	.line	333, "main.c"; 	else if(stepShowTime)
                                    1- 2519     	BANKSEL	_stepShowTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2520     	MOVR	_stepShowTime,W
     002A 0D03                      1- 2521     	BTRSC	STATUS,2
                                    1- 2522     	MGOTO	_00207_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2523     	.line	335, "main.c"; 	showFlag = 1;
     002C 2101                      1- 2524     	MOVIA	0x01
                                    1- 2525     	BANKSEL	_showFlag
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2526     	MOVAR	_showFlag
                                    1- 2527     	.line	336, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2528     	BANKSEL	_shiweiNum
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1- 2529     	CLRR	_shiweiNum
                                    1- 2530     	BANKSEL	_baiweiNum
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 2531     	CLRR	_baiweiNum
                                    1- 2532     	.line	337, "main.c"; 	geweiNum = workStep;
                                    1- 2533     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2534     	MOVR	_workStep,W
                                    1- 2535     	BANKSEL	_geweiNum
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 2536     	MOVAR	_geweiNum
                                    1- 2537     	.line	337, "main.c"; 	}
                                    1- 2538     	MGOTO	_00212_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1- 2539     _00207_DS_:
                                    1- 2540     	.line	339, "main.c"; 	else if(pwShowTime || workTime)
                                    1- 2541     	BANKSEL	_pwShowTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2542     	MOVR	_pwShowTime,W
     003A 0903                      1- 2543     	BTRSS	STATUS,2
                                    1- 2544     	MGOTO	_00202_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2545     	BANKSEL	_workTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2546     	MOVR	_workTime,W
     003E 0D03                      1- 2547     	BTRSC	STATUS,2
                                    1- 2548     	MGOTO	_00203_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 2549     _00202_DS_:
                                    1- 2550     	.line	341, "main.c"; 	showFlag = 1;
     0040 2101                      1- 2551     	MOVIA	0x01
                                    1- 2552     	BANKSEL	_showFlag
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2553     	MOVAR	_showFlag
                                    1- 2554     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2555     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2556     	.line	342, "main.c"; 	if(pwStep > 99)
     0043 2164                      1- 2557     	MOVIA	0x64
                                    1- 2558     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 04rr                      1- 2559     	SUBAR	_pwStep,W
     0046 0803                      1- 2560     	BTRSS	STATUS,0
                                    1- 2561     	MGOTO	_00177_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2562     	.line	344, "main.c"; 	baiweiNum = 1;
     0048 2101                      1- 2563     	MOVIA	0x01
                                    1- 2564     	BANKSEL	_baiweiNum
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2565     	MOVAR	_baiweiNum
                                    1- 2566     	.line	345, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2567     	BANKSEL	_geweiNum
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2568     	CLRR	_geweiNum
                                    1- 2569     	BANKSEL	_shiweiNum
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1- 2570     	CLRR	_shiweiNum
                                    1- 2571     	MGOTO	_00212_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1- 2572     _00177_DS_:
                                    1- 2573     	.line	349, "main.c"; 	baiweiNum = 0;
                                    1- 2574     	BANKSEL	_baiweiNum
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 2575     	CLRR	_baiweiNum
                                    1- 2576     	.line	350, "main.c"; 	shiweiNum = pwStep/10;
     0052 210A                      1- 2577     	MOVIA	0x0a
     0053 00rr                      1- 2578     	MOVAR	STK00
                                    1- 2579     	BANKSEL	_pwStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 2580     	MOVR	_pwStep,W
                                    1- 2581     	MCALL	__divuchar
     0056 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2582     	BANKSEL	_shiweiNum
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 2583     	MOVAR	_shiweiNum
                                    1- 2584     	.line	351, "main.c"; 	geweiNum = pwStep%10;
     0059 210A                      1- 2585     	MOVIA	0x0a
     005A 00rr                      1- 2586     	MOVAR	STK00
                                    1- 2587     	BANKSEL	_pwStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 2588     	MOVR	_pwStep,W
                                    1- 2589     	MCALL	__moduchar
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2590     	BANKSEL	_geweiNum
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2591     	MOVAR	_geweiNum
                                    1- 2592     	.line	351, "main.c"; 	}
                                    1- 2593     	MGOTO	_00212_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2594     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2595     ;;unsigned compare: left >= lit (0x6=6), size=1
     0061                           1- 2596     _00203_DS_:
                                    1- 2597     	.line	356, "main.c"; 	if(pwStep <= 5 && offShowTime == 0 && ((0x20 & PORTA) == 0) && pwFlag)
     0061 2106                      1- 2598     	MOVIA	0x06
                                    1- 2599     	BANKSEL	_pwStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 2600     	SUBAR	_pwStep,W
     0064 0C03                      1- 2601     	BTRSC	STATUS,0
                                    1- 2602     	MGOTO	_00197_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2603     	BANKSEL	_offShowTime
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2604     	MOVR	_offShowTime,W
     0068 0903                      1- 2605     	BTRSS	STATUS,2
                                    1- 2606     	MGOTO	_00197_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2607     	BANKSEL	_PORTA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 0Err                      1- 2608     	BTRSC	_PORTA,5
                                    1- 2609     	MGOTO	_00197_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2610     	BANKSEL	_pwFlag
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2611     	MOVR	_pwFlag,W
     006F 0D03                      1- 2612     	BTRSC	STATUS,2
                                    1- 2613     	MGOTO	_00197_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2614     	.line	358, "main.c"; 	showFlag = 1;
     0071 2101                      1- 2615     	MOVIA	0x01
                                    1- 2616     	BANKSEL	_showFlag
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 2617     	MOVAR	_showFlag
                                    1- 2618     	.line	359, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2619     	BANKSEL	_shanTime
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 05rr                      1- 2620     	INCR	_shanTime,F
     0076 0D03                      1- 2621     	BTRSC	STATUS,2
     0077 05rr                      1- 2622     	INCR	(_shanTime + 1),F
                                    1- 2623     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2624     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0078 2101                      1- 2625     	MOVIA	0x01
     0079 04rr                      1- 2626     	SUBAR	(_shanTime + 1),W
     007A 0903                      1- 2627     	BTRSS	STATUS,2
                                    1- 2628     	MGOTO	_00264_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C 21F5                      1- 2629     	MOVIA	0xf5
     007D 04rr                      1- 2630     	SUBAR	_shanTime,W
     007E                           1- 2631     _00264_DS_:
     007E 0803                      1- 2632     	BTRSS	STATUS,0
                                    1- 2633     	MGOTO	_00180_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2634     	.line	361, "main.c"; 	shanTime = 0;
                                    1- 2635     	BANKSEL	_shanTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1- 2636     	CLRR	_shanTime
     0082 02rr                      1- 2637     	CLRR	(_shanTime + 1)
                                    1- 2638     	.line	362, "main.c"; 	showFlag = 0;
                                    1- 2639     	BANKSEL	_showFlag
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 02rr                      1- 2640     	CLRR	_showFlag
     0085                           1- 2641     _00180_DS_:
                                    1- 2642     	.line	365, "main.c"; 	if(shanTime % 100 < 50)
     0085 2164                      1- 2643     	MOVIA	0x64
     0086 00rr                      1- 2644     	MOVAR	STK02
     0087 2100                      1- 2645     	MOVIA	0x00
     0088 00rr                      1- 2646     	MOVAR	STK01
                                    1- 2647     	BANKSEL	_shanTime
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 2648     	MOVR	_shanTime,W
     008B 00rr                      1- 2649     	MOVAR	STK00
     008C 01rr                      1- 2650     	MOVR	(_shanTime + 1),W
                                    1- 2651     	MCALL	__moduint
     008D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2652     	BANKSEL	r0x104B
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 2653     	MOVAR	r0x104B
     0090 01rr                      1- 2654     	MOVR	STK00,W
                                    1- 2655     	BANKSEL	r0x104A
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 2656     	MOVAR	r0x104A
                                    1- 2657     ;;unsigned compare: left < lit (0x32=50), size=2
     0093 2100                      1- 2658     	MOVIA	0x00
                                    1- 2659     	BANKSEL	r0x104B
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 2660     	SUBAR	r0x104B,W
     0096 0903                      1- 2661     	BTRSS	STATUS,2
                                    1- 2662     	MGOTO	_00265_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098 2132                      1- 2663     	MOVIA	0x32
                                    1- 2664     	BANKSEL	r0x104A
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 2665     	SUBAR	r0x104A,W
     009B                           1- 2666     _00265_DS_:
     009B 0C03                      1- 2667     	BTRSC	STATUS,0
                                    1- 2668     	MGOTO	_00182_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2669     	.line	367, "main.c"; 	showFlag = 1;
     009D 2101                      1- 2670     	MOVIA	0x01
                                    1- 2671     	BANKSEL	_showFlag
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 2672     	MOVAR	_showFlag
                                    1- 2673     	.line	368, "main.c"; 	baiweiNum = 0;
                                    1- 2674     	BANKSEL	_baiweiNum
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 2675     	CLRR	_baiweiNum
                                    1- 2676     	.line	369, "main.c"; 	shiweiNum = 0;
                                    1- 2677     	BANKSEL	_shiweiNum
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 02rr                      1- 2678     	CLRR	_shiweiNum
                                    1- 2679     	.line	370, "main.c"; 	geweiNum = pwStep;
                                    1- 2680     	BANKSEL	_pwStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 2681     	MOVR	_pwStep,W
                                    1- 2682     	BANKSEL	_geweiNum
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 2683     	MOVAR	_geweiNum
                                    1- 2684     	MGOTO	_00212_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
     00A9                           1- 2685     _00182_DS_:
                                    1- 2686     	.line	374, "main.c"; 	showFlag = 0;
                                    1- 2687     	BANKSEL	_showFlag
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 02rr                      1- 2688     	CLRR	_showFlag
                                    1- 2689     	.line	374, "main.c"; 	}
                                    1- 2690     	MGOTO	_00212_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC                           1- 2691     _00197_DS_:
                                    1- 2692     	.line	377, "main.c"; 	else if(offShowTime > 0)
                                    1- 2693     	BANKSEL	_offShowTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 2694     	MOVR	_offShowTime,W
     00AE 0D03                      1- 2695     	BTRSC	STATUS,2
                                    1- 2696     	MGOTO	_00194_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2697     	.line	379, "main.c"; 	showFlag = 1;
     00B0 2101                      1- 2698     	MOVIA	0x01
                                    1- 2699     	BANKSEL	_showFlag
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 2700     	MOVAR	_showFlag
                                    1- 2701     	.line	380, "main.c"; 	baiweiNum = 0;
                                    1- 2702     	BANKSEL	_baiweiNum
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 02rr                      1- 2703     	CLRR	_baiweiNum
                                    1- 2704     	.line	381, "main.c"; 	shiweiNum = 10;
     00B5 210A                      1- 2705     	MOVIA	0x0a
                                    1- 2706     	BANKSEL	_shiweiNum
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 2707     	MOVAR	_shiweiNum
                                    1- 2708     	.line	382, "main.c"; 	geweiNum = 10;
                                    1- 2709     	BANKSEL	_geweiNum
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 00rr                      1- 2710     	MOVAR	_geweiNum
                                    1- 2711     	.line	382, "main.c"; 	}
                                    1- 2712     	MGOTO	_00212_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
     00BB                           1- 2713     _00194_DS_:
                                    1- 2714     	.line	384, "main.c"; 	else if(0x20 & PORTA)
                                    1- 2715     	BANKSEL	_PORTA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 0Arr                      1- 2716     	BTRSS	_PORTA,5
                                    1- 2717     	MGOTO	_00191_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2718     	.line	390, "main.c"; 	showFlag = 1;
     00BE 2101                      1- 2719     	MOVIA	0x01
                                    1- 2720     	BANKSEL	_showFlag
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 2721     	MOVAR	_showFlag
                                    1- 2722     	.line	394, "main.c"; 	if(fullFlag)
                                    1- 2723     	BANKSEL	_fullFlag
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 2724     	MOVR	_fullFlag,W
     00C3 0D03                      1- 2725     	BTRSC	STATUS,2
                                    1- 2726     	MGOTO	_00188_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2727     	.line	396, "main.c"; 	fullFlag = 1;
     00C5 2101                      1- 2728     	MOVIA	0x01
     00C6 00rr                      1- 2729     	MOVAR	_fullFlag
                                    1- 2730     	.line	398, "main.c"; 	baiweiNum = 1;
                                    1- 2731     	BANKSEL	_baiweiNum
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 2732     	MOVAR	_baiweiNum
                                    1- 2733     	.line	399, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2734     	BANKSEL	_geweiNum
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 02rr                      1- 2735     	CLRR	_geweiNum
                                    1- 2736     	BANKSEL	_shiweiNum
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 02rr                      1- 2737     	CLRR	_shiweiNum
                                    1- 2738     	.line	399, "main.c"; 	}
                                    1- 2739     	MGOTO	_00212_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
     00CE                           1- 2740     _00188_DS_:
                                    1- 2741     	.line	404, "main.c"; 	if(pwStep == 100)
                                    1- 2742     	BANKSEL	_pwStep
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 2743     	MOVR	_pwStep,W
     00D0 2464                      1- 2744     	XORIA	0x64
     00D1 0903                      1- 2745     	BTRSS	STATUS,2
                                    1- 2746     	MGOTO	_00185_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2747     	.line	406, "main.c"; 	fullFlag = 1;
     00D3 2101                      1- 2748     	MOVIA	0x01
                                    1- 2749     	BANKSEL	_fullFlag
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 00rr                      1- 2750     	MOVAR	_fullFlag
                                    1- 2751     	.line	407, "main.c"; 	baiweiNum = 0;
                                    1- 2752     	BANKSEL	_baiweiNum
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 2753     	CLRR	_baiweiNum
                                    1- 2754     	.line	408, "main.c"; 	shiweiNum = 9;
     00D8 2109                      1- 2755     	MOVIA	0x09
                                    1- 2756     	BANKSEL	_shiweiNum
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 2757     	MOVAR	_shiweiNum
                                    1- 2758     	.line	409, "main.c"; 	geweiNum = 9;
                                    1- 2759     	BANKSEL	_geweiNum
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 2760     	MOVAR	_geweiNum
                                    1- 2761     	MGOTO	_00212_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
     00DE                           1- 2762     _00185_DS_:
                                    1- 2763     	.line	413, "main.c"; 	baiweiNum = 0;
                                    1- 2764     	BANKSEL	_baiweiNum
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 02rr                      1- 2765     	CLRR	_baiweiNum
                                    1- 2766     	.line	414, "main.c"; 	shiweiNum = pwStep/10;
     00E0 210A                      1- 2767     	MOVIA	0x0a
     00E1 00rr                      1- 2768     	MOVAR	STK00
                                    1- 2769     	BANKSEL	_pwStep
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 01rr                      1- 2770     	MOVR	_pwStep,W
                                    1- 2771     	MCALL	__divuchar
     00E4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2772     	BANKSEL	_shiweiNum
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 2773     	MOVAR	_shiweiNum
                                    1- 2774     	.line	415, "main.c"; 	geweiNum = pwStep%10;
     00E7 210A                      1- 2775     	MOVIA	0x0a
     00E8 00rr                      1- 2776     	MOVAR	STK00
                                    1- 2777     	BANKSEL	_pwStep
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 01rr                      1- 2778     	MOVR	_pwStep,W
                                    1- 2779     	MCALL	__moduchar
     00EB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2780     	BANKSEL	_geweiNum
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1- 2781     	MOVAR	_geweiNum
                                    1- 2782     	.line	415, "main.c"; 	}
                                    1- 2783     	MGOTO	_00212_DS_
     00EE 3rrr                      3-   63 m1      LGOTO rom_address
     00EF                           1- 2784     _00191_DS_:
                                    1- 2785     	.line	434, "main.c"; 	showFlag = 0;
                                    1- 2786     	BANKSEL	_showFlag
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 02rr                      1- 2787     	CLRR	_showFlag
     00F1                           1- 2788     _00212_DS_:
                                    1- 2789     	.line	438, "main.c"; 	}
                                    1- 2790     	RETURN	
     00F1 0010                      3-   40 m1      ret
                                    1- 2791     ; exit point of _chrgCtr
                                    1- 2794     ;	code size estimation:
                                    1- 2795     ;	 1041+  349 =  1390 instructions ( 3478 byte)
                                    1- 2797     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
