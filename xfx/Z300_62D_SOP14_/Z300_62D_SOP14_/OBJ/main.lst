
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_pwmCtr
                                    1-   97     	extern	_keyRead3
                                    1-   98     	extern	_keyRead2
                                    1-   99     	extern	_keyRead
                                    1-  100     	extern	_keyCtr
                                    1-  101     	extern	_isr
                                    1-  102     	extern	_main
                                    1-  103     	extern	_intCount
                                    1-  104     	extern	_IntFlag
                                    1-  105     	extern	_unlockTime
                                    1-  106     	extern	_lockFlag
                                    1-  107     	extern	_keyCount
                                    1-  108     	extern	_keyCount2
                                    1-  109     	extern	_keyCount3
                                    1-  110     	extern	_ledCount
                                    1-  111     	extern	_jinjiFlag
                                    1-  112     	extern	_onlyLedFlag
                                    1-  114     	extern PSAVE
                                    1-  115     	extern SSAVE
                                    1-  116     	extern WSAVE
                                    1-  117     	extern STK04
                                    1-  118     	extern STK03
                                    1-  119     	extern STK02
                                    1-  120     	extern STK01
                                    1-  121     	extern STK00
                                    1-  123     .segment "uninit", 0x20000040
 20000040                           1-  124     PSAVE:
                                    1-  125     	.res 1
 20000041                           1-  126     SSAVE:
                                    1-  127     	.res 1
 20000042                           1-  128     WSAVE:
                                    1-  129     	.res 1
 20000043                           1-  130     STK04:
                                    1-  131     	.res 1
 20000044                           1-  132     STK03:
                                    1-  133     	.res 1
 20000045                           1-  134     STK02:
                                    1-  135     	.res 1
 20000046                           1-  136     STK01:
                                    1-  137     	.res 1
 20000047                           1-  138     STK00:
                                    1-  139     	.res 1
                                    1-  141     ;--------------------------------------------------------
                                    1-  142     ; global definitions
                                    1-  143     ;--------------------------------------------------------
                                    1-  144     ;--------------------------------------------------------
                                    1-  145     ; absolute symbol definitions
                                    1-  146     ;--------------------------------------------------------
                                    1-  147     ;--------------------------------------------------------
                                    1-  148     ; compiler-defined variables
                                    1-  149     ;--------------------------------------------------------
                                    1-  150     .segment "uninit"
     0000                           1-  151     r0x1011:
                                    1-  152     	.res	1
                                    1-  153     .segment "uninit"
     0000                           1-  154     r0x1010:
                                    1-  155     	.res	1
                                    1-  156     .segment "uninit"
     0000                           1-  157     r0x100F:
                                    1-  158     	.res	1
                                    1-  159     .segment "uninit"
     0000                           1-  160     r0x100E:
                                    1-  161     	.res	1
                                    1-  162     ;--------------------------------------------------------
                                    1-  163     ; initialized data
                                    1-  164     ;--------------------------------------------------------
                                    1-  166     .segment "idata"
     0000                           1-  167     _intCount:
     0000 0000                      1-  168     	dw	0x00
                                    1-  172     .segment "idata"
     0000                           1-  173     _IntFlag:
     0000 0000                      1-  174     	dw	0x00
                                    1-  178     .segment "idata"
     0000                           1-  179     _unlockTime:
     0000 0000 0000                 1-  180     	dw	0x00, 0x00
                                    1-  184     .segment "idata"
     0000                           1-  185     _lockFlag:
     0000 0000                      1-  186     	dw	0x00
                                    1-  190     .segment "idata"
     0000                           1-  191     _keyCount:
     0000 0000                      1-  192     	dw	0x00
                                    1-  196     .segment "idata"
     0000                           1-  197     _keyCount2:
     0000 0000                      1-  198     	dw	0x00
                                    1-  202     .segment "idata"
     0000                           1-  203     _keyCount3:
     0000 0000                      1-  204     	dw	0x00
                                    1-  208     .segment "idata"
     0000                           1-  209     _ledCount:
     0000 0000                      1-  210     	dw	0x00
                                    1-  214     .segment "idata"
     0000                           1-  215     _jinjiFlag:
     0000 0000                      1-  216     	dw	0x00
                                    1-  220     .segment "idata"
     0000                           1-  221     _onlyLedFlag:
     0000 0000                      1-  222     	dw	0x00
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ; overlayable items in internal ram 
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ;	udata_ovr
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ; reset vector 
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ORG	0x0000
     0000 3rrr                      1-  233     	LGOTO	__nyc_ny8_startup
                                    1-  234     ;--------------------------------------------------------
                                    1-  235     ; interrupt and initialization code
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ORG 0x0008
                                    1-  238     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  240     .segment "code"
     0000                           1-  241     __sdcc_interrupt:
                                    1-  242     ;***
                                    1-  243     ;  pBlock Stats: dbName = I
                                    1-  244     ;***
                                    1-  245     ;2 compiler assigned registers:
                                    1-  246     ;   STK00
                                    1-  247     ;   STK01
                                    1-  248     ;; Starting pCode block
     0000                           1-  249     _isr:
                                    1-  250     ; 0 exit points
                                    1-  251     	.line	42, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  252     	MOVAR	WSAVE
     0001 1503                      1-  253     	SWAPR	STATUS,W
     0002 0283                      1-  254     	CLRR	STATUS
     0003 00rr                      1-  255     	MOVAR	SSAVE
     0004 010A                      1-  256     	MOVR	PCHBUF,W
     0005 028A                      1-  257     	CLRR	PCHBUF
     0006 00rr                      1-  258     	MOVAR	PSAVE
     0007 0104                      1-  259     	MOVR	FSR,W
                                    1-  260     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  261     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  262     	MOVR	STK00,W
                                    1-  263     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  264     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  265     	MOVR	STK01,W
                                    1-  266     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  267     	MOVAR	___sdcc_saved_stk01
                                    1-  268     	.line	44, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  269     	BTRSS	_INTFbits,0
                                    1-  270     	MGOTO	_00108_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  271     	.line	46, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  272     	MOVIA	0x37
     0013 03rr                      1-  273     	ADDAR	_TMR0,F
                                    1-  274     	.line	48, "main.c"; 	if(++intCount >= 100)
                                    1-  275     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  276     	INCR	_intCount,F
                                    1-  277     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  278     	MOVIA	0x64
     0017 04rr                      1-  279     	SUBAR	_intCount,W
     0018 0803                      1-  280     	BTRSS	STATUS,0
                                    1-  281     	MGOTO	_00108_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  282     	.line	50, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  283     	MOVIA	0x01
                                    1-  284     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  285     	MOVAR	_IntFlag
                                    1-  286     	.line	51, "main.c"; 	intCount = 0;
                                    1-  287     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  288     	CLRR	_intCount
     001F                           1-  289     _00108_DS_:
                                    1-  290     	.line	58, "main.c"; 	if(INTFbits.PABIF)
     001F 08rr                      1-  291     	BTRSS	_INTFbits,1
                                    1-  292     	MGOTO	_00110_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  293     	.line	60, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0021 21FD                      1-  294     	MOVIA	0xfd
     0022 00rr                      1-  295     	MOVAR	_INTF
     0023                           1-  296     _00110_DS_:
                                    1-  297     	.line	63, "main.c"; 	INTF = 0;
     0023 02rr                      1-  298     	CLRR	_INTF
                                    1-  299     	.line	65, "main.c"; 	}
                                    1-  300     	BANKSEL	___sdcc_saved_stk01
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  301     	MOVR	___sdcc_saved_stk01,W
     0026 00rr                      1-  302     	MOVAR	STK01
                                    1-  303     	BANKSEL	___sdcc_saved_stk00
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1-  304     	MOVR	___sdcc_saved_stk00,W
     0029 00rr                      1-  305     	MOVAR	STK00
                                    1-  306     	BANKSEL	___sdcc_saved_fsr
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1-  307     	MOVR	___sdcc_saved_fsr,W
     002C 0084                      1-  308     	MOVAR	FSR
     002D 01rr                      1-  309     	MOVR	PSAVE,W
     002E 008A                      1-  310     	MOVAR	PCHBUF
     002F 0283                      1-  311     	CLRR	STATUS
     0030 15rr                      1-  312     	SWAPR	SSAVE,W
     0031 0083                      1-  313     	MOVAR	STATUS
     0032 15rr                      1-  314     	SWAPR	WSAVE,F
     0033 15rr                      1-  315     	SWAPR	WSAVE,W
     0034                           1-  316     END_OF_INTERRUPT:
     0034 0011                      1-  317     	RETIE	
                                    1-  319     ;--------------------------------------------------------
                                    1-  320     ; code
                                    1-  321     ;--------------------------------------------------------
                                    1-  322     ;***
                                    1-  323     ;  pBlock Stats: dbName = M
                                    1-  324     ;***
                                    1-  325     ;has an exit
                                    1-  326     ;functions called:
                                    1-  327     ;   _pwmCtr
                                    1-  328     ;   _keyCtr
                                    1-  329     ;   _pwmCtr
                                    1-  330     ;   _keyCtr
                                    1-  331     ;; Starting pCode block
                                    1-  332     .segment "code"; module=main, function=_main
     0000                           1-  334     _main:
                                    1-  335     ; 2 exit points
                                    1-  336     	.line	69, "main.c"; 	IOSTA = 0x0C;
     0000 210C                      1-  337     	MOVIA	0x0c
     0001 000r                      1-  338     	IOST	_IOSTA
                                    1-  339     	.line	70, "main.c"; 	IOSTB = 0x05;
     0002 2105                      1-  340     	MOVIA	0x05
     0003 000r                      1-  341     	IOST	_IOSTB
                                    1-  342     	.line	71, "main.c"; 	PORTA = 0x10;
     0004 2110                      1-  343     	MOVIA	0x10
     0005 00rr                      1-  344     	MOVAR	_PORTA
                                    1-  345     	.line	72, "main.c"; 	PORTB = 0x00;
     0006 02rr                      1-  346     	CLRR	_PORTB
                                    1-  347     	.line	73, "main.c"; 	APHCON = 0xFF;
     0007 21FF                      1-  348     	MOVIA	0xff
     0008 000r                      1-  349     	IOST	_APHCON
                                    1-  350     	.line	74, "main.c"; 	BPHCON = 0xFF;
     0009 00rr                      1-  351     	MOVAR	_BPHCON
                                    1-  352     	.line	75, "main.c"; 	ABPLCON = 0xFB;
     000A 21FB                      1-  353     	MOVIA	0xfb
     000B 00rr                      1-  354     	MOVAR	_ABPLCON
                                    1-  355     	.line	76, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1-  356     	MOVIA	0x01
     000D 00rr                      1-  357     	MOVAR	_INTE
                                    1-  358     	.line	78, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1-  359     	CLRA	
     000F 000r                      1-  360     	IOST	_PCON1
                                    1-  361     	.line	80, "main.c"; 	TMR0 = 55;
     0010 2137                      1-  362     	MOVIA	0x37
     0011 00rr                      1-  363     	MOVAR	_TMR0
                                    1-  364     	.line	81, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1-  365     	CLRA	
     0013 0003                      1-  366     	T0MD	
                                    1-  367     	.line	83, "main.c"; 	PCON1 = C_TMR0_En;
     0014 2101                      1-  368     	MOVIA	0x01
     0015 000r                      1-  369     	IOST	_PCON1
                                    1-  370     	.line	86, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0016 2198                      1-  371     	MOVIA	0x98
     0017 00rr                      1-  372     	MOVAR	_PCON
                                    1-  373     	.line	89, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1-  374     	MOVIA	0x01
     0019 000r                      1-  375     	IOST	_PCON1
                                    1-  376     	.line	90, "main.c"; 	ENI();
     001A 0004                      1-  377     	ENI
     001B                           1-  378     _00134_DS_:
                                    1-  379     	.line	94, "main.c"; 	CLRWDT();
     001B 0002                      1-  380     	clrwdt
                                    1-  381     	.line	95, "main.c"; 	if((PORTA & 0x04) == 0)
     001C 0Drr                      1-  382     	BTRSC	_PORTA,2
                                    1-  383     	MGOTO	_00116_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  384     	.line	96, "main.c"; 	pwmCtr();
                                    1-  385     	MCALL	_pwmCtr
     001E 2rrr                      3-   66 m1      LCALL rom_address
     001F                           1-  386     _00116_DS_:
                                    1-  387     	.line	97, "main.c"; 	if(!IntFlag)
                                    1-  388     	BANKSEL	_IntFlag
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  389     	MOVR	_IntFlag,W
     0021 0D03                      1-  390     	BTRSC	STATUS,2
                                    1-  391     	MGOTO	_00134_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  392     	.line	99, "main.c"; 	IntFlag = 0;
     0023 02rr                      1-  393     	CLRR	_IntFlag
                                    1-  394     	.line	100, "main.c"; 	if(unlockTime > 0)
                                    1-  395     	BANKSEL	_unlockTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  396     	MOVR	_unlockTime,W
     0026 11rr                      1-  397     	IORAR	(_unlockTime + 1),W
     0027 0D03                      1-  398     	BTRSC	STATUS,2
                                    1-  399     	MGOTO	_00126_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  400     	.line	102, "main.c"; 	unlockTime--;
     0029 21FF                      1-  401     	MOVIA	0xff
     002A 03rr                      1-  402     	ADDAR	_unlockTime,F
     002B 0803                      1-  403     	BTRSS	STATUS,0
     002C 06rr                      1-  404     	DECR	(_unlockTime + 1),F
                                    1-  405     	.line	105, "main.c"; 	PORTA &= 0xED;
     002D 21ED                      1-  406     	MOVIA	0xed
     002E 10rr                      1-  407     	ANDAR	_PORTA,F
                                    1-  408     	.line	106, "main.c"; 	if(onlyLedFlag == 0)
                                    1-  409     	BANKSEL	_onlyLedFlag
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1-  410     	MOVR	_onlyLedFlag,W
     0031 0903                      1-  411     	BTRSS	STATUS,2
                                    1-  412     	MGOTO	_00127_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  413     	.line	107, "main.c"; 	PORTA |= 0x01;			//开锁
     0033 18rr                      1-  414     	BSR	_PORTA,0
                                    1-  415     	MGOTO	_00127_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1-  416     _00126_DS_:
                                    1-  417     	.line	113, "main.c"; 	onlyLedFlag = 0;
                                    1-  418     	BANKSEL	_onlyLedFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1-  419     	CLRR	_onlyLedFlag
                                    1-  420     	.line	114, "main.c"; 	PORTA &= 0xFE;			//关锁
     0037 1Crr                      1-  421     	BCR	_PORTA,0
                                    1-  422     	.line	115, "main.c"; 	if(lockFlag == 0 || jinjiFlag)
                                    1-  423     	BANKSEL	_lockFlag
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1-  424     	MOVR	_lockFlag,W
     003A 0D03                      1-  425     	BTRSC	STATUS,2
                                    1-  426     	MGOTO	_00121_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  427     	BANKSEL	_jinjiFlag
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  428     	MOVR	_jinjiFlag,W
     003E 0D03                      1-  429     	BTRSC	STATUS,2
                                    1-  430     	MGOTO	_00122_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1-  431     _00121_DS_:
                                    1-  432     	.line	117, "main.c"; 	PORTA |= 0x10;		//解锁灯亮起
     0040 1Arr                      1-  433     	BSR	_PORTA,4
                                    1-  434     	.line	118, "main.c"; 	PORTA &= 0xFD;		//锁定灯灭掉
     0041 1Crr                      1-  435     	BCR	_PORTA,1
                                    1-  436     	MGOTO	_00127_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1-  437     _00122_DS_:
                                    1-  438     	.line	123, "main.c"; 	PORTA |= 0x02;
     0043 18rr                      1-  439     	BSR	_PORTA,1
                                    1-  440     	.line	125, "main.c"; 	PORTA &= 0xEF;
     0044 1Err                      1-  441     	BCR	_PORTA,4
     0045                           1-  442     _00127_DS_:
                                    1-  443     	.line	129, "main.c"; 	if(PORTA & 0x04)
     0045 09rr                      1-  444     	BTRSS	_PORTA,2
                                    1-  445     	MGOTO	_00131_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  446     	.line	132, "main.c"; 	PORTB &= 0xFD;			//关闭蜂鸣器
     0047 1Crr                      1-  447     	BCR	_PORTB,1
                                    1-  448     	.line	133, "main.c"; 	if(jinjiFlag)
                                    1-  449     	BANKSEL	_jinjiFlag
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  450     	MOVR	_jinjiFlag,W
     004A 0D03                      1-  451     	BTRSC	STATUS,2
                                    1-  452     	MGOTO	_00132_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  453     	.line	135, "main.c"; 	unlockTime = 300;
     004C 212C                      1-  454     	MOVIA	0x2c
                                    1-  455     	BANKSEL	_unlockTime
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1-  456     	MOVAR	_unlockTime
     004F 2101                      1-  457     	MOVIA	0x01
     0050 00rr                      1-  458     	MOVAR	(_unlockTime + 1)
                                    1-  459     	.line	136, "main.c"; 	lockFlag = 0;
                                    1-  460     	BANKSEL	_lockFlag
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1-  461     	CLRR	_lockFlag
                                    1-  462     	.line	137, "main.c"; 	jinjiFlag = 0;
                                    1-  463     	BANKSEL	_jinjiFlag
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  464     	CLRR	_jinjiFlag
                                    1-  465     	.line	138, "main.c"; 	onlyLedFlag = 1;
     0055 2101                      1-  466     	MOVIA	0x01
                                    1-  467     	BANKSEL	_onlyLedFlag
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1-  468     	MOVAR	_onlyLedFlag
                                    1-  469     	MGOTO	_00132_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1-  470     _00131_DS_:
                                    1-  471     	.line	143, "main.c"; 	jinjiFlag = 1;
     0059 2101                      1-  472     	MOVIA	0x01
                                    1-  473     	BANKSEL	_jinjiFlag
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1-  474     	MOVAR	_jinjiFlag
     005C                           1-  475     _00132_DS_:
                                    1-  476     	.line	147, "main.c"; 	keyCtr();
                                    1-  477     	MCALL	_keyCtr
     005C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  478     	MGOTO	_00134_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  479     	.line	149, "main.c"; 	}
                                    1-  480     	RETURN	
     005E 0010                      3-   40 m1      ret
                                    1-  481     ; exit point of _main
                                    1-  483     ;***
                                    1-  484     ;  pBlock Stats: dbName = C
                                    1-  485     ;***
                                    1-  486     ;; Starting pCode block
                                    1-  487     .segment "code"; module=main, function=_pwmCtr
     0000                           1-  489     _pwmCtr:
                                    1-  490     ; 0 exit points
                                    1-  491     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1-  492     	.line	283, "main.c"; 	if(11 > ledCount)
     0000 210B                      1-  493     	MOVIA	0x0b
                                    1-  494     	BANKSEL	_ledCount
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1-  495     	SUBAR	_ledCount,W
     0003 0C03                      1-  496     	BTRSC	STATUS,0
                                    1-  497     	MGOTO	_00199_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  498     	.line	285, "main.c"; 	PORTB |= 0x02;
     0005 18rr                      1-  499     	BSR	_PORTB,1
                                    1-  500     	MGOTO	_00200_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
     0007                           1-  501     _00199_DS_:
                                    1-  502     	.line	289, "main.c"; 	PORTB &= 0xFD;
     0007 1Crr                      1-  503     	BCR	_PORTB,1
     0008                           1-  504     _00200_DS_:
                                    1-  505     	.line	291, "main.c"; 	if(++ledCount > 22)
                                    1-  506     	BANKSEL	_ledCount
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 05rr                      1-  507     	INCR	_ledCount,F
                                    1-  508     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  509     ;;unsigned compare: left >= lit (0x17=23), size=1
     000A 2117                      1-  510     	MOVIA	0x17
     000B 04rr                      1-  511     	SUBAR	_ledCount,W
     000C 0C03                      1-  512     	BTRSC	STATUS,0
                                    1-  513     	.line	292, "main.c"; 	ledCount = 0;
     000D 02rr                      1-  514     	CLRR	_ledCount
                                    1-  515     	.line	293, "main.c"; 	}
                                    1-  516     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1-  518     ;***
                                    1-  519     ;  pBlock Stats: dbName = C
                                    1-  520     ;***
                                    1-  521     ;has an exit
                                    1-  522     ;1 compiler assigned register :
                                    1-  523     ;   r0x100E
                                    1-  524     ;; Starting pCode block
                                    1-  525     .segment "code"; module=main, function=_keyRead3
                                    1-  527     ;local variable name mapping:
     0000                           1-  529     _keyRead3:
                                    1-  530     ; 2 exit points
                                    1-  531     	.line	259, "main.c"; 	char keyRead3(char keyStatus)	
                                    1-  532     	BANKSEL	r0x100E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  533     	MOVAR	r0x100E
                                    1-  534     	.line	261, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  535     	MOVR	r0x100E,W
     0003 0D03                      1-  536     	BTRSC	STATUS,2
                                    1-  537     	MGOTO	_00191_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  538     	.line	263, "main.c"; 	keyCount3++;
                                    1-  539     	BANKSEL	_keyCount3
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  540     	INCR	_keyCount3,F
                                    1-  541     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1-  542     	.line	264, "main.c"; 	if(keyCount3 >= 100)
     0007 2164                      1-  543     	MOVIA	0x64
     0008 04rr                      1-  544     	SUBAR	_keyCount3,W
     0009 0803                      1-  545     	BTRSS	STATUS,0
                                    1-  546     	MGOTO	_00192_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  547     	.line	266, "main.c"; 	keyCount3 = 100;
     000B 2164                      1-  548     	MOVIA	0x64
     000C 00rr                      1-  549     	MOVAR	_keyCount3
                                    1-  550     	MGOTO	_00192_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  551     ;;unsigned compare: left < lit (0x4=4), size=1
     000E                           1-  552     _00191_DS_:
                                    1-  553     	.line	271, "main.c"; 	if(keyCount3 >= 4)
     000E 2104                      1-  554     	MOVIA	0x04
                                    1-  555     	BANKSEL	_keyCount3
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1-  556     	SUBAR	_keyCount3,W
     0011 0803                      1-  557     	BTRSS	STATUS,0
                                    1-  558     	MGOTO	_00189_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  559     	.line	273, "main.c"; 	keyCount3 = 0;
     0013 02rr                      1-  560     	CLRR	_keyCount3
                                    1-  561     	.line	274, "main.c"; 	return	1;
     0014 2101                      1-  562     	MOVIA	0x01
                                    1-  563     	MGOTO	_00193_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1-  564     _00189_DS_:
                                    1-  565     	.line	276, "main.c"; 	keyCount3 = 0;
                                    1-  566     	BANKSEL	_keyCount3
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1-  567     	CLRR	_keyCount3
     0018                           1-  568     _00192_DS_:
                                    1-  569     	.line	278, "main.c"; 	return 0;
     0018 2100                      1-  570     	MOVIA	0x00
     0019                           1-  571     _00193_DS_:
                                    1-  572     	.line	279, "main.c"; 	}
                                    1-  573     	RETURN	
     0019 0010                      3-   40 m1      ret
                                    1-  574     ; exit point of _keyRead3
                                    1-  576     ;***
                                    1-  577     ;  pBlock Stats: dbName = C
                                    1-  578     ;***
                                    1-  579     ;has an exit
                                    1-  580     ;1 compiler assigned register :
                                    1-  581     ;   r0x100F
                                    1-  582     ;; Starting pCode block
                                    1-  583     .segment "code"; module=main, function=_keyRead2
                                    1-  585     ;local variable name mapping:
     0000                           1-  587     _keyRead2:
                                    1-  588     ; 2 exit points
                                    1-  589     	.line	237, "main.c"; 	char keyRead2(char keyStatus)	
                                    1-  590     	BANKSEL	r0x100F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  591     	MOVAR	r0x100F
                                    1-  592     	.line	239, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  593     	MOVR	r0x100F,W
     0003 0D03                      1-  594     	BTRSC	STATUS,2
                                    1-  595     	MGOTO	_00179_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  596     	.line	241, "main.c"; 	keyCount2++;
                                    1-  597     	BANKSEL	_keyCount2
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  598     	INCR	_keyCount2,F
                                    1-  599     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1-  600     	.line	242, "main.c"; 	if(keyCount2 >= 100)
     0007 2164                      1-  601     	MOVIA	0x64
     0008 04rr                      1-  602     	SUBAR	_keyCount2,W
     0009 0803                      1-  603     	BTRSS	STATUS,0
                                    1-  604     	MGOTO	_00180_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  605     	.line	244, "main.c"; 	keyCount2 = 100;
     000B 2164                      1-  606     	MOVIA	0x64
     000C 00rr                      1-  607     	MOVAR	_keyCount2
                                    1-  608     	MGOTO	_00180_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  609     ;;unsigned compare: left < lit (0x4=4), size=1
     000E                           1-  610     _00179_DS_:
                                    1-  611     	.line	249, "main.c"; 	if(keyCount2 >= 4)
     000E 2104                      1-  612     	MOVIA	0x04
                                    1-  613     	BANKSEL	_keyCount2
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1-  614     	SUBAR	_keyCount2,W
     0011 0803                      1-  615     	BTRSS	STATUS,0
                                    1-  616     	MGOTO	_00177_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  617     	.line	251, "main.c"; 	keyCount2 = 0;
     0013 02rr                      1-  618     	CLRR	_keyCount2
                                    1-  619     	.line	252, "main.c"; 	return	1;
     0014 2101                      1-  620     	MOVIA	0x01
                                    1-  621     	MGOTO	_00181_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1-  622     _00177_DS_:
                                    1-  623     	.line	254, "main.c"; 	keyCount2 = 0;
                                    1-  624     	BANKSEL	_keyCount2
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1-  625     	CLRR	_keyCount2
     0018                           1-  626     _00180_DS_:
                                    1-  627     	.line	256, "main.c"; 	return 0;
     0018 2100                      1-  628     	MOVIA	0x00
     0019                           1-  629     _00181_DS_:
                                    1-  630     	.line	257, "main.c"; 	}
                                    1-  631     	RETURN	
     0019 0010                      3-   40 m1      ret
                                    1-  632     ; exit point of _keyRead2
                                    1-  634     ;***
                                    1-  635     ;  pBlock Stats: dbName = C
                                    1-  636     ;***
                                    1-  637     ;has an exit
                                    1-  638     ;1 compiler assigned register :
                                    1-  639     ;   r0x1010
                                    1-  640     ;; Starting pCode block
                                    1-  641     .segment "code"; module=main, function=_keyRead
                                    1-  643     ;local variable name mapping:
     0000                           1-  645     _keyRead:
                                    1-  646     ; 2 exit points
                                    1-  647     	.line	215, "main.c"; 	char keyRead(char keyStatus)	
                                    1-  648     	BANKSEL	r0x1010
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  649     	MOVAR	r0x1010
                                    1-  650     	.line	217, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  651     	MOVR	r0x1010,W
     0003 0D03                      1-  652     	BTRSC	STATUS,2
                                    1-  653     	MGOTO	_00167_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  654     	.line	219, "main.c"; 	keyCount++;
                                    1-  655     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  656     	INCR	_keyCount,F
                                    1-  657     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1-  658     	.line	220, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1-  659     	MOVIA	0x64
     0008 04rr                      1-  660     	SUBAR	_keyCount,W
     0009 0803                      1-  661     	BTRSS	STATUS,0
                                    1-  662     	MGOTO	_00168_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  663     	.line	222, "main.c"; 	keyCount = 100;
     000B 2164                      1-  664     	MOVIA	0x64
     000C 00rr                      1-  665     	MOVAR	_keyCount
                                    1-  666     	MGOTO	_00168_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  667     ;;unsigned compare: left < lit (0x4=4), size=1
     000E                           1-  668     _00167_DS_:
                                    1-  669     	.line	227, "main.c"; 	if(keyCount >= 4)
     000E 2104                      1-  670     	MOVIA	0x04
                                    1-  671     	BANKSEL	_keyCount
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1-  672     	SUBAR	_keyCount,W
     0011 0803                      1-  673     	BTRSS	STATUS,0
                                    1-  674     	MGOTO	_00165_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  675     	.line	229, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  676     	CLRR	_keyCount
                                    1-  677     	.line	230, "main.c"; 	return	1;
     0014 2101                      1-  678     	MOVIA	0x01
                                    1-  679     	MGOTO	_00169_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1-  680     _00165_DS_:
                                    1-  681     	.line	232, "main.c"; 	keyCount = 0;
                                    1-  682     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1-  683     	CLRR	_keyCount
     0018                           1-  684     _00168_DS_:
                                    1-  685     	.line	234, "main.c"; 	return 0;
     0018 2100                      1-  686     	MOVIA	0x00
     0019                           1-  687     _00169_DS_:
                                    1-  688     	.line	235, "main.c"; 	}
                                    1-  689     	RETURN	
     0019 0010                      3-   40 m1      ret
                                    1-  690     ; exit point of _keyRead
                                    1-  692     ;***
                                    1-  693     ;  pBlock Stats: dbName = C
                                    1-  694     ;***
                                    1-  695     ;has an exit
                                    1-  696     ;functions called:
                                    1-  697     ;   _keyRead
                                    1-  698     ;   _keyRead2
                                    1-  699     ;   _keyRead3
                                    1-  700     ;   _keyRead
                                    1-  701     ;   _keyRead2
                                    1-  702     ;   _keyRead3
                                    1-  703     ;2 compiler assigned registers:
                                    1-  704     ;   r0x1011
                                    1-  705     ;   r0x1012
                                    1-  706     ;; Starting pCode block
                                    1-  707     .segment "code"; module=main, function=_keyCtr
                                    1-  709     ;local variable name mapping:
     0000                           1-  711     _keyCtr:
                                    1-  712     ; 2 exit points
                                    1-  713     	.line	155, "main.c"; 	kclick = keyRead(PORTB&0x01);
     0000 2101                      1-  714     	MOVIA	0x01
     0001 10rr                      1-  715     	ANDAR	_PORTB,W
                                    1-  716     	BANKSEL	r0x1011
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1-  717     	MOVAR	r0x1011
                                    1-  718     	MCALL	_keyRead
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  719     	BANKSEL	r0x1011
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1-  720     	MOVAR	r0x1011
                                    1-  721     	.line	157, "main.c"; 	if(kclick)
     0007 01rr                      1-  722     	MOVR	r0x1011,W
     0008 0D03                      1-  723     	BTRSC	STATUS,2
                                    1-  724     	MGOTO	_00145_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  725     	.line	160, "main.c"; 	unlockTime = 0;
                                    1-  726     	BANKSEL	_unlockTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1-  727     	CLRR	_unlockTime
     000C 02rr                      1-  728     	CLRR	(_unlockTime + 1)
                                    1-  729     	.line	162, "main.c"; 	PORTA |= 0x02;
     000D 18rr                      1-  730     	BSR	_PORTA,1
                                    1-  731     	.line	164, "main.c"; 	PORTA &= 0xEF;
     000E 1Err                      1-  732     	BCR	_PORTA,4
                                    1-  733     	.line	165, "main.c"; 	if(lockFlag == 0)
                                    1-  734     	BANKSEL	_lockFlag
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  735     	MOVR	_lockFlag,W
     0011 0903                      1-  736     	BTRSS	STATUS,2
                                    1-  737     	MGOTO	_00142_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  738     	.line	167, "main.c"; 	lockFlag = 1;
     0013 2101                      1-  739     	MOVIA	0x01
     0014 00rr                      1-  740     	MOVAR	_lockFlag
                                    1-  741     	MGOTO	_00145_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1-  742     _00142_DS_:
                                    1-  743     	.line	169, "main.c"; 	else if((PORTA & 0x04) == 0)
     0016 0Drr                      1-  744     	BTRSC	_PORTA,2
                                    1-  745     	MGOTO	_00145_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  746     	.line	171, "main.c"; 	lockFlag = 2;		//紧急情况下
     0018 2102                      1-  747     	MOVIA	0x02
                                    1-  748     	BANKSEL	_lockFlag
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1-  749     	MOVAR	_lockFlag
     001B                           1-  750     _00145_DS_:
                                    1-  751     	.line	175, "main.c"; 	kclick = keyRead2(PORTB&0x04);
     001B 2104                      1-  752     	MOVIA	0x04
     001C 10rr                      1-  753     	ANDAR	_PORTB,W
                                    1-  754     ;;100	MOVAR	r0x1012
                                    1-  755     	MCALL	_keyRead2
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  756     	BANKSEL	r0x1011
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  757     	MOVAR	r0x1011
                                    1-  758     	.line	177, "main.c"; 	if(kclick)
     0020 01rr                      1-  759     	MOVR	r0x1011,W
     0021 0D03                      1-  760     	BTRSC	STATUS,2
                                    1-  761     	MGOTO	_00154_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  762     	.line	180, "main.c"; 	if(PORTA & 0x04)
     0023 09rr                      1-  763     	BTRSS	_PORTA,2
                                    1-  764     	MGOTO	_00151_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  765     	.line	183, "main.c"; 	if(lockFlag == 0)
                                    1-  766     	BANKSEL	_lockFlag
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  767     	MOVR	_lockFlag,W
     0027 0903                      1-  768     	BTRSS	STATUS,2
                                    1-  769     	MGOTO	_00154_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  770     	.line	185, "main.c"; 	unlockTime = 300;
     0029 212C                      1-  771     	MOVIA	0x2c
                                    1-  772     	BANKSEL	_unlockTime
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  773     	MOVAR	_unlockTime
     002C 2101                      1-  774     	MOVIA	0x01
     002D 00rr                      1-  775     	MOVAR	(_unlockTime + 1)
                                    1-  776     	.line	186, "main.c"; 	onlyLedFlag = 0;
                                    1-  777     	BANKSEL	_onlyLedFlag
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  778     	CLRR	_onlyLedFlag
                                    1-  779     	MGOTO	_00154_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  780     ;;unsigned compare: left < lit (0x2=2), size=1
     0031                           1-  781     _00151_DS_:
                                    1-  782     	.line	192, "main.c"; 	if(lockFlag < 2)
     0031 2102                      1-  783     	MOVIA	0x02
                                    1-  784     	BANKSEL	_lockFlag
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 04rr                      1-  785     	SUBAR	_lockFlag,W
     0034 0C03                      1-  786     	BTRSC	STATUS,0
                                    1-  787     	MGOTO	_00154_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  788     	.line	194, "main.c"; 	unlockTime = 300;
     0036 212C                      1-  789     	MOVIA	0x2c
                                    1-  790     	BANKSEL	_unlockTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1-  791     	MOVAR	_unlockTime
     0039 2101                      1-  792     	MOVIA	0x01
     003A 00rr                      1-  793     	MOVAR	(_unlockTime + 1)
                                    1-  794     	.line	195, "main.c"; 	lockFlag = 0;
                                    1-  795     	BANKSEL	_lockFlag
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  796     	CLRR	_lockFlag
                                    1-  797     	.line	196, "main.c"; 	onlyLedFlag = 0;
                                    1-  798     	BANKSEL	_onlyLedFlag
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1-  799     	CLRR	_onlyLedFlag
     003F                           1-  800     _00154_DS_:
                                    1-  801     	.line	202, "main.c"; 	kclick = keyRead3(PORTA&0x08);
     003F 2108                      1-  802     	MOVIA	0x08
     0040 10rr                      1-  803     	ANDAR	_PORTA,W
                                    1-  804     ;;99	MOVAR	r0x1012
                                    1-  805     	MCALL	_keyRead3
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  806     	BANKSEL	r0x1011
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1-  807     	MOVAR	r0x1011
                                    1-  808     	.line	203, "main.c"; 	if(kclick)
     0044 01rr                      1-  809     	MOVR	r0x1011,W
     0045 0D03                      1-  810     	BTRSC	STATUS,2
                                    1-  811     	MGOTO	_00157_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  812     	.line	206, "main.c"; 	unlockTime = 100;
     0047 2164                      1-  813     	MOVIA	0x64
                                    1-  814     	BANKSEL	_unlockTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1-  815     	MOVAR	_unlockTime
     004A 02rr                      1-  816     	CLRR	(_unlockTime + 1)
                                    1-  817     	.line	208, "main.c"; 	PORTA |= 0x10;
     004B 1Arr                      1-  818     	BSR	_PORTA,4
                                    1-  819     	.line	209, "main.c"; 	PORTA &= 0xFD;
     004C 1Crr                      1-  820     	BCR	_PORTA,1
                                    1-  821     	.line	210, "main.c"; 	lockFlag = 0;
                                    1-  822     	BANKSEL	_lockFlag
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1-  823     	CLRR	_lockFlag
                                    1-  824     	.line	211, "main.c"; 	onlyLedFlag = 0;
                                    1-  825     	BANKSEL	_onlyLedFlag
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1-  826     	CLRR	_onlyLedFlag
     0051                           1-  827     _00157_DS_:
                                    1-  828     	.line	213, "main.c"; 	}
                                    1-  829     	RETURN	
     0051 0010                      3-   40 m1      ret
                                    1-  830     ; exit point of _keyCtr
                                    1-  833     ;	code size estimation:
                                    1-  834     ;	  269+   52 =   321 instructions (  746 byte)
                                    1-  836     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
