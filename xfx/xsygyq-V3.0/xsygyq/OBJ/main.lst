
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_Quarter_VDD_Convert
                                    1-  136     	extern	_checkBat
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyCtr
                                    1-  139     	extern	_pwmStop
                                    1-  140     	extern	_pwmInit
                                    1-  141     	extern	_gotoSleep
                                    1-  142     	extern	_initSys
                                    1-  143     	extern	_refreshNub
                                    1-  144     	extern	_checkIRKey
                                    1-  145     	extern	_chrgCtr
                                    1-  146     	extern	_isr
                                    1-  147     	extern	_main
                                    1-  148     	extern	_keyRead
                                    1-  149     	extern	_R_Quarter_VDD_DATA
                                    1-  150     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  151     	extern	_intCount
                                    1-  152     	extern	_IntFlag
                                    1-  153     	extern	_baiweiNum
                                    1-  154     	extern	_shiweiNum
                                    1-  155     	extern	_geweiNum
                                    1-  156     	extern	_showFlag
                                    1-  157     	extern	_irStep
                                    1-  158     	extern	_revCount
                                    1-  159     	extern	_checkCount
                                    1-  160     	extern	_pwmTime
                                    1-  161     	extern	_sendFlag
                                    1-  162     	extern	_workTime
                                    1-  163     	extern	_workStep
                                    1-  164     	extern	_pwFlag
                                    1-  165     	extern	_pwShowTime
                                    1-  166     	extern	_stepShowTime
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_keyCount
                                    1-  169     	extern	_longPressFlag
                                    1-  170     	extern	_sleepTime
                                    1-  171     	extern	_fullFlag
                                    1-  172     	extern	_shanTime
                                    1-  173     	extern	_count1s
                                    1-  174     	extern	_waitTime
                                    1-  175     	extern	_offShowTime
                                    1-  176     	extern	_notRecv
                                    1-  177     	extern	_zhedangFlag
                                    1-  178     	extern	_zhedangTime
                                    1-  179     	extern	_sleepFlag
                                    1-  180     	extern	_powerShi
                                    1-  181     	extern	_powerGe
                                    1-  182     	extern	_count5s
                                    1-  183     	extern	_count250ms
                                    1-  184     	extern	_checkBatTime
                                    1-  185     	extern	_fullTime
                                    1-  187     	extern PSAVE
                                    1-  188     	extern SSAVE
                                    1-  189     	extern WSAVE
                                    1-  190     	extern STK04
                                    1-  191     	extern STK03
                                    1-  192     	extern STK02
                                    1-  193     	extern STK01
                                    1-  194     	extern STK00
                                    1-  196     .segment "uninit", 0x20000040
 20000040                           1-  197     PSAVE:
                                    1-  198     	.res 1
 20000041                           1-  199     SSAVE:
                                    1-  200     	.res 1
 20000042                           1-  201     WSAVE:
                                    1-  202     	.res 1
 20000043                           1-  203     STK04:
                                    1-  204     	.res 1
 20000044                           1-  205     STK03:
                                    1-  206     	.res 1
 20000045                           1-  207     STK02:
                                    1-  208     	.res 1
 20000046                           1-  209     STK01:
                                    1-  210     	.res 1
 20000047                           1-  211     STK00:
                                    1-  212     	.res 1
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ; global definitions
                                    1-  216     ;--------------------------------------------------------
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_Quarter_VDD_DATA:
                                    1-  219     	.res	2
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_Quarter_VDD_DATA_LB:
                                    1-  224     	.res	1
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ; absolute symbol definitions
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ; compiler-defined variables
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x104A:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x104B:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1048:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1049:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1045:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1046:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1044:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1042:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1043:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x103C:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x103D:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x103E:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x103F:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1041:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1040:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1036:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1037:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1038:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x103B:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1034:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1035:
                                    1-  295     	.res	1
                                    1-  296     ;--------------------------------------------------------
                                    1-  297     ; initialized data
                                    1-  298     ;--------------------------------------------------------
                                    1-  300     .segment "idata"
     0000                           1-  301     _intCount:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _IntFlag:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _baiweiNum:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _shiweiNum:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _geweiNum:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _showFlag:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _irStep:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _revCount:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _checkCount:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _pwmTime:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _sendFlag:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _workTime:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _workStep:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _pwFlag:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _pwShowTime:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _stepShowTime:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _pwStep:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _keyCount:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _longPressFlag:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _sleepTime:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _fullFlag:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _shanTime:
     0000 0000 0000                 1-  428     	dw	0x00, 0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _count1s:
     0000 0000                      1-  434     	dw	0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _waitTime:
     0000 0000 0000                 1-  440     	dw	0x00, 0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _offShowTime:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _notRecv:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _zhedangFlag:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _zhedangTime:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _sleepFlag:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _powerShi:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _powerGe:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _count5s:
     0000 0000 0000                 1-  488     	dw	0x00, 0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _count250ms:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _checkBatTime:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _fullTime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _numArray:
     0000 003F                      1-  512     	dw	0x3f
     0001 0006                      1-  513     	dw	0x06
     0002 005B                      1-  514     	dw	0x5b
     0003 004F                      1-  515     	dw	0x4f
     0004 0066                      1-  516     	dw	0x66
     0005 006D                      1-  517     	dw	0x6d
     0006 007D                      1-  518     	dw	0x7d
     0007 0007                      1-  519     	dw	0x07
     0008 007F                      1-  520     	dw	0x7f
     0009 006F                      1-  521     	dw	0x6f
     000A 0071                      1-  522     	dw	0x71
     000B 0079                      1-  523     	dw	0x79
     000C 0050                      1-  524     	dw	0x50
                                    1-  527     ;--------------------------------------------------------
                                    1-  528     ; overlayable items in internal ram 
                                    1-  529     ;--------------------------------------------------------
                                    1-  530     ;	udata_ovr
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ; reset vector 
                                    1-  533     ;--------------------------------------------------------
                                    1-  534     ORG	0x0000
     0000 3rrr                      1-  535     	LGOTO	__nyc_ny8_startup
                                    1-  536     ;--------------------------------------------------------
                                    1-  537     ; interrupt and initialization code
                                    1-  538     ;--------------------------------------------------------
                                    1-  539     ORG 0x0008
                                    1-  540     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  542     .segment "code"
     0000                           1-  543     __sdcc_interrupt:
                                    1-  544     ;***
                                    1-  545     ;  pBlock Stats: dbName = I
                                    1-  546     ;***
                                    1-  547     ;2 compiler assigned registers:
                                    1-  548     ;   STK00
                                    1-  549     ;   STK01
                                    1-  550     ;; Starting pCode block
     0000                           1-  551     _isr:
                                    1-  552     ; 0 exit points
                                    1-  553     	.line	78, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  554     	MOVAR	WSAVE
     0001 1503                      1-  555     	SWAPR	STATUS,W
     0002 0283                      1-  556     	CLRR	STATUS
     0003 00rr                      1-  557     	MOVAR	SSAVE
     0004 010A                      1-  558     	MOVR	PCHBUF,W
     0005 028A                      1-  559     	CLRR	PCHBUF
     0006 00rr                      1-  560     	MOVAR	PSAVE
     0007 0104                      1-  561     	MOVR	FSR,W
                                    1-  562     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  563     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  564     	MOVR	STK00,W
                                    1-  565     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  566     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  567     	MOVR	STK01,W
                                    1-  568     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  569     	MOVAR	___sdcc_saved_stk01
                                    1-  570     	.line	80, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  571     	BTRSS	_INTFbits,0
                                    1-  572     	MGOTO	_00120_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  573     	.line	82, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  574     	MOVIA	0x37
     0013 03rr                      1-  575     	ADDAR	_TMR0,F
                                    1-  576     	.line	84, "main.c"; 	if(++intCount >= 100)
                                    1-  577     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  578     	INCR	_intCount,F
                                    1-  579     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  580     	MOVIA	0x64
     0017 04rr                      1-  581     	SUBAR	_intCount,W
     0018 0803                      1-  582     	BTRSS	STATUS,0
                                    1-  583     	MGOTO	_00120_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  584     	.line	86, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  585     	MOVIA	0x01
                                    1-  586     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  587     	MOVAR	_IntFlag
                                    1-  588     	.line	87, "main.c"; 	intCount = 0;	
                                    1-  589     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  590     	CLRR	_intCount
                                    1-  591     	.line	88, "main.c"; 	if(++count1s > 100)
                                    1-  592     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  593     	INCR	_count1s,F
                                    1-  594     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  595     ;;unsigned compare: left >= lit (0x65=101), size=1
     0021 2165                      1-  596     	MOVIA	0x65
     0022 04rr                      1-  597     	SUBAR	_count1s,W
     0023 0803                      1-  598     	BTRSS	STATUS,0
                                    1-  599     	MGOTO	_00120_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  600     	.line	90, "main.c"; 	count1s = 0;
     0025 02rr                      1-  601     	CLRR	_count1s
                                    1-  602     	.line	91, "main.c"; 	if(stepShowTime > 0)
                                    1-  603     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  604     	MOVR	_stepShowTime,W
     0028 0D03                      1-  605     	BTRSC	STATUS,2
                                    1-  606     	MGOTO	_00113_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  607     	.line	92, "main.c"; 	stepShowTime--;
     002A 06rr                      1-  608     	DECR	_stepShowTime,F
                                    1-  609     	MGOTO	_00120_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  610     _00113_DS_:
                                    1-  611     	.line	93, "main.c"; 	else if(pwShowTime > 0)
                                    1-  612     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  613     	MOVR	_pwShowTime,W
     002E 0D03                      1-  614     	BTRSC	STATUS,2
                                    1-  615     	MGOTO	_00110_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  616     	.line	95, "main.c"; 	pwShowTime--;
     0030 06rr                      1-  617     	DECR	_pwShowTime,F
                                    1-  618     	MGOTO	_00120_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  619     _00110_DS_:
                                    1-  620     	.line	97, "main.c"; 	else if(offShowTime > 0)
                                    1-  621     	BANKSEL	_offShowTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  622     	MOVR	_offShowTime,W
     0034 0D03                      1-  623     	BTRSC	STATUS,2
                                    1-  624     	MGOTO	_00120_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  625     	.line	99, "main.c"; 	--offShowTime;
     0036 17rr                      1-  626     	DECRSZ	_offShowTime,F
                                    1-  627     	.line	100, "main.c"; 	if(offShowTime == 0)
                                    1-  628     	MGOTO	_00120_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  629     	.line	101, "main.c"; 	sleepFlag = 1;
     0038 2101                      1-  630     	MOVIA	0x01
                                    1-  631     	BANKSEL	_sleepFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1-  632     	MOVAR	_sleepFlag
     003B                           1-  633     _00120_DS_:
                                    1-  634     	.line	118, "main.c"; 	if(INTFbits.PABIF)
     003B 08rr                      1-  635     	BTRSS	_INTFbits,1
                                    1-  636     	MGOTO	_00122_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  637     	.line	120, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003D 21FD                      1-  638     	MOVIA	0xfd
     003E 00rr                      1-  639     	MOVAR	_INTF
                                    1-  640     	.line	121, "main.c"; 	revCount++;
                                    1-  641     	BANKSEL	_revCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 05rr                      1-  642     	INCR	_revCount,F
     0041                           1-  643     _00122_DS_:
                                    1-  644     	.line	124, "main.c"; 	INTF = 0;
     0041 02rr                      1-  645     	CLRR	_INTF
                                    1-  646     	.line	126, "main.c"; 	}
                                    1-  647     	BANKSEL	___sdcc_saved_stk01
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  648     	MOVR	___sdcc_saved_stk01,W
     0044 00rr                      1-  649     	MOVAR	STK01
                                    1-  650     	BANKSEL	___sdcc_saved_stk00
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  651     	MOVR	___sdcc_saved_stk00,W
     0047 00rr                      1-  652     	MOVAR	STK00
                                    1-  653     	BANKSEL	___sdcc_saved_fsr
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  654     	MOVR	___sdcc_saved_fsr,W
     004A 0084                      1-  655     	MOVAR	FSR
     004B 01rr                      1-  656     	MOVR	PSAVE,W
     004C 008A                      1-  657     	MOVAR	PCHBUF
     004D 0283                      1-  658     	CLRR	STATUS
     004E 15rr                      1-  659     	SWAPR	SSAVE,W
     004F 0083                      1-  660     	MOVAR	STATUS
     0050 15rr                      1-  661     	SWAPR	WSAVE,F
     0051 15rr                      1-  662     	SWAPR	WSAVE,W
     0052                           1-  663     END_OF_INTERRUPT:
     0052 0011                      1-  664     	RETIE	
                                    1-  666     ;--------------------------------------------------------
                                    1-  667     ; code
                                    1-  668     ;--------------------------------------------------------
                                    1-  669     ;***
                                    1-  670     ;  pBlock Stats: dbName = M
                                    1-  671     ;***
                                    1-  672     ;has an exit
                                    1-  673     ;functions called:
                                    1-  674     ;   _initSys
                                    1-  675     ;   _initAD
                                    1-  676     ;   _gotoSleep
                                    1-  677     ;   _refreshNub
                                    1-  678     ;   _refreshNub
                                    1-  679     ;   _setInput
                                    1-  680     ;   __divuchar
                                    1-  681     ;   __moduchar
                                    1-  682     ;   _delay
                                    1-  683     ;   _checkIRKey
                                    1-  684     ;   _delay
                                    1-  685     ;   _delay
                                    1-  686     ;   _delay
                                    1-  687     ;   _checkIRKey
                                    1-  688     ;   _delay
                                    1-  689     ;   _delay
                                    1-  690     ;   _keyCtr
                                    1-  691     ;   _checkBat
                                    1-  692     ;   _chrgCtr
                                    1-  693     ;   _gotoSleep
                                    1-  694     ;   _gotoSleep
                                    1-  695     ;   _delay
                                    1-  696     ;   _initSys
                                    1-  697     ;   _initAD
                                    1-  698     ;   _gotoSleep
                                    1-  699     ;   _refreshNub
                                    1-  700     ;   _refreshNub
                                    1-  701     ;   _setInput
                                    1-  702     ;   __divuchar
                                    1-  703     ;   __moduchar
                                    1-  704     ;   _delay
                                    1-  705     ;   _checkIRKey
                                    1-  706     ;   _delay
                                    1-  707     ;   _delay
                                    1-  708     ;   _delay
                                    1-  709     ;   _checkIRKey
                                    1-  710     ;   _delay
                                    1-  711     ;   _delay
                                    1-  712     ;   _keyCtr
                                    1-  713     ;   _checkBat
                                    1-  714     ;   _chrgCtr
                                    1-  715     ;   _gotoSleep
                                    1-  716     ;   _gotoSleep
                                    1-  717     ;   _delay
                                    1-  718     ;3 compiler assigned registers:
                                    1-  719     ;   STK00
                                    1-  720     ;   r0x104A
                                    1-  721     ;   r0x104B
                                    1-  722     ;; Starting pCode block
                                    1-  723     .segment "code"; module=main, function=_main
                                    1-  725     ;local variable name mapping:
     0000                           1-  727     _main:
                                    1-  728     ; 2 exit points
                                    1-  729     	.line	130, "main.c"; 	initSys();
                                    1-  730     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  731     	.line	131, "main.c"; 	initAD();
                                    1-  732     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  733     	.line	132, "main.c"; 	gotoSleep();
                                    1-  734     	MCALL	_gotoSleep
     0002 2rrr                      3-   66 m1      LCALL rom_address
     0003                           1-  735     _00181_DS_:
                                    1-  736     	.line	135, "main.c"; 	CLRWDT();							// Clear WatchDog
     0003 0002                      1-  737     	clrwdt
                                    1-  738     	.line	136, "main.c"; 	if(showFlag)
                                    1-  739     	BANKSEL	_showFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  740     	MOVR	_showFlag,W
     0006 0D03                      1-  741     	BTRSC	STATUS,2
                                    1-  742     	MGOTO	_00135_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  743     	.line	137, "main.c"; 	refreshNub();
                                    1-  744     	MCALL	_refreshNub
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  745     	MGOTO	_00136_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1-  746     _00135_DS_:
                                    1-  747     	.line	140, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  748     	BANKSEL	_keyCount
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1-  749     	MOVR	_keyCount,W
     000C 0D03                      1-  750     	BTRSC	STATUS,2
                                    1-  751     	MGOTO	_00131_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  752     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  753     	MOVR	_pwFlag,W
     0010 2401                      1-  754     	XORIA	0x01
     0011 0903                      1-  755     	BTRSS	STATUS,2
                                    1-  756     	MGOTO	_00131_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  757     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  758     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  759     	.line	142, "main.c"; 	if(pwStep > 99)
     0013 2164                      1-  760     	MOVIA	0x64
                                    1-  761     	BANKSEL	_pwStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1-  762     	SUBAR	_pwStep,W
     0016 0803                      1-  763     	BTRSS	STATUS,0
                                    1-  764     	MGOTO	_00128_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  765     	.line	144, "main.c"; 	baiweiNum = 1;
     0018 2101                      1-  766     	MOVIA	0x01
                                    1-  767     	BANKSEL	_baiweiNum
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1-  768     	MOVAR	_baiweiNum
                                    1-  769     	.line	145, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  770     	BANKSEL	_geweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1-  771     	CLRR	_geweiNum
                                    1-  772     	BANKSEL	_shiweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  773     	CLRR	_shiweiNum
                                    1-  774     	MGOTO	_00129_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  775     _00128_DS_:
                                    1-  776     	.line	149, "main.c"; 	baiweiNum = 0;
                                    1-  777     	BANKSEL	_baiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1-  778     	CLRR	_baiweiNum
                                    1-  779     	.line	150, "main.c"; 	shiweiNum = powerShi;
                                    1-  780     	BANKSEL	_powerShi
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1-  781     	MOVR	_powerShi,W
                                    1-  782     	BANKSEL	_shiweiNum
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1-  783     	MOVAR	_shiweiNum
                                    1-  784     	.line	151, "main.c"; 	geweiNum = powerGe;
                                    1-  785     	BANKSEL	_powerGe
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  786     	MOVR	_powerGe,W
                                    1-  787     	BANKSEL	_geweiNum
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1-  788     	MOVAR	_geweiNum
     002A                           1-  789     _00129_DS_:
                                    1-  790     	.line	153, "main.c"; 	refreshNub();
                                    1-  791     	MCALL	_refreshNub
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  792     	MGOTO	_00136_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  793     _00131_DS_:
                                    1-  794     	.line	157, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  795     	BANKSEL	_geweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1-  796     	CLRR	_geweiNum
                                    1-  797     	BANKSEL	_shiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  798     	CLRR	_shiweiNum
                                    1-  799     	BANKSEL	_baiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  800     	CLRR	_baiweiNum
                                    1-  801     	.line	158, "main.c"; 	setInput();
                                    1-  802     	MCALL	_setInput
     0032 2rrr                      3-   66 m1      LCALL rom_address
     0033                           1-  803     _00136_DS_:
                                    1-  804     	.line	161, "main.c"; 	if(!IntFlag)
                                    1-  805     	BANKSEL	_IntFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  806     	MOVR	_IntFlag,W
     0035 0D03                      1-  807     	BTRSC	STATUS,2
                                    1-  808     	MGOTO	_00181_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  809     	.line	163, "main.c"; 	IntFlag = 0;
     0037 02rr                      1-  810     	CLRR	_IntFlag
                                    1-  811     	.line	164, "main.c"; 	powerShi = pwStep/10;
     0038 210A                      1-  812     	MOVIA	0x0a
     0039 00rr                      1-  813     	MOVAR	STK00
                                    1-  814     	BANKSEL	_pwStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  815     	MOVR	_pwStep,W
                                    1-  816     	MCALL	__divuchar
     003C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  817     	BANKSEL	_powerShi
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1-  818     	MOVAR	_powerShi
                                    1-  819     	.line	165, "main.c"; 	powerGe = pwStep%10;
     003F 210A                      1-  820     	MOVIA	0x0a
     0040 00rr                      1-  821     	MOVAR	STK00
                                    1-  822     	BANKSEL	_pwStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1-  823     	MOVR	_pwStep,W
                                    1-  824     	MCALL	__moduchar
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  825     	BANKSEL	_powerGe
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1-  826     	MOVAR	_powerGe
                                    1-  827     	.line	167, "main.c"; 	if(waitTime > 0)
                                    1-  828     	BANKSEL	_waitTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  829     	MOVR	_waitTime,W
     0048 11rr                      1-  830     	IORAR	(_waitTime + 1),W
     0049 0D03                      1-  831     	BTRSC	STATUS,2
                                    1-  832     	MGOTO	_00161_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  833     	.line	168, "main.c"; 	waitTime--;
     004B 21FF                      1-  834     	MOVIA	0xff
     004C 03rr                      1-  835     	ADDAR	_waitTime,F
     004D 0803                      1-  836     	BTRSS	STATUS,0
     004E 06rr                      1-  837     	DECR	(_waitTime + 1),F
                                    1-  838     	.line	168, "main.c"; 	else if(pwFlag)
                                    1-  839     	MGOTO	_00162_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1-  840     _00161_DS_:
                                    1-  841     	.line	169, "main.c"; 	{
                                    1-  842     	BANKSEL	_pwFlag
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  843     	MOVR	_pwFlag,W
     0052 0D03                      1-  844     	BTRSC	STATUS,2
                                    1-  845     	MGOTO	_00162_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  846     	.line	172, "main.c"; 	if(++count250ms >= 25)
                                    1-  847     	BANKSEL	_count250ms
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 05rr                      1-  848     	INCR	_count250ms,F
                                    1-  849     ;;unsigned compare: left < lit (0x19=25), size=1
     0056 2119                      1-  850     	MOVIA	0x19
     0057 04rr                      1-  851     	SUBAR	_count250ms,W
     0058 0803                      1-  852     	BTRSS	STATUS,0
                                    1-  853     	MGOTO	_00162_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  854     	.line	175, "main.c"; 	count250ms = 0;
     005A 02rr                      1-  855     	CLRR	_count250ms
                                    1-  856     	.line	177, "main.c"; 	revCount = 0;
                                    1-  857     	BANKSEL	_revCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 02rr                      1-  858     	CLRR	_revCount
                                    1-  859     	.line	178, "main.c"; 	PORTBbits.PB1 = 1;						// Set PB[1]= 1
     005D 18rr                      1-  860     	BSR	_PORTBbits,1
                                    1-  861     	.line	179, "main.c"; 	IRCR = C_IR_38K | C_IR_En;	
     005E 2101                      1-  862     	MOVIA	0x01
     005F 00rr                      1-  863     	SFUN	_IRCR
                                    1-  864     	.line	180, "main.c"; 	PORTA |= 0x40;
                                    1-  865     	BANKSEL	_PORTA
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 1Brr                      1-  866     	BSR	_PORTA,6
                                    1-  867     	.line	181, "main.c"; 	for(i=0;i<6;i++)
                                    1-  868     	BANKSEL	r0x104A
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1-  869     	CLRR	r0x104A
     0064                           1-  870     _00183_DS_:
                                    1-  871     	.line	184, "main.c"; 	delay(2);
     0064 2102                      1-  872     	MOVIA	0x02
                                    1-  873     	MCALL	_delay
     0065 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  874     	.line	185, "main.c"; 	checkIRKey();
                                    1-  875     	MCALL	_checkIRKey
     0066 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  876     	.line	187, "main.c"; 	delay(5);
     0067 2105                      1-  877     	MOVIA	0x05
                                    1-  878     	MCALL	_delay
     0068 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  879     	.line	181, "main.c"; 	for(i=0;i<6;i++)
                                    1-  880     	BANKSEL	r0x104A
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 05rr                      1-  881     	INCR	r0x104A,F
                                    1-  882     ;;unsigned compare: left < lit (0x6=6), size=1
     006B 2106                      1-  883     	MOVIA	0x06
     006C 04rr                      1-  884     	SUBAR	r0x104A,W
     006D 0803                      1-  885     	BTRSS	STATUS,0
                                    1-  886     	MGOTO	_00183_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  887     	.line	189, "main.c"; 	PORTBbits.PB1 = 0;						// Set PB[1]= 1
     006F 1Crr                      1-  888     	BCR	_PORTBbits,1
                                    1-  889     	.line	190, "main.c"; 	IRCR = C_IR_38K;	
     0070 0200                      1-  890     	CLRA	
     0071 00rr                      1-  891     	SFUN	_IRCR
                                    1-  892     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  893     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1-  894     	.line	191, "main.c"; 	if(revCount > 5)
     0072 2106                      1-  895     	MOVIA	0x06
                                    1-  896     	BANKSEL	_revCount
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 04rr                      1-  897     	SUBAR	_revCount,W
     0075 0803                      1-  898     	BTRSS	STATUS,0
                                    1-  899     	MGOTO	_00154_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  900     	.line	193, "main.c"; 	revCount = 0;
     0077 02rr                      1-  901     	CLRR	_revCount
                                    1-  902     	.line	194, "main.c"; 	delay(30);
     0078 211E                      1-  903     	MOVIA	0x1e
                                    1-  904     	MCALL	_delay
     0079 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  905     	.line	195, "main.c"; 	PORTBbits.PB1 = 1;						// Set PB[1]= 1
     007A 18rr                      1-  906     	BSR	_PORTBbits,1
                                    1-  907     	.line	196, "main.c"; 	IRCR = C_IR_38K | C_IR_En;	
     007B 2101                      1-  908     	MOVIA	0x01
     007C 00rr                      1-  909     	SFUN	_IRCR
                                    1-  910     	.line	197, "main.c"; 	for(i=0;i<6;i++)
                                    1-  911     	BANKSEL	r0x104A
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1-  912     	CLRR	r0x104A
     007F                           1-  913     _00185_DS_:
                                    1-  914     	.line	200, "main.c"; 	delay(2);
     007F 2102                      1-  915     	MOVIA	0x02
                                    1-  916     	MCALL	_delay
     0080 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  917     	.line	201, "main.c"; 	checkIRKey();
                                    1-  918     	MCALL	_checkIRKey
     0081 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  919     	.line	203, "main.c"; 	delay(5);
     0082 2105                      1-  920     	MOVIA	0x05
                                    1-  921     	MCALL	_delay
     0083 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  922     	.line	197, "main.c"; 	for(i=0;i<6;i++)
                                    1-  923     	BANKSEL	r0x104A
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 05rr                      1-  924     	INCR	r0x104A,F
                                    1-  925     ;;unsigned compare: left < lit (0x6=6), size=1
     0086 2106                      1-  926     	MOVIA	0x06
     0087 04rr                      1-  927     	SUBAR	r0x104A,W
     0088 0803                      1-  928     	BTRSS	STATUS,0
                                    1-  929     	MGOTO	_00185_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  930     	.line	205, "main.c"; 	PORTBbits.PB1 = 0;						// Set PB[1]= 1
     008A 1Crr                      1-  931     	BCR	_PORTBbits,1
                                    1-  932     	.line	206, "main.c"; 	IRCR = C_IR_38K;
     008B 0200                      1-  933     	CLRA	
     008C 00rr                      1-  934     	SFUN	_IRCR
                                    1-  935     	.line	207, "main.c"; 	if(zhedangTime == 0)
                                    1-  936     	BANKSEL	_zhedangTime
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1-  937     	MOVR	_zhedangTime,W
     008F 0903                      1-  938     	BTRSS	STATUS,2
                                    1-  939     	MGOTO	_00150_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  940     	.line	209, "main.c"; 	if(workStep == 1)
                                    1-  941     	BANKSEL	_workStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1-  942     	MOVR	_workStep,W
     0093 2401                      1-  943     	XORIA	0x01
     0094 0903                      1-  944     	BTRSS	STATUS,2
                                    1-  945     	MGOTO	_00147_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  946     	.line	211, "main.c"; 	waitTime = 50;
     0096 2132                      1-  947     	MOVIA	0x32
                                    1-  948     	BANKSEL	_waitTime
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1-  949     	MOVAR	_waitTime
     0099 02rr                      1-  950     	CLRR	(_waitTime + 1)
                                    1-  951     	MGOTO	_00150_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B                           1-  952     _00147_DS_:
                                    1-  953     	.line	213, "main.c"; 	else if(workStep == 2)
                                    1-  954     	BANKSEL	_workStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1-  955     	MOVR	_workStep,W
     009D 2402                      1-  956     	XORIA	0x02
     009E 0903                      1-  957     	BTRSS	STATUS,2
                                    1-  958     	MGOTO	_00144_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  959     	.line	215, "main.c"; 	waitTime = 100;
     00A0 2164                      1-  960     	MOVIA	0x64
                                    1-  961     	BANKSEL	_waitTime
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 00rr                      1-  962     	MOVAR	_waitTime
     00A3 02rr                      1-  963     	CLRR	(_waitTime + 1)
                                    1-  964     	MGOTO	_00150_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5                           1-  965     _00144_DS_:
                                    1-  966     	.line	217, "main.c"; 	else if(workStep == 3)
                                    1-  967     	BANKSEL	_workStep
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 01rr                      1-  968     	MOVR	_workStep,W
     00A7 2403                      1-  969     	XORIA	0x03
     00A8 0903                      1-  970     	BTRSS	STATUS,2
                                    1-  971     	MGOTO	_00150_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  972     	.line	219, "main.c"; 	waitTime = 150;
     00AA 2196                      1-  973     	MOVIA	0x96
                                    1-  974     	BANKSEL	_waitTime
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1-  975     	MOVAR	_waitTime
     00AD 02rr                      1-  976     	CLRR	(_waitTime + 1)
     00AE                           1-  977     _00150_DS_:
                                    1-  978     	.line	222, "main.c"; 	if(++zhedangTime > 40)
                                    1-  979     	BANKSEL	_zhedangTime
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 05rr                      1-  980     	INCR	_zhedangTime,F
                                    1-  981     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  982     ;;unsigned compare: left >= lit (0x29=41), size=1
     00B0 2129                      1-  983     	MOVIA	0x29
     00B1 04rr                      1-  984     	SUBAR	_zhedangTime,W
     00B2 0803                      1-  985     	BTRSS	STATUS,0
                                    1-  986     	MGOTO	_00155_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  987     	.line	224, "main.c"; 	zhedangTime = 40;
     00B4 2128                      1-  988     	MOVIA	0x28
     00B5 00rr                      1-  989     	MOVAR	_zhedangTime
                                    1-  990     	.line	224, "main.c"; 	//			    		if(zhedangTime % 2)
                                    1-  991     	MGOTO	_00155_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
     00B7                           1-  992     _00154_DS_:
                                    1-  993     	.line	237, "main.c"; 	zhedangTime = 0;
                                    1-  994     	BANKSEL	_zhedangTime
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 02rr                      1-  995     	CLRR	_zhedangTime
                                    1-  996     	.line	238, "main.c"; 	irStep = 0;			//移开了
                                    1-  997     	BANKSEL	_irStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 02rr                      1-  998     	CLRR	_irStep
     00BB                           1-  999     _00155_DS_:
                                    1- 1000     	.line	240, "main.c"; 	delay(5);
     00BB 2105                      1- 1001     	MOVIA	0x05
                                    1- 1002     	MCALL	_delay
     00BC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1003     	.line	242, "main.c"; 	PORTA &= 0xBF;
                                    1- 1004     	BANKSEL	_PORTA
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 1Frr                      1- 1005     	BCR	_PORTA,6
     00BF                           1- 1006     _00162_DS_:
                                    1- 1007     	.line	245, "main.c"; 	keyCtr();
                                    1- 1008     	MCALL	_keyCtr
     00BF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1009     	.line	246, "main.c"; 	if(waitTime == 0 && workTime == 0)
                                    1- 1010     	BANKSEL	_waitTime
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 01rr                      1- 1011     	MOVR	_waitTime,W
     00C2 11rr                      1- 1012     	IORAR	(_waitTime + 1),W
     00C3 0903                      1- 1013     	BTRSS	STATUS,2
                                    1- 1014     	MGOTO	_00166_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1015     	BANKSEL	_workTime
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1016     	MOVR	_workTime,W
     00C7 0903                      1- 1017     	BTRSS	STATUS,2
                                    1- 1018     	MGOTO	_00166_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1019     	.line	248, "main.c"; 	if(++checkBatTime >= 20)
                                    1- 1020     	BANKSEL	_checkBatTime
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 05rr                      1- 1021     	INCR	_checkBatTime,F
                                    1- 1022     ;;unsigned compare: left < lit (0x14=20), size=1
     00CB 2114                      1- 1023     	MOVIA	0x14
     00CC 04rr                      1- 1024     	SUBAR	_checkBatTime,W
     00CD 0803                      1- 1025     	BTRSS	STATUS,0
                                    1- 1026     	MGOTO	_00167_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1027     	.line	250, "main.c"; 	checkBatTime = 0;
     00CF 02rr                      1- 1028     	CLRR	_checkBatTime
                                    1- 1029     	.line	251, "main.c"; 	checkBat();
                                    1- 1030     	MCALL	_checkBat
     00D0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1031     	MGOTO	_00167_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
     00D2                           1- 1032     _00166_DS_:
                                    1- 1033     	.line	256, "main.c"; 	checkBatTime = 0;
                                    1- 1034     	BANKSEL	_checkBatTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 02rr                      1- 1035     	CLRR	_checkBatTime
     00D4                           1- 1036     _00167_DS_:
                                    1- 1037     	.line	258, "main.c"; 	chrgCtr();
                                    1- 1038     	MCALL	_chrgCtr
     00D4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1039     	.line	260, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0)
                                    1- 1040     	BANKSEL	_PORTA
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 1041     	MOVR	_PORTA,W
                                    1- 1042     	BANKSEL	r0x104A
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 00rr                      1- 1043     	MOVAR	r0x104A
                                    1- 1044     	BANKSEL	r0x104B
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 02rr                      1- 1045     	CLRR	r0x104B
                                    1- 1046     	BANKSEL	r0x104A
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 07rr                      1- 1047     	COMR	r0x104A,W
     00DD 00rr                      1- 1048     	MOVAR	r0x104A
                                    1- 1049     	BANKSEL	r0x104B
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 07rr                      1- 1050     	COMR	r0x104B,W
     00E0 00rr                      1- 1051     	MOVAR	r0x104B
                                    1- 1052     	BANKSEL	r0x104A
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 0Arr                      1- 1053     	BTRSS	r0x104A,5
                                    1- 1054     	MGOTO	_00172_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1055     	BANKSEL	_keyCount
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 01rr                      1- 1056     	MOVR	_keyCount,W
     00E6 0903                      1- 1057     	BTRSS	STATUS,2
                                    1- 1058     	MGOTO	_00172_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1059     	BANKSEL	_pwFlag
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 01rr                      1- 1060     	MOVR	_pwFlag,W
     00EA 0903                      1- 1061     	BTRSS	STATUS,2
                                    1- 1062     	MGOTO	_00172_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1063     	BANKSEL	_stepShowTime
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 01rr                      1- 1064     	MOVR	_stepShowTime,W
     00EE 0903                      1- 1065     	BTRSS	STATUS,2
                                    1- 1066     	MGOTO	_00172_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1067     	BANKSEL	_pwShowTime
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 01rr                      1- 1068     	MOVR	_pwShowTime,W
     00F2 0903                      1- 1069     	BTRSS	STATUS,2
                                    1- 1070     	MGOTO	_00172_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1071     	BANKSEL	_offShowTime
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 01rr                      1- 1072     	MOVR	_offShowTime,W
     00F6 0903                      1- 1073     	BTRSS	STATUS,2
                                    1- 1074     	MGOTO	_00172_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1075     	.line	263, "main.c"; 	if(++sleepTime > 100)
                                    1- 1076     	BANKSEL	_sleepTime
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 05rr                      1- 1077     	INCR	_sleepTime,F
                                    1- 1078     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1079     ;;unsigned compare: left >= lit (0x65=101), size=1
     00FA 2165                      1- 1080     	MOVIA	0x65
     00FB 04rr                      1- 1081     	SUBAR	_sleepTime,W
     00FC 0C03                      1- 1082     	BTRSC	STATUS,0
                                    1- 1083     	.line	264, "main.c"; 	gotoSleep();
                                    1- 1084     	MCALL	_gotoSleep
     00FD 2rrr                      3-   66 m1      LCALL rom_address
     00FE                           1- 1085     _00172_DS_:
                                    1- 1086     	.line	266, "main.c"; 	if(sleepFlag)
                                    1- 1087     	BANKSEL	_sleepFlag
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 01rr                      1- 1088     	MOVR	_sleepFlag,W
     0100 0903                      1- 1089     	BTRSS	STATUS,2
                                    1- 1090     	.line	268, "main.c"; 	gotoSleep();
                                    1- 1091     	MCALL	_gotoSleep
     0101 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1092     	.line	270, "main.c"; 	delay(100);
     0102 2164                      1- 1093     	MOVIA	0x64
                                    1- 1094     	MCALL	_delay
     0103 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1095     	.line	270, "main.c"; 	//    	if(getbit(PORTB, 3) == 0)
                                    1- 1096     	MGOTO	_00181_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1097     	.line	292, "main.c"; 	}
                                    1- 1098     	RETURN	
     0105 0010                      3-   40 m1      ret
                                    1- 1099     ; exit point of _main
                                    1- 1101     ;***
                                    1- 1102     ;  pBlock Stats: dbName = C
                                    1- 1103     ;***
                                    1- 1104     ;has an exit
                                    1- 1105     ;2 compiler assigned registers:
                                    1- 1106     ;   r0x1034
                                    1- 1107     ;   r0x1035
                                    1- 1108     ;; Starting pCode block
                                    1- 1109     .segment "code"; module=main, function=_delay
                                    1- 1111     ;local variable name mapping:
     0000                           1- 1114     _delay:
                                    1- 1115     ; 2 exit points
                                    1- 1116     	.line	787, "main.c"; 	void delay(u8t count)
                                    1- 1117     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1118     	MOVAR	r0x1034
                                    1- 1119     	.line	790, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1- 1120     	MOVIA	0x01
                                    1- 1121     	BANKSEL	r0x1035
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1122     	MOVAR	r0x1035
     0005                           1- 1123     _00492_DS_:
                                    1- 1124     	BANKSEL	r0x1035
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1125     	MOVR	r0x1035,W
                                    1- 1126     	BANKSEL	r0x1034
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1127     	SUBAR	r0x1034,W
     0009 0803                      1- 1128     	BTRSS	STATUS,0
                                    1- 1129     	MGOTO	_00494_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1130     	BANKSEL	r0x1035
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1131     	INCR	r0x1035,F
                                    1- 1132     	MGOTO	_00492_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1133     _00494_DS_:
                                    1- 1134     	.line	792, "main.c"; 	}
                                    1- 1135     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1136     ; exit point of _delay
                                    1- 1138     ;***
                                    1- 1139     ;  pBlock Stats: dbName = C
                                    1- 1140     ;***
                                    1- 1141     ;has an exit
                                    1- 1142     ;; Starting pCode block
                                    1- 1143     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1145     _F_wait_eoc:
                                    1- 1146     ; 2 exit points
     0000                           1- 1147     _00485_DS_:
                                    1- 1148     	.line	783, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1149     	BTRSS	_ADMDbits,5
                                    1- 1150     	MGOTO	_00485_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1151     	.line	785, "main.c"; 	}
                                    1- 1152     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1153     ; exit point of _F_wait_eoc
                                    1- 1155     ;***
                                    1- 1156     ;  pBlock Stats: dbName = C
                                    1- 1157     ;***
                                    1- 1158     ;has an exit
                                    1- 1159     ;functions called:
                                    1- 1160     ;   _F_wait_eoc
                                    1- 1161     ;   _F_wait_eoc
                                    1- 1162     ;6 compiler assigned registers:
                                    1- 1163     ;   r0x1036
                                    1- 1164     ;   r0x1037
                                    1- 1165     ;   r0x1038
                                    1- 1166     ;   r0x1039
                                    1- 1167     ;   r0x103A
                                    1- 1168     ;   r0x103B
                                    1- 1169     ;; Starting pCode block
                                    1- 1170     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1172     ;local variable name mapping:
     0000                           1- 1175     _F_Quarter_VDD_Convert:
                                    1- 1176     ; 2 exit points
                                    1- 1177     	.line	768, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1178     	BANKSEL	r0x1036
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1179     	MOVAR	r0x1036
                                    1- 1180     	.line	771, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1- 1181     	MOVIA	0x9b
     0003 00rr                      1- 1182     	MOVAR	_ADMD
                                    1- 1183     	.line	772, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1184     	MOVIA	0x01
                                    1- 1185     	BANKSEL	r0x1037
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1186     	MOVAR	r0x1037
     0007                           1- 1187     _00478_DS_:
                                    1- 1188     	BANKSEL	r0x1037
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1189     	MOVR	r0x1037,W
                                    1- 1190     	BANKSEL	r0x1036
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1191     	SUBAR	r0x1036,W
     000B 0803                      1- 1192     	BTRSS	STATUS,0
                                    1- 1193     	MGOTO	_00480_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1194     	.line	774, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1195     	BSR	_ADMDbits,6
                                    1- 1196     	.line	775, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1197     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1198     	.line	776, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1199     	MOVIA	0x0f
     0010 10rr                      1- 1200     	ANDAR	_ADR,W
                                    1- 1201     ;;3	MOVAR	r0x1038
                                    1- 1202     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1203     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1204     	.line	777, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1205     	MOVR	_ADD,W
                                    1- 1206     	BANKSEL	r0x1038
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1207     	MOVAR	r0x1038
                                    1- 1208     ;;1	CLRR	r0x1039
                                    1- 1209     ;;101	MOVR	r0x1038,W
                                    1- 1210     ;;99	MOVAR	r0x103A
     0016 2100                      1- 1211     	MOVIA	0x00
                                    1- 1212     	BANKSEL	r0x103B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1213     	MOVAR	r0x103B
                                    1- 1214     ;;100	MOVR	r0x103A,W
                                    1- 1215     	BANKSEL	r0x1038
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1216     	MOVR	r0x1038,W
                                    1- 1217     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1218     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1219     	BANKSEL	r0x103B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1220     	MOVR	r0x103B,W
     001F 0C03                      1- 1221     	BTRSC	STATUS,0
     0020 05rr                      1- 1222     	INCR	r0x103B,W
     0021 0D03                      1- 1223     	BTRSC	STATUS,2
                                    1- 1224     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1225     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1226     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1227     _00001_DS_:
                                    1- 1228     	.line	772, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1229     	BANKSEL	r0x1037
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1230     	INCR	r0x1037,F
                                    1- 1231     	MGOTO	_00478_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1232     _00480_DS_:
                                    1- 1233     	.line	779, "main.c"; 	}
                                    1- 1234     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1235     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1237     ;***
                                    1- 1238     ;  pBlock Stats: dbName = C
                                    1- 1239     ;***
                                    1- 1240     ;has an exit
                                    1- 1241     ;functions called:
                                    1- 1242     ;   _F_Quarter_VDD_Convert
                                    1- 1243     ;   _F_Quarter_VDD_Convert
                                    1- 1244     ;6 compiler assigned registers:
                                    1- 1245     ;   r0x103C
                                    1- 1246     ;   r0x103D
                                    1- 1247     ;   r0x103E
                                    1- 1248     ;   r0x103F
                                    1- 1249     ;   r0x1040
                                    1- 1250     ;   r0x1041
                                    1- 1251     ;; Starting pCode block
                                    1- 1252     .segment "code"; module=main, function=_checkBat
                                    1- 1254     ;local variable name mapping:
     0000                           1- 1257     _checkBat:
                                    1- 1258     ; 2 exit points
                                    1- 1259     	.line	674, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1260     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1261     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1262     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1263     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1264     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1265     	.line	675, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1266     	MOVIA	0x08
                                    1- 1267     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1268     	.line	676, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1269     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1270     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1271     	ANDIA	0xf0
     000A 00rr                      1- 1272     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1273     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1274     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1275     	ANDIA	0x0f
     000E 11rr                      1- 1276     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1277     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1278     	.line	677, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1279     	MOVIA	0xf0
                                    1- 1280     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1281     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1282     	.line	678, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1283     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1284     	BANKSEL	r0x103E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1285     	MOVAR	r0x103E
                                    1- 1286     	BANKSEL	r0x103C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1287     	MOVAR	r0x103C
                                    1- 1288     	BANKSEL	r0x103D
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1289     	CLRR	r0x103D
                                    1- 1290     ;;104	MOVR	r0x103C,W
     001A 2100                      1- 1291     	MOVIA	0x00
                                    1- 1292     	BANKSEL	r0x103F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1293     	MOVAR	r0x103F
                                    1- 1294     	BANKSEL	r0x103E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1295     	MOVR	r0x103E,W
                                    1- 1296     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1297     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1298     	BANKSEL	r0x103F
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1299     	MOVR	r0x103F,W
     0023 0C03                      1- 1300     	BTRSC	STATUS,0
     0024 05rr                      1- 1301     	INCR	r0x103F,W
     0025 0D03                      1- 1302     	BTRSC	STATUS,2
                                    1- 1303     	MGOTO	_00002_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1304     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1305     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1306     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1307     _00002_DS_:
                                    1- 1308     	.line	679, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1309     	BCR	STATUS,0
                                    1- 1310     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1311     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1312     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1313     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1314     	BCR	STATUS,0
     002E 13rr                      1- 1315     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1316     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1317     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1318     	BCR	STATUS,0
     0031 13rr                      1- 1319     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1320     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1321     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1322     ;;unsigned compare: left >= lit (0x867=2151), size=2
                                    1- 1323     	.line	680, "main.c"; 	if(R_Quarter_VDD_DATA > 2150)
     0033 2108                      1- 1324     	MOVIA	0x08
     0034 04rr                      1- 1325     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1326     	BTRSS	STATUS,2
                                    1- 1327     	MGOTO	_00457_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 2167                      1- 1328     	MOVIA	0x67
     0038 04rr                      1- 1329     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1330     _00457_DS_:
     0039 0803                      1- 1331     	BTRSS	STATUS,0
                                    1- 1332     	MGOTO	_00402_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1333     	.line	682, "main.c"; 	if(++fullTime > 200)
                                    1- 1334     	BANKSEL	_fullTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 1335     	INCR	_fullTime,F
                                    1- 1336     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1337     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003D 21C9                      1- 1338     	MOVIA	0xc9
     003E 04rr                      1- 1339     	SUBAR	_fullTime,W
     003F 0803                      1- 1340     	BTRSS	STATUS,0
                                    1- 1341     	MGOTO	_00404_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1342     	.line	684, "main.c"; 	fullFlag = 1;
     0041 2101                      1- 1343     	MOVIA	0x01
                                    1- 1344     	BANKSEL	_fullFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1345     	MOVAR	_fullFlag
                                    1- 1346     	.line	685, "main.c"; 	pwStep = 100;
     0044 2164                      1- 1347     	MOVIA	0x64
                                    1- 1348     	BANKSEL	_pwStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1349     	MOVAR	_pwStep
                                    1- 1350     	MGOTO	_00404_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1351     ;;unsigned compare: left < lit (0x60E=1550), size=2
     0048                           1- 1352     _00402_DS_:
                                    1- 1353     	.line	688, "main.c"; 	else if(R_Quarter_VDD_DATA < 1550)
     0048 2106                      1- 1354     	MOVIA	0x06
                                    1- 1355     	BANKSEL	_R_Quarter_VDD_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1356     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     004B 0903                      1- 1357     	BTRSS	STATUS,2
                                    1- 1358     	MGOTO	_00459_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 210E                      1- 1359     	MOVIA	0x0e
     004E 04rr                      1- 1360     	SUBAR	_R_Quarter_VDD_DATA,W
     004F                           1- 1361     _00459_DS_:
     004F 0C03                      1- 1362     	BTRSC	STATUS,0
                                    1- 1363     	MGOTO	_00399_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1364     	.line	690, "main.c"; 	pwStep = 0;
                                    1- 1365     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 1366     	CLRR	_pwStep
                                    1- 1367     	.line	691, "main.c"; 	fullTime = 0;
                                    1- 1368     	BANKSEL	_fullTime
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1369     	CLRR	_fullTime
                                    1- 1370     	MGOTO	_00404_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1- 1371     _00399_DS_:
                                    1- 1372     	.line	696, "main.c"; 	fullTime = 0;
                                    1- 1373     	BANKSEL	_fullTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 02rr                      1- 1374     	CLRR	_fullTime
                                    1- 1375     ;;unsigned compare: left < lit (0x7D0=2000), size=2
                                    1- 1376     	.line	697, "main.c"; 	if(R_Quarter_VDD_DATA >= 2000)
     0058 2107                      1- 1377     	MOVIA	0x07
                                    1- 1378     	BANKSEL	_R_Quarter_VDD_DATA
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 04rr                      1- 1379     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     005B 0903                      1- 1380     	BTRSS	STATUS,2
                                    1- 1381     	MGOTO	_00460_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D 21D0                      1- 1382     	MOVIA	0xd0
     005E 04rr                      1- 1383     	SUBAR	_R_Quarter_VDD_DATA,W
     005F                           1- 1384     _00460_DS_:
     005F 0803                      1- 1385     	BTRSS	STATUS,0
                                    1- 1386     	MGOTO	_00370_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1387     	.line	699, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 2000)/2 + 45;
     0061 2130                      1- 1388     	MOVIA	0x30
                                    1- 1389     	BANKSEL	_R_Quarter_VDD_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 03rr                      1- 1390     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1391     	BANKSEL	r0x103C
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 00rr                      1- 1392     	MOVAR	r0x103C
     0066 21F8                      1- 1393     	MOVIA	0xf8
                                    1- 1394     	BANKSEL	r0x103D
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1395     	MOVAR	r0x103D
                                    1- 1396     	BANKSEL	_R_Quarter_VDD_DATA
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 1397     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     006B 0C03                      1- 1398     	BTRSC	STATUS,0
     006C 05rr                      1- 1399     	INCR	(_R_Quarter_VDD_DATA + 1),W
     006D 0D03                      1- 1400     	BTRSC	STATUS,2
                                    1- 1401     	MGOTO	_00003_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1402     	BANKSEL	r0x103D
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 03rr                      1- 1403     	ADDAR	r0x103D,F
                                    1- 1404     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0071                           1- 1405     _00003_DS_:
     0071 1C03                      1- 1406     	BCR	STATUS,0
                                    1- 1407     	BANKSEL	r0x103D
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 13rr                      1- 1408     	RRR	r0x103D,W
                                    1- 1409     	BANKSEL	r0x103F
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1410     	MOVAR	r0x103F
                                    1- 1411     	BANKSEL	r0x103C
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 13rr                      1- 1412     	RRR	r0x103C,W
                                    1- 1413     	BANKSEL	r0x103E
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 1414     	MOVAR	r0x103E
     007A 212D                      1- 1415     	MOVIA	0x2d
     007B 03rr                      1- 1416     	ADDAR	r0x103E,W
                                    1- 1417     	BANKSEL	r0x103C
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 1418     	MOVAR	r0x103C
                                    1- 1419     	BANKSEL	r0x103D
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 02rr                      1- 1420     	CLRR	r0x103D
     0080 14rr                      1- 1421     	RLR	r0x103D,F
                                    1- 1422     	BANKSEL	r0x103F
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 1423     	MOVR	r0x103F,W
                                    1- 1424     	BANKSEL	r0x103D
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 03rr                      1- 1425     	ADDAR	r0x103D,F
                                    1- 1426     	MGOTO	_00371_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1427     ;;unsigned compare: left < lit (0x76C=1900), size=2
     0086                           1- 1428     _00370_DS_:
                                    1- 1429     	.line	701, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1900)
     0086 2107                      1- 1430     	MOVIA	0x07
                                    1- 1431     	BANKSEL	_R_Quarter_VDD_DATA
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 04rr                      1- 1432     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0089 0903                      1- 1433     	BTRSS	STATUS,2
                                    1- 1434     	MGOTO	_00461_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
     008B 216C                      1- 1435     	MOVIA	0x6c
     008C 04rr                      1- 1436     	SUBAR	_R_Quarter_VDD_DATA,W
     008D                           1- 1437     _00461_DS_:
     008D 0803                      1- 1438     	BTRSS	STATUS,0
                                    1- 1439     	MGOTO	_00367_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1440     	.line	703, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 1900)/4) + 22;
     008F 2194                      1- 1441     	MOVIA	0x94
                                    1- 1442     	BANKSEL	_R_Quarter_VDD_DATA
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 03rr                      1- 1443     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1444     	BANKSEL	r0x103E
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 1445     	MOVAR	r0x103E
     0094 21F8                      1- 1446     	MOVIA	0xf8
                                    1- 1447     	BANKSEL	r0x103F
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1448     	MOVAR	r0x103F
                                    1- 1449     	BANKSEL	_R_Quarter_VDD_DATA
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 01rr                      1- 1450     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0099 0C03                      1- 1451     	BTRSC	STATUS,0
     009A 05rr                      1- 1452     	INCR	(_R_Quarter_VDD_DATA + 1),W
     009B 0D03                      1- 1453     	BTRSC	STATUS,2
                                    1- 1454     	MGOTO	_00004_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1455     	BANKSEL	r0x103F
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 03rr                      1- 1456     	ADDAR	r0x103F,F
                                    1- 1457     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     009F                           1- 1458     _00004_DS_:
     009F 1C03                      1- 1459     	BCR	STATUS,0
                                    1- 1460     	BANKSEL	r0x103F
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 13rr                      1- 1461     	RRR	r0x103F,W
                                    1- 1462     	BANKSEL	r0x1040
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1463     	MOVAR	r0x1040
                                    1- 1464     	BANKSEL	r0x103E
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 13rr                      1- 1465     	RRR	r0x103E,W
                                    1- 1466     	BANKSEL	r0x1041
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 1467     	MOVAR	r0x1041
                                    1- 1468     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00A8 1C03                      1- 1469     	BCR	STATUS,0
                                    1- 1470     	BANKSEL	r0x1040
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 13rr                      1- 1471     	RRR	r0x1040,F
                                    1- 1472     	BANKSEL	r0x1041
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 13rr                      1- 1473     	RRR	r0x1041,F
     00AD 2116                      1- 1474     	MOVIA	0x16
     00AE 03rr                      1- 1475     	ADDAR	r0x1041,W
                                    1- 1476     	BANKSEL	r0x103C
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1477     	MOVAR	r0x103C
                                    1- 1478     	BANKSEL	r0x103D
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 02rr                      1- 1479     	CLRR	r0x103D
     00B3 14rr                      1- 1480     	RLR	r0x103D,F
                                    1- 1481     	BANKSEL	r0x1040
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 1482     	MOVR	r0x1040,W
                                    1- 1483     	BANKSEL	r0x103D
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 03rr                      1- 1484     	ADDAR	r0x103D,F
                                    1- 1485     	MGOTO	_00371_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1486     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1487     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     00B9                           1- 1488     _00367_DS_:
                                    1- 1489     	.line	705, "main.c"; 	else if(R_Quarter_VDD_DATA > 1550)
     00B9 2106                      1- 1490     	MOVIA	0x06
                                    1- 1491     	BANKSEL	_R_Quarter_VDD_DATA
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 04rr                      1- 1492     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00BC 0903                      1- 1493     	BTRSS	STATUS,2
                                    1- 1494     	MGOTO	_00462_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
     00BE 210F                      1- 1495     	MOVIA	0x0f
     00BF 04rr                      1- 1496     	SUBAR	_R_Quarter_VDD_DATA,W
     00C0                           1- 1497     _00462_DS_:
     00C0 0803                      1- 1498     	BTRSS	STATUS,0
                                    1- 1499     	MGOTO	_00364_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1500     	.line	707, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1550)/16;
     00C2 21F2                      1- 1501     	MOVIA	0xf2
                                    1- 1502     	BANKSEL	_R_Quarter_VDD_DATA
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 03rr                      1- 1503     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1504     	BANKSEL	r0x103E
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 00rr                      1- 1505     	MOVAR	r0x103E
     00C7 21F9                      1- 1506     	MOVIA	0xf9
                                    1- 1507     	BANKSEL	r0x103F
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 00rr                      1- 1508     	MOVAR	r0x103F
                                    1- 1509     	BANKSEL	_R_Quarter_VDD_DATA
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 01rr                      1- 1510     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00CC 0C03                      1- 1511     	BTRSC	STATUS,0
     00CD 05rr                      1- 1512     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00CE 0D03                      1- 1513     	BTRSC	STATUS,2
                                    1- 1514     	MGOTO	_00005_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1515     	BANKSEL	r0x103F
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 03rr                      1- 1516     	ADDAR	r0x103F,F
     00D2                           1- 1517     _00005_DS_:
                                    1- 1518     	BANKSEL	r0x103E
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 15rr                      1- 1519     	SWAPR	r0x103E,W
     00D4 220F                      1- 1520     	ANDIA	0x0f
                                    1- 1521     	BANKSEL	r0x103C
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 00rr                      1- 1522     	MOVAR	r0x103C
                                    1- 1523     	BANKSEL	r0x103F
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 15rr                      1- 1524     	SWAPR	r0x103F,W
                                    1- 1525     	BANKSEL	r0x103D
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 1526     	MOVAR	r0x103D
     00DB 22F0                      1- 1527     	ANDIA	0xf0
                                    1- 1528     	BANKSEL	r0x103C
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 11rr                      1- 1529     	IORAR	r0x103C,F
                                    1- 1530     	BANKSEL	r0x103D
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 12rr                      1- 1531     	XORAR	r0x103D,F
                                    1- 1532     	MGOTO	_00371_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
     00E1                           1- 1533     _00364_DS_:
                                    1- 1534     	.line	711, "main.c"; 	tempValue = 0;
                                    1- 1535     	BANKSEL	r0x103C
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 02rr                      1- 1536     	CLRR	r0x103C
                                    1- 1537     	BANKSEL	r0x103D
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 02rr                      1- 1538     	CLRR	r0x103D
     00E5                           1- 1539     _00371_DS_:
                                    1- 1540     	.line	713, "main.c"; 	if(0x20 & PORTA)
                                    1- 1541     	BANKSEL	_PORTA
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 0Arr                      1- 1542     	BTRSS	_PORTA,5
                                    1- 1543     	MGOTO	_00396_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1544     ;;unsigned compare: left < lit (0xA=10), size=2
                                    1- 1545     	.line	717, "main.c"; 	if(tempValue < 10)
     00E8 2100                      1- 1546     	MOVIA	0x00
                                    1- 1547     	BANKSEL	r0x103D
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 04rr                      1- 1548     	SUBAR	r0x103D,W
     00EB 0903                      1- 1549     	BTRSS	STATUS,2
                                    1- 1550     	MGOTO	_00463_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
     00ED 210A                      1- 1551     	MOVIA	0x0a
                                    1- 1552     	BANKSEL	r0x103C
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 04rr                      1- 1553     	SUBAR	r0x103C,W
     00F0                           1- 1554     _00463_DS_:
     00F0 0C03                      1- 1555     	BTRSC	STATUS,0
                                    1- 1556     	MGOTO	_00378_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1557     	.line	719, "main.c"; 	tempValue = 1;
     00F2 2101                      1- 1558     	MOVIA	0x01
                                    1- 1559     	BANKSEL	r0x103C
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 00rr                      1- 1560     	MOVAR	r0x103C
                                    1- 1561     	BANKSEL	r0x103D
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 02rr                      1- 1562     	CLRR	r0x103D
                                    1- 1563     	MGOTO	_00007_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1564     ;;unsigned compare: left < lit (0x14=20), size=2
     00F8                           1- 1565     _00378_DS_:
                                    1- 1566     	.line	721, "main.c"; 	else if(tempValue < 20)
     00F8 2100                      1- 1567     	MOVIA	0x00
                                    1- 1568     	BANKSEL	r0x103D
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 04rr                      1- 1569     	SUBAR	r0x103D,W
     00FB 0903                      1- 1570     	BTRSS	STATUS,2
                                    1- 1571     	MGOTO	_00464_DS_
     00FC 3rrr                      3-   63 m1      LGOTO rom_address
     00FD 2114                      1- 1572     	MOVIA	0x14
                                    1- 1573     	BANKSEL	r0x103C
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 04rr                      1- 1574     	SUBAR	r0x103C,W
     0100                           1- 1575     _00464_DS_:
     0100 0C03                      1- 1576     	BTRSC	STATUS,0
                                    1- 1577     	MGOTO	_00375_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1578     	.line	723, "main.c"; 	tempValue = tempValue - 10;
     0102 21F6                      1- 1579     	MOVIA	0xf6
                                    1- 1580     	BANKSEL	r0x103C
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 03rr                      1- 1581     	ADDAR	r0x103C,F
     0105 0C03                      1- 1582     	BTRSC	STATUS,0
                                    1- 1583     	MGOTO	_00006_DS_
     0106 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1584     	BANKSEL	r0x103D
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 06rr                      1- 1585     	DECR	r0x103D,F
     0109                           1- 1586     _00006_DS_:
                                    1- 1587     	MGOTO	_00007_DS_
     0109 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1588     ;;unsigned compare: left < lit (0x78=120), size=2
     010A                           1- 1589     _00375_DS_:
                                    1- 1590     	.line	725, "main.c"; 	else if(tempValue < 120)
     010A 2100                      1- 1591     	MOVIA	0x00
                                    1- 1592     	BANKSEL	r0x103D
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 04rr                      1- 1593     	SUBAR	r0x103D,W
     010D 0903                      1- 1594     	BTRSS	STATUS,2
                                    1- 1595     	MGOTO	_00465_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
     010F 2178                      1- 1596     	MOVIA	0x78
                                    1- 1597     	BANKSEL	r0x103C
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 04rr                      1- 1598     	SUBAR	r0x103C,W
     0112                           1- 1599     _00465_DS_:
     0112 0C03                      1- 1600     	BTRSC	STATUS,0
                                    1- 1601     	MGOTO	_00007_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1602     	.line	727, "main.c"; 	tempValue = tempValue - 20;
     0114 21EC                      1- 1603     	MOVIA	0xec
                                    1- 1604     	BANKSEL	r0x103C
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 03rr                      1- 1605     	ADDAR	r0x103C,F
     0117 0C03                      1- 1606     	BTRSC	STATUS,0
                                    1- 1607     	MGOTO	_00007_DS_
     0118 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1608     	BANKSEL	r0x103D
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 06rr                      1- 1609     	DECR	r0x103D,F
                                    1- 1610     ;;unsigned compare: left < lit (0x64=100), size=2
     011B                           1- 1611     _00007_DS_:
                                    1- 1612     	.line	729, "main.c"; 	if(tempValue >= 100)
     011B 2100                      1- 1613     	MOVIA	0x00
                                    1- 1614     	BANKSEL	r0x103D
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 04rr                      1- 1615     	SUBAR	r0x103D,W
     011E 0903                      1- 1616     	BTRSS	STATUS,2
                                    1- 1617     	MGOTO	_00466_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
     0120 2164                      1- 1618     	MOVIA	0x64
                                    1- 1619     	BANKSEL	r0x103C
     0121 rrrr                      3-  110 m1      .banksel ram_address
     0122 04rr                      1- 1620     	SUBAR	r0x103C,W
     0123                           1- 1621     _00466_DS_:
     0123 0803                      1- 1622     	BTRSS	STATUS,0
                                    1- 1623     	MGOTO	_00381_DS_
     0124 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1624     	.line	731, "main.c"; 	tempValue = 100;
     0125 2164                      1- 1625     	MOVIA	0x64
                                    1- 1626     	BANKSEL	r0x103C
     0126 rrrr                      3-  110 m1      .banksel ram_address
     0127 00rr                      1- 1627     	MOVAR	r0x103C
                                    1- 1628     	BANKSEL	r0x103D
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 02rr                      1- 1629     	CLRR	r0x103D
     012A                           1- 1630     _00381_DS_:
                                    1- 1631     	.line	734, "main.c"; 	if(pwStep < tempValue)
                                    1- 1632     	BANKSEL	_pwStep
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 01rr                      1- 1633     	MOVR	_pwStep,W
                                    1- 1634     	BANKSEL	r0x103E
     012C rrrr                      3-  110 m1      .banksel ram_address
     012D 00rr                      1- 1635     	MOVAR	r0x103E
                                    1- 1636     	BANKSEL	r0x103F
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 02rr                      1- 1637     	CLRR	r0x103F
                                    1- 1638     	BANKSEL	r0x103D
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 01rr                      1- 1639     	MOVR	r0x103D,W
                                    1- 1640     	BANKSEL	r0x103F
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 04rr                      1- 1641     	SUBAR	r0x103F,W
     0134 0903                      1- 1642     	BTRSS	STATUS,2
                                    1- 1643     	MGOTO	_00467_DS_
     0135 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1644     	BANKSEL	r0x103C
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 01rr                      1- 1645     	MOVR	r0x103C,W
                                    1- 1646     	BANKSEL	r0x103E
     0138 rrrr                      3-  110 m1      .banksel ram_address
     0139 04rr                      1- 1647     	SUBAR	r0x103E,W
     013A                           1- 1648     _00467_DS_:
     013A 0C03                      1- 1649     	BTRSC	STATUS,0
                                    1- 1650     	MGOTO	_00404_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1651     	.line	736, "main.c"; 	if(++count5s > 500)
                                    1- 1652     	BANKSEL	_count5s
     013C rrrr                      3-  110 m1      .banksel ram_address
     013D 05rr                      1- 1653     	INCR	_count5s,F
     013E 0D03                      1- 1654     	BTRSC	STATUS,2
     013F 05rr                      1- 1655     	INCR	(_count5s + 1),F
                                    1- 1656     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1657     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0140 2101                      1- 1658     	MOVIA	0x01
     0141 04rr                      1- 1659     	SUBAR	(_count5s + 1),W
     0142 0903                      1- 1660     	BTRSS	STATUS,2
                                    1- 1661     	MGOTO	_00468_DS_
     0143 3rrr                      3-   63 m1      LGOTO rom_address
     0144 21F5                      1- 1662     	MOVIA	0xf5
     0145 04rr                      1- 1663     	SUBAR	_count5s,W
     0146                           1- 1664     _00468_DS_:
     0146 0803                      1- 1665     	BTRSS	STATUS,0
                                    1- 1666     	MGOTO	_00404_DS_
     0147 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1667     	.line	738, "main.c"; 	count5s = 0;
                                    1- 1668     	BANKSEL	_count5s
     0148 rrrr                      3-  110 m1      .banksel ram_address
     0149 02rr                      1- 1669     	CLRR	_count5s
     014A 02rr                      1- 1670     	CLRR	(_count5s + 1)
                                    1- 1671     	.line	739, "main.c"; 	pwStep++;
                                    1- 1672     	BANKSEL	_pwStep
     014B rrrr                      3-  110 m1      .banksel ram_address
     014C 05rr                      1- 1673     	INCR	_pwStep,F
                                    1- 1674     	MGOTO	_00404_DS_
     014D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1675     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1676     ;;unsigned compare: left >= lit (0x64=100), size=2
     014E                           1- 1677     _00396_DS_:
                                    1- 1678     	.line	747, "main.c"; 	if(tempValue > 99)
     014E 2100                      1- 1679     	MOVIA	0x00
                                    1- 1680     	BANKSEL	r0x103D
     014F rrrr                      3-  110 m1      .banksel ram_address
     0150 04rr                      1- 1681     	SUBAR	r0x103D,W
     0151 0903                      1- 1682     	BTRSS	STATUS,2
                                    1- 1683     	MGOTO	_00469_DS_
     0152 3rrr                      3-   63 m1      LGOTO rom_address
     0153 2164                      1- 1684     	MOVIA	0x64
                                    1- 1685     	BANKSEL	r0x103C
     0154 rrrr                      3-  110 m1      .banksel ram_address
     0155 04rr                      1- 1686     	SUBAR	r0x103C,W
     0156                           1- 1687     _00469_DS_:
     0156 0803                      1- 1688     	BTRSS	STATUS,0
                                    1- 1689     	MGOTO	_00387_DS_
     0157 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1690     	.line	748, "main.c"; 	tempValue = 99;
     0158 2163                      1- 1691     	MOVIA	0x63
                                    1- 1692     	BANKSEL	r0x103C
     0159 rrrr                      3-  110 m1      .banksel ram_address
     015A 00rr                      1- 1693     	MOVAR	r0x103C
                                    1- 1694     	BANKSEL	r0x103D
     015B rrrr                      3-  110 m1      .banksel ram_address
     015C 02rr                      1- 1695     	CLRR	r0x103D
     015D                           1- 1696     _00387_DS_:
                                    1- 1697     	.line	749, "main.c"; 	if(pwStep == 0 || pwFlag == 0)
                                    1- 1698     	BANKSEL	_pwStep
     015D rrrr                      3-  110 m1      .banksel ram_address
     015E 01rr                      1- 1699     	MOVR	_pwStep,W
     015F 0D03                      1- 1700     	BTRSC	STATUS,2
                                    1- 1701     	MGOTO	_00388_DS_
     0160 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1702     	BANKSEL	_pwFlag
     0161 rrrr                      3-  110 m1      .banksel ram_address
     0162 01rr                      1- 1703     	MOVR	_pwFlag,W
     0163 0903                      1- 1704     	BTRSS	STATUS,2
                                    1- 1705     	MGOTO	_00389_DS_
     0164 3rrr                      3-   63 m1      LGOTO rom_address
     0165                           1- 1706     _00388_DS_:
                                    1- 1707     	.line	751, "main.c"; 	pwStep = tempValue;
                                    1- 1708     	BANKSEL	r0x103C
     0165 rrrr                      3-  110 m1      .banksel ram_address
     0166 01rr                      1- 1709     	MOVR	r0x103C,W
                                    1- 1710     	BANKSEL	_pwStep
     0167 rrrr                      3-  110 m1      .banksel ram_address
     0168 00rr                      1- 1711     	MOVAR	_pwStep
     0169                           1- 1712     _00389_DS_:
                                    1- 1713     	.line	753, "main.c"; 	if(pwStep > tempValue)
                                    1- 1714     	BANKSEL	_pwStep
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 01rr                      1- 1715     	MOVR	_pwStep,W
                                    1- 1716     	BANKSEL	r0x103E
     016B rrrr                      3-  110 m1      .banksel ram_address
     016C 00rr                      1- 1717     	MOVAR	r0x103E
                                    1- 1718     	BANKSEL	r0x103F
     016D rrrr                      3-  110 m1      .banksel ram_address
     016E 02rr                      1- 1719     	CLRR	r0x103F
     016F 2100                      1- 1720     	MOVIA	0x00
                                    1- 1721     	BANKSEL	r0x103D
     0170 rrrr                      3-  110 m1      .banksel ram_address
     0171 04rr                      1- 1722     	SUBAR	r0x103D,W
     0172 0903                      1- 1723     	BTRSS	STATUS,2
                                    1- 1724     	MGOTO	_00470_DS_
     0173 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1725     	BANKSEL	r0x103E
     0174 rrrr                      3-  110 m1      .banksel ram_address
     0175 01rr                      1- 1726     	MOVR	r0x103E,W
                                    1- 1727     	BANKSEL	r0x103C
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 04rr                      1- 1728     	SUBAR	r0x103C,W
     0178                           1- 1729     _00470_DS_:
     0178 0C03                      1- 1730     	BTRSC	STATUS,0
                                    1- 1731     	MGOTO	_00404_DS_
     0179 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1732     	.line	755, "main.c"; 	if(++count5s > 500)
                                    1- 1733     	BANKSEL	_count5s
     017A rrrr                      3-  110 m1      .banksel ram_address
     017B 05rr                      1- 1734     	INCR	_count5s,F
     017C 0D03                      1- 1735     	BTRSC	STATUS,2
     017D 05rr                      1- 1736     	INCR	(_count5s + 1),F
                                    1- 1737     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1738     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     017E 2101                      1- 1739     	MOVIA	0x01
     017F 04rr                      1- 1740     	SUBAR	(_count5s + 1),W
     0180 0903                      1- 1741     	BTRSS	STATUS,2
                                    1- 1742     	MGOTO	_00471_DS_
     0181 3rrr                      3-   63 m1      LGOTO rom_address
     0182 21F5                      1- 1743     	MOVIA	0xf5
     0183 04rr                      1- 1744     	SUBAR	_count5s,W
     0184                           1- 1745     _00471_DS_:
     0184 0803                      1- 1746     	BTRSS	STATUS,0
                                    1- 1747     	MGOTO	_00404_DS_
     0185 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1748     	.line	757, "main.c"; 	count5s = 0;
                                    1- 1749     	BANKSEL	_count5s
     0186 rrrr                      3-  110 m1      .banksel ram_address
     0187 02rr                      1- 1750     	CLRR	_count5s
     0188 02rr                      1- 1751     	CLRR	(_count5s + 1)
                                    1- 1752     	.line	758, "main.c"; 	pwStep--;
                                    1- 1753     	BANKSEL	_pwStep
     0189 rrrr                      3-  110 m1      .banksel ram_address
     018A 06rr                      1- 1754     	DECR	_pwStep,F
     018B                           1- 1755     _00404_DS_:
                                    1- 1756     	.line	764, "main.c"; 	}
                                    1- 1757     	RETURN	
     018B 0010                      3-   40 m1      ret
                                    1- 1758     ; exit point of _checkBat
                                    1- 1760     ;***
                                    1- 1761     ;  pBlock Stats: dbName = C
                                    1- 1762     ;***
                                    1- 1763     ;has an exit
                                    1- 1764     ;functions called:
                                    1- 1765     ;   _delay
                                    1- 1766     ;   _delay
                                    1- 1767     ;; Starting pCode block
                                    1- 1768     .segment "code"; module=main, function=_initAD
     0000                           1- 1770     _initAD:
                                    1- 1771     ; 2 exit points
                                    1- 1772     	.line	646, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1773     	MOVIA	0x80
     0001 00rr                      1- 1774     	MOVAR	_ADMD
                                    1- 1775     	.line	651, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1776     	CLRR	_ADVREFH
                                    1- 1777     	.line	656, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1778     	MOVIA	0x10
     0004 00rr                      1- 1779     	MOVAR	_ADR
                                    1- 1780     	.line	660, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1781     	MOVIA	0x03
     0006 00rr                      1- 1782     	MOVAR	_ADCR
                                    1- 1783     	.line	667, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1784     	BSR	_ADMDbits,4
                                    1- 1785     	.line	668, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1786     	MOVIA	0x32
                                    1- 1787     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1788     	.line	669, "main.c"; 	}
                                    1- 1789     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1790     ; exit point of _initAD
                                    1- 1792     ;***
                                    1- 1793     ;  pBlock Stats: dbName = C
                                    1- 1794     ;***
                                    1- 1795     ;has an exit
                                    1- 1796     ;functions called:
                                    1- 1797     ;   _keyRead
                                    1- 1798     ;   _keyRead
                                    1- 1799     ;1 compiler assigned register :
                                    1- 1800     ;   r0x1043
                                    1- 1801     ;; Starting pCode block
                                    1- 1802     .segment "code"; module=main, function=_keyCtr
                                    1- 1804     ;local variable name mapping:
     0000                           1- 1806     _keyCtr:
                                    1- 1807     ; 2 exit points
                                    1- 1808     	.line	599, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1809     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1810     	COMR	_PORTA,W
                                    1- 1811     	BANKSEL	r0x1043
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1812     	MOVAR	r0x1043
     0004 2180                      1- 1813     	MOVIA	0x80
     0005 10rr                      1- 1814     	ANDAR	r0x1043,F
     0006 01rr                      1- 1815     	MOVR	r0x1043,W
                                    1- 1816     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1817     	BANKSEL	r0x1043
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1818     	MOVAR	r0x1043
                                    1- 1819     	.line	600, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1820     	XORIA	0x01
     000B 0903                      1- 1821     	BTRSS	STATUS,2
                                    1- 1822     	MGOTO	_00350_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1823     	.line	602, "main.c"; 	if(pwFlag)
                                    1- 1824     	BANKSEL	_pwFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1825     	MOVR	_pwFlag,W
     000F 0D03                      1- 1826     	BTRSC	STATUS,2
                                    1- 1827     	MGOTO	_00352_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1828     	.line	604, "main.c"; 	if(showFlag == 0)
                                    1- 1829     	BANKSEL	_showFlag
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 1830     	MOVR	_showFlag,W
     0013 0903                      1- 1831     	BTRSS	STATUS,2
                                    1- 1832     	MGOTO	_00338_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1833     	.line	607, "main.c"; 	pwShowTime = 3;
     0015 2103                      1- 1834     	MOVIA	0x03
                                    1- 1835     	BANKSEL	_pwShowTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1836     	MOVAR	_pwShowTime
                                    1- 1837     	.line	608, "main.c"; 	offShowTime = 0;
                                    1- 1838     	BANKSEL	_offShowTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1839     	CLRR	_offShowTime
                                    1- 1840     	MGOTO	_00352_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1- 1841     _00338_DS_:
                                    1- 1842     	.line	612, "main.c"; 	pwShowTime = 0;
                                    1- 1843     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 1844     	CLRR	_pwShowTime
                                    1- 1845     	.line	613, "main.c"; 	if(++workStep > 3)
                                    1- 1846     	BANKSEL	_workStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 05rr                      1- 1847     	INCR	_workStep,F
                                    1- 1848     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1849     ;;unsigned compare: left >= lit (0x4=4), size=1
     001F 2104                      1- 1850     	MOVIA	0x04
     0020 04rr                      1- 1851     	SUBAR	_workStep,W
     0021 0803                      1- 1852     	BTRSS	STATUS,0
                                    1- 1853     	MGOTO	_00336_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1854     	.line	614, "main.c"; 	workStep = 1;
     0023 2101                      1- 1855     	MOVIA	0x01
     0024 00rr                      1- 1856     	MOVAR	_workStep
     0025                           1- 1857     _00336_DS_:
                                    1- 1858     	.line	615, "main.c"; 	stepShowTime = 2;
     0025 2102                      1- 1859     	MOVIA	0x02
                                    1- 1860     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 1861     	MOVAR	_stepShowTime
                                    1- 1862     	.line	616, "main.c"; 	offShowTime = 0;
                                    1- 1863     	BANKSEL	_offShowTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 1864     	CLRR	_offShowTime
                                    1- 1865     	MGOTO	_00352_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 1866     _00350_DS_:
                                    1- 1867     	.line	620, "main.c"; 	else if(kclick == 2)
                                    1- 1868     	BANKSEL	r0x1043
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 1869     	MOVR	r0x1043,W
     002D 2402                      1- 1870     	XORIA	0x02
     002E 0903                      1- 1871     	BTRSS	STATUS,2
                                    1- 1872     	MGOTO	_00352_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1873     	.line	622, "main.c"; 	if(pwFlag)
                                    1- 1874     	BANKSEL	_pwFlag
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1875     	MOVR	_pwFlag,W
     0032 0D03                      1- 1876     	BTRSC	STATUS,2
                                    1- 1877     	MGOTO	_00345_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1878     	.line	624, "main.c"; 	pwFlag = 0;		//关机
     0034 02rr                      1- 1879     	CLRR	_pwFlag
                                    1- 1880     	.line	625, "main.c"; 	workStep = 0;
                                    1- 1881     	BANKSEL	_workStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 1882     	CLRR	_workStep
                                    1- 1883     	.line	626, "main.c"; 	pwShowTime = 0;
                                    1- 1884     	BANKSEL	_pwShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1- 1885     	CLRR	_pwShowTime
                                    1- 1886     	.line	627, "main.c"; 	stepShowTime = 0;
                                    1- 1887     	BANKSEL	_stepShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1888     	CLRR	_stepShowTime
                                    1- 1889     	.line	628, "main.c"; 	offShowTime = 5;
     003B 2105                      1- 1890     	MOVIA	0x05
                                    1- 1891     	BANKSEL	_offShowTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1892     	MOVAR	_offShowTime
                                    1- 1893     	MGOTO	_00352_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 1894     _00345_DS_:
                                    1- 1895     	.line	632, "main.c"; 	pwFlag = 1;		//开机
     003F 2101                      1- 1896     	MOVIA	0x01
                                    1- 1897     	BANKSEL	_pwFlag
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 1898     	MOVAR	_pwFlag
                                    1- 1899     	.line	633, "main.c"; 	pwShowTime = 3;
     0042 2103                      1- 1900     	MOVIA	0x03
                                    1- 1901     	BANKSEL	_pwShowTime
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1902     	MOVAR	_pwShowTime
                                    1- 1903     	.line	634, "main.c"; 	stepShowTime = 2;
     0045 2102                      1- 1904     	MOVIA	0x02
                                    1- 1905     	BANKSEL	_stepShowTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1906     	MOVAR	_stepShowTime
                                    1- 1907     	.line	635, "main.c"; 	offShowTime = 0;
                                    1- 1908     	BANKSEL	_offShowTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1909     	CLRR	_offShowTime
                                    1- 1910     	.line	636, "main.c"; 	if(workStep == 0)
                                    1- 1911     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 1912     	MOVR	_workStep,W
     004C 0903                      1- 1913     	BTRSS	STATUS,2
                                    1- 1914     	MGOTO	_00352_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1915     	.line	637, "main.c"; 	workStep = 1;
     004E 2101                      1- 1916     	MOVIA	0x01
     004F 00rr                      1- 1917     	MOVAR	_workStep
     0050                           1- 1918     _00352_DS_:
                                    1- 1919     	.line	640, "main.c"; 	}
                                    1- 1920     	RETURN	
     0050 0010                      3-   40 m1      ret
                                    1- 1921     ; exit point of _keyCtr
                                    1- 1923     ;***
                                    1- 1924     ;  pBlock Stats: dbName = C
                                    1- 1925     ;***
                                    1- 1926     ;has an exit
                                    1- 1927     ;1 compiler assigned register :
                                    1- 1928     ;   r0x1042
                                    1- 1929     ;; Starting pCode block
                                    1- 1930     .segment "code"; module=main, function=_keyRead
                                    1- 1932     ;local variable name mapping:
     0000                           1- 1934     _keyRead:
                                    1- 1935     ; 2 exit points
                                    1- 1936     	.line	564, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1937     	BANKSEL	r0x1042
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1938     	MOVAR	r0x1042
                                    1- 1939     	.line	566, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1940     	MOVR	r0x1042,W
     0003 0D03                      1- 1941     	BTRSC	STATUS,2
                                    1- 1942     	MGOTO	_00328_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1943     	.line	568, "main.c"; 	keyCount++;
                                    1- 1944     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1945     	INCR	_keyCount,F
                                    1- 1946     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1947     	.line	569, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1948     	MOVIA	0xc8
     0008 04rr                      1- 1949     	SUBAR	_keyCount,W
     0009 0803                      1- 1950     	BTRSS	STATUS,0
                                    1- 1951     	MGOTO	_00329_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1952     	.line	571, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1953     	MOVIA	0xc8
     000C 00rr                      1- 1954     	MOVAR	_keyCount
                                    1- 1955     	.line	572, "main.c"; 	if(!longPressFlag)
                                    1- 1956     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1957     	MOVR	_longPressFlag,W
     000F 0903                      1- 1958     	BTRSS	STATUS,2
                                    1- 1959     	MGOTO	_00329_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1960     	.line	574, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 1961     	MOVIA	0x01
     0012 00rr                      1- 1962     	MOVAR	_longPressFlag
                                    1- 1963     	.line	575, "main.c"; 	return 2;
     0013 2102                      1- 1964     	MOVIA	0x02
                                    1- 1965     	MGOTO	_00330_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1966     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 1967     _00328_DS_:
                                    1- 1968     	.line	581, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 1969     	MOVIA	0xc8
                                    1- 1970     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 1971     	SUBAR	_keyCount,W
     0018 0803                      1- 1972     	BTRSS	STATUS,0
                                    1- 1973     	MGOTO	_00325_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1974     	.line	583, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 1975     	CLRR	_keyCount
                                    1- 1976     	.line	584, "main.c"; 	longPressFlag = 0;
                                    1- 1977     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 1978     	CLRR	_longPressFlag
                                    1- 1979     	.line	585, "main.c"; 	return	0;
     001D 2100                      1- 1980     	MOVIA	0x00
                                    1- 1981     	MGOTO	_00330_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1982     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 1983     _00325_DS_:
                                    1- 1984     	.line	587, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 1985     	MOVIA	0x04
                                    1- 1986     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 1987     	SUBAR	_keyCount,W
     0022 0803                      1- 1988     	BTRSS	STATUS,0
                                    1- 1989     	MGOTO	_00326_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1990     	.line	589, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 1991     	CLRR	_keyCount
                                    1- 1992     	.line	590, "main.c"; 	return	1;
     0025 2101                      1- 1993     	MOVIA	0x01
                                    1- 1994     	MGOTO	_00330_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 1995     _00326_DS_:
                                    1- 1996     	.line	592, "main.c"; 	keyCount = 0;
                                    1- 1997     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 1998     	CLRR	_keyCount
     0029                           1- 1999     _00329_DS_:
                                    1- 2000     	.line	594, "main.c"; 	return 0;
     0029 2100                      1- 2001     	MOVIA	0x00
     002A                           1- 2002     _00330_DS_:
                                    1- 2003     	.line	595, "main.c"; 	}
                                    1- 2004     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2005     ; exit point of _keyRead
                                    1- 2007     ;***
                                    1- 2008     ;  pBlock Stats: dbName = C
                                    1- 2009     ;***
                                    1- 2010     ;has an exit
                                    1- 2011     ;; Starting pCode block
                                    1- 2012     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2014     _pwmStop:
                                    1- 2015     ; 2 exit points
                                    1- 2016     	.line	558, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2017     	CLRA	
     0001 00rr                      1- 2018     	SFUN	_T2CR1
                                    1- 2019     	.line	559, "main.c"; 	}
                                    1- 2020     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2021     ; exit point of _pwmStop
                                    1- 2023     ;***
                                    1- 2024     ;  pBlock Stats: dbName = C
                                    1- 2025     ;***
                                    1- 2026     ;has an exit
                                    1- 2027     ;1 compiler assigned register :
                                    1- 2028     ;   r0x1044
                                    1- 2029     ;; Starting pCode block
                                    1- 2030     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2032     _pwmInit:
                                    1- 2033     ; 2 exit points
                                    1- 2034     	.line	546, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2035     	SFUNR	_T2CR1
                                    1- 2036     	BANKSEL	r0x1044
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2037     	MOVAR	r0x1044
     0003 0Frr                      1- 2038     	BTRSC	r0x1044,7
                                    1- 2039     	.line	547, "main.c"; 	return;
                                    1- 2040     	MGOTO	_00309_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2041     	.line	548, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2042     	CLRR	_TMRH
                                    1- 2043     	.line	549, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2044     	MOVIA	0x64
     0007 00rr                      1- 2045     	SFUN	_TMR2
                                    1- 2046     	.line	550, "main.c"; 	PWM2DUTY = 100;				// 		
     0008 00rr                      1- 2047     	SFUN	_PWM2DUTY
                                    1- 2048     	.line	552, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2101                      1- 2049     	MOVIA	0x01
     000A 00rr                      1- 2050     	SFUN	_T2CR2
                                    1- 2051     	.line	553, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 2052     	MOVIA	0x83
     000C 00rr                      1- 2053     	SFUN	_T2CR1
     000D                           1- 2054     _00309_DS_:
                                    1- 2055     	.line	554, "main.c"; 	}
                                    1- 2056     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 2057     ; exit point of _pwmInit
                                    1- 2059     ;***
                                    1- 2060     ;  pBlock Stats: dbName = C
                                    1- 2061     ;***
                                    1- 2062     ;has an exit
                                    1- 2063     ;functions called:
                                    1- 2064     ;   _setInput
                                    1- 2065     ;   _pwmStop
                                    1- 2066     ;   _setInput
                                    1- 2067     ;   _pwmStop
                                    1- 2068     ;; Starting pCode block
                                    1- 2069     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2071     _gotoSleep:
                                    1- 2072     ; 2 exit points
                                    1- 2073     	.line	513, "main.c"; 	sleepFlag = 0;
                                    1- 2074     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2075     	CLRR	_sleepFlag
                                    1- 2076     	.line	514, "main.c"; 	waitTime = 0;
                                    1- 2077     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2078     	CLRR	_waitTime
     0004 02rr                      1- 2079     	CLRR	(_waitTime + 1)
                                    1- 2080     	.line	515, "main.c"; 	setInput();
                                    1- 2081     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2082     	.line	516, "main.c"; 	sleepTime = 0;
                                    1- 2083     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2084     	CLRR	_sleepTime
                                    1- 2085     	.line	517, "main.c"; 	pwFlag = 0;
                                    1- 2086     	BANKSEL	_pwFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2087     	CLRR	_pwFlag
                                    1- 2088     	.line	518, "main.c"; 	pwmStop();
                                    1- 2089     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2090     	.line	519, "main.c"; 	AWUCON = 0xA0;
     000B 21A0                      1- 2091     	MOVIA	0xa0
     000C 00rr                      1- 2092     	MOVAR	_AWUCON
                                    1- 2093     	.line	521, "main.c"; 	IOSTB = C_PB3_Input;
     000D 2108                      1- 2094     	MOVIA	0x08
     000E 000r                      1- 2095     	IOST	_IOSTB
                                    1- 2096     	.line	522, "main.c"; 	PORTA = 0X00;
                                    1- 2097     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2098     	CLRR	_PORTA
                                    1- 2099     	.line	523, "main.c"; 	PORTB = 0X00;
     0011 02rr                      1- 2100     	CLRR	_PORTB
                                    1- 2101     	.line	524, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2102     	MOVIA	0x02
     0013 00rr                      1- 2103     	MOVAR	_INTE
                                    1- 2104     	.line	525, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2105     	MOVIA	0x18
     0015 00rr                      1- 2106     	MOVAR	_PCON
                                    1- 2107     	.line	526, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2108     	CLRR	_INTF
                                    1- 2109     	.line	527, "main.c"; 	CLRWDT();
     0017 0002                      1- 2110     	clrwdt
                                    1- 2111     	.line	528, "main.c"; 	ENI();
     0018 0004                      1- 2112     	ENI
                                    1- 2113     	.line	529, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2114     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1- 2115     	BTRSC	_PORTA,5
                                    1- 2116     	MGOTO	_00302_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2117     	.line	530, "main.c"; 	SLEEP();
     001C 0001                      1- 2118     	sleep
     001D                           1- 2119     _00302_DS_:
                                    1- 2120     	.line	531, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2121     	CLRR	_AWUCON
                                    1- 2122     	.line	532, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001E 21A0                      1- 2123     	MOVIA	0xa0
     001F 000r                      1- 2124     	IOST	_IOSTA
                                    1- 2125     	.line	533, "main.c"; 	IOSTB = C_PB3_Input ;
     0020 2108                      1- 2126     	MOVIA	0x08
     0021 000r                      1- 2127     	IOST	_IOSTB
                                    1- 2128     	.line	534, "main.c"; 	PORTA = 0x00;
                                    1- 2129     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2130     	CLRR	_PORTA
                                    1- 2131     	.line	535, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2103                      1- 2132     	MOVIA	0x03
     0025 00rr                      1- 2133     	MOVAR	_INTE
                                    1- 2134     	.line	536, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2135     	CLRR	_INTF
                                    1- 2136     	.line	538, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2137     	MOVIA	0xb8
     0028 00rr                      1- 2138     	MOVAR	_PCON
                                    1- 2139     	.line	541, "main.c"; 	}
                                    1- 2140     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2141     ; exit point of _gotoSleep
                                    1- 2143     ;***
                                    1- 2144     ;  pBlock Stats: dbName = C
                                    1- 2145     ;***
                                    1- 2146     ;has an exit
                                    1- 2147     ;functions called:
                                    1- 2148     ;   _setInput
                                    1- 2149     ;   _setInput
                                    1- 2150     ;; Starting pCode block
                                    1- 2151     .segment "code"; module=main, function=_initSys
     0000                           1- 2153     _initSys:
                                    1- 2154     ; 2 exit points
                                    1- 2155     	.line	481, "main.c"; 	DISI();
     0000 0013                      1- 2156     	DISI
                                    1- 2157     	.line	482, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 2158     	MOVIA	0xa0
     0002 000r                      1- 2159     	IOST	_IOSTA
                                    1- 2160     	.line	483, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2161     	MOVIA	0x08
     0004 000r                      1- 2162     	IOST	_IOSTB
                                    1- 2163     	.line	484, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2164     	CLRR	_PORTB
                                    1- 2165     	.line	485, "main.c"; 	PORTA = 0x00;
                                    1- 2166     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2167     	CLRR	_PORTA
                                    1- 2168     	.line	487, "main.c"; 	setInput();
                                    1- 2169     	MCALL	_setInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2170     	.line	488, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2171     	MOVIA	0x7f
     000A 000r                      1- 2172     	IOST	_APHCON
                                    1- 2173     	.line	489, "main.c"; 	BPHCON = 0xFF;		//PB3上拉
     000B 21FF                      1- 2174     	MOVIA	0xff
     000C 00rr                      1- 2175     	MOVAR	_BPHCON
                                    1- 2176     	.line	490, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2177     	MOVAR	_ABPLCON
                                    1- 2178     	.line	492, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2103                      1- 2179     	MOVIA	0x03
     000F 00rr                      1- 2180     	MOVAR	_INTE
                                    1- 2181     	.line	494, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2182     	CLRA	
     0011 000r                      1- 2183     	IOST	_PCON1
                                    1- 2184     	.line	496, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2185     	MOVIA	0x37
     0013 00rr                      1- 2186     	MOVAR	_TMR0
                                    1- 2187     	.line	497, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2188     	CLRA	
     0015 0003                      1- 2189     	T0MD	
                                    1- 2190     	.line	499, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2191     	MOVIA	0x01
     0017 000r                      1- 2192     	IOST	_PCON1
                                    1- 2193     	.line	502, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2194     	MOVIA	0x98
     0019 00rr                      1- 2195     	MOVAR	_PCON
                                    1- 2196     	.line	505, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2197     	MOVIA	0x01
     001B 000r                      1- 2198     	IOST	_PCON1
                                    1- 2199     	.line	506, "main.c"; 	ENI();
     001C 0004                      1- 2200     	ENI
                                    1- 2201     	.line	507, "main.c"; 	}
                                    1- 2202     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2203     ; exit point of _initSys
                                    1- 2205     ;***
                                    1- 2206     ;  pBlock Stats: dbName = C
                                    1- 2207     ;***
                                    1- 2208     ;has an exit
                                    1- 2209     ;functions called:
                                    1- 2210     ;   __gptrget1
                                    1- 2211     ;   _showNubBaiwei
                                    1- 2212     ;   __gptrget1
                                    1- 2213     ;   _showNubShiwei
                                    1- 2214     ;   __gptrget1
                                    1- 2215     ;   _showNubGewei
                                    1- 2216     ;   _setInput
                                    1- 2217     ;   __gptrget1
                                    1- 2218     ;   _showNubBaiwei
                                    1- 2219     ;   __gptrget1
                                    1- 2220     ;   _showNubShiwei
                                    1- 2221     ;   __gptrget1
                                    1- 2222     ;   _showNubGewei
                                    1- 2223     ;   _setInput
                                    1- 2224     ;5 compiler assigned registers:
                                    1- 2225     ;   r0x1045
                                    1- 2226     ;   r0x1046
                                    1- 2227     ;   STK01
                                    1- 2228     ;   STK00
                                    1- 2229     ;   r0x1047
                                    1- 2230     ;; Starting pCode block
                                    1- 2231     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2233     _refreshNub:
                                    1- 2234     ; 2 exit points
                                    1- 2235     	.line	472, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 2236     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2237     	MOVR	_baiweiNum,W
     0002 25rr                      1- 2238     	ADDIA	(_numArray + 0)
                                    1- 2239     	BANKSEL	r0x1045
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2240     	MOVAR	r0x1045
     0005 21rr                      1- 2241     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 2242     	BTRSC	STATUS,0
     0007 2501                      1- 2243     	ADDIA	0x01
                                    1- 2244     	BANKSEL	r0x1046
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2245     	MOVAR	r0x1046
                                    1- 2246     	BANKSEL	r0x1045
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2247     	MOVR	r0x1045,W
     000C 00rr                      1- 2248     	MOVAR	STK01
                                    1- 2249     	BANKSEL	r0x1046
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2250     	MOVR	r0x1046,W
     000F 00rr                      1- 2251     	MOVAR	STK00
     0010 2100                      1- 2252     	MOVIA	0x00
                                    1- 2253     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2254     ;;103	MOVAR	r0x1047
                                    1- 2255     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2256     	.line	473, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2257     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2258     	MOVR	_shiweiNum,W
     0015 25rr                      1- 2259     	ADDIA	(_numArray + 0)
                                    1- 2260     	BANKSEL	r0x1045
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2261     	MOVAR	r0x1045
     0018 21rr                      1- 2262     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 2263     	BTRSC	STATUS,0
     001A 2501                      1- 2264     	ADDIA	0x01
                                    1- 2265     	BANKSEL	r0x1046
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2266     	MOVAR	r0x1046
                                    1- 2267     	BANKSEL	r0x1045
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2268     	MOVR	r0x1045,W
     001F 00rr                      1- 2269     	MOVAR	STK01
                                    1- 2270     	BANKSEL	r0x1046
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2271     	MOVR	r0x1046,W
     0022 00rr                      1- 2272     	MOVAR	STK00
     0023 2100                      1- 2273     	MOVIA	0x00
                                    1- 2274     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2275     ;;102	MOVAR	r0x1047
                                    1- 2276     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2277     	.line	474, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2278     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2279     	MOVR	_geweiNum,W
     0028 25rr                      1- 2280     	ADDIA	(_numArray + 0)
                                    1- 2281     	BANKSEL	r0x1045
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2282     	MOVAR	r0x1045
     002B 21rr                      1- 2283     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2284     	BTRSC	STATUS,0
     002D 2501                      1- 2285     	ADDIA	0x01
                                    1- 2286     	BANKSEL	r0x1046
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2287     	MOVAR	r0x1046
                                    1- 2288     	BANKSEL	r0x1045
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2289     	MOVR	r0x1045,W
     0032 00rr                      1- 2290     	MOVAR	STK01
                                    1- 2291     	BANKSEL	r0x1046
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2292     	MOVR	r0x1046,W
     0035 00rr                      1- 2293     	MOVAR	STK00
     0036 2100                      1- 2294     	MOVIA	0x00
                                    1- 2295     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2296     ;;2	MOVAR	r0x1047
                                    1- 2297     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2298     	.line	475, "main.c"; 	setInput();
                                    1- 2299     	MCALL	_setInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2300     	.line	476, "main.c"; 	}
                                    1- 2301     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 2302     ; exit point of _refreshNub
                                    1- 2304     ;***
                                    1- 2305     ;  pBlock Stats: dbName = C
                                    1- 2306     ;***
                                    1- 2307     ;has an exit
                                    1- 2308     ;functions called:
                                    1- 2309     ;   _delay
                                    1- 2310     ;   _delay
                                    1- 2311     ;; Starting pCode block
                                    1- 2312     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2314     _checkIRKey:
                                    1- 2315     ; 2 exit points
                                    1- 2316     	.line	424, "main.c"; 	if(pwFlag == 0)
                                    1- 2317     	BANKSEL	_pwFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2318     	MOVR	_pwFlag,W
     0002 0903                      1- 2319     	BTRSS	STATUS,2
                                    1- 2320     	MGOTO	_00275_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2321     	.line	426, "main.c"; 	irStep = 0;
                                    1- 2322     	BANKSEL	_irStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2323     	CLRR	_irStep
                                    1- 2324     	.line	427, "main.c"; 	return;
                                    1- 2325     	MGOTO	_00288_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
     0007                           1- 2326     _00275_DS_:
                                    1- 2327     	.line	429, "main.c"; 	delay(2);
     0007 2102                      1- 2328     	MOVIA	0x02
                                    1- 2329     	MCALL	_delay
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2330     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2331     ;;unsigned compare: left >= lit (0xD=13), size=1
                                    1- 2332     	.line	430, "main.c"; 	if(revCount > 12 && revCount < 20 && irStep == 0)
     0009 210D                      1- 2333     	MOVIA	0x0d
                                    1- 2334     	BANKSEL	_revCount
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 2335     	SUBAR	_revCount,W
     000C 0803                      1- 2336     	BTRSS	STATUS,0
                                    1- 2337     	MGOTO	_00288_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2338     ;;unsigned compare: left < lit (0x14=20), size=1
     000E 2114                      1- 2339     	MOVIA	0x14
     000F 04rr                      1- 2340     	SUBAR	_revCount,W
     0010 0C03                      1- 2341     	BTRSC	STATUS,0
                                    1- 2342     	MGOTO	_00288_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2343     	BANKSEL	_irStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2344     	MOVR	_irStep,W
     0014 0903                      1- 2345     	BTRSS	STATUS,2
                                    1- 2346     	MGOTO	_00288_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2347     	.line	433, "main.c"; 	if(workStep == 1)
                                    1- 2348     	BANKSEL	_workStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2349     	MOVR	_workStep,W
     0018 2401                      1- 2350     	XORIA	0x01
     0019 0903                      1- 2351     	BTRSS	STATUS,2
                                    1- 2352     	MGOTO	_00282_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2353     	.line	435, "main.c"; 	workTime = 50;
     001B 2132                      1- 2354     	MOVIA	0x32
                                    1- 2355     	BANKSEL	_workTime
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1- 2356     	MOVAR	_workTime
                                    1- 2357     	MGOTO	_00283_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 2358     _00282_DS_:
                                    1- 2359     	.line	437, "main.c"; 	else if(workStep == 2)
                                    1- 2360     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 2361     	MOVR	_workStep,W
     0021 2402                      1- 2362     	XORIA	0x02
     0022 0903                      1- 2363     	BTRSS	STATUS,2
                                    1- 2364     	MGOTO	_00279_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2365     	.line	439, "main.c"; 	workTime = 100;
     0024 2164                      1- 2366     	MOVIA	0x64
                                    1- 2367     	BANKSEL	_workTime
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2368     	MOVAR	_workTime
                                    1- 2369     	MGOTO	_00283_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 2370     _00279_DS_:
                                    1- 2371     	.line	441, "main.c"; 	else if(workStep == 3)
                                    1- 2372     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2373     	MOVR	_workStep,W
     002A 2403                      1- 2374     	XORIA	0x03
     002B 0903                      1- 2375     	BTRSS	STATUS,2
                                    1- 2376     	MGOTO	_00283_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2377     	.line	443, "main.c"; 	workTime = 150;
     002D 2196                      1- 2378     	MOVIA	0x96
                                    1- 2379     	BANKSEL	_workTime
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2380     	MOVAR	_workTime
     0030                           1- 2381     _00283_DS_:
                                    1- 2382     	.line	446, "main.c"; 	irStep = 1;
     0030 2101                      1- 2383     	MOVIA	0x01
                                    1- 2384     	BANKSEL	_irStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2385     	MOVAR	_irStep
     0033                           1- 2386     _00288_DS_:
                                    1- 2387     	.line	465, "main.c"; 	}
                                    1- 2388     	RETURN	
     0033 0010                      3-   40 m1      ret
                                    1- 2389     ; exit point of _checkIRKey
                                    1- 2391     ;***
                                    1- 2392     ;  pBlock Stats: dbName = C
                                    1- 2393     ;***
                                    1- 2394     ;has an exit
                                    1- 2395     ;functions called:
                                    1- 2396     ;   _pwmInit
                                    1- 2397     ;   _pwmStop
                                    1- 2398     ;   __divuchar
                                    1- 2399     ;   __moduchar
                                    1- 2400     ;   __moduint
                                    1- 2401     ;   __divuchar
                                    1- 2402     ;   __moduchar
                                    1- 2403     ;   _pwmInit
                                    1- 2404     ;   _pwmStop
                                    1- 2405     ;   __divuchar
                                    1- 2406     ;   __moduchar
                                    1- 2407     ;   __moduint
                                    1- 2408     ;   __divuchar
                                    1- 2409     ;   __moduchar
                                    1- 2410     ;5 compiler assigned registers:
                                    1- 2411     ;   r0x1048
                                    1- 2412     ;   STK00
                                    1- 2413     ;   STK02
                                    1- 2414     ;   STK01
                                    1- 2415     ;   r0x1049
                                    1- 2416     ;; Starting pCode block
                                    1- 2417     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2419     _chrgCtr:
                                    1- 2420     ; 2 exit points
                                    1- 2421     	.line	300, "main.c"; 	fullFlag = 0;
                                    1- 2422     	BANKSEL	_fullFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2423     	CLRR	_fullFlag
                                    1- 2424     	.line	301, "main.c"; 	BPHCON |= 0x04;
     0002 19rr                      1- 2425     	BSR	_BPHCON,2
                                    1- 2426     	.line	302, "main.c"; 	IOSTB &= 0xFB;
     0003 001r                      1- 2427     	IOSTR	_IOSTB
                                    1- 2428     	BANKSEL	r0x1048
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2429     	MOVAR	r0x1048
     0006 1Drr                      1- 2430     	BCR	r0x1048,2
     0007 01rr                      1- 2431     	MOVR	r0x1048,W
     0008 000r                      1- 2432     	IOST	_IOSTB
                                    1- 2433     	.line	303, "main.c"; 	if(workTime > 0)
                                    1- 2434     	BANKSEL	_workTime
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 2435     	MOVR	_workTime,W
     000B 0D03                      1- 2436     	BTRSC	STATUS,2
                                    1- 2437     	MGOTO	_00191_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2438     	.line	305, "main.c"; 	pwmInit();
                                    1- 2439     	MCALL	_pwmInit
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2440     	.line	306, "main.c"; 	workTime--;
                                    1- 2441     	BANKSEL	_workTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1- 2442     	DECR	_workTime,F
                                    1- 2443     	MGOTO	_00192_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1- 2444     _00191_DS_:
                                    1- 2445     	.line	310, "main.c"; 	pwmStop();
                                    1- 2446     	MCALL	_pwmStop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2447     	.line	311, "main.c"; 	PORTB &= 0xFB;
     0012 1Drr                      1- 2448     	BCR	_PORTB,2
     0013                           1- 2449     _00192_DS_:
                                    1- 2450     	.line	313, "main.c"; 	if(stepShowTime)
                                    1- 2451     	BANKSEL	_stepShowTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2452     	MOVR	_stepShowTime,W
     0015 0D03                      1- 2453     	BTRSC	STATUS,2
                                    1- 2454     	MGOTO	_00223_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2455     	.line	315, "main.c"; 	showFlag = 1;
     0017 2101                      1- 2456     	MOVIA	0x01
                                    1- 2457     	BANKSEL	_showFlag
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 2458     	MOVAR	_showFlag
                                    1- 2459     	.line	316, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2460     	BANKSEL	_shiweiNum
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 2461     	CLRR	_shiweiNum
                                    1- 2462     	BANKSEL	_baiweiNum
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 2463     	CLRR	_baiweiNum
                                    1- 2464     	.line	317, "main.c"; 	geweiNum = workStep;
                                    1- 2465     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 2466     	MOVR	_workStep,W
                                    1- 2467     	BANKSEL	_geweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2468     	MOVAR	_geweiNum
                                    1- 2469     	.line	317, "main.c"; 	}
                                    1- 2470     	MGOTO	_00225_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 2471     _00223_DS_:
                                    1- 2472     	.line	319, "main.c"; 	else if(pwShowTime || workTime)
                                    1- 2473     	BANKSEL	_pwShowTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 2474     	MOVR	_pwShowTime,W
     0025 0903                      1- 2475     	BTRSS	STATUS,2
                                    1- 2476     	MGOTO	_00218_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2477     	BANKSEL	_workTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2478     	MOVR	_workTime,W
     0029 0D03                      1- 2479     	BTRSC	STATUS,2
                                    1- 2480     	MGOTO	_00219_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 2481     _00218_DS_:
                                    1- 2482     	.line	321, "main.c"; 	showFlag = 1;
     002B 2101                      1- 2483     	MOVIA	0x01
                                    1- 2484     	BANKSEL	_showFlag
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2485     	MOVAR	_showFlag
                                    1- 2486     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2487     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2488     	.line	322, "main.c"; 	if(pwStep > 99)
     002E 2164                      1- 2489     	MOVIA	0x64
                                    1- 2490     	BANKSEL	_pwStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 04rr                      1- 2491     	SUBAR	_pwStep,W
     0031 0803                      1- 2492     	BTRSS	STATUS,0
                                    1- 2493     	MGOTO	_00194_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2494     	.line	324, "main.c"; 	baiweiNum = 1;
     0033 2101                      1- 2495     	MOVIA	0x01
                                    1- 2496     	BANKSEL	_baiweiNum
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2497     	MOVAR	_baiweiNum
                                    1- 2498     	.line	325, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2499     	BANKSEL	_geweiNum
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2500     	CLRR	_geweiNum
                                    1- 2501     	BANKSEL	_shiweiNum
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 2502     	CLRR	_shiweiNum
                                    1- 2503     	MGOTO	_00225_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1- 2504     _00194_DS_:
                                    1- 2505     	.line	329, "main.c"; 	baiweiNum = 0;
                                    1- 2506     	BANKSEL	_baiweiNum
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 2507     	CLRR	_baiweiNum
                                    1- 2508     	.line	330, "main.c"; 	shiweiNum = pwStep/10;
     003D 210A                      1- 2509     	MOVIA	0x0a
     003E 00rr                      1- 2510     	MOVAR	STK00
                                    1- 2511     	BANKSEL	_pwStep
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 2512     	MOVR	_pwStep,W
                                    1- 2513     	MCALL	__divuchar
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2514     	BANKSEL	_shiweiNum
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 2515     	MOVAR	_shiweiNum
                                    1- 2516     	.line	331, "main.c"; 	geweiNum = pwStep%10;
     0044 210A                      1- 2517     	MOVIA	0x0a
     0045 00rr                      1- 2518     	MOVAR	STK00
                                    1- 2519     	BANKSEL	_pwStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 2520     	MOVR	_pwStep,W
                                    1- 2521     	MCALL	__moduchar
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2522     	BANKSEL	_geweiNum
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2523     	MOVAR	_geweiNum
                                    1- 2524     	.line	331, "main.c"; 	}
                                    1- 2525     	MGOTO	_00225_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2526     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2527     ;;unsigned compare: left >= lit (0x6=6), size=1
     004C                           1- 2528     _00219_DS_:
                                    1- 2529     	.line	336, "main.c"; 	if(pwStep <= 5 && offShowTime == 0 && ((0x20 & PORTA) == 0))
     004C 2106                      1- 2530     	MOVIA	0x06
                                    1- 2531     	BANKSEL	_pwStep
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 04rr                      1- 2532     	SUBAR	_pwStep,W
     004F 0C03                      1- 2533     	BTRSC	STATUS,0
                                    1- 2534     	MGOTO	_00214_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2535     	BANKSEL	_offShowTime
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2536     	MOVR	_offShowTime,W
     0053 0903                      1- 2537     	BTRSS	STATUS,2
                                    1- 2538     	MGOTO	_00214_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2539     	BANKSEL	_PORTA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 0Err                      1- 2540     	BTRSC	_PORTA,5
                                    1- 2541     	MGOTO	_00214_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2542     	.line	338, "main.c"; 	showFlag = 1;
     0058 2101                      1- 2543     	MOVIA	0x01
                                    1- 2544     	BANKSEL	_showFlag
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 2545     	MOVAR	_showFlag
                                    1- 2546     	.line	339, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2547     	BANKSEL	_shanTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 05rr                      1- 2548     	INCR	_shanTime,F
     005D 0D03                      1- 2549     	BTRSC	STATUS,2
     005E 05rr                      1- 2550     	INCR	(_shanTime + 1),F
                                    1- 2551     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2552     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     005F 2101                      1- 2553     	MOVIA	0x01
     0060 04rr                      1- 2554     	SUBAR	(_shanTime + 1),W
     0061 0903                      1- 2555     	BTRSS	STATUS,2
                                    1- 2556     	MGOTO	_00268_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063 21F5                      1- 2557     	MOVIA	0xf5
     0064 04rr                      1- 2558     	SUBAR	_shanTime,W
     0065                           1- 2559     _00268_DS_:
     0065 0803                      1- 2560     	BTRSS	STATUS,0
                                    1- 2561     	MGOTO	_00197_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2562     	.line	341, "main.c"; 	shanTime = 0;
                                    1- 2563     	BANKSEL	_shanTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 02rr                      1- 2564     	CLRR	_shanTime
     0069 02rr                      1- 2565     	CLRR	(_shanTime + 1)
                                    1- 2566     	.line	342, "main.c"; 	showFlag = 0;
                                    1- 2567     	BANKSEL	_showFlag
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 02rr                      1- 2568     	CLRR	_showFlag
     006C                           1- 2569     _00197_DS_:
                                    1- 2570     	.line	345, "main.c"; 	if(shanTime % 100 < 50)
     006C 2164                      1- 2571     	MOVIA	0x64
     006D 00rr                      1- 2572     	MOVAR	STK02
     006E 2100                      1- 2573     	MOVIA	0x00
     006F 00rr                      1- 2574     	MOVAR	STK01
                                    1- 2575     	BANKSEL	_shanTime
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 2576     	MOVR	_shanTime,W
     0072 00rr                      1- 2577     	MOVAR	STK00
     0073 01rr                      1- 2578     	MOVR	(_shanTime + 1),W
                                    1- 2579     	MCALL	__moduint
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2580     	BANKSEL	r0x1049
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 2581     	MOVAR	r0x1049
     0077 01rr                      1- 2582     	MOVR	STK00,W
                                    1- 2583     	BANKSEL	r0x1048
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 2584     	MOVAR	r0x1048
                                    1- 2585     ;;unsigned compare: left < lit (0x32=50), size=2
     007A 2100                      1- 2586     	MOVIA	0x00
                                    1- 2587     	BANKSEL	r0x1049
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 04rr                      1- 2588     	SUBAR	r0x1049,W
     007D 0903                      1- 2589     	BTRSS	STATUS,2
                                    1- 2590     	MGOTO	_00269_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F 2132                      1- 2591     	MOVIA	0x32
                                    1- 2592     	BANKSEL	r0x1048
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1- 2593     	SUBAR	r0x1048,W
     0082                           1- 2594     _00269_DS_:
     0082 0C03                      1- 2595     	BTRSC	STATUS,0
                                    1- 2596     	MGOTO	_00199_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2597     	.line	347, "main.c"; 	showFlag = 1;
     0084 2101                      1- 2598     	MOVIA	0x01
                                    1- 2599     	BANKSEL	_showFlag
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 2600     	MOVAR	_showFlag
                                    1- 2601     	.line	348, "main.c"; 	baiweiNum = 0;
                                    1- 2602     	BANKSEL	_baiweiNum
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 02rr                      1- 2603     	CLRR	_baiweiNum
                                    1- 2604     	.line	349, "main.c"; 	shiweiNum = 0;
                                    1- 2605     	BANKSEL	_shiweiNum
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 02rr                      1- 2606     	CLRR	_shiweiNum
                                    1- 2607     	.line	350, "main.c"; 	geweiNum = pwStep;
                                    1- 2608     	BANKSEL	_pwStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1- 2609     	MOVR	_pwStep,W
                                    1- 2610     	BANKSEL	_geweiNum
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 2611     	MOVAR	_geweiNum
                                    1- 2612     	MGOTO	_00225_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090                           1- 2613     _00199_DS_:
                                    1- 2614     	.line	354, "main.c"; 	showFlag = 0;
                                    1- 2615     	BANKSEL	_showFlag
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 02rr                      1- 2616     	CLRR	_showFlag
                                    1- 2617     	.line	354, "main.c"; 	}
                                    1- 2618     	MGOTO	_00225_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093                           1- 2619     _00214_DS_:
                                    1- 2620     	.line	357, "main.c"; 	else if(offShowTime > 0)
                                    1- 2621     	BANKSEL	_offShowTime
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 01rr                      1- 2622     	MOVR	_offShowTime,W
     0095 0D03                      1- 2623     	BTRSC	STATUS,2
                                    1- 2624     	MGOTO	_00211_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2625     	.line	359, "main.c"; 	showFlag = 1;
     0097 2101                      1- 2626     	MOVIA	0x01
                                    1- 2627     	BANKSEL	_showFlag
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 2628     	MOVAR	_showFlag
                                    1- 2629     	.line	360, "main.c"; 	baiweiNum = 0;
                                    1- 2630     	BANKSEL	_baiweiNum
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 02rr                      1- 2631     	CLRR	_baiweiNum
                                    1- 2632     	.line	361, "main.c"; 	shiweiNum = 10;
     009C 210A                      1- 2633     	MOVIA	0x0a
                                    1- 2634     	BANKSEL	_shiweiNum
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 2635     	MOVAR	_shiweiNum
                                    1- 2636     	.line	362, "main.c"; 	geweiNum = 10;
                                    1- 2637     	BANKSEL	_geweiNum
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 2638     	MOVAR	_geweiNum
                                    1- 2639     	.line	362, "main.c"; 	}
                                    1- 2640     	MGOTO	_00225_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
     00A2                           1- 2641     _00211_DS_:
                                    1- 2642     	.line	364, "main.c"; 	else if(0x20 & PORTA)
                                    1- 2643     	BANKSEL	_PORTA
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 0Arr                      1- 2644     	BTRSS	_PORTA,5
                                    1- 2645     	MGOTO	_00208_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2646     	.line	370, "main.c"; 	showFlag = 1;
     00A5 2101                      1- 2647     	MOVIA	0x01
                                    1- 2648     	BANKSEL	_showFlag
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 2649     	MOVAR	_showFlag
                                    1- 2650     	.line	374, "main.c"; 	if(fullFlag)
                                    1- 2651     	BANKSEL	_fullFlag
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 2652     	MOVR	_fullFlag,W
     00AA 0D03                      1- 2653     	BTRSC	STATUS,2
                                    1- 2654     	MGOTO	_00205_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2655     	.line	376, "main.c"; 	fullFlag = 1;
     00AC 2101                      1- 2656     	MOVIA	0x01
     00AD 00rr                      1- 2657     	MOVAR	_fullFlag
                                    1- 2658     	.line	378, "main.c"; 	baiweiNum = 1;
                                    1- 2659     	BANKSEL	_baiweiNum
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 2660     	MOVAR	_baiweiNum
                                    1- 2661     	.line	379, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2662     	BANKSEL	_geweiNum
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 02rr                      1- 2663     	CLRR	_geweiNum
                                    1- 2664     	BANKSEL	_shiweiNum
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 02rr                      1- 2665     	CLRR	_shiweiNum
                                    1- 2666     	.line	379, "main.c"; 	}
                                    1- 2667     	MGOTO	_00225_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
     00B5                           1- 2668     _00205_DS_:
                                    1- 2669     	.line	384, "main.c"; 	if(pwStep == 100)
                                    1- 2670     	BANKSEL	_pwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 2671     	MOVR	_pwStep,W
     00B7 2464                      1- 2672     	XORIA	0x64
     00B8 0903                      1- 2673     	BTRSS	STATUS,2
                                    1- 2674     	MGOTO	_00202_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2675     	.line	386, "main.c"; 	fullFlag = 1;
     00BA 2101                      1- 2676     	MOVIA	0x01
                                    1- 2677     	BANKSEL	_fullFlag
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 00rr                      1- 2678     	MOVAR	_fullFlag
                                    1- 2679     	.line	387, "main.c"; 	baiweiNum = 0;
                                    1- 2680     	BANKSEL	_baiweiNum
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 02rr                      1- 2681     	CLRR	_baiweiNum
                                    1- 2682     	.line	388, "main.c"; 	shiweiNum = 9;
     00BF 2109                      1- 2683     	MOVIA	0x09
                                    1- 2684     	BANKSEL	_shiweiNum
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 2685     	MOVAR	_shiweiNum
                                    1- 2686     	.line	389, "main.c"; 	geweiNum = 9;
                                    1- 2687     	BANKSEL	_geweiNum
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 2688     	MOVAR	_geweiNum
                                    1- 2689     	MGOTO	_00225_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
     00C5                           1- 2690     _00202_DS_:
                                    1- 2691     	.line	393, "main.c"; 	baiweiNum = 0;
                                    1- 2692     	BANKSEL	_baiweiNum
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 02rr                      1- 2693     	CLRR	_baiweiNum
                                    1- 2694     	.line	394, "main.c"; 	shiweiNum = pwStep/10;
     00C7 210A                      1- 2695     	MOVIA	0x0a
     00C8 00rr                      1- 2696     	MOVAR	STK00
                                    1- 2697     	BANKSEL	_pwStep
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 2698     	MOVR	_pwStep,W
                                    1- 2699     	MCALL	__divuchar
     00CB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2700     	BANKSEL	_shiweiNum
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 2701     	MOVAR	_shiweiNum
                                    1- 2702     	.line	395, "main.c"; 	geweiNum = pwStep%10;
     00CE 210A                      1- 2703     	MOVIA	0x0a
     00CF 00rr                      1- 2704     	MOVAR	STK00
                                    1- 2705     	BANKSEL	_pwStep
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 2706     	MOVR	_pwStep,W
                                    1- 2707     	MCALL	__moduchar
     00D2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2708     	BANKSEL	_geweiNum
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 2709     	MOVAR	_geweiNum
                                    1- 2710     	.line	395, "main.c"; 	}
                                    1- 2711     	MGOTO	_00225_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6                           1- 2712     _00208_DS_:
                                    1- 2713     	.line	414, "main.c"; 	showFlag = 0;
                                    1- 2714     	BANKSEL	_showFlag
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 2715     	CLRR	_showFlag
     00D8                           1- 2716     _00225_DS_:
                                    1- 2717     	.line	418, "main.c"; 	}
                                    1- 2718     	RETURN	
     00D8 0010                      3-   40 m1      ret
                                    1- 2719     ; exit point of _chrgCtr
                                    1- 2722     ;	code size estimation:
                                    1- 2723     ;	 1022+  324 =  1346 instructions ( 3340 byte)
                                    1- 2725     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
