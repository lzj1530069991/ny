
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	__divuint
                                    1-   51     	extern	_PORTAbits
                                    1-   52     	extern	_PORTBbits
                                    1-   53     	extern	_PCONbits
                                    1-   54     	extern	_BWUCONbits
                                    1-   55     	extern	_ABPLCONbits
                                    1-   56     	extern	_BPHCONbits
                                    1-   57     	extern	_INTEbits
                                    1-   58     	extern	_INTFbits
                                    1-   59     	extern	_ADMDbits
                                    1-   60     	extern	_ADRbits
                                    1-   61     	extern	_ADVREFHbits
                                    1-   62     	extern	_ADCRbits
                                    1-   63     	extern	_AWUCONbits
                                    1-   64     	extern	_PACONbits
                                    1-   65     	extern	_INTEDGbits
                                    1-   66     	extern	_ANAENbits
                                    1-   67     	extern	_RFCbits
                                    1-   68     	extern	_INTE2bits
                                    1-   69     	extern	_INDF
                                    1-   70     	extern	_TMR0
                                    1-   71     	extern	_PCL
                                    1-   72     	extern	_STATUS
                                    1-   73     	extern	_FSR
                                    1-   74     	extern	_PORTA
                                    1-   75     	extern	_PORTB
                                    1-   76     	extern	_PCON
                                    1-   77     	extern	_BWUCON
                                    1-   78     	extern	_PCHBUF
                                    1-   79     	extern	_ABPLCON
                                    1-   80     	extern	_BPHCON
                                    1-   81     	extern	_INTE
                                    1-   82     	extern	_INTF
                                    1-   83     	extern	_ADMD
                                    1-   84     	extern	_ADR
                                    1-   85     	extern	_ADD
                                    1-   86     	extern	_ADVREFH
                                    1-   87     	extern	_ADCR
                                    1-   88     	extern	_AWUCON
                                    1-   89     	extern	_PACON
                                    1-   90     	extern	_INTEDG
                                    1-   91     	extern	_TMRH
                                    1-   92     	extern	_ANAEN
                                    1-   93     	extern	_RFC
                                    1-   94     	extern	_TM3RH
                                    1-   95     	extern	_INTE2
                                    1-   96     	extern	_TMR1
                                    1-   97     	extern	_T1CR1
                                    1-   98     	extern	_T1CR2
                                    1-   99     	extern	_PWM1DUTY
                                    1-  100     	extern	_PS1CV
                                    1-  101     	extern	_BZ1CR
                                    1-  102     	extern	_IRCR
                                    1-  103     	extern	_TBHP
                                    1-  104     	extern	_TBHD
                                    1-  105     	extern	_TMR2
                                    1-  106     	extern	_T2CR1
                                    1-  107     	extern	_T2CR2
                                    1-  108     	extern	_PWM2DUTY
                                    1-  109     	extern	_PS2CV
                                    1-  110     	extern	_BZ2CR
                                    1-  111     	extern	_OSCCR
                                    1-  112     	extern	_TMR3
                                    1-  113     	extern	_T3CR1
                                    1-  114     	extern	_T3CR2
                                    1-  115     	extern	_PWM3DUTY
                                    1-  116     	extern	_PS3CV
                                    1-  117     	extern	_BZ3CR
                                    1-  118     	extern	_IOSTA
                                    1-  119     	extern	_IOSTB
                                    1-  120     	extern	_APHCON
                                    1-  121     	extern	_PS0CV
                                    1-  122     	extern	_BODCON
                                    1-  123     	extern	_CMPCR
                                    1-  124     	extern	_PCON1
                                    1-  125     	extern	_T0MD
                                    1-  126     	extern	___sdcc_saved_fsr
                                    1-  127     	extern	___sdcc_saved_stk00
                                    1-  128     	extern	___sdcc_saved_stk01
                                    1-  129     	extern	__gptrget1
                                    1-  130     	extern	__nyc_ny8_startup
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; global declarations
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     	extern	_delay
                                    1-  135     	extern	_F_wait_eoc
                                    1-  136     	extern	_F_Quarter_VDD_Convert
                                    1-  137     	extern	_checkBat
                                    1-  138     	extern	_initAD
                                    1-  139     	extern	_keyCtr
                                    1-  140     	extern	_pwmStop
                                    1-  141     	extern	_pwmInit
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_initSys
                                    1-  144     	extern	_refreshNub
                                    1-  145     	extern	_checkIRKey
                                    1-  146     	extern	_chrgCtr
                                    1-  147     	extern	_isr
                                    1-  148     	extern	_main
                                    1-  149     	extern	_keyRead
                                    1-  150     	extern	_R_Quarter_VDD_DATA
                                    1-  151     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  152     	extern	_intCount
                                    1-  153     	extern	_IntFlag
                                    1-  154     	extern	_baiweiNum
                                    1-  155     	extern	_shiweiNum
                                    1-  156     	extern	_geweiNum
                                    1-  157     	extern	_showFlag
                                    1-  158     	extern	_irStep
                                    1-  159     	extern	_revCount
                                    1-  160     	extern	_revZeroCount
                                    1-  161     	extern	_checkCount
                                    1-  162     	extern	_pwmTime
                                    1-  163     	extern	_sendFlag
                                    1-  164     	extern	_workTime
                                    1-  165     	extern	_workStep
                                    1-  166     	extern	_pwFlag
                                    1-  167     	extern	_pwShowTime
                                    1-  168     	extern	_stepShowTime
                                    1-  169     	extern	_pwStep
                                    1-  170     	extern	_keyCount
                                    1-  171     	extern	_longPressFlag
                                    1-  172     	extern	_sleepTime
                                    1-  173     	extern	_fullFlag
                                    1-  174     	extern	_shanTime
                                    1-  175     	extern	_count1s
                                    1-  176     	extern	_waitTime
                                    1-  177     	extern	_offShowTime
                                    1-  179     	extern PSAVE
                                    1-  180     	extern SSAVE
                                    1-  181     	extern WSAVE
                                    1-  182     	extern STK04
                                    1-  183     	extern STK03
                                    1-  184     	extern STK02
                                    1-  185     	extern STK01
                                    1-  186     	extern STK00
                                    1-  188     .segment "uninit", 0x20000040
 20000040                           1-  189     PSAVE:
                                    1-  190     	.res 1
 20000041                           1-  191     SSAVE:
                                    1-  192     	.res 1
 20000042                           1-  193     WSAVE:
                                    1-  194     	.res 1
 20000043                           1-  195     STK04:
                                    1-  196     	.res 1
 20000044                           1-  197     STK03:
                                    1-  198     	.res 1
 20000045                           1-  199     STK02:
                                    1-  200     	.res 1
 20000046                           1-  201     STK01:
                                    1-  202     	.res 1
 20000047                           1-  203     STK00:
                                    1-  204     	.res 1
                                    1-  206     ;--------------------------------------------------------
                                    1-  207     ; global definitions
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     .segment "uninit"
     0000                           1-  210     _R_Quarter_VDD_DATA:
                                    1-  211     	.res	2
                                    1-  214     .segment "uninit"
     0000                           1-  215     _R_Quarter_VDD_DATA_LB:
                                    1-  216     	.res	1
                                    1-  219     ;--------------------------------------------------------
                                    1-  220     ; absolute symbol definitions
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     ; compiler-defined variables
                                    1-  224     ;--------------------------------------------------------
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x1044:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1045:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1043:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1042:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1040:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1041:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x103D:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x103E:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x103C:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x103A:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x103B:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1036:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1037:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x1038:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1039:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1030:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1031:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1032:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1035:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x102C:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x102B:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x102D:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x102E:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x102F:
                                    1-  296     	.res	1
                                    1-  297     ;--------------------------------------------------------
                                    1-  298     ; initialized data
                                    1-  299     ;--------------------------------------------------------
                                    1-  301     .segment "idata"
     0000                           1-  302     _intCount:
     0000 0000                      1-  303     	dw	0x00
                                    1-  307     .segment "idata"
     0000                           1-  308     _IntFlag:
     0000 0000                      1-  309     	dw	0x00
                                    1-  313     .segment "idata"
     0000                           1-  314     _baiweiNum:
     0000 0000                      1-  315     	dw	0x00
                                    1-  319     .segment "idata"
     0000                           1-  320     _shiweiNum:
     0000 0000                      1-  321     	dw	0x00
                                    1-  325     .segment "idata"
     0000                           1-  326     _geweiNum:
     0000 0000                      1-  327     	dw	0x00
                                    1-  331     .segment "idata"
     0000                           1-  332     _showFlag:
     0000 0000                      1-  333     	dw	0x00
                                    1-  337     .segment "idata"
     0000                           1-  338     _irStep:
     0000 0000                      1-  339     	dw	0x00
                                    1-  343     .segment "idata"
     0000                           1-  344     _revCount:
     0000 0000                      1-  345     	dw	0x00
                                    1-  349     .segment "idata"
     0000                           1-  350     _revZeroCount:
     0000 0000                      1-  351     	dw	0x00
                                    1-  355     .segment "idata"
     0000                           1-  356     _checkCount:
     0000 0000                      1-  357     	dw	0x00
                                    1-  361     .segment "idata"
     0000                           1-  362     _pwmTime:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _sendFlag:
     0000 0000                      1-  369     	dw	0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _workTime:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _workStep:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _pwFlag:
     0000 0000                      1-  387     	dw	0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _pwShowTime:
     0000 0000                      1-  393     	dw	0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _stepShowTime:
     0000 0000                      1-  399     	dw	0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _pwStep:
     0000 0000                      1-  405     	dw	0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _keyCount:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _longPressFlag:
     0000 0000                      1-  417     	dw	0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _sleepTime:
     0000 0000                      1-  423     	dw	0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _fullFlag:
     0000 0000                      1-  429     	dw	0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _shanTime:
     0000 0000 0000                 1-  435     	dw	0x00, 0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _count1s:
     0000 0000                      1-  441     	dw	0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _waitTime:
     0000 0000 0000                 1-  447     	dw	0x00, 0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _offShowTime:
     0000 0000                      1-  453     	dw	0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _numArray:
     0000 003F                      1-  459     	dw	0x3f
     0001 0006                      1-  460     	dw	0x06
     0002 005B                      1-  461     	dw	0x5b
     0003 004F                      1-  462     	dw	0x4f
     0004 0066                      1-  463     	dw	0x66
     0005 006D                      1-  464     	dw	0x6d
     0006 007D                      1-  465     	dw	0x7d
     0007 0007                      1-  466     	dw	0x07
     0008 007F                      1-  467     	dw	0x7f
     0009 006F                      1-  468     	dw	0x6f
     000A 0071                      1-  469     	dw	0x71
     000B 0079                      1-  470     	dw	0x79
     000C 0050                      1-  471     	dw	0x50
                                    1-  474     ;--------------------------------------------------------
                                    1-  475     ; overlayable items in internal ram 
                                    1-  476     ;--------------------------------------------------------
                                    1-  477     ;	udata_ovr
                                    1-  478     ;--------------------------------------------------------
                                    1-  479     ; reset vector 
                                    1-  480     ;--------------------------------------------------------
                                    1-  481     ORG	0x0000
     0000 3rrr                      1-  482     	LGOTO	__nyc_ny8_startup
                                    1-  483     ;--------------------------------------------------------
                                    1-  484     ; interrupt and initialization code
                                    1-  485     ;--------------------------------------------------------
                                    1-  486     ORG 0x0008
                                    1-  487     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  489     .segment "code"
     0000                           1-  490     __sdcc_interrupt:
                                    1-  491     ;***
                                    1-  492     ;  pBlock Stats: dbName = I
                                    1-  493     ;***
                                    1-  494     ;2 compiler assigned registers:
                                    1-  495     ;   STK00
                                    1-  496     ;   STK01
                                    1-  497     ;; Starting pCode block
     0000                           1-  498     _isr:
                                    1-  499     ; 0 exit points
                                    1-  500     	.line	69, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  501     	MOVAR	WSAVE
     0001 1503                      1-  502     	SWAPR	STATUS,W
     0002 0283                      1-  503     	CLRR	STATUS
     0003 00rr                      1-  504     	MOVAR	SSAVE
     0004 010A                      1-  505     	MOVR	PCHBUF,W
     0005 028A                      1-  506     	CLRR	PCHBUF
     0006 00rr                      1-  507     	MOVAR	PSAVE
     0007 0104                      1-  508     	MOVR	FSR,W
                                    1-  509     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  510     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  511     	MOVR	STK00,W
                                    1-  512     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  513     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  514     	MOVR	STK01,W
                                    1-  515     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  516     	MOVAR	___sdcc_saved_stk01
                                    1-  517     	.line	71, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  518     	BTRSS	_INTFbits,0
                                    1-  519     	MGOTO	_00118_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  520     	.line	73, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  521     	MOVIA	0x37
     0013 03rr                      1-  522     	ADDAR	_TMR0,F
                                    1-  523     	.line	75, "main.c"; 	if(++intCount >= 100)
                                    1-  524     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  525     	INCR	_intCount,F
                                    1-  526     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  527     	MOVIA	0x64
     0017 04rr                      1-  528     	SUBAR	_intCount,W
     0018 0803                      1-  529     	BTRSS	STATUS,0
                                    1-  530     	MGOTO	_00118_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  531     	.line	77, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  532     	MOVIA	0x01
                                    1-  533     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  534     	MOVAR	_IntFlag
                                    1-  535     	.line	78, "main.c"; 	intCount = 0;	
                                    1-  536     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  537     	CLRR	_intCount
                                    1-  538     	.line	79, "main.c"; 	if(++count1s > 100)
                                    1-  539     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  540     	INCR	_count1s,F
                                    1-  541     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  542     ;;unsigned compare: left >= lit (0x65=101), size=1
     0021 2165                      1-  543     	MOVIA	0x65
     0022 04rr                      1-  544     	SUBAR	_count1s,W
     0023 0803                      1-  545     	BTRSS	STATUS,0
                                    1-  546     	MGOTO	_00118_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  547     	.line	81, "main.c"; 	count1s = 0;
     0025 02rr                      1-  548     	CLRR	_count1s
                                    1-  549     	.line	82, "main.c"; 	if(stepShowTime > 0)
                                    1-  550     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  551     	MOVR	_stepShowTime,W
     0028 0D03                      1-  552     	BTRSC	STATUS,2
                                    1-  553     	MGOTO	_00111_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  554     	.line	84, "main.c"; 	stepShowTime--;
     002A 06rr                      1-  555     	DECR	_stepShowTime,F
                                    1-  556     	MGOTO	_00118_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  557     _00111_DS_:
                                    1-  558     	.line	86, "main.c"; 	else if(pwShowTime > 0)
                                    1-  559     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  560     	MOVR	_pwShowTime,W
     002E 0D03                      1-  561     	BTRSC	STATUS,2
                                    1-  562     	MGOTO	_00108_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  563     	.line	87, "main.c"; 	pwShowTime--;
     0030 06rr                      1-  564     	DECR	_pwShowTime,F
                                    1-  565     	MGOTO	_00118_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  566     _00108_DS_:
                                    1-  567     	.line	88, "main.c"; 	else if(offShowTime > 0)
                                    1-  568     	BANKSEL	_offShowTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  569     	MOVR	_offShowTime,W
     0034 0903                      1-  570     	BTRSS	STATUS,2
                                    1-  571     	.line	89, "main.c"; 	offShowTime--;
     0035 06rr                      1-  572     	DECR	_offShowTime,F
     0036                           1-  573     _00118_DS_:
                                    1-  574     	.line	105, "main.c"; 	if(INTFbits.PABIF)
     0036 08rr                      1-  575     	BTRSS	_INTFbits,1
                                    1-  576     	MGOTO	_00120_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  577     	.line	107, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0038 21FD                      1-  578     	MOVIA	0xfd
     0039 00rr                      1-  579     	MOVAR	_INTF
     003A                           1-  580     _00120_DS_:
                                    1-  581     	.line	110, "main.c"; 	INTF = 0;
     003A 02rr                      1-  582     	CLRR	_INTF
                                    1-  583     	.line	112, "main.c"; 	}
                                    1-  584     	BANKSEL	___sdcc_saved_stk01
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1-  585     	MOVR	___sdcc_saved_stk01,W
     003D 00rr                      1-  586     	MOVAR	STK01
                                    1-  587     	BANKSEL	___sdcc_saved_stk00
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  588     	MOVR	___sdcc_saved_stk00,W
     0040 00rr                      1-  589     	MOVAR	STK00
                                    1-  590     	BANKSEL	___sdcc_saved_fsr
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1-  591     	MOVR	___sdcc_saved_fsr,W
     0043 0084                      1-  592     	MOVAR	FSR
     0044 01rr                      1-  593     	MOVR	PSAVE,W
     0045 008A                      1-  594     	MOVAR	PCHBUF
     0046 0283                      1-  595     	CLRR	STATUS
     0047 15rr                      1-  596     	SWAPR	SSAVE,W
     0048 0083                      1-  597     	MOVAR	STATUS
     0049 15rr                      1-  598     	SWAPR	WSAVE,F
     004A 15rr                      1-  599     	SWAPR	WSAVE,W
     004B                           1-  600     END_OF_INTERRUPT:
     004B 0011                      1-  601     	RETIE	
                                    1-  603     ;--------------------------------------------------------
                                    1-  604     ; code
                                    1-  605     ;--------------------------------------------------------
                                    1-  606     ;***
                                    1-  607     ;  pBlock Stats: dbName = M
                                    1-  608     ;***
                                    1-  609     ;has an exit
                                    1-  610     ;functions called:
                                    1-  611     ;   _initSys
                                    1-  612     ;   _initAD
                                    1-  613     ;   _gotoSleep
                                    1-  614     ;   _refreshNub
                                    1-  615     ;   _setInput
                                    1-  616     ;   _checkBat
                                    1-  617     ;   _checkIRKey
                                    1-  618     ;   _keyCtr
                                    1-  619     ;   _chrgCtr
                                    1-  620     ;   _gotoSleep
                                    1-  621     ;   _initSys
                                    1-  622     ;   _initAD
                                    1-  623     ;   _gotoSleep
                                    1-  624     ;   _refreshNub
                                    1-  625     ;   _setInput
                                    1-  626     ;   _checkBat
                                    1-  627     ;   _checkIRKey
                                    1-  628     ;   _keyCtr
                                    1-  629     ;   _chrgCtr
                                    1-  630     ;   _gotoSleep
                                    1-  631     ;2 compiler assigned registers:
                                    1-  632     ;   r0x1044
                                    1-  633     ;   r0x1045
                                    1-  634     ;; Starting pCode block
                                    1-  635     .segment "code"; module=main, function=_main
     0000                           1-  637     _main:
                                    1-  638     ; 2 exit points
                                    1-  639     	.line	116, "main.c"; 	initSys();
                                    1-  640     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  641     	.line	117, "main.c"; 	initAD();
                                    1-  642     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  643     	.line	118, "main.c"; 	gotoSleep();
                                    1-  644     	MCALL	_gotoSleep
     0002 2rrr                      3-   66 m1      LCALL rom_address
     0003                           1-  645     _00142_DS_:
                                    1-  646     	.line	121, "main.c"; 	CLRWDT();							// Clear WatchDog
     0003 0002                      1-  647     	clrwdt
                                    1-  648     	.line	122, "main.c"; 	if(showFlag)
                                    1-  649     	BANKSEL	_showFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  650     	MOVR	_showFlag,W
     0006 0D03                      1-  651     	BTRSC	STATUS,2
                                    1-  652     	MGOTO	_00126_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  653     	.line	123, "main.c"; 	refreshNub();
                                    1-  654     	MCALL	_refreshNub
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  655     	MGOTO	_00127_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1-  656     _00126_DS_:
                                    1-  657     	.line	126, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  658     	BANKSEL	_geweiNum
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1-  659     	CLRR	_geweiNum
                                    1-  660     	BANKSEL	_shiweiNum
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1-  661     	CLRR	_shiweiNum
                                    1-  662     	BANKSEL	_baiweiNum
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1-  663     	CLRR	_baiweiNum
                                    1-  664     	.line	127, "main.c"; 	setInput();
                                    1-  665     	MCALL	_setInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
     0011                           1-  666     _00127_DS_:
                                    1-  667     	.line	129, "main.c"; 	if(!IntFlag)
                                    1-  668     	BANKSEL	_IntFlag
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1-  669     	MOVR	_IntFlag,W
     0013 0D03                      1-  670     	BTRSC	STATUS,2
                                    1-  671     	MGOTO	_00142_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     	.line	131, "main.c"; 	IntFlag = 0;
     0015 02rr                      1-  673     	CLRR	_IntFlag
                                    1-  674     	.line	132, "main.c"; 	PORTB |= 0x02;
     0016 18rr                      1-  675     	BSR	_PORTB,1
                                    1-  676     	.line	133, "main.c"; 	checkBat();
                                    1-  677     	MCALL	_checkBat
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  678     	.line	134, "main.c"; 	checkIRKey();
                                    1-  679     	MCALL	_checkIRKey
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  680     	.line	135, "main.c"; 	PORTB &= 0xFD;
     0019 1Crr                      1-  681     	BCR	_PORTB,1
                                    1-  682     	.line	136, "main.c"; 	keyCtr();
                                    1-  683     	MCALL	_keyCtr
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  684     	.line	137, "main.c"; 	chrgCtr();
                                    1-  685     	MCALL	_chrgCtr
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  686     	.line	138, "main.c"; 	if(waitTime > 0)
                                    1-  687     	BANKSEL	_waitTime
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1-  688     	MOVR	_waitTime,W
     001E 11rr                      1-  689     	IORAR	(_waitTime + 1),W
     001F 0D03                      1-  690     	BTRSC	STATUS,2
                                    1-  691     	MGOTO	_00131_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  692     	.line	139, "main.c"; 	waitTime--;
     0021 21FF                      1-  693     	MOVIA	0xff
     0022 03rr                      1-  694     	ADDAR	_waitTime,F
     0023 0803                      1-  695     	BTRSS	STATUS,0
     0024 06rr                      1-  696     	DECR	(_waitTime + 1),F
     0025                           1-  697     _00131_DS_:
                                    1-  698     	.line	140, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0)
     0025 01rr                      1-  699     	MOVR	_PORTA,W
                                    1-  700     	BANKSEL	r0x1044
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  701     	MOVAR	r0x1044
                                    1-  702     	BANKSEL	r0x1045
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1-  703     	CLRR	r0x1045
                                    1-  704     	BANKSEL	r0x1044
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 07rr                      1-  705     	COMR	r0x1044,W
     002C 00rr                      1-  706     	MOVAR	r0x1044
                                    1-  707     	BANKSEL	r0x1045
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 07rr                      1-  708     	COMR	r0x1045,W
     002F 00rr                      1-  709     	MOVAR	r0x1045
                                    1-  710     	BANKSEL	r0x1044
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 0Arr                      1-  711     	BTRSS	r0x1044,5
                                    1-  712     	MGOTO	_00142_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  713     	BANKSEL	_keyCount
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  714     	MOVR	_keyCount,W
     0035 0903                      1-  715     	BTRSS	STATUS,2
                                    1-  716     	MGOTO	_00142_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  717     	BANKSEL	_pwFlag
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1-  718     	MOVR	_pwFlag,W
     0039 0903                      1-  719     	BTRSS	STATUS,2
                                    1-  720     	MGOTO	_00142_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  721     	BANKSEL	_stepShowTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1-  722     	MOVR	_stepShowTime,W
     003D 0903                      1-  723     	BTRSS	STATUS,2
                                    1-  724     	MGOTO	_00142_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  725     	BANKSEL	_pwShowTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  726     	MOVR	_pwShowTime,W
     0041 0903                      1-  727     	BTRSS	STATUS,2
                                    1-  728     	MGOTO	_00142_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  729     	BANKSEL	_offShowTime
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  730     	MOVR	_offShowTime,W
     0045 0903                      1-  731     	BTRSS	STATUS,2
                                    1-  732     	MGOTO	_00142_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  733     	.line	143, "main.c"; 	if(++sleepTime > 100)
                                    1-  734     	BANKSEL	_sleepTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 05rr                      1-  735     	INCR	_sleepTime,F
                                    1-  736     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  737     ;;unsigned compare: left >= lit (0x65=101), size=1
     0049 2165                      1-  738     	MOVIA	0x65
     004A 04rr                      1-  739     	SUBAR	_sleepTime,W
     004B 0803                      1-  740     	BTRSS	STATUS,0
                                    1-  741     	MGOTO	_00142_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  742     	.line	144, "main.c"; 	gotoSleep();
                                    1-  743     	MCALL	_gotoSleep
     004D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  744     	MGOTO	_00142_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  745     	.line	148, "main.c"; 	}
                                    1-  746     	RETURN	
     004F 0010                      3-   40 m1      ret
                                    1-  747     ; exit point of _main
                                    1-  749     ;***
                                    1-  750     ;  pBlock Stats: dbName = C
                                    1-  751     ;***
                                    1-  752     ;has an exit
                                    1-  753     ;6 compiler assigned registers:
                                    1-  754     ;   r0x102B
                                    1-  755     ;   STK00
                                    1-  756     ;   r0x102C
                                    1-  757     ;   r0x102D
                                    1-  758     ;   r0x102E
                                    1-  759     ;   r0x102F
                                    1-  760     ;; Starting pCode block
                                    1-  761     .segment "code"; module=main, function=_delay
                                    1-  763     ;local variable name mapping:
     0000                           1-  768     _delay:
                                    1-  769     ; 2 exit points
                                    1-  770     	.line	589, "main.c"; 	void delay(int count)
                                    1-  771     	BANKSEL	r0x102B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  772     	MOVAR	r0x102B
     0002 01rr                      1-  773     	MOVR	STK00,W
                                    1-  774     	BANKSEL	r0x102C
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  775     	MOVAR	r0x102C
                                    1-  776     	.line	592, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1-  777     	MOVIA	0x01
                                    1-  778     	BANKSEL	r0x102D
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1-  779     	MOVAR	r0x102D
                                    1-  780     	BANKSEL	r0x102E
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1-  781     	CLRR	r0x102E
     000A                           1-  782     _00370_DS_:
                                    1-  783     	BANKSEL	r0x102B
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1-  784     	MOVR	r0x102B,W
     000C 2580                      1-  785     	ADDIA	0x80
                                    1-  786     	BANKSEL	r0x102F
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1-  787     	MOVAR	r0x102F
                                    1-  788     	BANKSEL	r0x102E
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  789     	MOVR	r0x102E,W
     0011 2580                      1-  790     	ADDIA	0x80
                                    1-  791     	BANKSEL	r0x102F
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1-  792     	SUBAR	r0x102F,W
     0014 0903                      1-  793     	BTRSS	STATUS,2
                                    1-  794     	MGOTO	_00381_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  795     	BANKSEL	r0x102D
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1-  796     	MOVR	r0x102D,W
                                    1-  797     	BANKSEL	r0x102C
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1-  798     	SUBAR	r0x102C,W
     001A                           1-  799     _00381_DS_:
     001A 0803                      1-  800     	BTRSS	STATUS,0
                                    1-  801     	MGOTO	_00372_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  802     	BANKSEL	r0x102D
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1-  803     	INCR	r0x102D,F
     001E 0903                      1-  804     	BTRSS	STATUS,2
                                    1-  805     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  806     	BANKSEL	r0x102E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1-  807     	INCR	r0x102E,F
     0022                           1-  808     _00001_DS_:
                                    1-  809     	MGOTO	_00370_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1-  810     _00372_DS_:
                                    1-  811     	.line	594, "main.c"; 	}
                                    1-  812     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1-  813     ; exit point of _delay
                                    1-  815     ;***
                                    1-  816     ;  pBlock Stats: dbName = C
                                    1-  817     ;***
                                    1-  818     ;has an exit
                                    1-  819     ;; Starting pCode block
                                    1-  820     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  822     _F_wait_eoc:
                                    1-  823     ; 2 exit points
     0000                           1-  824     _00363_DS_:
                                    1-  825     	.line	585, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  826     	BTRSS	_ADMDbits,5
                                    1-  827     	MGOTO	_00363_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  828     	.line	587, "main.c"; 	}
                                    1-  829     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  830     ; exit point of _F_wait_eoc
                                    1-  832     ;***
                                    1-  833     ;  pBlock Stats: dbName = C
                                    1-  834     ;***
                                    1-  835     ;has an exit
                                    1-  836     ;functions called:
                                    1-  837     ;   _F_wait_eoc
                                    1-  838     ;   _F_wait_eoc
                                    1-  839     ;6 compiler assigned registers:
                                    1-  840     ;   r0x1030
                                    1-  841     ;   r0x1031
                                    1-  842     ;   r0x1032
                                    1-  843     ;   r0x1033
                                    1-  844     ;   r0x1034
                                    1-  845     ;   r0x1035
                                    1-  846     ;; Starting pCode block
                                    1-  847     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1-  849     ;local variable name mapping:
     0000                           1-  852     _F_Quarter_VDD_Convert:
                                    1-  853     ; 2 exit points
                                    1-  854     	.line	570, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1-  855     	BANKSEL	r0x1030
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  856     	MOVAR	r0x1030
                                    1-  857     	.line	573, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1-  858     	MOVIA	0x9b
     0003 00rr                      1-  859     	MOVAR	_ADMD
                                    1-  860     	.line	574, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1-  861     	MOVIA	0x01
                                    1-  862     	BANKSEL	r0x1031
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1-  863     	MOVAR	r0x1031
     0007                           1-  864     _00356_DS_:
                                    1-  865     	BANKSEL	r0x1031
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1-  866     	MOVR	r0x1031,W
                                    1-  867     	BANKSEL	r0x1030
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  868     	SUBAR	r0x1030,W
     000B 0803                      1-  869     	BTRSS	STATUS,0
                                    1-  870     	MGOTO	_00358_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  871     	.line	576, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1-  872     	BSR	_ADMDbits,6
                                    1-  873     	.line	577, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1-  874     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  875     	.line	578, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1-  876     	MOVIA	0x0f
     0010 10rr                      1-  877     	ANDAR	_ADR,W
                                    1-  878     ;;3	MOVAR	r0x1032
                                    1-  879     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1-  880     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1-  881     	.line	579, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1-  882     	MOVR	_ADD,W
                                    1-  883     	BANKSEL	r0x1032
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  884     	MOVAR	r0x1032
                                    1-  885     ;;1	CLRR	r0x1033
                                    1-  886     ;;101	MOVR	r0x1032,W
                                    1-  887     ;;99	MOVAR	r0x1034
     0016 2100                      1-  888     	MOVIA	0x00
                                    1-  889     	BANKSEL	r0x1035
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  890     	MOVAR	r0x1035
                                    1-  891     ;;100	MOVR	r0x1034,W
                                    1-  892     	BANKSEL	r0x1032
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  893     	MOVR	r0x1032,W
                                    1-  894     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  895     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1-  896     	BANKSEL	r0x1035
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  897     	MOVR	r0x1035,W
     001F 0C03                      1-  898     	BTRSC	STATUS,0
     0020 05rr                      1-  899     	INCR	r0x1035,W
     0021 0D03                      1-  900     	BTRSC	STATUS,2
                                    1-  901     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  902     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  903     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1-  904     _00002_DS_:
                                    1-  905     	.line	574, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  906     	BANKSEL	r0x1031
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1-  907     	INCR	r0x1031,F
                                    1-  908     	MGOTO	_00356_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1-  909     _00358_DS_:
                                    1-  910     	.line	581, "main.c"; 	}
                                    1-  911     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1-  912     ; exit point of _F_Quarter_VDD_Convert
                                    1-  914     ;***
                                    1-  915     ;  pBlock Stats: dbName = C
                                    1-  916     ;***
                                    1-  917     ;has an exit
                                    1-  918     ;functions called:
                                    1-  919     ;   _F_Quarter_VDD_Convert
                                    1-  920     ;   __divuint
                                    1-  921     ;   _F_Quarter_VDD_Convert
                                    1-  922     ;   __divuint
                                    1-  923     ;7 compiler assigned registers:
                                    1-  924     ;   r0x1036
                                    1-  925     ;   r0x1037
                                    1-  926     ;   r0x1038
                                    1-  927     ;   r0x1039
                                    1-  928     ;   STK02
                                    1-  929     ;   STK01
                                    1-  930     ;   STK00
                                    1-  931     ;; Starting pCode block
                                    1-  932     .segment "code"; module=main, function=_checkBat
                                    1-  934     ;local variable name mapping:
     0000                           1-  937     _checkBat:
                                    1-  938     ; 2 exit points
                                    1-  939     	.line	537, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1-  940     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  941     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1-  942     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  943     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1-  944     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1-  945     	.line	538, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1-  946     	MOVIA	0x08
                                    1-  947     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  948     	.line	539, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1-  949     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1-  950     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1-  951     	ANDIA	0xf0
     000A 00rr                      1-  952     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1-  953     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1-  954     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1-  955     	ANDIA	0x0f
     000E 11rr                      1-  956     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1-  957     	XORAR	_R_Quarter_VDD_DATA,F
                                    1-  958     	.line	540, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1-  959     	MOVIA	0xf0
                                    1-  960     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1-  961     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1-  962     	.line	541, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1-  963     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1-  964     	BANKSEL	r0x1038
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  965     	MOVAR	r0x1038
                                    1-  966     	BANKSEL	r0x1036
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  967     	MOVAR	r0x1036
                                    1-  968     	BANKSEL	r0x1037
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1-  969     	CLRR	r0x1037
                                    1-  970     ;;104	MOVR	r0x1036,W
     001A 2100                      1-  971     	MOVIA	0x00
                                    1-  972     	BANKSEL	r0x1039
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  973     	MOVAR	r0x1039
                                    1-  974     	BANKSEL	r0x1038
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  975     	MOVR	r0x1038,W
                                    1-  976     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1-  977     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1-  978     	BANKSEL	r0x1039
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  979     	MOVR	r0x1039,W
     0023 0C03                      1-  980     	BTRSC	STATUS,0
     0024 05rr                      1-  981     	INCR	r0x1039,W
     0025 0D03                      1-  982     	BTRSC	STATUS,2
                                    1-  983     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  984     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1-  985     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1-  986     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1-  987     _00003_DS_:
                                    1-  988     	.line	542, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1-  989     	BCR	STATUS,0
                                    1-  990     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1-  991     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1-  992     	RRR	_R_Quarter_VDD_DATA,F
                                    1-  993     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1-  994     	BCR	STATUS,0
     002E 13rr                      1-  995     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1-  996     	RRR	_R_Quarter_VDD_DATA,F
                                    1-  997     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1-  998     	BCR	STATUS,0
     0031 13rr                      1-  999     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1000     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1001     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1002     ;;unsigned compare: left >= lit (0x899=2201), size=2
                                    1- 1003     	.line	543, "main.c"; 	if(R_Quarter_VDD_DATA > 2200)
     0033 2108                      1- 1004     	MOVIA	0x08
     0034 04rr                      1- 1005     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1006     	BTRSS	STATUS,2
                                    1- 1007     	MGOTO	_00346_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 2199                      1- 1008     	MOVIA	0x99
     0038 04rr                      1- 1009     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1010     _00346_DS_:
     0039 0803                      1- 1011     	BTRSS	STATUS,0
                                    1- 1012     	MGOTO	_00327_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1013     	.line	545, "main.c"; 	pwStep = 100;
     003B 2164                      1- 1014     	MOVIA	0x64
                                    1- 1015     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1016     	MOVAR	_pwStep
                                    1- 1017     	MGOTO	_00329_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1018     ;;unsigned compare: left < lit (0x5DC=1500), size=2
     003F                           1- 1019     _00327_DS_:
                                    1- 1020     	.line	547, "main.c"; 	else if(R_Quarter_VDD_DATA < 1500)
     003F 2105                      1- 1021     	MOVIA	0x05
                                    1- 1022     	BANKSEL	_R_Quarter_VDD_DATA
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 1023     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0042 0903                      1- 1024     	BTRSS	STATUS,2
                                    1- 1025     	MGOTO	_00347_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
     0044 21DC                      1- 1026     	MOVIA	0xdc
     0045 04rr                      1- 1027     	SUBAR	_R_Quarter_VDD_DATA,W
     0046                           1- 1028     _00347_DS_:
     0046 0C03                      1- 1029     	BTRSC	STATUS,0
                                    1- 1030     	MGOTO	_00324_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1031     	.line	549, "main.c"; 	pwStep = 0;
                                    1- 1032     	BANKSEL	_pwStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1033     	CLRR	_pwStep
                                    1- 1034     	MGOTO	_00329_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 1035     _00324_DS_:
                                    1- 1036     	.line	553, "main.c"; 	u16t tempValue = (R_Quarter_VDD_DATA - 1500)/7;
     004B 2124                      1- 1037     	MOVIA	0x24
                                    1- 1038     	BANKSEL	_R_Quarter_VDD_DATA
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 03rr                      1- 1039     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1040     	BANKSEL	r0x1036
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1041     	MOVAR	r0x1036
     0050 21FA                      1- 1042     	MOVIA	0xfa
                                    1- 1043     	BANKSEL	r0x1037
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 1044     	MOVAR	r0x1037
                                    1- 1045     	BANKSEL	_R_Quarter_VDD_DATA
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 01rr                      1- 1046     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0055 0C03                      1- 1047     	BTRSC	STATUS,0
     0056 05rr                      1- 1048     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0057 0D03                      1- 1049     	BTRSC	STATUS,2
                                    1- 1050     	MGOTO	_00004_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1051     	BANKSEL	r0x1037
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 03rr                      1- 1052     	ADDAR	r0x1037,F
     005B                           1- 1053     _00004_DS_:
     005B 2107                      1- 1054     	MOVIA	0x07
     005C 00rr                      1- 1055     	MOVAR	STK02
     005D 2100                      1- 1056     	MOVIA	0x00
     005E 00rr                      1- 1057     	MOVAR	STK01
                                    1- 1058     	BANKSEL	r0x1036
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 1059     	MOVR	r0x1036,W
     0061 00rr                      1- 1060     	MOVAR	STK00
                                    1- 1061     	BANKSEL	r0x1037
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 01rr                      1- 1062     	MOVR	r0x1037,W
                                    1- 1063     	MCALL	__divuint
     0064 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1064     	BANKSEL	r0x1037
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1065     	MOVAR	r0x1037
     0067 01rr                      1- 1066     	MOVR	STK00,W
                                    1- 1067     	BANKSEL	r0x1036
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 1068     	MOVAR	r0x1036
                                    1- 1069     	.line	554, "main.c"; 	if(0x20 & PORTA)
     006A 0Arr                      1- 1070     	BTRSS	_PORTA,5
                                    1- 1071     	MGOTO	_00321_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1072     	.line	556, "main.c"; 	if(pwStep < tempValue)
                                    1- 1073     	BANKSEL	_pwStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 1074     	MOVR	_pwStep,W
                                    1- 1075     	BANKSEL	r0x1038
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1076     	MOVAR	r0x1038
                                    1- 1077     	BANKSEL	r0x1039
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 02rr                      1- 1078     	CLRR	r0x1039
                                    1- 1079     	BANKSEL	r0x1037
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 1080     	MOVR	r0x1037,W
                                    1- 1081     	BANKSEL	r0x1039
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1- 1082     	SUBAR	r0x1039,W
     0076 0903                      1- 1083     	BTRSS	STATUS,2
                                    1- 1084     	MGOTO	_00348_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1085     	BANKSEL	r0x1036
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1- 1086     	MOVR	r0x1036,W
                                    1- 1087     	BANKSEL	r0x1038
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 04rr                      1- 1088     	SUBAR	r0x1038,W
     007C                           1- 1089     _00348_DS_:
     007C 0C03                      1- 1090     	BTRSC	STATUS,0
                                    1- 1091     	MGOTO	_00329_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1092     	.line	557, "main.c"; 	pwStep = tempValue;
                                    1- 1093     	BANKSEL	r0x1036
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 01rr                      1- 1094     	MOVR	r0x1036,W
                                    1- 1095     	BANKSEL	_pwStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 1096     	MOVAR	_pwStep
                                    1- 1097     	MGOTO	_00329_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083                           1- 1098     _00321_DS_:
                                    1- 1099     	.line	561, "main.c"; 	if(pwStep > tempValue || pwStep == 0)
                                    1- 1100     	BANKSEL	_pwStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1- 1101     	MOVR	_pwStep,W
                                    1- 1102     	BANKSEL	r0x1038
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1103     	MOVAR	r0x1038
                                    1- 1104     	BANKSEL	r0x1039
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 02rr                      1- 1105     	CLRR	r0x1039
     0089 2100                      1- 1106     	MOVIA	0x00
                                    1- 1107     	BANKSEL	r0x1037
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 1108     	SUBAR	r0x1037,W
     008C 0903                      1- 1109     	BTRSS	STATUS,2
                                    1- 1110     	MGOTO	_00349_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1111     	BANKSEL	r0x1038
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 01rr                      1- 1112     	MOVR	r0x1038,W
                                    1- 1113     	BANKSEL	r0x1036
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 04rr                      1- 1114     	SUBAR	r0x1036,W
     0092                           1- 1115     _00349_DS_:
     0092 0803                      1- 1116     	BTRSS	STATUS,0
                                    1- 1117     	MGOTO	_00317_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1118     	BANKSEL	_pwStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 1119     	MOVR	_pwStep,W
     0096 0903                      1- 1120     	BTRSS	STATUS,2
                                    1- 1121     	MGOTO	_00329_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098                           1- 1122     _00317_DS_:
                                    1- 1123     	.line	562, "main.c"; 	pwStep = tempValue;
                                    1- 1124     	BANKSEL	r0x1036
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1125     	MOVR	r0x1036,W
                                    1- 1126     	BANKSEL	_pwStep
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 1127     	MOVAR	_pwStep
     009C                           1- 1128     _00329_DS_:
                                    1- 1129     	.line	566, "main.c"; 	}
                                    1- 1130     	RETURN	
     009C 0010                      3-   40 m1      ret
                                    1- 1131     ; exit point of _checkBat
                                    1- 1133     ;***
                                    1- 1134     ;  pBlock Stats: dbName = C
                                    1- 1135     ;***
                                    1- 1136     ;has an exit
                                    1- 1137     ;functions called:
                                    1- 1138     ;   _delay
                                    1- 1139     ;   _delay
                                    1- 1140     ;1 compiler assigned register :
                                    1- 1141     ;   STK00
                                    1- 1142     ;; Starting pCode block
                                    1- 1143     .segment "code"; module=main, function=_initAD
     0000                           1- 1145     _initAD:
                                    1- 1146     ; 2 exit points
                                    1- 1147     	.line	509, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1148     	MOVIA	0x80
     0001 00rr                      1- 1149     	MOVAR	_ADMD
                                    1- 1150     	.line	514, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1151     	CLRR	_ADVREFH
                                    1- 1152     	.line	519, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1153     	MOVIA	0x10
     0004 00rr                      1- 1154     	MOVAR	_ADR
                                    1- 1155     	.line	523, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1156     	MOVIA	0x03
     0006 00rr                      1- 1157     	MOVAR	_ADCR
                                    1- 1158     	.line	530, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1159     	BSR	_ADMDbits,4
                                    1- 1160     	.line	531, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1161     	MOVIA	0x32
     0009 00rr                      1- 1162     	MOVAR	STK00
     000A 2100                      1- 1163     	MOVIA	0x00
                                    1- 1164     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1165     	.line	532, "main.c"; 	}
                                    1- 1166     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1167     ; exit point of _initAD
                                    1- 1169     ;***
                                    1- 1170     ;  pBlock Stats: dbName = C
                                    1- 1171     ;***
                                    1- 1172     ;has an exit
                                    1- 1173     ;functions called:
                                    1- 1174     ;   _keyRead
                                    1- 1175     ;   _keyRead
                                    1- 1176     ;1 compiler assigned register :
                                    1- 1177     ;   r0x103B
                                    1- 1178     ;; Starting pCode block
                                    1- 1179     .segment "code"; module=main, function=_keyCtr
                                    1- 1181     ;local variable name mapping:
     0000                           1- 1183     _keyCtr:
                                    1- 1184     ; 2 exit points
                                    1- 1185     	.line	468, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
     0000 07rr                      1- 1186     	COMR	_PORTA,W
                                    1- 1187     	BANKSEL	r0x103B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1188     	MOVAR	r0x103B
     0003 2140                      1- 1189     	MOVIA	0x40
     0004 10rr                      1- 1190     	ANDAR	r0x103B,F
     0005 01rr                      1- 1191     	MOVR	r0x103B,W
                                    1- 1192     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1193     	BANKSEL	r0x103B
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 1194     	MOVAR	r0x103B
                                    1- 1195     	.line	469, "main.c"; 	if(kclick == 1)
     0009 2401                      1- 1196     	XORIA	0x01
     000A 0903                      1- 1197     	BTRSS	STATUS,2
                                    1- 1198     	MGOTO	_00304_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1199     	.line	471, "main.c"; 	if(pwFlag)
                                    1- 1200     	BANKSEL	_pwFlag
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 1201     	MOVR	_pwFlag,W
     000E 0D03                      1- 1202     	BTRSC	STATUS,2
                                    1- 1203     	MGOTO	_00306_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1204     	.line	473, "main.c"; 	if(showFlag == 0)
                                    1- 1205     	BANKSEL	_showFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1206     	MOVR	_showFlag,W
     0012 0903                      1- 1207     	BTRSS	STATUS,2
                                    1- 1208     	MGOTO	_00292_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1209     	.line	476, "main.c"; 	pwShowTime = 3;
     0014 2103                      1- 1210     	MOVIA	0x03
                                    1- 1211     	BANKSEL	_pwShowTime
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 1212     	MOVAR	_pwShowTime
                                    1- 1213     	MGOTO	_00306_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 1214     _00292_DS_:
                                    1- 1215     	.line	480, "main.c"; 	pwShowTime = 0;
                                    1- 1216     	BANKSEL	_pwShowTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1217     	CLRR	_pwShowTime
                                    1- 1218     	.line	481, "main.c"; 	if(++workStep > 3)
                                    1- 1219     	BANKSEL	_workStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 1220     	INCR	_workStep,F
                                    1- 1221     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1222     ;;unsigned compare: left >= lit (0x4=4), size=1
     001C 2104                      1- 1223     	MOVIA	0x04
     001D 04rr                      1- 1224     	SUBAR	_workStep,W
     001E 0803                      1- 1225     	BTRSS	STATUS,0
                                    1- 1226     	MGOTO	_00290_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1227     	.line	482, "main.c"; 	workStep = 1;
     0020 2101                      1- 1228     	MOVIA	0x01
     0021 00rr                      1- 1229     	MOVAR	_workStep
     0022                           1- 1230     _00290_DS_:
                                    1- 1231     	.line	483, "main.c"; 	stepShowTime = 2;
     0022 2102                      1- 1232     	MOVIA	0x02
                                    1- 1233     	BANKSEL	_stepShowTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 1234     	MOVAR	_stepShowTime
                                    1- 1235     	MGOTO	_00306_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 1236     _00304_DS_:
                                    1- 1237     	.line	487, "main.c"; 	else if(kclick == 2)
                                    1- 1238     	BANKSEL	r0x103B
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1239     	MOVR	r0x103B,W
     0028 2402                      1- 1240     	XORIA	0x02
     0029 0903                      1- 1241     	BTRSS	STATUS,2
                                    1- 1242     	MGOTO	_00306_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1243     	.line	489, "main.c"; 	if(pwFlag)
                                    1- 1244     	BANKSEL	_pwFlag
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 1245     	MOVR	_pwFlag,W
     002D 0D03                      1- 1246     	BTRSC	STATUS,2
                                    1- 1247     	MGOTO	_00299_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1248     	.line	491, "main.c"; 	pwFlag = 0;		//关机
     002F 02rr                      1- 1249     	CLRR	_pwFlag
                                    1- 1250     	.line	492, "main.c"; 	workStep = 0;
                                    1- 1251     	BANKSEL	_workStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1- 1252     	CLRR	_workStep
                                    1- 1253     	MGOTO	_00306_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 1254     _00299_DS_:
                                    1- 1255     	.line	496, "main.c"; 	pwFlag = 1;		//开机
     0033 2101                      1- 1256     	MOVIA	0x01
                                    1- 1257     	BANKSEL	_pwFlag
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1258     	MOVAR	_pwFlag
                                    1- 1259     	.line	497, "main.c"; 	pwShowTime = 3;
     0036 2103                      1- 1260     	MOVIA	0x03
                                    1- 1261     	BANKSEL	_pwShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 1262     	MOVAR	_pwShowTime
                                    1- 1263     	.line	498, "main.c"; 	stepShowTime = 2;
     0039 2102                      1- 1264     	MOVIA	0x02
                                    1- 1265     	BANKSEL	_stepShowTime
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 00rr                      1- 1266     	MOVAR	_stepShowTime
                                    1- 1267     	.line	499, "main.c"; 	if(workStep == 0)
                                    1- 1268     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 1269     	MOVR	_workStep,W
     003E 0903                      1- 1270     	BTRSS	STATUS,2
                                    1- 1271     	MGOTO	_00306_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1272     	.line	500, "main.c"; 	workStep = 1;
     0040 2101                      1- 1273     	MOVIA	0x01
     0041 00rr                      1- 1274     	MOVAR	_workStep
     0042                           1- 1275     _00306_DS_:
                                    1- 1276     	.line	503, "main.c"; 	}
                                    1- 1277     	RETURN	
     0042 0010                      3-   40 m1      ret
                                    1- 1278     ; exit point of _keyCtr
                                    1- 1280     ;***
                                    1- 1281     ;  pBlock Stats: dbName = C
                                    1- 1282     ;***
                                    1- 1283     ;has an exit
                                    1- 1284     ;1 compiler assigned register :
                                    1- 1285     ;   r0x103A
                                    1- 1286     ;; Starting pCode block
                                    1- 1287     .segment "code"; module=main, function=_keyRead
                                    1- 1289     ;local variable name mapping:
     0000                           1- 1291     _keyRead:
                                    1- 1292     ; 2 exit points
                                    1- 1293     	.line	433, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1294     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1295     	MOVAR	r0x103A
                                    1- 1296     	.line	435, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1297     	MOVR	r0x103A,W
     0003 0D03                      1- 1298     	BTRSC	STATUS,2
                                    1- 1299     	MGOTO	_00282_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1300     	.line	437, "main.c"; 	keyCount++;
                                    1- 1301     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1302     	INCR	_keyCount,F
                                    1- 1303     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1304     	.line	438, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1305     	MOVIA	0xc8
     0008 04rr                      1- 1306     	SUBAR	_keyCount,W
     0009 0803                      1- 1307     	BTRSS	STATUS,0
                                    1- 1308     	MGOTO	_00283_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1309     	.line	440, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1310     	MOVIA	0xc8
     000C 00rr                      1- 1311     	MOVAR	_keyCount
                                    1- 1312     	.line	441, "main.c"; 	if(!longPressFlag)
                                    1- 1313     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1314     	MOVR	_longPressFlag,W
     000F 0903                      1- 1315     	BTRSS	STATUS,2
                                    1- 1316     	MGOTO	_00283_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1317     	.line	443, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 1318     	MOVIA	0x01
     0012 00rr                      1- 1319     	MOVAR	_longPressFlag
                                    1- 1320     	.line	444, "main.c"; 	return 2;
     0013 2102                      1- 1321     	MOVIA	0x02
                                    1- 1322     	MGOTO	_00284_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1323     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 1324     _00282_DS_:
                                    1- 1325     	.line	450, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 1326     	MOVIA	0xc8
                                    1- 1327     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 1328     	SUBAR	_keyCount,W
     0018 0803                      1- 1329     	BTRSS	STATUS,0
                                    1- 1330     	MGOTO	_00279_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1331     	.line	452, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 1332     	CLRR	_keyCount
                                    1- 1333     	.line	453, "main.c"; 	longPressFlag = 0;
                                    1- 1334     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 1335     	CLRR	_longPressFlag
                                    1- 1336     	.line	454, "main.c"; 	return	0;
     001D 2100                      1- 1337     	MOVIA	0x00
                                    1- 1338     	MGOTO	_00284_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1339     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 1340     _00279_DS_:
                                    1- 1341     	.line	456, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 1342     	MOVIA	0x04
                                    1- 1343     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 1344     	SUBAR	_keyCount,W
     0022 0803                      1- 1345     	BTRSS	STATUS,0
                                    1- 1346     	MGOTO	_00280_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1347     	.line	458, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 1348     	CLRR	_keyCount
                                    1- 1349     	.line	459, "main.c"; 	return	1;
     0025 2101                      1- 1350     	MOVIA	0x01
                                    1- 1351     	MGOTO	_00284_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 1352     _00280_DS_:
                                    1- 1353     	.line	461, "main.c"; 	keyCount = 0;
                                    1- 1354     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 1355     	CLRR	_keyCount
     0029                           1- 1356     _00283_DS_:
                                    1- 1357     	.line	463, "main.c"; 	return 0;
     0029 2100                      1- 1358     	MOVIA	0x00
     002A                           1- 1359     _00284_DS_:
                                    1- 1360     	.line	464, "main.c"; 	}
                                    1- 1361     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 1362     ; exit point of _keyRead
                                    1- 1364     ;***
                                    1- 1365     ;  pBlock Stats: dbName = C
                                    1- 1366     ;***
                                    1- 1367     ;has an exit
                                    1- 1368     ;; Starting pCode block
                                    1- 1369     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1371     _pwmStop:
                                    1- 1372     ; 2 exit points
                                    1- 1373     	.line	427, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1374     	CLRA	
     0001 00rr                      1- 1375     	SFUN	_T2CR1
                                    1- 1376     	.line	428, "main.c"; 	}
                                    1- 1377     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1378     ; exit point of _pwmStop
                                    1- 1380     ;***
                                    1- 1381     ;  pBlock Stats: dbName = C
                                    1- 1382     ;***
                                    1- 1383     ;has an exit
                                    1- 1384     ;1 compiler assigned register :
                                    1- 1385     ;   r0x103C
                                    1- 1386     ;; Starting pCode block
                                    1- 1387     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1389     _pwmInit:
                                    1- 1390     ; 2 exit points
                                    1- 1391     	.line	415, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1392     	SFUNR	_T2CR1
                                    1- 1393     	BANKSEL	r0x103C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1394     	MOVAR	r0x103C
     0003 0Frr                      1- 1395     	BTRSC	r0x103C,7
                                    1- 1396     	.line	416, "main.c"; 	return;
                                    1- 1397     	MGOTO	_00263_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1398     	.line	417, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1399     	CLRR	_TMRH
                                    1- 1400     	.line	418, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 1401     	MOVIA	0x64
     0007 00rr                      1- 1402     	SFUN	_TMR2
                                    1- 1403     	.line	419, "main.c"; 	PWM2DUTY = 100;				// 		
     0008 00rr                      1- 1404     	SFUN	_PWM2DUTY
                                    1- 1405     	.line	421, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2101                      1- 1406     	MOVIA	0x01
     000A 00rr                      1- 1407     	SFUN	_T2CR2
                                    1- 1408     	.line	422, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 1409     	MOVIA	0x83
     000C 00rr                      1- 1410     	SFUN	_T2CR1
     000D                           1- 1411     _00263_DS_:
                                    1- 1412     	.line	423, "main.c"; 	}
                                    1- 1413     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 1414     ; exit point of _pwmInit
                                    1- 1416     ;***
                                    1- 1417     ;  pBlock Stats: dbName = C
                                    1- 1418     ;***
                                    1- 1419     ;has an exit
                                    1- 1420     ;functions called:
                                    1- 1421     ;   _setInput
                                    1- 1422     ;   _pwmStop
                                    1- 1423     ;   _setInput
                                    1- 1424     ;   _pwmStop
                                    1- 1425     ;; Starting pCode block
                                    1- 1426     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1428     _gotoSleep:
                                    1- 1429     ; 2 exit points
                                    1- 1430     	.line	384, "main.c"; 	waitTime = 0;
                                    1- 1431     	BANKSEL	_waitTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1432     	CLRR	_waitTime
     0002 02rr                      1- 1433     	CLRR	(_waitTime + 1)
                                    1- 1434     	.line	385, "main.c"; 	setInput();
                                    1- 1435     	MCALL	_setInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1436     	.line	386, "main.c"; 	sleepTime = 0;
                                    1- 1437     	BANKSEL	_sleepTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1438     	CLRR	_sleepTime
                                    1- 1439     	.line	388, "main.c"; 	pwmStop();
                                    1- 1440     	MCALL	_pwmStop
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1441     	.line	389, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1442     	MOVIA	0x60
     0008 00rr                      1- 1443     	MOVAR	_AWUCON
                                    1- 1444     	.line	390, "main.c"; 	BWUCON = 0x00;
     0009 02rr                      1- 1445     	CLRR	_BWUCON
                                    1- 1446     	.line	391, "main.c"; 	IOSTB = C_PB3_Input | C_PB1_Input;
     000A 210A                      1- 1447     	MOVIA	0x0a
     000B 000r                      1- 1448     	IOST	_IOSTB
                                    1- 1449     	.line	392, "main.c"; 	PORTA = 0X00;
     000C 02rr                      1- 1450     	CLRR	_PORTA
                                    1- 1451     	.line	393, "main.c"; 	PORTB = 0X00;
     000D 02rr                      1- 1452     	CLRR	_PORTB
                                    1- 1453     	.line	394, "main.c"; 	INTE =  C_INT_PABKey;
     000E 2102                      1- 1454     	MOVIA	0x02
     000F 00rr                      1- 1455     	MOVAR	_INTE
                                    1- 1456     	.line	395, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0010 2118                      1- 1457     	MOVIA	0x18
     0011 00rr                      1- 1458     	MOVAR	_PCON
                                    1- 1459     	.line	396, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0012 02rr                      1- 1460     	CLRR	_INTF
                                    1- 1461     	.line	397, "main.c"; 	CLRWDT();
     0013 0002                      1- 1462     	clrwdt
                                    1- 1463     	.line	398, "main.c"; 	ENI();
     0014 0004                      1- 1464     	ENI
                                    1- 1465     	.line	399, "main.c"; 	SLEEP();
     0015 0001                      1- 1466     	sleep
                                    1- 1467     	.line	400, "main.c"; 	AWUCON = 0x00;
     0016 02rr                      1- 1468     	CLRR	_AWUCON
                                    1- 1469     	.line	401, "main.c"; 	IOSTA = C_PA7_Input | C_PA6_Input | C_PA5_Input;
     0017 21E0                      1- 1470     	MOVIA	0xe0
     0018 000r                      1- 1471     	IOST	_IOSTA
                                    1- 1472     	.line	402, "main.c"; 	IOSTB = C_PB3_Input;
     0019 2108                      1- 1473     	MOVIA	0x08
     001A 000r                      1- 1474     	IOST	_IOSTB
                                    1- 1475     	.line	403, "main.c"; 	PORTA = 0x00;
     001B 02rr                      1- 1476     	CLRR	_PORTA
                                    1- 1477     	.line	404, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     001C 2101                      1- 1478     	MOVIA	0x01
     001D 00rr                      1- 1479     	MOVAR	_INTE
                                    1- 1480     	.line	405, "main.c"; 	INTF = 0;
     001E 02rr                      1- 1481     	CLRR	_INTF
                                    1- 1482     	.line	407, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001F 21B8                      1- 1483     	MOVIA	0xb8
     0020 00rr                      1- 1484     	MOVAR	_PCON
                                    1- 1485     	.line	410, "main.c"; 	}
                                    1- 1486     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1- 1487     ; exit point of _gotoSleep
                                    1- 1489     ;***
                                    1- 1490     ;  pBlock Stats: dbName = C
                                    1- 1491     ;***
                                    1- 1492     ;has an exit
                                    1- 1493     ;functions called:
                                    1- 1494     ;   _setInput
                                    1- 1495     ;   _setInput
                                    1- 1496     ;; Starting pCode block
                                    1- 1497     .segment "code"; module=main, function=_initSys
     0000                           1- 1499     _initSys:
                                    1- 1500     ; 2 exit points
                                    1- 1501     	.line	353, "main.c"; 	DISI();
     0000 0013                      1- 1502     	DISI
                                    1- 1503     	.line	354, "main.c"; 	IOSTA = C_PA7_Input | C_PA6_Input | C_PA5_Input;
     0001 21E0                      1- 1504     	MOVIA	0xe0
     0002 000r                      1- 1505     	IOST	_IOSTA
                                    1- 1506     	.line	355, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 1507     	MOVIA	0x08
     0004 000r                      1- 1508     	IOST	_IOSTB
                                    1- 1509     	.line	356, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 1510     	CLRR	_PORTB
                                    1- 1511     	.line	357, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 1512     	CLRR	_PORTA
                                    1- 1513     	.line	358, "main.c"; 	setInput();
                                    1- 1514     	MCALL	_setInput
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1515     	.line	359, "main.c"; 	APHCON = 0x3F;
     0008 213F                      1- 1516     	MOVIA	0x3f
     0009 000r                      1- 1517     	IOST	_APHCON
                                    1- 1518     	.line	360, "main.c"; 	BPHCON = 0xF7;		//PB3上拉
     000A 21F7                      1- 1519     	MOVIA	0xf7
     000B 00rr                      1- 1520     	MOVAR	_BPHCON
                                    1- 1521     	.line	361, "main.c"; 	ABPLCON = 0xFF;
     000C 21FF                      1- 1522     	MOVIA	0xff
     000D 00rr                      1- 1523     	MOVAR	_ABPLCON
                                    1- 1524     	.line	363, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 1525     	MOVIA	0x01
     000F 00rr                      1- 1526     	MOVAR	_INTE
                                    1- 1527     	.line	365, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 1528     	CLRA	
     0011 000r                      1- 1529     	IOST	_PCON1
                                    1- 1530     	.line	367, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 1531     	MOVIA	0x37
     0013 00rr                      1- 1532     	MOVAR	_TMR0
                                    1- 1533     	.line	368, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 1534     	CLRA	
     0015 0003                      1- 1535     	T0MD	
                                    1- 1536     	.line	370, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 1537     	MOVIA	0x01
     0017 000r                      1- 1538     	IOST	_PCON1
                                    1- 1539     	.line	373, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 1540     	MOVIA	0x98
     0019 00rr                      1- 1541     	MOVAR	_PCON
                                    1- 1542     	.line	376, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 1543     	MOVIA	0x01
     001B 000r                      1- 1544     	IOST	_PCON1
                                    1- 1545     	.line	377, "main.c"; 	ENI();
     001C 0004                      1- 1546     	ENI
                                    1- 1547     	.line	378, "main.c"; 	}
                                    1- 1548     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 1549     ; exit point of _initSys
                                    1- 1551     ;***
                                    1- 1552     ;  pBlock Stats: dbName = C
                                    1- 1553     ;***
                                    1- 1554     ;has an exit
                                    1- 1555     ;functions called:
                                    1- 1556     ;   __gptrget1
                                    1- 1557     ;   _showNubBaiwei
                                    1- 1558     ;   __gptrget1
                                    1- 1559     ;   _showNubShiwei
                                    1- 1560     ;   __gptrget1
                                    1- 1561     ;   _showNubGewei
                                    1- 1562     ;   __gptrget1
                                    1- 1563     ;   _showNubBaiwei
                                    1- 1564     ;   __gptrget1
                                    1- 1565     ;   _showNubShiwei
                                    1- 1566     ;   __gptrget1
                                    1- 1567     ;   _showNubGewei
                                    1- 1568     ;5 compiler assigned registers:
                                    1- 1569     ;   r0x103D
                                    1- 1570     ;   r0x103E
                                    1- 1571     ;   STK01
                                    1- 1572     ;   STK00
                                    1- 1573     ;   r0x103F
                                    1- 1574     ;; Starting pCode block
                                    1- 1575     .segment "code"; module=main, function=_refreshNub
     0000                           1- 1577     _refreshNub:
                                    1- 1578     ; 2 exit points
                                    1- 1579     	.line	345, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 1580     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1581     	MOVR	_baiweiNum,W
     0002 25rr                      1- 1582     	ADDIA	(_numArray + 0)
                                    1- 1583     	BANKSEL	r0x103D
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1584     	MOVAR	r0x103D
     0005 21rr                      1- 1585     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 1586     	BTRSC	STATUS,0
     0007 2501                      1- 1587     	ADDIA	0x01
                                    1- 1588     	BANKSEL	r0x103E
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1589     	MOVAR	r0x103E
                                    1- 1590     	BANKSEL	r0x103D
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1591     	MOVR	r0x103D,W
     000C 00rr                      1- 1592     	MOVAR	STK01
                                    1- 1593     	BANKSEL	r0x103E
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1594     	MOVR	r0x103E,W
     000F 00rr                      1- 1595     	MOVAR	STK00
     0010 2100                      1- 1596     	MOVIA	0x00
                                    1- 1597     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1598     ;;103	MOVAR	r0x103F
                                    1- 1599     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1600     	.line	346, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 1601     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 1602     	MOVR	_shiweiNum,W
     0015 25rr                      1- 1603     	ADDIA	(_numArray + 0)
                                    1- 1604     	BANKSEL	r0x103D
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1605     	MOVAR	r0x103D
     0018 21rr                      1- 1606     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 1607     	BTRSC	STATUS,0
     001A 2501                      1- 1608     	ADDIA	0x01
                                    1- 1609     	BANKSEL	r0x103E
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1610     	MOVAR	r0x103E
                                    1- 1611     	BANKSEL	r0x103D
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1612     	MOVR	r0x103D,W
     001F 00rr                      1- 1613     	MOVAR	STK01
                                    1- 1614     	BANKSEL	r0x103E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1615     	MOVR	r0x103E,W
     0022 00rr                      1- 1616     	MOVAR	STK00
     0023 2100                      1- 1617     	MOVIA	0x00
                                    1- 1618     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1619     ;;102	MOVAR	r0x103F
                                    1- 1620     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1621     	.line	347, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 1622     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1623     	MOVR	_geweiNum,W
     0028 25rr                      1- 1624     	ADDIA	(_numArray + 0)
                                    1- 1625     	BANKSEL	r0x103D
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 1626     	MOVAR	r0x103D
     002B 21rr                      1- 1627     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 1628     	BTRSC	STATUS,0
     002D 2501                      1- 1629     	ADDIA	0x01
                                    1- 1630     	BANKSEL	r0x103E
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 1631     	MOVAR	r0x103E
                                    1- 1632     	BANKSEL	r0x103D
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1633     	MOVR	r0x103D,W
     0032 00rr                      1- 1634     	MOVAR	STK01
                                    1- 1635     	BANKSEL	r0x103E
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1636     	MOVR	r0x103E,W
     0035 00rr                      1- 1637     	MOVAR	STK00
     0036 2100                      1- 1638     	MOVIA	0x00
                                    1- 1639     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1640     ;;2	MOVAR	r0x103F
                                    1- 1641     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1642     	.line	348, "main.c"; 	}
                                    1- 1643     	RETURN	
     0039 0010                      3-   40 m1      ret
                                    1- 1644     ; exit point of _refreshNub
                                    1- 1646     ;***
                                    1- 1647     ;  pBlock Stats: dbName = C
                                    1- 1648     ;***
                                    1- 1649     ;has an exit
                                    1- 1650     ;2 compiler assigned registers:
                                    1- 1651     ;   r0x1040
                                    1- 1652     ;   r0x1041
                                    1- 1653     ;; Starting pCode block
                                    1- 1654     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 1656     _checkIRKey:
                                    1- 1657     ; 2 exit points
                                    1- 1658     	.line	258, "main.c"; 	if(getbit(PORTB, 3) == 0)
     0000 01rr                      1- 1659     	MOVR	_PORTB,W
     0001 2208                      1- 1660     	ANDIA	0x08
     0002 0903                      1- 1661     	BTRSS	STATUS,2
     0003 2101                      1- 1662     	MOVIA	0x01
                                    1- 1663     	BANKSEL	r0x1040
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 1664     	MOVAR	r0x1040
     0006 01rr                      1- 1665     	MOVR	r0x1040,W
     0007 0903                      1- 1666     	BTRSS	STATUS,2
                                    1- 1667     	MGOTO	_00242_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1668     	.line	260, "main.c"; 	if(++revCount > 5)
                                    1- 1669     	BANKSEL	_revCount
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 05rr                      1- 1670     	INCR	_revCount,F
                                    1- 1671     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1672     ;;unsigned compare: left >= lit (0x6=6), size=1
     000B 2106                      1- 1673     	MOVIA	0x06
     000C 04rr                      1- 1674     	SUBAR	_revCount,W
     000D 0803                      1- 1675     	BTRSS	STATUS,0
                                    1- 1676     	MGOTO	_00244_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1677     	.line	262, "main.c"; 	if(irStep == 0 && waitTime == 0)
                                    1- 1678     	BANKSEL	_irStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1679     	MOVR	_irStep,W
     0011 0903                      1- 1680     	BTRSS	STATUS,2
                                    1- 1681     	MGOTO	_00244_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1682     	BANKSEL	_waitTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 1683     	MOVR	_waitTime,W
     0015 11rr                      1- 1684     	IORAR	(_waitTime + 1),W
     0016 0903                      1- 1685     	BTRSS	STATUS,2
                                    1- 1686     	MGOTO	_00244_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1687     	.line	265, "main.c"; 	if(workStep == 1)
                                    1- 1688     	BANKSEL	_workStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1- 1689     	MOVR	_workStep,W
     001A 2401                      1- 1690     	XORIA	0x01
     001B 0903                      1- 1691     	BTRSS	STATUS,2
                                    1- 1692     	MGOTO	_00234_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1693     	.line	267, "main.c"; 	workTime = 50;
     001D 2132                      1- 1694     	MOVIA	0x32
                                    1- 1695     	BANKSEL	_workTime
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1696     	MOVAR	_workTime
                                    1- 1697     	MGOTO	_00235_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
     0021                           1- 1698     _00234_DS_:
                                    1- 1699     	.line	269, "main.c"; 	else if(workStep == 2)
                                    1- 1700     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1701     	MOVR	_workStep,W
     0023 2402                      1- 1702     	XORIA	0x02
     0024 0903                      1- 1703     	BTRSS	STATUS,2
                                    1- 1704     	MGOTO	_00231_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1705     	.line	271, "main.c"; 	workTime = 100;
     0026 2164                      1- 1706     	MOVIA	0x64
                                    1- 1707     	BANKSEL	_workTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1708     	MOVAR	_workTime
                                    1- 1709     	MGOTO	_00235_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1- 1710     _00231_DS_:
                                    1- 1711     	.line	273, "main.c"; 	else if(workStep == 3)
                                    1- 1712     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 1713     	MOVR	_workStep,W
     002C 2403                      1- 1714     	XORIA	0x03
     002D 0903                      1- 1715     	BTRSS	STATUS,2
                                    1- 1716     	MGOTO	_00235_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1717     	.line	275, "main.c"; 	workTime = 150;
     002F 2196                      1- 1718     	MOVIA	0x96
                                    1- 1719     	BANKSEL	_workTime
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 1720     	MOVAR	_workTime
     0032                           1- 1721     _00235_DS_:
                                    1- 1722     	.line	277, "main.c"; 	waitTime = workTime + 300;
                                    1- 1723     	BANKSEL	_workTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 1724     	MOVR	_workTime,W
                                    1- 1725     	BANKSEL	r0x1040
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1726     	MOVAR	r0x1040
                                    1- 1727     	BANKSEL	r0x1041
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 1728     	CLRR	r0x1041
     0038 212C                      1- 1729     	MOVIA	0x2c
                                    1- 1730     	BANKSEL	r0x1040
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 03rr                      1- 1731     	ADDAR	r0x1040,W
                                    1- 1732     	BANKSEL	_waitTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 1733     	MOVAR	_waitTime
     003D 2101                      1- 1734     	MOVIA	0x01
     003E 00rr                      1- 1735     	MOVAR	(_waitTime + 1)
     003F 2100                      1- 1736     	MOVIA	0x00
     0040 0803                      1- 1737     	BTRSS	STATUS,0
                                    1- 1738     	MGOTO	_00005_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1739     	BANKSEL	r0x1041
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 05rr                      1- 1740     	INCR	r0x1041,W
     0044 0D03                      1- 1741     	BTRSC	STATUS,2
                                    1- 1742     	MGOTO	_00006_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
     0046                           1- 1743     _00005_DS_:
                                    1- 1744     	BANKSEL	_waitTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 03rr                      1- 1745     	ADDAR	(_waitTime + 1),F
     0048                           1- 1746     _00006_DS_:
                                    1- 1747     	.line	278, "main.c"; 	irStep = 1;
     0048 2101                      1- 1748     	MOVIA	0x01
                                    1- 1749     	BANKSEL	_irStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 1750     	MOVAR	_irStep
                                    1- 1751     	MGOTO	_00244_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 1752     _00242_DS_:
                                    1- 1753     	.line	285, "main.c"; 	revCount = 0;
                                    1- 1754     	BANKSEL	_revCount
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1- 1755     	CLRR	_revCount
                                    1- 1756     	.line	286, "main.c"; 	irStep = 0;			//移开了
                                    1- 1757     	BANKSEL	_irStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 1758     	CLRR	_irStep
     0050                           1- 1759     _00244_DS_:
                                    1- 1760     	.line	338, "main.c"; 	}
                                    1- 1761     	RETURN	
     0050 0010                      3-   40 m1      ret
                                    1- 1762     ; exit point of _checkIRKey
                                    1- 1764     ;***
                                    1- 1765     ;  pBlock Stats: dbName = C
                                    1- 1766     ;***
                                    1- 1767     ;has an exit
                                    1- 1768     ;functions called:
                                    1- 1769     ;   _pwmStop
                                    1- 1770     ;   __divuchar
                                    1- 1771     ;   __moduchar
                                    1- 1772     ;   _pwmInit
                                    1- 1773     ;   _pwmStop
                                    1- 1774     ;   __divuchar
                                    1- 1775     ;   __moduchar
                                    1- 1776     ;   __moduint
                                    1- 1777     ;   _pwmStop
                                    1- 1778     ;   __divuchar
                                    1- 1779     ;   __moduchar
                                    1- 1780     ;   _pwmInit
                                    1- 1781     ;   _pwmStop
                                    1- 1782     ;   __divuchar
                                    1- 1783     ;   __moduchar
                                    1- 1784     ;   __moduint
                                    1- 1785     ;5 compiler assigned registers:
                                    1- 1786     ;   STK00
                                    1- 1787     ;   STK02
                                    1- 1788     ;   STK01
                                    1- 1789     ;   r0x1042
                                    1- 1790     ;   r0x1043
                                    1- 1791     ;; Starting pCode block
                                    1- 1792     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1794     _chrgCtr:
                                    1- 1795     ; 2 exit points
                                    1- 1796     	.line	153, "main.c"; 	if(0x20 & PORTA)
     0000 0Arr                      1- 1797     	BTRSS	_PORTA,5
                                    1- 1798     	MGOTO	_00179_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1799     	.line	156, "main.c"; 	pwmStop();
                                    1- 1800     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1801     	.line	157, "main.c"; 	showFlag = 1;
     0003 2101                      1- 1802     	MOVIA	0x01
                                    1- 1803     	BANKSEL	_showFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 1804     	MOVAR	_showFlag
                                    1- 1805     	.line	158, "main.c"; 	if(0x80 & PORTA || fullFlag)
     0006 0Frr                      1- 1806     	BTRSC	_PORTA,7
                                    1- 1807     	MGOTO	_00150_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1808     	BANKSEL	_fullFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1809     	MOVR	_fullFlag,W
     000A 0D03                      1- 1810     	BTRSC	STATUS,2
                                    1- 1811     	MGOTO	_00151_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1- 1812     _00150_DS_:
                                    1- 1813     	.line	160, "main.c"; 	fullFlag = 1;
     000C 2101                      1- 1814     	MOVIA	0x01
                                    1- 1815     	BANKSEL	_fullFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1816     	MOVAR	_fullFlag
                                    1- 1817     	.line	162, "main.c"; 	baiweiNum = 1;
                                    1- 1818     	BANKSEL	_baiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1- 1819     	MOVAR	_baiweiNum
                                    1- 1820     	.line	163, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 1821     	BANKSEL	_geweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 1822     	CLRR	_geweiNum
                                    1- 1823     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 1824     	CLRR	_shiweiNum
                                    1- 1825     	MGOTO	_00181_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1826     ;;unsigned compare: left < lit (0x63=99), size=1
     0016                           1- 1827     _00151_DS_:
                                    1- 1828     	.line	168, "main.c"; 	if(pwStep >= 99)
     0016 2163                      1- 1829     	MOVIA	0x63
                                    1- 1830     	BANKSEL	_pwStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 04rr                      1- 1831     	SUBAR	_pwStep,W
     0019 0803                      1- 1832     	BTRSS	STATUS,0
                                    1- 1833     	MGOTO	_00148_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1834     	.line	170, "main.c"; 	baiweiNum = 0;
                                    1- 1835     	BANKSEL	_baiweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 1836     	CLRR	_baiweiNum
                                    1- 1837     	.line	171, "main.c"; 	shiweiNum = 9;
     001D 2109                      1- 1838     	MOVIA	0x09
                                    1- 1839     	BANKSEL	_shiweiNum
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1840     	MOVAR	_shiweiNum
                                    1- 1841     	.line	172, "main.c"; 	geweiNum = 9;
                                    1- 1842     	BANKSEL	_geweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1843     	MOVAR	_geweiNum
                                    1- 1844     	MGOTO	_00181_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1845     _00148_DS_:
                                    1- 1846     	.line	176, "main.c"; 	baiweiNum = 0;
                                    1- 1847     	BANKSEL	_baiweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1- 1848     	CLRR	_baiweiNum
                                    1- 1849     	.line	177, "main.c"; 	shiweiNum = pwStep/10;
     0025 210A                      1- 1850     	MOVIA	0x0a
     0026 00rr                      1- 1851     	MOVAR	STK00
                                    1- 1852     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 1853     	MOVR	_pwStep,W
                                    1- 1854     	MCALL	__divuchar
     0029 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1855     	BANKSEL	_shiweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 1856     	MOVAR	_shiweiNum
                                    1- 1857     	.line	178, "main.c"; 	geweiNum = pwStep%10;
     002C 210A                      1- 1858     	MOVIA	0x0a
     002D 00rr                      1- 1859     	MOVAR	STK00
                                    1- 1860     	BANKSEL	_pwStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 1861     	MOVR	_pwStep,W
                                    1- 1862     	MCALL	__moduchar
     0030 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1863     	BANKSEL	_geweiNum
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 1864     	MOVAR	_geweiNum
                                    1- 1865     	MGOTO	_00181_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 1866     _00179_DS_:
                                    1- 1867     	.line	185, "main.c"; 	fullFlag = 0;
                                    1- 1868     	BANKSEL	_fullFlag
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1- 1869     	CLRR	_fullFlag
                                    1- 1870     	.line	186, "main.c"; 	if(workTime > 0)
                                    1- 1871     	BANKSEL	_workTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 1872     	MOVR	_workTime,W
     0038 0D03                      1- 1873     	BTRSC	STATUS,2
                                    1- 1874     	MGOTO	_00155_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1875     	.line	188, "main.c"; 	pwmInit();
                                    1- 1876     	MCALL	_pwmInit
     003A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1877     	.line	189, "main.c"; 	workTime--;
                                    1- 1878     	BANKSEL	_workTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 06rr                      1- 1879     	DECR	_workTime,F
                                    1- 1880     	MGOTO	_00156_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E                           1- 1881     _00155_DS_:
                                    1- 1882     	.line	193, "main.c"; 	pwmStop();
                                    1- 1883     	MCALL	_pwmStop
     003E 2rrr                      3-   66 m1      LCALL rom_address
     003F                           1- 1884     _00156_DS_:
                                    1- 1885     	.line	195, "main.c"; 	if(pwShowTime)
                                    1- 1886     	BANKSEL	_pwShowTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 1887     	MOVR	_pwShowTime,W
     0041 0D03                      1- 1888     	BTRSC	STATUS,2
                                    1- 1889     	MGOTO	_00176_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1890     	.line	197, "main.c"; 	showFlag = 1;
     0043 2101                      1- 1891     	MOVIA	0x01
                                    1- 1892     	BANKSEL	_showFlag
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1893     	MOVAR	_showFlag
                                    1- 1894     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1895     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 1896     	.line	198, "main.c"; 	if(pwStep > 99)
     0046 2164                      1- 1897     	MOVIA	0x64
                                    1- 1898     	BANKSEL	_pwStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 04rr                      1- 1899     	SUBAR	_pwStep,W
     0049 0803                      1- 1900     	BTRSS	STATUS,0
                                    1- 1901     	MGOTO	_00158_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1902     	.line	200, "main.c"; 	baiweiNum = 1;
     004B 2101                      1- 1903     	MOVIA	0x01
                                    1- 1904     	BANKSEL	_baiweiNum
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 00rr                      1- 1905     	MOVAR	_baiweiNum
                                    1- 1906     	.line	201, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 1907     	BANKSEL	_geweiNum
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 1908     	CLRR	_geweiNum
                                    1- 1909     	BANKSEL	_shiweiNum
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 1910     	CLRR	_shiweiNum
                                    1- 1911     	MGOTO	_00181_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1- 1912     _00158_DS_:
                                    1- 1913     	.line	205, "main.c"; 	baiweiNum = 0;
                                    1- 1914     	BANKSEL	_baiweiNum
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1915     	CLRR	_baiweiNum
                                    1- 1916     	.line	206, "main.c"; 	shiweiNum = pwStep/10;
     0055 210A                      1- 1917     	MOVIA	0x0a
     0056 00rr                      1- 1918     	MOVAR	STK00
                                    1- 1919     	BANKSEL	_pwStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 1920     	MOVR	_pwStep,W
                                    1- 1921     	MCALL	__divuchar
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1922     	BANKSEL	_shiweiNum
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 1923     	MOVAR	_shiweiNum
                                    1- 1924     	.line	207, "main.c"; 	geweiNum = pwStep%10;
     005C 210A                      1- 1925     	MOVIA	0x0a
     005D 00rr                      1- 1926     	MOVAR	STK00
                                    1- 1927     	BANKSEL	_pwStep
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1- 1928     	MOVR	_pwStep,W
                                    1- 1929     	MCALL	__moduchar
     0060 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1930     	BANKSEL	_geweiNum
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 1931     	MOVAR	_geweiNum
                                    1- 1932     	MGOTO	_00181_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064                           1- 1933     _00176_DS_:
                                    1- 1934     	.line	210, "main.c"; 	else if(stepShowTime)
                                    1- 1935     	BANKSEL	_stepShowTime
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1936     	MOVR	_stepShowTime,W
     0066 0D03                      1- 1937     	BTRSC	STATUS,2
                                    1- 1938     	MGOTO	_00173_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1939     	.line	212, "main.c"; 	showFlag = 1;
     0068 2101                      1- 1940     	MOVIA	0x01
                                    1- 1941     	BANKSEL	_showFlag
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 00rr                      1- 1942     	MOVAR	_showFlag
                                    1- 1943     	.line	213, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 1944     	BANKSEL	_shiweiNum
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 02rr                      1- 1945     	CLRR	_shiweiNum
                                    1- 1946     	BANKSEL	_baiweiNum
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 02rr                      1- 1947     	CLRR	_baiweiNum
                                    1- 1948     	.line	214, "main.c"; 	geweiNum = workStep;
                                    1- 1949     	BANKSEL	_workStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 01rr                      1- 1950     	MOVR	_workStep,W
                                    1- 1951     	BANKSEL	_geweiNum
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1952     	MOVAR	_geweiNum
                                    1- 1953     	MGOTO	_00181_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1954     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1955     ;;unsigned compare: left >= lit (0x6=6), size=1
     0074                           1- 1956     _00173_DS_:
                                    1- 1957     	.line	218, "main.c"; 	if(pwStep <= 5 && offShowTime == 0)
     0074 2106                      1- 1958     	MOVIA	0x06
                                    1- 1959     	BANKSEL	_pwStep
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 04rr                      1- 1960     	SUBAR	_pwStep,W
     0077 0C03                      1- 1961     	BTRSC	STATUS,0
                                    1- 1962     	MGOTO	_00169_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1963     	BANKSEL	_offShowTime
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 1964     	MOVR	_offShowTime,W
     007B 0903                      1- 1965     	BTRSS	STATUS,2
                                    1- 1966     	MGOTO	_00169_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1967     	.line	220, "main.c"; 	showFlag = 1;
     007D 2101                      1- 1968     	MOVIA	0x01
                                    1- 1969     	BANKSEL	_showFlag
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 1970     	MOVAR	_showFlag
                                    1- 1971     	.line	221, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 1972     	BANKSEL	_shanTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 05rr                      1- 1973     	INCR	_shanTime,F
     0082 0D03                      1- 1974     	BTRSC	STATUS,2
     0083 05rr                      1- 1975     	INCR	(_shanTime + 1),F
                                    1- 1976     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1977     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0084 2101                      1- 1978     	MOVIA	0x01
     0085 04rr                      1- 1979     	SUBAR	(_shanTime + 1),W
     0086 0903                      1- 1980     	BTRSS	STATUS,2
                                    1- 1981     	MGOTO	_00222_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088 21F5                      1- 1982     	MOVIA	0xf5
     0089 04rr                      1- 1983     	SUBAR	_shanTime,W
     008A                           1- 1984     _00222_DS_:
     008A 0803                      1- 1985     	BTRSS	STATUS,0
                                    1- 1986     	MGOTO	_00161_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1987     	.line	223, "main.c"; 	shanTime = 0;
                                    1- 1988     	BANKSEL	_shanTime
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 02rr                      1- 1989     	CLRR	_shanTime
     008E 02rr                      1- 1990     	CLRR	(_shanTime + 1)
                                    1- 1991     	.line	224, "main.c"; 	showFlag = 0;
                                    1- 1992     	BANKSEL	_showFlag
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 02rr                      1- 1993     	CLRR	_showFlag
                                    1- 1994     	.line	225, "main.c"; 	offShowTime = 250;
     0091 21FA                      1- 1995     	MOVIA	0xfa
                                    1- 1996     	BANKSEL	_offShowTime
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 1997     	MOVAR	_offShowTime
     0094                           1- 1998     _00161_DS_:
                                    1- 1999     	.line	227, "main.c"; 	if(shanTime % 100 < 50)
     0094 2164                      1- 2000     	MOVIA	0x64
     0095 00rr                      1- 2001     	MOVAR	STK02
     0096 2100                      1- 2002     	MOVIA	0x00
     0097 00rr                      1- 2003     	MOVAR	STK01
                                    1- 2004     	BANKSEL	_shanTime
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 2005     	MOVR	_shanTime,W
     009A 00rr                      1- 2006     	MOVAR	STK00
     009B 01rr                      1- 2007     	MOVR	(_shanTime + 1),W
                                    1- 2008     	MCALL	__moduint
     009C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2009     	BANKSEL	r0x1042
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 2010     	MOVAR	r0x1042
     009F 01rr                      1- 2011     	MOVR	STK00,W
                                    1- 2012     	BANKSEL	r0x1043
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 2013     	MOVAR	r0x1043
                                    1- 2014     ;;unsigned compare: left < lit (0x32=50), size=2
     00A2 2100                      1- 2015     	MOVIA	0x00
                                    1- 2016     	BANKSEL	r0x1042
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 04rr                      1- 2017     	SUBAR	r0x1042,W
     00A5 0903                      1- 2018     	BTRSS	STATUS,2
                                    1- 2019     	MGOTO	_00223_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
     00A7 2132                      1- 2020     	MOVIA	0x32
                                    1- 2021     	BANKSEL	r0x1043
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 2022     	SUBAR	r0x1043,W
     00AA                           1- 2023     _00223_DS_:
     00AA 0C03                      1- 2024     	BTRSC	STATUS,0
                                    1- 2025     	MGOTO	_00163_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2026     	.line	229, "main.c"; 	showFlag = 1;
     00AC 2101                      1- 2027     	MOVIA	0x01
                                    1- 2028     	BANKSEL	_showFlag
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 00rr                      1- 2029     	MOVAR	_showFlag
                                    1- 2030     	.line	230, "main.c"; 	baiweiNum = 0;
                                    1- 2031     	BANKSEL	_baiweiNum
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 02rr                      1- 2032     	CLRR	_baiweiNum
                                    1- 2033     	.line	231, "main.c"; 	shiweiNum = 0;
                                    1- 2034     	BANKSEL	_shiweiNum
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 02rr                      1- 2035     	CLRR	_shiweiNum
                                    1- 2036     	.line	232, "main.c"; 	geweiNum = pwStep;
                                    1- 2037     	BANKSEL	_pwStep
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 01rr                      1- 2038     	MOVR	_pwStep,W
                                    1- 2039     	BANKSEL	_geweiNum
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 2040     	MOVAR	_geweiNum
                                    1- 2041     	MGOTO	_00181_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
     00B8                           1- 2042     _00163_DS_:
                                    1- 2043     	.line	236, "main.c"; 	showFlag = 0;
                                    1- 2044     	BANKSEL	_showFlag
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 02rr                      1- 2045     	CLRR	_showFlag
                                    1- 2046     	MGOTO	_00181_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
     00BB                           1- 2047     _00169_DS_:
                                    1- 2048     	.line	239, "main.c"; 	else if(offShowTime > 0)
                                    1- 2049     	BANKSEL	_offShowTime
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 01rr                      1- 2050     	MOVR	_offShowTime,W
     00BD 0D03                      1- 2051     	BTRSC	STATUS,2
                                    1- 2052     	MGOTO	_00166_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2053     	.line	241, "main.c"; 	showFlag = 1;
     00BF 2101                      1- 2054     	MOVIA	0x01
                                    1- 2055     	BANKSEL	_showFlag
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 2056     	MOVAR	_showFlag
                                    1- 2057     	.line	242, "main.c"; 	baiweiNum = 0;
                                    1- 2058     	BANKSEL	_baiweiNum
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 02rr                      1- 2059     	CLRR	_baiweiNum
                                    1- 2060     	.line	243, "main.c"; 	shiweiNum = 10;
     00C4 210A                      1- 2061     	MOVIA	0x0a
                                    1- 2062     	BANKSEL	_shiweiNum
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 00rr                      1- 2063     	MOVAR	_shiweiNum
                                    1- 2064     	.line	244, "main.c"; 	geweiNum = 10;
                                    1- 2065     	BANKSEL	_geweiNum
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 2066     	MOVAR	_geweiNum
                                    1- 2067     	MGOTO	_00181_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
     00CA                           1- 2068     _00166_DS_:
                                    1- 2069     	.line	248, "main.c"; 	showFlag = 0;
                                    1- 2070     	BANKSEL	_showFlag
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 02rr                      1- 2071     	CLRR	_showFlag
     00CC                           1- 2072     _00181_DS_:
                                    1- 2073     	.line	252, "main.c"; 	}
                                    1- 2074     	RETURN	
     00CC 0010                      3-   40 m1      ret
                                    1- 2075     ; exit point of _chrgCtr
                                    1- 2078     ;	code size estimation:
                                    1- 2079     ;	  719+  216 =   935 instructions ( 2302 byte)
                                    1- 2081     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
