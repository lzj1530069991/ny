
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_Quarter_VDD_Convert
                                    1-  136     	extern	_checkBat
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyCtr
                                    1-  139     	extern	_pwmStop
                                    1-  140     	extern	_pwmInit
                                    1-  141     	extern	_gotoSleep
                                    1-  142     	extern	_initSys
                                    1-  143     	extern	_refreshNub
                                    1-  144     	extern	_checkIRKey
                                    1-  145     	extern	_chrgCtr
                                    1-  146     	extern	_isr
                                    1-  147     	extern	_main
                                    1-  148     	extern	_keyRead
                                    1-  149     	extern	_R_Quarter_VDD_DATA
                                    1-  150     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  151     	extern	_intCount
                                    1-  152     	extern	_IntFlag
                                    1-  153     	extern	_baiweiNum
                                    1-  154     	extern	_shiweiNum
                                    1-  155     	extern	_geweiNum
                                    1-  156     	extern	_showFlag
                                    1-  157     	extern	_irStep
                                    1-  158     	extern	_revCount
                                    1-  159     	extern	_checkCount
                                    1-  160     	extern	_pwmTime
                                    1-  161     	extern	_sendFlag
                                    1-  162     	extern	_workTime
                                    1-  163     	extern	_workStep
                                    1-  164     	extern	_pwFlag
                                    1-  165     	extern	_pwShowTime
                                    1-  166     	extern	_stepShowTime
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_keyCount
                                    1-  169     	extern	_longPressFlag
                                    1-  170     	extern	_sleepTime
                                    1-  171     	extern	_fullFlag
                                    1-  172     	extern	_shanTime
                                    1-  173     	extern	_count1s
                                    1-  174     	extern	_waitTime
                                    1-  175     	extern	_offShowTime
                                    1-  176     	extern	_notRecv
                                    1-  177     	extern	_zhedangFlag
                                    1-  178     	extern	_zhedangTime
                                    1-  179     	extern	_sleepFlag
                                    1-  180     	extern	_powerShi
                                    1-  181     	extern	_powerGe
                                    1-  182     	extern	_count5s
                                    1-  183     	extern	_count250ms
                                    1-  184     	extern	_checkBatTime
                                    1-  185     	extern	_fullTime
                                    1-  186     	extern	_waitBatTime
                                    1-  187     	extern	_startTime
                                    1-  188     	extern	_zhedangCount
                                    1-  189     	extern	_count10ms
                                    1-  190     	extern	_sendPreSta
                                    1-  192     	extern PSAVE
                                    1-  193     	extern SSAVE
                                    1-  194     	extern WSAVE
                                    1-  195     	extern STK06
                                    1-  196     	extern STK05
                                    1-  197     	extern STK04
                                    1-  198     	extern STK03
                                    1-  199     	extern STK02
                                    1-  200     	extern STK01
                                    1-  201     	extern STK00
                                    1-  203     .segment "uninit", 0x20000040
 20000040                           1-  204     PSAVE:
                                    1-  205     	.res 1
 20000041                           1-  206     SSAVE:
                                    1-  207     	.res 1
 20000042                           1-  208     WSAVE:
                                    1-  209     	.res 1
 20000043                           1-  210     STK06:
                                    1-  211     	.res 1
 20000044                           1-  212     STK05:
                                    1-  213     	.res 1
 20000045                           1-  214     STK04:
                                    1-  215     	.res 1
 20000046                           1-  216     STK03:
                                    1-  217     	.res 1
 20000047                           1-  218     STK02:
                                    1-  219     	.res 1
 20000048                           1-  220     STK01:
                                    1-  221     	.res 1
 20000049                           1-  222     STK00:
                                    1-  223     	.res 1
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ; global definitions
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_Quarter_VDD_DATA:
                                    1-  230     	.res	2
                                    1-  233     .segment "uninit"
     0000                           1-  234     _R_Quarter_VDD_DATA_LB:
                                    1-  235     	.res	1
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ; absolute symbol definitions
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; compiler-defined variables
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1052:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1053:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1050:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1051:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x104F:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x104C:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x104D:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x104B:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1049:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x104A:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1043:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1044:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1045:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1046:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1048:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1047:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x103D:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x103E:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x103F:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1042:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x103B:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x103C:
                                    1-  309     	.res	1
                                    1-  310     ;--------------------------------------------------------
                                    1-  311     ; initialized data
                                    1-  312     ;--------------------------------------------------------
                                    1-  314     .segment "idata"
     0000                           1-  315     _intCount:
     0000 0000                      1-  316     	dw	0x00
                                    1-  320     .segment "idata"
     0000                           1-  321     _IntFlag:
     0000 0000                      1-  322     	dw	0x00
                                    1-  326     .segment "idata"
     0000                           1-  327     _baiweiNum:
     0000 0000                      1-  328     	dw	0x00
                                    1-  332     .segment "idata"
     0000                           1-  333     _shiweiNum:
     0000 0000                      1-  334     	dw	0x00
                                    1-  338     .segment "idata"
     0000                           1-  339     _geweiNum:
     0000 0000                      1-  340     	dw	0x00
                                    1-  344     .segment "idata"
     0000                           1-  345     _showFlag:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _irStep:
     0000 0000                      1-  352     	dw	0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _revCount:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _checkCount:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _pwmTime:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _sendFlag:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _workTime:
     0000 0000 0000                 1-  382     	dw	0x00, 0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _workStep:
     0000 0000                      1-  388     	dw	0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _pwFlag:
     0000 0000                      1-  394     	dw	0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _pwShowTime:
     0000 0000                      1-  400     	dw	0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _stepShowTime:
     0000 0000                      1-  406     	dw	0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _pwStep:
     0000 0000                      1-  412     	dw	0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _keyCount:
     0000 0000                      1-  418     	dw	0x00
                                    1-  422     .segment "idata"
     0000                           1-  423     _longPressFlag:
     0000 0000                      1-  424     	dw	0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _sleepTime:
     0000 0000                      1-  430     	dw	0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _fullFlag:
     0000 0000                      1-  436     	dw	0x00
                                    1-  440     .segment "idata"
     0000                           1-  441     _shanTime:
     0000 0000 0000                 1-  442     	dw	0x00, 0x00
                                    1-  446     .segment "idata"
     0000                           1-  447     _count1s:
     0000 0000 0000                 1-  448     	dw	0x00, 0x00
                                    1-  452     .segment "idata"
     0000                           1-  453     _waitTime:
     0000 0000 0000                 1-  454     	dw	0x00, 0x00
                                    1-  458     .segment "idata"
     0000                           1-  459     _offShowTime:
     0000 0000                      1-  460     	dw	0x00
                                    1-  464     .segment "idata"
     0000                           1-  465     _notRecv:
     0000 0000                      1-  466     	dw	0x00
                                    1-  470     .segment "idata"
     0000                           1-  471     _zhedangFlag:
     0000 0000                      1-  472     	dw	0x00
                                    1-  476     .segment "idata"
     0000                           1-  477     _zhedangTime:
     0000 0000                      1-  478     	dw	0x00
                                    1-  482     .segment "idata"
     0000                           1-  483     _sleepFlag:
     0000 0000                      1-  484     	dw	0x00
                                    1-  488     .segment "idata"
     0000                           1-  489     _powerShi:
     0000 0000                      1-  490     	dw	0x00
                                    1-  494     .segment "idata"
     0000                           1-  495     _powerGe:
     0000 0000                      1-  496     	dw	0x00
                                    1-  500     .segment "idata"
     0000                           1-  501     _count5s:
     0000 0000 0000                 1-  502     	dw	0x00, 0x00
                                    1-  506     .segment "idata"
     0000                           1-  507     _count250ms:
     0000 0000 0000                 1-  508     	dw	0x00, 0x00
                                    1-  512     .segment "idata"
     0000                           1-  513     _checkBatTime:
     0000 0000                      1-  514     	dw	0x00
                                    1-  518     .segment "idata"
     0000                           1-  519     _fullTime:
     0000 0000                      1-  520     	dw	0x00
                                    1-  524     .segment "idata"
     0000                           1-  525     _waitBatTime:
     0000 0000                      1-  526     	dw	0x00
                                    1-  530     .segment "idata"
     0000                           1-  531     _startTime:
     0000 0000                      1-  532     	dw	0x00
                                    1-  536     .segment "idata"
     0000                           1-  537     _zhedangCount:
     0000 0000                      1-  538     	dw	0x00
                                    1-  542     .segment "idata"
     0000                           1-  543     _count10ms:
     0000 0000                      1-  544     	dw	0x00
                                    1-  548     .segment "idata"
     0000                           1-  549     _sendPreSta:
     0000 0000                      1-  550     	dw	0x00
                                    1-  554     .segment "idata"
     0000                           1-  555     _numArray:
     0000 003F                      1-  556     	dw	0x3f
     0001 0006                      1-  557     	dw	0x06
     0002 005B                      1-  558     	dw	0x5b
     0003 004F                      1-  559     	dw	0x4f
     0004 0066                      1-  560     	dw	0x66
     0005 006D                      1-  561     	dw	0x6d
     0006 007D                      1-  562     	dw	0x7d
     0007 0007                      1-  563     	dw	0x07
     0008 007F                      1-  564     	dw	0x7f
     0009 006F                      1-  565     	dw	0x6f
     000A 0071                      1-  566     	dw	0x71
     000B 0079                      1-  567     	dw	0x79
     000C 0050                      1-  568     	dw	0x50
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ; overlayable items in internal ram 
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ;	udata_ovr
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ; reset vector 
                                    1-  577     ;--------------------------------------------------------
                                    1-  578     ORG	0x0000
     0000 3rrr                      1-  579     	LGOTO	__nyc_ny8_startup
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ; interrupt and initialization code
                                    1-  582     ;--------------------------------------------------------
                                    1-  583     ORG 0x0008
                                    1-  584     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  586     .segment "code"
     0000                           1-  587     __sdcc_interrupt:
                                    1-  588     ;***
                                    1-  589     ;  pBlock Stats: dbName = I
                                    1-  590     ;***
                                    1-  591     ;2 compiler assigned registers:
                                    1-  592     ;   STK00
                                    1-  593     ;   STK01
                                    1-  594     ;; Starting pCode block
     0000                           1-  595     _isr:
                                    1-  596     ; 0 exit points
                                    1-  597     	.line	84, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  598     	MOVAR	WSAVE
     0001 1503                      1-  599     	SWAPR	STATUS,W
     0002 0283                      1-  600     	CLRR	STATUS
     0003 00rr                      1-  601     	MOVAR	SSAVE
     0004 010A                      1-  602     	MOVR	PCHBUF,W
     0005 028A                      1-  603     	CLRR	PCHBUF
     0006 00rr                      1-  604     	MOVAR	PSAVE
     0007 0104                      1-  605     	MOVR	FSR,W
                                    1-  606     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  607     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  608     	MOVR	STK00,W
                                    1-  609     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  610     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  611     	MOVR	STK01,W
                                    1-  612     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  613     	MOVAR	___sdcc_saved_stk01
                                    1-  614     	.line	86, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  615     	BTRSS	_INTFbits,0
                                    1-  616     	MGOTO	_00120_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  617     	.line	88, "main.c"; 	TMR0 += 57;
     0012 2139                      1-  618     	MOVIA	0x39
     0013 03rr                      1-  619     	ADDAR	_TMR0,F
                                    1-  620     	.line	90, "main.c"; 	if(++intCount >= 10)
                                    1-  621     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  622     	INCR	_intCount,F
                                    1-  623     ;;unsigned compare: left < lit (0xA=10), size=1
     0016 210A                      1-  624     	MOVIA	0x0a
     0017 04rr                      1-  625     	SUBAR	_intCount,W
     0018 0803                      1-  626     	BTRSS	STATUS,0
                                    1-  627     	MGOTO	_00120_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  628     	.line	92, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  629     	MOVIA	0x01
                                    1-  630     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  631     	MOVAR	_IntFlag
                                    1-  632     	.line	93, "main.c"; 	intCount = 0;	
                                    1-  633     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  634     	CLRR	_intCount
                                    1-  635     	.line	94, "main.c"; 	if(++count1s > 1000)
                                    1-  636     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  637     	INCR	_count1s,F
     0021 0D03                      1-  638     	BTRSC	STATUS,2
     0022 05rr                      1-  639     	INCR	(_count1s + 1),F
                                    1-  640     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  641     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0023 2103                      1-  642     	MOVIA	0x03
     0024 04rr                      1-  643     	SUBAR	(_count1s + 1),W
     0025 0903                      1-  644     	BTRSS	STATUS,2
                                    1-  645     	MGOTO	_00150_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027 21E9                      1-  646     	MOVIA	0xe9
     0028 04rr                      1-  647     	SUBAR	_count1s,W
     0029                           1-  648     _00150_DS_:
     0029 0803                      1-  649     	BTRSS	STATUS,0
                                    1-  650     	MGOTO	_00120_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  651     	.line	96, "main.c"; 	count1s = 0;
                                    1-  652     	BANKSEL	_count1s
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1-  653     	CLRR	_count1s
     002D 02rr                      1-  654     	CLRR	(_count1s + 1)
                                    1-  655     	.line	97, "main.c"; 	if(stepShowTime > 0)
                                    1-  656     	BANKSEL	_stepShowTime
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1-  657     	MOVR	_stepShowTime,W
     0030 0D03                      1-  658     	BTRSC	STATUS,2
                                    1-  659     	MGOTO	_00113_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  660     	.line	98, "main.c"; 	stepShowTime--;
     0032 06rr                      1-  661     	DECR	_stepShowTime,F
                                    1-  662     	MGOTO	_00120_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1-  663     _00113_DS_:
                                    1-  664     	.line	99, "main.c"; 	else if(pwShowTime > 0)
                                    1-  665     	BANKSEL	_pwShowTime
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1-  666     	MOVR	_pwShowTime,W
     0036 0D03                      1-  667     	BTRSC	STATUS,2
                                    1-  668     	MGOTO	_00110_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  669     	.line	101, "main.c"; 	pwShowTime--;
     0038 06rr                      1-  670     	DECR	_pwShowTime,F
                                    1-  671     	MGOTO	_00120_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1-  672     _00110_DS_:
                                    1-  673     	.line	103, "main.c"; 	else if(offShowTime > 0)
                                    1-  674     	BANKSEL	_offShowTime
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  675     	MOVR	_offShowTime,W
     003C 0D03                      1-  676     	BTRSC	STATUS,2
                                    1-  677     	MGOTO	_00120_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  678     	.line	105, "main.c"; 	--offShowTime;
     003E 17rr                      1-  679     	DECRSZ	_offShowTime,F
                                    1-  680     	.line	106, "main.c"; 	if(offShowTime == 0)
                                    1-  681     	MGOTO	_00120_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  682     	.line	107, "main.c"; 	sleepFlag = 1;
     0040 2101                      1-  683     	MOVIA	0x01
                                    1-  684     	BANKSEL	_sleepFlag
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1-  685     	MOVAR	_sleepFlag
     0043                           1-  686     _00120_DS_:
                                    1-  687     	.line	124, "main.c"; 	if(INTFbits.PABIF)
     0043 08rr                      1-  688     	BTRSS	_INTFbits,1
                                    1-  689     	MGOTO	_00122_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  690     	.line	126, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0045 21FD                      1-  691     	MOVIA	0xfd
     0046 00rr                      1-  692     	MOVAR	_INTF
     0047                           1-  693     _00122_DS_:
                                    1-  694     	.line	130, "main.c"; 	INTF = 0;
     0047 02rr                      1-  695     	CLRR	_INTF
                                    1-  696     	.line	132, "main.c"; 	}
                                    1-  697     	BANKSEL	___sdcc_saved_stk01
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  698     	MOVR	___sdcc_saved_stk01,W
     004A 00rr                      1-  699     	MOVAR	STK01
                                    1-  700     	BANKSEL	___sdcc_saved_stk00
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1-  701     	MOVR	___sdcc_saved_stk00,W
     004D 00rr                      1-  702     	MOVAR	STK00
                                    1-  703     	BANKSEL	___sdcc_saved_fsr
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1-  704     	MOVR	___sdcc_saved_fsr,W
     0050 0084                      1-  705     	MOVAR	FSR
     0051 01rr                      1-  706     	MOVR	PSAVE,W
     0052 008A                      1-  707     	MOVAR	PCHBUF
     0053 0283                      1-  708     	CLRR	STATUS
     0054 15rr                      1-  709     	SWAPR	SSAVE,W
     0055 0083                      1-  710     	MOVAR	STATUS
     0056 15rr                      1-  711     	SWAPR	WSAVE,F
     0057 15rr                      1-  712     	SWAPR	WSAVE,W
     0058                           1-  713     END_OF_INTERRUPT:
     0058 0011                      1-  714     	RETIE	
                                    1-  716     ;--------------------------------------------------------
                                    1-  717     ; code
                                    1-  718     ;--------------------------------------------------------
                                    1-  719     ;***
                                    1-  720     ;  pBlock Stats: dbName = M
                                    1-  721     ;***
                                    1-  722     ;has an exit
                                    1-  723     ;functions called:
                                    1-  724     ;   _initSys
                                    1-  725     ;   _initAD
                                    1-  726     ;   _refreshNub
                                    1-  727     ;   _refreshNub
                                    1-  728     ;   _setInput
                                    1-  729     ;   __divuchar
                                    1-  730     ;   __moduchar
                                    1-  731     ;   _delay
                                    1-  732     ;   _checkIRKey
                                    1-  733     ;   _keyCtr
                                    1-  734     ;   _checkBat
                                    1-  735     ;   _chrgCtr
                                    1-  736     ;   _gotoSleep
                                    1-  737     ;   _gotoSleep
                                    1-  738     ;   _delay
                                    1-  739     ;   _initSys
                                    1-  740     ;   _initAD
                                    1-  741     ;   _refreshNub
                                    1-  742     ;   _refreshNub
                                    1-  743     ;   _setInput
                                    1-  744     ;   __divuchar
                                    1-  745     ;   __moduchar
                                    1-  746     ;   _delay
                                    1-  747     ;   _checkIRKey
                                    1-  748     ;   _keyCtr
                                    1-  749     ;   _checkBat
                                    1-  750     ;   _chrgCtr
                                    1-  751     ;   _gotoSleep
                                    1-  752     ;   _gotoSleep
                                    1-  753     ;   _delay
                                    1-  754     ;3 compiler assigned registers:
                                    1-  755     ;   STK00
                                    1-  756     ;   r0x1052
                                    1-  757     ;   r0x1053
                                    1-  758     ;; Starting pCode block
                                    1-  759     .segment "code"; module=main, function=_main
     0000                           1-  761     _main:
                                    1-  762     ; 2 exit points
                                    1-  763     	.line	136, "main.c"; 	initSys();
                                    1-  764     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  765     	.line	137, "main.c"; 	initAD();
                                    1-  766     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  767     	.line	138, "main.c"; 	startTime = 200;
     0002 21C8                      1-  768     	MOVIA	0xc8
                                    1-  769     	BANKSEL	_startTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  770     	MOVAR	_startTime
     0005                           1-  771     _00206_DS_:
                                    1-  772     	.line	142, "main.c"; 	CLRWDT();							// Clear WatchDog
     0005 0002                      1-  773     	clrwdt
                                    1-  774     	.line	143, "main.c"; 	if(showFlag)
                                    1-  775     	BANKSEL	_showFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  776     	MOVR	_showFlag,W
     0008 0D03                      1-  777     	BTRSC	STATUS,2
                                    1-  778     	MGOTO	_00163_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  779     	.line	144, "main.c"; 	refreshNub();
                                    1-  780     	MCALL	_refreshNub
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  781     	MGOTO	_00164_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1-  782     _00163_DS_:
                                    1-  783     	.line	147, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  784     	BANKSEL	_keyCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  785     	MOVR	_keyCount,W
     000E 0D03                      1-  786     	BTRSC	STATUS,2
                                    1-  787     	MGOTO	_00159_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  788     	BANKSEL	_pwFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  789     	MOVR	_pwFlag,W
     0012 2401                      1-  790     	XORIA	0x01
     0013 0903                      1-  791     	BTRSS	STATUS,2
                                    1-  792     	MGOTO	_00159_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  793     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  794     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  795     	.line	149, "main.c"; 	if(pwStep > 99)
     0015 2164                      1-  796     	MOVIA	0x64
                                    1-  797     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1-  798     	SUBAR	_pwStep,W
     0018 0803                      1-  799     	BTRSS	STATUS,0
                                    1-  800     	MGOTO	_00156_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  801     	.line	151, "main.c"; 	baiweiNum = 1;
     001A 2101                      1-  802     	MOVIA	0x01
                                    1-  803     	BANKSEL	_baiweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  804     	MOVAR	_baiweiNum
                                    1-  805     	.line	152, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  806     	BANKSEL	_geweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  807     	CLRR	_geweiNum
                                    1-  808     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1-  809     	CLRR	_shiweiNum
                                    1-  810     	MGOTO	_00157_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1-  811     _00156_DS_:
                                    1-  812     	.line	156, "main.c"; 	baiweiNum = 0;
                                    1-  813     	BANKSEL	_baiweiNum
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  814     	CLRR	_baiweiNum
                                    1-  815     	.line	157, "main.c"; 	shiweiNum = powerShi;
                                    1-  816     	BANKSEL	_powerShi
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  817     	MOVR	_powerShi,W
                                    1-  818     	BANKSEL	_shiweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  819     	MOVAR	_shiweiNum
                                    1-  820     	.line	158, "main.c"; 	geweiNum = powerGe;
                                    1-  821     	BANKSEL	_powerGe
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  822     	MOVR	_powerGe,W
                                    1-  823     	BANKSEL	_geweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  824     	MOVAR	_geweiNum
     002C                           1-  825     _00157_DS_:
                                    1-  826     	.line	160, "main.c"; 	refreshNub();
                                    1-  827     	MCALL	_refreshNub
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  828     	MGOTO	_00164_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1-  829     _00159_DS_:
                                    1-  830     	.line	164, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  831     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  832     	CLRR	_geweiNum
                                    1-  833     	BANKSEL	_shiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  834     	CLRR	_shiweiNum
                                    1-  835     	BANKSEL	_baiweiNum
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 02rr                      1-  836     	CLRR	_baiweiNum
                                    1-  837     	.line	165, "main.c"; 	setInput();
                                    1-  838     	MCALL	_setInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
     0035                           1-  839     _00164_DS_:
                                    1-  840     	.line	168, "main.c"; 	if(!IntFlag)
                                    1-  841     	BANKSEL	_IntFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  842     	MOVR	_IntFlag,W
     0037 0D03                      1-  843     	BTRSC	STATUS,2
                                    1-  844     	MGOTO	_00206_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  845     	.line	170, "main.c"; 	IntFlag = 0;
     0039 02rr                      1-  846     	CLRR	_IntFlag
                                    1-  847     	.line	171, "main.c"; 	powerShi = pwStep/10;
     003A 210A                      1-  848     	MOVIA	0x0a
     003B 00rr                      1-  849     	MOVAR	STK00
                                    1-  850     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  851     	MOVR	_pwStep,W
                                    1-  852     	MCALL	__divuchar
     003E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  853     	BANKSEL	_powerShi
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1-  854     	MOVAR	_powerShi
                                    1-  855     	.line	172, "main.c"; 	powerGe = pwStep%10;
     0041 210A                      1-  856     	MOVIA	0x0a
     0042 00rr                      1-  857     	MOVAR	STK00
                                    1-  858     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  859     	MOVR	_pwStep,W
                                    1-  860     	MCALL	__moduchar
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  861     	BANKSEL	_powerGe
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1-  862     	MOVAR	_powerGe
                                    1-  863     	.line	174, "main.c"; 	if(waitTime > 0)
                                    1-  864     	BANKSEL	_waitTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  865     	MOVR	_waitTime,W
     004A 11rr                      1-  866     	IORAR	(_waitTime + 1),W
     004B 0D03                      1-  867     	BTRSC	STATUS,2
                                    1-  868     	MGOTO	_00185_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     	.line	176, "main.c"; 	if(count10ms == 0)
                                    1-  870     	BANKSEL	_count10ms
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  871     	MOVR	_count10ms,W
     004F 0903                      1-  872     	BTRSS	STATUS,2
                                    1-  873     	MGOTO	_00186_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  874     	.line	177, "main.c"; 	waitTime--;
     0051 21FF                      1-  875     	MOVIA	0xff
                                    1-  876     	BANKSEL	_waitTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 03rr                      1-  877     	ADDAR	_waitTime,F
     0054 0803                      1-  878     	BTRSS	STATUS,0
     0055 06rr                      1-  879     	DECR	(_waitTime + 1),F
                                    1-  880     	MGOTO	_00186_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1-  881     _00185_DS_:
                                    1-  882     	.line	179, "main.c"; 	else if(pwFlag)
                                    1-  883     	BANKSEL	_pwFlag
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  884     	MOVR	_pwFlag,W
     0059 0D03                      1-  885     	BTRSC	STATUS,2
                                    1-  886     	MGOTO	_00182_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  887     	.line	182, "main.c"; 	if(++count250ms >= 370 || revCount || irStep)
                                    1-  888     	BANKSEL	_count250ms
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 05rr                      1-  889     	INCR	_count250ms,F
     005D 0D03                      1-  890     	BTRSC	STATUS,2
     005E 05rr                      1-  891     	INCR	(_count250ms + 1),F
                                    1-  892     ;;unsigned compare: left < lit (0x172=370), size=2
     005F 2101                      1-  893     	MOVIA	0x01
     0060 04rr                      1-  894     	SUBAR	(_count250ms + 1),W
     0061 0903                      1-  895     	BTRSS	STATUS,2
                                    1-  896     	MGOTO	_00289_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063 2172                      1-  897     	MOVIA	0x72
     0064 04rr                      1-  898     	SUBAR	_count250ms,W
     0065                           1-  899     _00289_DS_:
     0065 0C03                      1-  900     	BTRSC	STATUS,0
                                    1-  901     	MGOTO	_00177_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  902     	BANKSEL	_revCount
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  903     	MOVR	_revCount,W
     0069 0903                      1-  904     	BTRSS	STATUS,2
                                    1-  905     	MGOTO	_00177_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  906     	BANKSEL	_irStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1-  907     	MOVR	_irStep,W
     006D 0D03                      1-  908     	BTRSC	STATUS,2
                                    1-  909     	MGOTO	_00186_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
     006F                           1-  910     _00177_DS_:
                                    1-  911     	.line	191, "main.c"; 	if(sendFlag)
                                    1-  912     	BANKSEL	_sendFlag
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 01rr                      1-  913     	MOVR	_sendFlag,W
     0071 0D03                      1-  914     	BTRSC	STATUS,2
                                    1-  915     	MGOTO	_00172_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  916     	.line	193, "main.c"; 	sendPreSta = getbit(PORTB, 3);
     0073 01rr                      1-  917     	MOVR	_PORTB,W
     0074 2208                      1-  918     	ANDIA	0x08
     0075 0903                      1-  919     	BTRSS	STATUS,2
     0076 2101                      1-  920     	MOVIA	0x01
                                    1-  921     	BANKSEL	_sendPreSta
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1-  922     	MOVAR	_sendPreSta
                                    1-  923     	.line	194, "main.c"; 	PORTBbits.PB1 = 1;
     0079 18rr                      1-  924     	BSR	_PORTBbits,1
                                    1-  925     	.line	195, "main.c"; 	delay(20);
     007A 2114                      1-  926     	MOVIA	0x14
                                    1-  927     	MCALL	_delay
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  928     	.line	196, "main.c"; 	checkIRKey();
                                    1-  929     	MCALL	_checkIRKey
     007C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  930     	.line	197, "main.c"; 	count250ms = 0;
                                    1-  931     	BANKSEL	_count250ms
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1-  932     	CLRR	_count250ms
     007F 02rr                      1-  933     	CLRR	(_count250ms + 1)
                                    1-  934     	.line	198, "main.c"; 	PORTBbits.PB1 = 0;
     0080 1Crr                      1-  935     	BCR	_PORTBbits,1
                                    1-  936     	.line	199, "main.c"; 	PORTA &= 0xBF;
                                    1-  937     	BANKSEL	_PORTA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 1Frr                      1-  938     	BCR	_PORTA,6
                                    1-  939     	.line	200, "main.c"; 	sendFlag = 0;
                                    1-  940     	BANKSEL	_sendFlag
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 02rr                      1-  941     	CLRR	_sendFlag
                                    1-  942     	MGOTO	_00173_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1-  943     _00172_DS_:
                                    1-  944     	.line	205, "main.c"; 	if(count10ms == 4)
                                    1-  945     	BANKSEL	_count10ms
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1-  946     	MOVR	_count10ms,W
     0088 2404                      1-  947     	XORIA	0x04
     0089 0903                      1-  948     	BTRSS	STATUS,2
                                    1-  949     	MGOTO	_00173_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  950     	.line	206, "main.c"; 	sendFlag = 1;
     008B 2101                      1-  951     	MOVIA	0x01
                                    1-  952     	BANKSEL	_sendFlag
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1-  953     	MOVAR	_sendFlag
                                    1-  954     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  955     ;;unsigned compare: left >= lit (0x5=5), size=1
     008E                           1-  956     _00173_DS_:
                                    1-  957     	.line	210, "main.c"; 	if(count10ms > 4)
     008E 2105                      1-  958     	MOVIA	0x05
                                    1-  959     	BANKSEL	_count10ms
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1-  960     	SUBAR	_count10ms,W
     0091 0803                      1-  961     	BTRSS	STATUS,0
                                    1-  962     	MGOTO	_00175_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  963     	.line	212, "main.c"; 	PORTA &= 0xBF;
                                    1-  964     	BANKSEL	_PORTA
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 1Frr                      1-  965     	BCR	_PORTA,6
                                    1-  966     	MGOTO	_00186_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1-  967     _00175_DS_:
                                    1-  968     	.line	216, "main.c"; 	PORTA |= 0x40;
                                    1-  969     	BANKSEL	_PORTA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 1Brr                      1-  970     	BSR	_PORTA,6
                                    1-  971     	MGOTO	_00186_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
     0099                           1-  972     _00182_DS_:
                                    1-  973     	.line	224, "main.c"; 	PORTA &= 0xBF;
                                    1-  974     	BANKSEL	_PORTA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 1Frr                      1-  975     	BCR	_PORTA,6
                                    1-  976     	.line	225, "main.c"; 	sendFlag = 0;
                                    1-  977     	BANKSEL	_sendFlag
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 02rr                      1-  978     	CLRR	_sendFlag
     009D                           1-  979     _00186_DS_:
                                    1-  980     	.line	227, "main.c"; 	if(++count10ms >= 8)
                                    1-  981     	BANKSEL	_count10ms
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 05rr                      1-  982     	INCR	_count10ms,F
                                    1-  983     ;;unsigned compare: left < lit (0x8=8), size=1
     009F 2108                      1-  984     	MOVIA	0x08
     00A0 04rr                      1-  985     	SUBAR	_count10ms,W
     00A1 0803                      1-  986     	BTRSS	STATUS,0
                                    1-  987     	MGOTO	_00206_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  988     	.line	229, "main.c"; 	count10ms = 0;
     00A3 02rr                      1-  989     	CLRR	_count10ms
                                    1-  990     	.line	230, "main.c"; 	keyCtr();
                                    1-  991     	MCALL	_keyCtr
     00A4 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  992     	.line	231, "main.c"; 	if(++checkBatTime >= 200)
                                    1-  993     	BANKSEL	_checkBatTime
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 05rr                      1-  994     	INCR	_checkBatTime,F
                                    1-  995     ;;unsigned compare: left < lit (0xC8=200), size=1
     00A7 21C8                      1-  996     	MOVIA	0xc8
     00A8 04rr                      1-  997     	SUBAR	_checkBatTime,W
     00A9 0803                      1-  998     	BTRSS	STATUS,0
                                    1-  999     	MGOTO	_00190_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1000     	.line	233, "main.c"; 	checkBatTime = 0;
     00AB 02rr                      1- 1001     	CLRR	_checkBatTime
                                    1- 1002     	.line	234, "main.c"; 	if(workTime == 0)
                                    1- 1003     	BANKSEL	_workTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1004     	MOVR	_workTime,W
     00AE 11rr                      1- 1005     	IORAR	(_workTime + 1),W
     00AF 0D03                      1- 1006     	BTRSC	STATUS,2
                                    1- 1007     	.line	235, "main.c"; 	checkBat();
                                    1- 1008     	MCALL	_checkBat
     00B0 2rrr                      3-   66 m1      LCALL rom_address
     00B1                           1- 1009     _00190_DS_:
                                    1- 1010     	.line	237, "main.c"; 	chrgCtr();
                                    1- 1011     	MCALL	_chrgCtr
     00B1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1012     	.line	239, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0 && startTime == 0)
                                    1- 1013     	BANKSEL	_PORTA
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 1014     	MOVR	_PORTA,W
                                    1- 1015     	BANKSEL	r0x1052
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 1016     	MOVAR	r0x1052
                                    1- 1017     	BANKSEL	r0x1053
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 02rr                      1- 1018     	CLRR	r0x1053
                                    1- 1019     	BANKSEL	r0x1052
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 07rr                      1- 1020     	COMR	r0x1052,W
     00BA 00rr                      1- 1021     	MOVAR	r0x1052
                                    1- 1022     	BANKSEL	r0x1053
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 07rr                      1- 1023     	COMR	r0x1053,W
     00BD 00rr                      1- 1024     	MOVAR	r0x1053
                                    1- 1025     	BANKSEL	r0x1052
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 0Arr                      1- 1026     	BTRSS	r0x1052,5
                                    1- 1027     	MGOTO	_00194_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1028     	BANKSEL	_keyCount
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 1029     	MOVR	_keyCount,W
     00C3 0903                      1- 1030     	BTRSS	STATUS,2
                                    1- 1031     	MGOTO	_00194_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1032     	BANKSEL	_pwFlag
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1033     	MOVR	_pwFlag,W
     00C7 0903                      1- 1034     	BTRSS	STATUS,2
                                    1- 1035     	MGOTO	_00194_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1036     	BANKSEL	_stepShowTime
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 1037     	MOVR	_stepShowTime,W
     00CB 0903                      1- 1038     	BTRSS	STATUS,2
                                    1- 1039     	MGOTO	_00194_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1040     	BANKSEL	_pwShowTime
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 01rr                      1- 1041     	MOVR	_pwShowTime,W
     00CF 0903                      1- 1042     	BTRSS	STATUS,2
                                    1- 1043     	MGOTO	_00194_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1044     	BANKSEL	_offShowTime
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 1045     	MOVR	_offShowTime,W
     00D3 0903                      1- 1046     	BTRSS	STATUS,2
                                    1- 1047     	MGOTO	_00194_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1048     	BANKSEL	_startTime
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 1049     	MOVR	_startTime,W
     00D7 0903                      1- 1050     	BTRSS	STATUS,2
                                    1- 1051     	MGOTO	_00194_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1052     	.line	242, "main.c"; 	if(++sleepTime > 100)
                                    1- 1053     	BANKSEL	_sleepTime
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 05rr                      1- 1054     	INCR	_sleepTime,F
                                    1- 1055     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1056     ;;unsigned compare: left >= lit (0x65=101), size=1
     00DB 2165                      1- 1057     	MOVIA	0x65
     00DC 04rr                      1- 1058     	SUBAR	_sleepTime,W
     00DD 0C03                      1- 1059     	BTRSC	STATUS,0
                                    1- 1060     	.line	243, "main.c"; 	gotoSleep();
                                    1- 1061     	MCALL	_gotoSleep
     00DE 2rrr                      3-   66 m1      LCALL rom_address
     00DF                           1- 1062     _00194_DS_:
                                    1- 1063     	.line	245, "main.c"; 	if(sleepFlag)
                                    1- 1064     	BANKSEL	_sleepFlag
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1065     	MOVR	_sleepFlag,W
     00E1 0903                      1- 1066     	BTRSS	STATUS,2
                                    1- 1067     	.line	247, "main.c"; 	gotoSleep();
                                    1- 1068     	MCALL	_gotoSleep
     00E2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1069     	.line	249, "main.c"; 	delay(100);
     00E3 2164                      1- 1070     	MOVIA	0x64
                                    1- 1071     	MCALL	_delay
     00E4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1072     	MGOTO	_00206_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1073     	.line	252, "main.c"; 	}
                                    1- 1074     	RETURN	
     00E6 0010                      3-   40 m1      ret
                                    1- 1075     ; exit point of _main
                                    1- 1077     ;***
                                    1- 1078     ;  pBlock Stats: dbName = C
                                    1- 1079     ;***
                                    1- 1080     ;has an exit
                                    1- 1081     ;2 compiler assigned registers:
                                    1- 1082     ;   r0x103B
                                    1- 1083     ;   r0x103C
                                    1- 1084     ;; Starting pCode block
                                    1- 1085     .segment "code"; module=main, function=_delay
                                    1- 1087     ;local variable name mapping:
     0000                           1- 1090     _delay:
                                    1- 1091     ; 2 exit points
                                    1- 1092     	.line	798, "main.c"; 	void delay(u8t count)
                                    1- 1093     	BANKSEL	r0x103B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1094     	MOVAR	r0x103B
                                    1- 1095     	.line	801, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1- 1096     	MOVIA	0x01
                                    1- 1097     	BANKSEL	r0x103C
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1098     	MOVAR	r0x103C
     0005                           1- 1099     _00642_DS_:
                                    1- 1100     	BANKSEL	r0x103C
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1101     	MOVR	r0x103C,W
                                    1- 1102     	BANKSEL	r0x103B
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1103     	SUBAR	r0x103B,W
     0009 0803                      1- 1104     	BTRSS	STATUS,0
                                    1- 1105     	MGOTO	_00644_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1106     	BANKSEL	r0x103C
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1107     	INCR	r0x103C,F
                                    1- 1108     	MGOTO	_00642_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1109     _00644_DS_:
                                    1- 1110     	.line	803, "main.c"; 	}
                                    1- 1111     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1112     ; exit point of _delay
                                    1- 1114     ;***
                                    1- 1115     ;  pBlock Stats: dbName = C
                                    1- 1116     ;***
                                    1- 1117     ;has an exit
                                    1- 1118     ;; Starting pCode block
                                    1- 1119     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1121     _F_wait_eoc:
                                    1- 1122     ; 2 exit points
     0000                           1- 1123     _00635_DS_:
                                    1- 1124     	.line	794, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1125     	BTRSS	_ADMDbits,5
                                    1- 1126     	MGOTO	_00635_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1127     	.line	796, "main.c"; 	}
                                    1- 1128     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1129     ; exit point of _F_wait_eoc
                                    1- 1131     ;***
                                    1- 1132     ;  pBlock Stats: dbName = C
                                    1- 1133     ;***
                                    1- 1134     ;has an exit
                                    1- 1135     ;functions called:
                                    1- 1136     ;   _F_wait_eoc
                                    1- 1137     ;   _F_wait_eoc
                                    1- 1138     ;6 compiler assigned registers:
                                    1- 1139     ;   r0x103D
                                    1- 1140     ;   r0x103E
                                    1- 1141     ;   r0x103F
                                    1- 1142     ;   r0x1040
                                    1- 1143     ;   r0x1041
                                    1- 1144     ;   r0x1042
                                    1- 1145     ;; Starting pCode block
                                    1- 1146     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1148     ;local variable name mapping:
     0000                           1- 1151     _F_Quarter_VDD_Convert:
                                    1- 1152     ; 2 exit points
                                    1- 1153     	.line	779, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1154     	BANKSEL	r0x103D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1155     	MOVAR	r0x103D
                                    1- 1156     	.line	782, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1- 1157     	MOVIA	0x9b
     0003 00rr                      1- 1158     	MOVAR	_ADMD
                                    1- 1159     	.line	783, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1160     	MOVIA	0x01
                                    1- 1161     	BANKSEL	r0x103E
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1162     	MOVAR	r0x103E
     0007                           1- 1163     _00628_DS_:
                                    1- 1164     	BANKSEL	r0x103E
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1165     	MOVR	r0x103E,W
                                    1- 1166     	BANKSEL	r0x103D
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1167     	SUBAR	r0x103D,W
     000B 0803                      1- 1168     	BTRSS	STATUS,0
                                    1- 1169     	MGOTO	_00630_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1170     	.line	785, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1171     	BSR	_ADMDbits,6
                                    1- 1172     	.line	786, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1173     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1174     	.line	787, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1175     	MOVIA	0x0f
     0010 10rr                      1- 1176     	ANDAR	_ADR,W
                                    1- 1177     ;;3	MOVAR	r0x103F
                                    1- 1178     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1179     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1180     	.line	788, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1181     	MOVR	_ADD,W
                                    1- 1182     	BANKSEL	r0x103F
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1183     	MOVAR	r0x103F
                                    1- 1184     ;;1	CLRR	r0x1040
                                    1- 1185     ;;101	MOVR	r0x103F,W
                                    1- 1186     ;;99	MOVAR	r0x1041
     0016 2100                      1- 1187     	MOVIA	0x00
                                    1- 1188     	BANKSEL	r0x1042
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1189     	MOVAR	r0x1042
                                    1- 1190     ;;100	MOVR	r0x1041,W
                                    1- 1191     	BANKSEL	r0x103F
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1192     	MOVR	r0x103F,W
                                    1- 1193     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1194     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1195     	BANKSEL	r0x1042
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1196     	MOVR	r0x1042,W
     001F 0C03                      1- 1197     	BTRSC	STATUS,0
     0020 05rr                      1- 1198     	INCR	r0x1042,W
     0021 0D03                      1- 1199     	BTRSC	STATUS,2
                                    1- 1200     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1201     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1202     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1203     _00001_DS_:
                                    1- 1204     	.line	783, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1205     	BANKSEL	r0x103E
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1206     	INCR	r0x103E,F
                                    1- 1207     	MGOTO	_00628_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1208     _00630_DS_:
                                    1- 1209     	.line	790, "main.c"; 	}
                                    1- 1210     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1211     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1213     ;***
                                    1- 1214     ;  pBlock Stats: dbName = C
                                    1- 1215     ;***
                                    1- 1216     ;has an exit
                                    1- 1217     ;functions called:
                                    1- 1218     ;   _F_Quarter_VDD_Convert
                                    1- 1219     ;   _F_Quarter_VDD_Convert
                                    1- 1220     ;6 compiler assigned registers:
                                    1- 1221     ;   r0x1043
                                    1- 1222     ;   r0x1044
                                    1- 1223     ;   r0x1045
                                    1- 1224     ;   r0x1046
                                    1- 1225     ;   r0x1047
                                    1- 1226     ;   r0x1048
                                    1- 1227     ;; Starting pCode block
                                    1- 1228     .segment "code"; module=main, function=_checkBat
                                    1- 1230     ;local variable name mapping:
     0000                           1- 1233     _checkBat:
                                    1- 1234     ; 2 exit points
                                    1- 1235     	.line	657, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1236     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1237     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1238     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1239     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1240     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1241     	.line	658, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1242     	MOVIA	0x08
                                    1- 1243     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1244     	.line	659, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1245     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1246     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1247     	ANDIA	0xf0
     000A 00rr                      1- 1248     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1249     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1250     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1251     	ANDIA	0x0f
     000E 11rr                      1- 1252     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1253     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1254     	.line	660, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1255     	MOVIA	0xf0
                                    1- 1256     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1257     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1258     	.line	661, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1259     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1260     	BANKSEL	r0x1045
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1261     	MOVAR	r0x1045
                                    1- 1262     	BANKSEL	r0x1043
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1263     	MOVAR	r0x1043
                                    1- 1264     	BANKSEL	r0x1044
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1265     	CLRR	r0x1044
                                    1- 1266     ;;104	MOVR	r0x1043,W
     001A 2100                      1- 1267     	MOVIA	0x00
                                    1- 1268     	BANKSEL	r0x1046
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1269     	MOVAR	r0x1046
                                    1- 1270     	BANKSEL	r0x1045
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1271     	MOVR	r0x1045,W
                                    1- 1272     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1273     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1274     	BANKSEL	r0x1046
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1275     	MOVR	r0x1046,W
     0023 0C03                      1- 1276     	BTRSC	STATUS,0
     0024 05rr                      1- 1277     	INCR	r0x1046,W
     0025 0D03                      1- 1278     	BTRSC	STATUS,2
                                    1- 1279     	MGOTO	_00002_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1280     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1281     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1282     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1283     _00002_DS_:
                                    1- 1284     	.line	662, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1285     	BCR	STATUS,0
                                    1- 1286     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1287     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1288     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1289     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1290     	BCR	STATUS,0
     002E 13rr                      1- 1291     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1292     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1293     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1294     	BCR	STATUS,0
     0031 13rr                      1- 1295     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1296     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1297     ;;unsigned compare: left < lit (0x5AA=1450), size=2
                                    1- 1298     	.line	673, "main.c"; 	if(R_Quarter_VDD_DATA < 1450)
     0033 2105                      1- 1299     	MOVIA	0x05
     0034 04rr                      1- 1300     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1301     	BTRSS	STATUS,2
                                    1- 1302     	MGOTO	_00607_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21AA                      1- 1303     	MOVIA	0xaa
     0038 04rr                      1- 1304     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1305     _00607_DS_:
     0039 0C03                      1- 1306     	BTRSC	STATUS,0
                                    1- 1307     	MGOTO	_00538_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1308     	.line	675, "main.c"; 	pwStep = 0;
                                    1- 1309     	BANKSEL	_pwStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 1310     	CLRR	_pwStep
                                    1- 1311     	.line	676, "main.c"; 	fullTime = 0;
                                    1- 1312     	BANKSEL	_fullTime
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1- 1313     	CLRR	_fullTime
                                    1- 1314     	.line	677, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 1315     	BANKSEL	_PORTA
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 0Err                      1- 1316     	BTRSC	_PORTA,5
                                    1- 1317     	MGOTO	_00539_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1318     	.line	679, "main.c"; 	pwFlag = 0;		//关机
                                    1- 1319     	BANKSEL	_pwFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 02rr                      1- 1320     	CLRR	_pwFlag
                                    1- 1321     	.line	680, "main.c"; 	workStep = 0;
                                    1- 1322     	BANKSEL	_workStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 02rr                      1- 1323     	CLRR	_workStep
                                    1- 1324     	.line	681, "main.c"; 	pwShowTime = 0;
                                    1- 1325     	BANKSEL	_pwShowTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 02rr                      1- 1326     	CLRR	_pwShowTime
                                    1- 1327     	.line	682, "main.c"; 	stepShowTime = 0;
                                    1- 1328     	BANKSEL	_stepShowTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1329     	CLRR	_stepShowTime
                                    1- 1330     	.line	683, "main.c"; 	offShowTime = 0;
                                    1- 1331     	BANKSEL	_offShowTime
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 02rr                      1- 1332     	CLRR	_offShowTime
                                    1- 1333     	MGOTO	_00539_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1- 1334     _00538_DS_:
                                    1- 1335     	.line	688, "main.c"; 	u16t tempValue = 0;
                                    1- 1336     	BANKSEL	r0x1043
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1- 1337     	CLRR	r0x1043
                                    1- 1338     	BANKSEL	r0x1044
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1- 1339     	CLRR	r0x1044
                                    1- 1340     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1341     ;;unsigned compare: left >= lit (0x871=2161), size=2
                                    1- 1342     	.line	689, "main.c"; 	if(R_Quarter_VDD_DATA > 2160)
     0051 2108                      1- 1343     	MOVIA	0x08
                                    1- 1344     	BANKSEL	_R_Quarter_VDD_DATA
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 1345     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0054 0903                      1- 1346     	BTRSS	STATUS,2
                                    1- 1347     	MGOTO	_00608_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 2171                      1- 1348     	MOVIA	0x71
     0057 04rr                      1- 1349     	SUBAR	_R_Quarter_VDD_DATA,W
     0058                           1- 1350     _00608_DS_:
     0058 0803                      1- 1351     	BTRSS	STATUS,0
                                    1- 1352     	MGOTO	_00507_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1353     	.line	691, "main.c"; 	fullFlag = 1;
     005A 2101                      1- 1354     	MOVIA	0x01
                                    1- 1355     	BANKSEL	_fullFlag
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1356     	MOVAR	_fullFlag
                                    1- 1357     	.line	692, "main.c"; 	pwStep = 100;
     005D 2164                      1- 1358     	MOVIA	0x64
                                    1- 1359     	BANKSEL	_pwStep
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 1360     	MOVAR	_pwStep
                                    1- 1361     	.line	693, "main.c"; 	tempValue = 120;
     0060 2178                      1- 1362     	MOVIA	0x78
                                    1- 1363     	BANKSEL	r0x1043
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 1364     	MOVAR	r0x1043
                                    1- 1365     	BANKSEL	r0x1044
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 02rr                      1- 1366     	CLRR	r0x1044
                                    1- 1367     	MGOTO	_00508_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1368     ;;unsigned compare: left < lit (0x85C=2140), size=2
     0066                           1- 1369     _00507_DS_:
                                    1- 1370     	.line	695, "main.c"; 	else if(R_Quarter_VDD_DATA >= 2140)
     0066 2108                      1- 1371     	MOVIA	0x08
                                    1- 1372     	BANKSEL	_R_Quarter_VDD_DATA
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 04rr                      1- 1373     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0069 0903                      1- 1374     	BTRSS	STATUS,2
                                    1- 1375     	MGOTO	_00609_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 215C                      1- 1376     	MOVIA	0x5c
     006C 04rr                      1- 1377     	SUBAR	_R_Quarter_VDD_DATA,W
     006D                           1- 1378     _00609_DS_:
     006D 0803                      1- 1379     	BTRSS	STATUS,0
                                    1- 1380     	MGOTO	_00504_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1381     	.line	697, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 2140) + 100;
     006F 2108                      1- 1382     	MOVIA	0x08
                                    1- 1383     	BANKSEL	_R_Quarter_VDD_DATA
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 03rr                      1- 1384     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1385     	BANKSEL	r0x1043
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1386     	MOVAR	r0x1043
     0074 21F8                      1- 1387     	MOVIA	0xf8
                                    1- 1388     	BANKSEL	r0x1044
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 1389     	MOVAR	r0x1044
                                    1- 1390     	BANKSEL	_R_Quarter_VDD_DATA
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1391     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0079 0C03                      1- 1392     	BTRSC	STATUS,0
     007A 05rr                      1- 1393     	INCR	(_R_Quarter_VDD_DATA + 1),W
     007B 0D03                      1- 1394     	BTRSC	STATUS,2
                                    1- 1395     	MGOTO	_00003_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1396     	BANKSEL	r0x1044
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 03rr                      1- 1397     	ADDAR	r0x1044,F
     007F                           1- 1398     _00003_DS_:
                                    1- 1399     	MGOTO	_00508_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1400     ;;unsigned compare: left < lit (0x834=2100), size=2
     0080                           1- 1401     _00504_DS_:
                                    1- 1402     	.line	699, "main.c"; 	else if(R_Quarter_VDD_DATA >= 2100)
     0080 2108                      1- 1403     	MOVIA	0x08
                                    1- 1404     	BANKSEL	_R_Quarter_VDD_DATA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1- 1405     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0083 0903                      1- 1406     	BTRSS	STATUS,2
                                    1- 1407     	MGOTO	_00610_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085 2134                      1- 1408     	MOVIA	0x34
     0086 04rr                      1- 1409     	SUBAR	_R_Quarter_VDD_DATA,W
     0087                           1- 1410     _00610_DS_:
     0087 0803                      1- 1411     	BTRSS	STATUS,0
                                    1- 1412     	MGOTO	_00501_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1413     	.line	701, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 2100)/2) + 80;
     0089 21CC                      1- 1414     	MOVIA	0xcc
                                    1- 1415     	BANKSEL	_R_Quarter_VDD_DATA
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 03rr                      1- 1416     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1417     	BANKSEL	r0x1045
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 1418     	MOVAR	r0x1045
     008E 21F7                      1- 1419     	MOVIA	0xf7
                                    1- 1420     	BANKSEL	r0x1046
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 1421     	MOVAR	r0x1046
                                    1- 1422     	BANKSEL	_R_Quarter_VDD_DATA
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1- 1423     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0093 0C03                      1- 1424     	BTRSC	STATUS,0
     0094 05rr                      1- 1425     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0095 0D03                      1- 1426     	BTRSC	STATUS,2
                                    1- 1427     	MGOTO	_00004_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1428     	BANKSEL	r0x1046
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 03rr                      1- 1429     	ADDAR	r0x1046,F
                                    1- 1430     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0099                           1- 1431     _00004_DS_:
     0099 1C03                      1- 1432     	BCR	STATUS,0
                                    1- 1433     	BANKSEL	r0x1046
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 13rr                      1- 1434     	RRR	r0x1046,W
                                    1- 1435     	BANKSEL	r0x1047
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 1436     	MOVAR	r0x1047
                                    1- 1437     	BANKSEL	r0x1045
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 13rr                      1- 1438     	RRR	r0x1045,W
                                    1- 1439     	BANKSEL	r0x1048
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 1440     	MOVAR	r0x1048
     00A2 2150                      1- 1441     	MOVIA	0x50
     00A3 03rr                      1- 1442     	ADDAR	r0x1048,W
                                    1- 1443     	BANKSEL	r0x1043
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1444     	MOVAR	r0x1043
                                    1- 1445     	BANKSEL	r0x1044
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 02rr                      1- 1446     	CLRR	r0x1044
     00A8 14rr                      1- 1447     	RLR	r0x1044,F
                                    1- 1448     	BANKSEL	r0x1047
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 01rr                      1- 1449     	MOVR	r0x1047,W
                                    1- 1450     	BANKSEL	r0x1044
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 03rr                      1- 1451     	ADDAR	r0x1044,F
                                    1- 1452     	MGOTO	_00508_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1453     ;;unsigned compare: left < lit (0x75E=1886), size=2
     00AE                           1- 1454     _00501_DS_:
                                    1- 1455     	.line	703, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1886)
     00AE 2107                      1- 1456     	MOVIA	0x07
                                    1- 1457     	BANKSEL	_R_Quarter_VDD_DATA
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 1458     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00B1 0903                      1- 1459     	BTRSS	STATUS,2
                                    1- 1460     	MGOTO	_00611_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
     00B3 215E                      1- 1461     	MOVIA	0x5e
     00B4 04rr                      1- 1462     	SUBAR	_R_Quarter_VDD_DATA,W
     00B5                           1- 1463     _00611_DS_:
     00B5 0803                      1- 1464     	BTRSS	STATUS,0
                                    1- 1465     	MGOTO	_00498_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1466     	.line	705, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 1886)/4) + 27;
     00B7 21A2                      1- 1467     	MOVIA	0xa2
                                    1- 1468     	BANKSEL	_R_Quarter_VDD_DATA
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 03rr                      1- 1469     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1470     	BANKSEL	r0x1045
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 00rr                      1- 1471     	MOVAR	r0x1045
     00BC 21F8                      1- 1472     	MOVIA	0xf8
                                    1- 1473     	BANKSEL	r0x1046
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 00rr                      1- 1474     	MOVAR	r0x1046
                                    1- 1475     	BANKSEL	_R_Quarter_VDD_DATA
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 01rr                      1- 1476     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00C1 0C03                      1- 1477     	BTRSC	STATUS,0
     00C2 05rr                      1- 1478     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00C3 0D03                      1- 1479     	BTRSC	STATUS,2
                                    1- 1480     	MGOTO	_00005_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1481     	BANKSEL	r0x1046
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 03rr                      1- 1482     	ADDAR	r0x1046,F
                                    1- 1483     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00C7                           1- 1484     _00005_DS_:
     00C7 1C03                      1- 1485     	BCR	STATUS,0
                                    1- 1486     	BANKSEL	r0x1046
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 13rr                      1- 1487     	RRR	r0x1046,W
                                    1- 1488     	BANKSEL	r0x1047
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 1489     	MOVAR	r0x1047
                                    1- 1490     	BANKSEL	r0x1045
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 13rr                      1- 1491     	RRR	r0x1045,W
                                    1- 1492     	BANKSEL	r0x1048
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 1493     	MOVAR	r0x1048
                                    1- 1494     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00D0 1C03                      1- 1495     	BCR	STATUS,0
                                    1- 1496     	BANKSEL	r0x1047
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 13rr                      1- 1497     	RRR	r0x1047,F
                                    1- 1498     	BANKSEL	r0x1048
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 13rr                      1- 1499     	RRR	r0x1048,F
     00D5 211B                      1- 1500     	MOVIA	0x1b
     00D6 03rr                      1- 1501     	ADDAR	r0x1048,W
                                    1- 1502     	BANKSEL	r0x1043
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 00rr                      1- 1503     	MOVAR	r0x1043
                                    1- 1504     	BANKSEL	r0x1044
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 02rr                      1- 1505     	CLRR	r0x1044
     00DB 14rr                      1- 1506     	RLR	r0x1044,F
                                    1- 1507     	BANKSEL	r0x1047
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 01rr                      1- 1508     	MOVR	r0x1047,W
                                    1- 1509     	BANKSEL	r0x1044
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 03rr                      1- 1510     	ADDAR	r0x1044,F
                                    1- 1511     	MGOTO	_00508_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1512     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     00E1                           1- 1513     _00498_DS_:
                                    1- 1514     	.line	707, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1450)
     00E1 2105                      1- 1515     	MOVIA	0x05
                                    1- 1516     	BANKSEL	_R_Quarter_VDD_DATA
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 04rr                      1- 1517     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00E4 0903                      1- 1518     	BTRSS	STATUS,2
                                    1- 1519     	MGOTO	_00612_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
     00E6 21AA                      1- 1520     	MOVIA	0xaa
     00E7 04rr                      1- 1521     	SUBAR	_R_Quarter_VDD_DATA,W
     00E8                           1- 1522     _00612_DS_:
     00E8 0803                      1- 1523     	BTRSS	STATUS,0
                                    1- 1524     	MGOTO	_00508_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1525     	.line	709, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1450)/16;
     00EA 2156                      1- 1526     	MOVIA	0x56
                                    1- 1527     	BANKSEL	_R_Quarter_VDD_DATA
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 03rr                      1- 1528     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1529     	BANKSEL	r0x1045
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 1530     	MOVAR	r0x1045
     00EF 21FA                      1- 1531     	MOVIA	0xfa
                                    1- 1532     	BANKSEL	r0x1046
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 00rr                      1- 1533     	MOVAR	r0x1046
                                    1- 1534     	BANKSEL	_R_Quarter_VDD_DATA
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 01rr                      1- 1535     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00F4 0C03                      1- 1536     	BTRSC	STATUS,0
     00F5 05rr                      1- 1537     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00F6 0D03                      1- 1538     	BTRSC	STATUS,2
                                    1- 1539     	MGOTO	_00006_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1540     	BANKSEL	r0x1046
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 03rr                      1- 1541     	ADDAR	r0x1046,F
     00FA                           1- 1542     _00006_DS_:
                                    1- 1543     	BANKSEL	r0x1045
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 15rr                      1- 1544     	SWAPR	r0x1045,W
     00FC 220F                      1- 1545     	ANDIA	0x0f
                                    1- 1546     	BANKSEL	r0x1043
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 1547     	MOVAR	r0x1043
                                    1- 1548     	BANKSEL	r0x1046
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 15rr                      1- 1549     	SWAPR	r0x1046,W
                                    1- 1550     	BANKSEL	r0x1044
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 00rr                      1- 1551     	MOVAR	r0x1044
     0103 22F0                      1- 1552     	ANDIA	0xf0
                                    1- 1553     	BANKSEL	r0x1043
     0104 rrrr                      3-  110 m1      .banksel ram_address
     0105 11rr                      1- 1554     	IORAR	r0x1043,F
                                    1- 1555     	BANKSEL	r0x1044
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 12rr                      1- 1556     	XORAR	r0x1044,F
     0108                           1- 1557     _00508_DS_:
                                    1- 1558     	.line	712, "main.c"; 	if((0x20 & PORTA) > 0)
                                    1- 1559     	BANKSEL	_PORTA
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 0Arr                      1- 1560     	BTRSS	_PORTA,5
                                    1- 1561     	MGOTO	_00535_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1562     ;;unsigned compare: left < lit (0xF=15), size=2
                                    1- 1563     	.line	715, "main.c"; 	if(tempValue < 15)
     010B 2100                      1- 1564     	MOVIA	0x00
                                    1- 1565     	BANKSEL	r0x1044
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 04rr                      1- 1566     	SUBAR	r0x1044,W
     010E 0903                      1- 1567     	BTRSS	STATUS,2
                                    1- 1568     	MGOTO	_00613_DS_
     010F 3rrr                      3-   63 m1      LGOTO rom_address
     0110 210F                      1- 1569     	MOVIA	0x0f
                                    1- 1570     	BANKSEL	r0x1043
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 04rr                      1- 1571     	SUBAR	r0x1043,W
     0113                           1- 1572     _00613_DS_:
     0113 0C03                      1- 1573     	BTRSC	STATUS,0
                                    1- 1574     	MGOTO	_00524_DS_
     0114 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1575     	.line	717, "main.c"; 	tempValue = 1;
     0115 2101                      1- 1576     	MOVIA	0x01
                                    1- 1577     	BANKSEL	r0x1043
     0116 rrrr                      3-  110 m1      .banksel ram_address
     0117 00rr                      1- 1578     	MOVAR	r0x1043
                                    1- 1579     	BANKSEL	r0x1044
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 02rr                      1- 1580     	CLRR	r0x1044
                                    1- 1581     	MGOTO	_00011_DS_
     011A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1582     ;;unsigned compare: left < lit (0x1E=30), size=2
     011B                           1- 1583     _00524_DS_:
                                    1- 1584     	.line	719, "main.c"; 	else if(tempValue < 30)
     011B 2100                      1- 1585     	MOVIA	0x00
                                    1- 1586     	BANKSEL	r0x1044
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 04rr                      1- 1587     	SUBAR	r0x1044,W
     011E 0903                      1- 1588     	BTRSS	STATUS,2
                                    1- 1589     	MGOTO	_00614_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
     0120 211E                      1- 1590     	MOVIA	0x1e
                                    1- 1591     	BANKSEL	r0x1043
     0121 rrrr                      3-  110 m1      .banksel ram_address
     0122 04rr                      1- 1592     	SUBAR	r0x1043,W
     0123                           1- 1593     _00614_DS_:
     0123 0C03                      1- 1594     	BTRSC	STATUS,0
                                    1- 1595     	MGOTO	_00521_DS_
     0124 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1596     	.line	721, "main.c"; 	tempValue = tempValue - 16;
     0125 21F0                      1- 1597     	MOVIA	0xf0
                                    1- 1598     	BANKSEL	r0x1043
     0126 rrrr                      3-  110 m1      .banksel ram_address
     0127 03rr                      1- 1599     	ADDAR	r0x1043,F
     0128 0C03                      1- 1600     	BTRSC	STATUS,0
                                    1- 1601     	MGOTO	_00007_DS_
     0129 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1602     	BANKSEL	r0x1044
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 06rr                      1- 1603     	DECR	r0x1044,F
     012C                           1- 1604     _00007_DS_:
                                    1- 1605     	MGOTO	_00011_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1606     ;;unsigned compare: left < lit (0x28=40), size=2
     012D                           1- 1607     _00521_DS_:
                                    1- 1608     	.line	723, "main.c"; 	else if(tempValue < 40)
     012D 2100                      1- 1609     	MOVIA	0x00
                                    1- 1610     	BANKSEL	r0x1044
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 04rr                      1- 1611     	SUBAR	r0x1044,W
     0130 0903                      1- 1612     	BTRSS	STATUS,2
                                    1- 1613     	MGOTO	_00615_DS_
     0131 3rrr                      3-   63 m1      LGOTO rom_address
     0132 2128                      1- 1614     	MOVIA	0x28
                                    1- 1615     	BANKSEL	r0x1043
     0133 rrrr                      3-  110 m1      .banksel ram_address
     0134 04rr                      1- 1616     	SUBAR	r0x1043,W
     0135                           1- 1617     _00615_DS_:
     0135 0C03                      1- 1618     	BTRSC	STATUS,0
                                    1- 1619     	MGOTO	_00518_DS_
     0136 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1620     	.line	725, "main.c"; 	tempValue = tempValue - 17;
     0137 21EF                      1- 1621     	MOVIA	0xef
                                    1- 1622     	BANKSEL	r0x1043
     0138 rrrr                      3-  110 m1      .banksel ram_address
     0139 03rr                      1- 1623     	ADDAR	r0x1043,F
     013A 0C03                      1- 1624     	BTRSC	STATUS,0
                                    1- 1625     	MGOTO	_00008_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1626     	BANKSEL	r0x1044
     013C rrrr                      3-  110 m1      .banksel ram_address
     013D 06rr                      1- 1627     	DECR	r0x1044,F
     013E                           1- 1628     _00008_DS_:
                                    1- 1629     	MGOTO	_00011_DS_
     013E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1630     ;;unsigned compare: left < lit (0x32=50), size=2
     013F                           1- 1631     _00518_DS_:
                                    1- 1632     	.line	727, "main.c"; 	else if(tempValue < 50)
     013F 2100                      1- 1633     	MOVIA	0x00
                                    1- 1634     	BANKSEL	r0x1044
     0140 rrrr                      3-  110 m1      .banksel ram_address
     0141 04rr                      1- 1635     	SUBAR	r0x1044,W
     0142 0903                      1- 1636     	BTRSS	STATUS,2
                                    1- 1637     	MGOTO	_00616_DS_
     0143 3rrr                      3-   63 m1      LGOTO rom_address
     0144 2132                      1- 1638     	MOVIA	0x32
                                    1- 1639     	BANKSEL	r0x1043
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 04rr                      1- 1640     	SUBAR	r0x1043,W
     0147                           1- 1641     _00616_DS_:
     0147 0C03                      1- 1642     	BTRSC	STATUS,0
                                    1- 1643     	MGOTO	_00515_DS_
     0148 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1644     	.line	729, "main.c"; 	tempValue = tempValue - 18;
     0149 21EE                      1- 1645     	MOVIA	0xee
                                    1- 1646     	BANKSEL	r0x1043
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 03rr                      1- 1647     	ADDAR	r0x1043,F
     014C 0C03                      1- 1648     	BTRSC	STATUS,0
                                    1- 1649     	MGOTO	_00009_DS_
     014D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1650     	BANKSEL	r0x1044
     014E rrrr                      3-  110 m1      .banksel ram_address
     014F 06rr                      1- 1651     	DECR	r0x1044,F
     0150                           1- 1652     _00009_DS_:
                                    1- 1653     	MGOTO	_00011_DS_
     0150 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1654     ;;unsigned compare: left < lit (0x3C=60), size=2
     0151                           1- 1655     _00515_DS_:
                                    1- 1656     	.line	731, "main.c"; 	else if(tempValue < 60)
     0151 2100                      1- 1657     	MOVIA	0x00
                                    1- 1658     	BANKSEL	r0x1044
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 04rr                      1- 1659     	SUBAR	r0x1044,W
     0154 0903                      1- 1660     	BTRSS	STATUS,2
                                    1- 1661     	MGOTO	_00617_DS_
     0155 3rrr                      3-   63 m1      LGOTO rom_address
     0156 213C                      1- 1662     	MOVIA	0x3c
                                    1- 1663     	BANKSEL	r0x1043
     0157 rrrr                      3-  110 m1      .banksel ram_address
     0158 04rr                      1- 1664     	SUBAR	r0x1043,W
     0159                           1- 1665     _00617_DS_:
     0159 0C03                      1- 1666     	BTRSC	STATUS,0
                                    1- 1667     	MGOTO	_00512_DS_
     015A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1668     	.line	733, "main.c"; 	tempValue = tempValue - 19;
     015B 21ED                      1- 1669     	MOVIA	0xed
                                    1- 1670     	BANKSEL	r0x1043
     015C rrrr                      3-  110 m1      .banksel ram_address
     015D 03rr                      1- 1671     	ADDAR	r0x1043,F
     015E 0C03                      1- 1672     	BTRSC	STATUS,0
                                    1- 1673     	MGOTO	_00010_DS_
     015F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1674     	BANKSEL	r0x1044
     0160 rrrr                      3-  110 m1      .banksel ram_address
     0161 06rr                      1- 1675     	DECR	r0x1044,F
     0162                           1- 1676     _00010_DS_:
                                    1- 1677     	MGOTO	_00011_DS_
     0162 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1678     ;;unsigned compare: left < lit (0x78=120), size=2
     0163                           1- 1679     _00512_DS_:
                                    1- 1680     	.line	735, "main.c"; 	else if(tempValue < 120)
     0163 2100                      1- 1681     	MOVIA	0x00
                                    1- 1682     	BANKSEL	r0x1044
     0164 rrrr                      3-  110 m1      .banksel ram_address
     0165 04rr                      1- 1683     	SUBAR	r0x1044,W
     0166 0903                      1- 1684     	BTRSS	STATUS,2
                                    1- 1685     	MGOTO	_00618_DS_
     0167 3rrr                      3-   63 m1      LGOTO rom_address
     0168 2178                      1- 1686     	MOVIA	0x78
                                    1- 1687     	BANKSEL	r0x1043
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 04rr                      1- 1688     	SUBAR	r0x1043,W
     016B                           1- 1689     _00618_DS_:
     016B 0C03                      1- 1690     	BTRSC	STATUS,0
                                    1- 1691     	MGOTO	_00011_DS_
     016C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1692     	.line	737, "main.c"; 	tempValue = tempValue - 20;
     016D 21EC                      1- 1693     	MOVIA	0xec
                                    1- 1694     	BANKSEL	r0x1043
     016E rrrr                      3-  110 m1      .banksel ram_address
     016F 03rr                      1- 1695     	ADDAR	r0x1043,F
     0170 0C03                      1- 1696     	BTRSC	STATUS,0
                                    1- 1697     	MGOTO	_00011_DS_
     0171 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1698     	BANKSEL	r0x1044
     0172 rrrr                      3-  110 m1      .banksel ram_address
     0173 06rr                      1- 1699     	DECR	r0x1044,F
     0174                           1- 1700     _00011_DS_:
                                    1- 1701     	.line	740, "main.c"; 	if(pwStep < tempValue)
                                    1- 1702     	BANKSEL	_pwStep
     0174 rrrr                      3-  110 m1      .banksel ram_address
     0175 01rr                      1- 1703     	MOVR	_pwStep,W
                                    1- 1704     	BANKSEL	r0x1045
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 00rr                      1- 1705     	MOVAR	r0x1045
                                    1- 1706     	BANKSEL	r0x1046
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 02rr                      1- 1707     	CLRR	r0x1046
                                    1- 1708     	BANKSEL	r0x1044
     017A rrrr                      3-  110 m1      .banksel ram_address
     017B 01rr                      1- 1709     	MOVR	r0x1044,W
                                    1- 1710     	BANKSEL	r0x1046
     017C rrrr                      3-  110 m1      .banksel ram_address
     017D 04rr                      1- 1711     	SUBAR	r0x1046,W
     017E 0903                      1- 1712     	BTRSS	STATUS,2
                                    1- 1713     	MGOTO	_00619_DS_
     017F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1714     	BANKSEL	r0x1043
     0180 rrrr                      3-  110 m1      .banksel ram_address
     0181 01rr                      1- 1715     	MOVR	r0x1043,W
                                    1- 1716     	BANKSEL	r0x1045
     0182 rrrr                      3-  110 m1      .banksel ram_address
     0183 04rr                      1- 1717     	SUBAR	r0x1045,W
     0184                           1- 1718     _00619_DS_:
     0184 0C03                      1- 1719     	BTRSC	STATUS,0
                                    1- 1720     	MGOTO	_00539_DS_
     0185 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1721     	.line	742, "main.c"; 	pwStep++;
                                    1- 1722     	BANKSEL	_pwStep
     0186 rrrr                      3-  110 m1      .banksel ram_address
     0187 05rr                      1- 1723     	INCR	_pwStep,F
                                    1- 1724     	MGOTO	_00539_DS_
     0188 3rrr                      3-   63 m1      LGOTO rom_address
     0189                           1- 1725     _00535_DS_:
                                    1- 1726     	.line	749, "main.c"; 	if(pwStep == 0)
                                    1- 1727     	BANKSEL	_pwStep
     0189 rrrr                      3-  110 m1      .banksel ram_address
     018A 01rr                      1- 1728     	MOVR	_pwStep,W
     018B 0903                      1- 1729     	BTRSS	STATUS,2
                                    1- 1730     	MGOTO	_00529_DS_
     018C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1731     	.line	751, "main.c"; 	pwStep = tempValue;
                                    1- 1732     	BANKSEL	r0x1043
     018D rrrr                      3-  110 m1      .banksel ram_address
     018E 01rr                      1- 1733     	MOVR	r0x1043,W
                                    1- 1734     	BANKSEL	_pwStep
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 00rr                      1- 1735     	MOVAR	_pwStep
     0191                           1- 1736     _00529_DS_:
                                    1- 1737     	.line	753, "main.c"; 	if(pwStep > tempValue)
                                    1- 1738     	BANKSEL	_pwStep
     0191 rrrr                      3-  110 m1      .banksel ram_address
     0192 01rr                      1- 1739     	MOVR	_pwStep,W
                                    1- 1740     	BANKSEL	r0x1045
     0193 rrrr                      3-  110 m1      .banksel ram_address
     0194 00rr                      1- 1741     	MOVAR	r0x1045
                                    1- 1742     	BANKSEL	r0x1046
     0195 rrrr                      3-  110 m1      .banksel ram_address
     0196 02rr                      1- 1743     	CLRR	r0x1046
     0197 2100                      1- 1744     	MOVIA	0x00
                                    1- 1745     	BANKSEL	r0x1044
     0198 rrrr                      3-  110 m1      .banksel ram_address
     0199 04rr                      1- 1746     	SUBAR	r0x1044,W
     019A 0903                      1- 1747     	BTRSS	STATUS,2
                                    1- 1748     	MGOTO	_00620_DS_
     019B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1749     	BANKSEL	r0x1045
     019C rrrr                      3-  110 m1      .banksel ram_address
     019D 01rr                      1- 1750     	MOVR	r0x1045,W
                                    1- 1751     	BANKSEL	r0x1043
     019E rrrr                      3-  110 m1      .banksel ram_address
     019F 04rr                      1- 1752     	SUBAR	r0x1043,W
     01A0                           1- 1753     _00620_DS_:
     01A0 0C03                      1- 1754     	BTRSC	STATUS,0
                                    1- 1755     	MGOTO	_00539_DS_
     01A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1756     	.line	755, "main.c"; 	if(++count5s > 10)
                                    1- 1757     	BANKSEL	_count5s
     01A2 rrrr                      3-  110 m1      .banksel ram_address
     01A3 05rr                      1- 1758     	INCR	_count5s,F
     01A4 0D03                      1- 1759     	BTRSC	STATUS,2
     01A5 05rr                      1- 1760     	INCR	(_count5s + 1),F
                                    1- 1761     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1762     ;;unsigned compare: left >= lit (0xB=11), size=2
     01A6 2100                      1- 1763     	MOVIA	0x00
     01A7 04rr                      1- 1764     	SUBAR	(_count5s + 1),W
     01A8 0903                      1- 1765     	BTRSS	STATUS,2
                                    1- 1766     	MGOTO	_00621_DS_
     01A9 3rrr                      3-   63 m1      LGOTO rom_address
     01AA 210B                      1- 1767     	MOVIA	0x0b
     01AB 04rr                      1- 1768     	SUBAR	_count5s,W
     01AC                           1- 1769     _00621_DS_:
     01AC 0803                      1- 1770     	BTRSS	STATUS,0
                                    1- 1771     	MGOTO	_00539_DS_
     01AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1772     	.line	757, "main.c"; 	count5s = 0;
                                    1- 1773     	BANKSEL	_count5s
     01AE rrrr                      3-  110 m1      .banksel ram_address
     01AF 02rr                      1- 1774     	CLRR	_count5s
     01B0 02rr                      1- 1775     	CLRR	(_count5s + 1)
                                    1- 1776     	.line	758, "main.c"; 	pwStep--;
                                    1- 1777     	BANKSEL	_pwStep
     01B1 rrrr                      3-  110 m1      .banksel ram_address
     01B2 06rr                      1- 1778     	DECR	_pwStep,F
                                    1- 1779     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1780     ;;unsigned compare: left >= lit (0x79=121), size=1
     01B3                           1- 1781     _00539_DS_:
                                    1- 1782     	.line	765, "main.c"; 	if(pwStep > 120)
     01B3 2179                      1- 1783     	MOVIA	0x79
                                    1- 1784     	BANKSEL	_pwStep
     01B4 rrrr                      3-  110 m1      .banksel ram_address
     01B5 04rr                      1- 1785     	SUBAR	_pwStep,W
     01B6 0803                      1- 1786     	BTRSS	STATUS,0
                                    1- 1787     	MGOTO	_00543_DS_
     01B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1788     	.line	767, "main.c"; 	pwStep = 100;
     01B8 2164                      1- 1789     	MOVIA	0x64
     01B9 00rr                      1- 1790     	MOVAR	_pwStep
                                    1- 1791     	MGOTO	_00545_DS_
     01BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1792     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1793     ;;unsigned compare: left >= lit (0x65=101), size=1
     01BB                           1- 1794     _00543_DS_:
                                    1- 1795     	.line	769, "main.c"; 	else if(pwStep > 100)
     01BB 2165                      1- 1796     	MOVIA	0x65
                                    1- 1797     	BANKSEL	_pwStep
     01BC rrrr                      3-  110 m1      .banksel ram_address
     01BD 04rr                      1- 1798     	SUBAR	_pwStep,W
     01BE 0803                      1- 1799     	BTRSS	STATUS,0
                                    1- 1800     	MGOTO	_00545_DS_
     01BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1801     	.line	771, "main.c"; 	pwStep = 99;
     01C0 2163                      1- 1802     	MOVIA	0x63
     01C1 00rr                      1- 1803     	MOVAR	_pwStep
     01C2                           1- 1804     _00545_DS_:
                                    1- 1805     	.line	775, "main.c"; 	}
                                    1- 1806     	RETURN	
     01C2 0010                      3-   40 m1      ret
                                    1- 1807     ; exit point of _checkBat
                                    1- 1809     ;***
                                    1- 1810     ;  pBlock Stats: dbName = C
                                    1- 1811     ;***
                                    1- 1812     ;has an exit
                                    1- 1813     ;functions called:
                                    1- 1814     ;   _delay
                                    1- 1815     ;   _delay
                                    1- 1816     ;; Starting pCode block
                                    1- 1817     .segment "code"; module=main, function=_initAD
     0000                           1- 1819     _initAD:
                                    1- 1820     ; 2 exit points
                                    1- 1821     	.line	629, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1822     	MOVIA	0x80
     0001 00rr                      1- 1823     	MOVAR	_ADMD
                                    1- 1824     	.line	634, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1825     	CLRR	_ADVREFH
                                    1- 1826     	.line	639, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1827     	MOVIA	0x10
     0004 00rr                      1- 1828     	MOVAR	_ADR
                                    1- 1829     	.line	643, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1830     	MOVIA	0x03
     0006 00rr                      1- 1831     	MOVAR	_ADCR
                                    1- 1832     	.line	650, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1833     	BSR	_ADMDbits,4
                                    1- 1834     	.line	651, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1835     	MOVIA	0x32
                                    1- 1836     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1837     	.line	652, "main.c"; 	}
                                    1- 1838     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1839     ; exit point of _initAD
                                    1- 1841     ;***
                                    1- 1842     ;  pBlock Stats: dbName = C
                                    1- 1843     ;***
                                    1- 1844     ;has an exit
                                    1- 1845     ;functions called:
                                    1- 1846     ;   _keyRead
                                    1- 1847     ;   _checkBat
                                    1- 1848     ;   _checkBat
                                    1- 1849     ;   _keyRead
                                    1- 1850     ;   _checkBat
                                    1- 1851     ;   _checkBat
                                    1- 1852     ;1 compiler assigned register :
                                    1- 1853     ;   r0x104A
                                    1- 1854     ;; Starting pCode block
                                    1- 1855     .segment "code"; module=main, function=_keyCtr
                                    1- 1857     ;local variable name mapping:
     0000                           1- 1859     _keyCtr:
                                    1- 1860     ; 2 exit points
                                    1- 1861     	.line	573, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1862     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1863     	COMR	_PORTA,W
                                    1- 1864     	BANKSEL	r0x104A
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1865     	MOVAR	r0x104A
     0004 2180                      1- 1866     	MOVIA	0x80
     0005 10rr                      1- 1867     	ANDAR	r0x104A,F
     0006 01rr                      1- 1868     	MOVR	r0x104A,W
                                    1- 1869     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1870     	BANKSEL	r0x104A
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1871     	MOVAR	r0x104A
                                    1- 1872     	.line	574, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1873     	XORIA	0x01
     000B 0903                      1- 1874     	BTRSS	STATUS,2
                                    1- 1875     	MGOTO	_00482_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1876     	.line	576, "main.c"; 	checkBat();
                                    1- 1877     	MCALL	_checkBat
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1878     	.line	577, "main.c"; 	if(pwFlag && pwStep > 0)
                                    1- 1879     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1880     	MOVR	_pwFlag,W
     0010 0D03                      1- 1881     	BTRSC	STATUS,2
                                    1- 1882     	MGOTO	_00484_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1883     	BANKSEL	_pwStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1884     	MOVR	_pwStep,W
     0014 0D03                      1- 1885     	BTRSC	STATUS,2
                                    1- 1886     	MGOTO	_00484_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1887     	.line	579, "main.c"; 	if(showFlag == 0)
                                    1- 1888     	BANKSEL	_showFlag
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1889     	MOVR	_showFlag,W
     0018 0903                      1- 1890     	BTRSS	STATUS,2
                                    1- 1891     	MGOTO	_00467_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1892     	.line	582, "main.c"; 	pwShowTime = 3;
     001A 2103                      1- 1893     	MOVIA	0x03
                                    1- 1894     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1895     	MOVAR	_pwShowTime
                                    1- 1896     	.line	583, "main.c"; 	offShowTime = 0;
                                    1- 1897     	BANKSEL	_offShowTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 1898     	CLRR	_offShowTime
                                    1- 1899     	MGOTO	_00484_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1900     _00467_DS_:
                                    1- 1901     	.line	585, "main.c"; 	else if(stepShowTime == 0)
                                    1- 1902     	BANKSEL	_stepShowTime
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1903     	MOVR	_stepShowTime,W
     0022 0903                      1- 1904     	BTRSS	STATUS,2
                                    1- 1905     	MGOTO	_00464_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1906     	.line	587, "main.c"; 	pwShowTime = 0;
                                    1- 1907     	BANKSEL	_pwShowTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1908     	CLRR	_pwShowTime
                                    1- 1909     	.line	588, "main.c"; 	stepShowTime = 2;
     0026 2102                      1- 1910     	MOVIA	0x02
                                    1- 1911     	BANKSEL	_stepShowTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1912     	MOVAR	_stepShowTime
                                    1- 1913     	.line	589, "main.c"; 	offShowTime = 0;
                                    1- 1914     	BANKSEL	_offShowTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 1915     	CLRR	_offShowTime
                                    1- 1916     	MGOTO	_00484_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 1917     _00464_DS_:
                                    1- 1918     	.line	593, "main.c"; 	pwShowTime = 0;
                                    1- 1919     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1- 1920     	CLRR	_pwShowTime
                                    1- 1921     	.line	594, "main.c"; 	if(++workStep > 3)
                                    1- 1922     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1923     	INCR	_workStep,F
                                    1- 1924     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1925     ;;unsigned compare: left >= lit (0x4=4), size=1
     0030 2104                      1- 1926     	MOVIA	0x04
     0031 04rr                      1- 1927     	SUBAR	_workStep,W
     0032 0803                      1- 1928     	BTRSS	STATUS,0
                                    1- 1929     	MGOTO	_00462_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1930     	.line	595, "main.c"; 	workStep = 1;
     0034 2101                      1- 1931     	MOVIA	0x01
     0035 00rr                      1- 1932     	MOVAR	_workStep
     0036                           1- 1933     _00462_DS_:
                                    1- 1934     	.line	596, "main.c"; 	stepShowTime = 2;
     0036 2102                      1- 1935     	MOVIA	0x02
                                    1- 1936     	BANKSEL	_stepShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 1937     	MOVAR	_stepShowTime
                                    1- 1938     	.line	597, "main.c"; 	offShowTime = 0;
                                    1- 1939     	BANKSEL	_offShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1940     	CLRR	_offShowTime
                                    1- 1941     	MGOTO	_00484_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 1942     _00482_DS_:
                                    1- 1943     	.line	601, "main.c"; 	else if(kclick == 2)
                                    1- 1944     	BANKSEL	r0x104A
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 1945     	MOVR	r0x104A,W
     003E 2402                      1- 1946     	XORIA	0x02
     003F 0903                      1- 1947     	BTRSS	STATUS,2
                                    1- 1948     	MGOTO	_00484_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1949     	.line	603, "main.c"; 	checkBat();
                                    1- 1950     	MCALL	_checkBat
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1951     	.line	604, "main.c"; 	if(pwFlag)
                                    1- 1952     	BANKSEL	_pwFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 1953     	MOVR	_pwFlag,W
     0044 0D03                      1- 1954     	BTRSC	STATUS,2
                                    1- 1955     	MGOTO	_00477_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1956     	.line	606, "main.c"; 	pwFlag = 0;		//关机
     0046 02rr                      1- 1957     	CLRR	_pwFlag
                                    1- 1958     	.line	607, "main.c"; 	workStep = 0;
                                    1- 1959     	BANKSEL	_workStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1960     	CLRR	_workStep
                                    1- 1961     	.line	608, "main.c"; 	pwShowTime = 0;
                                    1- 1962     	BANKSEL	_pwShowTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 1963     	CLRR	_pwShowTime
                                    1- 1964     	.line	609, "main.c"; 	stepShowTime = 0;
                                    1- 1965     	BANKSEL	_stepShowTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 1966     	CLRR	_stepShowTime
                                    1- 1967     	.line	610, "main.c"; 	offShowTime = 5;
     004D 2105                      1- 1968     	MOVIA	0x05
                                    1- 1969     	BANKSEL	_offShowTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1970     	MOVAR	_offShowTime
                                    1- 1971     	MGOTO	_00484_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 1972     _00477_DS_:
                                    1- 1973     	.line	612, "main.c"; 	else if(pwStep > 0)
                                    1- 1974     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 1975     	MOVR	_pwStep,W
     0053 0D03                      1- 1976     	BTRSC	STATUS,2
                                    1- 1977     	MGOTO	_00484_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1978     	.line	615, "main.c"; 	pwFlag = 1;		//开机
     0055 2101                      1- 1979     	MOVIA	0x01
                                    1- 1980     	BANKSEL	_pwFlag
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 1981     	MOVAR	_pwFlag
                                    1- 1982     	.line	616, "main.c"; 	pwShowTime = 3;
     0058 2103                      1- 1983     	MOVIA	0x03
                                    1- 1984     	BANKSEL	_pwShowTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1985     	MOVAR	_pwShowTime
                                    1- 1986     	.line	617, "main.c"; 	stepShowTime = 2;
     005B 2102                      1- 1987     	MOVIA	0x02
                                    1- 1988     	BANKSEL	_stepShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 1989     	MOVAR	_stepShowTime
                                    1- 1990     	.line	618, "main.c"; 	offShowTime = 0;
                                    1- 1991     	BANKSEL	_offShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1992     	CLRR	_offShowTime
                                    1- 1993     	.line	619, "main.c"; 	if(workStep == 0)
                                    1- 1994     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 1995     	MOVR	_workStep,W
     0062 0903                      1- 1996     	BTRSS	STATUS,2
                                    1- 1997     	MGOTO	_00484_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1998     	.line	620, "main.c"; 	workStep = 1;
     0064 2101                      1- 1999     	MOVIA	0x01
     0065 00rr                      1- 2000     	MOVAR	_workStep
     0066                           1- 2001     _00484_DS_:
                                    1- 2002     	.line	623, "main.c"; 	}
                                    1- 2003     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 2004     ; exit point of _keyCtr
                                    1- 2006     ;***
                                    1- 2007     ;  pBlock Stats: dbName = C
                                    1- 2008     ;***
                                    1- 2009     ;has an exit
                                    1- 2010     ;1 compiler assigned register :
                                    1- 2011     ;   r0x1049
                                    1- 2012     ;; Starting pCode block
                                    1- 2013     .segment "code"; module=main, function=_keyRead
                                    1- 2015     ;local variable name mapping:
     0000                           1- 2017     _keyRead:
                                    1- 2018     ; 2 exit points
                                    1- 2019     	.line	538, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2020     	BANKSEL	r0x1049
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2021     	MOVAR	r0x1049
                                    1- 2022     	.line	540, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2023     	MOVR	r0x1049,W
     0003 0D03                      1- 2024     	BTRSC	STATUS,2
                                    1- 2025     	MGOTO	_00454_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2026     	.line	542, "main.c"; 	keyCount++;
                                    1- 2027     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2028     	INCR	_keyCount,F
                                    1- 2029     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2030     	.line	543, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2031     	MOVIA	0xc8
     0008 04rr                      1- 2032     	SUBAR	_keyCount,W
     0009 0803                      1- 2033     	BTRSS	STATUS,0
                                    1- 2034     	MGOTO	_00455_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2035     	.line	545, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2036     	MOVIA	0xc8
     000C 00rr                      1- 2037     	MOVAR	_keyCount
                                    1- 2038     	.line	546, "main.c"; 	if(!longPressFlag)
                                    1- 2039     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2040     	MOVR	_longPressFlag,W
     000F 0903                      1- 2041     	BTRSS	STATUS,2
                                    1- 2042     	MGOTO	_00455_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2043     	.line	548, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2044     	MOVIA	0x01
     0012 00rr                      1- 2045     	MOVAR	_longPressFlag
                                    1- 2046     	.line	549, "main.c"; 	return 2;
     0013 2102                      1- 2047     	MOVIA	0x02
                                    1- 2048     	MGOTO	_00456_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2049     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 2050     _00454_DS_:
                                    1- 2051     	.line	555, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 2052     	MOVIA	0xc8
                                    1- 2053     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2054     	SUBAR	_keyCount,W
     0018 0803                      1- 2055     	BTRSS	STATUS,0
                                    1- 2056     	MGOTO	_00451_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2057     	.line	557, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2058     	CLRR	_keyCount
                                    1- 2059     	.line	558, "main.c"; 	longPressFlag = 0;
                                    1- 2060     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2061     	CLRR	_longPressFlag
                                    1- 2062     	.line	559, "main.c"; 	return	0;
     001D 2100                      1- 2063     	MOVIA	0x00
                                    1- 2064     	MGOTO	_00456_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2065     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2066     _00451_DS_:
                                    1- 2067     	.line	561, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2068     	MOVIA	0x04
                                    1- 2069     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2070     	SUBAR	_keyCount,W
     0022 0803                      1- 2071     	BTRSS	STATUS,0
                                    1- 2072     	MGOTO	_00452_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2073     	.line	563, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2074     	CLRR	_keyCount
                                    1- 2075     	.line	564, "main.c"; 	return	1;
     0025 2101                      1- 2076     	MOVIA	0x01
                                    1- 2077     	MGOTO	_00456_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2078     _00452_DS_:
                                    1- 2079     	.line	566, "main.c"; 	keyCount = 0;
                                    1- 2080     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2081     	CLRR	_keyCount
     0029                           1- 2082     _00455_DS_:
                                    1- 2083     	.line	568, "main.c"; 	return 0;
     0029 2100                      1- 2084     	MOVIA	0x00
     002A                           1- 2085     _00456_DS_:
                                    1- 2086     	.line	569, "main.c"; 	}
                                    1- 2087     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2088     ; exit point of _keyRead
                                    1- 2090     ;***
                                    1- 2091     ;  pBlock Stats: dbName = C
                                    1- 2092     ;***
                                    1- 2093     ;has an exit
                                    1- 2094     ;; Starting pCode block
                                    1- 2095     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2097     _pwmStop:
                                    1- 2098     ; 2 exit points
                                    1- 2099     	.line	532, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2100     	CLRA	
     0001 00rr                      1- 2101     	SFUN	_T2CR1
                                    1- 2102     	.line	533, "main.c"; 	}
                                    1- 2103     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2104     ; exit point of _pwmStop
                                    1- 2106     ;***
                                    1- 2107     ;  pBlock Stats: dbName = C
                                    1- 2108     ;***
                                    1- 2109     ;has an exit
                                    1- 2110     ;1 compiler assigned register :
                                    1- 2111     ;   r0x104B
                                    1- 2112     ;; Starting pCode block
                                    1- 2113     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2115     _pwmInit:
                                    1- 2116     ; 2 exit points
                                    1- 2117     	.line	520, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2118     	SFUNR	_T2CR1
                                    1- 2119     	BANKSEL	r0x104B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2120     	MOVAR	r0x104B
     0003 0Frr                      1- 2121     	BTRSC	r0x104B,7
                                    1- 2122     	.line	521, "main.c"; 	return;
                                    1- 2123     	MGOTO	_00435_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2124     	.line	522, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2125     	CLRR	_TMRH
                                    1- 2126     	.line	523, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2127     	MOVIA	0x64
     0007 00rr                      1- 2128     	SFUN	_TMR2
                                    1- 2129     	.line	524, "main.c"; 	PWM2DUTY = 69;				// 		
     0008 2145                      1- 2130     	MOVIA	0x45
     0009 00rr                      1- 2131     	SFUN	_PWM2DUTY
                                    1- 2132     	.line	526, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div256;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 2107                      1- 2133     	MOVIA	0x07
     000B 00rr                      1- 2134     	SFUN	_T2CR2
                                    1- 2135     	.line	527, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2136     	MOVIA	0x83
     000D 00rr                      1- 2137     	SFUN	_T2CR1
     000E                           1- 2138     _00435_DS_:
                                    1- 2139     	.line	528, "main.c"; 	}
                                    1- 2140     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2141     ; exit point of _pwmInit
                                    1- 2143     ;***
                                    1- 2144     ;  pBlock Stats: dbName = C
                                    1- 2145     ;***
                                    1- 2146     ;has an exit
                                    1- 2147     ;functions called:
                                    1- 2148     ;   _setInput
                                    1- 2149     ;   _pwmStop
                                    1- 2150     ;   _setInput
                                    1- 2151     ;   _pwmStop
                                    1- 2152     ;; Starting pCode block
                                    1- 2153     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2155     _gotoSleep:
                                    1- 2156     ; 2 exit points
                                    1- 2157     	.line	487, "main.c"; 	sleepFlag = 0;
                                    1- 2158     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2159     	CLRR	_sleepFlag
                                    1- 2160     	.line	488, "main.c"; 	waitTime = 0;
                                    1- 2161     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2162     	CLRR	_waitTime
     0004 02rr                      1- 2163     	CLRR	(_waitTime + 1)
                                    1- 2164     	.line	489, "main.c"; 	setInput();
                                    1- 2165     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2166     	.line	490, "main.c"; 	sleepTime = 0;
                                    1- 2167     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2168     	CLRR	_sleepTime
                                    1- 2169     	.line	491, "main.c"; 	pwFlag = 0;
                                    1- 2170     	BANKSEL	_pwFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2171     	CLRR	_pwFlag
                                    1- 2172     	.line	492, "main.c"; 	pwmStop();
                                    1- 2173     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2174     	.line	493, "main.c"; 	AWUCON = 0xA0;
     000B 21A0                      1- 2175     	MOVIA	0xa0
     000C 00rr                      1- 2176     	MOVAR	_AWUCON
                                    1- 2177     	.line	495, "main.c"; 	IOSTB = C_PB3_Input;
     000D 2108                      1- 2178     	MOVIA	0x08
     000E 000r                      1- 2179     	IOST	_IOSTB
                                    1- 2180     	.line	496, "main.c"; 	PORTA = 0X00;
                                    1- 2181     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2182     	CLRR	_PORTA
                                    1- 2183     	.line	497, "main.c"; 	PORTB = 0X00;
     0011 02rr                      1- 2184     	CLRR	_PORTB
                                    1- 2185     	.line	498, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2186     	MOVIA	0x02
     0013 00rr                      1- 2187     	MOVAR	_INTE
                                    1- 2188     	.line	499, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2189     	MOVIA	0x18
     0015 00rr                      1- 2190     	MOVAR	_PCON
                                    1- 2191     	.line	500, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2192     	CLRR	_INTF
                                    1- 2193     	.line	501, "main.c"; 	CLRWDT();
     0017 0002                      1- 2194     	clrwdt
                                    1- 2195     	.line	502, "main.c"; 	ENI();
     0018 0004                      1- 2196     	ENI
                                    1- 2197     	.line	503, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2198     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1- 2199     	BTRSC	_PORTA,5
                                    1- 2200     	MGOTO	_00428_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2201     	.line	504, "main.c"; 	SLEEP();
     001C 0001                      1- 2202     	sleep
     001D                           1- 2203     _00428_DS_:
                                    1- 2204     	.line	505, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2205     	CLRR	_AWUCON
                                    1- 2206     	.line	506, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001E 21A0                      1- 2207     	MOVIA	0xa0
     001F 000r                      1- 2208     	IOST	_IOSTA
                                    1- 2209     	.line	507, "main.c"; 	IOSTB = C_PB3_Input ;
     0020 2108                      1- 2210     	MOVIA	0x08
     0021 000r                      1- 2211     	IOST	_IOSTB
                                    1- 2212     	.line	508, "main.c"; 	PORTA = 0x00;
                                    1- 2213     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2214     	CLRR	_PORTA
                                    1- 2215     	.line	509, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2103                      1- 2216     	MOVIA	0x03
     0025 00rr                      1- 2217     	MOVAR	_INTE
                                    1- 2218     	.line	510, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2219     	CLRR	_INTF
                                    1- 2220     	.line	512, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2221     	MOVIA	0xb8
     0028 00rr                      1- 2222     	MOVAR	_PCON
                                    1- 2223     	.line	515, "main.c"; 	}
                                    1- 2224     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2225     ; exit point of _gotoSleep
                                    1- 2227     ;***
                                    1- 2228     ;  pBlock Stats: dbName = C
                                    1- 2229     ;***
                                    1- 2230     ;has an exit
                                    1- 2231     ;functions called:
                                    1- 2232     ;   _setInput
                                    1- 2233     ;   _setInput
                                    1- 2234     ;; Starting pCode block
                                    1- 2235     .segment "code"; module=main, function=_initSys
     0000                           1- 2237     _initSys:
                                    1- 2238     ; 2 exit points
                                    1- 2239     	.line	455, "main.c"; 	DISI();
     0000 0013                      1- 2240     	DISI
                                    1- 2241     	.line	456, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 2242     	MOVIA	0xa0
     0002 000r                      1- 2243     	IOST	_IOSTA
                                    1- 2244     	.line	457, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2245     	MOVIA	0x08
     0004 000r                      1- 2246     	IOST	_IOSTB
                                    1- 2247     	.line	458, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2248     	CLRR	_PORTB
                                    1- 2249     	.line	459, "main.c"; 	PORTA = 0x00;
                                    1- 2250     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2251     	CLRR	_PORTA
                                    1- 2252     	.line	461, "main.c"; 	setInput();
                                    1- 2253     	MCALL	_setInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2254     	.line	462, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2255     	MOVIA	0x7f
     000A 000r                      1- 2256     	IOST	_APHCON
                                    1- 2257     	.line	463, "main.c"; 	BPHCON = 0xFF;		//PB3上拉
     000B 21FF                      1- 2258     	MOVIA	0xff
     000C 00rr                      1- 2259     	MOVAR	_BPHCON
                                    1- 2260     	.line	464, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2261     	MOVAR	_ABPLCON
                                    1- 2262     	.line	466, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2103                      1- 2263     	MOVIA	0x03
     000F 00rr                      1- 2264     	MOVAR	_INTE
                                    1- 2265     	.line	468, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2266     	CLRA	
     0011 000r                      1- 2267     	IOST	_PCON1
                                    1- 2268     	.line	470, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2269     	MOVIA	0x37
     0013 00rr                      1- 2270     	MOVAR	_TMR0
                                    1- 2271     	.line	471, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2272     	CLRA	
     0015 0003                      1- 2273     	T0MD	
                                    1- 2274     	.line	473, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2275     	MOVIA	0x01
     0017 000r                      1- 2276     	IOST	_PCON1
                                    1- 2277     	.line	476, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2278     	MOVIA	0x98
     0019 00rr                      1- 2279     	MOVAR	_PCON
                                    1- 2280     	.line	479, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2281     	MOVIA	0x01
     001B 000r                      1- 2282     	IOST	_PCON1
                                    1- 2283     	.line	480, "main.c"; 	ENI();
     001C 0004                      1- 2284     	ENI
                                    1- 2285     	.line	481, "main.c"; 	}
                                    1- 2286     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2287     ; exit point of _initSys
                                    1- 2289     ;***
                                    1- 2290     ;  pBlock Stats: dbName = C
                                    1- 2291     ;***
                                    1- 2292     ;has an exit
                                    1- 2293     ;functions called:
                                    1- 2294     ;   __gptrget1
                                    1- 2295     ;   _showNubBaiwei
                                    1- 2296     ;   __gptrget1
                                    1- 2297     ;   _showNubShiwei
                                    1- 2298     ;   __gptrget1
                                    1- 2299     ;   _showNubGewei
                                    1- 2300     ;   _setInput
                                    1- 2301     ;   __gptrget1
                                    1- 2302     ;   _showNubBaiwei
                                    1- 2303     ;   __gptrget1
                                    1- 2304     ;   _showNubShiwei
                                    1- 2305     ;   __gptrget1
                                    1- 2306     ;   _showNubGewei
                                    1- 2307     ;   _setInput
                                    1- 2308     ;5 compiler assigned registers:
                                    1- 2309     ;   r0x104C
                                    1- 2310     ;   r0x104D
                                    1- 2311     ;   STK01
                                    1- 2312     ;   STK00
                                    1- 2313     ;   r0x104E
                                    1- 2314     ;; Starting pCode block
                                    1- 2315     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2317     _refreshNub:
                                    1- 2318     ; 2 exit points
                                    1- 2319     	.line	446, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 2320     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2321     	MOVR	_baiweiNum,W
     0002 25rr                      1- 2322     	ADDIA	(_numArray + 0)
                                    1- 2323     	BANKSEL	r0x104C
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2324     	MOVAR	r0x104C
     0005 21rr                      1- 2325     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 2326     	BTRSC	STATUS,0
     0007 2501                      1- 2327     	ADDIA	0x01
                                    1- 2328     	BANKSEL	r0x104D
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2329     	MOVAR	r0x104D
                                    1- 2330     	BANKSEL	r0x104C
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2331     	MOVR	r0x104C,W
     000C 00rr                      1- 2332     	MOVAR	STK01
                                    1- 2333     	BANKSEL	r0x104D
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2334     	MOVR	r0x104D,W
     000F 00rr                      1- 2335     	MOVAR	STK00
     0010 2100                      1- 2336     	MOVIA	0x00
                                    1- 2337     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2338     ;;103	MOVAR	r0x104E
                                    1- 2339     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2340     	.line	447, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2341     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2342     	MOVR	_shiweiNum,W
     0015 25rr                      1- 2343     	ADDIA	(_numArray + 0)
                                    1- 2344     	BANKSEL	r0x104C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2345     	MOVAR	r0x104C
     0018 21rr                      1- 2346     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 2347     	BTRSC	STATUS,0
     001A 2501                      1- 2348     	ADDIA	0x01
                                    1- 2349     	BANKSEL	r0x104D
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2350     	MOVAR	r0x104D
                                    1- 2351     	BANKSEL	r0x104C
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2352     	MOVR	r0x104C,W
     001F 00rr                      1- 2353     	MOVAR	STK01
                                    1- 2354     	BANKSEL	r0x104D
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2355     	MOVR	r0x104D,W
     0022 00rr                      1- 2356     	MOVAR	STK00
     0023 2100                      1- 2357     	MOVIA	0x00
                                    1- 2358     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2359     ;;102	MOVAR	r0x104E
                                    1- 2360     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2361     	.line	448, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2362     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2363     	MOVR	_geweiNum,W
     0028 25rr                      1- 2364     	ADDIA	(_numArray + 0)
                                    1- 2365     	BANKSEL	r0x104C
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2366     	MOVAR	r0x104C
     002B 21rr                      1- 2367     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2368     	BTRSC	STATUS,0
     002D 2501                      1- 2369     	ADDIA	0x01
                                    1- 2370     	BANKSEL	r0x104D
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2371     	MOVAR	r0x104D
                                    1- 2372     	BANKSEL	r0x104C
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2373     	MOVR	r0x104C,W
     0032 00rr                      1- 2374     	MOVAR	STK01
                                    1- 2375     	BANKSEL	r0x104D
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2376     	MOVR	r0x104D,W
     0035 00rr                      1- 2377     	MOVAR	STK00
     0036 2100                      1- 2378     	MOVIA	0x00
                                    1- 2379     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2380     ;;2	MOVAR	r0x104E
                                    1- 2381     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2382     	.line	449, "main.c"; 	setInput();
                                    1- 2383     	MCALL	_setInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2384     	.line	450, "main.c"; 	}
                                    1- 2385     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 2386     ; exit point of _refreshNub
                                    1- 2388     ;***
                                    1- 2389     ;  pBlock Stats: dbName = C
                                    1- 2390     ;***
                                    1- 2391     ;1 compiler assigned register :
                                    1- 2392     ;   r0x104F
                                    1- 2393     ;; Starting pCode block
                                    1- 2394     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2396     _checkIRKey:
                                    1- 2397     ; 0 exit points
                                    1- 2398     	.line	396, "main.c"; 	if(pwFlag == 0)
                                    1- 2399     	BANKSEL	_pwFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2400     	MOVR	_pwFlag,W
     0002 0903                      1- 2401     	BTRSS	STATUS,2
                                    1- 2402     	MGOTO	_00394_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2403     	.line	398, "main.c"; 	irStep = 0;
                                    1- 2404     	BANKSEL	_irStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2405     	CLRR	_irStep
                                    1- 2406     	.line	399, "main.c"; 	return;
                                    1- 2407     	MGOTO	_00012_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
     0007                           1- 2408     _00394_DS_:
                                    1- 2409     	.line	401, "main.c"; 	if(sendPreSta == 1 && getbit(PORTB, 3) == 0)
                                    1- 2410     	BANKSEL	_sendPreSta
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 2411     	MOVR	_sendPreSta,W
     0009 2401                      1- 2412     	XORIA	0x01
     000A 0903                      1- 2413     	BTRSS	STATUS,2
                                    1- 2414     	MGOTO	_00411_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C 01rr                      1- 2415     	MOVR	_PORTB,W
     000D 2208                      1- 2416     	ANDIA	0x08
     000E 0903                      1- 2417     	BTRSS	STATUS,2
     000F 2101                      1- 2418     	MOVIA	0x01
                                    1- 2419     	BANKSEL	r0x104F
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2420     	MOVAR	r0x104F
     0012 01rr                      1- 2421     	MOVR	r0x104F,W
     0013 0903                      1- 2422     	BTRSS	STATUS,2
                                    1- 2423     	MGOTO	_00411_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2424     	.line	404, "main.c"; 	notRecv = 0;
                                    1- 2425     	BANKSEL	_notRecv
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 2426     	CLRR	_notRecv
                                    1- 2427     	.line	405, "main.c"; 	count250ms = 0;
                                    1- 2428     	BANKSEL	_count250ms
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1- 2429     	CLRR	_count250ms
     0019 02rr                      1- 2430     	CLRR	(_count250ms + 1)
                                    1- 2431     	.line	407, "main.c"; 	if(++revCount > 5)
                                    1- 2432     	BANKSEL	_revCount
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 2433     	INCR	_revCount,F
                                    1- 2434     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2435     ;;unsigned compare: left >= lit (0x6=6), size=1
     001C 2106                      1- 2436     	MOVIA	0x06
     001D 04rr                      1- 2437     	SUBAR	_revCount,W
     001E 0803                      1- 2438     	BTRSS	STATUS,0
                                    1- 2439     	MGOTO	_00396_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2440     	.line	409, "main.c"; 	revCount = 6;
     0020 2106                      1- 2441     	MOVIA	0x06
     0021 00rr                      1- 2442     	MOVAR	_revCount
                                    1- 2443     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2444     ;;unsigned compare: left >= lit (0x6=6), size=1
     0022                           1- 2445     _00396_DS_:
                                    1- 2446     	.line	411, "main.c"; 	if(revCount > 5 && irStep == 0)
     0022 2106                      1- 2447     	MOVIA	0x06
                                    1- 2448     	BANKSEL	_revCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 04rr                      1- 2449     	SUBAR	_revCount,W
     0025 0803                      1- 2450     	BTRSS	STATUS,0
                                    1- 2451     	MGOTO	_00012_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2452     	BANKSEL	_irStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2453     	MOVR	_irStep,W
     0029 0903                      1- 2454     	BTRSS	STATUS,2
                                    1- 2455     	MGOTO	_00012_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2456     	.line	413, "main.c"; 	irStep = 1;
     002B 2101                      1- 2457     	MOVIA	0x01
     002C 00rr                      1- 2458     	MOVAR	_irStep
                                    1- 2459     	.line	414, "main.c"; 	if(workStep == 1)
                                    1- 2460     	BANKSEL	_workStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 2461     	MOVR	_workStep,W
     002F 2401                      1- 2462     	XORIA	0x01
     0030 0903                      1- 2463     	BTRSS	STATUS,2
                                    1- 2464     	MGOTO	_00403_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2465     	.line	416, "main.c"; 	workTime = 63;
     0032 213F                      1- 2466     	MOVIA	0x3f
                                    1- 2467     	BANKSEL	_workTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2468     	MOVAR	_workTime
     0035 02rr                      1- 2469     	CLRR	(_workTime + 1)
                                    1- 2470     	MGOTO	_00404_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 2471     _00403_DS_:
                                    1- 2472     	.line	418, "main.c"; 	else if(workStep == 2)
                                    1- 2473     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 2474     	MOVR	_workStep,W
     0039 2402                      1- 2475     	XORIA	0x02
     003A 0903                      1- 2476     	BTRSS	STATUS,2
                                    1- 2477     	MGOTO	_00400_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2478     	.line	420, "main.c"; 	workTime = 100;
     003C 2164                      1- 2479     	MOVIA	0x64
                                    1- 2480     	BANKSEL	_workTime
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 2481     	MOVAR	_workTime
     003F 02rr                      1- 2482     	CLRR	(_workTime + 1)
                                    1- 2483     	MGOTO	_00404_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 2484     _00400_DS_:
                                    1- 2485     	.line	422, "main.c"; 	else if(workStep == 3)
                                    1- 2486     	BANKSEL	_workStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2487     	MOVR	_workStep,W
     0043 2403                      1- 2488     	XORIA	0x03
     0044 0903                      1- 2489     	BTRSS	STATUS,2
                                    1- 2490     	MGOTO	_00404_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2491     	.line	424, "main.c"; 	workTime = 150;
     0046 2196                      1- 2492     	MOVIA	0x96
                                    1- 2493     	BANKSEL	_workTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1- 2494     	MOVAR	_workTime
     0049 02rr                      1- 2495     	CLRR	(_workTime + 1)
     004A                           1- 2496     _00404_DS_:
                                    1- 2497     	.line	426, "main.c"; 	waitTime = workTime + 50;
     004A 2132                      1- 2498     	MOVIA	0x32
                                    1- 2499     	BANKSEL	_workTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 03rr                      1- 2500     	ADDAR	_workTime,W
                                    1- 2501     	BANKSEL	_waitTime
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 2502     	MOVAR	_waitTime
     004F 02rr                      1- 2503     	CLRR	(_waitTime + 1)
     0050 14rr                      1- 2504     	RLR	(_waitTime + 1),F
                                    1- 2505     	BANKSEL	_workTime
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2506     	MOVR	(_workTime + 1),W
                                    1- 2507     	BANKSEL	_waitTime
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 03rr                      1- 2508     	ADDAR	(_waitTime + 1),F
                                    1- 2509     	MGOTO	_00012_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1- 2510     _00411_DS_:
                                    1- 2511     	.line	432, "main.c"; 	revCount = 0;
                                    1- 2512     	BANKSEL	_revCount
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 02rr                      1- 2513     	CLRR	_revCount
                                    1- 2514     	.line	433, "main.c"; 	if(++notRecv > 20)
                                    1- 2515     	BANKSEL	_notRecv
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 05rr                      1- 2516     	INCR	_notRecv,F
                                    1- 2517     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2518     ;;unsigned compare: left >= lit (0x15=21), size=1
     005A 2115                      1- 2519     	MOVIA	0x15
     005B 04rr                      1- 2520     	SUBAR	_notRecv,W
     005C 0803                      1- 2521     	BTRSS	STATUS,0
                                    1- 2522     	MGOTO	_00012_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2523     	.line	435, "main.c"; 	irStep = 0;
                                    1- 2524     	BANKSEL	_irStep
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 2525     	CLRR	_irStep
     0060                           1- 2526     _00012_DS_:
                                    1- 2527     	.line	439, "main.c"; 	}
                                    1- 2528     	RETURN	
     0060 0010                      3-   40 m1      ret
                                    1- 2530     ;***
                                    1- 2531     ;  pBlock Stats: dbName = C
                                    1- 2532     ;***
                                    1- 2533     ;has an exit
                                    1- 2534     ;functions called:
                                    1- 2535     ;   _pwmInit
                                    1- 2536     ;   _pwmStop
                                    1- 2537     ;   _checkBat
                                    1- 2538     ;   __divuchar
                                    1- 2539     ;   __moduchar
                                    1- 2540     ;   __moduint
                                    1- 2541     ;   __divuchar
                                    1- 2542     ;   __moduchar
                                    1- 2543     ;   _pwmInit
                                    1- 2544     ;   _pwmStop
                                    1- 2545     ;   _checkBat
                                    1- 2546     ;   __divuchar
                                    1- 2547     ;   __moduchar
                                    1- 2548     ;   __moduint
                                    1- 2549     ;   __divuchar
                                    1- 2550     ;   __moduchar
                                    1- 2551     ;5 compiler assigned registers:
                                    1- 2552     ;   r0x1050
                                    1- 2553     ;   STK00
                                    1- 2554     ;   STK02
                                    1- 2555     ;   STK01
                                    1- 2556     ;   r0x1051
                                    1- 2557     ;; Starting pCode block
                                    1- 2558     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2560     _chrgCtr:
                                    1- 2561     ; 2 exit points
                                    1- 2562     	.line	260, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2563     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Err                      1- 2564     	BTRSC	_PORTA,5
                                    1- 2565     	MGOTO	_00295_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2566     	.line	262, "main.c"; 	fullFlag = 0;
                                    1- 2567     	BANKSEL	_fullFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2568     	CLRR	_fullFlag
     0005                           1- 2569     _00295_DS_:
                                    1- 2570     	.line	264, "main.c"; 	BPHCON |= 0x04;
     0005 19rr                      1- 2571     	BSR	_BPHCON,2
                                    1- 2572     	.line	265, "main.c"; 	IOSTB &= 0xFB;
     0006 001r                      1- 2573     	IOSTR	_IOSTB
                                    1- 2574     	BANKSEL	r0x1050
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2575     	MOVAR	r0x1050
     0009 1Drr                      1- 2576     	BCR	r0x1050,2
     000A 01rr                      1- 2577     	MOVR	r0x1050,W
     000B 000r                      1- 2578     	IOST	_IOSTB
                                    1- 2579     	.line	266, "main.c"; 	if(workTime > 0)
                                    1- 2580     	BANKSEL	_workTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2581     	MOVR	_workTime,W
     000E 11rr                      1- 2582     	IORAR	(_workTime + 1),W
     000F 0D03                      1- 2583     	BTRSC	STATUS,2
                                    1- 2584     	MGOTO	_00297_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2585     	.line	268, "main.c"; 	pwmInit();
                                    1- 2586     	MCALL	_pwmInit
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2587     	.line	269, "main.c"; 	workTime--;
     0012 21FF                      1- 2588     	MOVIA	0xff
                                    1- 2589     	BANKSEL	_workTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 03rr                      1- 2590     	ADDAR	_workTime,F
     0015 0803                      1- 2591     	BTRSS	STATUS,0
     0016 06rr                      1- 2592     	DECR	(_workTime + 1),F
                                    1- 2593     	MGOTO	_00298_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 2594     _00297_DS_:
                                    1- 2595     	.line	273, "main.c"; 	workTime = 0;
                                    1- 2596     	BANKSEL	_workTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2597     	CLRR	_workTime
     001A 02rr                      1- 2598     	CLRR	(_workTime + 1)
                                    1- 2599     	.line	274, "main.c"; 	pwmStop();
                                    1- 2600     	MCALL	_pwmStop
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2601     	.line	275, "main.c"; 	PORTB &= 0xFB;
     001C 1Drr                      1- 2602     	BCR	_PORTB,2
     001D                           1- 2603     _00298_DS_:
                                    1- 2604     	.line	277, "main.c"; 	if(startTime)
                                    1- 2605     	BANKSEL	_startTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2606     	MOVR	_startTime,W
     001F 0D03                      1- 2607     	BTRSC	STATUS,2
                                    1- 2608     	MGOTO	_00333_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2609     	.line	279, "main.c"; 	checkBat();
                                    1- 2610     	MCALL	_checkBat
     0021 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2611     	.line	280, "main.c"; 	startTime--;
                                    1- 2612     	BANKSEL	_startTime
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 06rr                      1- 2613     	DECR	_startTime,F
                                    1- 2614     	.line	281, "main.c"; 	showFlag = 1;
     0024 2101                      1- 2615     	MOVIA	0x01
                                    1- 2616     	BANKSEL	_showFlag
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2617     	MOVAR	_showFlag
                                    1- 2618     	.line	282, "main.c"; 	baiweiNum = shiweiNum = 8;
     0027 2108                      1- 2619     	MOVIA	0x08
                                    1- 2620     	BANKSEL	_shiweiNum
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2621     	MOVAR	_shiweiNum
                                    1- 2622     	BANKSEL	_baiweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2623     	MOVAR	_baiweiNum
                                    1- 2624     	.line	283, "main.c"; 	geweiNum = 8;
                                    1- 2625     	BANKSEL	_geweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2626     	MOVAR	_geweiNum
                                    1- 2627     	.line	283, "main.c"; 	}
                                    1- 2628     	MGOTO	_00335_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 2629     _00333_DS_:
                                    1- 2630     	.line	285, "main.c"; 	else if(stepShowTime)
                                    1- 2631     	BANKSEL	_stepShowTime
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2632     	MOVR	_stepShowTime,W
     0031 0D03                      1- 2633     	BTRSC	STATUS,2
                                    1- 2634     	MGOTO	_00330_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2635     	.line	287, "main.c"; 	showFlag = 1;
     0033 2101                      1- 2636     	MOVIA	0x01
                                    1- 2637     	BANKSEL	_showFlag
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2638     	MOVAR	_showFlag
                                    1- 2639     	.line	288, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2640     	BANKSEL	_shiweiNum
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2641     	CLRR	_shiweiNum
                                    1- 2642     	BANKSEL	_baiweiNum
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 2643     	CLRR	_baiweiNum
                                    1- 2644     	.line	289, "main.c"; 	geweiNum = workStep;
                                    1- 2645     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2646     	MOVR	_workStep,W
                                    1- 2647     	BANKSEL	_geweiNum
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 2648     	MOVAR	_geweiNum
                                    1- 2649     	.line	289, "main.c"; 	}
                                    1- 2650     	MGOTO	_00335_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 2651     _00330_DS_:
                                    1- 2652     	.line	291, "main.c"; 	else if(pwShowTime || workTime)
                                    1- 2653     	BANKSEL	_pwShowTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 2654     	MOVR	_pwShowTime,W
     0041 0903                      1- 2655     	BTRSS	STATUS,2
                                    1- 2656     	MGOTO	_00325_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2657     	BANKSEL	_workTime
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2658     	MOVR	_workTime,W
     0045 11rr                      1- 2659     	IORAR	(_workTime + 1),W
     0046 0D03                      1- 2660     	BTRSC	STATUS,2
                                    1- 2661     	MGOTO	_00326_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048                           1- 2662     _00325_DS_:
                                    1- 2663     	.line	293, "main.c"; 	showFlag = 1;
     0048 2101                      1- 2664     	MOVIA	0x01
                                    1- 2665     	BANKSEL	_showFlag
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2666     	MOVAR	_showFlag
                                    1- 2667     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2668     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2669     	.line	294, "main.c"; 	if(pwStep > 99)
     004B 2164                      1- 2670     	MOVIA	0x64
                                    1- 2671     	BANKSEL	_pwStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 04rr                      1- 2672     	SUBAR	_pwStep,W
     004E 0803                      1- 2673     	BTRSS	STATUS,0
                                    1- 2674     	MGOTO	_00300_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2675     	.line	296, "main.c"; 	baiweiNum = 1;
     0050 2101                      1- 2676     	MOVIA	0x01
                                    1- 2677     	BANKSEL	_baiweiNum
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 2678     	MOVAR	_baiweiNum
                                    1- 2679     	.line	297, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2680     	BANKSEL	_geweiNum
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 2681     	CLRR	_geweiNum
                                    1- 2682     	BANKSEL	_shiweiNum
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 2683     	CLRR	_shiweiNum
                                    1- 2684     	MGOTO	_00335_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058                           1- 2685     _00300_DS_:
                                    1- 2686     	.line	301, "main.c"; 	baiweiNum = 0;
                                    1- 2687     	BANKSEL	_baiweiNum
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 2688     	CLRR	_baiweiNum
                                    1- 2689     	.line	302, "main.c"; 	shiweiNum = pwStep/10;
     005A 210A                      1- 2690     	MOVIA	0x0a
     005B 00rr                      1- 2691     	MOVAR	STK00
                                    1- 2692     	BANKSEL	_pwStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 2693     	MOVR	_pwStep,W
                                    1- 2694     	MCALL	__divuchar
     005E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2695     	BANKSEL	_shiweiNum
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 00rr                      1- 2696     	MOVAR	_shiweiNum
                                    1- 2697     	.line	303, "main.c"; 	geweiNum = pwStep%10;
     0061 210A                      1- 2698     	MOVIA	0x0a
     0062 00rr                      1- 2699     	MOVAR	STK00
                                    1- 2700     	BANKSEL	_pwStep
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 2701     	MOVR	_pwStep,W
                                    1- 2702     	MCALL	__moduchar
     0065 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2703     	BANKSEL	_geweiNum
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 2704     	MOVAR	_geweiNum
                                    1- 2705     	.line	303, "main.c"; 	}
                                    1- 2706     	MGOTO	_00335_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2707     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2708     ;;unsigned compare: left >= lit (0x6=6), size=1
     0069                           1- 2709     _00326_DS_:
                                    1- 2710     	.line	308, "main.c"; 	if(pwStep <= 5 && offShowTime == 0 && ((0x20 & PORTA) == 0) && pwFlag)
     0069 2106                      1- 2711     	MOVIA	0x06
                                    1- 2712     	BANKSEL	_pwStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 2713     	SUBAR	_pwStep,W
     006C 0C03                      1- 2714     	BTRSC	STATUS,0
                                    1- 2715     	MGOTO	_00320_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2716     	BANKSEL	_offShowTime
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 2717     	MOVR	_offShowTime,W
     0070 0903                      1- 2718     	BTRSS	STATUS,2
                                    1- 2719     	MGOTO	_00320_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2720     	BANKSEL	_PORTA
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 0Err                      1- 2721     	BTRSC	_PORTA,5
                                    1- 2722     	MGOTO	_00320_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2723     	BANKSEL	_pwFlag
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 2724     	MOVR	_pwFlag,W
     0077 0D03                      1- 2725     	BTRSC	STATUS,2
                                    1- 2726     	MGOTO	_00320_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2727     	.line	310, "main.c"; 	showFlag = 1;
     0079 2101                      1- 2728     	MOVIA	0x01
                                    1- 2729     	BANKSEL	_showFlag
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1- 2730     	MOVAR	_showFlag
                                    1- 2731     	.line	311, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2732     	BANKSEL	_shanTime
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 05rr                      1- 2733     	INCR	_shanTime,F
     007E 0D03                      1- 2734     	BTRSC	STATUS,2
     007F 05rr                      1- 2735     	INCR	(_shanTime + 1),F
                                    1- 2736     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2737     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0080 2101                      1- 2738     	MOVIA	0x01
     0081 04rr                      1- 2739     	SUBAR	(_shanTime + 1),W
     0082 0903                      1- 2740     	BTRSS	STATUS,2
                                    1- 2741     	MGOTO	_00387_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084 21F5                      1- 2742     	MOVIA	0xf5
     0085 04rr                      1- 2743     	SUBAR	_shanTime,W
     0086                           1- 2744     _00387_DS_:
     0086 0803                      1- 2745     	BTRSS	STATUS,0
                                    1- 2746     	MGOTO	_00303_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2747     	.line	313, "main.c"; 	shanTime = 0;
                                    1- 2748     	BANKSEL	_shanTime
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 02rr                      1- 2749     	CLRR	_shanTime
     008A 02rr                      1- 2750     	CLRR	(_shanTime + 1)
                                    1- 2751     	.line	314, "main.c"; 	showFlag = 0;
                                    1- 2752     	BANKSEL	_showFlag
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 02rr                      1- 2753     	CLRR	_showFlag
     008D                           1- 2754     _00303_DS_:
                                    1- 2755     	.line	317, "main.c"; 	if(shanTime % 100 < 50)
     008D 2164                      1- 2756     	MOVIA	0x64
     008E 00rr                      1- 2757     	MOVAR	STK02
     008F 2100                      1- 2758     	MOVIA	0x00
     0090 00rr                      1- 2759     	MOVAR	STK01
                                    1- 2760     	BANKSEL	_shanTime
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1- 2761     	MOVR	_shanTime,W
     0093 00rr                      1- 2762     	MOVAR	STK00
     0094 01rr                      1- 2763     	MOVR	(_shanTime + 1),W
                                    1- 2764     	MCALL	__moduint
     0095 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2765     	BANKSEL	r0x1051
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 2766     	MOVAR	r0x1051
     0098 01rr                      1- 2767     	MOVR	STK00,W
                                    1- 2768     	BANKSEL	r0x1050
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 2769     	MOVAR	r0x1050
                                    1- 2770     ;;unsigned compare: left < lit (0x32=50), size=2
     009B 2100                      1- 2771     	MOVIA	0x00
                                    1- 2772     	BANKSEL	r0x1051
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 04rr                      1- 2773     	SUBAR	r0x1051,W
     009E 0903                      1- 2774     	BTRSS	STATUS,2
                                    1- 2775     	MGOTO	_00388_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
     00A0 2132                      1- 2776     	MOVIA	0x32
                                    1- 2777     	BANKSEL	r0x1050
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 2778     	SUBAR	r0x1050,W
     00A3                           1- 2779     _00388_DS_:
     00A3 0C03                      1- 2780     	BTRSC	STATUS,0
                                    1- 2781     	MGOTO	_00305_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2782     	.line	319, "main.c"; 	showFlag = 1;
     00A5 2101                      1- 2783     	MOVIA	0x01
                                    1- 2784     	BANKSEL	_showFlag
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 2785     	MOVAR	_showFlag
                                    1- 2786     	.line	320, "main.c"; 	baiweiNum = 0;
                                    1- 2787     	BANKSEL	_baiweiNum
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 02rr                      1- 2788     	CLRR	_baiweiNum
                                    1- 2789     	.line	321, "main.c"; 	shiweiNum = 0;
                                    1- 2790     	BANKSEL	_shiweiNum
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 02rr                      1- 2791     	CLRR	_shiweiNum
                                    1- 2792     	.line	322, "main.c"; 	geweiNum = pwStep;
                                    1- 2793     	BANKSEL	_pwStep
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 2794     	MOVR	_pwStep,W
                                    1- 2795     	BANKSEL	_geweiNum
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 2796     	MOVAR	_geweiNum
                                    1- 2797     	MGOTO	_00335_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1                           1- 2798     _00305_DS_:
                                    1- 2799     	.line	326, "main.c"; 	showFlag = 0;
                                    1- 2800     	BANKSEL	_showFlag
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 02rr                      1- 2801     	CLRR	_showFlag
                                    1- 2802     	.line	326, "main.c"; 	}
                                    1- 2803     	MGOTO	_00335_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 2804     _00320_DS_:
                                    1- 2805     	.line	329, "main.c"; 	else if(offShowTime > 0)
                                    1- 2806     	BANKSEL	_offShowTime
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 2807     	MOVR	_offShowTime,W
     00B6 0D03                      1- 2808     	BTRSC	STATUS,2
                                    1- 2809     	MGOTO	_00317_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2810     	.line	331, "main.c"; 	showFlag = 1;
     00B8 2101                      1- 2811     	MOVIA	0x01
                                    1- 2812     	BANKSEL	_showFlag
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 2813     	MOVAR	_showFlag
                                    1- 2814     	.line	332, "main.c"; 	baiweiNum = 0;
                                    1- 2815     	BANKSEL	_baiweiNum
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 02rr                      1- 2816     	CLRR	_baiweiNum
                                    1- 2817     	.line	333, "main.c"; 	shiweiNum = 10;
     00BD 210A                      1- 2818     	MOVIA	0x0a
                                    1- 2819     	BANKSEL	_shiweiNum
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 2820     	MOVAR	_shiweiNum
                                    1- 2821     	.line	334, "main.c"; 	geweiNum = 10;
                                    1- 2822     	BANKSEL	_geweiNum
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 2823     	MOVAR	_geweiNum
                                    1- 2824     	.line	334, "main.c"; 	}
                                    1- 2825     	MGOTO	_00335_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3                           1- 2826     _00317_DS_:
                                    1- 2827     	.line	336, "main.c"; 	else if(0x20 & PORTA)
                                    1- 2828     	BANKSEL	_PORTA
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 0Arr                      1- 2829     	BTRSS	_PORTA,5
                                    1- 2830     	MGOTO	_00314_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2831     	.line	342, "main.c"; 	showFlag = 1;
     00C6 2101                      1- 2832     	MOVIA	0x01
                                    1- 2833     	BANKSEL	_showFlag
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 2834     	MOVAR	_showFlag
                                    1- 2835     	.line	346, "main.c"; 	if(fullFlag)
                                    1- 2836     	BANKSEL	_fullFlag
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 2837     	MOVR	_fullFlag,W
     00CB 0D03                      1- 2838     	BTRSC	STATUS,2
                                    1- 2839     	MGOTO	_00311_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2840     	.line	348, "main.c"; 	fullFlag = 1;
     00CD 2101                      1- 2841     	MOVIA	0x01
     00CE 00rr                      1- 2842     	MOVAR	_fullFlag
                                    1- 2843     	.line	350, "main.c"; 	baiweiNum = 1;
                                    1- 2844     	BANKSEL	_baiweiNum
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 00rr                      1- 2845     	MOVAR	_baiweiNum
                                    1- 2846     	.line	351, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2847     	BANKSEL	_geweiNum
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 02rr                      1- 2848     	CLRR	_geweiNum
                                    1- 2849     	BANKSEL	_shiweiNum
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 02rr                      1- 2850     	CLRR	_shiweiNum
                                    1- 2851     	.line	351, "main.c"; 	}
                                    1- 2852     	MGOTO	_00335_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6                           1- 2853     _00311_DS_:
                                    1- 2854     	.line	356, "main.c"; 	if(pwStep == 100)
                                    1- 2855     	BANKSEL	_pwStep
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 01rr                      1- 2856     	MOVR	_pwStep,W
     00D8 2464                      1- 2857     	XORIA	0x64
     00D9 0903                      1- 2858     	BTRSS	STATUS,2
                                    1- 2859     	MGOTO	_00308_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2860     	.line	358, "main.c"; 	fullFlag = 1;
     00DB 2101                      1- 2861     	MOVIA	0x01
                                    1- 2862     	BANKSEL	_fullFlag
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 00rr                      1- 2863     	MOVAR	_fullFlag
                                    1- 2864     	.line	359, "main.c"; 	baiweiNum = 0;
                                    1- 2865     	BANKSEL	_baiweiNum
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 02rr                      1- 2866     	CLRR	_baiweiNum
                                    1- 2867     	.line	360, "main.c"; 	shiweiNum = 9;
     00E0 2109                      1- 2868     	MOVIA	0x09
                                    1- 2869     	BANKSEL	_shiweiNum
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 00rr                      1- 2870     	MOVAR	_shiweiNum
                                    1- 2871     	.line	361, "main.c"; 	geweiNum = 9;
                                    1- 2872     	BANKSEL	_geweiNum
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 00rr                      1- 2873     	MOVAR	_geweiNum
                                    1- 2874     	MGOTO	_00335_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
     00E6                           1- 2875     _00308_DS_:
                                    1- 2876     	.line	365, "main.c"; 	baiweiNum = 0;
                                    1- 2877     	BANKSEL	_baiweiNum
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 02rr                      1- 2878     	CLRR	_baiweiNum
                                    1- 2879     	.line	366, "main.c"; 	shiweiNum = pwStep/10;
     00E8 210A                      1- 2880     	MOVIA	0x0a
     00E9 00rr                      1- 2881     	MOVAR	STK00
                                    1- 2882     	BANKSEL	_pwStep
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 01rr                      1- 2883     	MOVR	_pwStep,W
                                    1- 2884     	MCALL	__divuchar
     00EC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2885     	BANKSEL	_shiweiNum
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 2886     	MOVAR	_shiweiNum
                                    1- 2887     	.line	367, "main.c"; 	geweiNum = pwStep%10;
     00EF 210A                      1- 2888     	MOVIA	0x0a
     00F0 00rr                      1- 2889     	MOVAR	STK00
                                    1- 2890     	BANKSEL	_pwStep
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 2891     	MOVR	_pwStep,W
                                    1- 2892     	MCALL	__moduchar
     00F3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2893     	BANKSEL	_geweiNum
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 00rr                      1- 2894     	MOVAR	_geweiNum
                                    1- 2895     	.line	367, "main.c"; 	}
                                    1- 2896     	MGOTO	_00335_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
     00F7                           1- 2897     _00314_DS_:
                                    1- 2898     	.line	386, "main.c"; 	showFlag = 0;
                                    1- 2899     	BANKSEL	_showFlag
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 02rr                      1- 2900     	CLRR	_showFlag
     00F9                           1- 2901     _00335_DS_:
                                    1- 2902     	.line	390, "main.c"; 	}
                                    1- 2903     	RETURN	
     00F9 0010                      3-   40 m1      ret
                                    1- 2904     ; exit point of _chrgCtr
                                    1- 2907     ;	code size estimation:
                                    1- 2908     ;	 1113+  364 =  1477 instructions ( 3682 byte)
                                    1- 2910     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
