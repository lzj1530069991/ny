
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_Quarter_VDD_Convert
                                    1-  136     	extern	_checkBat
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyCtr
                                    1-  139     	extern	_pwmStop
                                    1-  140     	extern	_pwmInit
                                    1-  141     	extern	_gotoSleep
                                    1-  142     	extern	_initSys
                                    1-  143     	extern	_refreshNub
                                    1-  144     	extern	_checkIRKey
                                    1-  145     	extern	_chrgCtr
                                    1-  146     	extern	_isr
                                    1-  147     	extern	_main
                                    1-  148     	extern	_keyRead
                                    1-  149     	extern	_R_Quarter_VDD_DATA
                                    1-  150     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  151     	extern	_intCount
                                    1-  152     	extern	_IntFlag
                                    1-  153     	extern	_baiweiNum
                                    1-  154     	extern	_shiweiNum
                                    1-  155     	extern	_geweiNum
                                    1-  156     	extern	_showFlag
                                    1-  157     	extern	_irStep
                                    1-  158     	extern	_revCount
                                    1-  159     	extern	_checkCount
                                    1-  160     	extern	_pwmTime
                                    1-  161     	extern	_sendFlag
                                    1-  162     	extern	_workTime
                                    1-  163     	extern	_workStep
                                    1-  164     	extern	_pwFlag
                                    1-  165     	extern	_pwShowTime
                                    1-  166     	extern	_stepShowTime
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_keyCount
                                    1-  169     	extern	_longPressFlag
                                    1-  170     	extern	_sleepTime
                                    1-  171     	extern	_fullFlag
                                    1-  172     	extern	_shanTime
                                    1-  173     	extern	_count1s
                                    1-  174     	extern	_waitTime
                                    1-  175     	extern	_offShowTime
                                    1-  176     	extern	_notRecv
                                    1-  177     	extern	_zhedangFlag
                                    1-  178     	extern	_zhedangTime
                                    1-  179     	extern	_sleepFlag
                                    1-  180     	extern	_powerShi
                                    1-  181     	extern	_powerGe
                                    1-  182     	extern	_count5s
                                    1-  183     	extern	_count250ms
                                    1-  184     	extern	_checkBatTime
                                    1-  185     	extern	_fullTime
                                    1-  186     	extern	_waitBatTime
                                    1-  187     	extern	_startTime
                                    1-  188     	extern	_zhedangCount
                                    1-  190     	extern PSAVE
                                    1-  191     	extern SSAVE
                                    1-  192     	extern WSAVE
                                    1-  193     	extern STK04
                                    1-  194     	extern STK03
                                    1-  195     	extern STK02
                                    1-  196     	extern STK01
                                    1-  197     	extern STK00
                                    1-  199     .segment "uninit", 0x20000040
 20000040                           1-  200     PSAVE:
                                    1-  201     	.res 1
 20000041                           1-  202     SSAVE:
                                    1-  203     	.res 1
 20000042                           1-  204     WSAVE:
                                    1-  205     	.res 1
 20000043                           1-  206     STK04:
                                    1-  207     	.res 1
 20000044                           1-  208     STK03:
                                    1-  209     	.res 1
 20000045                           1-  210     STK02:
                                    1-  211     	.res 1
 20000046                           1-  212     STK01:
                                    1-  213     	.res 1
 20000047                           1-  214     STK00:
                                    1-  215     	.res 1
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     ; global definitions
                                    1-  219     ;--------------------------------------------------------
                                    1-  220     .segment "uninit"
     0000                           1-  221     _R_Quarter_VDD_DATA:
                                    1-  222     	.res	2
                                    1-  225     .segment "uninit"
     0000                           1-  226     _R_Quarter_VDD_DATA_LB:
                                    1-  227     	.res	1
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ; absolute symbol definitions
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; compiler-defined variables
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x104E:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x104F:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x104C:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x104D:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x104B:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1048:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1049:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1047:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1045:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1046:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x103F:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1040:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1041:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1042:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1044:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1043:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1039:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x103A:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x103B:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x103E:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1037:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1038:
                                    1-  301     	.res	1
                                    1-  302     ;--------------------------------------------------------
                                    1-  303     ; initialized data
                                    1-  304     ;--------------------------------------------------------
                                    1-  306     .segment "idata"
     0000                           1-  307     _intCount:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _IntFlag:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _baiweiNum:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _shiweiNum:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _geweiNum:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _showFlag:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _irStep:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _revCount:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _checkCount:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _pwmTime:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _sendFlag:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _workTime:
     0000 0000 0000                 1-  374     	dw	0x00, 0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _workStep:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _pwFlag:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _pwShowTime:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _stepShowTime:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _pwStep:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _keyCount:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _longPressFlag:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _sleepTime:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _fullFlag:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _shanTime:
     0000 0000 0000                 1-  434     	dw	0x00, 0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _count1s:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _waitTime:
     0000 0000 0000                 1-  446     	dw	0x00, 0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _offShowTime:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _notRecv:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _zhedangFlag:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _zhedangTime:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _sleepFlag:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _powerShi:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _powerGe:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _count5s:
     0000 0000 0000                 1-  494     	dw	0x00, 0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _count250ms:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _checkBatTime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _fullTime:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _waitBatTime:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _startTime:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _zhedangCount:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _numArray:
     0000 003F                      1-  536     	dw	0x3f
     0001 0006                      1-  537     	dw	0x06
     0002 005B                      1-  538     	dw	0x5b
     0003 004F                      1-  539     	dw	0x4f
     0004 0066                      1-  540     	dw	0x66
     0005 006D                      1-  541     	dw	0x6d
     0006 007D                      1-  542     	dw	0x7d
     0007 0007                      1-  543     	dw	0x07
     0008 007F                      1-  544     	dw	0x7f
     0009 006F                      1-  545     	dw	0x6f
     000A 0071                      1-  546     	dw	0x71
     000B 0079                      1-  547     	dw	0x79
     000C 0050                      1-  548     	dw	0x50
                                    1-  551     ;--------------------------------------------------------
                                    1-  552     ; overlayable items in internal ram 
                                    1-  553     ;--------------------------------------------------------
                                    1-  554     ;	udata_ovr
                                    1-  555     ;--------------------------------------------------------
                                    1-  556     ; reset vector 
                                    1-  557     ;--------------------------------------------------------
                                    1-  558     ORG	0x0000
     0000 3rrr                      1-  559     	LGOTO	__nyc_ny8_startup
                                    1-  560     ;--------------------------------------------------------
                                    1-  561     ; interrupt and initialization code
                                    1-  562     ;--------------------------------------------------------
                                    1-  563     ORG 0x0008
                                    1-  564     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  566     .segment "code"
     0000                           1-  567     __sdcc_interrupt:
                                    1-  568     ;***
                                    1-  569     ;  pBlock Stats: dbName = I
                                    1-  570     ;***
                                    1-  571     ;2 compiler assigned registers:
                                    1-  572     ;   STK00
                                    1-  573     ;   STK01
                                    1-  574     ;; Starting pCode block
     0000                           1-  575     _isr:
                                    1-  576     ; 0 exit points
                                    1-  577     	.line	82, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  578     	MOVAR	WSAVE
     0001 1503                      1-  579     	SWAPR	STATUS,W
     0002 0283                      1-  580     	CLRR	STATUS
     0003 00rr                      1-  581     	MOVAR	SSAVE
     0004 010A                      1-  582     	MOVR	PCHBUF,W
     0005 028A                      1-  583     	CLRR	PCHBUF
     0006 00rr                      1-  584     	MOVAR	PSAVE
     0007 0104                      1-  585     	MOVR	FSR,W
                                    1-  586     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  587     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  588     	MOVR	STK00,W
                                    1-  589     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  590     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  591     	MOVR	STK01,W
                                    1-  592     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  593     	MOVAR	___sdcc_saved_stk01
                                    1-  594     	.line	84, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  595     	BTRSS	_INTFbits,0
                                    1-  596     	MGOTO	_00120_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  597     	.line	86, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  598     	MOVIA	0x37
     0013 03rr                      1-  599     	ADDAR	_TMR0,F
                                    1-  600     	.line	88, "main.c"; 	if(++intCount >= 50)
                                    1-  601     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  602     	INCR	_intCount,F
                                    1-  603     ;;unsigned compare: left < lit (0x32=50), size=1
     0016 2132                      1-  604     	MOVIA	0x32
     0017 04rr                      1-  605     	SUBAR	_intCount,W
     0018 0803                      1-  606     	BTRSS	STATUS,0
                                    1-  607     	MGOTO	_00120_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  608     	.line	90, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  609     	MOVIA	0x01
                                    1-  610     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  611     	MOVAR	_IntFlag
                                    1-  612     	.line	91, "main.c"; 	intCount = 0;	
                                    1-  613     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  614     	CLRR	_intCount
                                    1-  615     	.line	92, "main.c"; 	if(++count1s > 200)
                                    1-  616     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  617     	INCR	_count1s,F
                                    1-  618     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  619     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0021 21C9                      1-  620     	MOVIA	0xc9
     0022 04rr                      1-  621     	SUBAR	_count1s,W
     0023 0803                      1-  622     	BTRSS	STATUS,0
                                    1-  623     	MGOTO	_00120_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  624     	.line	94, "main.c"; 	count1s = 0;
     0025 02rr                      1-  625     	CLRR	_count1s
                                    1-  626     	.line	95, "main.c"; 	if(stepShowTime > 0)
                                    1-  627     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  628     	MOVR	_stepShowTime,W
     0028 0D03                      1-  629     	BTRSC	STATUS,2
                                    1-  630     	MGOTO	_00113_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  631     	.line	96, "main.c"; 	stepShowTime--;
     002A 06rr                      1-  632     	DECR	_stepShowTime,F
                                    1-  633     	MGOTO	_00120_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  634     _00113_DS_:
                                    1-  635     	.line	97, "main.c"; 	else if(pwShowTime > 0)
                                    1-  636     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  637     	MOVR	_pwShowTime,W
     002E 0D03                      1-  638     	BTRSC	STATUS,2
                                    1-  639     	MGOTO	_00110_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  640     	.line	99, "main.c"; 	pwShowTime--;
     0030 06rr                      1-  641     	DECR	_pwShowTime,F
                                    1-  642     	MGOTO	_00120_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  643     _00110_DS_:
                                    1-  644     	.line	101, "main.c"; 	else if(offShowTime > 0)
                                    1-  645     	BANKSEL	_offShowTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  646     	MOVR	_offShowTime,W
     0034 0D03                      1-  647     	BTRSC	STATUS,2
                                    1-  648     	MGOTO	_00120_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  649     	.line	103, "main.c"; 	--offShowTime;
     0036 17rr                      1-  650     	DECRSZ	_offShowTime,F
                                    1-  651     	.line	104, "main.c"; 	if(offShowTime == 0)
                                    1-  652     	MGOTO	_00120_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  653     	.line	105, "main.c"; 	sleepFlag = 1;
     0038 2101                      1-  654     	MOVIA	0x01
                                    1-  655     	BANKSEL	_sleepFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1-  656     	MOVAR	_sleepFlag
     003B                           1-  657     _00120_DS_:
                                    1-  658     	.line	122, "main.c"; 	if(INTFbits.PABIF)
     003B 08rr                      1-  659     	BTRSS	_INTFbits,1
                                    1-  660     	MGOTO	_00122_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  661     	.line	124, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003D 21FD                      1-  662     	MOVIA	0xfd
     003E 00rr                      1-  663     	MOVAR	_INTF
     003F                           1-  664     _00122_DS_:
                                    1-  665     	.line	128, "main.c"; 	INTF = 0;
     003F 02rr                      1-  666     	CLRR	_INTF
                                    1-  667     	.line	130, "main.c"; 	}
                                    1-  668     	BANKSEL	___sdcc_saved_stk01
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1-  669     	MOVR	___sdcc_saved_stk01,W
     0042 00rr                      1-  670     	MOVAR	STK01
                                    1-  671     	BANKSEL	___sdcc_saved_stk00
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  672     	MOVR	___sdcc_saved_stk00,W
     0045 00rr                      1-  673     	MOVAR	STK00
                                    1-  674     	BANKSEL	___sdcc_saved_fsr
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  675     	MOVR	___sdcc_saved_fsr,W
     0048 0084                      1-  676     	MOVAR	FSR
     0049 01rr                      1-  677     	MOVR	PSAVE,W
     004A 008A                      1-  678     	MOVAR	PCHBUF
     004B 0283                      1-  679     	CLRR	STATUS
     004C 15rr                      1-  680     	SWAPR	SSAVE,W
     004D 0083                      1-  681     	MOVAR	STATUS
     004E 15rr                      1-  682     	SWAPR	WSAVE,F
     004F 15rr                      1-  683     	SWAPR	WSAVE,W
     0050                           1-  684     END_OF_INTERRUPT:
     0050 0011                      1-  685     	RETIE	
                                    1-  687     ;--------------------------------------------------------
                                    1-  688     ; code
                                    1-  689     ;--------------------------------------------------------
                                    1-  690     ;***
                                    1-  691     ;  pBlock Stats: dbName = M
                                    1-  692     ;***
                                    1-  693     ;has an exit
                                    1-  694     ;functions called:
                                    1-  695     ;   _initSys
                                    1-  696     ;   _initAD
                                    1-  697     ;   _refreshNub
                                    1-  698     ;   _refreshNub
                                    1-  699     ;   _setInput
                                    1-  700     ;   __divuchar
                                    1-  701     ;   __moduchar
                                    1-  702     ;   _delay
                                    1-  703     ;   _checkIRKey
                                    1-  704     ;   _keyCtr
                                    1-  705     ;   _checkBat
                                    1-  706     ;   _chrgCtr
                                    1-  707     ;   _gotoSleep
                                    1-  708     ;   _gotoSleep
                                    1-  709     ;   _delay
                                    1-  710     ;   _initSys
                                    1-  711     ;   _initAD
                                    1-  712     ;   _refreshNub
                                    1-  713     ;   _refreshNub
                                    1-  714     ;   _setInput
                                    1-  715     ;   __divuchar
                                    1-  716     ;   __moduchar
                                    1-  717     ;   _delay
                                    1-  718     ;   _checkIRKey
                                    1-  719     ;   _keyCtr
                                    1-  720     ;   _checkBat
                                    1-  721     ;   _chrgCtr
                                    1-  722     ;   _gotoSleep
                                    1-  723     ;   _gotoSleep
                                    1-  724     ;   _delay
                                    1-  725     ;3 compiler assigned registers:
                                    1-  726     ;   STK00
                                    1-  727     ;   r0x104E
                                    1-  728     ;   r0x104F
                                    1-  729     ;; Starting pCode block
                                    1-  730     .segment "code"; module=main, function=_main
     0000                           1-  732     _main:
                                    1-  733     ; 2 exit points
                                    1-  734     	.line	134, "main.c"; 	initSys();
                                    1-  735     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  736     	.line	135, "main.c"; 	initAD();
                                    1-  737     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  738     	.line	136, "main.c"; 	startTime = 200;
     0002 21C8                      1-  739     	MOVIA	0xc8
                                    1-  740     	BANKSEL	_startTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  741     	MOVAR	_startTime
     0005                           1-  742     _00169_DS_:
                                    1-  743     	.line	140, "main.c"; 	CLRWDT();							// Clear WatchDog
     0005 0002                      1-  744     	clrwdt
                                    1-  745     	.line	141, "main.c"; 	if(showFlag)
                                    1-  746     	BANKSEL	_showFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  747     	MOVR	_showFlag,W
     0008 0D03                      1-  748     	BTRSC	STATUS,2
                                    1-  749     	MGOTO	_00135_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  750     	.line	142, "main.c"; 	refreshNub();
                                    1-  751     	MCALL	_refreshNub
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  752     	MGOTO	_00136_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1-  753     _00135_DS_:
                                    1-  754     	.line	145, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  755     	BANKSEL	_keyCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  756     	MOVR	_keyCount,W
     000E 0D03                      1-  757     	BTRSC	STATUS,2
                                    1-  758     	MGOTO	_00131_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  759     	BANKSEL	_pwFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  760     	MOVR	_pwFlag,W
     0012 2401                      1-  761     	XORIA	0x01
     0013 0903                      1-  762     	BTRSS	STATUS,2
                                    1-  763     	MGOTO	_00131_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  764     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  765     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  766     	.line	147, "main.c"; 	if(pwStep > 99)
     0015 2164                      1-  767     	MOVIA	0x64
                                    1-  768     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1-  769     	SUBAR	_pwStep,W
     0018 0803                      1-  770     	BTRSS	STATUS,0
                                    1-  771     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  772     	.line	149, "main.c"; 	baiweiNum = 1;
     001A 2101                      1-  773     	MOVIA	0x01
                                    1-  774     	BANKSEL	_baiweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  775     	MOVAR	_baiweiNum
                                    1-  776     	.line	150, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  777     	BANKSEL	_geweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  778     	CLRR	_geweiNum
                                    1-  779     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1-  780     	CLRR	_shiweiNum
                                    1-  781     	MGOTO	_00129_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1-  782     _00128_DS_:
                                    1-  783     	.line	154, "main.c"; 	baiweiNum = 0;
                                    1-  784     	BANKSEL	_baiweiNum
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  785     	CLRR	_baiweiNum
                                    1-  786     	.line	155, "main.c"; 	shiweiNum = powerShi;
                                    1-  787     	BANKSEL	_powerShi
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  788     	MOVR	_powerShi,W
                                    1-  789     	BANKSEL	_shiweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  790     	MOVAR	_shiweiNum
                                    1-  791     	.line	156, "main.c"; 	geweiNum = powerGe;
                                    1-  792     	BANKSEL	_powerGe
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  793     	MOVR	_powerGe,W
                                    1-  794     	BANKSEL	_geweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  795     	MOVAR	_geweiNum
     002C                           1-  796     _00129_DS_:
                                    1-  797     	.line	158, "main.c"; 	refreshNub();
                                    1-  798     	MCALL	_refreshNub
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  799     	MGOTO	_00136_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1-  800     _00131_DS_:
                                    1-  801     	.line	162, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  802     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  803     	CLRR	_geweiNum
                                    1-  804     	BANKSEL	_shiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  805     	CLRR	_shiweiNum
                                    1-  806     	BANKSEL	_baiweiNum
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 02rr                      1-  807     	CLRR	_baiweiNum
                                    1-  808     	.line	163, "main.c"; 	setInput();
                                    1-  809     	MCALL	_setInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
     0035                           1-  810     _00136_DS_:
                                    1-  811     	.line	166, "main.c"; 	if(!IntFlag)
                                    1-  812     	BANKSEL	_IntFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  813     	MOVR	_IntFlag,W
     0037 0D03                      1-  814     	BTRSC	STATUS,2
                                    1-  815     	MGOTO	_00169_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  816     	.line	168, "main.c"; 	IntFlag = 0;
     0039 02rr                      1-  817     	CLRR	_IntFlag
                                    1-  818     	.line	169, "main.c"; 	powerShi = pwStep/10;
     003A 210A                      1-  819     	MOVIA	0x0a
     003B 00rr                      1-  820     	MOVAR	STK00
                                    1-  821     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  822     	MOVR	_pwStep,W
                                    1-  823     	MCALL	__divuchar
     003E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  824     	BANKSEL	_powerShi
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1-  825     	MOVAR	_powerShi
                                    1-  826     	.line	170, "main.c"; 	powerGe = pwStep%10;
     0041 210A                      1-  827     	MOVIA	0x0a
     0042 00rr                      1-  828     	MOVAR	STK00
                                    1-  829     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  830     	MOVR	_pwStep,W
                                    1-  831     	MCALL	__moduchar
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  832     	BANKSEL	_powerGe
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1-  833     	MOVAR	_powerGe
                                    1-  834     	.line	172, "main.c"; 	if(waitTime > 0)
                                    1-  835     	BANKSEL	_waitTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  836     	MOVR	_waitTime,W
     004A 11rr                      1-  837     	IORAR	(_waitTime + 1),W
     004B 0D03                      1-  838     	BTRSC	STATUS,2
                                    1-  839     	MGOTO	_00150_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  840     	.line	173, "main.c"; 	waitTime--;
     004D 21FF                      1-  841     	MOVIA	0xff
     004E 03rr                      1-  842     	ADDAR	_waitTime,F
     004F 0803                      1-  843     	BTRSS	STATUS,0
     0050 06rr                      1-  844     	DECR	(_waitTime + 1),F
                                    1-  845     	MGOTO	_00151_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  846     _00150_DS_:
                                    1-  847     	.line	174, "main.c"; 	else if(pwFlag)
                                    1-  848     	BANKSEL	_pwFlag
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  849     	MOVR	_pwFlag,W
     0054 0D03                      1-  850     	BTRSC	STATUS,2
                                    1-  851     	MGOTO	_00147_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  852     	.line	177, "main.c"; 	if(++count250ms >= 60 || revCount || irStep)
                                    1-  853     	BANKSEL	_count250ms
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1-  854     	INCR	_count250ms,F
                                    1-  855     ;;unsigned compare: left < lit (0x3C=60), size=1
     0058 213C                      1-  856     	MOVIA	0x3c
     0059 04rr                      1-  857     	SUBAR	_count250ms,W
     005A 0C03                      1-  858     	BTRSC	STATUS,0
                                    1-  859     	MGOTO	_00142_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  860     	BANKSEL	_revCount
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1-  861     	MOVR	_revCount,W
     005E 0903                      1-  862     	BTRSS	STATUS,2
                                    1-  863     	MGOTO	_00142_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  864     	BANKSEL	_irStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  865     	MOVR	_irStep,W
     0062 0D03                      1-  866     	BTRSC	STATUS,2
                                    1-  867     	MGOTO	_00151_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064                           1-  868     _00142_DS_:
                                    1-  869     	.line	186, "main.c"; 	if(sendFlag)
                                    1-  870     	BANKSEL	_sendFlag
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  871     	MOVR	_sendFlag,W
     0066 0D03                      1-  872     	BTRSC	STATUS,2
                                    1-  873     	MGOTO	_00140_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  874     	.line	188, "main.c"; 	PORTBbits.PB1 = 1;
     0068 18rr                      1-  875     	BSR	_PORTBbits,1
                                    1-  876     	.line	189, "main.c"; 	delay(20);
     0069 2114                      1-  877     	MOVIA	0x14
                                    1-  878     	MCALL	_delay
     006A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  879     	.line	190, "main.c"; 	checkIRKey();
                                    1-  880     	MCALL	_checkIRKey
     006B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  881     	.line	191, "main.c"; 	count250ms = 0;
                                    1-  882     	BANKSEL	_count250ms
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 02rr                      1-  883     	CLRR	_count250ms
                                    1-  884     	.line	192, "main.c"; 	PORTA &= 0xBF;
                                    1-  885     	BANKSEL	_PORTA
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 1Frr                      1-  886     	BCR	_PORTA,6
                                    1-  887     	.line	193, "main.c"; 	PORTBbits.PB1 = 0;
     0070 1Crr                      1-  888     	BCR	_PORTBbits,1
                                    1-  889     	.line	194, "main.c"; 	sendFlag = 0;
                                    1-  890     	BANKSEL	_sendFlag
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1-  891     	CLRR	_sendFlag
                                    1-  892     	MGOTO	_00151_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074                           1-  893     _00140_DS_:
                                    1-  894     	.line	198, "main.c"; 	PORTA |= 0x40;
                                    1-  895     	BANKSEL	_PORTA
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 1Brr                      1-  896     	BSR	_PORTA,6
                                    1-  897     	.line	199, "main.c"; 	sendFlag = 1;
     0076 2101                      1-  898     	MOVIA	0x01
                                    1-  899     	BANKSEL	_sendFlag
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1-  900     	MOVAR	_sendFlag
                                    1-  901     	MGOTO	_00151_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
     007A                           1-  902     _00147_DS_:
                                    1-  903     	.line	210, "main.c"; 	PORTA &= 0xBF;
                                    1-  904     	BANKSEL	_PORTA
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 1Frr                      1-  905     	BCR	_PORTA,6
                                    1-  906     	.line	211, "main.c"; 	sendFlag = 0;
                                    1-  907     	BANKSEL	_sendFlag
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 02rr                      1-  908     	CLRR	_sendFlag
     007E                           1-  909     _00151_DS_:
                                    1-  910     	.line	213, "main.c"; 	keyCtr();
                                    1-  911     	MCALL	_keyCtr
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  912     	.line	214, "main.c"; 	if(++checkBatTime >= 20)
                                    1-  913     	BANKSEL	_checkBatTime
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 05rr                      1-  914     	INCR	_checkBatTime,F
                                    1-  915     ;;unsigned compare: left < lit (0x14=20), size=1
     0081 2114                      1-  916     	MOVIA	0x14
     0082 04rr                      1-  917     	SUBAR	_checkBatTime,W
     0083 0803                      1-  918     	BTRSS	STATUS,0
                                    1-  919     	MGOTO	_00155_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  920     	.line	216, "main.c"; 	checkBatTime = 0;
     0085 02rr                      1-  921     	CLRR	_checkBatTime
                                    1-  922     	.line	217, "main.c"; 	if(workTime == 0)
                                    1-  923     	BANKSEL	_workTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1-  924     	MOVR	_workTime,W
     0088 11rr                      1-  925     	IORAR	(_workTime + 1),W
     0089 0D03                      1-  926     	BTRSC	STATUS,2
                                    1-  927     	.line	218, "main.c"; 	checkBat();
                                    1-  928     	MCALL	_checkBat
     008A 2rrr                      3-   66 m1      LCALL rom_address
     008B                           1-  929     _00155_DS_:
                                    1-  930     	.line	220, "main.c"; 	chrgCtr();
                                    1-  931     	MCALL	_chrgCtr
     008B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  932     	.line	222, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0 && startTime == 0)
                                    1-  933     	BANKSEL	_PORTA
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1-  934     	MOVR	_PORTA,W
                                    1-  935     	BANKSEL	r0x104E
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1-  936     	MOVAR	r0x104E
                                    1-  937     	BANKSEL	r0x104F
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 02rr                      1-  938     	CLRR	r0x104F
                                    1-  939     	BANKSEL	r0x104E
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 07rr                      1-  940     	COMR	r0x104E,W
     0094 00rr                      1-  941     	MOVAR	r0x104E
                                    1-  942     	BANKSEL	r0x104F
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 07rr                      1-  943     	COMR	r0x104F,W
     0097 00rr                      1-  944     	MOVAR	r0x104F
                                    1-  945     	BANKSEL	r0x104E
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 0Arr                      1-  946     	BTRSS	r0x104E,5
                                    1-  947     	MGOTO	_00159_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  948     	BANKSEL	_keyCount
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1-  949     	MOVR	_keyCount,W
     009D 0903                      1-  950     	BTRSS	STATUS,2
                                    1-  951     	MGOTO	_00159_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  952     	BANKSEL	_pwFlag
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1-  953     	MOVR	_pwFlag,W
     00A1 0903                      1-  954     	BTRSS	STATUS,2
                                    1-  955     	MGOTO	_00159_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  956     	BANKSEL	_stepShowTime
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 01rr                      1-  957     	MOVR	_stepShowTime,W
     00A5 0903                      1-  958     	BTRSS	STATUS,2
                                    1-  959     	MGOTO	_00159_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  960     	BANKSEL	_pwShowTime
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 01rr                      1-  961     	MOVR	_pwShowTime,W
     00A9 0903                      1-  962     	BTRSS	STATUS,2
                                    1-  963     	MGOTO	_00159_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  964     	BANKSEL	_offShowTime
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 01rr                      1-  965     	MOVR	_offShowTime,W
     00AD 0903                      1-  966     	BTRSS	STATUS,2
                                    1-  967     	MGOTO	_00159_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  968     	BANKSEL	_startTime
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 01rr                      1-  969     	MOVR	_startTime,W
     00B1 0903                      1-  970     	BTRSS	STATUS,2
                                    1-  971     	MGOTO	_00159_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  972     	.line	225, "main.c"; 	if(++sleepTime > 100)
                                    1-  973     	BANKSEL	_sleepTime
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 05rr                      1-  974     	INCR	_sleepTime,F
                                    1-  975     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  976     ;;unsigned compare: left >= lit (0x65=101), size=1
     00B5 2165                      1-  977     	MOVIA	0x65
     00B6 04rr                      1-  978     	SUBAR	_sleepTime,W
     00B7 0C03                      1-  979     	BTRSC	STATUS,0
                                    1-  980     	.line	226, "main.c"; 	gotoSleep();
                                    1-  981     	MCALL	_gotoSleep
     00B8 2rrr                      3-   66 m1      LCALL rom_address
     00B9                           1-  982     _00159_DS_:
                                    1-  983     	.line	228, "main.c"; 	if(sleepFlag)
                                    1-  984     	BANKSEL	_sleepFlag
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1-  985     	MOVR	_sleepFlag,W
     00BB 0903                      1-  986     	BTRSS	STATUS,2
                                    1-  987     	.line	230, "main.c"; 	gotoSleep();
                                    1-  988     	MCALL	_gotoSleep
     00BC 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  989     	.line	232, "main.c"; 	delay(100);
     00BD 2164                      1-  990     	MOVIA	0x64
                                    1-  991     	MCALL	_delay
     00BE 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  992     	.line	232, "main.c"; 	//    	if(getbit(PORTB, 3) == 0)
                                    1-  993     	MGOTO	_00169_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  994     	.line	254, "main.c"; 	}
                                    1-  995     	RETURN	
     00C0 0010                      3-   40 m1      ret
                                    1-  996     ; exit point of _main
                                    1-  998     ;***
                                    1-  999     ;  pBlock Stats: dbName = C
                                    1- 1000     ;***
                                    1- 1001     ;has an exit
                                    1- 1002     ;2 compiler assigned registers:
                                    1- 1003     ;   r0x1037
                                    1- 1004     ;   r0x1038
                                    1- 1005     ;; Starting pCode block
                                    1- 1006     .segment "code"; module=main, function=_delay
                                    1- 1008     ;local variable name mapping:
     0000                           1- 1011     _delay:
                                    1- 1012     ; 2 exit points
                                    1- 1013     	.line	814, "main.c"; 	void delay(u8t count)
                                    1- 1014     	BANKSEL	r0x1037
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1015     	MOVAR	r0x1037
                                    1- 1016     	.line	817, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1- 1017     	MOVIA	0x01
                                    1- 1018     	BANKSEL	r0x1038
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1019     	MOVAR	r0x1038
     0005                           1- 1020     _00536_DS_:
                                    1- 1021     	BANKSEL	r0x1038
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1022     	MOVR	r0x1038,W
                                    1- 1023     	BANKSEL	r0x1037
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1024     	SUBAR	r0x1037,W
     0009 0803                      1- 1025     	BTRSS	STATUS,0
                                    1- 1026     	MGOTO	_00538_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1027     	BANKSEL	r0x1038
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1028     	INCR	r0x1038,F
                                    1- 1029     	MGOTO	_00536_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1030     _00538_DS_:
                                    1- 1031     	.line	819, "main.c"; 	}
                                    1- 1032     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1033     ; exit point of _delay
                                    1- 1035     ;***
                                    1- 1036     ;  pBlock Stats: dbName = C
                                    1- 1037     ;***
                                    1- 1038     ;has an exit
                                    1- 1039     ;; Starting pCode block
                                    1- 1040     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1042     _F_wait_eoc:
                                    1- 1043     ; 2 exit points
     0000                           1- 1044     _00529_DS_:
                                    1- 1045     	.line	810, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1046     	BTRSS	_ADMDbits,5
                                    1- 1047     	MGOTO	_00529_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1048     	.line	812, "main.c"; 	}
                                    1- 1049     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1050     ; exit point of _F_wait_eoc
                                    1- 1052     ;***
                                    1- 1053     ;  pBlock Stats: dbName = C
                                    1- 1054     ;***
                                    1- 1055     ;has an exit
                                    1- 1056     ;functions called:
                                    1- 1057     ;   _F_wait_eoc
                                    1- 1058     ;   _F_wait_eoc
                                    1- 1059     ;6 compiler assigned registers:
                                    1- 1060     ;   r0x1039
                                    1- 1061     ;   r0x103A
                                    1- 1062     ;   r0x103B
                                    1- 1063     ;   r0x103C
                                    1- 1064     ;   r0x103D
                                    1- 1065     ;   r0x103E
                                    1- 1066     ;; Starting pCode block
                                    1- 1067     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1069     ;local variable name mapping:
     0000                           1- 1072     _F_Quarter_VDD_Convert:
                                    1- 1073     ; 2 exit points
                                    1- 1074     	.line	795, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1075     	BANKSEL	r0x1039
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1076     	MOVAR	r0x1039
                                    1- 1077     	.line	798, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1- 1078     	MOVIA	0x9b
     0003 00rr                      1- 1079     	MOVAR	_ADMD
                                    1- 1080     	.line	799, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1081     	MOVIA	0x01
                                    1- 1082     	BANKSEL	r0x103A
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1083     	MOVAR	r0x103A
     0007                           1- 1084     _00522_DS_:
                                    1- 1085     	BANKSEL	r0x103A
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1086     	MOVR	r0x103A,W
                                    1- 1087     	BANKSEL	r0x1039
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1088     	SUBAR	r0x1039,W
     000B 0803                      1- 1089     	BTRSS	STATUS,0
                                    1- 1090     	MGOTO	_00524_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1091     	.line	801, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1092     	BSR	_ADMDbits,6
                                    1- 1093     	.line	802, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1094     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1095     	.line	803, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1096     	MOVIA	0x0f
     0010 10rr                      1- 1097     	ANDAR	_ADR,W
                                    1- 1098     ;;3	MOVAR	r0x103B
                                    1- 1099     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1100     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1101     	.line	804, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1102     	MOVR	_ADD,W
                                    1- 1103     	BANKSEL	r0x103B
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1104     	MOVAR	r0x103B
                                    1- 1105     ;;1	CLRR	r0x103C
                                    1- 1106     ;;101	MOVR	r0x103B,W
                                    1- 1107     ;;99	MOVAR	r0x103D
     0016 2100                      1- 1108     	MOVIA	0x00
                                    1- 1109     	BANKSEL	r0x103E
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1110     	MOVAR	r0x103E
                                    1- 1111     ;;100	MOVR	r0x103D,W
                                    1- 1112     	BANKSEL	r0x103B
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1113     	MOVR	r0x103B,W
                                    1- 1114     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1115     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1116     	BANKSEL	r0x103E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1117     	MOVR	r0x103E,W
     001F 0C03                      1- 1118     	BTRSC	STATUS,0
     0020 05rr                      1- 1119     	INCR	r0x103E,W
     0021 0D03                      1- 1120     	BTRSC	STATUS,2
                                    1- 1121     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1122     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1123     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1124     _00001_DS_:
                                    1- 1125     	.line	799, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1126     	BANKSEL	r0x103A
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1127     	INCR	r0x103A,F
                                    1- 1128     	MGOTO	_00522_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1129     _00524_DS_:
                                    1- 1130     	.line	806, "main.c"; 	}
                                    1- 1131     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1132     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1134     ;***
                                    1- 1135     ;  pBlock Stats: dbName = C
                                    1- 1136     ;***
                                    1- 1137     ;has an exit
                                    1- 1138     ;functions called:
                                    1- 1139     ;   _F_Quarter_VDD_Convert
                                    1- 1140     ;   _F_Quarter_VDD_Convert
                                    1- 1141     ;6 compiler assigned registers:
                                    1- 1142     ;   r0x103F
                                    1- 1143     ;   r0x1040
                                    1- 1144     ;   r0x1041
                                    1- 1145     ;   r0x1042
                                    1- 1146     ;   r0x1043
                                    1- 1147     ;   r0x1044
                                    1- 1148     ;; Starting pCode block
                                    1- 1149     .segment "code"; module=main, function=_checkBat
                                    1- 1151     ;local variable name mapping:
     0000                           1- 1154     _checkBat:
                                    1- 1155     ; 2 exit points
                                    1- 1156     	.line	675, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1157     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1158     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1159     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1160     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1161     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1162     	.line	676, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1163     	MOVIA	0x08
                                    1- 1164     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1165     	.line	677, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1166     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1167     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1168     	ANDIA	0xf0
     000A 00rr                      1- 1169     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1170     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1171     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1172     	ANDIA	0x0f
     000E 11rr                      1- 1173     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1174     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1175     	.line	678, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1176     	MOVIA	0xf0
                                    1- 1177     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1178     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1179     	.line	679, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1180     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1181     	BANKSEL	r0x1041
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1182     	MOVAR	r0x1041
                                    1- 1183     	BANKSEL	r0x103F
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1184     	MOVAR	r0x103F
                                    1- 1185     	BANKSEL	r0x1040
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1186     	CLRR	r0x1040
                                    1- 1187     ;;104	MOVR	r0x103F,W
     001A 2100                      1- 1188     	MOVIA	0x00
                                    1- 1189     	BANKSEL	r0x1042
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1190     	MOVAR	r0x1042
                                    1- 1191     	BANKSEL	r0x1041
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1192     	MOVR	r0x1041,W
                                    1- 1193     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1194     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1195     	BANKSEL	r0x1042
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1196     	MOVR	r0x1042,W
     0023 0C03                      1- 1197     	BTRSC	STATUS,0
     0024 05rr                      1- 1198     	INCR	r0x1042,W
     0025 0D03                      1- 1199     	BTRSC	STATUS,2
                                    1- 1200     	MGOTO	_00002_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1201     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1202     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1203     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1204     _00002_DS_:
                                    1- 1205     	.line	680, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1206     	BCR	STATUS,0
                                    1- 1207     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1208     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1209     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1210     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1211     	BCR	STATUS,0
     002E 13rr                      1- 1212     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1213     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1214     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1215     	BCR	STATUS,0
     0031 13rr                      1- 1216     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1217     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1218     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1219     ;;unsigned compare: left >= lit (0x835=2101), size=2
                                    1- 1220     	.line	681, "main.c"; 	if(R_Quarter_VDD_DATA > 2100)
     0033 2108                      1- 1221     	MOVIA	0x08
     0034 04rr                      1- 1222     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1223     	BTRSS	STATUS,2
                                    1- 1224     	MGOTO	_00497_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 2135                      1- 1225     	MOVIA	0x35
     0038 04rr                      1- 1226     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1227     _00497_DS_:
     0039 0803                      1- 1228     	BTRSS	STATUS,0
                                    1- 1229     	MGOTO	_00427_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1230     	.line	683, "main.c"; 	if(++fullTime > 200)
                                    1- 1231     	BANKSEL	_fullTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 1232     	INCR	_fullTime,F
                                    1- 1233     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1234     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003D 21C9                      1- 1235     	MOVIA	0xc9
     003E 04rr                      1- 1236     	SUBAR	_fullTime,W
     003F 0803                      1- 1237     	BTRSS	STATUS,0
                                    1- 1238     	MGOTO	_00429_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1239     	.line	685, "main.c"; 	fullFlag = 1;
     0041 2101                      1- 1240     	MOVIA	0x01
                                    1- 1241     	BANKSEL	_fullFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1242     	MOVAR	_fullFlag
                                    1- 1243     	.line	686, "main.c"; 	pwStep = 100;
     0044 2164                      1- 1244     	MOVIA	0x64
                                    1- 1245     	BANKSEL	_pwStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1246     	MOVAR	_pwStep
                                    1- 1247     	MGOTO	_00429_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1248     ;;unsigned compare: left < lit (0x60E=1550), size=2
     0048                           1- 1249     _00427_DS_:
                                    1- 1250     	.line	689, "main.c"; 	else if(R_Quarter_VDD_DATA < 1550)
     0048 2106                      1- 1251     	MOVIA	0x06
                                    1- 1252     	BANKSEL	_R_Quarter_VDD_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1253     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     004B 0903                      1- 1254     	BTRSS	STATUS,2
                                    1- 1255     	MGOTO	_00499_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 210E                      1- 1256     	MOVIA	0x0e
     004E 04rr                      1- 1257     	SUBAR	_R_Quarter_VDD_DATA,W
     004F                           1- 1258     _00499_DS_:
     004F 0C03                      1- 1259     	BTRSC	STATUS,0
                                    1- 1260     	MGOTO	_00424_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1261     	.line	691, "main.c"; 	pwStep = 0;
                                    1- 1262     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 1263     	CLRR	_pwStep
                                    1- 1264     	.line	692, "main.c"; 	fullTime = 0;
                                    1- 1265     	BANKSEL	_fullTime
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1266     	CLRR	_fullTime
                                    1- 1267     	.line	693, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 1268     	BANKSEL	_PORTA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 0Err                      1- 1269     	BTRSC	_PORTA,5
                                    1- 1270     	MGOTO	_00429_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1271     	.line	695, "main.c"; 	pwFlag = 0;		//关机
                                    1- 1272     	BANKSEL	_pwFlag
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1273     	CLRR	_pwFlag
                                    1- 1274     	.line	696, "main.c"; 	workStep = 0;
                                    1- 1275     	BANKSEL	_workStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1- 1276     	CLRR	_workStep
                                    1- 1277     	.line	697, "main.c"; 	pwShowTime = 0;
                                    1- 1278     	BANKSEL	_pwShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 1279     	CLRR	_pwShowTime
                                    1- 1280     	.line	698, "main.c"; 	stepShowTime = 0;
                                    1- 1281     	BANKSEL	_stepShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1282     	CLRR	_stepShowTime
                                    1- 1283     	.line	699, "main.c"; 	offShowTime = 0;
                                    1- 1284     	BANKSEL	_offShowTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1285     	CLRR	_offShowTime
                                    1- 1286     	MGOTO	_00429_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 1287     _00424_DS_:
                                    1- 1288     	.line	705, "main.c"; 	fullTime = 0;
                                    1- 1289     	BANKSEL	_fullTime
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 02rr                      1- 1290     	CLRR	_fullTime
                                    1- 1291     ;;unsigned compare: left < lit (0x802=2050), size=2
                                    1- 1292     	.line	706, "main.c"; 	if(R_Quarter_VDD_DATA >= 2050)
     0065 2108                      1- 1293     	MOVIA	0x08
                                    1- 1294     	BANKSEL	_R_Quarter_VDD_DATA
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 1295     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0068 0903                      1- 1296     	BTRSS	STATUS,2
                                    1- 1297     	MGOTO	_00500_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 2102                      1- 1298     	MOVIA	0x02
     006B 04rr                      1- 1299     	SUBAR	_R_Quarter_VDD_DATA,W
     006C                           1- 1300     _00500_DS_:
     006C 0803                      1- 1301     	BTRSS	STATUS,0
                                    1- 1302     	MGOTO	_00386_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1303     	.line	708, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 2050) + 75;
     006E 2149                      1- 1304     	MOVIA	0x49
                                    1- 1305     	BANKSEL	_R_Quarter_VDD_DATA
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 03rr                      1- 1306     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1307     	BANKSEL	r0x103F
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1308     	MOVAR	r0x103F
     0073 21F8                      1- 1309     	MOVIA	0xf8
                                    1- 1310     	BANKSEL	r0x1040
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1311     	MOVAR	r0x1040
                                    1- 1312     	BANKSEL	_R_Quarter_VDD_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 1313     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0078 0C03                      1- 1314     	BTRSC	STATUS,0
     0079 05rr                      1- 1315     	INCR	(_R_Quarter_VDD_DATA + 1),W
     007A 0D03                      1- 1316     	BTRSC	STATUS,2
                                    1- 1317     	MGOTO	_00003_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1318     	BANKSEL	r0x1040
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 03rr                      1- 1319     	ADDAR	r0x1040,F
     007E                           1- 1320     _00003_DS_:
                                    1- 1321     	MGOTO	_00387_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1322     ;;unsigned compare: left < lit (0x7CE=1998), size=2
     007F                           1- 1323     _00386_DS_:
                                    1- 1324     	.line	710, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1998)
     007F 2107                      1- 1325     	MOVIA	0x07
                                    1- 1326     	BANKSEL	_R_Quarter_VDD_DATA
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1- 1327     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0082 0903                      1- 1328     	BTRSS	STATUS,2
                                    1- 1329     	MGOTO	_00501_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084 21CE                      1- 1330     	MOVIA	0xce
     0085 04rr                      1- 1331     	SUBAR	_R_Quarter_VDD_DATA,W
     0086                           1- 1332     _00501_DS_:
     0086 0803                      1- 1333     	BTRSS	STATUS,0
                                    1- 1334     	MGOTO	_00383_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1335     	.line	712, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1998)/2 + 49;
     0088 2132                      1- 1336     	MOVIA	0x32
                                    1- 1337     	BANKSEL	_R_Quarter_VDD_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 03rr                      1- 1338     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1339     	BANKSEL	r0x1041
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1340     	MOVAR	r0x1041
     008D 21F8                      1- 1341     	MOVIA	0xf8
                                    1- 1342     	BANKSEL	r0x1042
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1343     	MOVAR	r0x1042
                                    1- 1344     	BANKSEL	_R_Quarter_VDD_DATA
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 01rr                      1- 1345     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0092 0C03                      1- 1346     	BTRSC	STATUS,0
     0093 05rr                      1- 1347     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0094 0D03                      1- 1348     	BTRSC	STATUS,2
                                    1- 1349     	MGOTO	_00004_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1350     	BANKSEL	r0x1042
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 03rr                      1- 1351     	ADDAR	r0x1042,F
                                    1- 1352     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0098                           1- 1353     _00004_DS_:
     0098 1C03                      1- 1354     	BCR	STATUS,0
                                    1- 1355     	BANKSEL	r0x1042
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 13rr                      1- 1356     	RRR	r0x1042,W
                                    1- 1357     	BANKSEL	r0x1043
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 00rr                      1- 1358     	MOVAR	r0x1043
                                    1- 1359     	BANKSEL	r0x1041
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 13rr                      1- 1360     	RRR	r0x1041,W
                                    1- 1361     	BANKSEL	r0x1044
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 1362     	MOVAR	r0x1044
     00A1 2131                      1- 1363     	MOVIA	0x31
     00A2 03rr                      1- 1364     	ADDAR	r0x1044,W
                                    1- 1365     	BANKSEL	r0x103F
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 00rr                      1- 1366     	MOVAR	r0x103F
                                    1- 1367     	BANKSEL	r0x1040
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 02rr                      1- 1368     	CLRR	r0x1040
     00A7 14rr                      1- 1369     	RLR	r0x1040,F
                                    1- 1370     	BANKSEL	r0x1043
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 1371     	MOVR	r0x1043,W
                                    1- 1372     	BANKSEL	r0x1040
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 03rr                      1- 1373     	ADDAR	r0x1040,F
                                    1- 1374     	MGOTO	_00387_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1375     ;;unsigned compare: left < lit (0x75E=1886), size=2
     00AD                           1- 1376     _00383_DS_:
                                    1- 1377     	.line	714, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1886)
     00AD 2107                      1- 1378     	MOVIA	0x07
                                    1- 1379     	BANKSEL	_R_Quarter_VDD_DATA
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 04rr                      1- 1380     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00B0 0903                      1- 1381     	BTRSS	STATUS,2
                                    1- 1382     	MGOTO	_00502_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2 215E                      1- 1383     	MOVIA	0x5e
     00B3 04rr                      1- 1384     	SUBAR	_R_Quarter_VDD_DATA,W
     00B4                           1- 1385     _00502_DS_:
     00B4 0803                      1- 1386     	BTRSS	STATUS,0
                                    1- 1387     	MGOTO	_00380_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1388     	.line	716, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 1886)/4) + 21;
     00B6 21A2                      1- 1389     	MOVIA	0xa2
                                    1- 1390     	BANKSEL	_R_Quarter_VDD_DATA
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 03rr                      1- 1391     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1392     	BANKSEL	r0x1041
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 1393     	MOVAR	r0x1041
     00BB 21F8                      1- 1394     	MOVIA	0xf8
                                    1- 1395     	BANKSEL	r0x1042
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 1396     	MOVAR	r0x1042
                                    1- 1397     	BANKSEL	_R_Quarter_VDD_DATA
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 01rr                      1- 1398     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00C0 0C03                      1- 1399     	BTRSC	STATUS,0
     00C1 05rr                      1- 1400     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00C2 0D03                      1- 1401     	BTRSC	STATUS,2
                                    1- 1402     	MGOTO	_00005_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1403     	BANKSEL	r0x1042
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 03rr                      1- 1404     	ADDAR	r0x1042,F
                                    1- 1405     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00C6                           1- 1406     _00005_DS_:
     00C6 1C03                      1- 1407     	BCR	STATUS,0
                                    1- 1408     	BANKSEL	r0x1042
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 13rr                      1- 1409     	RRR	r0x1042,W
                                    1- 1410     	BANKSEL	r0x1043
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 1411     	MOVAR	r0x1043
                                    1- 1412     	BANKSEL	r0x1041
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 13rr                      1- 1413     	RRR	r0x1041,W
                                    1- 1414     	BANKSEL	r0x1044
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 00rr                      1- 1415     	MOVAR	r0x1044
                                    1- 1416     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00CF 1C03                      1- 1417     	BCR	STATUS,0
                                    1- 1418     	BANKSEL	r0x1043
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 13rr                      1- 1419     	RRR	r0x1043,F
                                    1- 1420     	BANKSEL	r0x1044
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 13rr                      1- 1421     	RRR	r0x1044,F
     00D4 2115                      1- 1422     	MOVIA	0x15
     00D5 03rr                      1- 1423     	ADDAR	r0x1044,W
                                    1- 1424     	BANKSEL	r0x103F
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 00rr                      1- 1425     	MOVAR	r0x103F
                                    1- 1426     	BANKSEL	r0x1040
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 02rr                      1- 1427     	CLRR	r0x1040
     00DA 14rr                      1- 1428     	RLR	r0x1040,F
                                    1- 1429     	BANKSEL	r0x1043
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 01rr                      1- 1430     	MOVR	r0x1043,W
                                    1- 1431     	BANKSEL	r0x1040
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 03rr                      1- 1432     	ADDAR	r0x1040,F
                                    1- 1433     	MGOTO	_00387_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1434     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1435     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     00E0                           1- 1436     _00380_DS_:
                                    1- 1437     	.line	718, "main.c"; 	else if(R_Quarter_VDD_DATA > 1550)
     00E0 2106                      1- 1438     	MOVIA	0x06
                                    1- 1439     	BANKSEL	_R_Quarter_VDD_DATA
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 04rr                      1- 1440     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00E3 0903                      1- 1441     	BTRSS	STATUS,2
                                    1- 1442     	MGOTO	_00503_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
     00E5 210F                      1- 1443     	MOVIA	0x0f
     00E6 04rr                      1- 1444     	SUBAR	_R_Quarter_VDD_DATA,W
     00E7                           1- 1445     _00503_DS_:
     00E7 0803                      1- 1446     	BTRSS	STATUS,0
                                    1- 1447     	MGOTO	_00377_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1448     	.line	720, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1550)/16;
     00E9 21F2                      1- 1449     	MOVIA	0xf2
                                    1- 1450     	BANKSEL	_R_Quarter_VDD_DATA
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 03rr                      1- 1451     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1452     	BANKSEL	r0x1041
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1- 1453     	MOVAR	r0x1041
     00EE 21F9                      1- 1454     	MOVIA	0xf9
                                    1- 1455     	BANKSEL	r0x1042
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 00rr                      1- 1456     	MOVAR	r0x1042
                                    1- 1457     	BANKSEL	_R_Quarter_VDD_DATA
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 1458     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00F3 0C03                      1- 1459     	BTRSC	STATUS,0
     00F4 05rr                      1- 1460     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00F5 0D03                      1- 1461     	BTRSC	STATUS,2
                                    1- 1462     	MGOTO	_00006_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1463     	BANKSEL	r0x1042
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 03rr                      1- 1464     	ADDAR	r0x1042,F
     00F9                           1- 1465     _00006_DS_:
                                    1- 1466     	BANKSEL	r0x1041
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 15rr                      1- 1467     	SWAPR	r0x1041,W
     00FB 220F                      1- 1468     	ANDIA	0x0f
                                    1- 1469     	BANKSEL	r0x103F
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 00rr                      1- 1470     	MOVAR	r0x103F
                                    1- 1471     	BANKSEL	r0x1042
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 15rr                      1- 1472     	SWAPR	r0x1042,W
                                    1- 1473     	BANKSEL	r0x1040
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 00rr                      1- 1474     	MOVAR	r0x1040
     0102 22F0                      1- 1475     	ANDIA	0xf0
                                    1- 1476     	BANKSEL	r0x103F
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 11rr                      1- 1477     	IORAR	r0x103F,F
                                    1- 1478     	BANKSEL	r0x1040
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 12rr                      1- 1479     	XORAR	r0x1040,F
                                    1- 1480     	MGOTO	_00387_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
     0108                           1- 1481     _00377_DS_:
                                    1- 1482     	.line	724, "main.c"; 	tempValue = 0;
                                    1- 1483     	BANKSEL	r0x103F
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 02rr                      1- 1484     	CLRR	r0x103F
                                    1- 1485     	BANKSEL	r0x1040
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 02rr                      1- 1486     	CLRR	r0x1040
     010C                           1- 1487     _00387_DS_:
                                    1- 1488     	.line	726, "main.c"; 	if(0x20 & PORTA)
                                    1- 1489     	BANKSEL	_PORTA
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 0Arr                      1- 1490     	BTRSS	_PORTA,5
                                    1- 1491     	MGOTO	_00421_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1492     ;;unsigned compare: left < lit (0x5=5), size=2
                                    1- 1493     	.line	730, "main.c"; 	if(tempValue < 5)
     010F 2100                      1- 1494     	MOVIA	0x00
                                    1- 1495     	BANKSEL	r0x1040
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 04rr                      1- 1496     	SUBAR	r0x1040,W
     0112 0903                      1- 1497     	BTRSS	STATUS,2
                                    1- 1498     	MGOTO	_00504_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
     0114 2105                      1- 1499     	MOVIA	0x05
                                    1- 1500     	BANKSEL	r0x103F
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 04rr                      1- 1501     	SUBAR	r0x103F,W
     0117                           1- 1502     _00504_DS_:
     0117 0C03                      1- 1503     	BTRSC	STATUS,0
                                    1- 1504     	MGOTO	_00406_DS_
     0118 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1505     	.line	732, "main.c"; 	tempValue = 1;
     0119 2101                      1- 1506     	MOVIA	0x01
                                    1- 1507     	BANKSEL	r0x103F
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 00rr                      1- 1508     	MOVAR	r0x103F
                                    1- 1509     	BANKSEL	r0x1040
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 02rr                      1- 1510     	CLRR	r0x1040
                                    1- 1511     	MGOTO	_00012_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1512     ;;unsigned compare: left < lit (0x14=20), size=2
     011F                           1- 1513     _00406_DS_:
                                    1- 1514     	.line	734, "main.c"; 	else if(tempValue < 20)
     011F 2100                      1- 1515     	MOVIA	0x00
                                    1- 1516     	BANKSEL	r0x1040
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 04rr                      1- 1517     	SUBAR	r0x1040,W
     0122 0903                      1- 1518     	BTRSS	STATUS,2
                                    1- 1519     	MGOTO	_00505_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
     0124 2114                      1- 1520     	MOVIA	0x14
                                    1- 1521     	BANKSEL	r0x103F
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 04rr                      1- 1522     	SUBAR	r0x103F,W
     0127                           1- 1523     _00505_DS_:
     0127 0C03                      1- 1524     	BTRSC	STATUS,0
                                    1- 1525     	MGOTO	_00403_DS_
     0128 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1526     	.line	736, "main.c"; 	tempValue = tempValue - 5;
     0129 21FB                      1- 1527     	MOVIA	0xfb
                                    1- 1528     	BANKSEL	r0x103F
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 03rr                      1- 1529     	ADDAR	r0x103F,F
     012C 0C03                      1- 1530     	BTRSC	STATUS,0
                                    1- 1531     	MGOTO	_00007_DS_
     012D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1532     	BANKSEL	r0x1040
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 06rr                      1- 1533     	DECR	r0x1040,F
     0130                           1- 1534     _00007_DS_:
                                    1- 1535     	MGOTO	_00012_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1536     ;;unsigned compare: left < lit (0x1E=30), size=2
     0131                           1- 1537     _00403_DS_:
                                    1- 1538     	.line	738, "main.c"; 	else if(tempValue < 30)
     0131 2100                      1- 1539     	MOVIA	0x00
                                    1- 1540     	BANKSEL	r0x1040
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 04rr                      1- 1541     	SUBAR	r0x1040,W
     0134 0903                      1- 1542     	BTRSS	STATUS,2
                                    1- 1543     	MGOTO	_00506_DS_
     0135 3rrr                      3-   63 m1      LGOTO rom_address
     0136 211E                      1- 1544     	MOVIA	0x1e
                                    1- 1545     	BANKSEL	r0x103F
     0137 rrrr                      3-  110 m1      .banksel ram_address
     0138 04rr                      1- 1546     	SUBAR	r0x103F,W
     0139                           1- 1547     _00506_DS_:
     0139 0C03                      1- 1548     	BTRSC	STATUS,0
                                    1- 1549     	MGOTO	_00400_DS_
     013A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1550     	.line	740, "main.c"; 	tempValue = tempValue - 10;
     013B 21F6                      1- 1551     	MOVIA	0xf6
                                    1- 1552     	BANKSEL	r0x103F
     013C rrrr                      3-  110 m1      .banksel ram_address
     013D 03rr                      1- 1553     	ADDAR	r0x103F,F
     013E 0C03                      1- 1554     	BTRSC	STATUS,0
                                    1- 1555     	MGOTO	_00008_DS_
     013F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1556     	BANKSEL	r0x1040
     0140 rrrr                      3-  110 m1      .banksel ram_address
     0141 06rr                      1- 1557     	DECR	r0x1040,F
     0142                           1- 1558     _00008_DS_:
                                    1- 1559     	MGOTO	_00012_DS_
     0142 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1560     ;;unsigned compare: left < lit (0x28=40), size=2
     0143                           1- 1561     _00400_DS_:
                                    1- 1562     	.line	742, "main.c"; 	else if(tempValue < 40)
     0143 2100                      1- 1563     	MOVIA	0x00
                                    1- 1564     	BANKSEL	r0x1040
     0144 rrrr                      3-  110 m1      .banksel ram_address
     0145 04rr                      1- 1565     	SUBAR	r0x1040,W
     0146 0903                      1- 1566     	BTRSS	STATUS,2
                                    1- 1567     	MGOTO	_00507_DS_
     0147 3rrr                      3-   63 m1      LGOTO rom_address
     0148 2128                      1- 1568     	MOVIA	0x28
                                    1- 1569     	BANKSEL	r0x103F
     0149 rrrr                      3-  110 m1      .banksel ram_address
     014A 04rr                      1- 1570     	SUBAR	r0x103F,W
     014B                           1- 1571     _00507_DS_:
     014B 0C03                      1- 1572     	BTRSC	STATUS,0
                                    1- 1573     	MGOTO	_00397_DS_
     014C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1574     	.line	744, "main.c"; 	tempValue = tempValue - 15;
     014D 21F1                      1- 1575     	MOVIA	0xf1
                                    1- 1576     	BANKSEL	r0x103F
     014E rrrr                      3-  110 m1      .banksel ram_address
     014F 03rr                      1- 1577     	ADDAR	r0x103F,F
     0150 0C03                      1- 1578     	BTRSC	STATUS,0
                                    1- 1579     	MGOTO	_00009_DS_
     0151 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1580     	BANKSEL	r0x1040
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 06rr                      1- 1581     	DECR	r0x1040,F
     0154                           1- 1582     _00009_DS_:
                                    1- 1583     	MGOTO	_00012_DS_
     0154 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1584     ;;unsigned compare: left < lit (0x32=50), size=2
     0155                           1- 1585     _00397_DS_:
                                    1- 1586     	.line	746, "main.c"; 	else if(tempValue < 50)
     0155 2100                      1- 1587     	MOVIA	0x00
                                    1- 1588     	BANKSEL	r0x1040
     0156 rrrr                      3-  110 m1      .banksel ram_address
     0157 04rr                      1- 1589     	SUBAR	r0x1040,W
     0158 0903                      1- 1590     	BTRSS	STATUS,2
                                    1- 1591     	MGOTO	_00508_DS_
     0159 3rrr                      3-   63 m1      LGOTO rom_address
     015A 2132                      1- 1592     	MOVIA	0x32
                                    1- 1593     	BANKSEL	r0x103F
     015B rrrr                      3-  110 m1      .banksel ram_address
     015C 04rr                      1- 1594     	SUBAR	r0x103F,W
     015D                           1- 1595     _00508_DS_:
     015D 0C03                      1- 1596     	BTRSC	STATUS,0
                                    1- 1597     	MGOTO	_00394_DS_
     015E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1598     	.line	748, "main.c"; 	tempValue = tempValue - 21;
     015F 21EB                      1- 1599     	MOVIA	0xeb
                                    1- 1600     	BANKSEL	r0x103F
     0160 rrrr                      3-  110 m1      .banksel ram_address
     0161 03rr                      1- 1601     	ADDAR	r0x103F,F
     0162 0C03                      1- 1602     	BTRSC	STATUS,0
                                    1- 1603     	MGOTO	_00010_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1604     	BANKSEL	r0x1040
     0164 rrrr                      3-  110 m1      .banksel ram_address
     0165 06rr                      1- 1605     	DECR	r0x1040,F
     0166                           1- 1606     _00010_DS_:
                                    1- 1607     	MGOTO	_00012_DS_
     0166 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1608     ;;unsigned compare: left < lit (0x46=70), size=2
     0167                           1- 1609     _00394_DS_:
                                    1- 1610     	.line	750, "main.c"; 	else if(tempValue < 70)
     0167 2100                      1- 1611     	MOVIA	0x00
                                    1- 1612     	BANKSEL	r0x1040
     0168 rrrr                      3-  110 m1      .banksel ram_address
     0169 04rr                      1- 1613     	SUBAR	r0x1040,W
     016A 0903                      1- 1614     	BTRSS	STATUS,2
                                    1- 1615     	MGOTO	_00509_DS_
     016B 3rrr                      3-   63 m1      LGOTO rom_address
     016C 2146                      1- 1616     	MOVIA	0x46
                                    1- 1617     	BANKSEL	r0x103F
     016D rrrr                      3-  110 m1      .banksel ram_address
     016E 04rr                      1- 1618     	SUBAR	r0x103F,W
     016F                           1- 1619     _00509_DS_:
     016F 0C03                      1- 1620     	BTRSC	STATUS,0
                                    1- 1621     	MGOTO	_00391_DS_
     0170 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1622     	.line	752, "main.c"; 	tempValue = tempValue - 22;
     0171 21EA                      1- 1623     	MOVIA	0xea
                                    1- 1624     	BANKSEL	r0x103F
     0172 rrrr                      3-  110 m1      .banksel ram_address
     0173 03rr                      1- 1625     	ADDAR	r0x103F,F
     0174 0C03                      1- 1626     	BTRSC	STATUS,0
                                    1- 1627     	MGOTO	_00011_DS_
     0175 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1628     	BANKSEL	r0x1040
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 06rr                      1- 1629     	DECR	r0x1040,F
     0178                           1- 1630     _00011_DS_:
                                    1- 1631     	MGOTO	_00012_DS_
     0178 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1632     ;;unsigned compare: left < lit (0x78=120), size=2
     0179                           1- 1633     _00391_DS_:
                                    1- 1634     	.line	754, "main.c"; 	else if(tempValue < 120)
     0179 2100                      1- 1635     	MOVIA	0x00
                                    1- 1636     	BANKSEL	r0x1040
     017A rrrr                      3-  110 m1      .banksel ram_address
     017B 04rr                      1- 1637     	SUBAR	r0x1040,W
     017C 0903                      1- 1638     	BTRSS	STATUS,2
                                    1- 1639     	MGOTO	_00510_DS_
     017D 3rrr                      3-   63 m1      LGOTO rom_address
     017E 2178                      1- 1640     	MOVIA	0x78
                                    1- 1641     	BANKSEL	r0x103F
     017F rrrr                      3-  110 m1      .banksel ram_address
     0180 04rr                      1- 1642     	SUBAR	r0x103F,W
     0181                           1- 1643     _00510_DS_:
     0181 0C03                      1- 1644     	BTRSC	STATUS,0
                                    1- 1645     	MGOTO	_00012_DS_
     0182 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1646     	.line	756, "main.c"; 	tempValue = tempValue - 23;
     0183 21E9                      1- 1647     	MOVIA	0xe9
                                    1- 1648     	BANKSEL	r0x103F
     0184 rrrr                      3-  110 m1      .banksel ram_address
     0185 03rr                      1- 1649     	ADDAR	r0x103F,F
     0186 0C03                      1- 1650     	BTRSC	STATUS,0
                                    1- 1651     	MGOTO	_00012_DS_
     0187 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1652     	BANKSEL	r0x1040
     0188 rrrr                      3-  110 m1      .banksel ram_address
     0189 06rr                      1- 1653     	DECR	r0x1040,F
                                    1- 1654     ;;unsigned compare: left < lit (0x64=100), size=2
     018A                           1- 1655     _00012_DS_:
                                    1- 1656     	.line	758, "main.c"; 	if(tempValue >= 100)
     018A 2100                      1- 1657     	MOVIA	0x00
                                    1- 1658     	BANKSEL	r0x1040
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 04rr                      1- 1659     	SUBAR	r0x1040,W
     018D 0903                      1- 1660     	BTRSS	STATUS,2
                                    1- 1661     	MGOTO	_00511_DS_
     018E 3rrr                      3-   63 m1      LGOTO rom_address
     018F 2164                      1- 1662     	MOVIA	0x64
                                    1- 1663     	BANKSEL	r0x103F
     0190 rrrr                      3-  110 m1      .banksel ram_address
     0191 04rr                      1- 1664     	SUBAR	r0x103F,W
     0192                           1- 1665     _00511_DS_:
     0192 0803                      1- 1666     	BTRSS	STATUS,0
                                    1- 1667     	MGOTO	_00409_DS_
     0193 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1668     	.line	760, "main.c"; 	tempValue = 100;
     0194 2164                      1- 1669     	MOVIA	0x64
                                    1- 1670     	BANKSEL	r0x103F
     0195 rrrr                      3-  110 m1      .banksel ram_address
     0196 00rr                      1- 1671     	MOVAR	r0x103F
                                    1- 1672     	BANKSEL	r0x1040
     0197 rrrr                      3-  110 m1      .banksel ram_address
     0198 02rr                      1- 1673     	CLRR	r0x1040
     0199                           1- 1674     _00409_DS_:
                                    1- 1675     	.line	763, "main.c"; 	if(pwStep < tempValue)
                                    1- 1676     	BANKSEL	_pwStep
     0199 rrrr                      3-  110 m1      .banksel ram_address
     019A 01rr                      1- 1677     	MOVR	_pwStep,W
                                    1- 1678     	BANKSEL	r0x1041
     019B rrrr                      3-  110 m1      .banksel ram_address
     019C 00rr                      1- 1679     	MOVAR	r0x1041
                                    1- 1680     	BANKSEL	r0x1042
     019D rrrr                      3-  110 m1      .banksel ram_address
     019E 02rr                      1- 1681     	CLRR	r0x1042
                                    1- 1682     	BANKSEL	r0x1040
     019F rrrr                      3-  110 m1      .banksel ram_address
     01A0 01rr                      1- 1683     	MOVR	r0x1040,W
                                    1- 1684     	BANKSEL	r0x1042
     01A1 rrrr                      3-  110 m1      .banksel ram_address
     01A2 04rr                      1- 1685     	SUBAR	r0x1042,W
     01A3 0903                      1- 1686     	BTRSS	STATUS,2
                                    1- 1687     	MGOTO	_00512_DS_
     01A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1688     	BANKSEL	r0x103F
     01A5 rrrr                      3-  110 m1      .banksel ram_address
     01A6 01rr                      1- 1689     	MOVR	r0x103F,W
                                    1- 1690     	BANKSEL	r0x1041
     01A7 rrrr                      3-  110 m1      .banksel ram_address
     01A8 04rr                      1- 1691     	SUBAR	r0x1041,W
     01A9                           1- 1692     _00512_DS_:
     01A9 0C03                      1- 1693     	BTRSC	STATUS,0
                                    1- 1694     	MGOTO	_00429_DS_
     01AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1695     	.line	765, "main.c"; 	pwStep++;
                                    1- 1696     	BANKSEL	_pwStep
     01AB rrrr                      3-  110 m1      .banksel ram_address
     01AC 05rr                      1- 1697     	INCR	_pwStep,F
                                    1- 1698     	MGOTO	_00429_DS_
     01AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1699     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1700     ;;unsigned compare: left >= lit (0x65=101), size=2
     01AE                           1- 1701     _00421_DS_:
                                    1- 1702     	.line	772, "main.c"; 	if(tempValue > 100)
     01AE 2100                      1- 1703     	MOVIA	0x00
                                    1- 1704     	BANKSEL	r0x1040
     01AF rrrr                      3-  110 m1      .banksel ram_address
     01B0 04rr                      1- 1705     	SUBAR	r0x1040,W
     01B1 0903                      1- 1706     	BTRSS	STATUS,2
                                    1- 1707     	MGOTO	_00513_DS_
     01B2 3rrr                      3-   63 m1      LGOTO rom_address
     01B3 2165                      1- 1708     	MOVIA	0x65
                                    1- 1709     	BANKSEL	r0x103F
     01B4 rrrr                      3-  110 m1      .banksel ram_address
     01B5 04rr                      1- 1710     	SUBAR	r0x103F,W
     01B6                           1- 1711     _00513_DS_:
     01B6 0803                      1- 1712     	BTRSS	STATUS,0
                                    1- 1713     	MGOTO	_00413_DS_
     01B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1714     	.line	773, "main.c"; 	tempValue = 100;
     01B8 2164                      1- 1715     	MOVIA	0x64
                                    1- 1716     	BANKSEL	r0x103F
     01B9 rrrr                      3-  110 m1      .banksel ram_address
     01BA 00rr                      1- 1717     	MOVAR	r0x103F
                                    1- 1718     	BANKSEL	r0x1040
     01BB rrrr                      3-  110 m1      .banksel ram_address
     01BC 02rr                      1- 1719     	CLRR	r0x1040
     01BD                           1- 1720     _00413_DS_:
                                    1- 1721     	.line	774, "main.c"; 	if(pwStep == 0)
                                    1- 1722     	BANKSEL	_pwStep
     01BD rrrr                      3-  110 m1      .banksel ram_address
     01BE 01rr                      1- 1723     	MOVR	_pwStep,W
     01BF 0903                      1- 1724     	BTRSS	STATUS,2
                                    1- 1725     	MGOTO	_00415_DS_
     01C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1726     	.line	776, "main.c"; 	pwStep = tempValue;
                                    1- 1727     	BANKSEL	r0x103F
     01C1 rrrr                      3-  110 m1      .banksel ram_address
     01C2 01rr                      1- 1728     	MOVR	r0x103F,W
                                    1- 1729     	BANKSEL	_pwStep
     01C3 rrrr                      3-  110 m1      .banksel ram_address
     01C4 00rr                      1- 1730     	MOVAR	_pwStep
     01C5                           1- 1731     _00415_DS_:
                                    1- 1732     	.line	778, "main.c"; 	if(pwStep > tempValue)
                                    1- 1733     	BANKSEL	_pwStep
     01C5 rrrr                      3-  110 m1      .banksel ram_address
     01C6 01rr                      1- 1734     	MOVR	_pwStep,W
                                    1- 1735     	BANKSEL	r0x1041
     01C7 rrrr                      3-  110 m1      .banksel ram_address
     01C8 00rr                      1- 1736     	MOVAR	r0x1041
                                    1- 1737     	BANKSEL	r0x1042
     01C9 rrrr                      3-  110 m1      .banksel ram_address
     01CA 02rr                      1- 1738     	CLRR	r0x1042
     01CB 2100                      1- 1739     	MOVIA	0x00
                                    1- 1740     	BANKSEL	r0x1040
     01CC rrrr                      3-  110 m1      .banksel ram_address
     01CD 04rr                      1- 1741     	SUBAR	r0x1040,W
     01CE 0903                      1- 1742     	BTRSS	STATUS,2
                                    1- 1743     	MGOTO	_00514_DS_
     01CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1744     	BANKSEL	r0x1041
     01D0 rrrr                      3-  110 m1      .banksel ram_address
     01D1 01rr                      1- 1745     	MOVR	r0x1041,W
                                    1- 1746     	BANKSEL	r0x103F
     01D2 rrrr                      3-  110 m1      .banksel ram_address
     01D3 04rr                      1- 1747     	SUBAR	r0x103F,W
     01D4                           1- 1748     _00514_DS_:
     01D4 0C03                      1- 1749     	BTRSC	STATUS,0
                                    1- 1750     	MGOTO	_00429_DS_
     01D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1751     	.line	780, "main.c"; 	if(++count5s > 10)
                                    1- 1752     	BANKSEL	_count5s
     01D6 rrrr                      3-  110 m1      .banksel ram_address
     01D7 05rr                      1- 1753     	INCR	_count5s,F
     01D8 0D03                      1- 1754     	BTRSC	STATUS,2
     01D9 05rr                      1- 1755     	INCR	(_count5s + 1),F
                                    1- 1756     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1757     ;;unsigned compare: left >= lit (0xB=11), size=2
     01DA 2100                      1- 1758     	MOVIA	0x00
     01DB 04rr                      1- 1759     	SUBAR	(_count5s + 1),W
     01DC 0903                      1- 1760     	BTRSS	STATUS,2
                                    1- 1761     	MGOTO	_00515_DS_
     01DD 3rrr                      3-   63 m1      LGOTO rom_address
     01DE 210B                      1- 1762     	MOVIA	0x0b
     01DF 04rr                      1- 1763     	SUBAR	_count5s,W
     01E0                           1- 1764     _00515_DS_:
     01E0 0803                      1- 1765     	BTRSS	STATUS,0
                                    1- 1766     	MGOTO	_00429_DS_
     01E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1767     	.line	782, "main.c"; 	count5s = 0;
                                    1- 1768     	BANKSEL	_count5s
     01E2 rrrr                      3-  110 m1      .banksel ram_address
     01E3 02rr                      1- 1769     	CLRR	_count5s
     01E4 02rr                      1- 1770     	CLRR	(_count5s + 1)
                                    1- 1771     	.line	783, "main.c"; 	pwStep--;
                                    1- 1772     	BANKSEL	_pwStep
     01E5 rrrr                      3-  110 m1      .banksel ram_address
     01E6 06rr                      1- 1773     	DECR	_pwStep,F
     01E7                           1- 1774     _00429_DS_:
                                    1- 1775     	.line	791, "main.c"; 	}
                                    1- 1776     	RETURN	
     01E7 0010                      3-   40 m1      ret
                                    1- 1777     ; exit point of _checkBat
                                    1- 1779     ;***
                                    1- 1780     ;  pBlock Stats: dbName = C
                                    1- 1781     ;***
                                    1- 1782     ;has an exit
                                    1- 1783     ;functions called:
                                    1- 1784     ;   _delay
                                    1- 1785     ;   _delay
                                    1- 1786     ;; Starting pCode block
                                    1- 1787     .segment "code"; module=main, function=_initAD
     0000                           1- 1789     _initAD:
                                    1- 1790     ; 2 exit points
                                    1- 1791     	.line	647, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1792     	MOVIA	0x80
     0001 00rr                      1- 1793     	MOVAR	_ADMD
                                    1- 1794     	.line	652, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1795     	CLRR	_ADVREFH
                                    1- 1796     	.line	657, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1797     	MOVIA	0x10
     0004 00rr                      1- 1798     	MOVAR	_ADR
                                    1- 1799     	.line	661, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1800     	MOVIA	0x03
     0006 00rr                      1- 1801     	MOVAR	_ADCR
                                    1- 1802     	.line	668, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1803     	BSR	_ADMDbits,4
                                    1- 1804     	.line	669, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1805     	MOVIA	0x32
                                    1- 1806     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1807     	.line	670, "main.c"; 	}
                                    1- 1808     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1809     ; exit point of _initAD
                                    1- 1811     ;***
                                    1- 1812     ;  pBlock Stats: dbName = C
                                    1- 1813     ;***
                                    1- 1814     ;has an exit
                                    1- 1815     ;functions called:
                                    1- 1816     ;   _keyRead
                                    1- 1817     ;   _checkBat
                                    1- 1818     ;   _checkBat
                                    1- 1819     ;   _keyRead
                                    1- 1820     ;   _checkBat
                                    1- 1821     ;   _checkBat
                                    1- 1822     ;1 compiler assigned register :
                                    1- 1823     ;   r0x1046
                                    1- 1824     ;; Starting pCode block
                                    1- 1825     .segment "code"; module=main, function=_keyCtr
                                    1- 1827     ;local variable name mapping:
     0000                           1- 1829     _keyCtr:
                                    1- 1830     ; 2 exit points
                                    1- 1831     	.line	591, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1832     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1833     	COMR	_PORTA,W
                                    1- 1834     	BANKSEL	r0x1046
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1835     	MOVAR	r0x1046
     0004 2180                      1- 1836     	MOVIA	0x80
     0005 10rr                      1- 1837     	ANDAR	r0x1046,F
     0006 01rr                      1- 1838     	MOVR	r0x1046,W
                                    1- 1839     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1840     	BANKSEL	r0x1046
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1841     	MOVAR	r0x1046
                                    1- 1842     	.line	592, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1843     	XORIA	0x01
     000B 0903                      1- 1844     	BTRSS	STATUS,2
                                    1- 1845     	MGOTO	_00361_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1846     	.line	594, "main.c"; 	checkBat();
                                    1- 1847     	MCALL	_checkBat
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1848     	.line	595, "main.c"; 	if(pwFlag && pwStep > 0)
                                    1- 1849     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1850     	MOVR	_pwFlag,W
     0010 0D03                      1- 1851     	BTRSC	STATUS,2
                                    1- 1852     	MGOTO	_00363_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1853     	BANKSEL	_pwStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1854     	MOVR	_pwStep,W
     0014 0D03                      1- 1855     	BTRSC	STATUS,2
                                    1- 1856     	MGOTO	_00363_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1857     	.line	597, "main.c"; 	if(showFlag == 0)
                                    1- 1858     	BANKSEL	_showFlag
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1859     	MOVR	_showFlag,W
     0018 0903                      1- 1860     	BTRSS	STATUS,2
                                    1- 1861     	MGOTO	_00346_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1862     	.line	600, "main.c"; 	pwShowTime = 3;
     001A 2103                      1- 1863     	MOVIA	0x03
                                    1- 1864     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1865     	MOVAR	_pwShowTime
                                    1- 1866     	.line	601, "main.c"; 	offShowTime = 0;
                                    1- 1867     	BANKSEL	_offShowTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 1868     	CLRR	_offShowTime
                                    1- 1869     	MGOTO	_00363_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1870     _00346_DS_:
                                    1- 1871     	.line	603, "main.c"; 	else if(stepShowTime == 0)
                                    1- 1872     	BANKSEL	_stepShowTime
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1873     	MOVR	_stepShowTime,W
     0022 0903                      1- 1874     	BTRSS	STATUS,2
                                    1- 1875     	MGOTO	_00343_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1876     	.line	605, "main.c"; 	pwShowTime = 0;
                                    1- 1877     	BANKSEL	_pwShowTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1878     	CLRR	_pwShowTime
                                    1- 1879     	.line	606, "main.c"; 	stepShowTime = 2;
     0026 2102                      1- 1880     	MOVIA	0x02
                                    1- 1881     	BANKSEL	_stepShowTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1882     	MOVAR	_stepShowTime
                                    1- 1883     	.line	607, "main.c"; 	offShowTime = 0;
                                    1- 1884     	BANKSEL	_offShowTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 1885     	CLRR	_offShowTime
                                    1- 1886     	MGOTO	_00363_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 1887     _00343_DS_:
                                    1- 1888     	.line	611, "main.c"; 	pwShowTime = 0;
                                    1- 1889     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1- 1890     	CLRR	_pwShowTime
                                    1- 1891     	.line	612, "main.c"; 	if(++workStep > 3)
                                    1- 1892     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1893     	INCR	_workStep,F
                                    1- 1894     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1895     ;;unsigned compare: left >= lit (0x4=4), size=1
     0030 2104                      1- 1896     	MOVIA	0x04
     0031 04rr                      1- 1897     	SUBAR	_workStep,W
     0032 0803                      1- 1898     	BTRSS	STATUS,0
                                    1- 1899     	MGOTO	_00341_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1900     	.line	613, "main.c"; 	workStep = 1;
     0034 2101                      1- 1901     	MOVIA	0x01
     0035 00rr                      1- 1902     	MOVAR	_workStep
     0036                           1- 1903     _00341_DS_:
                                    1- 1904     	.line	614, "main.c"; 	stepShowTime = 2;
     0036 2102                      1- 1905     	MOVIA	0x02
                                    1- 1906     	BANKSEL	_stepShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 1907     	MOVAR	_stepShowTime
                                    1- 1908     	.line	615, "main.c"; 	offShowTime = 0;
                                    1- 1909     	BANKSEL	_offShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1910     	CLRR	_offShowTime
                                    1- 1911     	MGOTO	_00363_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 1912     _00361_DS_:
                                    1- 1913     	.line	619, "main.c"; 	else if(kclick == 2)
                                    1- 1914     	BANKSEL	r0x1046
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 1915     	MOVR	r0x1046,W
     003E 2402                      1- 1916     	XORIA	0x02
     003F 0903                      1- 1917     	BTRSS	STATUS,2
                                    1- 1918     	MGOTO	_00363_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1919     	.line	621, "main.c"; 	checkBat();
                                    1- 1920     	MCALL	_checkBat
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1921     	.line	622, "main.c"; 	if(pwFlag)
                                    1- 1922     	BANKSEL	_pwFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 1923     	MOVR	_pwFlag,W
     0044 0D03                      1- 1924     	BTRSC	STATUS,2
                                    1- 1925     	MGOTO	_00356_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1926     	.line	624, "main.c"; 	pwFlag = 0;		//关机
     0046 02rr                      1- 1927     	CLRR	_pwFlag
                                    1- 1928     	.line	625, "main.c"; 	workStep = 0;
                                    1- 1929     	BANKSEL	_workStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1930     	CLRR	_workStep
                                    1- 1931     	.line	626, "main.c"; 	pwShowTime = 0;
                                    1- 1932     	BANKSEL	_pwShowTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 1933     	CLRR	_pwShowTime
                                    1- 1934     	.line	627, "main.c"; 	stepShowTime = 0;
                                    1- 1935     	BANKSEL	_stepShowTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 1936     	CLRR	_stepShowTime
                                    1- 1937     	.line	628, "main.c"; 	offShowTime = 5;
     004D 2105                      1- 1938     	MOVIA	0x05
                                    1- 1939     	BANKSEL	_offShowTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1940     	MOVAR	_offShowTime
                                    1- 1941     	MGOTO	_00363_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 1942     _00356_DS_:
                                    1- 1943     	.line	630, "main.c"; 	else if(pwStep > 0)
                                    1- 1944     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 1945     	MOVR	_pwStep,W
     0053 0D03                      1- 1946     	BTRSC	STATUS,2
                                    1- 1947     	MGOTO	_00363_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1948     	.line	633, "main.c"; 	pwFlag = 1;		//开机
     0055 2101                      1- 1949     	MOVIA	0x01
                                    1- 1950     	BANKSEL	_pwFlag
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 1951     	MOVAR	_pwFlag
                                    1- 1952     	.line	634, "main.c"; 	pwShowTime = 3;
     0058 2103                      1- 1953     	MOVIA	0x03
                                    1- 1954     	BANKSEL	_pwShowTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1955     	MOVAR	_pwShowTime
                                    1- 1956     	.line	635, "main.c"; 	stepShowTime = 2;
     005B 2102                      1- 1957     	MOVIA	0x02
                                    1- 1958     	BANKSEL	_stepShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 1959     	MOVAR	_stepShowTime
                                    1- 1960     	.line	636, "main.c"; 	offShowTime = 0;
                                    1- 1961     	BANKSEL	_offShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1962     	CLRR	_offShowTime
                                    1- 1963     	.line	637, "main.c"; 	if(workStep == 0)
                                    1- 1964     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 1965     	MOVR	_workStep,W
     0062 0903                      1- 1966     	BTRSS	STATUS,2
                                    1- 1967     	MGOTO	_00363_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1968     	.line	638, "main.c"; 	workStep = 1;
     0064 2101                      1- 1969     	MOVIA	0x01
     0065 00rr                      1- 1970     	MOVAR	_workStep
     0066                           1- 1971     _00363_DS_:
                                    1- 1972     	.line	641, "main.c"; 	}
                                    1- 1973     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 1974     ; exit point of _keyCtr
                                    1- 1976     ;***
                                    1- 1977     ;  pBlock Stats: dbName = C
                                    1- 1978     ;***
                                    1- 1979     ;has an exit
                                    1- 1980     ;1 compiler assigned register :
                                    1- 1981     ;   r0x1045
                                    1- 1982     ;; Starting pCode block
                                    1- 1983     .segment "code"; module=main, function=_keyRead
                                    1- 1985     ;local variable name mapping:
     0000                           1- 1987     _keyRead:
                                    1- 1988     ; 2 exit points
                                    1- 1989     	.line	556, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1990     	BANKSEL	r0x1045
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1991     	MOVAR	r0x1045
                                    1- 1992     	.line	558, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1993     	MOVR	r0x1045,W
     0003 0D03                      1- 1994     	BTRSC	STATUS,2
                                    1- 1995     	MGOTO	_00333_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1996     	.line	560, "main.c"; 	keyCount++;
                                    1- 1997     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1998     	INCR	_keyCount,F
                                    1- 1999     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2000     	.line	561, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2001     	MOVIA	0xc8
     0008 04rr                      1- 2002     	SUBAR	_keyCount,W
     0009 0803                      1- 2003     	BTRSS	STATUS,0
                                    1- 2004     	MGOTO	_00334_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2005     	.line	563, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2006     	MOVIA	0xc8
     000C 00rr                      1- 2007     	MOVAR	_keyCount
                                    1- 2008     	.line	564, "main.c"; 	if(!longPressFlag)
                                    1- 2009     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2010     	MOVR	_longPressFlag,W
     000F 0903                      1- 2011     	BTRSS	STATUS,2
                                    1- 2012     	MGOTO	_00334_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2013     	.line	566, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2014     	MOVIA	0x01
     0012 00rr                      1- 2015     	MOVAR	_longPressFlag
                                    1- 2016     	.line	567, "main.c"; 	return 2;
     0013 2102                      1- 2017     	MOVIA	0x02
                                    1- 2018     	MGOTO	_00335_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2019     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 2020     _00333_DS_:
                                    1- 2021     	.line	573, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 2022     	MOVIA	0xc8
                                    1- 2023     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2024     	SUBAR	_keyCount,W
     0018 0803                      1- 2025     	BTRSS	STATUS,0
                                    1- 2026     	MGOTO	_00330_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2027     	.line	575, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2028     	CLRR	_keyCount
                                    1- 2029     	.line	576, "main.c"; 	longPressFlag = 0;
                                    1- 2030     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2031     	CLRR	_longPressFlag
                                    1- 2032     	.line	577, "main.c"; 	return	0;
     001D 2100                      1- 2033     	MOVIA	0x00
                                    1- 2034     	MGOTO	_00335_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2035     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2036     _00330_DS_:
                                    1- 2037     	.line	579, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2038     	MOVIA	0x04
                                    1- 2039     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2040     	SUBAR	_keyCount,W
     0022 0803                      1- 2041     	BTRSS	STATUS,0
                                    1- 2042     	MGOTO	_00331_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2043     	.line	581, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2044     	CLRR	_keyCount
                                    1- 2045     	.line	582, "main.c"; 	return	1;
     0025 2101                      1- 2046     	MOVIA	0x01
                                    1- 2047     	MGOTO	_00335_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2048     _00331_DS_:
                                    1- 2049     	.line	584, "main.c"; 	keyCount = 0;
                                    1- 2050     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2051     	CLRR	_keyCount
     0029                           1- 2052     _00334_DS_:
                                    1- 2053     	.line	586, "main.c"; 	return 0;
     0029 2100                      1- 2054     	MOVIA	0x00
     002A                           1- 2055     _00335_DS_:
                                    1- 2056     	.line	587, "main.c"; 	}
                                    1- 2057     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2058     ; exit point of _keyRead
                                    1- 2060     ;***
                                    1- 2061     ;  pBlock Stats: dbName = C
                                    1- 2062     ;***
                                    1- 2063     ;has an exit
                                    1- 2064     ;; Starting pCode block
                                    1- 2065     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2067     _pwmStop:
                                    1- 2068     ; 2 exit points
                                    1- 2069     	.line	550, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2070     	CLRA	
     0001 00rr                      1- 2071     	SFUN	_T2CR1
                                    1- 2072     	.line	551, "main.c"; 	}
                                    1- 2073     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2074     ; exit point of _pwmStop
                                    1- 2076     ;***
                                    1- 2077     ;  pBlock Stats: dbName = C
                                    1- 2078     ;***
                                    1- 2079     ;has an exit
                                    1- 2080     ;1 compiler assigned register :
                                    1- 2081     ;   r0x1047
                                    1- 2082     ;; Starting pCode block
                                    1- 2083     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2085     _pwmInit:
                                    1- 2086     ; 2 exit points
                                    1- 2087     	.line	538, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2088     	SFUNR	_T2CR1
                                    1- 2089     	BANKSEL	r0x1047
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2090     	MOVAR	r0x1047
     0003 0Frr                      1- 2091     	BTRSC	r0x1047,7
                                    1- 2092     	.line	539, "main.c"; 	return;
                                    1- 2093     	MGOTO	_00314_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2094     	.line	540, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2095     	CLRR	_TMRH
                                    1- 2096     	.line	541, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2097     	MOVIA	0x64
     0007 00rr                      1- 2098     	SFUN	_TMR2
                                    1- 2099     	.line	542, "main.c"; 	PWM2DUTY = 69;				// 		
     0008 2145                      1- 2100     	MOVIA	0x45
     0009 00rr                      1- 2101     	SFUN	_PWM2DUTY
                                    1- 2102     	.line	544, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div256;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 2107                      1- 2103     	MOVIA	0x07
     000B 00rr                      1- 2104     	SFUN	_T2CR2
                                    1- 2105     	.line	545, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2106     	MOVIA	0x83
     000D 00rr                      1- 2107     	SFUN	_T2CR1
     000E                           1- 2108     _00314_DS_:
                                    1- 2109     	.line	546, "main.c"; 	}
                                    1- 2110     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2111     ; exit point of _pwmInit
                                    1- 2113     ;***
                                    1- 2114     ;  pBlock Stats: dbName = C
                                    1- 2115     ;***
                                    1- 2116     ;has an exit
                                    1- 2117     ;functions called:
                                    1- 2118     ;   _setInput
                                    1- 2119     ;   _pwmStop
                                    1- 2120     ;   _setInput
                                    1- 2121     ;   _pwmStop
                                    1- 2122     ;; Starting pCode block
                                    1- 2123     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2125     _gotoSleep:
                                    1- 2126     ; 2 exit points
                                    1- 2127     	.line	505, "main.c"; 	sleepFlag = 0;
                                    1- 2128     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2129     	CLRR	_sleepFlag
                                    1- 2130     	.line	506, "main.c"; 	waitTime = 0;
                                    1- 2131     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2132     	CLRR	_waitTime
     0004 02rr                      1- 2133     	CLRR	(_waitTime + 1)
                                    1- 2134     	.line	507, "main.c"; 	setInput();
                                    1- 2135     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2136     	.line	508, "main.c"; 	sleepTime = 0;
                                    1- 2137     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2138     	CLRR	_sleepTime
                                    1- 2139     	.line	509, "main.c"; 	pwFlag = 0;
                                    1- 2140     	BANKSEL	_pwFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2141     	CLRR	_pwFlag
                                    1- 2142     	.line	510, "main.c"; 	pwmStop();
                                    1- 2143     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2144     	.line	511, "main.c"; 	AWUCON = 0xA0;
     000B 21A0                      1- 2145     	MOVIA	0xa0
     000C 00rr                      1- 2146     	MOVAR	_AWUCON
                                    1- 2147     	.line	513, "main.c"; 	IOSTB = C_PB3_Input;
     000D 2108                      1- 2148     	MOVIA	0x08
     000E 000r                      1- 2149     	IOST	_IOSTB
                                    1- 2150     	.line	514, "main.c"; 	PORTA = 0X00;
                                    1- 2151     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2152     	CLRR	_PORTA
                                    1- 2153     	.line	515, "main.c"; 	PORTB = 0X00;
     0011 02rr                      1- 2154     	CLRR	_PORTB
                                    1- 2155     	.line	516, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2156     	MOVIA	0x02
     0013 00rr                      1- 2157     	MOVAR	_INTE
                                    1- 2158     	.line	517, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2159     	MOVIA	0x18
     0015 00rr                      1- 2160     	MOVAR	_PCON
                                    1- 2161     	.line	518, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2162     	CLRR	_INTF
                                    1- 2163     	.line	519, "main.c"; 	CLRWDT();
     0017 0002                      1- 2164     	clrwdt
                                    1- 2165     	.line	520, "main.c"; 	ENI();
     0018 0004                      1- 2166     	ENI
                                    1- 2167     	.line	521, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2168     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1- 2169     	BTRSC	_PORTA,5
                                    1- 2170     	MGOTO	_00307_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2171     	.line	522, "main.c"; 	SLEEP();
     001C 0001                      1- 2172     	sleep
     001D                           1- 2173     _00307_DS_:
                                    1- 2174     	.line	523, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2175     	CLRR	_AWUCON
                                    1- 2176     	.line	524, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001E 21A0                      1- 2177     	MOVIA	0xa0
     001F 000r                      1- 2178     	IOST	_IOSTA
                                    1- 2179     	.line	525, "main.c"; 	IOSTB = C_PB3_Input ;
     0020 2108                      1- 2180     	MOVIA	0x08
     0021 000r                      1- 2181     	IOST	_IOSTB
                                    1- 2182     	.line	526, "main.c"; 	PORTA = 0x00;
                                    1- 2183     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2184     	CLRR	_PORTA
                                    1- 2185     	.line	527, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2103                      1- 2186     	MOVIA	0x03
     0025 00rr                      1- 2187     	MOVAR	_INTE
                                    1- 2188     	.line	528, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2189     	CLRR	_INTF
                                    1- 2190     	.line	530, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2191     	MOVIA	0xb8
     0028 00rr                      1- 2192     	MOVAR	_PCON
                                    1- 2193     	.line	533, "main.c"; 	}
                                    1- 2194     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2195     ; exit point of _gotoSleep
                                    1- 2197     ;***
                                    1- 2198     ;  pBlock Stats: dbName = C
                                    1- 2199     ;***
                                    1- 2200     ;has an exit
                                    1- 2201     ;functions called:
                                    1- 2202     ;   _setInput
                                    1- 2203     ;   _setInput
                                    1- 2204     ;; Starting pCode block
                                    1- 2205     .segment "code"; module=main, function=_initSys
     0000                           1- 2207     _initSys:
                                    1- 2208     ; 2 exit points
                                    1- 2209     	.line	473, "main.c"; 	DISI();
     0000 0013                      1- 2210     	DISI
                                    1- 2211     	.line	474, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 2212     	MOVIA	0xa0
     0002 000r                      1- 2213     	IOST	_IOSTA
                                    1- 2214     	.line	475, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2215     	MOVIA	0x08
     0004 000r                      1- 2216     	IOST	_IOSTB
                                    1- 2217     	.line	476, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2218     	CLRR	_PORTB
                                    1- 2219     	.line	477, "main.c"; 	PORTA = 0x00;
                                    1- 2220     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2221     	CLRR	_PORTA
                                    1- 2222     	.line	479, "main.c"; 	setInput();
                                    1- 2223     	MCALL	_setInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2224     	.line	480, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2225     	MOVIA	0x7f
     000A 000r                      1- 2226     	IOST	_APHCON
                                    1- 2227     	.line	481, "main.c"; 	BPHCON = 0xFF;		//PB3上拉
     000B 21FF                      1- 2228     	MOVIA	0xff
     000C 00rr                      1- 2229     	MOVAR	_BPHCON
                                    1- 2230     	.line	482, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2231     	MOVAR	_ABPLCON
                                    1- 2232     	.line	484, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2103                      1- 2233     	MOVIA	0x03
     000F 00rr                      1- 2234     	MOVAR	_INTE
                                    1- 2235     	.line	486, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2236     	CLRA	
     0011 000r                      1- 2237     	IOST	_PCON1
                                    1- 2238     	.line	488, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2239     	MOVIA	0x37
     0013 00rr                      1- 2240     	MOVAR	_TMR0
                                    1- 2241     	.line	489, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2242     	CLRA	
     0015 0003                      1- 2243     	T0MD	
                                    1- 2244     	.line	491, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2245     	MOVIA	0x01
     0017 000r                      1- 2246     	IOST	_PCON1
                                    1- 2247     	.line	494, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2248     	MOVIA	0x98
     0019 00rr                      1- 2249     	MOVAR	_PCON
                                    1- 2250     	.line	497, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2251     	MOVIA	0x01
     001B 000r                      1- 2252     	IOST	_PCON1
                                    1- 2253     	.line	498, "main.c"; 	ENI();
     001C 0004                      1- 2254     	ENI
                                    1- 2255     	.line	499, "main.c"; 	}
                                    1- 2256     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2257     ; exit point of _initSys
                                    1- 2259     ;***
                                    1- 2260     ;  pBlock Stats: dbName = C
                                    1- 2261     ;***
                                    1- 2262     ;has an exit
                                    1- 2263     ;functions called:
                                    1- 2264     ;   __gptrget1
                                    1- 2265     ;   _showNubBaiwei
                                    1- 2266     ;   __gptrget1
                                    1- 2267     ;   _showNubShiwei
                                    1- 2268     ;   __gptrget1
                                    1- 2269     ;   _showNubGewei
                                    1- 2270     ;   _setInput
                                    1- 2271     ;   __gptrget1
                                    1- 2272     ;   _showNubBaiwei
                                    1- 2273     ;   __gptrget1
                                    1- 2274     ;   _showNubShiwei
                                    1- 2275     ;   __gptrget1
                                    1- 2276     ;   _showNubGewei
                                    1- 2277     ;   _setInput
                                    1- 2278     ;5 compiler assigned registers:
                                    1- 2279     ;   r0x1048
                                    1- 2280     ;   r0x1049
                                    1- 2281     ;   STK01
                                    1- 2282     ;   STK00
                                    1- 2283     ;   r0x104A
                                    1- 2284     ;; Starting pCode block
                                    1- 2285     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2287     _refreshNub:
                                    1- 2288     ; 2 exit points
                                    1- 2289     	.line	464, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 2290     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2291     	MOVR	_baiweiNum,W
     0002 25rr                      1- 2292     	ADDIA	(_numArray + 0)
                                    1- 2293     	BANKSEL	r0x1048
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2294     	MOVAR	r0x1048
     0005 21rr                      1- 2295     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 2296     	BTRSC	STATUS,0
     0007 2501                      1- 2297     	ADDIA	0x01
                                    1- 2298     	BANKSEL	r0x1049
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2299     	MOVAR	r0x1049
                                    1- 2300     	BANKSEL	r0x1048
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2301     	MOVR	r0x1048,W
     000C 00rr                      1- 2302     	MOVAR	STK01
                                    1- 2303     	BANKSEL	r0x1049
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2304     	MOVR	r0x1049,W
     000F 00rr                      1- 2305     	MOVAR	STK00
     0010 2100                      1- 2306     	MOVIA	0x00
                                    1- 2307     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2308     ;;103	MOVAR	r0x104A
                                    1- 2309     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2310     	.line	465, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2311     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2312     	MOVR	_shiweiNum,W
     0015 25rr                      1- 2313     	ADDIA	(_numArray + 0)
                                    1- 2314     	BANKSEL	r0x1048
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2315     	MOVAR	r0x1048
     0018 21rr                      1- 2316     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 2317     	BTRSC	STATUS,0
     001A 2501                      1- 2318     	ADDIA	0x01
                                    1- 2319     	BANKSEL	r0x1049
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2320     	MOVAR	r0x1049
                                    1- 2321     	BANKSEL	r0x1048
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2322     	MOVR	r0x1048,W
     001F 00rr                      1- 2323     	MOVAR	STK01
                                    1- 2324     	BANKSEL	r0x1049
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2325     	MOVR	r0x1049,W
     0022 00rr                      1- 2326     	MOVAR	STK00
     0023 2100                      1- 2327     	MOVIA	0x00
                                    1- 2328     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2329     ;;102	MOVAR	r0x104A
                                    1- 2330     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2331     	.line	466, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2332     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2333     	MOVR	_geweiNum,W
     0028 25rr                      1- 2334     	ADDIA	(_numArray + 0)
                                    1- 2335     	BANKSEL	r0x1048
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2336     	MOVAR	r0x1048
     002B 21rr                      1- 2337     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2338     	BTRSC	STATUS,0
     002D 2501                      1- 2339     	ADDIA	0x01
                                    1- 2340     	BANKSEL	r0x1049
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2341     	MOVAR	r0x1049
                                    1- 2342     	BANKSEL	r0x1048
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2343     	MOVR	r0x1048,W
     0032 00rr                      1- 2344     	MOVAR	STK01
                                    1- 2345     	BANKSEL	r0x1049
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2346     	MOVR	r0x1049,W
     0035 00rr                      1- 2347     	MOVAR	STK00
     0036 2100                      1- 2348     	MOVIA	0x00
                                    1- 2349     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2350     ;;2	MOVAR	r0x104A
                                    1- 2351     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2352     	.line	467, "main.c"; 	setInput();
                                    1- 2353     	MCALL	_setInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2354     	.line	468, "main.c"; 	}
                                    1- 2355     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 2356     ; exit point of _refreshNub
                                    1- 2358     ;***
                                    1- 2359     ;  pBlock Stats: dbName = C
                                    1- 2360     ;***
                                    1- 2361     ;1 compiler assigned register :
                                    1- 2362     ;   r0x104B
                                    1- 2363     ;; Starting pCode block
                                    1- 2364     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2366     _checkIRKey:
                                    1- 2367     ; 0 exit points
                                    1- 2368     	.line	398, "main.c"; 	if(pwFlag == 0)
                                    1- 2369     	BANKSEL	_pwFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2370     	MOVR	_pwFlag,W
     0002 0903                      1- 2371     	BTRSS	STATUS,2
                                    1- 2372     	MGOTO	_00274_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2373     	.line	400, "main.c"; 	irStep = 0;
                                    1- 2374     	BANKSEL	_irStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2375     	CLRR	_irStep
                                    1- 2376     	.line	401, "main.c"; 	return;
                                    1- 2377     	MGOTO	_00013_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
     0007                           1- 2378     _00274_DS_:
                                    1- 2379     	.line	403, "main.c"; 	if(getbit(PORTB, 3) == 0)
     0007 01rr                      1- 2380     	MOVR	_PORTB,W
     0008 2208                      1- 2381     	ANDIA	0x08
     0009 0903                      1- 2382     	BTRSS	STATUS,2
     000A 2101                      1- 2383     	MOVIA	0x01
                                    1- 2384     	BANKSEL	r0x104B
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1- 2385     	MOVAR	r0x104B
     000D 01rr                      1- 2386     	MOVR	r0x104B,W
     000E 0903                      1- 2387     	BTRSS	STATUS,2
                                    1- 2388     	MGOTO	_00291_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2389     	.line	406, "main.c"; 	notRecv = 0;
                                    1- 2390     	BANKSEL	_notRecv
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2391     	CLRR	_notRecv
                                    1- 2392     	.line	407, "main.c"; 	count250ms = 0;
                                    1- 2393     	BANKSEL	_count250ms
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 2394     	CLRR	_count250ms
                                    1- 2395     	.line	409, "main.c"; 	if(++revCount > 5)
                                    1- 2396     	BANKSEL	_revCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1- 2397     	INCR	_revCount,F
                                    1- 2398     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2399     ;;unsigned compare: left >= lit (0x6=6), size=1
     0016 2106                      1- 2400     	MOVIA	0x06
     0017 04rr                      1- 2401     	SUBAR	_revCount,W
     0018 0803                      1- 2402     	BTRSS	STATUS,0
                                    1- 2403     	MGOTO	_00276_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2404     	.line	411, "main.c"; 	revCount = 6;
     001A 2106                      1- 2405     	MOVIA	0x06
     001B 00rr                      1- 2406     	MOVAR	_revCount
                                    1- 2407     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2408     ;;unsigned compare: left >= lit (0x6=6), size=1
     001C                           1- 2409     _00276_DS_:
                                    1- 2410     	.line	413, "main.c"; 	if(revCount > 5 && irStep == 0)
     001C 2106                      1- 2411     	MOVIA	0x06
                                    1- 2412     	BANKSEL	_revCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 04rr                      1- 2413     	SUBAR	_revCount,W
     001F 0803                      1- 2414     	BTRSS	STATUS,0
                                    1- 2415     	MGOTO	_00013_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2416     	BANKSEL	_irStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2417     	MOVR	_irStep,W
     0023 0903                      1- 2418     	BTRSS	STATUS,2
                                    1- 2419     	MGOTO	_00013_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2420     	.line	415, "main.c"; 	irStep = 1;
     0025 2101                      1- 2421     	MOVIA	0x01
     0026 00rr                      1- 2422     	MOVAR	_irStep
                                    1- 2423     	.line	416, "main.c"; 	if(workStep == 1)
                                    1- 2424     	BANKSEL	_workStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2425     	MOVR	_workStep,W
     0029 2401                      1- 2426     	XORIA	0x01
     002A 0903                      1- 2427     	BTRSS	STATUS,2
                                    1- 2428     	MGOTO	_00283_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2429     	.line	418, "main.c"; 	workTime = 150;
     002C 2196                      1- 2430     	MOVIA	0x96
                                    1- 2431     	BANKSEL	_workTime
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2432     	MOVAR	_workTime
     002F 02rr                      1- 2433     	CLRR	(_workTime + 1)
                                    1- 2434     	MGOTO	_00284_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 2435     _00283_DS_:
                                    1- 2436     	.line	420, "main.c"; 	else if(workStep == 2)
                                    1- 2437     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2438     	MOVR	_workStep,W
     0033 2402                      1- 2439     	XORIA	0x02
     0034 0903                      1- 2440     	BTRSS	STATUS,2
                                    1- 2441     	MGOTO	_00280_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2442     	.line	422, "main.c"; 	workTime = 260;
     0036 2104                      1- 2443     	MOVIA	0x04
                                    1- 2444     	BANKSEL	_workTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2445     	MOVAR	_workTime
     0039 2101                      1- 2446     	MOVIA	0x01
     003A 00rr                      1- 2447     	MOVAR	(_workTime + 1)
                                    1- 2448     	MGOTO	_00284_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 2449     _00280_DS_:
                                    1- 2450     	.line	424, "main.c"; 	else if(workStep == 3)
                                    1- 2451     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2452     	MOVR	_workStep,W
     003E 2403                      1- 2453     	XORIA	0x03
     003F 0903                      1- 2454     	BTRSS	STATUS,2
                                    1- 2455     	MGOTO	_00284_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2456     	.line	426, "main.c"; 	workTime = 360;
     0041 2168                      1- 2457     	MOVIA	0x68
                                    1- 2458     	BANKSEL	_workTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 2459     	MOVAR	_workTime
     0044 2101                      1- 2460     	MOVIA	0x01
     0045 00rr                      1- 2461     	MOVAR	(_workTime + 1)
     0046                           1- 2462     _00284_DS_:
                                    1- 2463     	.line	428, "main.c"; 	waitTime = 400;
     0046 2190                      1- 2464     	MOVIA	0x90
                                    1- 2465     	BANKSEL	_waitTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1- 2466     	MOVAR	_waitTime
     0049 2101                      1- 2467     	MOVIA	0x01
     004A 00rr                      1- 2468     	MOVAR	(_waitTime + 1)
                                    1- 2469     	MGOTO	_00013_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 2470     _00291_DS_:
                                    1- 2471     	.line	434, "main.c"; 	revCount = 0;
                                    1- 2472     	BANKSEL	_revCount
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1- 2473     	CLRR	_revCount
                                    1- 2474     	.line	435, "main.c"; 	if(++notRecv > 20)
                                    1- 2475     	BANKSEL	_notRecv
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1- 2476     	INCR	_notRecv,F
                                    1- 2477     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2478     ;;unsigned compare: left >= lit (0x15=21), size=1
     0050 2115                      1- 2479     	MOVIA	0x15
     0051 04rr                      1- 2480     	SUBAR	_notRecv,W
     0052 0803                      1- 2481     	BTRSS	STATUS,0
                                    1- 2482     	MGOTO	_00013_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2483     	.line	437, "main.c"; 	irStep = 0;
                                    1- 2484     	BANKSEL	_irStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1- 2485     	CLRR	_irStep
     0056                           1- 2486     _00013_DS_:
                                    1- 2487     	.line	457, "main.c"; 	}
                                    1- 2488     	RETURN	
     0056 0010                      3-   40 m1      ret
                                    1- 2490     ;***
                                    1- 2491     ;  pBlock Stats: dbName = C
                                    1- 2492     ;***
                                    1- 2493     ;has an exit
                                    1- 2494     ;functions called:
                                    1- 2495     ;   _pwmInit
                                    1- 2496     ;   _pwmStop
                                    1- 2497     ;   _checkBat
                                    1- 2498     ;   __divuchar
                                    1- 2499     ;   __moduchar
                                    1- 2500     ;   __moduint
                                    1- 2501     ;   __divuchar
                                    1- 2502     ;   __moduchar
                                    1- 2503     ;   _pwmInit
                                    1- 2504     ;   _pwmStop
                                    1- 2505     ;   _checkBat
                                    1- 2506     ;   __divuchar
                                    1- 2507     ;   __moduchar
                                    1- 2508     ;   __moduint
                                    1- 2509     ;   __divuchar
                                    1- 2510     ;   __moduchar
                                    1- 2511     ;5 compiler assigned registers:
                                    1- 2512     ;   r0x104C
                                    1- 2513     ;   STK00
                                    1- 2514     ;   STK02
                                    1- 2515     ;   STK01
                                    1- 2516     ;   r0x104D
                                    1- 2517     ;; Starting pCode block
                                    1- 2518     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2520     _chrgCtr:
                                    1- 2521     ; 2 exit points
                                    1- 2522     	.line	262, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2523     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Err                      1- 2524     	BTRSC	_PORTA,5
                                    1- 2525     	MGOTO	_00175_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2526     	.line	264, "main.c"; 	fullFlag = 0;
                                    1- 2527     	BANKSEL	_fullFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2528     	CLRR	_fullFlag
     0005                           1- 2529     _00175_DS_:
                                    1- 2530     	.line	266, "main.c"; 	BPHCON |= 0x04;
     0005 19rr                      1- 2531     	BSR	_BPHCON,2
                                    1- 2532     	.line	267, "main.c"; 	IOSTB &= 0xFB;
     0006 001r                      1- 2533     	IOSTR	_IOSTB
                                    1- 2534     	BANKSEL	r0x104C
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2535     	MOVAR	r0x104C
     0009 1Drr                      1- 2536     	BCR	r0x104C,2
     000A 01rr                      1- 2537     	MOVR	r0x104C,W
     000B 000r                      1- 2538     	IOST	_IOSTB
                                    1- 2539     	.line	268, "main.c"; 	if(workTime > 0)
                                    1- 2540     	BANKSEL	_workTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2541     	MOVR	_workTime,W
     000E 11rr                      1- 2542     	IORAR	(_workTime + 1),W
     000F 0D03                      1- 2543     	BTRSC	STATUS,2
                                    1- 2544     	MGOTO	_00177_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2545     	.line	270, "main.c"; 	pwmInit();
                                    1- 2546     	MCALL	_pwmInit
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2547     	.line	271, "main.c"; 	workTime--;
     0012 21FF                      1- 2548     	MOVIA	0xff
                                    1- 2549     	BANKSEL	_workTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 03rr                      1- 2550     	ADDAR	_workTime,F
     0015 0803                      1- 2551     	BTRSS	STATUS,0
     0016 06rr                      1- 2552     	DECR	(_workTime + 1),F
                                    1- 2553     	MGOTO	_00178_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 2554     _00177_DS_:
                                    1- 2555     	.line	275, "main.c"; 	workTime = 0;
                                    1- 2556     	BANKSEL	_workTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2557     	CLRR	_workTime
     001A 02rr                      1- 2558     	CLRR	(_workTime + 1)
                                    1- 2559     	.line	276, "main.c"; 	pwmStop();
                                    1- 2560     	MCALL	_pwmStop
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2561     	.line	277, "main.c"; 	PORTB &= 0xFB;
     001C 1Drr                      1- 2562     	BCR	_PORTB,2
     001D                           1- 2563     _00178_DS_:
                                    1- 2564     	.line	279, "main.c"; 	if(startTime)
                                    1- 2565     	BANKSEL	_startTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2566     	MOVR	_startTime,W
     001F 0D03                      1- 2567     	BTRSC	STATUS,2
                                    1- 2568     	MGOTO	_00213_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2569     	.line	281, "main.c"; 	checkBat();
                                    1- 2570     	MCALL	_checkBat
     0021 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2571     	.line	282, "main.c"; 	startTime--;
                                    1- 2572     	BANKSEL	_startTime
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 06rr                      1- 2573     	DECR	_startTime,F
                                    1- 2574     	.line	283, "main.c"; 	showFlag = 1;
     0024 2101                      1- 2575     	MOVIA	0x01
                                    1- 2576     	BANKSEL	_showFlag
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2577     	MOVAR	_showFlag
                                    1- 2578     	.line	284, "main.c"; 	baiweiNum = shiweiNum = 8;
     0027 2108                      1- 2579     	MOVIA	0x08
                                    1- 2580     	BANKSEL	_shiweiNum
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2581     	MOVAR	_shiweiNum
                                    1- 2582     	BANKSEL	_baiweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2583     	MOVAR	_baiweiNum
                                    1- 2584     	.line	285, "main.c"; 	geweiNum = 8;
                                    1- 2585     	BANKSEL	_geweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2586     	MOVAR	_geweiNum
                                    1- 2587     	.line	285, "main.c"; 	}
                                    1- 2588     	MGOTO	_00215_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 2589     _00213_DS_:
                                    1- 2590     	.line	287, "main.c"; 	else if(stepShowTime)
                                    1- 2591     	BANKSEL	_stepShowTime
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2592     	MOVR	_stepShowTime,W
     0031 0D03                      1- 2593     	BTRSC	STATUS,2
                                    1- 2594     	MGOTO	_00210_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2595     	.line	289, "main.c"; 	showFlag = 1;
     0033 2101                      1- 2596     	MOVIA	0x01
                                    1- 2597     	BANKSEL	_showFlag
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2598     	MOVAR	_showFlag
                                    1- 2599     	.line	290, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2600     	BANKSEL	_shiweiNum
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2601     	CLRR	_shiweiNum
                                    1- 2602     	BANKSEL	_baiweiNum
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 2603     	CLRR	_baiweiNum
                                    1- 2604     	.line	291, "main.c"; 	geweiNum = workStep;
                                    1- 2605     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2606     	MOVR	_workStep,W
                                    1- 2607     	BANKSEL	_geweiNum
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 2608     	MOVAR	_geweiNum
                                    1- 2609     	.line	291, "main.c"; 	}
                                    1- 2610     	MGOTO	_00215_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 2611     _00210_DS_:
                                    1- 2612     	.line	293, "main.c"; 	else if(pwShowTime || workTime)
                                    1- 2613     	BANKSEL	_pwShowTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 2614     	MOVR	_pwShowTime,W
     0041 0903                      1- 2615     	BTRSS	STATUS,2
                                    1- 2616     	MGOTO	_00205_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2617     	BANKSEL	_workTime
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2618     	MOVR	_workTime,W
     0045 11rr                      1- 2619     	IORAR	(_workTime + 1),W
     0046 0D03                      1- 2620     	BTRSC	STATUS,2
                                    1- 2621     	MGOTO	_00206_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048                           1- 2622     _00205_DS_:
                                    1- 2623     	.line	295, "main.c"; 	showFlag = 1;
     0048 2101                      1- 2624     	MOVIA	0x01
                                    1- 2625     	BANKSEL	_showFlag
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2626     	MOVAR	_showFlag
                                    1- 2627     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2628     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2629     	.line	296, "main.c"; 	if(pwStep > 99)
     004B 2164                      1- 2630     	MOVIA	0x64
                                    1- 2631     	BANKSEL	_pwStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 04rr                      1- 2632     	SUBAR	_pwStep,W
     004E 0803                      1- 2633     	BTRSS	STATUS,0
                                    1- 2634     	MGOTO	_00180_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2635     	.line	298, "main.c"; 	baiweiNum = 1;
     0050 2101                      1- 2636     	MOVIA	0x01
                                    1- 2637     	BANKSEL	_baiweiNum
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 2638     	MOVAR	_baiweiNum
                                    1- 2639     	.line	299, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2640     	BANKSEL	_geweiNum
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 2641     	CLRR	_geweiNum
                                    1- 2642     	BANKSEL	_shiweiNum
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 2643     	CLRR	_shiweiNum
                                    1- 2644     	MGOTO	_00215_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058                           1- 2645     _00180_DS_:
                                    1- 2646     	.line	303, "main.c"; 	baiweiNum = 0;
                                    1- 2647     	BANKSEL	_baiweiNum
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 2648     	CLRR	_baiweiNum
                                    1- 2649     	.line	304, "main.c"; 	shiweiNum = pwStep/10;
     005A 210A                      1- 2650     	MOVIA	0x0a
     005B 00rr                      1- 2651     	MOVAR	STK00
                                    1- 2652     	BANKSEL	_pwStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 2653     	MOVR	_pwStep,W
                                    1- 2654     	MCALL	__divuchar
     005E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2655     	BANKSEL	_shiweiNum
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 00rr                      1- 2656     	MOVAR	_shiweiNum
                                    1- 2657     	.line	305, "main.c"; 	geweiNum = pwStep%10;
     0061 210A                      1- 2658     	MOVIA	0x0a
     0062 00rr                      1- 2659     	MOVAR	STK00
                                    1- 2660     	BANKSEL	_pwStep
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 2661     	MOVR	_pwStep,W
                                    1- 2662     	MCALL	__moduchar
     0065 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2663     	BANKSEL	_geweiNum
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 2664     	MOVAR	_geweiNum
                                    1- 2665     	.line	305, "main.c"; 	}
                                    1- 2666     	MGOTO	_00215_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2667     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2668     ;;unsigned compare: left >= lit (0x6=6), size=1
     0069                           1- 2669     _00206_DS_:
                                    1- 2670     	.line	310, "main.c"; 	if(pwStep <= 5 && offShowTime == 0 && ((0x20 & PORTA) == 0) && pwFlag)
     0069 2106                      1- 2671     	MOVIA	0x06
                                    1- 2672     	BANKSEL	_pwStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 2673     	SUBAR	_pwStep,W
     006C 0C03                      1- 2674     	BTRSC	STATUS,0
                                    1- 2675     	MGOTO	_00200_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2676     	BANKSEL	_offShowTime
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 2677     	MOVR	_offShowTime,W
     0070 0903                      1- 2678     	BTRSS	STATUS,2
                                    1- 2679     	MGOTO	_00200_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2680     	BANKSEL	_PORTA
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 0Err                      1- 2681     	BTRSC	_PORTA,5
                                    1- 2682     	MGOTO	_00200_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2683     	BANKSEL	_pwFlag
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 2684     	MOVR	_pwFlag,W
     0077 0D03                      1- 2685     	BTRSC	STATUS,2
                                    1- 2686     	MGOTO	_00200_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2687     	.line	312, "main.c"; 	showFlag = 1;
     0079 2101                      1- 2688     	MOVIA	0x01
                                    1- 2689     	BANKSEL	_showFlag
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1- 2690     	MOVAR	_showFlag
                                    1- 2691     	.line	313, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2692     	BANKSEL	_shanTime
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 05rr                      1- 2693     	INCR	_shanTime,F
     007E 0D03                      1- 2694     	BTRSC	STATUS,2
     007F 05rr                      1- 2695     	INCR	(_shanTime + 1),F
                                    1- 2696     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2697     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0080 2101                      1- 2698     	MOVIA	0x01
     0081 04rr                      1- 2699     	SUBAR	(_shanTime + 1),W
     0082 0903                      1- 2700     	BTRSS	STATUS,2
                                    1- 2701     	MGOTO	_00267_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084 21F5                      1- 2702     	MOVIA	0xf5
     0085 04rr                      1- 2703     	SUBAR	_shanTime,W
     0086                           1- 2704     _00267_DS_:
     0086 0803                      1- 2705     	BTRSS	STATUS,0
                                    1- 2706     	MGOTO	_00183_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2707     	.line	315, "main.c"; 	shanTime = 0;
                                    1- 2708     	BANKSEL	_shanTime
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 02rr                      1- 2709     	CLRR	_shanTime
     008A 02rr                      1- 2710     	CLRR	(_shanTime + 1)
                                    1- 2711     	.line	316, "main.c"; 	showFlag = 0;
                                    1- 2712     	BANKSEL	_showFlag
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 02rr                      1- 2713     	CLRR	_showFlag
     008D                           1- 2714     _00183_DS_:
                                    1- 2715     	.line	319, "main.c"; 	if(shanTime % 100 < 50)
     008D 2164                      1- 2716     	MOVIA	0x64
     008E 00rr                      1- 2717     	MOVAR	STK02
     008F 2100                      1- 2718     	MOVIA	0x00
     0090 00rr                      1- 2719     	MOVAR	STK01
                                    1- 2720     	BANKSEL	_shanTime
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1- 2721     	MOVR	_shanTime,W
     0093 00rr                      1- 2722     	MOVAR	STK00
     0094 01rr                      1- 2723     	MOVR	(_shanTime + 1),W
                                    1- 2724     	MCALL	__moduint
     0095 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2725     	BANKSEL	r0x104D
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 2726     	MOVAR	r0x104D
     0098 01rr                      1- 2727     	MOVR	STK00,W
                                    1- 2728     	BANKSEL	r0x104C
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 2729     	MOVAR	r0x104C
                                    1- 2730     ;;unsigned compare: left < lit (0x32=50), size=2
     009B 2100                      1- 2731     	MOVIA	0x00
                                    1- 2732     	BANKSEL	r0x104D
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 04rr                      1- 2733     	SUBAR	r0x104D,W
     009E 0903                      1- 2734     	BTRSS	STATUS,2
                                    1- 2735     	MGOTO	_00268_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
     00A0 2132                      1- 2736     	MOVIA	0x32
                                    1- 2737     	BANKSEL	r0x104C
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 2738     	SUBAR	r0x104C,W
     00A3                           1- 2739     _00268_DS_:
     00A3 0C03                      1- 2740     	BTRSC	STATUS,0
                                    1- 2741     	MGOTO	_00185_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2742     	.line	321, "main.c"; 	showFlag = 1;
     00A5 2101                      1- 2743     	MOVIA	0x01
                                    1- 2744     	BANKSEL	_showFlag
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 2745     	MOVAR	_showFlag
                                    1- 2746     	.line	322, "main.c"; 	baiweiNum = 0;
                                    1- 2747     	BANKSEL	_baiweiNum
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 02rr                      1- 2748     	CLRR	_baiweiNum
                                    1- 2749     	.line	323, "main.c"; 	shiweiNum = 0;
                                    1- 2750     	BANKSEL	_shiweiNum
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 02rr                      1- 2751     	CLRR	_shiweiNum
                                    1- 2752     	.line	324, "main.c"; 	geweiNum = pwStep;
                                    1- 2753     	BANKSEL	_pwStep
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 2754     	MOVR	_pwStep,W
                                    1- 2755     	BANKSEL	_geweiNum
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 2756     	MOVAR	_geweiNum
                                    1- 2757     	MGOTO	_00215_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1                           1- 2758     _00185_DS_:
                                    1- 2759     	.line	328, "main.c"; 	showFlag = 0;
                                    1- 2760     	BANKSEL	_showFlag
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 02rr                      1- 2761     	CLRR	_showFlag
                                    1- 2762     	.line	328, "main.c"; 	}
                                    1- 2763     	MGOTO	_00215_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 2764     _00200_DS_:
                                    1- 2765     	.line	331, "main.c"; 	else if(offShowTime > 0)
                                    1- 2766     	BANKSEL	_offShowTime
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 2767     	MOVR	_offShowTime,W
     00B6 0D03                      1- 2768     	BTRSC	STATUS,2
                                    1- 2769     	MGOTO	_00197_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2770     	.line	333, "main.c"; 	showFlag = 1;
     00B8 2101                      1- 2771     	MOVIA	0x01
                                    1- 2772     	BANKSEL	_showFlag
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 2773     	MOVAR	_showFlag
                                    1- 2774     	.line	334, "main.c"; 	baiweiNum = 0;
                                    1- 2775     	BANKSEL	_baiweiNum
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 02rr                      1- 2776     	CLRR	_baiweiNum
                                    1- 2777     	.line	335, "main.c"; 	shiweiNum = 10;
     00BD 210A                      1- 2778     	MOVIA	0x0a
                                    1- 2779     	BANKSEL	_shiweiNum
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 2780     	MOVAR	_shiweiNum
                                    1- 2781     	.line	336, "main.c"; 	geweiNum = 10;
                                    1- 2782     	BANKSEL	_geweiNum
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 2783     	MOVAR	_geweiNum
                                    1- 2784     	.line	336, "main.c"; 	}
                                    1- 2785     	MGOTO	_00215_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3                           1- 2786     _00197_DS_:
                                    1- 2787     	.line	338, "main.c"; 	else if(0x20 & PORTA)
                                    1- 2788     	BANKSEL	_PORTA
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 0Arr                      1- 2789     	BTRSS	_PORTA,5
                                    1- 2790     	MGOTO	_00194_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2791     	.line	344, "main.c"; 	showFlag = 1;
     00C6 2101                      1- 2792     	MOVIA	0x01
                                    1- 2793     	BANKSEL	_showFlag
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 2794     	MOVAR	_showFlag
                                    1- 2795     	.line	348, "main.c"; 	if(fullFlag)
                                    1- 2796     	BANKSEL	_fullFlag
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 2797     	MOVR	_fullFlag,W
     00CB 0D03                      1- 2798     	BTRSC	STATUS,2
                                    1- 2799     	MGOTO	_00191_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2800     	.line	350, "main.c"; 	fullFlag = 1;
     00CD 2101                      1- 2801     	MOVIA	0x01
     00CE 00rr                      1- 2802     	MOVAR	_fullFlag
                                    1- 2803     	.line	352, "main.c"; 	baiweiNum = 1;
                                    1- 2804     	BANKSEL	_baiweiNum
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 00rr                      1- 2805     	MOVAR	_baiweiNum
                                    1- 2806     	.line	353, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2807     	BANKSEL	_geweiNum
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 02rr                      1- 2808     	CLRR	_geweiNum
                                    1- 2809     	BANKSEL	_shiweiNum
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 02rr                      1- 2810     	CLRR	_shiweiNum
                                    1- 2811     	.line	353, "main.c"; 	}
                                    1- 2812     	MGOTO	_00215_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6                           1- 2813     _00191_DS_:
                                    1- 2814     	.line	358, "main.c"; 	if(pwStep == 100)
                                    1- 2815     	BANKSEL	_pwStep
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 01rr                      1- 2816     	MOVR	_pwStep,W
     00D8 2464                      1- 2817     	XORIA	0x64
     00D9 0903                      1- 2818     	BTRSS	STATUS,2
                                    1- 2819     	MGOTO	_00188_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2820     	.line	360, "main.c"; 	fullFlag = 1;
     00DB 2101                      1- 2821     	MOVIA	0x01
                                    1- 2822     	BANKSEL	_fullFlag
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 00rr                      1- 2823     	MOVAR	_fullFlag
                                    1- 2824     	.line	361, "main.c"; 	baiweiNum = 0;
                                    1- 2825     	BANKSEL	_baiweiNum
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 02rr                      1- 2826     	CLRR	_baiweiNum
                                    1- 2827     	.line	362, "main.c"; 	shiweiNum = 9;
     00E0 2109                      1- 2828     	MOVIA	0x09
                                    1- 2829     	BANKSEL	_shiweiNum
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 00rr                      1- 2830     	MOVAR	_shiweiNum
                                    1- 2831     	.line	363, "main.c"; 	geweiNum = 9;
                                    1- 2832     	BANKSEL	_geweiNum
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 00rr                      1- 2833     	MOVAR	_geweiNum
                                    1- 2834     	MGOTO	_00215_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
     00E6                           1- 2835     _00188_DS_:
                                    1- 2836     	.line	367, "main.c"; 	baiweiNum = 0;
                                    1- 2837     	BANKSEL	_baiweiNum
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 02rr                      1- 2838     	CLRR	_baiweiNum
                                    1- 2839     	.line	368, "main.c"; 	shiweiNum = pwStep/10;
     00E8 210A                      1- 2840     	MOVIA	0x0a
     00E9 00rr                      1- 2841     	MOVAR	STK00
                                    1- 2842     	BANKSEL	_pwStep
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 01rr                      1- 2843     	MOVR	_pwStep,W
                                    1- 2844     	MCALL	__divuchar
     00EC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2845     	BANKSEL	_shiweiNum
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 2846     	MOVAR	_shiweiNum
                                    1- 2847     	.line	369, "main.c"; 	geweiNum = pwStep%10;
     00EF 210A                      1- 2848     	MOVIA	0x0a
     00F0 00rr                      1- 2849     	MOVAR	STK00
                                    1- 2850     	BANKSEL	_pwStep
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 2851     	MOVR	_pwStep,W
                                    1- 2852     	MCALL	__moduchar
     00F3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2853     	BANKSEL	_geweiNum
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 00rr                      1- 2854     	MOVAR	_geweiNum
                                    1- 2855     	.line	369, "main.c"; 	}
                                    1- 2856     	MGOTO	_00215_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
     00F7                           1- 2857     _00194_DS_:
                                    1- 2858     	.line	388, "main.c"; 	showFlag = 0;
                                    1- 2859     	BANKSEL	_showFlag
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 02rr                      1- 2860     	CLRR	_showFlag
     00F9                           1- 2861     _00215_DS_:
                                    1- 2862     	.line	392, "main.c"; 	}
                                    1- 2863     	RETURN	
     00F9 0010                      3-   40 m1      ret
                                    1- 2864     ; exit point of _chrgCtr
                                    1- 2867     ;	code size estimation:
                                    1- 2868     ;	 1096+  362 =  1458 instructions ( 3640 byte)
                                    1- 2870     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
