
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_Quarter_VDD_Convert
                                    1-  136     	extern	_checkBat
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyCtr
                                    1-  139     	extern	_pwmStop
                                    1-  140     	extern	_pwmInit
                                    1-  141     	extern	_gotoSleep
                                    1-  142     	extern	_initSys
                                    1-  143     	extern	_refreshNub
                                    1-  144     	extern	_checkIRKey
                                    1-  145     	extern	_chrgCtr
                                    1-  146     	extern	_isr
                                    1-  147     	extern	_main
                                    1-  148     	extern	_keyRead
                                    1-  149     	extern	_R_Quarter_VDD_DATA
                                    1-  150     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  151     	extern	_intCount
                                    1-  152     	extern	_IntFlag
                                    1-  153     	extern	_baiweiNum
                                    1-  154     	extern	_shiweiNum
                                    1-  155     	extern	_geweiNum
                                    1-  156     	extern	_showFlag
                                    1-  157     	extern	_irStep
                                    1-  158     	extern	_revCount
                                    1-  159     	extern	_checkCount
                                    1-  160     	extern	_pwmTime
                                    1-  161     	extern	_sendFlag
                                    1-  162     	extern	_workTime
                                    1-  163     	extern	_workStep
                                    1-  164     	extern	_pwFlag
                                    1-  165     	extern	_pwShowTime
                                    1-  166     	extern	_stepShowTime
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_keyCount
                                    1-  169     	extern	_longPressFlag
                                    1-  170     	extern	_sleepTime
                                    1-  171     	extern	_fullFlag
                                    1-  172     	extern	_shanTime
                                    1-  173     	extern	_count1s
                                    1-  174     	extern	_waitTime
                                    1-  175     	extern	_offShowTime
                                    1-  176     	extern	_notRecv
                                    1-  177     	extern	_zhedangFlag
                                    1-  178     	extern	_zhedangTime
                                    1-  179     	extern	_sleepFlag
                                    1-  180     	extern	_powerShi
                                    1-  181     	extern	_powerGe
                                    1-  182     	extern	_count5s
                                    1-  183     	extern	_count250ms
                                    1-  184     	extern	_checkBatTime
                                    1-  185     	extern	_fullTime
                                    1-  186     	extern	_waitBatTime
                                    1-  187     	extern	_startTime
                                    1-  188     	extern	_zhedangCount
                                    1-  189     	extern	_resetTime
                                    1-  191     	extern PSAVE
                                    1-  192     	extern SSAVE
                                    1-  193     	extern WSAVE
                                    1-  194     	extern STK04
                                    1-  195     	extern STK03
                                    1-  196     	extern STK02
                                    1-  197     	extern STK01
                                    1-  198     	extern STK00
                                    1-  200     .segment "uninit", 0x20000040
 20000040                           1-  201     PSAVE:
                                    1-  202     	.res 1
 20000041                           1-  203     SSAVE:
                                    1-  204     	.res 1
 20000042                           1-  205     WSAVE:
                                    1-  206     	.res 1
 20000043                           1-  207     STK04:
                                    1-  208     	.res 1
 20000044                           1-  209     STK03:
                                    1-  210     	.res 1
 20000045                           1-  211     STK02:
                                    1-  212     	.res 1
 20000046                           1-  213     STK01:
                                    1-  214     	.res 1
 20000047                           1-  215     STK00:
                                    1-  216     	.res 1
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; global definitions
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_Quarter_VDD_DATA:
                                    1-  223     	.res	2
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_Quarter_VDD_DATA_LB:
                                    1-  228     	.res	1
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; absolute symbol definitions
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ;--------------------------------------------------------
                                    1-  235     ; compiler-defined variables
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x104E:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x104F:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x104C:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x104D:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1049:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x104A:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1048:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1046:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1047:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x1040:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1041:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1042:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1043:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1045:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1044:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x103A:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x103B:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x103C:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x103F:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x1038:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1039:
                                    1-  299     	.res	1
                                    1-  300     ;--------------------------------------------------------
                                    1-  301     ; initialized data
                                    1-  302     ;--------------------------------------------------------
                                    1-  304     .segment "idata"
     0000                           1-  305     _intCount:
     0000 0000                      1-  306     	dw	0x00
                                    1-  310     .segment "idata"
     0000                           1-  311     _IntFlag:
     0000 0000                      1-  312     	dw	0x00
                                    1-  316     .segment "idata"
     0000                           1-  317     _baiweiNum:
     0000 0000                      1-  318     	dw	0x00
                                    1-  322     .segment "idata"
     0000                           1-  323     _shiweiNum:
     0000 0000                      1-  324     	dw	0x00
                                    1-  328     .segment "idata"
     0000                           1-  329     _geweiNum:
     0000 0000                      1-  330     	dw	0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _showFlag:
     0000 0000                      1-  336     	dw	0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _irStep:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _revCount:
     0000 0000                      1-  348     	dw	0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _checkCount:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _pwmTime:
     0000 0000                      1-  360     	dw	0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _sendFlag:
     0000 0000                      1-  366     	dw	0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _workTime:
     0000 0000                      1-  372     	dw	0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _workStep:
     0000 0000                      1-  378     	dw	0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _pwFlag:
     0000 0000                      1-  384     	dw	0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _pwShowTime:
     0000 0000                      1-  390     	dw	0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _stepShowTime:
     0000 0000                      1-  396     	dw	0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _pwStep:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _keyCount:
     0000 0000                      1-  408     	dw	0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _longPressFlag:
     0000 0000                      1-  414     	dw	0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _sleepTime:
     0000 0000                      1-  420     	dw	0x00
                                    1-  424     .segment "idata"
     0000                           1-  425     _fullFlag:
     0000 0000                      1-  426     	dw	0x00
                                    1-  430     .segment "idata"
     0000                           1-  431     _shanTime:
     0000 0000 0000                 1-  432     	dw	0x00, 0x00
                                    1-  436     .segment "idata"
     0000                           1-  437     _count1s:
     0000 0000                      1-  438     	dw	0x00
                                    1-  442     .segment "idata"
     0000                           1-  443     _waitTime:
     0000 0000 0000                 1-  444     	dw	0x00, 0x00
                                    1-  448     .segment "idata"
     0000                           1-  449     _offShowTime:
     0000 0000                      1-  450     	dw	0x00
                                    1-  454     .segment "idata"
     0000                           1-  455     _notRecv:
     0000 0000                      1-  456     	dw	0x00
                                    1-  460     .segment "idata"
     0000                           1-  461     _zhedangFlag:
     0000 0000                      1-  462     	dw	0x00
                                    1-  466     .segment "idata"
     0000                           1-  467     _zhedangTime:
     0000 0000                      1-  468     	dw	0x00
                                    1-  472     .segment "idata"
     0000                           1-  473     _sleepFlag:
     0000 0000                      1-  474     	dw	0x00
                                    1-  478     .segment "idata"
     0000                           1-  479     _powerShi:
     0000 0000                      1-  480     	dw	0x00
                                    1-  484     .segment "idata"
     0000                           1-  485     _powerGe:
     0000 0000                      1-  486     	dw	0x00
                                    1-  490     .segment "idata"
     0000                           1-  491     _count5s:
     0000 0000 0000                 1-  492     	dw	0x00, 0x00
                                    1-  496     .segment "idata"
     0000                           1-  497     _count250ms:
     0000 0000                      1-  498     	dw	0x00
                                    1-  502     .segment "idata"
     0000                           1-  503     _checkBatTime:
     0000 0000                      1-  504     	dw	0x00
                                    1-  508     .segment "idata"
     0000                           1-  509     _fullTime:
     0000 0000                      1-  510     	dw	0x00
                                    1-  514     .segment "idata"
     0000                           1-  515     _waitBatTime:
     0000 0000                      1-  516     	dw	0x00
                                    1-  520     .segment "idata"
     0000                           1-  521     _startTime:
     0000 0000                      1-  522     	dw	0x00
                                    1-  526     .segment "idata"
     0000                           1-  527     _zhedangCount:
     0000 0000                      1-  528     	dw	0x00
                                    1-  532     .segment "idata"
     0000                           1-  533     _resetTime:
     0000 0000                      1-  534     	dw	0x00
                                    1-  538     .segment "idata"
     0000                           1-  539     _numArray:
     0000 003F                      1-  540     	dw	0x3f
     0001 0006                      1-  541     	dw	0x06
     0002 005B                      1-  542     	dw	0x5b
     0003 004F                      1-  543     	dw	0x4f
     0004 0066                      1-  544     	dw	0x66
     0005 006D                      1-  545     	dw	0x6d
     0006 007D                      1-  546     	dw	0x7d
     0007 0007                      1-  547     	dw	0x07
     0008 007F                      1-  548     	dw	0x7f
     0009 006F                      1-  549     	dw	0x6f
     000A 0071                      1-  550     	dw	0x71
     000B 0079                      1-  551     	dw	0x79
     000C 0050                      1-  552     	dw	0x50
                                    1-  555     ;--------------------------------------------------------
                                    1-  556     ; overlayable items in internal ram 
                                    1-  557     ;--------------------------------------------------------
                                    1-  558     ;	udata_ovr
                                    1-  559     ;--------------------------------------------------------
                                    1-  560     ; reset vector 
                                    1-  561     ;--------------------------------------------------------
                                    1-  562     ORG	0x0000
     0000 3rrr                      1-  563     	LGOTO	__nyc_ny8_startup
                                    1-  564     ;--------------------------------------------------------
                                    1-  565     ; interrupt and initialization code
                                    1-  566     ;--------------------------------------------------------
                                    1-  567     ORG 0x0008
                                    1-  568     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  570     .segment "code"
     0000                           1-  571     __sdcc_interrupt:
                                    1-  572     ;***
                                    1-  573     ;  pBlock Stats: dbName = I
                                    1-  574     ;***
                                    1-  575     ;2 compiler assigned registers:
                                    1-  576     ;   STK00
                                    1-  577     ;   STK01
                                    1-  578     ;; Starting pCode block
     0000                           1-  579     _isr:
                                    1-  580     ; 0 exit points
                                    1-  581     	.line	82, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  582     	MOVAR	WSAVE
     0001 1503                      1-  583     	SWAPR	STATUS,W
     0002 0283                      1-  584     	CLRR	STATUS
     0003 00rr                      1-  585     	MOVAR	SSAVE
     0004 010A                      1-  586     	MOVR	PCHBUF,W
     0005 028A                      1-  587     	CLRR	PCHBUF
     0006 00rr                      1-  588     	MOVAR	PSAVE
     0007 0104                      1-  589     	MOVR	FSR,W
                                    1-  590     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  591     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  592     	MOVR	STK00,W
                                    1-  593     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  594     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  595     	MOVR	STK01,W
                                    1-  596     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  597     	MOVAR	___sdcc_saved_stk01
                                    1-  598     	.line	84, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  599     	BTRSS	_INTFbits,0
                                    1-  600     	MGOTO	_00120_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  601     	.line	86, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  602     	MOVIA	0x37
     0013 03rr                      1-  603     	ADDAR	_TMR0,F
                                    1-  604     	.line	88, "main.c"; 	if(++intCount >= 100)
                                    1-  605     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  606     	INCR	_intCount,F
                                    1-  607     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  608     	MOVIA	0x64
     0017 04rr                      1-  609     	SUBAR	_intCount,W
     0018 0803                      1-  610     	BTRSS	STATUS,0
                                    1-  611     	MGOTO	_00120_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  612     	.line	90, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  613     	MOVIA	0x01
                                    1-  614     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  615     	MOVAR	_IntFlag
                                    1-  616     	.line	91, "main.c"; 	intCount = 0;	
                                    1-  617     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  618     	CLRR	_intCount
                                    1-  619     	.line	92, "main.c"; 	if(++count1s > 100)
                                    1-  620     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  621     	INCR	_count1s,F
                                    1-  622     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  623     ;;unsigned compare: left >= lit (0x65=101), size=1
     0021 2165                      1-  624     	MOVIA	0x65
     0022 04rr                      1-  625     	SUBAR	_count1s,W
     0023 0803                      1-  626     	BTRSS	STATUS,0
                                    1-  627     	MGOTO	_00120_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  628     	.line	94, "main.c"; 	count1s = 0;
     0025 02rr                      1-  629     	CLRR	_count1s
                                    1-  630     	.line	95, "main.c"; 	if(stepShowTime > 0)
                                    1-  631     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  632     	MOVR	_stepShowTime,W
     0028 0D03                      1-  633     	BTRSC	STATUS,2
                                    1-  634     	MGOTO	_00113_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  635     	.line	96, "main.c"; 	stepShowTime--;
     002A 06rr                      1-  636     	DECR	_stepShowTime,F
                                    1-  637     	MGOTO	_00120_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  638     _00113_DS_:
                                    1-  639     	.line	97, "main.c"; 	else if(pwShowTime > 0)
                                    1-  640     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  641     	MOVR	_pwShowTime,W
     002E 0D03                      1-  642     	BTRSC	STATUS,2
                                    1-  643     	MGOTO	_00110_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  644     	.line	99, "main.c"; 	pwShowTime--;
     0030 06rr                      1-  645     	DECR	_pwShowTime,F
                                    1-  646     	MGOTO	_00120_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  647     _00110_DS_:
                                    1-  648     	.line	101, "main.c"; 	else if(offShowTime > 0)
                                    1-  649     	BANKSEL	_offShowTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  650     	MOVR	_offShowTime,W
     0034 0D03                      1-  651     	BTRSC	STATUS,2
                                    1-  652     	MGOTO	_00120_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  653     	.line	103, "main.c"; 	--offShowTime;
     0036 17rr                      1-  654     	DECRSZ	_offShowTime,F
                                    1-  655     	.line	104, "main.c"; 	if(offShowTime == 0)
                                    1-  656     	MGOTO	_00120_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  657     	.line	105, "main.c"; 	sleepFlag = 1;
     0038 2101                      1-  658     	MOVIA	0x01
                                    1-  659     	BANKSEL	_sleepFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1-  660     	MOVAR	_sleepFlag
     003B                           1-  661     _00120_DS_:
                                    1-  662     	.line	122, "main.c"; 	if(INTFbits.PABIF)
     003B 08rr                      1-  663     	BTRSS	_INTFbits,1
                                    1-  664     	MGOTO	_00122_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  665     	.line	124, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003D 21FD                      1-  666     	MOVIA	0xfd
     003E 00rr                      1-  667     	MOVAR	_INTF
                                    1-  668     	.line	125, "main.c"; 	revCount++;
                                    1-  669     	BANKSEL	_revCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 05rr                      1-  670     	INCR	_revCount,F
     0041                           1-  671     _00122_DS_:
                                    1-  672     	.line	128, "main.c"; 	INTF = 0;
     0041 02rr                      1-  673     	CLRR	_INTF
                                    1-  674     	.line	130, "main.c"; 	}
                                    1-  675     	BANKSEL	___sdcc_saved_stk01
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  676     	MOVR	___sdcc_saved_stk01,W
     0044 00rr                      1-  677     	MOVAR	STK01
                                    1-  678     	BANKSEL	___sdcc_saved_stk00
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  679     	MOVR	___sdcc_saved_stk00,W
     0047 00rr                      1-  680     	MOVAR	STK00
                                    1-  681     	BANKSEL	___sdcc_saved_fsr
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  682     	MOVR	___sdcc_saved_fsr,W
     004A 0084                      1-  683     	MOVAR	FSR
     004B 01rr                      1-  684     	MOVR	PSAVE,W
     004C 008A                      1-  685     	MOVAR	PCHBUF
     004D 0283                      1-  686     	CLRR	STATUS
     004E 15rr                      1-  687     	SWAPR	SSAVE,W
     004F 0083                      1-  688     	MOVAR	STATUS
     0050 15rr                      1-  689     	SWAPR	WSAVE,F
     0051 15rr                      1-  690     	SWAPR	WSAVE,W
     0052                           1-  691     END_OF_INTERRUPT:
     0052 0011                      1-  692     	RETIE	
                                    1-  694     ;--------------------------------------------------------
                                    1-  695     ; code
                                    1-  696     ;--------------------------------------------------------
                                    1-  697     ;***
                                    1-  698     ;  pBlock Stats: dbName = M
                                    1-  699     ;***
                                    1-  700     ;has an exit
                                    1-  701     ;functions called:
                                    1-  702     ;   _initSys
                                    1-  703     ;   _initAD
                                    1-  704     ;   _refreshNub
                                    1-  705     ;   _refreshNub
                                    1-  706     ;   _setInput
                                    1-  707     ;   __divuchar
                                    1-  708     ;   __moduchar
                                    1-  709     ;   _delay
                                    1-  710     ;   _delay
                                    1-  711     ;   _delay
                                    1-  712     ;   _delay
                                    1-  713     ;   _checkIRKey
                                    1-  714     ;   _delay
                                    1-  715     ;   _keyCtr
                                    1-  716     ;   _checkBat
                                    1-  717     ;   _chrgCtr
                                    1-  718     ;   _gotoSleep
                                    1-  719     ;   _gotoSleep
                                    1-  720     ;   _delay
                                    1-  721     ;   _initSys
                                    1-  722     ;   _initAD
                                    1-  723     ;   _refreshNub
                                    1-  724     ;   _refreshNub
                                    1-  725     ;   _setInput
                                    1-  726     ;   __divuchar
                                    1-  727     ;   __moduchar
                                    1-  728     ;   _delay
                                    1-  729     ;   _delay
                                    1-  730     ;   _delay
                                    1-  731     ;   _delay
                                    1-  732     ;   _checkIRKey
                                    1-  733     ;   _delay
                                    1-  734     ;   _keyCtr
                                    1-  735     ;   _checkBat
                                    1-  736     ;   _chrgCtr
                                    1-  737     ;   _gotoSleep
                                    1-  738     ;   _gotoSleep
                                    1-  739     ;   _delay
                                    1-  740     ;4 compiler assigned registers:
                                    1-  741     ;   STK00
                                    1-  742     ;   r0x104E
                                    1-  743     ;   r0x104F
                                    1-  744     ;   r0x1050
                                    1-  745     ;; Starting pCode block
                                    1-  746     .segment "code"; module=main, function=_main
                                    1-  748     ;local variable name mapping:
     0000                           1-  750     _main:
                                    1-  751     ; 2 exit points
                                    1-  752     	.line	134, "main.c"; 	initSys();
                                    1-  753     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  754     	.line	135, "main.c"; 	initAD();
                                    1-  755     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  756     	.line	136, "main.c"; 	startTime = 200;
     0002 21C8                      1-  757     	MOVIA	0xc8
                                    1-  758     	BANKSEL	_startTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  759     	MOVAR	_startTime
     0005                           1-  760     _00196_DS_:
                                    1-  761     	.line	140, "main.c"; 	CLRWDT();							// Clear WatchDog
     0005 0002                      1-  762     	clrwdt
                                    1-  763     	.line	141, "main.c"; 	if(showFlag)
                                    1-  764     	BANKSEL	_showFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  765     	MOVR	_showFlag,W
     0008 0D03                      1-  766     	BTRSC	STATUS,2
                                    1-  767     	MGOTO	_00135_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  768     	.line	142, "main.c"; 	refreshNub();
                                    1-  769     	MCALL	_refreshNub
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  770     	MGOTO	_00136_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1-  771     _00135_DS_:
                                    1-  772     	.line	145, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  773     	BANKSEL	_keyCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  774     	MOVR	_keyCount,W
     000E 0D03                      1-  775     	BTRSC	STATUS,2
                                    1-  776     	MGOTO	_00131_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  777     	BANKSEL	_pwFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  778     	MOVR	_pwFlag,W
     0012 2401                      1-  779     	XORIA	0x01
     0013 0903                      1-  780     	BTRSS	STATUS,2
                                    1-  781     	MGOTO	_00131_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  782     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  783     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  784     	.line	147, "main.c"; 	if(pwStep > 99)
     0015 2164                      1-  785     	MOVIA	0x64
                                    1-  786     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1-  787     	SUBAR	_pwStep,W
     0018 0803                      1-  788     	BTRSS	STATUS,0
                                    1-  789     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  790     	.line	149, "main.c"; 	baiweiNum = 1;
     001A 2101                      1-  791     	MOVIA	0x01
                                    1-  792     	BANKSEL	_baiweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  793     	MOVAR	_baiweiNum
                                    1-  794     	.line	150, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  795     	BANKSEL	_geweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  796     	CLRR	_geweiNum
                                    1-  797     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1-  798     	CLRR	_shiweiNum
                                    1-  799     	MGOTO	_00129_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1-  800     _00128_DS_:
                                    1-  801     	.line	154, "main.c"; 	baiweiNum = 0;
                                    1-  802     	BANKSEL	_baiweiNum
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  803     	CLRR	_baiweiNum
                                    1-  804     	.line	155, "main.c"; 	shiweiNum = powerShi;
                                    1-  805     	BANKSEL	_powerShi
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  806     	MOVR	_powerShi,W
                                    1-  807     	BANKSEL	_shiweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  808     	MOVAR	_shiweiNum
                                    1-  809     	.line	156, "main.c"; 	geweiNum = powerGe;
                                    1-  810     	BANKSEL	_powerGe
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  811     	MOVR	_powerGe,W
                                    1-  812     	BANKSEL	_geweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  813     	MOVAR	_geweiNum
     002C                           1-  814     _00129_DS_:
                                    1-  815     	.line	158, "main.c"; 	refreshNub();
                                    1-  816     	MCALL	_refreshNub
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  817     	MGOTO	_00136_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1-  818     _00131_DS_:
                                    1-  819     	.line	162, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  820     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  821     	CLRR	_geweiNum
                                    1-  822     	BANKSEL	_shiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  823     	CLRR	_shiweiNum
                                    1-  824     	BANKSEL	_baiweiNum
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 02rr                      1-  825     	CLRR	_baiweiNum
                                    1-  826     	.line	163, "main.c"; 	setInput();
                                    1-  827     	MCALL	_setInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
     0035                           1-  828     _00136_DS_:
                                    1-  829     	.line	166, "main.c"; 	if(!IntFlag)
                                    1-  830     	BANKSEL	_IntFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  831     	MOVR	_IntFlag,W
     0037 0D03                      1-  832     	BTRSC	STATUS,2
                                    1-  833     	MGOTO	_00196_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  834     	.line	168, "main.c"; 	IntFlag = 0;
     0039 02rr                      1-  835     	CLRR	_IntFlag
                                    1-  836     	.line	169, "main.c"; 	powerShi = pwStep/10;
     003A 210A                      1-  837     	MOVIA	0x0a
     003B 00rr                      1-  838     	MOVAR	STK00
                                    1-  839     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  840     	MOVR	_pwStep,W
                                    1-  841     	MCALL	__divuchar
     003E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  842     	BANKSEL	_powerShi
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1-  843     	MOVAR	_powerShi
                                    1-  844     	.line	170, "main.c"; 	powerGe = pwStep%10;
     0041 210A                      1-  845     	MOVIA	0x0a
     0042 00rr                      1-  846     	MOVAR	STK00
                                    1-  847     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  848     	MOVR	_pwStep,W
                                    1-  849     	MCALL	__moduchar
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  850     	BANKSEL	_powerGe
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1-  851     	MOVAR	_powerGe
                                    1-  852     	.line	172, "main.c"; 	if(waitTime > 0)
                                    1-  853     	BANKSEL	_waitTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  854     	MOVR	_waitTime,W
     004A 11rr                      1-  855     	IORAR	(_waitTime + 1),W
     004B 0D03                      1-  856     	BTRSC	STATUS,2
                                    1-  857     	MGOTO	_00177_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  858     	.line	173, "main.c"; 	waitTime--;
     004D 21FF                      1-  859     	MOVIA	0xff
     004E 03rr                      1-  860     	ADDAR	_waitTime,F
     004F 0803                      1-  861     	BTRSS	STATUS,0
     0050 06rr                      1-  862     	DECR	(_waitTime + 1),F
                                    1-  863     	MGOTO	_00178_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  864     _00177_DS_:
                                    1-  865     	.line	174, "main.c"; 	else if(pwFlag)
                                    1-  866     	BANKSEL	_pwFlag
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  867     	MOVR	_pwFlag,W
     0054 0D03                      1-  868     	BTRSC	STATUS,2
                                    1-  869     	MGOTO	_00178_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  870     	.line	177, "main.c"; 	if(++count250ms >= 10)
                                    1-  871     	BANKSEL	_count250ms
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1-  872     	INCR	_count250ms,F
                                    1-  873     ;;unsigned compare: left < lit (0xA=10), size=1
     0058 210A                      1-  874     	MOVIA	0x0a
     0059 04rr                      1-  875     	SUBAR	_count250ms,W
     005A 0803                      1-  876     	BTRSS	STATUS,0
                                    1-  877     	MGOTO	_00178_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  878     	.line	180, "main.c"; 	count250ms = 0;
     005C 02rr                      1-  879     	CLRR	_count250ms
                                    1-  880     	.line	181, "main.c"; 	zhedangCount = 0;
                                    1-  881     	BANKSEL	_zhedangCount
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 02rr                      1-  882     	CLRR	_zhedangCount
                                    1-  883     	.line	183, "main.c"; 	revCount = 0;
                                    1-  884     	BANKSEL	_revCount
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1-  885     	CLRR	_revCount
                                    1-  886     	.line	184, "main.c"; 	PORTBbits.PB1 = 1;						// Set PB[1]= 1
     0061 18rr                      1-  887     	BSR	_PORTBbits,1
                                    1-  888     	.line	185, "main.c"; 	IRCR = C_IR_38K | C_IR_En;	
     0062 2101                      1-  889     	MOVIA	0x01
     0063 00rr                      1-  890     	SFUN	_IRCR
                                    1-  891     	.line	186, "main.c"; 	delay(10);
     0064 210A                      1-  892     	MOVIA	0x0a
                                    1-  893     	MCALL	_delay
     0065 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  894     	.line	187, "main.c"; 	PORTA |= 0x40;
                                    1-  895     	BANKSEL	_PORTA
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 1Brr                      1-  896     	BSR	_PORTA,6
                                    1-  897     	.line	188, "main.c"; 	for(i=0;i<6;i++)
                                    1-  898     	BANKSEL	r0x104E
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 02rr                      1-  899     	CLRR	r0x104E
     006A                           1-  900     _00198_DS_:
                                    1-  901     	.line	190, "main.c"; 	delay(10);
     006A 210A                      1-  902     	MOVIA	0x0a
                                    1-  903     	MCALL	_delay
     006B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  904     	.line	188, "main.c"; 	for(i=0;i<6;i++)
                                    1-  905     	BANKSEL	r0x104E
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 05rr                      1-  906     	INCR	r0x104E,F
                                    1-  907     ;;unsigned compare: left < lit (0x6=6), size=1
     006E 2106                      1-  908     	MOVIA	0x06
     006F 04rr                      1-  909     	SUBAR	r0x104E,W
     0070 0803                      1-  910     	BTRSS	STATUS,0
                                    1-  911     	MGOTO	_00198_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  912     	.line	193, "main.c"; 	PORTBbits.PB1 = 0;						// Set PB[1]= 1
     0072 1Crr                      1-  913     	BCR	_PORTBbits,1
                                    1-  914     	.line	194, "main.c"; 	IRCR = C_IR_38K;
     0073 0200                      1-  915     	CLRA	
     0074 00rr                      1-  916     	SFUN	_IRCR
                                    1-  917     	.line	195, "main.c"; 	PORTA &= 0xBF;
                                    1-  918     	BANKSEL	_PORTA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 1Frr                      1-  919     	BCR	_PORTA,6
                                    1-  920     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  921     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1-  922     	.line	196, "main.c"; 	if(revCount > 5)
     0077 2106                      1-  923     	MOVIA	0x06
                                    1-  924     	BANKSEL	_revCount
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 04rr                      1-  925     	SUBAR	_revCount,W
     007A 0803                      1-  926     	BTRSS	STATUS,0
                                    1-  927     	MGOTO	_00170_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  928     	.line	198, "main.c"; 	revCount = 0;
     007C 02rr                      1-  929     	CLRR	_revCount
                                    1-  930     	.line	199, "main.c"; 	delay(30);
     007D 211E                      1-  931     	MOVIA	0x1e
                                    1-  932     	MCALL	_delay
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  933     	.line	200, "main.c"; 	PORTBbits.PB1 = 1;						// Set PB[1]= 1
     007F 18rr                      1-  934     	BSR	_PORTBbits,1
                                    1-  935     	.line	201, "main.c"; 	IRCR = C_IR_38K | C_IR_En;	
     0080 2101                      1-  936     	MOVIA	0x01
     0081 00rr                      1-  937     	SFUN	_IRCR
                                    1-  938     	.line	202, "main.c"; 	delay(10);
     0082 210A                      1-  939     	MOVIA	0x0a
                                    1-  940     	MCALL	_delay
     0083 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  941     	.line	203, "main.c"; 	PORTA |= 0x40;
                                    1-  942     	BANKSEL	_PORTA
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 1Brr                      1-  943     	BSR	_PORTA,6
                                    1-  944     	.line	204, "main.c"; 	zhedangCount = 0;
                                    1-  945     	BANKSEL	_zhedangCount
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 02rr                      1-  946     	CLRR	_zhedangCount
                                    1-  947     	.line	207, "main.c"; 	while(PORTBbits.PB3 == 1)
                                    1-  948     	BANKSEL	r0x104E
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 02rr                      1-  949     	CLRR	r0x104E
     008A                           1-  950     _00140_DS_:
                                    1-  951     	BANKSEL	r0x104F
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 02rr                      1-  952     	CLRR	r0x104F
     008C 0Drr                      1-  953     	BTRSC	_PORTBbits,3
     008D 05rr                      1-  954     	INCR	r0x104F,F
     008E 01rr                      1-  955     	MOVR	r0x104F,W
                                    1-  956     ;;1	MOVAR	r0x1050
     008F 2401                      1-  957     	XORIA	0x01
     0090 0903                      1-  958     	BTRSS	STATUS,2
                                    1-  959     	MGOTO	_00201_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  960     	.line	209, "main.c"; 	zhedangCount++;
                                    1-  961     	BANKSEL	_zhedangCount
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 05rr                      1-  962     	INCR	_zhedangCount,F
                                    1-  963     	MGOTO	_00140_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
     0095                           1-  964     _00201_DS_:
                                    1-  965     	.line	205, "main.c"; 	for(i=0;i<50;i++)
                                    1-  966     	BANKSEL	r0x104E
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 05rr                      1-  967     	INCR	r0x104E,F
                                    1-  968     ;;unsigned compare: left < lit (0x32=50), size=1
     0097 2132                      1-  969     	MOVIA	0x32
     0098 04rr                      1-  970     	SUBAR	r0x104E,W
     0099 0803                      1-  971     	BTRSS	STATUS,0
                                    1-  972     	MGOTO	_00140_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  973     	.line	213, "main.c"; 	PORTA &= 0xBF;
                                    1-  974     	BANKSEL	_PORTA
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 1Frr                      1-  975     	BCR	_PORTA,6
                                    1-  976     	.line	214, "main.c"; 	checkIRKey();
                                    1-  977     	MCALL	_checkIRKey
     009D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  978     	.line	215, "main.c"; 	PORTBbits.PB1 = 0;						// Set PB[1]= 1
     009E 1Crr                      1-  979     	BCR	_PORTBbits,1
                                    1-  980     	.line	216, "main.c"; 	IRCR = C_IR_38K;
     009F 0200                      1-  981     	CLRA	
     00A0 00rr                      1-  982     	SFUN	_IRCR
                                    1-  983     	.line	217, "main.c"; 	if(zhedangTime == 1)
                                    1-  984     	BANKSEL	_zhedangTime
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1-  985     	MOVR	_zhedangTime,W
     00A3 2401                      1-  986     	XORIA	0x01
     00A4 0903                      1-  987     	BTRSS	STATUS,2
                                    1-  988     	MGOTO	_00153_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  989     	.line	219, "main.c"; 	if(workStep == 1)
                                    1-  990     	BANKSEL	_workStep
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1-  991     	MOVR	_workStep,W
     00A8 2401                      1-  992     	XORIA	0x01
     00A9 0903                      1-  993     	BTRSS	STATUS,2
                                    1-  994     	MGOTO	_00150_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	.line	221, "main.c"; 	waitTime = 50;
     00AB 2132                      1-  996     	MOVIA	0x32
                                    1-  997     	BANKSEL	_waitTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 00rr                      1-  998     	MOVAR	_waitTime
     00AE 02rr                      1-  999     	CLRR	(_waitTime + 1)
                                    1- 1000     	MGOTO	_00153_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
     00B0                           1- 1001     _00150_DS_:
                                    1- 1002     	.line	223, "main.c"; 	else if(workStep == 2)
                                    1- 1003     	BANKSEL	_workStep
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 01rr                      1- 1004     	MOVR	_workStep,W
     00B2 2402                      1- 1005     	XORIA	0x02
     00B3 0903                      1- 1006     	BTRSS	STATUS,2
                                    1- 1007     	MGOTO	_00147_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1008     	.line	225, "main.c"; 	waitTime = 80;
     00B5 2150                      1- 1009     	MOVIA	0x50
                                    1- 1010     	BANKSEL	_waitTime
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1011     	MOVAR	_waitTime
     00B8 02rr                      1- 1012     	CLRR	(_waitTime + 1)
                                    1- 1013     	MGOTO	_00153_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
     00BA                           1- 1014     _00147_DS_:
                                    1- 1015     	.line	227, "main.c"; 	else if(workStep == 3)
                                    1- 1016     	BANKSEL	_workStep
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 01rr                      1- 1017     	MOVR	_workStep,W
     00BC 2403                      1- 1018     	XORIA	0x03
     00BD 0903                      1- 1019     	BTRSS	STATUS,2
                                    1- 1020     	MGOTO	_00153_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1021     	.line	229, "main.c"; 	waitTime = 120;
     00BF 2178                      1- 1022     	MOVIA	0x78
                                    1- 1023     	BANKSEL	_waitTime
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 1024     	MOVAR	_waitTime
     00C2 02rr                      1- 1025     	CLRR	(_waitTime + 1)
                                    1- 1026     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1027     ;;unsigned compare: left >= lit (0x6=6), size=1
     00C3                           1- 1028     _00153_DS_:
                                    1- 1029     	.line	234, "main.c"; 	if(zhedangCount > 5)
     00C3 2106                      1- 1030     	MOVIA	0x06
                                    1- 1031     	BANKSEL	_zhedangCount
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 04rr                      1- 1032     	SUBAR	_zhedangCount,W
     00C6 0803                      1- 1033     	BTRSS	STATUS,0
                                    1- 1034     	MGOTO	_00165_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1035     	.line	236, "main.c"; 	if(irStep == 1)
                                    1- 1036     	BANKSEL	_irStep
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 01rr                      1- 1037     	MOVR	_irStep,W
     00CA 2401                      1- 1038     	XORIA	0x01
     00CB 0903                      1- 1039     	BTRSS	STATUS,2
                                    1- 1040     	MGOTO	_00155_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1041     	.line	238, "main.c"; 	resetTime = 25;
     00CD 2119                      1- 1042     	MOVIA	0x19
                                    1- 1043     	BANKSEL	_resetTime
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 1044     	MOVAR	_resetTime
     00D0                           1- 1045     _00155_DS_:
                                    1- 1046     	.line	240, "main.c"; 	if(++zhedangTime > 40)
                                    1- 1047     	BANKSEL	_zhedangTime
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 05rr                      1- 1048     	INCR	_zhedangTime,F
                                    1- 1049     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1050     ;;unsigned compare: left >= lit (0x29=41), size=1
     00D2 2129                      1- 1051     	MOVIA	0x29
     00D3 04rr                      1- 1052     	SUBAR	_zhedangTime,W
     00D4 0803                      1- 1053     	BTRSS	STATUS,0
                                    1- 1054     	MGOTO	_00171_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1055     	.line	242, "main.c"; 	zhedangTime = 40;
     00D6 2128                      1- 1056     	MOVIA	0x28
     00D7 00rr                      1- 1057     	MOVAR	_zhedangTime
                                    1- 1058     	MGOTO	_00171_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1059     ;;unsigned compare: left < lit (0x2=2), size=1
     00D9                           1- 1060     _00165_DS_:
                                    1- 1061     	.line	245, "main.c"; 	else if(zhedangCount < 2)
     00D9 2102                      1- 1062     	MOVIA	0x02
                                    1- 1063     	BANKSEL	_zhedangCount
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 04rr                      1- 1064     	SUBAR	_zhedangCount,W
     00DC 0C03                      1- 1065     	BTRSC	STATUS,0
                                    1- 1066     	MGOTO	_00171_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1067     	.line	247, "main.c"; 	if(resetTime > 0)
                                    1- 1068     	BANKSEL	_resetTime
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 01rr                      1- 1069     	MOVR	_resetTime,W
     00E0 0903                      1- 1070     	BTRSS	STATUS,2
                                    1- 1071     	.line	249, "main.c"; 	resetTime--;
     00E1 17rr                      1- 1072     	DECRSZ	_resetTime,F
                                    1- 1073     	.line	251, "main.c"; 	if(resetTime == 0)
                                    1- 1074     	MGOTO	_00171_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1075     	.line	253, "main.c"; 	zhedangTime = 0;
                                    1- 1076     	BANKSEL	_zhedangTime
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 02rr                      1- 1077     	CLRR	_zhedangTime
                                    1- 1078     	.line	254, "main.c"; 	irStep = 0;			//移开了
                                    1- 1079     	BANKSEL	_irStep
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 02rr                      1- 1080     	CLRR	_irStep
                                    1- 1081     	MGOTO	_00171_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1082     ;;unsigned compare: left < lit (0x2=2), size=1
     00E8                           1- 1083     _00170_DS_:
                                    1- 1084     	.line	258, "main.c"; 	else if(revCount < 2)
     00E8 2102                      1- 1085     	MOVIA	0x02
                                    1- 1086     	BANKSEL	_revCount
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 04rr                      1- 1087     	SUBAR	_revCount,W
     00EB 0C03                      1- 1088     	BTRSC	STATUS,0
                                    1- 1089     	MGOTO	_00171_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1090     	.line	260, "main.c"; 	zhedangTime = 0;
                                    1- 1091     	BANKSEL	_zhedangTime
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 02rr                      1- 1092     	CLRR	_zhedangTime
                                    1- 1093     	.line	261, "main.c"; 	irStep = 0;			//移开了
                                    1- 1094     	BANKSEL	_irStep
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 02rr                      1- 1095     	CLRR	_irStep
     00F1                           1- 1096     _00171_DS_:
                                    1- 1097     	.line	263, "main.c"; 	delay(5);
     00F1 2105                      1- 1098     	MOVIA	0x05
                                    1- 1099     	MCALL	_delay
     00F2 2rrr                      3-   66 m1      LCALL rom_address
     00F3                           1- 1100     _00178_DS_:
                                    1- 1101     	.line	268, "main.c"; 	keyCtr();
                                    1- 1102     	MCALL	_keyCtr
     00F3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1103     	.line	269, "main.c"; 	if(++checkBatTime >= 20)
                                    1- 1104     	BANKSEL	_checkBatTime
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 05rr                      1- 1105     	INCR	_checkBatTime,F
                                    1- 1106     ;;unsigned compare: left < lit (0x14=20), size=1
     00F6 2114                      1- 1107     	MOVIA	0x14
     00F7 04rr                      1- 1108     	SUBAR	_checkBatTime,W
     00F8 0803                      1- 1109     	BTRSS	STATUS,0
                                    1- 1110     	MGOTO	_00182_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1111     	.line	271, "main.c"; 	checkBatTime = 0;
     00FA 02rr                      1- 1112     	CLRR	_checkBatTime
                                    1- 1113     	.line	272, "main.c"; 	if(workTime == 0)
                                    1- 1114     	BANKSEL	_workTime
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 1115     	MOVR	_workTime,W
     00FD 0D03                      1- 1116     	BTRSC	STATUS,2
                                    1- 1117     	.line	273, "main.c"; 	checkBat();
                                    1- 1118     	MCALL	_checkBat
     00FE 2rrr                      3-   66 m1      LCALL rom_address
     00FF                           1- 1119     _00182_DS_:
                                    1- 1120     	.line	275, "main.c"; 	chrgCtr();
                                    1- 1121     	MCALL	_chrgCtr
     00FF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1122     	.line	277, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0 && startTime == 0)
                                    1- 1123     	BANKSEL	_PORTA
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 01rr                      1- 1124     	MOVR	_PORTA,W
                                    1- 1125     	BANKSEL	r0x104E
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 00rr                      1- 1126     	MOVAR	r0x104E
                                    1- 1127     	BANKSEL	r0x104F
     0104 rrrr                      3-  110 m1      .banksel ram_address
     0105 02rr                      1- 1128     	CLRR	r0x104F
                                    1- 1129     	BANKSEL	r0x104E
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 07rr                      1- 1130     	COMR	r0x104E,W
     0108 00rr                      1- 1131     	MOVAR	r0x104E
                                    1- 1132     	BANKSEL	r0x104F
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 07rr                      1- 1133     	COMR	r0x104F,W
     010B 00rr                      1- 1134     	MOVAR	r0x104F
                                    1- 1135     	BANKSEL	r0x104E
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 0Arr                      1- 1136     	BTRSS	r0x104E,5
                                    1- 1137     	MGOTO	_00186_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1138     	BANKSEL	_keyCount
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 01rr                      1- 1139     	MOVR	_keyCount,W
     0111 0903                      1- 1140     	BTRSS	STATUS,2
                                    1- 1141     	MGOTO	_00186_DS_
     0112 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1142     	BANKSEL	_pwFlag
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 01rr                      1- 1143     	MOVR	_pwFlag,W
     0115 0903                      1- 1144     	BTRSS	STATUS,2
                                    1- 1145     	MGOTO	_00186_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1146     	BANKSEL	_stepShowTime
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 01rr                      1- 1147     	MOVR	_stepShowTime,W
     0119 0903                      1- 1148     	BTRSS	STATUS,2
                                    1- 1149     	MGOTO	_00186_DS_
     011A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1150     	BANKSEL	_pwShowTime
     011B rrrr                      3-  110 m1      .banksel ram_address
     011C 01rr                      1- 1151     	MOVR	_pwShowTime,W
     011D 0903                      1- 1152     	BTRSS	STATUS,2
                                    1- 1153     	MGOTO	_00186_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1154     	BANKSEL	_offShowTime
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 01rr                      1- 1155     	MOVR	_offShowTime,W
     0121 0903                      1- 1156     	BTRSS	STATUS,2
                                    1- 1157     	MGOTO	_00186_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1158     	BANKSEL	_startTime
     0123 rrrr                      3-  110 m1      .banksel ram_address
     0124 01rr                      1- 1159     	MOVR	_startTime,W
     0125 0903                      1- 1160     	BTRSS	STATUS,2
                                    1- 1161     	MGOTO	_00186_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1162     	.line	280, "main.c"; 	if(++sleepTime > 100)
                                    1- 1163     	BANKSEL	_sleepTime
     0127 rrrr                      3-  110 m1      .banksel ram_address
     0128 05rr                      1- 1164     	INCR	_sleepTime,F
                                    1- 1165     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1166     ;;unsigned compare: left >= lit (0x65=101), size=1
     0129 2165                      1- 1167     	MOVIA	0x65
     012A 04rr                      1- 1168     	SUBAR	_sleepTime,W
     012B 0C03                      1- 1169     	BTRSC	STATUS,0
                                    1- 1170     	.line	281, "main.c"; 	gotoSleep();
                                    1- 1171     	MCALL	_gotoSleep
     012C 2rrr                      3-   66 m1      LCALL rom_address
     012D                           1- 1172     _00186_DS_:
                                    1- 1173     	.line	283, "main.c"; 	if(sleepFlag)
                                    1- 1174     	BANKSEL	_sleepFlag
     012D rrrr                      3-  110 m1      .banksel ram_address
     012E 01rr                      1- 1175     	MOVR	_sleepFlag,W
     012F 0903                      1- 1176     	BTRSS	STATUS,2
                                    1- 1177     	.line	285, "main.c"; 	gotoSleep();
                                    1- 1178     	MCALL	_gotoSleep
     0130 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1179     	.line	287, "main.c"; 	delay(100);
     0131 2164                      1- 1180     	MOVIA	0x64
                                    1- 1181     	MCALL	_delay
     0132 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1182     	.line	287, "main.c"; 	//    	if(getbit(PORTB, 3) == 0)
                                    1- 1183     	MGOTO	_00196_DS_
     0133 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1184     	.line	309, "main.c"; 	}
                                    1- 1185     	RETURN	
     0134 0010                      3-   40 m1      ret
                                    1- 1186     ; exit point of _main
                                    1- 1188     ;***
                                    1- 1189     ;  pBlock Stats: dbName = C
                                    1- 1190     ;***
                                    1- 1191     ;has an exit
                                    1- 1192     ;2 compiler assigned registers:
                                    1- 1193     ;   r0x1038
                                    1- 1194     ;   r0x1039
                                    1- 1195     ;; Starting pCode block
                                    1- 1196     .segment "code"; module=main, function=_delay
                                    1- 1198     ;local variable name mapping:
     0000                           1- 1201     _delay:
                                    1- 1202     ; 2 exit points
                                    1- 1203     	.line	842, "main.c"; 	void delay(u8t count)
                                    1- 1204     	BANKSEL	r0x1038
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1205     	MOVAR	r0x1038
                                    1- 1206     	.line	845, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1- 1207     	MOVIA	0x01
                                    1- 1208     	BANKSEL	r0x1039
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1209     	MOVAR	r0x1039
     0005                           1- 1210     _00547_DS_:
                                    1- 1211     	BANKSEL	r0x1039
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1212     	MOVR	r0x1039,W
                                    1- 1213     	BANKSEL	r0x1038
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1214     	SUBAR	r0x1038,W
     0009 0803                      1- 1215     	BTRSS	STATUS,0
                                    1- 1216     	MGOTO	_00549_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1217     	BANKSEL	r0x1039
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1218     	INCR	r0x1039,F
                                    1- 1219     	MGOTO	_00547_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1220     _00549_DS_:
                                    1- 1221     	.line	847, "main.c"; 	}
                                    1- 1222     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1223     ; exit point of _delay
                                    1- 1225     ;***
                                    1- 1226     ;  pBlock Stats: dbName = C
                                    1- 1227     ;***
                                    1- 1228     ;has an exit
                                    1- 1229     ;; Starting pCode block
                                    1- 1230     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1232     _F_wait_eoc:
                                    1- 1233     ; 2 exit points
     0000                           1- 1234     _00540_DS_:
                                    1- 1235     	.line	838, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1236     	BTRSS	_ADMDbits,5
                                    1- 1237     	MGOTO	_00540_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1238     	.line	840, "main.c"; 	}
                                    1- 1239     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1240     ; exit point of _F_wait_eoc
                                    1- 1242     ;***
                                    1- 1243     ;  pBlock Stats: dbName = C
                                    1- 1244     ;***
                                    1- 1245     ;has an exit
                                    1- 1246     ;functions called:
                                    1- 1247     ;   _F_wait_eoc
                                    1- 1248     ;   _F_wait_eoc
                                    1- 1249     ;6 compiler assigned registers:
                                    1- 1250     ;   r0x103A
                                    1- 1251     ;   r0x103B
                                    1- 1252     ;   r0x103C
                                    1- 1253     ;   r0x103D
                                    1- 1254     ;   r0x103E
                                    1- 1255     ;   r0x103F
                                    1- 1256     ;; Starting pCode block
                                    1- 1257     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1259     ;local variable name mapping:
     0000                           1- 1262     _F_Quarter_VDD_Convert:
                                    1- 1263     ; 2 exit points
                                    1- 1264     	.line	823, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1265     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1266     	MOVAR	r0x103A
                                    1- 1267     	.line	826, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1- 1268     	MOVIA	0x9b
     0003 00rr                      1- 1269     	MOVAR	_ADMD
                                    1- 1270     	.line	827, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1271     	MOVIA	0x01
                                    1- 1272     	BANKSEL	r0x103B
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1273     	MOVAR	r0x103B
     0007                           1- 1274     _00533_DS_:
                                    1- 1275     	BANKSEL	r0x103B
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1276     	MOVR	r0x103B,W
                                    1- 1277     	BANKSEL	r0x103A
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1278     	SUBAR	r0x103A,W
     000B 0803                      1- 1279     	BTRSS	STATUS,0
                                    1- 1280     	MGOTO	_00535_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1281     	.line	829, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1282     	BSR	_ADMDbits,6
                                    1- 1283     	.line	830, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1284     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1285     	.line	831, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1286     	MOVIA	0x0f
     0010 10rr                      1- 1287     	ANDAR	_ADR,W
                                    1- 1288     ;;3	MOVAR	r0x103C
                                    1- 1289     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1290     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1291     	.line	832, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1292     	MOVR	_ADD,W
                                    1- 1293     	BANKSEL	r0x103C
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1294     	MOVAR	r0x103C
                                    1- 1295     ;;1	CLRR	r0x103D
                                    1- 1296     ;;101	MOVR	r0x103C,W
                                    1- 1297     ;;99	MOVAR	r0x103E
     0016 2100                      1- 1298     	MOVIA	0x00
                                    1- 1299     	BANKSEL	r0x103F
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1300     	MOVAR	r0x103F
                                    1- 1301     ;;100	MOVR	r0x103E,W
                                    1- 1302     	BANKSEL	r0x103C
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1303     	MOVR	r0x103C,W
                                    1- 1304     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1305     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1306     	BANKSEL	r0x103F
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1307     	MOVR	r0x103F,W
     001F 0C03                      1- 1308     	BTRSC	STATUS,0
     0020 05rr                      1- 1309     	INCR	r0x103F,W
     0021 0D03                      1- 1310     	BTRSC	STATUS,2
                                    1- 1311     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1312     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1313     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1314     _00001_DS_:
                                    1- 1315     	.line	827, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1316     	BANKSEL	r0x103B
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1317     	INCR	r0x103B,F
                                    1- 1318     	MGOTO	_00533_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1319     _00535_DS_:
                                    1- 1320     	.line	834, "main.c"; 	}
                                    1- 1321     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1322     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1324     ;***
                                    1- 1325     ;  pBlock Stats: dbName = C
                                    1- 1326     ;***
                                    1- 1327     ;has an exit
                                    1- 1328     ;functions called:
                                    1- 1329     ;   _F_Quarter_VDD_Convert
                                    1- 1330     ;   _F_Quarter_VDD_Convert
                                    1- 1331     ;6 compiler assigned registers:
                                    1- 1332     ;   r0x1040
                                    1- 1333     ;   r0x1041
                                    1- 1334     ;   r0x1042
                                    1- 1335     ;   r0x1043
                                    1- 1336     ;   r0x1044
                                    1- 1337     ;   r0x1045
                                    1- 1338     ;; Starting pCode block
                                    1- 1339     .segment "code"; module=main, function=_checkBat
                                    1- 1341     ;local variable name mapping:
     0000                           1- 1344     _checkBat:
                                    1- 1345     ; 2 exit points
                                    1- 1346     	.line	711, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1347     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1348     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1349     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1350     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1351     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1352     	.line	712, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1353     	MOVIA	0x08
                                    1- 1354     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1355     	.line	713, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1356     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1357     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1358     	ANDIA	0xf0
     000A 00rr                      1- 1359     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1360     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1361     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1362     	ANDIA	0x0f
     000E 11rr                      1- 1363     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1364     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1365     	.line	714, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1366     	MOVIA	0xf0
                                    1- 1367     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1368     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1369     	.line	715, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1370     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1371     	BANKSEL	r0x1042
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1372     	MOVAR	r0x1042
                                    1- 1373     	BANKSEL	r0x1040
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1374     	MOVAR	r0x1040
                                    1- 1375     	BANKSEL	r0x1041
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1376     	CLRR	r0x1041
                                    1- 1377     ;;104	MOVR	r0x1040,W
     001A 2100                      1- 1378     	MOVIA	0x00
                                    1- 1379     	BANKSEL	r0x1043
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1380     	MOVAR	r0x1043
                                    1- 1381     	BANKSEL	r0x1042
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1382     	MOVR	r0x1042,W
                                    1- 1383     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1384     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1385     	BANKSEL	r0x1043
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1386     	MOVR	r0x1043,W
     0023 0C03                      1- 1387     	BTRSC	STATUS,0
     0024 05rr                      1- 1388     	INCR	r0x1043,W
     0025 0D03                      1- 1389     	BTRSC	STATUS,2
                                    1- 1390     	MGOTO	_00002_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1391     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1392     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1393     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1394     _00002_DS_:
                                    1- 1395     	.line	716, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1396     	BCR	STATUS,0
                                    1- 1397     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1398     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1399     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1400     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1401     	BCR	STATUS,0
     002E 13rr                      1- 1402     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1403     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1404     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1405     	BCR	STATUS,0
     0031 13rr                      1- 1406     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1407     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1408     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1409     ;;unsigned compare: left >= lit (0x835=2101), size=2
                                    1- 1410     	.line	717, "main.c"; 	if(R_Quarter_VDD_DATA > 2100)
     0033 2108                      1- 1411     	MOVIA	0x08
     0034 04rr                      1- 1412     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1413     	BTRSS	STATUS,2
                                    1- 1414     	MGOTO	_00510_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 2135                      1- 1415     	MOVIA	0x35
     0038 04rr                      1- 1416     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1417     _00510_DS_:
     0039 0803                      1- 1418     	BTRSS	STATUS,0
                                    1- 1419     	MGOTO	_00446_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1420     	.line	719, "main.c"; 	if(++fullTime > 200)
                                    1- 1421     	BANKSEL	_fullTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 1422     	INCR	_fullTime,F
                                    1- 1423     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1424     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003D 21C9                      1- 1425     	MOVIA	0xc9
     003E 04rr                      1- 1426     	SUBAR	_fullTime,W
     003F 0803                      1- 1427     	BTRSS	STATUS,0
                                    1- 1428     	MGOTO	_00448_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1429     	.line	721, "main.c"; 	fullFlag = 1;
     0041 2101                      1- 1430     	MOVIA	0x01
                                    1- 1431     	BANKSEL	_fullFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1432     	MOVAR	_fullFlag
                                    1- 1433     	.line	722, "main.c"; 	pwStep = 100;
     0044 2164                      1- 1434     	MOVIA	0x64
                                    1- 1435     	BANKSEL	_pwStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1436     	MOVAR	_pwStep
                                    1- 1437     	MGOTO	_00448_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1438     ;;unsigned compare: left < lit (0x60E=1550), size=2
     0048                           1- 1439     _00446_DS_:
                                    1- 1440     	.line	725, "main.c"; 	else if(R_Quarter_VDD_DATA < 1550)
     0048 2106                      1- 1441     	MOVIA	0x06
                                    1- 1442     	BANKSEL	_R_Quarter_VDD_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1443     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     004B 0903                      1- 1444     	BTRSS	STATUS,2
                                    1- 1445     	MGOTO	_00512_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 210E                      1- 1446     	MOVIA	0x0e
     004E 04rr                      1- 1447     	SUBAR	_R_Quarter_VDD_DATA,W
     004F                           1- 1448     _00512_DS_:
     004F 0C03                      1- 1449     	BTRSC	STATUS,0
                                    1- 1450     	MGOTO	_00443_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1451     	.line	727, "main.c"; 	pwStep = 0;
                                    1- 1452     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 1453     	CLRR	_pwStep
                                    1- 1454     	.line	728, "main.c"; 	fullTime = 0;
                                    1- 1455     	BANKSEL	_fullTime
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1456     	CLRR	_fullTime
                                    1- 1457     	.line	729, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 1458     	BANKSEL	_PORTA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 0Err                      1- 1459     	BTRSC	_PORTA,5
                                    1- 1460     	MGOTO	_00448_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1461     	.line	731, "main.c"; 	pwFlag = 0;		//关机
                                    1- 1462     	BANKSEL	_pwFlag
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1463     	CLRR	_pwFlag
                                    1- 1464     	.line	732, "main.c"; 	workStep = 0;
                                    1- 1465     	BANKSEL	_workStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1- 1466     	CLRR	_workStep
                                    1- 1467     	.line	733, "main.c"; 	pwShowTime = 0;
                                    1- 1468     	BANKSEL	_pwShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 1469     	CLRR	_pwShowTime
                                    1- 1470     	.line	734, "main.c"; 	stepShowTime = 0;
                                    1- 1471     	BANKSEL	_stepShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 1472     	CLRR	_stepShowTime
                                    1- 1473     	.line	735, "main.c"; 	offShowTime = 0;
                                    1- 1474     	BANKSEL	_offShowTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1475     	CLRR	_offShowTime
                                    1- 1476     	MGOTO	_00448_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 1477     _00443_DS_:
                                    1- 1478     	.line	741, "main.c"; 	fullTime = 0;
                                    1- 1479     	BANKSEL	_fullTime
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 02rr                      1- 1480     	CLRR	_fullTime
                                    1- 1481     ;;unsigned compare: left < lit (0x802=2050), size=2
                                    1- 1482     	.line	742, "main.c"; 	if(R_Quarter_VDD_DATA >= 2050)
     0065 2108                      1- 1483     	MOVIA	0x08
                                    1- 1484     	BANKSEL	_R_Quarter_VDD_DATA
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 1485     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0068 0903                      1- 1486     	BTRSS	STATUS,2
                                    1- 1487     	MGOTO	_00513_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 2102                      1- 1488     	MOVIA	0x02
     006B 04rr                      1- 1489     	SUBAR	_R_Quarter_VDD_DATA,W
     006C                           1- 1490     _00513_DS_:
     006C 0803                      1- 1491     	BTRSS	STATUS,0
                                    1- 1492     	MGOTO	_00411_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1493     	.line	744, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 2050)/2 + 75;
     006E 21FE                      1- 1494     	MOVIA	0xfe
                                    1- 1495     	BANKSEL	_R_Quarter_VDD_DATA
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 03rr                      1- 1496     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1497     	BANKSEL	r0x1040
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1498     	MOVAR	r0x1040
     0073 21F7                      1- 1499     	MOVIA	0xf7
                                    1- 1500     	BANKSEL	r0x1041
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1501     	MOVAR	r0x1041
                                    1- 1502     	BANKSEL	_R_Quarter_VDD_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 1503     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0078 0C03                      1- 1504     	BTRSC	STATUS,0
     0079 05rr                      1- 1505     	INCR	(_R_Quarter_VDD_DATA + 1),W
     007A 0D03                      1- 1506     	BTRSC	STATUS,2
                                    1- 1507     	MGOTO	_00003_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1508     	BANKSEL	r0x1041
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 03rr                      1- 1509     	ADDAR	r0x1041,F
                                    1- 1510     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     007E                           1- 1511     _00003_DS_:
     007E 1C03                      1- 1512     	BCR	STATUS,0
                                    1- 1513     	BANKSEL	r0x1041
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 13rr                      1- 1514     	RRR	r0x1041,W
                                    1- 1515     	BANKSEL	r0x1043
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 1516     	MOVAR	r0x1043
                                    1- 1517     	BANKSEL	r0x1040
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 13rr                      1- 1518     	RRR	r0x1040,W
                                    1- 1519     	BANKSEL	r0x1042
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1520     	MOVAR	r0x1042
     0087 214B                      1- 1521     	MOVIA	0x4b
     0088 03rr                      1- 1522     	ADDAR	r0x1042,W
                                    1- 1523     	BANKSEL	r0x1040
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 1524     	MOVAR	r0x1040
                                    1- 1525     	BANKSEL	r0x1041
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 02rr                      1- 1526     	CLRR	r0x1041
     008D 14rr                      1- 1527     	RLR	r0x1041,F
                                    1- 1528     	BANKSEL	r0x1043
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 01rr                      1- 1529     	MOVR	r0x1043,W
                                    1- 1530     	BANKSEL	r0x1041
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 03rr                      1- 1531     	ADDAR	r0x1041,F
                                    1- 1532     	MGOTO	_00412_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1533     ;;unsigned compare: left < lit (0x7CE=1998), size=2
     0093                           1- 1534     _00411_DS_:
                                    1- 1535     	.line	746, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1998)
     0093 2107                      1- 1536     	MOVIA	0x07
                                    1- 1537     	BANKSEL	_R_Quarter_VDD_DATA
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 1538     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0096 0903                      1- 1539     	BTRSS	STATUS,2
                                    1- 1540     	MGOTO	_00514_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098 21CE                      1- 1541     	MOVIA	0xce
     0099 04rr                      1- 1542     	SUBAR	_R_Quarter_VDD_DATA,W
     009A                           1- 1543     _00514_DS_:
     009A 0803                      1- 1544     	BTRSS	STATUS,0
                                    1- 1545     	MGOTO	_00408_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1546     	.line	748, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1998)/2 + 49;
     009C 2132                      1- 1547     	MOVIA	0x32
                                    1- 1548     	BANKSEL	_R_Quarter_VDD_DATA
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 03rr                      1- 1549     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1550     	BANKSEL	r0x1042
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 1551     	MOVAR	r0x1042
     00A1 21F8                      1- 1552     	MOVIA	0xf8
                                    1- 1553     	BANKSEL	r0x1043
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1554     	MOVAR	r0x1043
                                    1- 1555     	BANKSEL	_R_Quarter_VDD_DATA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1556     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00A6 0C03                      1- 1557     	BTRSC	STATUS,0
     00A7 05rr                      1- 1558     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00A8 0D03                      1- 1559     	BTRSC	STATUS,2
                                    1- 1560     	MGOTO	_00004_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1561     	BANKSEL	r0x1043
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 03rr                      1- 1562     	ADDAR	r0x1043,F
                                    1- 1563     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00AC                           1- 1564     _00004_DS_:
     00AC 1C03                      1- 1565     	BCR	STATUS,0
                                    1- 1566     	BANKSEL	r0x1043
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 13rr                      1- 1567     	RRR	r0x1043,W
                                    1- 1568     	BANKSEL	r0x1044
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1569     	MOVAR	r0x1044
                                    1- 1570     	BANKSEL	r0x1042
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 13rr                      1- 1571     	RRR	r0x1042,W
                                    1- 1572     	BANKSEL	r0x1045
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 00rr                      1- 1573     	MOVAR	r0x1045
     00B5 2131                      1- 1574     	MOVIA	0x31
     00B6 03rr                      1- 1575     	ADDAR	r0x1045,W
                                    1- 1576     	BANKSEL	r0x1040
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 1577     	MOVAR	r0x1040
                                    1- 1578     	BANKSEL	r0x1041
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 02rr                      1- 1579     	CLRR	r0x1041
     00BB 14rr                      1- 1580     	RLR	r0x1041,F
                                    1- 1581     	BANKSEL	r0x1044
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 1582     	MOVR	r0x1044,W
                                    1- 1583     	BANKSEL	r0x1041
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 03rr                      1- 1584     	ADDAR	r0x1041,F
                                    1- 1585     	MGOTO	_00412_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1586     ;;unsigned compare: left < lit (0x75E=1886), size=2
     00C1                           1- 1587     _00408_DS_:
                                    1- 1588     	.line	750, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1886)
     00C1 2107                      1- 1589     	MOVIA	0x07
                                    1- 1590     	BANKSEL	_R_Quarter_VDD_DATA
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 04rr                      1- 1591     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00C4 0903                      1- 1592     	BTRSS	STATUS,2
                                    1- 1593     	MGOTO	_00515_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6 215E                      1- 1594     	MOVIA	0x5e
     00C7 04rr                      1- 1595     	SUBAR	_R_Quarter_VDD_DATA,W
     00C8                           1- 1596     _00515_DS_:
     00C8 0803                      1- 1597     	BTRSS	STATUS,0
                                    1- 1598     	MGOTO	_00405_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1599     	.line	752, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 1886)/4) + 21;
     00CA 21A2                      1- 1600     	MOVIA	0xa2
                                    1- 1601     	BANKSEL	_R_Quarter_VDD_DATA
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 03rr                      1- 1602     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1603     	BANKSEL	r0x1042
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 00rr                      1- 1604     	MOVAR	r0x1042
     00CF 21F8                      1- 1605     	MOVIA	0xf8
                                    1- 1606     	BANKSEL	r0x1043
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 00rr                      1- 1607     	MOVAR	r0x1043
                                    1- 1608     	BANKSEL	_R_Quarter_VDD_DATA
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 01rr                      1- 1609     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00D4 0C03                      1- 1610     	BTRSC	STATUS,0
     00D5 05rr                      1- 1611     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00D6 0D03                      1- 1612     	BTRSC	STATUS,2
                                    1- 1613     	MGOTO	_00005_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1614     	BANKSEL	r0x1043
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 03rr                      1- 1615     	ADDAR	r0x1043,F
                                    1- 1616     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00DA                           1- 1617     _00005_DS_:
     00DA 1C03                      1- 1618     	BCR	STATUS,0
                                    1- 1619     	BANKSEL	r0x1043
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 13rr                      1- 1620     	RRR	r0x1043,W
                                    1- 1621     	BANKSEL	r0x1044
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 00rr                      1- 1622     	MOVAR	r0x1044
                                    1- 1623     	BANKSEL	r0x1042
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 13rr                      1- 1624     	RRR	r0x1042,W
                                    1- 1625     	BANKSEL	r0x1045
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 00rr                      1- 1626     	MOVAR	r0x1045
                                    1- 1627     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00E3 1C03                      1- 1628     	BCR	STATUS,0
                                    1- 1629     	BANKSEL	r0x1044
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 13rr                      1- 1630     	RRR	r0x1044,F
                                    1- 1631     	BANKSEL	r0x1045
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 13rr                      1- 1632     	RRR	r0x1045,F
     00E8 2115                      1- 1633     	MOVIA	0x15
     00E9 03rr                      1- 1634     	ADDAR	r0x1045,W
                                    1- 1635     	BANKSEL	r0x1040
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 00rr                      1- 1636     	MOVAR	r0x1040
                                    1- 1637     	BANKSEL	r0x1041
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 02rr                      1- 1638     	CLRR	r0x1041
     00EE 14rr                      1- 1639     	RLR	r0x1041,F
                                    1- 1640     	BANKSEL	r0x1044
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 01rr                      1- 1641     	MOVR	r0x1044,W
                                    1- 1642     	BANKSEL	r0x1041
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 03rr                      1- 1643     	ADDAR	r0x1041,F
                                    1- 1644     	MGOTO	_00412_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1645     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1646     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     00F4                           1- 1647     _00405_DS_:
                                    1- 1648     	.line	754, "main.c"; 	else if(R_Quarter_VDD_DATA > 1550)
     00F4 2106                      1- 1649     	MOVIA	0x06
                                    1- 1650     	BANKSEL	_R_Quarter_VDD_DATA
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 04rr                      1- 1651     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00F7 0903                      1- 1652     	BTRSS	STATUS,2
                                    1- 1653     	MGOTO	_00516_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
     00F9 210F                      1- 1654     	MOVIA	0x0f
     00FA 04rr                      1- 1655     	SUBAR	_R_Quarter_VDD_DATA,W
     00FB                           1- 1656     _00516_DS_:
     00FB 0803                      1- 1657     	BTRSS	STATUS,0
                                    1- 1658     	MGOTO	_00402_DS_
     00FC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1659     	.line	756, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1550)/16;
     00FD 21F2                      1- 1660     	MOVIA	0xf2
                                    1- 1661     	BANKSEL	_R_Quarter_VDD_DATA
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 03rr                      1- 1662     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1663     	BANKSEL	r0x1042
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 00rr                      1- 1664     	MOVAR	r0x1042
     0102 21F9                      1- 1665     	MOVIA	0xf9
                                    1- 1666     	BANKSEL	r0x1043
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 00rr                      1- 1667     	MOVAR	r0x1043
                                    1- 1668     	BANKSEL	_R_Quarter_VDD_DATA
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 01rr                      1- 1669     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0107 0C03                      1- 1670     	BTRSC	STATUS,0
     0108 05rr                      1- 1671     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0109 0D03                      1- 1672     	BTRSC	STATUS,2
                                    1- 1673     	MGOTO	_00006_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1674     	BANKSEL	r0x1043
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 03rr                      1- 1675     	ADDAR	r0x1043,F
     010D                           1- 1676     _00006_DS_:
                                    1- 1677     	BANKSEL	r0x1042
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 15rr                      1- 1678     	SWAPR	r0x1042,W
     010F 220F                      1- 1679     	ANDIA	0x0f
                                    1- 1680     	BANKSEL	r0x1040
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 00rr                      1- 1681     	MOVAR	r0x1040
                                    1- 1682     	BANKSEL	r0x1043
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 15rr                      1- 1683     	SWAPR	r0x1043,W
                                    1- 1684     	BANKSEL	r0x1041
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 00rr                      1- 1685     	MOVAR	r0x1041
     0116 22F0                      1- 1686     	ANDIA	0xf0
                                    1- 1687     	BANKSEL	r0x1040
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 11rr                      1- 1688     	IORAR	r0x1040,F
                                    1- 1689     	BANKSEL	r0x1041
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 12rr                      1- 1690     	XORAR	r0x1041,F
                                    1- 1691     	MGOTO	_00412_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
     011C                           1- 1692     _00402_DS_:
                                    1- 1693     	.line	760, "main.c"; 	tempValue = 0;
                                    1- 1694     	BANKSEL	r0x1040
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 02rr                      1- 1695     	CLRR	r0x1040
                                    1- 1696     	BANKSEL	r0x1041
     011E rrrr                      3-  110 m1      .banksel ram_address
     011F 02rr                      1- 1697     	CLRR	r0x1041
     0120                           1- 1698     _00412_DS_:
                                    1- 1699     	.line	762, "main.c"; 	if(0x20 & PORTA)
                                    1- 1700     	BANKSEL	_PORTA
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 0Arr                      1- 1701     	BTRSS	_PORTA,5
                                    1- 1702     	MGOTO	_00440_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1703     ;;unsigned compare: left < lit (0x5=5), size=2
                                    1- 1704     	.line	766, "main.c"; 	if(tempValue < 5)
     0123 2100                      1- 1705     	MOVIA	0x00
                                    1- 1706     	BANKSEL	r0x1041
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 04rr                      1- 1707     	SUBAR	r0x1041,W
     0126 0903                      1- 1708     	BTRSS	STATUS,2
                                    1- 1709     	MGOTO	_00517_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
     0128 2105                      1- 1710     	MOVIA	0x05
                                    1- 1711     	BANKSEL	r0x1040
     0129 rrrr                      3-  110 m1      .banksel ram_address
     012A 04rr                      1- 1712     	SUBAR	r0x1040,W
     012B                           1- 1713     _00517_DS_:
     012B 0C03                      1- 1714     	BTRSC	STATUS,0
                                    1- 1715     	MGOTO	_00425_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1716     	.line	768, "main.c"; 	tempValue = 1;
     012D 2101                      1- 1717     	MOVIA	0x01
                                    1- 1718     	BANKSEL	r0x1040
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 00rr                      1- 1719     	MOVAR	r0x1040
                                    1- 1720     	BANKSEL	r0x1041
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 02rr                      1- 1721     	CLRR	r0x1041
                                    1- 1722     	MGOTO	_00010_DS_
     0132 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1723     ;;unsigned compare: left < lit (0x14=20), size=2
     0133                           1- 1724     _00425_DS_:
                                    1- 1725     	.line	770, "main.c"; 	else if(tempValue < 20)
     0133 2100                      1- 1726     	MOVIA	0x00
                                    1- 1727     	BANKSEL	r0x1041
     0134 rrrr                      3-  110 m1      .banksel ram_address
     0135 04rr                      1- 1728     	SUBAR	r0x1041,W
     0136 0903                      1- 1729     	BTRSS	STATUS,2
                                    1- 1730     	MGOTO	_00518_DS_
     0137 3rrr                      3-   63 m1      LGOTO rom_address
     0138 2114                      1- 1731     	MOVIA	0x14
                                    1- 1732     	BANKSEL	r0x1040
     0139 rrrr                      3-  110 m1      .banksel ram_address
     013A 04rr                      1- 1733     	SUBAR	r0x1040,W
     013B                           1- 1734     _00518_DS_:
     013B 0C03                      1- 1735     	BTRSC	STATUS,0
                                    1- 1736     	MGOTO	_00422_DS_
     013C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1737     	.line	772, "main.c"; 	tempValue = tempValue - 5;
     013D 21FB                      1- 1738     	MOVIA	0xfb
                                    1- 1739     	BANKSEL	r0x1040
     013E rrrr                      3-  110 m1      .banksel ram_address
     013F 03rr                      1- 1740     	ADDAR	r0x1040,F
     0140 0C03                      1- 1741     	BTRSC	STATUS,0
                                    1- 1742     	MGOTO	_00007_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1743     	BANKSEL	r0x1041
     0142 rrrr                      3-  110 m1      .banksel ram_address
     0143 06rr                      1- 1744     	DECR	r0x1041,F
     0144                           1- 1745     _00007_DS_:
                                    1- 1746     	MGOTO	_00010_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1747     ;;unsigned compare: left < lit (0x1E=30), size=2
     0145                           1- 1748     _00422_DS_:
                                    1- 1749     	.line	774, "main.c"; 	else if(tempValue < 30)
     0145 2100                      1- 1750     	MOVIA	0x00
                                    1- 1751     	BANKSEL	r0x1041
     0146 rrrr                      3-  110 m1      .banksel ram_address
     0147 04rr                      1- 1752     	SUBAR	r0x1041,W
     0148 0903                      1- 1753     	BTRSS	STATUS,2
                                    1- 1754     	MGOTO	_00519_DS_
     0149 3rrr                      3-   63 m1      LGOTO rom_address
     014A 211E                      1- 1755     	MOVIA	0x1e
                                    1- 1756     	BANKSEL	r0x1040
     014B rrrr                      3-  110 m1      .banksel ram_address
     014C 04rr                      1- 1757     	SUBAR	r0x1040,W
     014D                           1- 1758     _00519_DS_:
     014D 0C03                      1- 1759     	BTRSC	STATUS,0
                                    1- 1760     	MGOTO	_00419_DS_
     014E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1761     	.line	776, "main.c"; 	tempValue = tempValue - 10;
     014F 21F6                      1- 1762     	MOVIA	0xf6
                                    1- 1763     	BANKSEL	r0x1040
     0150 rrrr                      3-  110 m1      .banksel ram_address
     0151 03rr                      1- 1764     	ADDAR	r0x1040,F
     0152 0C03                      1- 1765     	BTRSC	STATUS,0
                                    1- 1766     	MGOTO	_00008_DS_
     0153 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1767     	BANKSEL	r0x1041
     0154 rrrr                      3-  110 m1      .banksel ram_address
     0155 06rr                      1- 1768     	DECR	r0x1041,F
     0156                           1- 1769     _00008_DS_:
                                    1- 1770     	MGOTO	_00010_DS_
     0156 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1771     ;;unsigned compare: left < lit (0x28=40), size=2
     0157                           1- 1772     _00419_DS_:
                                    1- 1773     	.line	778, "main.c"; 	else if(tempValue < 40)
     0157 2100                      1- 1774     	MOVIA	0x00
                                    1- 1775     	BANKSEL	r0x1041
     0158 rrrr                      3-  110 m1      .banksel ram_address
     0159 04rr                      1- 1776     	SUBAR	r0x1041,W
     015A 0903                      1- 1777     	BTRSS	STATUS,2
                                    1- 1778     	MGOTO	_00520_DS_
     015B 3rrr                      3-   63 m1      LGOTO rom_address
     015C 2128                      1- 1779     	MOVIA	0x28
                                    1- 1780     	BANKSEL	r0x1040
     015D rrrr                      3-  110 m1      .banksel ram_address
     015E 04rr                      1- 1781     	SUBAR	r0x1040,W
     015F                           1- 1782     _00520_DS_:
     015F 0C03                      1- 1783     	BTRSC	STATUS,0
                                    1- 1784     	MGOTO	_00416_DS_
     0160 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1785     	.line	780, "main.c"; 	tempValue = tempValue - 15;
     0161 21F1                      1- 1786     	MOVIA	0xf1
                                    1- 1787     	BANKSEL	r0x1040
     0162 rrrr                      3-  110 m1      .banksel ram_address
     0163 03rr                      1- 1788     	ADDAR	r0x1040,F
     0164 0C03                      1- 1789     	BTRSC	STATUS,0
                                    1- 1790     	MGOTO	_00009_DS_
     0165 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1791     	BANKSEL	r0x1041
     0166 rrrr                      3-  110 m1      .banksel ram_address
     0167 06rr                      1- 1792     	DECR	r0x1041,F
     0168                           1- 1793     _00009_DS_:
                                    1- 1794     	MGOTO	_00010_DS_
     0168 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1795     ;;unsigned compare: left < lit (0x78=120), size=2
     0169                           1- 1796     _00416_DS_:
                                    1- 1797     	.line	782, "main.c"; 	else if(tempValue < 120)
     0169 2100                      1- 1798     	MOVIA	0x00
                                    1- 1799     	BANKSEL	r0x1041
     016A rrrr                      3-  110 m1      .banksel ram_address
     016B 04rr                      1- 1800     	SUBAR	r0x1041,W
     016C 0903                      1- 1801     	BTRSS	STATUS,2
                                    1- 1802     	MGOTO	_00521_DS_
     016D 3rrr                      3-   63 m1      LGOTO rom_address
     016E 2178                      1- 1803     	MOVIA	0x78
                                    1- 1804     	BANKSEL	r0x1040
     016F rrrr                      3-  110 m1      .banksel ram_address
     0170 04rr                      1- 1805     	SUBAR	r0x1040,W
     0171                           1- 1806     _00521_DS_:
     0171 0C03                      1- 1807     	BTRSC	STATUS,0
                                    1- 1808     	MGOTO	_00010_DS_
     0172 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1809     	.line	784, "main.c"; 	tempValue = tempValue - 23;
     0173 21E9                      1- 1810     	MOVIA	0xe9
                                    1- 1811     	BANKSEL	r0x1040
     0174 rrrr                      3-  110 m1      .banksel ram_address
     0175 03rr                      1- 1812     	ADDAR	r0x1040,F
     0176 0C03                      1- 1813     	BTRSC	STATUS,0
                                    1- 1814     	MGOTO	_00010_DS_
     0177 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1815     	BANKSEL	r0x1041
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 06rr                      1- 1816     	DECR	r0x1041,F
                                    1- 1817     ;;unsigned compare: left < lit (0x64=100), size=2
     017A                           1- 1818     _00010_DS_:
                                    1- 1819     	.line	786, "main.c"; 	if(tempValue >= 100)
     017A 2100                      1- 1820     	MOVIA	0x00
                                    1- 1821     	BANKSEL	r0x1041
     017B rrrr                      3-  110 m1      .banksel ram_address
     017C 04rr                      1- 1822     	SUBAR	r0x1041,W
     017D 0903                      1- 1823     	BTRSS	STATUS,2
                                    1- 1824     	MGOTO	_00522_DS_
     017E 3rrr                      3-   63 m1      LGOTO rom_address
     017F 2164                      1- 1825     	MOVIA	0x64
                                    1- 1826     	BANKSEL	r0x1040
     0180 rrrr                      3-  110 m1      .banksel ram_address
     0181 04rr                      1- 1827     	SUBAR	r0x1040,W
     0182                           1- 1828     _00522_DS_:
     0182 0803                      1- 1829     	BTRSS	STATUS,0
                                    1- 1830     	MGOTO	_00428_DS_
     0183 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1831     	.line	788, "main.c"; 	tempValue = 100;
     0184 2164                      1- 1832     	MOVIA	0x64
                                    1- 1833     	BANKSEL	r0x1040
     0185 rrrr                      3-  110 m1      .banksel ram_address
     0186 00rr                      1- 1834     	MOVAR	r0x1040
                                    1- 1835     	BANKSEL	r0x1041
     0187 rrrr                      3-  110 m1      .banksel ram_address
     0188 02rr                      1- 1836     	CLRR	r0x1041
     0189                           1- 1837     _00428_DS_:
                                    1- 1838     	.line	791, "main.c"; 	if(pwStep < tempValue)
                                    1- 1839     	BANKSEL	_pwStep
     0189 rrrr                      3-  110 m1      .banksel ram_address
     018A 01rr                      1- 1840     	MOVR	_pwStep,W
                                    1- 1841     	BANKSEL	r0x1042
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 00rr                      1- 1842     	MOVAR	r0x1042
                                    1- 1843     	BANKSEL	r0x1043
     018D rrrr                      3-  110 m1      .banksel ram_address
     018E 02rr                      1- 1844     	CLRR	r0x1043
                                    1- 1845     	BANKSEL	r0x1041
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 01rr                      1- 1846     	MOVR	r0x1041,W
                                    1- 1847     	BANKSEL	r0x1043
     0191 rrrr                      3-  110 m1      .banksel ram_address
     0192 04rr                      1- 1848     	SUBAR	r0x1043,W
     0193 0903                      1- 1849     	BTRSS	STATUS,2
                                    1- 1850     	MGOTO	_00523_DS_
     0194 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1851     	BANKSEL	r0x1040
     0195 rrrr                      3-  110 m1      .banksel ram_address
     0196 01rr                      1- 1852     	MOVR	r0x1040,W
                                    1- 1853     	BANKSEL	r0x1042
     0197 rrrr                      3-  110 m1      .banksel ram_address
     0198 04rr                      1- 1854     	SUBAR	r0x1042,W
     0199                           1- 1855     _00523_DS_:
     0199 0C03                      1- 1856     	BTRSC	STATUS,0
                                    1- 1857     	MGOTO	_00448_DS_
     019A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1858     	.line	793, "main.c"; 	pwStep++;
                                    1- 1859     	BANKSEL	_pwStep
     019B rrrr                      3-  110 m1      .banksel ram_address
     019C 05rr                      1- 1860     	INCR	_pwStep,F
                                    1- 1861     	MGOTO	_00448_DS_
     019D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1862     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1863     ;;unsigned compare: left >= lit (0x65=101), size=2
     019E                           1- 1864     _00440_DS_:
                                    1- 1865     	.line	800, "main.c"; 	if(tempValue > 100)
     019E 2100                      1- 1866     	MOVIA	0x00
                                    1- 1867     	BANKSEL	r0x1041
     019F rrrr                      3-  110 m1      .banksel ram_address
     01A0 04rr                      1- 1868     	SUBAR	r0x1041,W
     01A1 0903                      1- 1869     	BTRSS	STATUS,2
                                    1- 1870     	MGOTO	_00524_DS_
     01A2 3rrr                      3-   63 m1      LGOTO rom_address
     01A3 2165                      1- 1871     	MOVIA	0x65
                                    1- 1872     	BANKSEL	r0x1040
     01A4 rrrr                      3-  110 m1      .banksel ram_address
     01A5 04rr                      1- 1873     	SUBAR	r0x1040,W
     01A6                           1- 1874     _00524_DS_:
     01A6 0803                      1- 1875     	BTRSS	STATUS,0
                                    1- 1876     	MGOTO	_00432_DS_
     01A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1877     	.line	801, "main.c"; 	tempValue = 100;
     01A8 2164                      1- 1878     	MOVIA	0x64
                                    1- 1879     	BANKSEL	r0x1040
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 00rr                      1- 1880     	MOVAR	r0x1040
                                    1- 1881     	BANKSEL	r0x1041
     01AB rrrr                      3-  110 m1      .banksel ram_address
     01AC 02rr                      1- 1882     	CLRR	r0x1041
     01AD                           1- 1883     _00432_DS_:
                                    1- 1884     	.line	802, "main.c"; 	if(pwStep == 0)
                                    1- 1885     	BANKSEL	_pwStep
     01AD rrrr                      3-  110 m1      .banksel ram_address
     01AE 01rr                      1- 1886     	MOVR	_pwStep,W
     01AF 0903                      1- 1887     	BTRSS	STATUS,2
                                    1- 1888     	MGOTO	_00434_DS_
     01B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1889     	.line	804, "main.c"; 	pwStep = tempValue;
                                    1- 1890     	BANKSEL	r0x1040
     01B1 rrrr                      3-  110 m1      .banksel ram_address
     01B2 01rr                      1- 1891     	MOVR	r0x1040,W
                                    1- 1892     	BANKSEL	_pwStep
     01B3 rrrr                      3-  110 m1      .banksel ram_address
     01B4 00rr                      1- 1893     	MOVAR	_pwStep
     01B5                           1- 1894     _00434_DS_:
                                    1- 1895     	.line	806, "main.c"; 	if(pwStep > tempValue)
                                    1- 1896     	BANKSEL	_pwStep
     01B5 rrrr                      3-  110 m1      .banksel ram_address
     01B6 01rr                      1- 1897     	MOVR	_pwStep,W
                                    1- 1898     	BANKSEL	r0x1042
     01B7 rrrr                      3-  110 m1      .banksel ram_address
     01B8 00rr                      1- 1899     	MOVAR	r0x1042
                                    1- 1900     	BANKSEL	r0x1043
     01B9 rrrr                      3-  110 m1      .banksel ram_address
     01BA 02rr                      1- 1901     	CLRR	r0x1043
     01BB 2100                      1- 1902     	MOVIA	0x00
                                    1- 1903     	BANKSEL	r0x1041
     01BC rrrr                      3-  110 m1      .banksel ram_address
     01BD 04rr                      1- 1904     	SUBAR	r0x1041,W
     01BE 0903                      1- 1905     	BTRSS	STATUS,2
                                    1- 1906     	MGOTO	_00525_DS_
     01BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1907     	BANKSEL	r0x1042
     01C0 rrrr                      3-  110 m1      .banksel ram_address
     01C1 01rr                      1- 1908     	MOVR	r0x1042,W
                                    1- 1909     	BANKSEL	r0x1040
     01C2 rrrr                      3-  110 m1      .banksel ram_address
     01C3 04rr                      1- 1910     	SUBAR	r0x1040,W
     01C4                           1- 1911     _00525_DS_:
     01C4 0C03                      1- 1912     	BTRSC	STATUS,0
                                    1- 1913     	MGOTO	_00448_DS_
     01C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1914     	.line	808, "main.c"; 	if(++count5s > 10)
                                    1- 1915     	BANKSEL	_count5s
     01C6 rrrr                      3-  110 m1      .banksel ram_address
     01C7 05rr                      1- 1916     	INCR	_count5s,F
     01C8 0D03                      1- 1917     	BTRSC	STATUS,2
     01C9 05rr                      1- 1918     	INCR	(_count5s + 1),F
                                    1- 1919     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1920     ;;unsigned compare: left >= lit (0xB=11), size=2
     01CA 2100                      1- 1921     	MOVIA	0x00
     01CB 04rr                      1- 1922     	SUBAR	(_count5s + 1),W
     01CC 0903                      1- 1923     	BTRSS	STATUS,2
                                    1- 1924     	MGOTO	_00526_DS_
     01CD 3rrr                      3-   63 m1      LGOTO rom_address
     01CE 210B                      1- 1925     	MOVIA	0x0b
     01CF 04rr                      1- 1926     	SUBAR	_count5s,W
     01D0                           1- 1927     _00526_DS_:
     01D0 0803                      1- 1928     	BTRSS	STATUS,0
                                    1- 1929     	MGOTO	_00448_DS_
     01D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1930     	.line	810, "main.c"; 	count5s = 0;
                                    1- 1931     	BANKSEL	_count5s
     01D2 rrrr                      3-  110 m1      .banksel ram_address
     01D3 02rr                      1- 1932     	CLRR	_count5s
     01D4 02rr                      1- 1933     	CLRR	(_count5s + 1)
                                    1- 1934     	.line	811, "main.c"; 	pwStep--;
                                    1- 1935     	BANKSEL	_pwStep
     01D5 rrrr                      3-  110 m1      .banksel ram_address
     01D6 06rr                      1- 1936     	DECR	_pwStep,F
     01D7                           1- 1937     _00448_DS_:
                                    1- 1938     	.line	819, "main.c"; 	}
                                    1- 1939     	RETURN	
     01D7 0010                      3-   40 m1      ret
                                    1- 1940     ; exit point of _checkBat
                                    1- 1942     ;***
                                    1- 1943     ;  pBlock Stats: dbName = C
                                    1- 1944     ;***
                                    1- 1945     ;has an exit
                                    1- 1946     ;functions called:
                                    1- 1947     ;   _delay
                                    1- 1948     ;   _delay
                                    1- 1949     ;; Starting pCode block
                                    1- 1950     .segment "code"; module=main, function=_initAD
     0000                           1- 1952     _initAD:
                                    1- 1953     ; 2 exit points
                                    1- 1954     	.line	683, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1955     	MOVIA	0x80
     0001 00rr                      1- 1956     	MOVAR	_ADMD
                                    1- 1957     	.line	688, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1958     	CLRR	_ADVREFH
                                    1- 1959     	.line	693, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1960     	MOVIA	0x10
     0004 00rr                      1- 1961     	MOVAR	_ADR
                                    1- 1962     	.line	697, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1963     	MOVIA	0x03
     0006 00rr                      1- 1964     	MOVAR	_ADCR
                                    1- 1965     	.line	704, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1966     	BSR	_ADMDbits,4
                                    1- 1967     	.line	705, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1968     	MOVIA	0x32
                                    1- 1969     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1970     	.line	706, "main.c"; 	}
                                    1- 1971     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1972     ; exit point of _initAD
                                    1- 1974     ;***
                                    1- 1975     ;  pBlock Stats: dbName = C
                                    1- 1976     ;***
                                    1- 1977     ;has an exit
                                    1- 1978     ;functions called:
                                    1- 1979     ;   _keyRead
                                    1- 1980     ;   _checkBat
                                    1- 1981     ;   _checkBat
                                    1- 1982     ;   _keyRead
                                    1- 1983     ;   _checkBat
                                    1- 1984     ;   _checkBat
                                    1- 1985     ;1 compiler assigned register :
                                    1- 1986     ;   r0x1047
                                    1- 1987     ;; Starting pCode block
                                    1- 1988     .segment "code"; module=main, function=_keyCtr
                                    1- 1990     ;local variable name mapping:
     0000                           1- 1992     _keyCtr:
                                    1- 1993     ; 2 exit points
                                    1- 1994     	.line	627, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1995     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1996     	COMR	_PORTA,W
                                    1- 1997     	BANKSEL	r0x1047
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1998     	MOVAR	r0x1047
     0004 2180                      1- 1999     	MOVIA	0x80
     0005 10rr                      1- 2000     	ANDAR	r0x1047,F
     0006 01rr                      1- 2001     	MOVR	r0x1047,W
                                    1- 2002     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2003     	BANKSEL	r0x1047
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2004     	MOVAR	r0x1047
                                    1- 2005     	.line	628, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2006     	XORIA	0x01
     000B 0903                      1- 2007     	BTRSS	STATUS,2
                                    1- 2008     	MGOTO	_00386_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2009     	.line	630, "main.c"; 	checkBat();
                                    1- 2010     	MCALL	_checkBat
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2011     	.line	631, "main.c"; 	if(pwFlag && pwStep > 0)
                                    1- 2012     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2013     	MOVR	_pwFlag,W
     0010 0D03                      1- 2014     	BTRSC	STATUS,2
                                    1- 2015     	MGOTO	_00388_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2016     	BANKSEL	_pwStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2017     	MOVR	_pwStep,W
     0014 0D03                      1- 2018     	BTRSC	STATUS,2
                                    1- 2019     	MGOTO	_00388_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2020     	.line	633, "main.c"; 	if(showFlag == 0)
                                    1- 2021     	BANKSEL	_showFlag
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2022     	MOVR	_showFlag,W
     0018 0903                      1- 2023     	BTRSS	STATUS,2
                                    1- 2024     	MGOTO	_00371_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2025     	.line	636, "main.c"; 	pwShowTime = 3;
     001A 2103                      1- 2026     	MOVIA	0x03
                                    1- 2027     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2028     	MOVAR	_pwShowTime
                                    1- 2029     	.line	637, "main.c"; 	offShowTime = 0;
                                    1- 2030     	BANKSEL	_offShowTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 2031     	CLRR	_offShowTime
                                    1- 2032     	MGOTO	_00388_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 2033     _00371_DS_:
                                    1- 2034     	.line	639, "main.c"; 	else if(stepShowTime == 0)
                                    1- 2035     	BANKSEL	_stepShowTime
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2036     	MOVR	_stepShowTime,W
     0022 0903                      1- 2037     	BTRSS	STATUS,2
                                    1- 2038     	MGOTO	_00368_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2039     	.line	641, "main.c"; 	pwShowTime = 0;
                                    1- 2040     	BANKSEL	_pwShowTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 2041     	CLRR	_pwShowTime
                                    1- 2042     	.line	642, "main.c"; 	stepShowTime = 2;
     0026 2102                      1- 2043     	MOVIA	0x02
                                    1- 2044     	BANKSEL	_stepShowTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 2045     	MOVAR	_stepShowTime
                                    1- 2046     	.line	643, "main.c"; 	offShowTime = 0;
                                    1- 2047     	BANKSEL	_offShowTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 2048     	CLRR	_offShowTime
                                    1- 2049     	MGOTO	_00388_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 2050     _00368_DS_:
                                    1- 2051     	.line	647, "main.c"; 	pwShowTime = 0;
                                    1- 2052     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1- 2053     	CLRR	_pwShowTime
                                    1- 2054     	.line	648, "main.c"; 	if(++workStep > 3)
                                    1- 2055     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 2056     	INCR	_workStep,F
                                    1- 2057     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2058     ;;unsigned compare: left >= lit (0x4=4), size=1
     0030 2104                      1- 2059     	MOVIA	0x04
     0031 04rr                      1- 2060     	SUBAR	_workStep,W
     0032 0803                      1- 2061     	BTRSS	STATUS,0
                                    1- 2062     	MGOTO	_00366_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2063     	.line	649, "main.c"; 	workStep = 1;
     0034 2101                      1- 2064     	MOVIA	0x01
     0035 00rr                      1- 2065     	MOVAR	_workStep
     0036                           1- 2066     _00366_DS_:
                                    1- 2067     	.line	650, "main.c"; 	stepShowTime = 2;
     0036 2102                      1- 2068     	MOVIA	0x02
                                    1- 2069     	BANKSEL	_stepShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2070     	MOVAR	_stepShowTime
                                    1- 2071     	.line	651, "main.c"; 	offShowTime = 0;
                                    1- 2072     	BANKSEL	_offShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 2073     	CLRR	_offShowTime
                                    1- 2074     	MGOTO	_00388_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 2075     _00386_DS_:
                                    1- 2076     	.line	655, "main.c"; 	else if(kclick == 2)
                                    1- 2077     	BANKSEL	r0x1047
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2078     	MOVR	r0x1047,W
     003E 2402                      1- 2079     	XORIA	0x02
     003F 0903                      1- 2080     	BTRSS	STATUS,2
                                    1- 2081     	MGOTO	_00388_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2082     	.line	657, "main.c"; 	checkBat();
                                    1- 2083     	MCALL	_checkBat
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2084     	.line	658, "main.c"; 	if(pwFlag)
                                    1- 2085     	BANKSEL	_pwFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2086     	MOVR	_pwFlag,W
     0044 0D03                      1- 2087     	BTRSC	STATUS,2
                                    1- 2088     	MGOTO	_00381_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2089     	.line	660, "main.c"; 	pwFlag = 0;		//关机
     0046 02rr                      1- 2090     	CLRR	_pwFlag
                                    1- 2091     	.line	661, "main.c"; 	workStep = 0;
                                    1- 2092     	BANKSEL	_workStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 2093     	CLRR	_workStep
                                    1- 2094     	.line	662, "main.c"; 	pwShowTime = 0;
                                    1- 2095     	BANKSEL	_pwShowTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 2096     	CLRR	_pwShowTime
                                    1- 2097     	.line	663, "main.c"; 	stepShowTime = 0;
                                    1- 2098     	BANKSEL	_stepShowTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2099     	CLRR	_stepShowTime
                                    1- 2100     	.line	664, "main.c"; 	offShowTime = 5;
     004D 2105                      1- 2101     	MOVIA	0x05
                                    1- 2102     	BANKSEL	_offShowTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 2103     	MOVAR	_offShowTime
                                    1- 2104     	MGOTO	_00388_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 2105     _00381_DS_:
                                    1- 2106     	.line	666, "main.c"; 	else if(pwStep > 0)
                                    1- 2107     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2108     	MOVR	_pwStep,W
     0053 0D03                      1- 2109     	BTRSC	STATUS,2
                                    1- 2110     	MGOTO	_00388_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2111     	.line	669, "main.c"; 	pwFlag = 1;		//开机
     0055 2101                      1- 2112     	MOVIA	0x01
                                    1- 2113     	BANKSEL	_pwFlag
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 2114     	MOVAR	_pwFlag
                                    1- 2115     	.line	670, "main.c"; 	pwShowTime = 3;
     0058 2103                      1- 2116     	MOVIA	0x03
                                    1- 2117     	BANKSEL	_pwShowTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 2118     	MOVAR	_pwShowTime
                                    1- 2119     	.line	671, "main.c"; 	stepShowTime = 2;
     005B 2102                      1- 2120     	MOVIA	0x02
                                    1- 2121     	BANKSEL	_stepShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 2122     	MOVAR	_stepShowTime
                                    1- 2123     	.line	672, "main.c"; 	offShowTime = 0;
                                    1- 2124     	BANKSEL	_offShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 2125     	CLRR	_offShowTime
                                    1- 2126     	.line	673, "main.c"; 	if(workStep == 0)
                                    1- 2127     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2128     	MOVR	_workStep,W
     0062 0903                      1- 2129     	BTRSS	STATUS,2
                                    1- 2130     	MGOTO	_00388_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2131     	.line	674, "main.c"; 	workStep = 1;
     0064 2101                      1- 2132     	MOVIA	0x01
     0065 00rr                      1- 2133     	MOVAR	_workStep
     0066                           1- 2134     _00388_DS_:
                                    1- 2135     	.line	677, "main.c"; 	}
                                    1- 2136     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 2137     ; exit point of _keyCtr
                                    1- 2139     ;***
                                    1- 2140     ;  pBlock Stats: dbName = C
                                    1- 2141     ;***
                                    1- 2142     ;has an exit
                                    1- 2143     ;1 compiler assigned register :
                                    1- 2144     ;   r0x1046
                                    1- 2145     ;; Starting pCode block
                                    1- 2146     .segment "code"; module=main, function=_keyRead
                                    1- 2148     ;local variable name mapping:
     0000                           1- 2150     _keyRead:
                                    1- 2151     ; 2 exit points
                                    1- 2152     	.line	592, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2153     	BANKSEL	r0x1046
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2154     	MOVAR	r0x1046
                                    1- 2155     	.line	594, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2156     	MOVR	r0x1046,W
     0003 0D03                      1- 2157     	BTRSC	STATUS,2
                                    1- 2158     	MGOTO	_00358_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2159     	.line	596, "main.c"; 	keyCount++;
                                    1- 2160     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2161     	INCR	_keyCount,F
                                    1- 2162     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2163     	.line	597, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2164     	MOVIA	0xc8
     0008 04rr                      1- 2165     	SUBAR	_keyCount,W
     0009 0803                      1- 2166     	BTRSS	STATUS,0
                                    1- 2167     	MGOTO	_00359_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2168     	.line	599, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2169     	MOVIA	0xc8
     000C 00rr                      1- 2170     	MOVAR	_keyCount
                                    1- 2171     	.line	600, "main.c"; 	if(!longPressFlag)
                                    1- 2172     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2173     	MOVR	_longPressFlag,W
     000F 0903                      1- 2174     	BTRSS	STATUS,2
                                    1- 2175     	MGOTO	_00359_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2176     	.line	602, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2177     	MOVIA	0x01
     0012 00rr                      1- 2178     	MOVAR	_longPressFlag
                                    1- 2179     	.line	603, "main.c"; 	return 2;
     0013 2102                      1- 2180     	MOVIA	0x02
                                    1- 2181     	MGOTO	_00360_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2182     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 2183     _00358_DS_:
                                    1- 2184     	.line	609, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 2185     	MOVIA	0xc8
                                    1- 2186     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2187     	SUBAR	_keyCount,W
     0018 0803                      1- 2188     	BTRSS	STATUS,0
                                    1- 2189     	MGOTO	_00355_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2190     	.line	611, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2191     	CLRR	_keyCount
                                    1- 2192     	.line	612, "main.c"; 	longPressFlag = 0;
                                    1- 2193     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2194     	CLRR	_longPressFlag
                                    1- 2195     	.line	613, "main.c"; 	return	0;
     001D 2100                      1- 2196     	MOVIA	0x00
                                    1- 2197     	MGOTO	_00360_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2198     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2199     _00355_DS_:
                                    1- 2200     	.line	615, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2201     	MOVIA	0x04
                                    1- 2202     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2203     	SUBAR	_keyCount,W
     0022 0803                      1- 2204     	BTRSS	STATUS,0
                                    1- 2205     	MGOTO	_00356_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2206     	.line	617, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2207     	CLRR	_keyCount
                                    1- 2208     	.line	618, "main.c"; 	return	1;
     0025 2101                      1- 2209     	MOVIA	0x01
                                    1- 2210     	MGOTO	_00360_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2211     _00356_DS_:
                                    1- 2212     	.line	620, "main.c"; 	keyCount = 0;
                                    1- 2213     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2214     	CLRR	_keyCount
     0029                           1- 2215     _00359_DS_:
                                    1- 2216     	.line	622, "main.c"; 	return 0;
     0029 2100                      1- 2217     	MOVIA	0x00
     002A                           1- 2218     _00360_DS_:
                                    1- 2219     	.line	623, "main.c"; 	}
                                    1- 2220     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2221     ; exit point of _keyRead
                                    1- 2223     ;***
                                    1- 2224     ;  pBlock Stats: dbName = C
                                    1- 2225     ;***
                                    1- 2226     ;has an exit
                                    1- 2227     ;; Starting pCode block
                                    1- 2228     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2230     _pwmStop:
                                    1- 2231     ; 2 exit points
                                    1- 2232     	.line	586, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2233     	CLRA	
     0001 00rr                      1- 2234     	SFUN	_T2CR1
                                    1- 2235     	.line	587, "main.c"; 	}
                                    1- 2236     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2237     ; exit point of _pwmStop
                                    1- 2239     ;***
                                    1- 2240     ;  pBlock Stats: dbName = C
                                    1- 2241     ;***
                                    1- 2242     ;has an exit
                                    1- 2243     ;1 compiler assigned register :
                                    1- 2244     ;   r0x1048
                                    1- 2245     ;; Starting pCode block
                                    1- 2246     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2248     _pwmInit:
                                    1- 2249     ; 2 exit points
                                    1- 2250     	.line	574, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2251     	SFUNR	_T2CR1
                                    1- 2252     	BANKSEL	r0x1048
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2253     	MOVAR	r0x1048
     0003 0Frr                      1- 2254     	BTRSC	r0x1048,7
                                    1- 2255     	.line	575, "main.c"; 	return;
                                    1- 2256     	MGOTO	_00339_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2257     	.line	576, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2258     	CLRR	_TMRH
                                    1- 2259     	.line	577, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2260     	MOVIA	0x64
     0007 00rr                      1- 2261     	SFUN	_TMR2
                                    1- 2262     	.line	578, "main.c"; 	PWM2DUTY = 100;				// 		
     0008 00rr                      1- 2263     	SFUN	_PWM2DUTY
                                    1- 2264     	.line	580, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2101                      1- 2265     	MOVIA	0x01
     000A 00rr                      1- 2266     	SFUN	_T2CR2
                                    1- 2267     	.line	581, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 2268     	MOVIA	0x83
     000C 00rr                      1- 2269     	SFUN	_T2CR1
     000D                           1- 2270     _00339_DS_:
                                    1- 2271     	.line	582, "main.c"; 	}
                                    1- 2272     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 2273     ; exit point of _pwmInit
                                    1- 2275     ;***
                                    1- 2276     ;  pBlock Stats: dbName = C
                                    1- 2277     ;***
                                    1- 2278     ;has an exit
                                    1- 2279     ;functions called:
                                    1- 2280     ;   _setInput
                                    1- 2281     ;   _pwmStop
                                    1- 2282     ;   _setInput
                                    1- 2283     ;   _pwmStop
                                    1- 2284     ;; Starting pCode block
                                    1- 2285     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2287     _gotoSleep:
                                    1- 2288     ; 2 exit points
                                    1- 2289     	.line	541, "main.c"; 	sleepFlag = 0;
                                    1- 2290     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2291     	CLRR	_sleepFlag
                                    1- 2292     	.line	542, "main.c"; 	waitTime = 0;
                                    1- 2293     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2294     	CLRR	_waitTime
     0004 02rr                      1- 2295     	CLRR	(_waitTime + 1)
                                    1- 2296     	.line	543, "main.c"; 	setInput();
                                    1- 2297     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2298     	.line	544, "main.c"; 	sleepTime = 0;
                                    1- 2299     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2300     	CLRR	_sleepTime
                                    1- 2301     	.line	545, "main.c"; 	pwFlag = 0;
                                    1- 2302     	BANKSEL	_pwFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2303     	CLRR	_pwFlag
                                    1- 2304     	.line	546, "main.c"; 	pwmStop();
                                    1- 2305     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2306     	.line	547, "main.c"; 	AWUCON = 0xA0;
     000B 21A0                      1- 2307     	MOVIA	0xa0
     000C 00rr                      1- 2308     	MOVAR	_AWUCON
                                    1- 2309     	.line	549, "main.c"; 	IOSTB = C_PB3_Input;
     000D 2108                      1- 2310     	MOVIA	0x08
     000E 000r                      1- 2311     	IOST	_IOSTB
                                    1- 2312     	.line	550, "main.c"; 	PORTA = 0X00;
                                    1- 2313     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2314     	CLRR	_PORTA
                                    1- 2315     	.line	551, "main.c"; 	PORTB = 0X00;
     0011 02rr                      1- 2316     	CLRR	_PORTB
                                    1- 2317     	.line	552, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2318     	MOVIA	0x02
     0013 00rr                      1- 2319     	MOVAR	_INTE
                                    1- 2320     	.line	553, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2321     	MOVIA	0x18
     0015 00rr                      1- 2322     	MOVAR	_PCON
                                    1- 2323     	.line	554, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2324     	CLRR	_INTF
                                    1- 2325     	.line	555, "main.c"; 	CLRWDT();
     0017 0002                      1- 2326     	clrwdt
                                    1- 2327     	.line	556, "main.c"; 	ENI();
     0018 0004                      1- 2328     	ENI
                                    1- 2329     	.line	557, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2330     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1- 2331     	BTRSC	_PORTA,5
                                    1- 2332     	MGOTO	_00332_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2333     	.line	558, "main.c"; 	SLEEP();
     001C 0001                      1- 2334     	sleep
     001D                           1- 2335     _00332_DS_:
                                    1- 2336     	.line	559, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2337     	CLRR	_AWUCON
                                    1- 2338     	.line	560, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001E 21A0                      1- 2339     	MOVIA	0xa0
     001F 000r                      1- 2340     	IOST	_IOSTA
                                    1- 2341     	.line	561, "main.c"; 	IOSTB = C_PB3_Input ;
     0020 2108                      1- 2342     	MOVIA	0x08
     0021 000r                      1- 2343     	IOST	_IOSTB
                                    1- 2344     	.line	562, "main.c"; 	PORTA = 0x00;
                                    1- 2345     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2346     	CLRR	_PORTA
                                    1- 2347     	.line	563, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2103                      1- 2348     	MOVIA	0x03
     0025 00rr                      1- 2349     	MOVAR	_INTE
                                    1- 2350     	.line	564, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2351     	CLRR	_INTF
                                    1- 2352     	.line	566, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2353     	MOVIA	0xb8
     0028 00rr                      1- 2354     	MOVAR	_PCON
                                    1- 2355     	.line	569, "main.c"; 	}
                                    1- 2356     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2357     ; exit point of _gotoSleep
                                    1- 2359     ;***
                                    1- 2360     ;  pBlock Stats: dbName = C
                                    1- 2361     ;***
                                    1- 2362     ;has an exit
                                    1- 2363     ;functions called:
                                    1- 2364     ;   _setInput
                                    1- 2365     ;   _setInput
                                    1- 2366     ;; Starting pCode block
                                    1- 2367     .segment "code"; module=main, function=_initSys
     0000                           1- 2369     _initSys:
                                    1- 2370     ; 2 exit points
                                    1- 2371     	.line	509, "main.c"; 	DISI();
     0000 0013                      1- 2372     	DISI
                                    1- 2373     	.line	510, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 2374     	MOVIA	0xa0
     0002 000r                      1- 2375     	IOST	_IOSTA
                                    1- 2376     	.line	511, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2377     	MOVIA	0x08
     0004 000r                      1- 2378     	IOST	_IOSTB
                                    1- 2379     	.line	512, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2380     	CLRR	_PORTB
                                    1- 2381     	.line	513, "main.c"; 	PORTA = 0x00;
                                    1- 2382     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2383     	CLRR	_PORTA
                                    1- 2384     	.line	515, "main.c"; 	setInput();
                                    1- 2385     	MCALL	_setInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2386     	.line	516, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2387     	MOVIA	0x7f
     000A 000r                      1- 2388     	IOST	_APHCON
                                    1- 2389     	.line	517, "main.c"; 	BPHCON = 0xFF;		//PB3上拉
     000B 21FF                      1- 2390     	MOVIA	0xff
     000C 00rr                      1- 2391     	MOVAR	_BPHCON
                                    1- 2392     	.line	518, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2393     	MOVAR	_ABPLCON
                                    1- 2394     	.line	520, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2103                      1- 2395     	MOVIA	0x03
     000F 00rr                      1- 2396     	MOVAR	_INTE
                                    1- 2397     	.line	522, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2398     	CLRA	
     0011 000r                      1- 2399     	IOST	_PCON1
                                    1- 2400     	.line	524, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2401     	MOVIA	0x37
     0013 00rr                      1- 2402     	MOVAR	_TMR0
                                    1- 2403     	.line	525, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2404     	CLRA	
     0015 0003                      1- 2405     	T0MD	
                                    1- 2406     	.line	527, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2407     	MOVIA	0x01
     0017 000r                      1- 2408     	IOST	_PCON1
                                    1- 2409     	.line	530, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2410     	MOVIA	0x98
     0019 00rr                      1- 2411     	MOVAR	_PCON
                                    1- 2412     	.line	533, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2413     	MOVIA	0x01
     001B 000r                      1- 2414     	IOST	_PCON1
                                    1- 2415     	.line	534, "main.c"; 	ENI();
     001C 0004                      1- 2416     	ENI
                                    1- 2417     	.line	535, "main.c"; 	}
                                    1- 2418     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2419     ; exit point of _initSys
                                    1- 2421     ;***
                                    1- 2422     ;  pBlock Stats: dbName = C
                                    1- 2423     ;***
                                    1- 2424     ;has an exit
                                    1- 2425     ;functions called:
                                    1- 2426     ;   __gptrget1
                                    1- 2427     ;   _showNubBaiwei
                                    1- 2428     ;   __gptrget1
                                    1- 2429     ;   _showNubShiwei
                                    1- 2430     ;   __gptrget1
                                    1- 2431     ;   _showNubGewei
                                    1- 2432     ;   _setInput
                                    1- 2433     ;   __gptrget1
                                    1- 2434     ;   _showNubBaiwei
                                    1- 2435     ;   __gptrget1
                                    1- 2436     ;   _showNubShiwei
                                    1- 2437     ;   __gptrget1
                                    1- 2438     ;   _showNubGewei
                                    1- 2439     ;   _setInput
                                    1- 2440     ;5 compiler assigned registers:
                                    1- 2441     ;   r0x1049
                                    1- 2442     ;   r0x104A
                                    1- 2443     ;   STK01
                                    1- 2444     ;   STK00
                                    1- 2445     ;   r0x104B
                                    1- 2446     ;; Starting pCode block
                                    1- 2447     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2449     _refreshNub:
                                    1- 2450     ; 2 exit points
                                    1- 2451     	.line	500, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 2452     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2453     	MOVR	_baiweiNum,W
     0002 25rr                      1- 2454     	ADDIA	(_numArray + 0)
                                    1- 2455     	BANKSEL	r0x1049
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2456     	MOVAR	r0x1049
     0005 21rr                      1- 2457     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 2458     	BTRSC	STATUS,0
     0007 2501                      1- 2459     	ADDIA	0x01
                                    1- 2460     	BANKSEL	r0x104A
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2461     	MOVAR	r0x104A
                                    1- 2462     	BANKSEL	r0x1049
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2463     	MOVR	r0x1049,W
     000C 00rr                      1- 2464     	MOVAR	STK01
                                    1- 2465     	BANKSEL	r0x104A
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2466     	MOVR	r0x104A,W
     000F 00rr                      1- 2467     	MOVAR	STK00
     0010 2100                      1- 2468     	MOVIA	0x00
                                    1- 2469     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2470     ;;103	MOVAR	r0x104B
                                    1- 2471     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2472     	.line	501, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2473     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2474     	MOVR	_shiweiNum,W
     0015 25rr                      1- 2475     	ADDIA	(_numArray + 0)
                                    1- 2476     	BANKSEL	r0x1049
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2477     	MOVAR	r0x1049
     0018 21rr                      1- 2478     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 2479     	BTRSC	STATUS,0
     001A 2501                      1- 2480     	ADDIA	0x01
                                    1- 2481     	BANKSEL	r0x104A
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2482     	MOVAR	r0x104A
                                    1- 2483     	BANKSEL	r0x1049
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2484     	MOVR	r0x1049,W
     001F 00rr                      1- 2485     	MOVAR	STK01
                                    1- 2486     	BANKSEL	r0x104A
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2487     	MOVR	r0x104A,W
     0022 00rr                      1- 2488     	MOVAR	STK00
     0023 2100                      1- 2489     	MOVIA	0x00
                                    1- 2490     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2491     ;;102	MOVAR	r0x104B
                                    1- 2492     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2493     	.line	502, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2494     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2495     	MOVR	_geweiNum,W
     0028 25rr                      1- 2496     	ADDIA	(_numArray + 0)
                                    1- 2497     	BANKSEL	r0x1049
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2498     	MOVAR	r0x1049
     002B 21rr                      1- 2499     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2500     	BTRSC	STATUS,0
     002D 2501                      1- 2501     	ADDIA	0x01
                                    1- 2502     	BANKSEL	r0x104A
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2503     	MOVAR	r0x104A
                                    1- 2504     	BANKSEL	r0x1049
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2505     	MOVR	r0x1049,W
     0032 00rr                      1- 2506     	MOVAR	STK01
                                    1- 2507     	BANKSEL	r0x104A
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2508     	MOVR	r0x104A,W
     0035 00rr                      1- 2509     	MOVAR	STK00
     0036 2100                      1- 2510     	MOVIA	0x00
                                    1- 2511     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2512     ;;2	MOVAR	r0x104B
                                    1- 2513     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2514     	.line	503, "main.c"; 	setInput();
                                    1- 2515     	MCALL	_setInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2516     	.line	504, "main.c"; 	}
                                    1- 2517     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 2518     ; exit point of _refreshNub
                                    1- 2520     ;***
                                    1- 2521     ;  pBlock Stats: dbName = C
                                    1- 2522     ;***
                                    1- 2523     ;has an exit
                                    1- 2524     ;; Starting pCode block
                                    1- 2525     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2527     _checkIRKey:
                                    1- 2528     ; 2 exit points
                                    1- 2529     	.line	452, "main.c"; 	if(pwFlag == 0)
                                    1- 2530     	BANKSEL	_pwFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2531     	MOVR	_pwFlag,W
     0002 0903                      1- 2532     	BTRSS	STATUS,2
                                    1- 2533     	MGOTO	_00306_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2534     	.line	454, "main.c"; 	irStep = 0;
                                    1- 2535     	BANKSEL	_irStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2536     	CLRR	_irStep
                                    1- 2537     	.line	455, "main.c"; 	return;
                                    1- 2538     	MGOTO	_00318_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2539     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2540     ;;unsigned compare: left >= lit (0x6=6), size=1
     0007                           1- 2541     _00306_DS_:
                                    1- 2542     	.line	457, "main.c"; 	if(zhedangCount > 5 && irStep == 0)
     0007 2106                      1- 2543     	MOVIA	0x06
                                    1- 2544     	BANKSEL	_zhedangCount
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 04rr                      1- 2545     	SUBAR	_zhedangCount,W
     000A 0803                      1- 2546     	BTRSS	STATUS,0
                                    1- 2547     	MGOTO	_00318_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2548     	BANKSEL	_irStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2549     	MOVR	_irStep,W
     000E 0903                      1- 2550     	BTRSS	STATUS,2
                                    1- 2551     	MGOTO	_00318_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2552     	.line	460, "main.c"; 	if(workStep == 1)
                                    1- 2553     	BANKSEL	_workStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 2554     	MOVR	_workStep,W
     0012 2401                      1- 2555     	XORIA	0x01
     0013 0903                      1- 2556     	BTRSS	STATUS,2
                                    1- 2557     	MGOTO	_00313_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2558     	.line	462, "main.c"; 	workTime = 50;
     0015 2132                      1- 2559     	MOVIA	0x32
                                    1- 2560     	BANKSEL	_workTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2561     	MOVAR	_workTime
                                    1- 2562     	MGOTO	_00314_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1- 2563     _00313_DS_:
                                    1- 2564     	.line	464, "main.c"; 	else if(workStep == 2)
                                    1- 2565     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2566     	MOVR	_workStep,W
     001B 2402                      1- 2567     	XORIA	0x02
     001C 0903                      1- 2568     	BTRSS	STATUS,2
                                    1- 2569     	MGOTO	_00310_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2570     	.line	466, "main.c"; 	workTime = 80;
     001E 2150                      1- 2571     	MOVIA	0x50
                                    1- 2572     	BANKSEL	_workTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 2573     	MOVAR	_workTime
                                    1- 2574     	MGOTO	_00314_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 2575     _00310_DS_:
                                    1- 2576     	.line	468, "main.c"; 	else if(workStep == 3)
                                    1- 2577     	BANKSEL	_workStep
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 2578     	MOVR	_workStep,W
     0024 2403                      1- 2579     	XORIA	0x03
     0025 0903                      1- 2580     	BTRSS	STATUS,2
                                    1- 2581     	MGOTO	_00314_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2582     	.line	470, "main.c"; 	workTime = 120;
     0027 2178                      1- 2583     	MOVIA	0x78
                                    1- 2584     	BANKSEL	_workTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2585     	MOVAR	_workTime
     002A                           1- 2586     _00314_DS_:
                                    1- 2587     	.line	472, "main.c"; 	waitBatTime = 100;
     002A 2164                      1- 2588     	MOVIA	0x64
                                    1- 2589     	BANKSEL	_waitBatTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 2590     	MOVAR	_waitBatTime
                                    1- 2591     	.line	474, "main.c"; 	irStep = 1;
     002D 2101                      1- 2592     	MOVIA	0x01
                                    1- 2593     	BANKSEL	_irStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2594     	MOVAR	_irStep
     0030                           1- 2595     _00318_DS_:
                                    1- 2596     	.line	493, "main.c"; 	}
                                    1- 2597     	RETURN	
     0030 0010                      3-   40 m1      ret
                                    1- 2598     ; exit point of _checkIRKey
                                    1- 2600     ;***
                                    1- 2601     ;  pBlock Stats: dbName = C
                                    1- 2602     ;***
                                    1- 2603     ;has an exit
                                    1- 2604     ;functions called:
                                    1- 2605     ;   _pwmInit
                                    1- 2606     ;   _pwmStop
                                    1- 2607     ;   _checkBat
                                    1- 2608     ;   __divuchar
                                    1- 2609     ;   __moduchar
                                    1- 2610     ;   __moduint
                                    1- 2611     ;   __divuchar
                                    1- 2612     ;   __moduchar
                                    1- 2613     ;   _pwmInit
                                    1- 2614     ;   _pwmStop
                                    1- 2615     ;   _checkBat
                                    1- 2616     ;   __divuchar
                                    1- 2617     ;   __moduchar
                                    1- 2618     ;   __moduint
                                    1- 2619     ;   __divuchar
                                    1- 2620     ;   __moduchar
                                    1- 2621     ;5 compiler assigned registers:
                                    1- 2622     ;   r0x104C
                                    1- 2623     ;   STK00
                                    1- 2624     ;   STK02
                                    1- 2625     ;   STK01
                                    1- 2626     ;   r0x104D
                                    1- 2627     ;; Starting pCode block
                                    1- 2628     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2630     _chrgCtr:
                                    1- 2631     ; 2 exit points
                                    1- 2632     	.line	317, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2633     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Err                      1- 2634     	BTRSC	_PORTA,5
                                    1- 2635     	MGOTO	_00207_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2636     	.line	319, "main.c"; 	fullFlag = 0;
                                    1- 2637     	BANKSEL	_fullFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2638     	CLRR	_fullFlag
     0005                           1- 2639     _00207_DS_:
                                    1- 2640     	.line	321, "main.c"; 	BPHCON |= 0x04;
     0005 19rr                      1- 2641     	BSR	_BPHCON,2
                                    1- 2642     	.line	322, "main.c"; 	IOSTB &= 0xFB;
     0006 001r                      1- 2643     	IOSTR	_IOSTB
                                    1- 2644     	BANKSEL	r0x104C
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2645     	MOVAR	r0x104C
     0009 1Drr                      1- 2646     	BCR	r0x104C,2
     000A 01rr                      1- 2647     	MOVR	r0x104C,W
     000B 000r                      1- 2648     	IOST	_IOSTB
                                    1- 2649     	.line	323, "main.c"; 	if(workTime > 0)
                                    1- 2650     	BANKSEL	_workTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2651     	MOVR	_workTime,W
     000E 0D03                      1- 2652     	BTRSC	STATUS,2
                                    1- 2653     	MGOTO	_00209_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2654     	.line	325, "main.c"; 	pwmInit();
                                    1- 2655     	MCALL	_pwmInit
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2656     	.line	326, "main.c"; 	workTime--;
                                    1- 2657     	BANKSEL	_workTime
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 06rr                      1- 2658     	DECR	_workTime,F
                                    1- 2659     	MGOTO	_00210_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1- 2660     _00209_DS_:
                                    1- 2661     	.line	330, "main.c"; 	pwmStop();
                                    1- 2662     	MCALL	_pwmStop
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2663     	.line	331, "main.c"; 	PORTB &= 0xFB;
     0015 1Drr                      1- 2664     	BCR	_PORTB,2
     0016                           1- 2665     _00210_DS_:
                                    1- 2666     	.line	333, "main.c"; 	if(startTime)
                                    1- 2667     	BANKSEL	_startTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2668     	MOVR	_startTime,W
     0018 0D03                      1- 2669     	BTRSC	STATUS,2
                                    1- 2670     	MGOTO	_00245_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2671     	.line	335, "main.c"; 	checkBat();
                                    1- 2672     	MCALL	_checkBat
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2673     	.line	336, "main.c"; 	startTime--;
                                    1- 2674     	BANKSEL	_startTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 06rr                      1- 2675     	DECR	_startTime,F
                                    1- 2676     	.line	337, "main.c"; 	showFlag = 1;
     001D 2101                      1- 2677     	MOVIA	0x01
                                    1- 2678     	BANKSEL	_showFlag
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2679     	MOVAR	_showFlag
                                    1- 2680     	.line	338, "main.c"; 	baiweiNum = shiweiNum = 8;
     0020 2108                      1- 2681     	MOVIA	0x08
                                    1- 2682     	BANKSEL	_shiweiNum
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2683     	MOVAR	_shiweiNum
                                    1- 2684     	BANKSEL	_baiweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2685     	MOVAR	_baiweiNum
                                    1- 2686     	.line	339, "main.c"; 	geweiNum = 8;
                                    1- 2687     	BANKSEL	_geweiNum
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2688     	MOVAR	_geweiNum
                                    1- 2689     	.line	339, "main.c"; 	}
                                    1- 2690     	MGOTO	_00247_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 2691     _00245_DS_:
                                    1- 2692     	.line	341, "main.c"; 	else if(stepShowTime)
                                    1- 2693     	BANKSEL	_stepShowTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2694     	MOVR	_stepShowTime,W
     002A 0D03                      1- 2695     	BTRSC	STATUS,2
                                    1- 2696     	MGOTO	_00242_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2697     	.line	343, "main.c"; 	showFlag = 1;
     002C 2101                      1- 2698     	MOVIA	0x01
                                    1- 2699     	BANKSEL	_showFlag
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2700     	MOVAR	_showFlag
                                    1- 2701     	.line	344, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2702     	BANKSEL	_shiweiNum
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1- 2703     	CLRR	_shiweiNum
                                    1- 2704     	BANKSEL	_baiweiNum
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 2705     	CLRR	_baiweiNum
                                    1- 2706     	.line	345, "main.c"; 	geweiNum = workStep;
                                    1- 2707     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2708     	MOVR	_workStep,W
                                    1- 2709     	BANKSEL	_geweiNum
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 2710     	MOVAR	_geweiNum
                                    1- 2711     	.line	345, "main.c"; 	}
                                    1- 2712     	MGOTO	_00247_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1- 2713     _00242_DS_:
                                    1- 2714     	.line	347, "main.c"; 	else if(pwShowTime || workTime)
                                    1- 2715     	BANKSEL	_pwShowTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2716     	MOVR	_pwShowTime,W
     003A 0903                      1- 2717     	BTRSS	STATUS,2
                                    1- 2718     	MGOTO	_00237_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2719     	BANKSEL	_workTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2720     	MOVR	_workTime,W
     003E 0D03                      1- 2721     	BTRSC	STATUS,2
                                    1- 2722     	MGOTO	_00238_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 2723     _00237_DS_:
                                    1- 2724     	.line	349, "main.c"; 	showFlag = 1;
     0040 2101                      1- 2725     	MOVIA	0x01
                                    1- 2726     	BANKSEL	_showFlag
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2727     	MOVAR	_showFlag
                                    1- 2728     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2729     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2730     	.line	350, "main.c"; 	if(pwStep > 99)
     0043 2164                      1- 2731     	MOVIA	0x64
                                    1- 2732     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 04rr                      1- 2733     	SUBAR	_pwStep,W
     0046 0803                      1- 2734     	BTRSS	STATUS,0
                                    1- 2735     	MGOTO	_00212_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2736     	.line	352, "main.c"; 	baiweiNum = 1;
     0048 2101                      1- 2737     	MOVIA	0x01
                                    1- 2738     	BANKSEL	_baiweiNum
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2739     	MOVAR	_baiweiNum
                                    1- 2740     	.line	353, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2741     	BANKSEL	_geweiNum
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2742     	CLRR	_geweiNum
                                    1- 2743     	BANKSEL	_shiweiNum
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1- 2744     	CLRR	_shiweiNum
                                    1- 2745     	MGOTO	_00247_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1- 2746     _00212_DS_:
                                    1- 2747     	.line	357, "main.c"; 	baiweiNum = 0;
                                    1- 2748     	BANKSEL	_baiweiNum
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 2749     	CLRR	_baiweiNum
                                    1- 2750     	.line	358, "main.c"; 	shiweiNum = pwStep/10;
     0052 210A                      1- 2751     	MOVIA	0x0a
     0053 00rr                      1- 2752     	MOVAR	STK00
                                    1- 2753     	BANKSEL	_pwStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 2754     	MOVR	_pwStep,W
                                    1- 2755     	MCALL	__divuchar
     0056 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2756     	BANKSEL	_shiweiNum
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 2757     	MOVAR	_shiweiNum
                                    1- 2758     	.line	359, "main.c"; 	geweiNum = pwStep%10;
     0059 210A                      1- 2759     	MOVIA	0x0a
     005A 00rr                      1- 2760     	MOVAR	STK00
                                    1- 2761     	BANKSEL	_pwStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 2762     	MOVR	_pwStep,W
                                    1- 2763     	MCALL	__moduchar
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2764     	BANKSEL	_geweiNum
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2765     	MOVAR	_geweiNum
                                    1- 2766     	.line	359, "main.c"; 	}
                                    1- 2767     	MGOTO	_00247_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2768     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2769     ;;unsigned compare: left >= lit (0x6=6), size=1
     0061                           1- 2770     _00238_DS_:
                                    1- 2771     	.line	364, "main.c"; 	if(pwStep <= 5 && offShowTime == 0 && ((0x20 & PORTA) == 0) && pwFlag)
     0061 2106                      1- 2772     	MOVIA	0x06
                                    1- 2773     	BANKSEL	_pwStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 2774     	SUBAR	_pwStep,W
     0064 0C03                      1- 2775     	BTRSC	STATUS,0
                                    1- 2776     	MGOTO	_00232_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2777     	BANKSEL	_offShowTime
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2778     	MOVR	_offShowTime,W
     0068 0903                      1- 2779     	BTRSS	STATUS,2
                                    1- 2780     	MGOTO	_00232_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2781     	BANKSEL	_PORTA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 0Err                      1- 2782     	BTRSC	_PORTA,5
                                    1- 2783     	MGOTO	_00232_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2784     	BANKSEL	_pwFlag
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2785     	MOVR	_pwFlag,W
     006F 0D03                      1- 2786     	BTRSC	STATUS,2
                                    1- 2787     	MGOTO	_00232_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2788     	.line	366, "main.c"; 	showFlag = 1;
     0071 2101                      1- 2789     	MOVIA	0x01
                                    1- 2790     	BANKSEL	_showFlag
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 2791     	MOVAR	_showFlag
                                    1- 2792     	.line	367, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2793     	BANKSEL	_shanTime
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 05rr                      1- 2794     	INCR	_shanTime,F
     0076 0D03                      1- 2795     	BTRSC	STATUS,2
     0077 05rr                      1- 2796     	INCR	(_shanTime + 1),F
                                    1- 2797     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2798     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0078 2101                      1- 2799     	MOVIA	0x01
     0079 04rr                      1- 2800     	SUBAR	(_shanTime + 1),W
     007A 0903                      1- 2801     	BTRSS	STATUS,2
                                    1- 2802     	MGOTO	_00299_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C 21F5                      1- 2803     	MOVIA	0xf5
     007D 04rr                      1- 2804     	SUBAR	_shanTime,W
     007E                           1- 2805     _00299_DS_:
     007E 0803                      1- 2806     	BTRSS	STATUS,0
                                    1- 2807     	MGOTO	_00215_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2808     	.line	369, "main.c"; 	shanTime = 0;
                                    1- 2809     	BANKSEL	_shanTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1- 2810     	CLRR	_shanTime
     0082 02rr                      1- 2811     	CLRR	(_shanTime + 1)
                                    1- 2812     	.line	370, "main.c"; 	showFlag = 0;
                                    1- 2813     	BANKSEL	_showFlag
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 02rr                      1- 2814     	CLRR	_showFlag
     0085                           1- 2815     _00215_DS_:
                                    1- 2816     	.line	373, "main.c"; 	if(shanTime % 100 < 50)
     0085 2164                      1- 2817     	MOVIA	0x64
     0086 00rr                      1- 2818     	MOVAR	STK02
     0087 2100                      1- 2819     	MOVIA	0x00
     0088 00rr                      1- 2820     	MOVAR	STK01
                                    1- 2821     	BANKSEL	_shanTime
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 2822     	MOVR	_shanTime,W
     008B 00rr                      1- 2823     	MOVAR	STK00
     008C 01rr                      1- 2824     	MOVR	(_shanTime + 1),W
                                    1- 2825     	MCALL	__moduint
     008D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2826     	BANKSEL	r0x104D
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 2827     	MOVAR	r0x104D
     0090 01rr                      1- 2828     	MOVR	STK00,W
                                    1- 2829     	BANKSEL	r0x104C
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 2830     	MOVAR	r0x104C
                                    1- 2831     ;;unsigned compare: left < lit (0x32=50), size=2
     0093 2100                      1- 2832     	MOVIA	0x00
                                    1- 2833     	BANKSEL	r0x104D
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 2834     	SUBAR	r0x104D,W
     0096 0903                      1- 2835     	BTRSS	STATUS,2
                                    1- 2836     	MGOTO	_00300_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098 2132                      1- 2837     	MOVIA	0x32
                                    1- 2838     	BANKSEL	r0x104C
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 2839     	SUBAR	r0x104C,W
     009B                           1- 2840     _00300_DS_:
     009B 0C03                      1- 2841     	BTRSC	STATUS,0
                                    1- 2842     	MGOTO	_00217_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2843     	.line	375, "main.c"; 	showFlag = 1;
     009D 2101                      1- 2844     	MOVIA	0x01
                                    1- 2845     	BANKSEL	_showFlag
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 2846     	MOVAR	_showFlag
                                    1- 2847     	.line	376, "main.c"; 	baiweiNum = 0;
                                    1- 2848     	BANKSEL	_baiweiNum
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 2849     	CLRR	_baiweiNum
                                    1- 2850     	.line	377, "main.c"; 	shiweiNum = 0;
                                    1- 2851     	BANKSEL	_shiweiNum
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 02rr                      1- 2852     	CLRR	_shiweiNum
                                    1- 2853     	.line	378, "main.c"; 	geweiNum = pwStep;
                                    1- 2854     	BANKSEL	_pwStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 2855     	MOVR	_pwStep,W
                                    1- 2856     	BANKSEL	_geweiNum
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 2857     	MOVAR	_geweiNum
                                    1- 2858     	MGOTO	_00247_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
     00A9                           1- 2859     _00217_DS_:
                                    1- 2860     	.line	382, "main.c"; 	showFlag = 0;
                                    1- 2861     	BANKSEL	_showFlag
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 02rr                      1- 2862     	CLRR	_showFlag
                                    1- 2863     	.line	382, "main.c"; 	}
                                    1- 2864     	MGOTO	_00247_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC                           1- 2865     _00232_DS_:
                                    1- 2866     	.line	385, "main.c"; 	else if(offShowTime > 0)
                                    1- 2867     	BANKSEL	_offShowTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 2868     	MOVR	_offShowTime,W
     00AE 0D03                      1- 2869     	BTRSC	STATUS,2
                                    1- 2870     	MGOTO	_00229_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2871     	.line	387, "main.c"; 	showFlag = 1;
     00B0 2101                      1- 2872     	MOVIA	0x01
                                    1- 2873     	BANKSEL	_showFlag
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 2874     	MOVAR	_showFlag
                                    1- 2875     	.line	388, "main.c"; 	baiweiNum = 0;
                                    1- 2876     	BANKSEL	_baiweiNum
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 02rr                      1- 2877     	CLRR	_baiweiNum
                                    1- 2878     	.line	389, "main.c"; 	shiweiNum = 10;
     00B5 210A                      1- 2879     	MOVIA	0x0a
                                    1- 2880     	BANKSEL	_shiweiNum
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 2881     	MOVAR	_shiweiNum
                                    1- 2882     	.line	390, "main.c"; 	geweiNum = 10;
                                    1- 2883     	BANKSEL	_geweiNum
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 00rr                      1- 2884     	MOVAR	_geweiNum
                                    1- 2885     	.line	390, "main.c"; 	}
                                    1- 2886     	MGOTO	_00247_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
     00BB                           1- 2887     _00229_DS_:
                                    1- 2888     	.line	392, "main.c"; 	else if(0x20 & PORTA)
                                    1- 2889     	BANKSEL	_PORTA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 0Arr                      1- 2890     	BTRSS	_PORTA,5
                                    1- 2891     	MGOTO	_00226_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2892     	.line	398, "main.c"; 	showFlag = 1;
     00BE 2101                      1- 2893     	MOVIA	0x01
                                    1- 2894     	BANKSEL	_showFlag
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 2895     	MOVAR	_showFlag
                                    1- 2896     	.line	402, "main.c"; 	if(fullFlag)
                                    1- 2897     	BANKSEL	_fullFlag
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 2898     	MOVR	_fullFlag,W
     00C3 0D03                      1- 2899     	BTRSC	STATUS,2
                                    1- 2900     	MGOTO	_00223_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2901     	.line	404, "main.c"; 	fullFlag = 1;
     00C5 2101                      1- 2902     	MOVIA	0x01
     00C6 00rr                      1- 2903     	MOVAR	_fullFlag
                                    1- 2904     	.line	406, "main.c"; 	baiweiNum = 1;
                                    1- 2905     	BANKSEL	_baiweiNum
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 2906     	MOVAR	_baiweiNum
                                    1- 2907     	.line	407, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2908     	BANKSEL	_geweiNum
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 02rr                      1- 2909     	CLRR	_geweiNum
                                    1- 2910     	BANKSEL	_shiweiNum
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 02rr                      1- 2911     	CLRR	_shiweiNum
                                    1- 2912     	.line	407, "main.c"; 	}
                                    1- 2913     	MGOTO	_00247_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
     00CE                           1- 2914     _00223_DS_:
                                    1- 2915     	.line	412, "main.c"; 	if(pwStep == 100)
                                    1- 2916     	BANKSEL	_pwStep
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 2917     	MOVR	_pwStep,W
     00D0 2464                      1- 2918     	XORIA	0x64
     00D1 0903                      1- 2919     	BTRSS	STATUS,2
                                    1- 2920     	MGOTO	_00220_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2921     	.line	414, "main.c"; 	fullFlag = 1;
     00D3 2101                      1- 2922     	MOVIA	0x01
                                    1- 2923     	BANKSEL	_fullFlag
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 00rr                      1- 2924     	MOVAR	_fullFlag
                                    1- 2925     	.line	415, "main.c"; 	baiweiNum = 0;
                                    1- 2926     	BANKSEL	_baiweiNum
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 2927     	CLRR	_baiweiNum
                                    1- 2928     	.line	416, "main.c"; 	shiweiNum = 9;
     00D8 2109                      1- 2929     	MOVIA	0x09
                                    1- 2930     	BANKSEL	_shiweiNum
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 2931     	MOVAR	_shiweiNum
                                    1- 2932     	.line	417, "main.c"; 	geweiNum = 9;
                                    1- 2933     	BANKSEL	_geweiNum
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 2934     	MOVAR	_geweiNum
                                    1- 2935     	MGOTO	_00247_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
     00DE                           1- 2936     _00220_DS_:
                                    1- 2937     	.line	421, "main.c"; 	baiweiNum = 0;
                                    1- 2938     	BANKSEL	_baiweiNum
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 02rr                      1- 2939     	CLRR	_baiweiNum
                                    1- 2940     	.line	422, "main.c"; 	shiweiNum = pwStep/10;
     00E0 210A                      1- 2941     	MOVIA	0x0a
     00E1 00rr                      1- 2942     	MOVAR	STK00
                                    1- 2943     	BANKSEL	_pwStep
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 01rr                      1- 2944     	MOVR	_pwStep,W
                                    1- 2945     	MCALL	__divuchar
     00E4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2946     	BANKSEL	_shiweiNum
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 2947     	MOVAR	_shiweiNum
                                    1- 2948     	.line	423, "main.c"; 	geweiNum = pwStep%10;
     00E7 210A                      1- 2949     	MOVIA	0x0a
     00E8 00rr                      1- 2950     	MOVAR	STK00
                                    1- 2951     	BANKSEL	_pwStep
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 01rr                      1- 2952     	MOVR	_pwStep,W
                                    1- 2953     	MCALL	__moduchar
     00EB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2954     	BANKSEL	_geweiNum
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1- 2955     	MOVAR	_geweiNum
                                    1- 2956     	.line	423, "main.c"; 	}
                                    1- 2957     	MGOTO	_00247_DS_
     00EE 3rrr                      3-   63 m1      LGOTO rom_address
     00EF                           1- 2958     _00226_DS_:
                                    1- 2959     	.line	442, "main.c"; 	showFlag = 0;
                                    1- 2960     	BANKSEL	_showFlag
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 02rr                      1- 2961     	CLRR	_showFlag
     00F1                           1- 2962     _00247_DS_:
                                    1- 2963     	.line	446, "main.c"; 	}
                                    1- 2964     	RETURN	
     00F1 0010                      3-   40 m1      ret
                                    1- 2965     ; exit point of _chrgCtr
                                    1- 2968     ;	code size estimation:
                                    1- 2969     ;	 1135+  378 =  1513 instructions ( 3782 byte)
                                    1- 2971     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
