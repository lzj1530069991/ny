
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	__divuint
                                    1-   51     	extern	_PORTAbits
                                    1-   52     	extern	_PORTBbits
                                    1-   53     	extern	_PCONbits
                                    1-   54     	extern	_BWUCONbits
                                    1-   55     	extern	_ABPLCONbits
                                    1-   56     	extern	_BPHCONbits
                                    1-   57     	extern	_INTEbits
                                    1-   58     	extern	_INTFbits
                                    1-   59     	extern	_ADMDbits
                                    1-   60     	extern	_ADRbits
                                    1-   61     	extern	_ADVREFHbits
                                    1-   62     	extern	_ADCRbits
                                    1-   63     	extern	_AWUCONbits
                                    1-   64     	extern	_PACONbits
                                    1-   65     	extern	_INTEDGbits
                                    1-   66     	extern	_ANAENbits
                                    1-   67     	extern	_RFCbits
                                    1-   68     	extern	_INTE2bits
                                    1-   69     	extern	_INDF
                                    1-   70     	extern	_TMR0
                                    1-   71     	extern	_PCL
                                    1-   72     	extern	_STATUS
                                    1-   73     	extern	_FSR
                                    1-   74     	extern	_PORTA
                                    1-   75     	extern	_PORTB
                                    1-   76     	extern	_PCON
                                    1-   77     	extern	_BWUCON
                                    1-   78     	extern	_PCHBUF
                                    1-   79     	extern	_ABPLCON
                                    1-   80     	extern	_BPHCON
                                    1-   81     	extern	_INTE
                                    1-   82     	extern	_INTF
                                    1-   83     	extern	_ADMD
                                    1-   84     	extern	_ADR
                                    1-   85     	extern	_ADD
                                    1-   86     	extern	_ADVREFH
                                    1-   87     	extern	_ADCR
                                    1-   88     	extern	_AWUCON
                                    1-   89     	extern	_PACON
                                    1-   90     	extern	_INTEDG
                                    1-   91     	extern	_TMRH
                                    1-   92     	extern	_ANAEN
                                    1-   93     	extern	_RFC
                                    1-   94     	extern	_TM3RH
                                    1-   95     	extern	_INTE2
                                    1-   96     	extern	_TMR1
                                    1-   97     	extern	_T1CR1
                                    1-   98     	extern	_T1CR2
                                    1-   99     	extern	_PWM1DUTY
                                    1-  100     	extern	_PS1CV
                                    1-  101     	extern	_BZ1CR
                                    1-  102     	extern	_IRCR
                                    1-  103     	extern	_TBHP
                                    1-  104     	extern	_TBHD
                                    1-  105     	extern	_TMR2
                                    1-  106     	extern	_T2CR1
                                    1-  107     	extern	_T2CR2
                                    1-  108     	extern	_PWM2DUTY
                                    1-  109     	extern	_PS2CV
                                    1-  110     	extern	_BZ2CR
                                    1-  111     	extern	_OSCCR
                                    1-  112     	extern	_TMR3
                                    1-  113     	extern	_T3CR1
                                    1-  114     	extern	_T3CR2
                                    1-  115     	extern	_PWM3DUTY
                                    1-  116     	extern	_PS3CV
                                    1-  117     	extern	_BZ3CR
                                    1-  118     	extern	_IOSTA
                                    1-  119     	extern	_IOSTB
                                    1-  120     	extern	_APHCON
                                    1-  121     	extern	_PS0CV
                                    1-  122     	extern	_BODCON
                                    1-  123     	extern	_CMPCR
                                    1-  124     	extern	_PCON1
                                    1-  125     	extern	_T0MD
                                    1-  126     	extern	___sdcc_saved_fsr
                                    1-  127     	extern	___sdcc_saved_stk00
                                    1-  128     	extern	___sdcc_saved_stk01
                                    1-  129     	extern	__gptrget1
                                    1-  130     	extern	__nyc_ny8_startup
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; global declarations
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     	extern	_delay
                                    1-  135     	extern	_F_wait_eoc
                                    1-  136     	extern	_F_Quarter_VDD_Convert
                                    1-  137     	extern	_checkBat
                                    1-  138     	extern	_initAD
                                    1-  139     	extern	_keyCtr
                                    1-  140     	extern	_pwmStop
                                    1-  141     	extern	_pwmInit
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_initSys
                                    1-  144     	extern	_refreshNub
                                    1-  145     	extern	_checkIRKey
                                    1-  146     	extern	_chrgCtr
                                    1-  147     	extern	_isr
                                    1-  148     	extern	_main
                                    1-  149     	extern	_keyRead
                                    1-  150     	extern	_R_Quarter_VDD_DATA
                                    1-  151     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  152     	extern	_intCount
                                    1-  153     	extern	_IntFlag
                                    1-  154     	extern	_baiweiNum
                                    1-  155     	extern	_shiweiNum
                                    1-  156     	extern	_geweiNum
                                    1-  157     	extern	_showFlag
                                    1-  158     	extern	_irStep
                                    1-  159     	extern	_revCount
                                    1-  160     	extern	_revZeroCount
                                    1-  161     	extern	_checkCount
                                    1-  162     	extern	_pwmTime
                                    1-  163     	extern	_sendFlag
                                    1-  164     	extern	_workTime
                                    1-  165     	extern	_workStep
                                    1-  166     	extern	_pwFlag
                                    1-  167     	extern	_pwShowTime
                                    1-  168     	extern	_stepShowTime
                                    1-  169     	extern	_pwStep
                                    1-  170     	extern	_keyCount
                                    1-  171     	extern	_longPressFlag
                                    1-  172     	extern	_sleepTime
                                    1-  173     	extern	_fullFlag
                                    1-  174     	extern	_shanTime
                                    1-  175     	extern	_count1s
                                    1-  176     	extern	_waitTime
                                    1-  177     	extern	_offShowTime
                                    1-  178     	extern	_notRecv
                                    1-  179     	extern	_zhedangFlag
                                    1-  180     	extern	_zhedangTime
                                    1-  181     	extern	_sleepFlag
                                    1-  182     	extern	_powerShi
                                    1-  183     	extern	_powerGe
                                    1-  184     	extern	_count5s
                                    1-  186     	extern PSAVE
                                    1-  187     	extern SSAVE
                                    1-  188     	extern WSAVE
                                    1-  189     	extern STK04
                                    1-  190     	extern STK03
                                    1-  191     	extern STK02
                                    1-  192     	extern STK01
                                    1-  193     	extern STK00
                                    1-  195     .segment "uninit", 0x20000040
 20000040                           1-  196     PSAVE:
                                    1-  197     	.res 1
 20000041                           1-  198     SSAVE:
                                    1-  199     	.res 1
 20000042                           1-  200     WSAVE:
                                    1-  201     	.res 1
 20000043                           1-  202     STK04:
                                    1-  203     	.res 1
 20000044                           1-  204     STK03:
                                    1-  205     	.res 1
 20000045                           1-  206     STK02:
                                    1-  207     	.res 1
 20000046                           1-  208     STK01:
                                    1-  209     	.res 1
 20000047                           1-  210     STK00:
                                    1-  211     	.res 1
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ; global definitions
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_Quarter_VDD_DATA:
                                    1-  218     	.res	2
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_Quarter_VDD_DATA_LB:
                                    1-  223     	.res	1
                                    1-  226     ;--------------------------------------------------------
                                    1-  227     ; absolute symbol definitions
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ; compiler-defined variables
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x104C:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x104D:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x104A:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x104B:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1048:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1049:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1045:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1046:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1044:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1042:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1043:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x103C:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x103D:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x103E:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x103F:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1040:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1036:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1037:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1038:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x103B:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1032:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1031:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1033:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1034:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1035:
                                    1-  306     	.res	1
                                    1-  307     ;--------------------------------------------------------
                                    1-  308     ; initialized data
                                    1-  309     ;--------------------------------------------------------
                                    1-  311     .segment "idata"
     0000                           1-  312     _intCount:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _IntFlag:
     0000 0000                      1-  319     	dw	0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _baiweiNum:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _shiweiNum:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _geweiNum:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _showFlag:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _irStep:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _revCount:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _revZeroCount:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _checkCount:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _pwmTime:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _sendFlag:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _workTime:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _workStep:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _pwFlag:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _pwShowTime:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _stepShowTime:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _pwStep:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _keyCount:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _longPressFlag:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _sleepTime:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _fullFlag:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _shanTime:
     0000 0000 0000                 1-  445     	dw	0x00, 0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _count1s:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _waitTime:
     0000 0000 0000                 1-  457     	dw	0x00, 0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _offShowTime:
     0000 0000                      1-  463     	dw	0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _notRecv:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _zhedangFlag:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _zhedangTime:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _sleepFlag:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _powerShi:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _powerGe:
     0000 0000                      1-  499     	dw	0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _count5s:
     0000 0000 0000                 1-  505     	dw	0x00, 0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _numArray:
     0000 003F                      1-  511     	dw	0x3f
     0001 0006                      1-  512     	dw	0x06
     0002 005B                      1-  513     	dw	0x5b
     0003 004F                      1-  514     	dw	0x4f
     0004 0066                      1-  515     	dw	0x66
     0005 006D                      1-  516     	dw	0x6d
     0006 007D                      1-  517     	dw	0x7d
     0007 0007                      1-  518     	dw	0x07
     0008 007F                      1-  519     	dw	0x7f
     0009 006F                      1-  520     	dw	0x6f
     000A 0071                      1-  521     	dw	0x71
     000B 0079                      1-  522     	dw	0x79
     000C 0050                      1-  523     	dw	0x50
                                    1-  526     ;--------------------------------------------------------
                                    1-  527     ; overlayable items in internal ram 
                                    1-  528     ;--------------------------------------------------------
                                    1-  529     ;	udata_ovr
                                    1-  530     ;--------------------------------------------------------
                                    1-  531     ; reset vector 
                                    1-  532     ;--------------------------------------------------------
                                    1-  533     ORG	0x0000
     0000 3rrr                      1-  534     	LGOTO	__nyc_ny8_startup
                                    1-  535     ;--------------------------------------------------------
                                    1-  536     ; interrupt and initialization code
                                    1-  537     ;--------------------------------------------------------
                                    1-  538     ORG 0x0008
                                    1-  539     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  541     .segment "code"
     0000                           1-  542     __sdcc_interrupt:
                                    1-  543     ;***
                                    1-  544     ;  pBlock Stats: dbName = I
                                    1-  545     ;***
                                    1-  546     ;2 compiler assigned registers:
                                    1-  547     ;   STK00
                                    1-  548     ;   STK01
                                    1-  549     ;; Starting pCode block
     0000                           1-  550     _isr:
                                    1-  551     ; 0 exit points
                                    1-  552     	.line	76, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  553     	MOVAR	WSAVE
     0001 1503                      1-  554     	SWAPR	STATUS,W
     0002 0283                      1-  555     	CLRR	STATUS
     0003 00rr                      1-  556     	MOVAR	SSAVE
     0004 010A                      1-  557     	MOVR	PCHBUF,W
     0005 028A                      1-  558     	CLRR	PCHBUF
     0006 00rr                      1-  559     	MOVAR	PSAVE
     0007 0104                      1-  560     	MOVR	FSR,W
                                    1-  561     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  562     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  563     	MOVR	STK00,W
                                    1-  564     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  565     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  566     	MOVR	STK01,W
                                    1-  567     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  568     	MOVAR	___sdcc_saved_stk01
                                    1-  569     	.line	78, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  570     	BTRSS	_INTFbits,0
                                    1-  571     	MGOTO	_00120_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  572     	.line	80, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  573     	MOVIA	0x37
     0013 03rr                      1-  574     	ADDAR	_TMR0,F
                                    1-  575     	.line	82, "main.c"; 	if(++intCount >= 100)
                                    1-  576     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  577     	INCR	_intCount,F
                                    1-  578     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  579     	MOVIA	0x64
     0017 04rr                      1-  580     	SUBAR	_intCount,W
     0018 0803                      1-  581     	BTRSS	STATUS,0
                                    1-  582     	MGOTO	_00120_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  583     	.line	84, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  584     	MOVIA	0x01
                                    1-  585     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  586     	MOVAR	_IntFlag
                                    1-  587     	.line	85, "main.c"; 	intCount = 0;	
                                    1-  588     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  589     	CLRR	_intCount
                                    1-  590     	.line	86, "main.c"; 	if(++count1s > 100)
                                    1-  591     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  592     	INCR	_count1s,F
                                    1-  593     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  594     ;;unsigned compare: left >= lit (0x65=101), size=1
     0021 2165                      1-  595     	MOVIA	0x65
     0022 04rr                      1-  596     	SUBAR	_count1s,W
     0023 0803                      1-  597     	BTRSS	STATUS,0
                                    1-  598     	MGOTO	_00120_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  599     	.line	88, "main.c"; 	count1s = 0;
     0025 02rr                      1-  600     	CLRR	_count1s
                                    1-  601     	.line	89, "main.c"; 	if(stepShowTime > 0)
                                    1-  602     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  603     	MOVR	_stepShowTime,W
     0028 0D03                      1-  604     	BTRSC	STATUS,2
                                    1-  605     	MGOTO	_00113_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  606     	.line	90, "main.c"; 	stepShowTime--;
     002A 06rr                      1-  607     	DECR	_stepShowTime,F
                                    1-  608     	MGOTO	_00120_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  609     _00113_DS_:
                                    1-  610     	.line	91, "main.c"; 	else if(pwShowTime > 0)
                                    1-  611     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  612     	MOVR	_pwShowTime,W
     002E 0D03                      1-  613     	BTRSC	STATUS,2
                                    1-  614     	MGOTO	_00110_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  615     	.line	93, "main.c"; 	pwShowTime--;
     0030 06rr                      1-  616     	DECR	_pwShowTime,F
                                    1-  617     	MGOTO	_00120_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  618     _00110_DS_:
                                    1-  619     	.line	95, "main.c"; 	else if(offShowTime > 0)
                                    1-  620     	BANKSEL	_offShowTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  621     	MOVR	_offShowTime,W
     0034 0D03                      1-  622     	BTRSC	STATUS,2
                                    1-  623     	MGOTO	_00120_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  624     	.line	97, "main.c"; 	--offShowTime;
     0036 17rr                      1-  625     	DECRSZ	_offShowTime,F
                                    1-  626     	.line	98, "main.c"; 	if(offShowTime == 0)
                                    1-  627     	MGOTO	_00120_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  628     	.line	99, "main.c"; 	sleepFlag = 1;
     0038 2101                      1-  629     	MOVIA	0x01
                                    1-  630     	BANKSEL	_sleepFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1-  631     	MOVAR	_sleepFlag
     003B                           1-  632     _00120_DS_:
                                    1-  633     	.line	116, "main.c"; 	if(INTFbits.PABIF)
     003B 08rr                      1-  634     	BTRSS	_INTFbits,1
                                    1-  635     	MGOTO	_00122_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  636     	.line	118, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003D 21FD                      1-  637     	MOVIA	0xfd
     003E 00rr                      1-  638     	MOVAR	_INTF
     003F                           1-  639     _00122_DS_:
                                    1-  640     	.line	121, "main.c"; 	INTF = 0;
     003F 02rr                      1-  641     	CLRR	_INTF
                                    1-  642     	.line	123, "main.c"; 	}
                                    1-  643     	BANKSEL	___sdcc_saved_stk01
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1-  644     	MOVR	___sdcc_saved_stk01,W
     0042 00rr                      1-  645     	MOVAR	STK01
                                    1-  646     	BANKSEL	___sdcc_saved_stk00
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  647     	MOVR	___sdcc_saved_stk00,W
     0045 00rr                      1-  648     	MOVAR	STK00
                                    1-  649     	BANKSEL	___sdcc_saved_fsr
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  650     	MOVR	___sdcc_saved_fsr,W
     0048 0084                      1-  651     	MOVAR	FSR
     0049 01rr                      1-  652     	MOVR	PSAVE,W
     004A 008A                      1-  653     	MOVAR	PCHBUF
     004B 0283                      1-  654     	CLRR	STATUS
     004C 15rr                      1-  655     	SWAPR	SSAVE,W
     004D 0083                      1-  656     	MOVAR	STATUS
     004E 15rr                      1-  657     	SWAPR	WSAVE,F
     004F 15rr                      1-  658     	SWAPR	WSAVE,W
     0050                           1-  659     END_OF_INTERRUPT:
     0050 0011                      1-  660     	RETIE	
                                    1-  662     ;--------------------------------------------------------
                                    1-  663     ; code
                                    1-  664     ;--------------------------------------------------------
                                    1-  665     ;***
                                    1-  666     ;  pBlock Stats: dbName = M
                                    1-  667     ;***
                                    1-  668     ;has an exit
                                    1-  669     ;functions called:
                                    1-  670     ;   _initSys
                                    1-  671     ;   _initAD
                                    1-  672     ;   _gotoSleep
                                    1-  673     ;   _refreshNub
                                    1-  674     ;   _refreshNub
                                    1-  675     ;   _setInput
                                    1-  676     ;   __divuchar
                                    1-  677     ;   __moduchar
                                    1-  678     ;   _checkIRKey
                                    1-  679     ;   _checkBat
                                    1-  680     ;   _keyCtr
                                    1-  681     ;   _chrgCtr
                                    1-  682     ;   _gotoSleep
                                    1-  683     ;   _gotoSleep
                                    1-  684     ;   _delay
                                    1-  685     ;   _initSys
                                    1-  686     ;   _initAD
                                    1-  687     ;   _gotoSleep
                                    1-  688     ;   _refreshNub
                                    1-  689     ;   _refreshNub
                                    1-  690     ;   _setInput
                                    1-  691     ;   __divuchar
                                    1-  692     ;   __moduchar
                                    1-  693     ;   _checkIRKey
                                    1-  694     ;   _checkBat
                                    1-  695     ;   _keyCtr
                                    1-  696     ;   _chrgCtr
                                    1-  697     ;   _gotoSleep
                                    1-  698     ;   _gotoSleep
                                    1-  699     ;   _delay
                                    1-  700     ;3 compiler assigned registers:
                                    1-  701     ;   STK00
                                    1-  702     ;   r0x104C
                                    1-  703     ;   r0x104D
                                    1-  704     ;; Starting pCode block
                                    1-  705     .segment "code"; module=main, function=_main
     0000                           1-  707     _main:
                                    1-  708     ; 2 exit points
                                    1-  709     	.line	127, "main.c"; 	initSys();
                                    1-  710     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  711     	.line	128, "main.c"; 	initAD();
                                    1-  712     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  713     	.line	129, "main.c"; 	gotoSleep();
                                    1-  714     	MCALL	_gotoSleep
     0002 2rrr                      3-   66 m1      LCALL rom_address
     0003                           1-  715     _00153_DS_:
                                    1-  716     	.line	132, "main.c"; 	CLRWDT();							// Clear WatchDog
     0003 0002                      1-  717     	clrwdt
                                    1-  718     	.line	133, "main.c"; 	if(showFlag)
                                    1-  719     	BANKSEL	_showFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  720     	MOVR	_showFlag,W
     0006 0D03                      1-  721     	BTRSC	STATUS,2
                                    1-  722     	MGOTO	_00135_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  723     	.line	134, "main.c"; 	refreshNub();
                                    1-  724     	MCALL	_refreshNub
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  725     	MGOTO	_00136_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1-  726     _00135_DS_:
                                    1-  727     	.line	137, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  728     	BANKSEL	_keyCount
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1-  729     	MOVR	_keyCount,W
     000C 0D03                      1-  730     	BTRSC	STATUS,2
                                    1-  731     	MGOTO	_00131_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  732     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  733     	MOVR	_pwFlag,W
     0010 2401                      1-  734     	XORIA	0x01
     0011 0903                      1-  735     	BTRSS	STATUS,2
                                    1-  736     	MGOTO	_00131_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  737     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  738     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  739     	.line	139, "main.c"; 	if(pwStep > 99)
     0013 2164                      1-  740     	MOVIA	0x64
                                    1-  741     	BANKSEL	_pwStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1-  742     	SUBAR	_pwStep,W
     0016 0803                      1-  743     	BTRSS	STATUS,0
                                    1-  744     	MGOTO	_00128_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  745     	.line	141, "main.c"; 	baiweiNum = 1;
     0018 2101                      1-  746     	MOVIA	0x01
                                    1-  747     	BANKSEL	_baiweiNum
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1-  748     	MOVAR	_baiweiNum
                                    1-  749     	.line	142, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  750     	BANKSEL	_geweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1-  751     	CLRR	_geweiNum
                                    1-  752     	BANKSEL	_shiweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  753     	CLRR	_shiweiNum
                                    1-  754     	MGOTO	_00129_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  755     _00128_DS_:
                                    1-  756     	.line	146, "main.c"; 	baiweiNum = 0;
                                    1-  757     	BANKSEL	_baiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1-  758     	CLRR	_baiweiNum
                                    1-  759     	.line	147, "main.c"; 	shiweiNum = powerShi;
                                    1-  760     	BANKSEL	_powerShi
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1-  761     	MOVR	_powerShi,W
                                    1-  762     	BANKSEL	_shiweiNum
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1-  763     	MOVAR	_shiweiNum
                                    1-  764     	.line	148, "main.c"; 	geweiNum = powerGe;
                                    1-  765     	BANKSEL	_powerGe
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  766     	MOVR	_powerGe,W
                                    1-  767     	BANKSEL	_geweiNum
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1-  768     	MOVAR	_geweiNum
     002A                           1-  769     _00129_DS_:
                                    1-  770     	.line	150, "main.c"; 	refreshNub();
                                    1-  771     	MCALL	_refreshNub
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  772     	MGOTO	_00136_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  773     _00131_DS_:
                                    1-  774     	.line	154, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  775     	BANKSEL	_geweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1-  776     	CLRR	_geweiNum
                                    1-  777     	BANKSEL	_shiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  778     	CLRR	_shiweiNum
                                    1-  779     	BANKSEL	_baiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  780     	CLRR	_baiweiNum
                                    1-  781     	.line	155, "main.c"; 	setInput();
                                    1-  782     	MCALL	_setInput
     0032 2rrr                      3-   66 m1      LCALL rom_address
     0033                           1-  783     _00136_DS_:
                                    1-  784     	.line	158, "main.c"; 	if(!IntFlag)
                                    1-  785     	BANKSEL	_IntFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  786     	MOVR	_IntFlag,W
     0035 0D03                      1-  787     	BTRSC	STATUS,2
                                    1-  788     	MGOTO	_00153_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  789     	.line	160, "main.c"; 	IntFlag = 0;
     0037 02rr                      1-  790     	CLRR	_IntFlag
                                    1-  791     	.line	161, "main.c"; 	powerShi = pwStep/10;
     0038 210A                      1-  792     	MOVIA	0x0a
     0039 00rr                      1-  793     	MOVAR	STK00
                                    1-  794     	BANKSEL	_pwStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  795     	MOVR	_pwStep,W
                                    1-  796     	MCALL	__divuchar
     003C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  797     	BANKSEL	_powerShi
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1-  798     	MOVAR	_powerShi
                                    1-  799     	.line	162, "main.c"; 	powerGe = pwStep%10;
     003F 210A                      1-  800     	MOVIA	0x0a
     0040 00rr                      1-  801     	MOVAR	STK00
                                    1-  802     	BANKSEL	_pwStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1-  803     	MOVR	_pwStep,W
                                    1-  804     	MCALL	__moduchar
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  805     	BANKSEL	_powerGe
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1-  806     	MOVAR	_powerGe
                                    1-  807     	.line	163, "main.c"; 	PORTA |= 0x40;
                                    1-  808     	BANKSEL	_PORTA
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 1Brr                      1-  809     	BSR	_PORTA,6
                                    1-  810     	.line	164, "main.c"; 	checkIRKey();
                                    1-  811     	MCALL	_checkIRKey
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  812     	.line	165, "main.c"; 	checkBat();
                                    1-  813     	MCALL	_checkBat
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  814     	.line	166, "main.c"; 	PORTA &= 0xBF;
                                    1-  815     	BANKSEL	_PORTA
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 1Frr                      1-  816     	BCR	_PORTA,6
                                    1-  817     	.line	167, "main.c"; 	keyCtr();
                                    1-  818     	MCALL	_keyCtr
     004C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  819     	.line	168, "main.c"; 	chrgCtr();
                                    1-  820     	MCALL	_chrgCtr
     004D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  821     	.line	169, "main.c"; 	if(waitTime > 0)
                                    1-  822     	BANKSEL	_waitTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1-  823     	MOVR	_waitTime,W
     0050 11rr                      1-  824     	IORAR	(_waitTime + 1),W
     0051 0D03                      1-  825     	BTRSC	STATUS,2
                                    1-  826     	MGOTO	_00140_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  827     	.line	170, "main.c"; 	waitTime--;
     0053 21FF                      1-  828     	MOVIA	0xff
     0054 03rr                      1-  829     	ADDAR	_waitTime,F
     0055 0803                      1-  830     	BTRSS	STATUS,0
     0056 06rr                      1-  831     	DECR	(_waitTime + 1),F
     0057                           1-  832     _00140_DS_:
                                    1-  833     	.line	171, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0)
                                    1-  834     	BANKSEL	_PORTA
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  835     	MOVR	_PORTA,W
                                    1-  836     	BANKSEL	r0x104C
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1-  837     	MOVAR	r0x104C
                                    1-  838     	BANKSEL	r0x104D
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 02rr                      1-  839     	CLRR	r0x104D
                                    1-  840     	BANKSEL	r0x104C
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 07rr                      1-  841     	COMR	r0x104C,W
     005F 00rr                      1-  842     	MOVAR	r0x104C
                                    1-  843     	BANKSEL	r0x104D
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 07rr                      1-  844     	COMR	r0x104D,W
     0062 00rr                      1-  845     	MOVAR	r0x104D
                                    1-  846     	BANKSEL	r0x104C
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 0Arr                      1-  847     	BTRSS	r0x104C,5
                                    1-  848     	MGOTO	_00144_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  849     	BANKSEL	_keyCount
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  850     	MOVR	_keyCount,W
     0068 0903                      1-  851     	BTRSS	STATUS,2
                                    1-  852     	MGOTO	_00144_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  853     	BANKSEL	_pwFlag
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1-  854     	MOVR	_pwFlag,W
     006C 0903                      1-  855     	BTRSS	STATUS,2
                                    1-  856     	MGOTO	_00144_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  857     	BANKSEL	_stepShowTime
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1-  858     	MOVR	_stepShowTime,W
     0070 0903                      1-  859     	BTRSS	STATUS,2
                                    1-  860     	MGOTO	_00144_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	BANKSEL	_pwShowTime
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1-  862     	MOVR	_pwShowTime,W
     0074 0903                      1-  863     	BTRSS	STATUS,2
                                    1-  864     	MGOTO	_00144_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  865     	BANKSEL	_offShowTime
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1-  866     	MOVR	_offShowTime,W
     0078 0903                      1-  867     	BTRSS	STATUS,2
                                    1-  868     	MGOTO	_00144_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     	.line	174, "main.c"; 	if(++sleepTime > 100)
                                    1-  870     	BANKSEL	_sleepTime
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 05rr                      1-  871     	INCR	_sleepTime,F
                                    1-  872     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  873     ;;unsigned compare: left >= lit (0x65=101), size=1
     007C 2165                      1-  874     	MOVIA	0x65
     007D 04rr                      1-  875     	SUBAR	_sleepTime,W
     007E 0C03                      1-  876     	BTRSC	STATUS,0
                                    1-  877     	.line	175, "main.c"; 	gotoSleep();
                                    1-  878     	MCALL	_gotoSleep
     007F 2rrr                      3-   66 m1      LCALL rom_address
     0080                           1-  879     _00144_DS_:
                                    1-  880     	.line	177, "main.c"; 	if(sleepFlag)
                                    1-  881     	BANKSEL	_sleepFlag
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1-  882     	MOVR	_sleepFlag,W
     0082 0903                      1-  883     	BTRSS	STATUS,2
                                    1-  884     	.line	178, "main.c"; 	gotoSleep();
                                    1-  885     	MCALL	_gotoSleep
     0083 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  886     	.line	179, "main.c"; 	delay(100);
     0084 2164                      1-  887     	MOVIA	0x64
     0085 00rr                      1-  888     	MOVAR	STK00
     0086 2100                      1-  889     	MOVIA	0x00
                                    1-  890     	MCALL	_delay
     0087 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  891     	.line	179, "main.c"; 	//    	if(getbit(PORTB, 3) == 0)
                                    1-  892     	MGOTO	_00153_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  893     	.line	201, "main.c"; 	}
                                    1-  894     	RETURN	
     0089 0010                      3-   40 m1      ret
                                    1-  895     ; exit point of _main
                                    1-  897     ;***
                                    1-  898     ;  pBlock Stats: dbName = C
                                    1-  899     ;***
                                    1-  900     ;has an exit
                                    1-  901     ;6 compiler assigned registers:
                                    1-  902     ;   r0x1031
                                    1-  903     ;   STK00
                                    1-  904     ;   r0x1032
                                    1-  905     ;   r0x1033
                                    1-  906     ;   r0x1034
                                    1-  907     ;   r0x1035
                                    1-  908     ;; Starting pCode block
                                    1-  909     .segment "code"; module=main, function=_delay
                                    1-  911     ;local variable name mapping:
     0000                           1-  916     _delay:
                                    1-  917     ; 2 exit points
                                    1-  918     	.line	647, "main.c"; 	void delay(int count)
                                    1-  919     	BANKSEL	r0x1031
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  920     	MOVAR	r0x1031
     0002 01rr                      1-  921     	MOVR	STK00,W
                                    1-  922     	BANKSEL	r0x1032
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  923     	MOVAR	r0x1032
                                    1-  924     	.line	650, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1-  925     	MOVIA	0x01
                                    1-  926     	BANKSEL	r0x1033
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1-  927     	MOVAR	r0x1033
                                    1-  928     	BANKSEL	r0x1034
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1-  929     	CLRR	r0x1034
     000A                           1-  930     _00422_DS_:
                                    1-  931     	BANKSEL	r0x1031
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1-  932     	MOVR	r0x1031,W
     000C 2580                      1-  933     	ADDIA	0x80
                                    1-  934     	BANKSEL	r0x1035
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1-  935     	MOVAR	r0x1035
                                    1-  936     	BANKSEL	r0x1034
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  937     	MOVR	r0x1034,W
     0011 2580                      1-  938     	ADDIA	0x80
                                    1-  939     	BANKSEL	r0x1035
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1-  940     	SUBAR	r0x1035,W
     0014 0903                      1-  941     	BTRSS	STATUS,2
                                    1-  942     	MGOTO	_00433_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  943     	BANKSEL	r0x1033
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1-  944     	MOVR	r0x1033,W
                                    1-  945     	BANKSEL	r0x1032
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1-  946     	SUBAR	r0x1032,W
     001A                           1-  947     _00433_DS_:
     001A 0803                      1-  948     	BTRSS	STATUS,0
                                    1-  949     	MGOTO	_00424_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  950     	BANKSEL	r0x1033
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1-  951     	INCR	r0x1033,F
     001E 0903                      1-  952     	BTRSS	STATUS,2
                                    1-  953     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  954     	BANKSEL	r0x1034
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1-  955     	INCR	r0x1034,F
     0022                           1-  956     _00001_DS_:
                                    1-  957     	MGOTO	_00422_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1-  958     _00424_DS_:
                                    1-  959     	.line	652, "main.c"; 	}
                                    1-  960     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1-  961     ; exit point of _delay
                                    1-  963     ;***
                                    1-  964     ;  pBlock Stats: dbName = C
                                    1-  965     ;***
                                    1-  966     ;has an exit
                                    1-  967     ;; Starting pCode block
                                    1-  968     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  970     _F_wait_eoc:
                                    1-  971     ; 2 exit points
     0000                           1-  972     _00415_DS_:
                                    1-  973     	.line	643, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  974     	BTRSS	_ADMDbits,5
                                    1-  975     	MGOTO	_00415_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  976     	.line	645, "main.c"; 	}
                                    1-  977     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  978     ; exit point of _F_wait_eoc
                                    1-  980     ;***
                                    1-  981     ;  pBlock Stats: dbName = C
                                    1-  982     ;***
                                    1-  983     ;has an exit
                                    1-  984     ;functions called:
                                    1-  985     ;   _F_wait_eoc
                                    1-  986     ;   _F_wait_eoc
                                    1-  987     ;6 compiler assigned registers:
                                    1-  988     ;   r0x1036
                                    1-  989     ;   r0x1037
                                    1-  990     ;   r0x1038
                                    1-  991     ;   r0x1039
                                    1-  992     ;   r0x103A
                                    1-  993     ;   r0x103B
                                    1-  994     ;; Starting pCode block
                                    1-  995     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1-  997     ;local variable name mapping:
     0000                           1- 1000     _F_Quarter_VDD_Convert:
                                    1- 1001     ; 2 exit points
                                    1- 1002     	.line	628, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1003     	BANKSEL	r0x1036
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1004     	MOVAR	r0x1036
                                    1- 1005     	.line	631, "main.c"; 	ADMD  = 0x90 | C_ADC_PB1;			// Select internal 1/4VDD as ADC input
     0002 2196                      1- 1006     	MOVIA	0x96
     0003 00rr                      1- 1007     	MOVAR	_ADMD
                                    1- 1008     	.line	632, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1009     	MOVIA	0x01
                                    1- 1010     	BANKSEL	r0x1037
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1011     	MOVAR	r0x1037
     0007                           1- 1012     _00408_DS_:
                                    1- 1013     	BANKSEL	r0x1037
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1014     	MOVR	r0x1037,W
                                    1- 1015     	BANKSEL	r0x1036
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1016     	SUBAR	r0x1036,W
     000B 0803                      1- 1017     	BTRSS	STATUS,0
                                    1- 1018     	MGOTO	_00410_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1019     	.line	634, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1020     	BSR	_ADMDbits,6
                                    1- 1021     	.line	635, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1022     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1023     	.line	636, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1024     	MOVIA	0x0f
     0010 10rr                      1- 1025     	ANDAR	_ADR,W
                                    1- 1026     ;;3	MOVAR	r0x1038
                                    1- 1027     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1028     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1029     	.line	637, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1030     	MOVR	_ADD,W
                                    1- 1031     	BANKSEL	r0x1038
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1032     	MOVAR	r0x1038
                                    1- 1033     ;;1	CLRR	r0x1039
                                    1- 1034     ;;101	MOVR	r0x1038,W
                                    1- 1035     ;;99	MOVAR	r0x103A
     0016 2100                      1- 1036     	MOVIA	0x00
                                    1- 1037     	BANKSEL	r0x103B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1038     	MOVAR	r0x103B
                                    1- 1039     ;;100	MOVR	r0x103A,W
                                    1- 1040     	BANKSEL	r0x1038
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1041     	MOVR	r0x1038,W
                                    1- 1042     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1043     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1044     	BANKSEL	r0x103B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1045     	MOVR	r0x103B,W
     001F 0C03                      1- 1046     	BTRSC	STATUS,0
     0020 05rr                      1- 1047     	INCR	r0x103B,W
     0021 0D03                      1- 1048     	BTRSC	STATUS,2
                                    1- 1049     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1050     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1051     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1052     _00002_DS_:
                                    1- 1053     	.line	632, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1054     	BANKSEL	r0x1037
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1055     	INCR	r0x1037,F
                                    1- 1056     	MGOTO	_00408_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1057     _00410_DS_:
                                    1- 1058     	.line	639, "main.c"; 	}
                                    1- 1059     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1060     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1062     ;***
                                    1- 1063     ;  pBlock Stats: dbName = C
                                    1- 1064     ;***
                                    1- 1065     ;has an exit
                                    1- 1066     ;functions called:
                                    1- 1067     ;   _F_Quarter_VDD_Convert
                                    1- 1068     ;   __divuint
                                    1- 1069     ;   __divuint
                                    1- 1070     ;   _F_Quarter_VDD_Convert
                                    1- 1071     ;   __divuint
                                    1- 1072     ;   __divuint
                                    1- 1073     ;9 compiler assigned registers:
                                    1- 1074     ;   r0x103C
                                    1- 1075     ;   r0x103D
                                    1- 1076     ;   r0x103E
                                    1- 1077     ;   r0x103F
                                    1- 1078     ;   STK02
                                    1- 1079     ;   STK01
                                    1- 1080     ;   STK00
                                    1- 1081     ;   r0x1040
                                    1- 1082     ;   r0x1041
                                    1- 1083     ;; Starting pCode block
                                    1- 1084     .segment "code"; module=main, function=_checkBat
                                    1- 1086     ;local variable name mapping:
     0000                           1- 1089     _checkBat:
                                    1- 1090     ; 2 exit points
                                    1- 1091     	.line	566, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1092     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1093     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1094     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1095     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1096     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1097     	.line	567, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1098     	MOVIA	0x08
                                    1- 1099     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1100     	.line	568, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1101     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1102     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1103     	ANDIA	0xf0
     000A 00rr                      1- 1104     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1105     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1106     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1107     	ANDIA	0x0f
     000E 11rr                      1- 1108     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1109     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1110     	.line	569, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1111     	MOVIA	0xf0
                                    1- 1112     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1113     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1114     	.line	570, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1115     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1116     	BANKSEL	r0x103E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1117     	MOVAR	r0x103E
                                    1- 1118     	BANKSEL	r0x103C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1119     	MOVAR	r0x103C
                                    1- 1120     	BANKSEL	r0x103D
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1121     	CLRR	r0x103D
                                    1- 1122     ;;104	MOVR	r0x103C,W
     001A 2100                      1- 1123     	MOVIA	0x00
                                    1- 1124     	BANKSEL	r0x103F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1125     	MOVAR	r0x103F
                                    1- 1126     	BANKSEL	r0x103E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1127     	MOVR	r0x103E,W
                                    1- 1128     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1129     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1130     	BANKSEL	r0x103F
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1131     	MOVR	r0x103F,W
     0023 0C03                      1- 1132     	BTRSC	STATUS,0
     0024 05rr                      1- 1133     	INCR	r0x103F,W
     0025 0D03                      1- 1134     	BTRSC	STATUS,2
                                    1- 1135     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1136     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1137     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1138     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1139     _00003_DS_:
                                    1- 1140     	.line	571, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1141     	BCR	STATUS,0
                                    1- 1142     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1143     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1144     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1145     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1146     	BCR	STATUS,0
     002E 13rr                      1- 1147     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1148     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1149     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1150     	BCR	STATUS,0
     0031 13rr                      1- 1151     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1152     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1153     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1154     ;;unsigned compare: left >= lit (0x30E=782), size=2
                                    1- 1155     	.line	572, "main.c"; 	if(R_Quarter_VDD_DATA > 781)
     0033 2103                      1- 1156     	MOVIA	0x03
     0034 04rr                      1- 1157     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1158     	BTRSS	STATUS,2
                                    1- 1159     	MGOTO	_00392_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 210E                      1- 1160     	MOVIA	0x0e
     0038 04rr                      1- 1161     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1162     _00392_DS_:
     0039 0803                      1- 1163     	BTRSS	STATUS,0
                                    1- 1164     	MGOTO	_00355_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1165     	.line	574, "main.c"; 	pwStep = 100;
     003B 2164                      1- 1166     	MOVIA	0x64
                                    1- 1167     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1168     	MOVAR	_pwStep
                                    1- 1169     	MGOTO	_00357_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1170     ;;unsigned compare: left < lit (0x226=550), size=2
     003F                           1- 1171     _00355_DS_:
                                    1- 1172     	.line	576, "main.c"; 	else if(R_Quarter_VDD_DATA < 550)
     003F 2102                      1- 1173     	MOVIA	0x02
                                    1- 1174     	BANKSEL	_R_Quarter_VDD_DATA
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 1175     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0042 0903                      1- 1176     	BTRSS	STATUS,2
                                    1- 1177     	MGOTO	_00393_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
     0044 2126                      1- 1178     	MOVIA	0x26
     0045 04rr                      1- 1179     	SUBAR	_R_Quarter_VDD_DATA,W
     0046                           1- 1180     _00393_DS_:
     0046 0C03                      1- 1181     	BTRSC	STATUS,0
                                    1- 1182     	MGOTO	_00352_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1183     	.line	578, "main.c"; 	pwStep = 0;
                                    1- 1184     	BANKSEL	_pwStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1185     	CLRR	_pwStep
                                    1- 1186     	MGOTO	_00357_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1187     ;;unsigned compare: left < lit (0x2D0=720), size=2
     004B                           1- 1188     _00352_DS_:
                                    1- 1189     	.line	583, "main.c"; 	if(R_Quarter_VDD_DATA >= 720)
     004B 2102                      1- 1190     	MOVIA	0x02
                                    1- 1191     	BANKSEL	_R_Quarter_VDD_DATA
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 04rr                      1- 1192     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     004E 0903                      1- 1193     	BTRSS	STATUS,2
                                    1- 1194     	MGOTO	_00394_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050 21D0                      1- 1195     	MOVIA	0xd0
     0051 04rr                      1- 1196     	SUBAR	_R_Quarter_VDD_DATA,W
     0052                           1- 1197     _00394_DS_:
     0052 0803                      1- 1198     	BTRSS	STATUS,0
                                    1- 1199     	MGOTO	_00336_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1200     	.line	585, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 720) + 40;
     0054 2158                      1- 1201     	MOVIA	0x58
                                    1- 1202     	BANKSEL	_R_Quarter_VDD_DATA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 03rr                      1- 1203     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1204     	BANKSEL	r0x103C
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 1205     	MOVAR	r0x103C
     0059 21FD                      1- 1206     	MOVIA	0xfd
                                    1- 1207     	BANKSEL	r0x103D
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 1208     	MOVAR	r0x103D
                                    1- 1209     	BANKSEL	_R_Quarter_VDD_DATA
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1210     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     005E 0C03                      1- 1211     	BTRSC	STATUS,0
     005F 05rr                      1- 1212     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0060 0D03                      1- 1213     	BTRSC	STATUS,2
                                    1- 1214     	MGOTO	_00004_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1215     	BANKSEL	r0x103D
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 03rr                      1- 1216     	ADDAR	r0x103D,F
     0064                           1- 1217     _00004_DS_:
                                    1- 1218     	MGOTO	_00337_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1219     ;;unsigned compare: left < lit (0x276=630), size=2
     0065                           1- 1220     _00336_DS_:
                                    1- 1221     	.line	587, "main.c"; 	else if(R_Quarter_VDD_DATA >= 630)
     0065 2102                      1- 1222     	MOVIA	0x02
                                    1- 1223     	BANKSEL	_R_Quarter_VDD_DATA
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 1224     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0068 0903                      1- 1225     	BTRSS	STATUS,2
                                    1- 1226     	MGOTO	_00395_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 2176                      1- 1227     	MOVIA	0x76
     006B 04rr                      1- 1228     	SUBAR	_R_Quarter_VDD_DATA,W
     006C                           1- 1229     _00395_DS_:
     006C 0803                      1- 1230     	BTRSS	STATUS,0
                                    1- 1231     	MGOTO	_00333_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1232     	.line	589, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 630)/3) + 10;
     006E 218A                      1- 1233     	MOVIA	0x8a
                                    1- 1234     	BANKSEL	_R_Quarter_VDD_DATA
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 03rr                      1- 1235     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1236     	BANKSEL	r0x103E
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1237     	MOVAR	r0x103E
     0073 21FD                      1- 1238     	MOVIA	0xfd
                                    1- 1239     	BANKSEL	r0x103F
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1240     	MOVAR	r0x103F
                                    1- 1241     	BANKSEL	_R_Quarter_VDD_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 1242     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0078 0C03                      1- 1243     	BTRSC	STATUS,0
     0079 05rr                      1- 1244     	INCR	(_R_Quarter_VDD_DATA + 1),W
     007A 0D03                      1- 1245     	BTRSC	STATUS,2
                                    1- 1246     	MGOTO	_00005_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1247     	BANKSEL	r0x103F
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 03rr                      1- 1248     	ADDAR	r0x103F,F
     007E                           1- 1249     _00005_DS_:
     007E 2103                      1- 1250     	MOVIA	0x03
     007F 00rr                      1- 1251     	MOVAR	STK02
     0080 2100                      1- 1252     	MOVIA	0x00
     0081 00rr                      1- 1253     	MOVAR	STK01
                                    1- 1254     	BANKSEL	r0x103E
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1- 1255     	MOVR	r0x103E,W
     0084 00rr                      1- 1256     	MOVAR	STK00
                                    1- 1257     	BANKSEL	r0x103F
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 01rr                      1- 1258     	MOVR	r0x103F,W
                                    1- 1259     	MCALL	__divuint
     0087 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1260     	BANKSEL	r0x103F
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 1261     	MOVAR	r0x103F
     008A 01rr                      1- 1262     	MOVR	STK00,W
                                    1- 1263     	BANKSEL	r0x103E
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1264     	MOVAR	r0x103E
     008D 210A                      1- 1265     	MOVIA	0x0a
     008E 03rr                      1- 1266     	ADDAR	r0x103E,W
                                    1- 1267     	BANKSEL	r0x103C
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 1268     	MOVAR	r0x103C
                                    1- 1269     	BANKSEL	r0x103D
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 02rr                      1- 1270     	CLRR	r0x103D
     0093 14rr                      1- 1271     	RLR	r0x103D,F
                                    1- 1272     	BANKSEL	r0x103F
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 1273     	MOVR	r0x103F,W
                                    1- 1274     	BANKSEL	r0x103D
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 03rr                      1- 1275     	ADDAR	r0x103D,F
                                    1- 1276     	MGOTO	_00337_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1277     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1278     ;;unsigned compare: left >= lit (0x227=551), size=2
     0099                           1- 1279     _00333_DS_:
                                    1- 1280     	.line	591, "main.c"; 	else if(R_Quarter_VDD_DATA > 550)
     0099 2102                      1- 1281     	MOVIA	0x02
                                    1- 1282     	BANKSEL	_R_Quarter_VDD_DATA
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 04rr                      1- 1283     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     009C 0903                      1- 1284     	BTRSS	STATUS,2
                                    1- 1285     	MGOTO	_00396_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
     009E 2127                      1- 1286     	MOVIA	0x27
     009F 04rr                      1- 1287     	SUBAR	_R_Quarter_VDD_DATA,W
     00A0                           1- 1288     _00396_DS_:
     00A0 0803                      1- 1289     	BTRSS	STATUS,0
                                    1- 1290     	MGOTO	_00330_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1291     	.line	593, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 630)/8;
     00A2 218A                      1- 1292     	MOVIA	0x8a
                                    1- 1293     	BANKSEL	_R_Quarter_VDD_DATA
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 03rr                      1- 1294     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1295     	BANKSEL	r0x103E
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 1296     	MOVAR	r0x103E
     00A7 21FD                      1- 1297     	MOVIA	0xfd
                                    1- 1298     	BANKSEL	r0x103F
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 00rr                      1- 1299     	MOVAR	r0x103F
                                    1- 1300     	BANKSEL	_R_Quarter_VDD_DATA
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 01rr                      1- 1301     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00AC 0C03                      1- 1302     	BTRSC	STATUS,0
     00AD 05rr                      1- 1303     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00AE 0D03                      1- 1304     	BTRSC	STATUS,2
                                    1- 1305     	MGOTO	_00006_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1306     	BANKSEL	r0x103F
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 03rr                      1- 1307     	ADDAR	r0x103F,F
                                    1- 1308     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00B2                           1- 1309     _00006_DS_:
     00B2 1C03                      1- 1310     	BCR	STATUS,0
                                    1- 1311     	BANKSEL	r0x103F
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 13rr                      1- 1312     	RRR	r0x103F,W
                                    1- 1313     	BANKSEL	r0x103D
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 1314     	MOVAR	r0x103D
                                    1- 1315     	BANKSEL	r0x103E
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 13rr                      1- 1316     	RRR	r0x103E,W
                                    1- 1317     	BANKSEL	r0x103C
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 1318     	MOVAR	r0x103C
                                    1- 1319     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00BB 1C03                      1- 1320     	BCR	STATUS,0
                                    1- 1321     	BANKSEL	r0x103D
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 13rr                      1- 1322     	RRR	r0x103D,F
                                    1- 1323     	BANKSEL	r0x103C
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 13rr                      1- 1324     	RRR	r0x103C,F
                                    1- 1325     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C0 1C03                      1- 1326     	BCR	STATUS,0
                                    1- 1327     	BANKSEL	r0x103D
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 13rr                      1- 1328     	RRR	r0x103D,F
                                    1- 1329     	BANKSEL	r0x103C
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 13rr                      1- 1330     	RRR	r0x103C,F
                                    1- 1331     	MGOTO	_00337_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6                           1- 1332     _00330_DS_:
                                    1- 1333     	.line	597, "main.c"; 	tempValue = 0;
                                    1- 1334     	BANKSEL	r0x103C
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 02rr                      1- 1335     	CLRR	r0x103C
                                    1- 1336     	BANKSEL	r0x103D
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 02rr                      1- 1337     	CLRR	r0x103D
     00CA                           1- 1338     _00337_DS_:
                                    1- 1339     	.line	599, "main.c"; 	if(0x20 & PORTA)
                                    1- 1340     	BANKSEL	_PORTA
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 0Arr                      1- 1341     	BTRSS	_PORTA,5
                                    1- 1342     	MGOTO	_00349_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1343     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1344     ;;unsigned compare: left >= lit (0xB=11), size=2
                                    1- 1345     	.line	601, "main.c"; 	if(tempValue > 10 && tempValue < 99)
     00CD 2100                      1- 1346     	MOVIA	0x00
                                    1- 1347     	BANKSEL	r0x103D
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 04rr                      1- 1348     	SUBAR	r0x103D,W
     00D0 0903                      1- 1349     	BTRSS	STATUS,2
                                    1- 1350     	MGOTO	_00397_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
     00D2 210B                      1- 1351     	MOVIA	0x0b
                                    1- 1352     	BANKSEL	r0x103C
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 04rr                      1- 1353     	SUBAR	r0x103C,W
     00D5                           1- 1354     _00397_DS_:
     00D5 0803                      1- 1355     	BTRSS	STATUS,0
                                    1- 1356     	MGOTO	_00008_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1357     ;;unsigned compare: left < lit (0x63=99), size=2
     00D7 2100                      1- 1358     	MOVIA	0x00
                                    1- 1359     	BANKSEL	r0x103D
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 04rr                      1- 1360     	SUBAR	r0x103D,W
     00DA 0903                      1- 1361     	BTRSS	STATUS,2
                                    1- 1362     	MGOTO	_00398_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
     00DC 2163                      1- 1363     	MOVIA	0x63
                                    1- 1364     	BANKSEL	r0x103C
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 04rr                      1- 1365     	SUBAR	r0x103C,W
     00DF                           1- 1366     _00398_DS_:
     00DF 0C03                      1- 1367     	BTRSC	STATUS,0
                                    1- 1368     	MGOTO	_00008_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1369     	.line	603, "main.c"; 	tempValue = tempValue - 10 + (tempValue/10);
     00E1 21F6                      1- 1370     	MOVIA	0xf6
                                    1- 1371     	BANKSEL	r0x103C
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 03rr                      1- 1372     	ADDAR	r0x103C,W
                                    1- 1373     	BANKSEL	r0x103E
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 1374     	MOVAR	r0x103E
     00E6 21FF                      1- 1375     	MOVIA	0xff
                                    1- 1376     	BANKSEL	r0x103F
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 00rr                      1- 1377     	MOVAR	r0x103F
                                    1- 1378     	BANKSEL	r0x103D
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 01rr                      1- 1379     	MOVR	r0x103D,W
     00EB 0C03                      1- 1380     	BTRSC	STATUS,0
     00EC 05rr                      1- 1381     	INCR	r0x103D,W
     00ED 0D03                      1- 1382     	BTRSC	STATUS,2
                                    1- 1383     	MGOTO	_00007_DS_
     00EE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1384     	BANKSEL	r0x103F
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 03rr                      1- 1385     	ADDAR	r0x103F,F
     00F1                           1- 1386     _00007_DS_:
     00F1 210A                      1- 1387     	MOVIA	0x0a
     00F2 00rr                      1- 1388     	MOVAR	STK02
     00F3 2100                      1- 1389     	MOVIA	0x00
     00F4 00rr                      1- 1390     	MOVAR	STK01
                                    1- 1391     	BANKSEL	r0x103C
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 01rr                      1- 1392     	MOVR	r0x103C,W
     00F7 00rr                      1- 1393     	MOVAR	STK00
                                    1- 1394     	BANKSEL	r0x103D
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 01rr                      1- 1395     	MOVR	r0x103D,W
                                    1- 1396     	MCALL	__divuint
     00FA 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1397     	BANKSEL	r0x1040
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 00rr                      1- 1398     	MOVAR	r0x1040
     00FD 01rr                      1- 1399     	MOVR	STK00,W
                                    1- 1400     ;;1	MOVAR	r0x1041
                                    1- 1401     	BANKSEL	r0x103E
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 03rr                      1- 1402     	ADDAR	r0x103E,W
                                    1- 1403     	BANKSEL	r0x103C
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 00rr                      1- 1404     	MOVAR	r0x103C
                                    1- 1405     	BANKSEL	r0x103F
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 01rr                      1- 1406     	MOVR	r0x103F,W
                                    1- 1407     	BANKSEL	r0x103D
     0104 rrrr                      3-  110 m1      .banksel ram_address
     0105 00rr                      1- 1408     	MOVAR	r0x103D
                                    1- 1409     	BANKSEL	r0x1040
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 01rr                      1- 1410     	MOVR	r0x1040,W
     0108 0C03                      1- 1411     	BTRSC	STATUS,0
     0109 05rr                      1- 1412     	INCR	r0x1040,W
     010A 0D03                      1- 1413     	BTRSC	STATUS,2
                                    1- 1414     	MGOTO	_00008_DS_
     010B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1415     	BANKSEL	r0x103D
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 03rr                      1- 1416     	ADDAR	r0x103D,F
     010E                           1- 1417     _00008_DS_:
                                    1- 1418     	.line	606, "main.c"; 	if(pwStep < tempValue)
                                    1- 1419     	BANKSEL	_pwStep
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 01rr                      1- 1420     	MOVR	_pwStep,W
                                    1- 1421     	BANKSEL	r0x103E
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 00rr                      1- 1422     	MOVAR	r0x103E
                                    1- 1423     	BANKSEL	r0x103F
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 02rr                      1- 1424     	CLRR	r0x103F
                                    1- 1425     	BANKSEL	r0x103D
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 01rr                      1- 1426     	MOVR	r0x103D,W
                                    1- 1427     	BANKSEL	r0x103F
     0116 rrrr                      3-  110 m1      .banksel ram_address
     0117 04rr                      1- 1428     	SUBAR	r0x103F,W
     0118 0903                      1- 1429     	BTRSS	STATUS,2
                                    1- 1430     	MGOTO	_00399_DS_
     0119 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1431     	BANKSEL	r0x103C
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 01rr                      1- 1432     	MOVR	r0x103C,W
                                    1- 1433     	BANKSEL	r0x103E
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 04rr                      1- 1434     	SUBAR	r0x103E,W
     011E                           1- 1435     _00399_DS_:
     011E 0C03                      1- 1436     	BTRSC	STATUS,0
                                    1- 1437     	MGOTO	_00357_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1438     	.line	608, "main.c"; 	if(++count5s > 500)
                                    1- 1439     	BANKSEL	_count5s
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 05rr                      1- 1440     	INCR	_count5s,F
     0122 0D03                      1- 1441     	BTRSC	STATUS,2
     0123 05rr                      1- 1442     	INCR	(_count5s + 1),F
                                    1- 1443     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1444     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0124 2101                      1- 1445     	MOVIA	0x01
     0125 04rr                      1- 1446     	SUBAR	(_count5s + 1),W
     0126 0903                      1- 1447     	BTRSS	STATUS,2
                                    1- 1448     	MGOTO	_00400_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
     0128 21F5                      1- 1449     	MOVIA	0xf5
     0129 04rr                      1- 1450     	SUBAR	_count5s,W
     012A                           1- 1451     _00400_DS_:
     012A 0803                      1- 1452     	BTRSS	STATUS,0
                                    1- 1453     	MGOTO	_00357_DS_
     012B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1454     	.line	610, "main.c"; 	count5s = 0;
                                    1- 1455     	BANKSEL	_count5s
     012C rrrr                      3-  110 m1      .banksel ram_address
     012D 02rr                      1- 1456     	CLRR	_count5s
     012E 02rr                      1- 1457     	CLRR	(_count5s + 1)
                                    1- 1458     	.line	611, "main.c"; 	pwStep++;
                                    1- 1459     	BANKSEL	_pwStep
     012F rrrr                      3-  110 m1      .banksel ram_address
     0130 05rr                      1- 1460     	INCR	_pwStep,F
                                    1- 1461     	MGOTO	_00357_DS_
     0131 3rrr                      3-   63 m1      LGOTO rom_address
     0132                           1- 1462     _00349_DS_:
                                    1- 1463     	.line	619, "main.c"; 	if(pwStep > tempValue || pwStep == 0)
                                    1- 1464     	BANKSEL	_pwStep
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 01rr                      1- 1465     	MOVR	_pwStep,W
                                    1- 1466     	BANKSEL	r0x103E
     0134 rrrr                      3-  110 m1      .banksel ram_address
     0135 00rr                      1- 1467     	MOVAR	r0x103E
                                    1- 1468     	BANKSEL	r0x103F
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 02rr                      1- 1469     	CLRR	r0x103F
     0138 2100                      1- 1470     	MOVIA	0x00
                                    1- 1471     	BANKSEL	r0x103D
     0139 rrrr                      3-  110 m1      .banksel ram_address
     013A 04rr                      1- 1472     	SUBAR	r0x103D,W
     013B 0903                      1- 1473     	BTRSS	STATUS,2
                                    1- 1474     	MGOTO	_00401_DS_
     013C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1475     	BANKSEL	r0x103E
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 01rr                      1- 1476     	MOVR	r0x103E,W
                                    1- 1477     	BANKSEL	r0x103C
     013F rrrr                      3-  110 m1      .banksel ram_address
     0140 04rr                      1- 1478     	SUBAR	r0x103C,W
     0141                           1- 1479     _00401_DS_:
     0141 0803                      1- 1480     	BTRSS	STATUS,0
                                    1- 1481     	MGOTO	_00345_DS_
     0142 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1482     	BANKSEL	_pwStep
     0143 rrrr                      3-  110 m1      .banksel ram_address
     0144 01rr                      1- 1483     	MOVR	_pwStep,W
     0145 0903                      1- 1484     	BTRSS	STATUS,2
                                    1- 1485     	MGOTO	_00357_DS_
     0146 3rrr                      3-   63 m1      LGOTO rom_address
     0147                           1- 1486     _00345_DS_:
                                    1- 1487     	.line	620, "main.c"; 	pwStep = tempValue;
                                    1- 1488     	BANKSEL	r0x103C
     0147 rrrr                      3-  110 m1      .banksel ram_address
     0148 01rr                      1- 1489     	MOVR	r0x103C,W
                                    1- 1490     	BANKSEL	_pwStep
     0149 rrrr                      3-  110 m1      .banksel ram_address
     014A 00rr                      1- 1491     	MOVAR	_pwStep
     014B                           1- 1492     _00357_DS_:
                                    1- 1493     	.line	624, "main.c"; 	}
                                    1- 1494     	RETURN	
     014B 0010                      3-   40 m1      ret
                                    1- 1495     ; exit point of _checkBat
                                    1- 1497     ;***
                                    1- 1498     ;  pBlock Stats: dbName = C
                                    1- 1499     ;***
                                    1- 1500     ;has an exit
                                    1- 1501     ;functions called:
                                    1- 1502     ;   _delay
                                    1- 1503     ;   _delay
                                    1- 1504     ;1 compiler assigned register :
                                    1- 1505     ;   STK00
                                    1- 1506     ;; Starting pCode block
                                    1- 1507     .segment "code"; module=main, function=_initAD
     0000                           1- 1509     _initAD:
                                    1- 1510     ; 2 exit points
                                    1- 1511     	.line	538, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1512     	MOVIA	0x80
     0001 00rr                      1- 1513     	MOVAR	_ADMD
                                    1- 1514     	.line	543, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1515     	CLRR	_ADVREFH
                                    1- 1516     	.line	548, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1517     	MOVIA	0x10
     0004 00rr                      1- 1518     	MOVAR	_ADR
                                    1- 1519     	.line	552, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1520     	MOVIA	0x03
     0006 00rr                      1- 1521     	MOVAR	_ADCR
                                    1- 1522     	.line	559, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1523     	BSR	_ADMDbits,4
                                    1- 1524     	.line	560, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1525     	MOVIA	0x32
     0009 00rr                      1- 1526     	MOVAR	STK00
     000A 2100                      1- 1527     	MOVIA	0x00
                                    1- 1528     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1529     	.line	561, "main.c"; 	}
                                    1- 1530     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1531     ; exit point of _initAD
                                    1- 1533     ;***
                                    1- 1534     ;  pBlock Stats: dbName = C
                                    1- 1535     ;***
                                    1- 1536     ;has an exit
                                    1- 1537     ;functions called:
                                    1- 1538     ;   _keyRead
                                    1- 1539     ;   _keyRead
                                    1- 1540     ;1 compiler assigned register :
                                    1- 1541     ;   r0x1043
                                    1- 1542     ;; Starting pCode block
                                    1- 1543     .segment "code"; module=main, function=_keyCtr
                                    1- 1545     ;local variable name mapping:
     0000                           1- 1547     _keyCtr:
                                    1- 1548     ; 2 exit points
                                    1- 1549     	.line	491, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1550     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1551     	COMR	_PORTA,W
                                    1- 1552     	BANKSEL	r0x1043
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1553     	MOVAR	r0x1043
     0004 2180                      1- 1554     	MOVIA	0x80
     0005 10rr                      1- 1555     	ANDAR	r0x1043,F
     0006 01rr                      1- 1556     	MOVR	r0x1043,W
                                    1- 1557     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1558     	BANKSEL	r0x1043
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1559     	MOVAR	r0x1043
                                    1- 1560     	.line	492, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1561     	XORIA	0x01
     000B 0903                      1- 1562     	BTRSS	STATUS,2
                                    1- 1563     	MGOTO	_00318_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1564     	.line	494, "main.c"; 	if(pwFlag)
                                    1- 1565     	BANKSEL	_pwFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1566     	MOVR	_pwFlag,W
     000F 0D03                      1- 1567     	BTRSC	STATUS,2
                                    1- 1568     	MGOTO	_00320_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1569     	.line	496, "main.c"; 	if(showFlag == 0)
                                    1- 1570     	BANKSEL	_showFlag
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 1571     	MOVR	_showFlag,W
     0013 0903                      1- 1572     	BTRSS	STATUS,2
                                    1- 1573     	MGOTO	_00306_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1574     	.line	499, "main.c"; 	pwShowTime = 3;
     0015 2103                      1- 1575     	MOVIA	0x03
                                    1- 1576     	BANKSEL	_pwShowTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1577     	MOVAR	_pwShowTime
                                    1- 1578     	.line	500, "main.c"; 	offShowTime = 0;
                                    1- 1579     	BANKSEL	_offShowTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1580     	CLRR	_offShowTime
                                    1- 1581     	MGOTO	_00320_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1- 1582     _00306_DS_:
                                    1- 1583     	.line	504, "main.c"; 	pwShowTime = 0;
                                    1- 1584     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 1585     	CLRR	_pwShowTime
                                    1- 1586     	.line	505, "main.c"; 	if(++workStep > 3)
                                    1- 1587     	BANKSEL	_workStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 05rr                      1- 1588     	INCR	_workStep,F
                                    1- 1589     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1590     ;;unsigned compare: left >= lit (0x4=4), size=1
     001F 2104                      1- 1591     	MOVIA	0x04
     0020 04rr                      1- 1592     	SUBAR	_workStep,W
     0021 0803                      1- 1593     	BTRSS	STATUS,0
                                    1- 1594     	MGOTO	_00304_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1595     	.line	506, "main.c"; 	workStep = 1;
     0023 2101                      1- 1596     	MOVIA	0x01
     0024 00rr                      1- 1597     	MOVAR	_workStep
     0025                           1- 1598     _00304_DS_:
                                    1- 1599     	.line	507, "main.c"; 	stepShowTime = 2;
     0025 2102                      1- 1600     	MOVIA	0x02
                                    1- 1601     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 1602     	MOVAR	_stepShowTime
                                    1- 1603     	.line	508, "main.c"; 	offShowTime = 0;
                                    1- 1604     	BANKSEL	_offShowTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 1605     	CLRR	_offShowTime
                                    1- 1606     	MGOTO	_00320_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 1607     _00318_DS_:
                                    1- 1608     	.line	512, "main.c"; 	else if(kclick == 2)
                                    1- 1609     	BANKSEL	r0x1043
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 1610     	MOVR	r0x1043,W
     002D 2402                      1- 1611     	XORIA	0x02
     002E 0903                      1- 1612     	BTRSS	STATUS,2
                                    1- 1613     	MGOTO	_00320_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1614     	.line	514, "main.c"; 	if(pwFlag)
                                    1- 1615     	BANKSEL	_pwFlag
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1616     	MOVR	_pwFlag,W
     0032 0D03                      1- 1617     	BTRSC	STATUS,2
                                    1- 1618     	MGOTO	_00313_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1619     	.line	516, "main.c"; 	pwFlag = 0;		//关机
     0034 02rr                      1- 1620     	CLRR	_pwFlag
                                    1- 1621     	.line	517, "main.c"; 	workStep = 0;
                                    1- 1622     	BANKSEL	_workStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 1623     	CLRR	_workStep
                                    1- 1624     	.line	518, "main.c"; 	pwShowTime = 0;
                                    1- 1625     	BANKSEL	_pwShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1- 1626     	CLRR	_pwShowTime
                                    1- 1627     	.line	519, "main.c"; 	stepShowTime = 0;
                                    1- 1628     	BANKSEL	_stepShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1629     	CLRR	_stepShowTime
                                    1- 1630     	.line	520, "main.c"; 	offShowTime = 5;
     003B 2105                      1- 1631     	MOVIA	0x05
                                    1- 1632     	BANKSEL	_offShowTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1633     	MOVAR	_offShowTime
                                    1- 1634     	MGOTO	_00320_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 1635     _00313_DS_:
                                    1- 1636     	.line	524, "main.c"; 	pwFlag = 1;		//开机
     003F 2101                      1- 1637     	MOVIA	0x01
                                    1- 1638     	BANKSEL	_pwFlag
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 1639     	MOVAR	_pwFlag
                                    1- 1640     	.line	525, "main.c"; 	pwShowTime = 3;
     0042 2103                      1- 1641     	MOVIA	0x03
                                    1- 1642     	BANKSEL	_pwShowTime
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1643     	MOVAR	_pwShowTime
                                    1- 1644     	.line	526, "main.c"; 	stepShowTime = 2;
     0045 2102                      1- 1645     	MOVIA	0x02
                                    1- 1646     	BANKSEL	_stepShowTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1647     	MOVAR	_stepShowTime
                                    1- 1648     	.line	527, "main.c"; 	offShowTime = 0;
                                    1- 1649     	BANKSEL	_offShowTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1650     	CLRR	_offShowTime
                                    1- 1651     	.line	528, "main.c"; 	if(workStep == 0)
                                    1- 1652     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 1653     	MOVR	_workStep,W
     004C 0903                      1- 1654     	BTRSS	STATUS,2
                                    1- 1655     	MGOTO	_00320_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1656     	.line	529, "main.c"; 	workStep = 1;
     004E 2101                      1- 1657     	MOVIA	0x01
     004F 00rr                      1- 1658     	MOVAR	_workStep
     0050                           1- 1659     _00320_DS_:
                                    1- 1660     	.line	532, "main.c"; 	}
                                    1- 1661     	RETURN	
     0050 0010                      3-   40 m1      ret
                                    1- 1662     ; exit point of _keyCtr
                                    1- 1664     ;***
                                    1- 1665     ;  pBlock Stats: dbName = C
                                    1- 1666     ;***
                                    1- 1667     ;has an exit
                                    1- 1668     ;1 compiler assigned register :
                                    1- 1669     ;   r0x1042
                                    1- 1670     ;; Starting pCode block
                                    1- 1671     .segment "code"; module=main, function=_keyRead
                                    1- 1673     ;local variable name mapping:
     0000                           1- 1675     _keyRead:
                                    1- 1676     ; 2 exit points
                                    1- 1677     	.line	456, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1678     	BANKSEL	r0x1042
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1679     	MOVAR	r0x1042
                                    1- 1680     	.line	458, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1681     	MOVR	r0x1042,W
     0003 0D03                      1- 1682     	BTRSC	STATUS,2
                                    1- 1683     	MGOTO	_00296_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1684     	.line	460, "main.c"; 	keyCount++;
                                    1- 1685     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1686     	INCR	_keyCount,F
                                    1- 1687     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1688     	.line	461, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1689     	MOVIA	0xc8
     0008 04rr                      1- 1690     	SUBAR	_keyCount,W
     0009 0803                      1- 1691     	BTRSS	STATUS,0
                                    1- 1692     	MGOTO	_00297_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1693     	.line	463, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1694     	MOVIA	0xc8
     000C 00rr                      1- 1695     	MOVAR	_keyCount
                                    1- 1696     	.line	464, "main.c"; 	if(!longPressFlag)
                                    1- 1697     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1698     	MOVR	_longPressFlag,W
     000F 0903                      1- 1699     	BTRSS	STATUS,2
                                    1- 1700     	MGOTO	_00297_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1701     	.line	466, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 1702     	MOVIA	0x01
     0012 00rr                      1- 1703     	MOVAR	_longPressFlag
                                    1- 1704     	.line	467, "main.c"; 	return 2;
     0013 2102                      1- 1705     	MOVIA	0x02
                                    1- 1706     	MGOTO	_00298_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1707     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 1708     _00296_DS_:
                                    1- 1709     	.line	473, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 1710     	MOVIA	0xc8
                                    1- 1711     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 1712     	SUBAR	_keyCount,W
     0018 0803                      1- 1713     	BTRSS	STATUS,0
                                    1- 1714     	MGOTO	_00293_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1715     	.line	475, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 1716     	CLRR	_keyCount
                                    1- 1717     	.line	476, "main.c"; 	longPressFlag = 0;
                                    1- 1718     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 1719     	CLRR	_longPressFlag
                                    1- 1720     	.line	477, "main.c"; 	return	0;
     001D 2100                      1- 1721     	MOVIA	0x00
                                    1- 1722     	MGOTO	_00298_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1723     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 1724     _00293_DS_:
                                    1- 1725     	.line	479, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 1726     	MOVIA	0x04
                                    1- 1727     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 1728     	SUBAR	_keyCount,W
     0022 0803                      1- 1729     	BTRSS	STATUS,0
                                    1- 1730     	MGOTO	_00294_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1731     	.line	481, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 1732     	CLRR	_keyCount
                                    1- 1733     	.line	482, "main.c"; 	return	1;
     0025 2101                      1- 1734     	MOVIA	0x01
                                    1- 1735     	MGOTO	_00298_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 1736     _00294_DS_:
                                    1- 1737     	.line	484, "main.c"; 	keyCount = 0;
                                    1- 1738     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 1739     	CLRR	_keyCount
     0029                           1- 1740     _00297_DS_:
                                    1- 1741     	.line	486, "main.c"; 	return 0;
     0029 2100                      1- 1742     	MOVIA	0x00
     002A                           1- 1743     _00298_DS_:
                                    1- 1744     	.line	487, "main.c"; 	}
                                    1- 1745     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 1746     ; exit point of _keyRead
                                    1- 1748     ;***
                                    1- 1749     ;  pBlock Stats: dbName = C
                                    1- 1750     ;***
                                    1- 1751     ;has an exit
                                    1- 1752     ;; Starting pCode block
                                    1- 1753     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1755     _pwmStop:
                                    1- 1756     ; 2 exit points
                                    1- 1757     	.line	450, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1758     	CLRA	
     0001 00rr                      1- 1759     	SFUN	_T2CR1
                                    1- 1760     	.line	451, "main.c"; 	}
                                    1- 1761     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1762     ; exit point of _pwmStop
                                    1- 1764     ;***
                                    1- 1765     ;  pBlock Stats: dbName = C
                                    1- 1766     ;***
                                    1- 1767     ;has an exit
                                    1- 1768     ;1 compiler assigned register :
                                    1- 1769     ;   r0x1044
                                    1- 1770     ;; Starting pCode block
                                    1- 1771     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1773     _pwmInit:
                                    1- 1774     ; 2 exit points
                                    1- 1775     	.line	438, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1776     	SFUNR	_T2CR1
                                    1- 1777     	BANKSEL	r0x1044
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1778     	MOVAR	r0x1044
     0003 0Frr                      1- 1779     	BTRSC	r0x1044,7
                                    1- 1780     	.line	439, "main.c"; 	return;
                                    1- 1781     	MGOTO	_00277_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1782     	.line	440, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1783     	CLRR	_TMRH
                                    1- 1784     	.line	441, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 1785     	MOVIA	0x64
     0007 00rr                      1- 1786     	SFUN	_TMR2
                                    1- 1787     	.line	442, "main.c"; 	PWM2DUTY = 100;				// 		
     0008 00rr                      1- 1788     	SFUN	_PWM2DUTY
                                    1- 1789     	.line	444, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2101                      1- 1790     	MOVIA	0x01
     000A 00rr                      1- 1791     	SFUN	_T2CR2
                                    1- 1792     	.line	445, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 1793     	MOVIA	0x83
     000C 00rr                      1- 1794     	SFUN	_T2CR1
     000D                           1- 1795     _00277_DS_:
                                    1- 1796     	.line	446, "main.c"; 	}
                                    1- 1797     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 1798     ; exit point of _pwmInit
                                    1- 1800     ;***
                                    1- 1801     ;  pBlock Stats: dbName = C
                                    1- 1802     ;***
                                    1- 1803     ;has an exit
                                    1- 1804     ;functions called:
                                    1- 1805     ;   _setInput
                                    1- 1806     ;   _pwmStop
                                    1- 1807     ;   _setInput
                                    1- 1808     ;   _pwmStop
                                    1- 1809     ;; Starting pCode block
                                    1- 1810     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1812     _gotoSleep:
                                    1- 1813     ; 2 exit points
                                    1- 1814     	.line	406, "main.c"; 	sleepFlag = 0;
                                    1- 1815     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1816     	CLRR	_sleepFlag
                                    1- 1817     	.line	407, "main.c"; 	waitTime = 0;
                                    1- 1818     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1819     	CLRR	_waitTime
     0004 02rr                      1- 1820     	CLRR	(_waitTime + 1)
                                    1- 1821     	.line	408, "main.c"; 	setInput();
                                    1- 1822     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1823     	.line	409, "main.c"; 	sleepTime = 0;
                                    1- 1824     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 1825     	CLRR	_sleepTime
                                    1- 1826     	.line	411, "main.c"; 	pwmStop();
                                    1- 1827     	MCALL	_pwmStop
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1828     	.line	412, "main.c"; 	AWUCON = 0xA0;
     0009 21A0                      1- 1829     	MOVIA	0xa0
     000A 00rr                      1- 1830     	MOVAR	_AWUCON
                                    1- 1831     	.line	413, "main.c"; 	BWUCON = 0x00;
     000B 02rr                      1- 1832     	CLRR	_BWUCON
                                    1- 1833     	.line	414, "main.c"; 	IOSTB = C_PB3_Input | C_PB1_Input;
     000C 210A                      1- 1834     	MOVIA	0x0a
     000D 000r                      1- 1835     	IOST	_IOSTB
                                    1- 1836     	.line	415, "main.c"; 	PORTA = 0X00;
                                    1- 1837     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 1838     	CLRR	_PORTA
                                    1- 1839     	.line	416, "main.c"; 	PORTB = 0X00;
     0010 02rr                      1- 1840     	CLRR	_PORTB
                                    1- 1841     	.line	417, "main.c"; 	INTE =  C_INT_PABKey;
     0011 2102                      1- 1842     	MOVIA	0x02
     0012 00rr                      1- 1843     	MOVAR	_INTE
                                    1- 1844     	.line	418, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 1845     	MOVIA	0x18
     0014 00rr                      1- 1846     	MOVAR	_PCON
                                    1- 1847     	.line	419, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 1848     	CLRR	_INTF
                                    1- 1849     	.line	420, "main.c"; 	CLRWDT();
     0016 0002                      1- 1850     	clrwdt
                                    1- 1851     	.line	421, "main.c"; 	ENI();
     0017 0004                      1- 1852     	ENI
                                    1- 1853     	.line	422, "main.c"; 	SLEEP();
     0018 0001                      1- 1854     	sleep
                                    1- 1855     	.line	423, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 1856     	CLRR	_AWUCON
                                    1- 1857     	.line	424, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001A 21A0                      1- 1858     	MOVIA	0xa0
     001B 000r                      1- 1859     	IOST	_IOSTA
                                    1- 1860     	.line	425, "main.c"; 	IOSTB = C_PB3_Input | C_PB1_Input;
     001C 210A                      1- 1861     	MOVIA	0x0a
     001D 000r                      1- 1862     	IOST	_IOSTB
                                    1- 1863     	.line	426, "main.c"; 	PORTA = 0x00;
                                    1- 1864     	BANKSEL	_PORTA
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 02rr                      1- 1865     	CLRR	_PORTA
                                    1- 1866     	.line	427, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0020 2101                      1- 1867     	MOVIA	0x01
     0021 00rr                      1- 1868     	MOVAR	_INTE
                                    1- 1869     	.line	428, "main.c"; 	INTF = 0;
     0022 02rr                      1- 1870     	CLRR	_INTF
                                    1- 1871     	.line	430, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0023 21B8                      1- 1872     	MOVIA	0xb8
     0024 00rr                      1- 1873     	MOVAR	_PCON
                                    1- 1874     	.line	433, "main.c"; 	}
                                    1- 1875     	RETURN	
     0025 0010                      3-   40 m1      ret
                                    1- 1876     ; exit point of _gotoSleep
                                    1- 1878     ;***
                                    1- 1879     ;  pBlock Stats: dbName = C
                                    1- 1880     ;***
                                    1- 1881     ;has an exit
                                    1- 1882     ;functions called:
                                    1- 1883     ;   _setInput
                                    1- 1884     ;   _setInput
                                    1- 1885     ;; Starting pCode block
                                    1- 1886     .segment "code"; module=main, function=_initSys
     0000                           1- 1888     _initSys:
                                    1- 1889     ; 2 exit points
                                    1- 1890     	.line	375, "main.c"; 	DISI();
     0000 0013                      1- 1891     	DISI
                                    1- 1892     	.line	376, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 1893     	MOVIA	0xa0
     0002 000r                      1- 1894     	IOST	_IOSTA
                                    1- 1895     	.line	377, "main.c"; 	IOSTB = C_PB3_Input | C_PB1_Input;
     0003 210A                      1- 1896     	MOVIA	0x0a
     0004 000r                      1- 1897     	IOST	_IOSTB
                                    1- 1898     	.line	378, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 1899     	CLRR	_PORTB
                                    1- 1900     	.line	379, "main.c"; 	PORTA = 0x00;
                                    1- 1901     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 1902     	CLRR	_PORTA
                                    1- 1903     	.line	380, "main.c"; 	setInput();
                                    1- 1904     	MCALL	_setInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1905     	.line	381, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 1906     	MOVIA	0x7f
     000A 000r                      1- 1907     	IOST	_APHCON
                                    1- 1908     	.line	382, "main.c"; 	BPHCON = 0xF7;		//PB3上拉
     000B 21F7                      1- 1909     	MOVIA	0xf7
     000C 00rr                      1- 1910     	MOVAR	_BPHCON
                                    1- 1911     	.line	383, "main.c"; 	ABPLCON = 0xFF;
     000D 21FF                      1- 1912     	MOVIA	0xff
     000E 00rr                      1- 1913     	MOVAR	_ABPLCON
                                    1- 1914     	.line	385, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000F 2101                      1- 1915     	MOVIA	0x01
     0010 00rr                      1- 1916     	MOVAR	_INTE
                                    1- 1917     	.line	387, "main.c"; 	PCON1 = C_TMR0_Dis;
     0011 0200                      1- 1918     	CLRA	
     0012 000r                      1- 1919     	IOST	_PCON1
                                    1- 1920     	.line	389, "main.c"; 	TMR0 = 55;
     0013 2137                      1- 1921     	MOVIA	0x37
     0014 00rr                      1- 1922     	MOVAR	_TMR0
                                    1- 1923     	.line	390, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0015 0200                      1- 1924     	CLRA	
     0016 0003                      1- 1925     	T0MD	
                                    1- 1926     	.line	392, "main.c"; 	PCON1 = C_TMR0_En;
     0017 2101                      1- 1927     	MOVIA	0x01
     0018 000r                      1- 1928     	IOST	_PCON1
                                    1- 1929     	.line	395, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0019 2198                      1- 1930     	MOVIA	0x98
     001A 00rr                      1- 1931     	MOVAR	_PCON
                                    1- 1932     	.line	398, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001B 2101                      1- 1933     	MOVIA	0x01
     001C 000r                      1- 1934     	IOST	_PCON1
                                    1- 1935     	.line	399, "main.c"; 	ENI();
     001D 0004                      1- 1936     	ENI
                                    1- 1937     	.line	400, "main.c"; 	}
                                    1- 1938     	RETURN	
     001E 0010                      3-   40 m1      ret
                                    1- 1939     ; exit point of _initSys
                                    1- 1941     ;***
                                    1- 1942     ;  pBlock Stats: dbName = C
                                    1- 1943     ;***
                                    1- 1944     ;has an exit
                                    1- 1945     ;functions called:
                                    1- 1946     ;   __gptrget1
                                    1- 1947     ;   _showNubBaiwei
                                    1- 1948     ;   __gptrget1
                                    1- 1949     ;   _showNubShiwei
                                    1- 1950     ;   __gptrget1
                                    1- 1951     ;   _showNubGewei
                                    1- 1952     ;   _setInput
                                    1- 1953     ;   __gptrget1
                                    1- 1954     ;   _showNubBaiwei
                                    1- 1955     ;   __gptrget1
                                    1- 1956     ;   _showNubShiwei
                                    1- 1957     ;   __gptrget1
                                    1- 1958     ;   _showNubGewei
                                    1- 1959     ;   _setInput
                                    1- 1960     ;5 compiler assigned registers:
                                    1- 1961     ;   r0x1045
                                    1- 1962     ;   r0x1046
                                    1- 1963     ;   STK01
                                    1- 1964     ;   STK00
                                    1- 1965     ;   r0x1047
                                    1- 1966     ;; Starting pCode block
                                    1- 1967     .segment "code"; module=main, function=_refreshNub
     0000                           1- 1969     _refreshNub:
                                    1- 1970     ; 2 exit points
                                    1- 1971     	.line	366, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 1972     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1973     	MOVR	_baiweiNum,W
     0002 25rr                      1- 1974     	ADDIA	(_numArray + 0)
                                    1- 1975     	BANKSEL	r0x1045
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1976     	MOVAR	r0x1045
     0005 21rr                      1- 1977     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 1978     	BTRSC	STATUS,0
     0007 2501                      1- 1979     	ADDIA	0x01
                                    1- 1980     	BANKSEL	r0x1046
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1981     	MOVAR	r0x1046
                                    1- 1982     	BANKSEL	r0x1045
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1983     	MOVR	r0x1045,W
     000C 00rr                      1- 1984     	MOVAR	STK01
                                    1- 1985     	BANKSEL	r0x1046
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1986     	MOVR	r0x1046,W
     000F 00rr                      1- 1987     	MOVAR	STK00
     0010 2100                      1- 1988     	MOVIA	0x00
                                    1- 1989     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1990     ;;103	MOVAR	r0x1047
                                    1- 1991     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1992     	.line	367, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 1993     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 1994     	MOVR	_shiweiNum,W
     0015 25rr                      1- 1995     	ADDIA	(_numArray + 0)
                                    1- 1996     	BANKSEL	r0x1045
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1997     	MOVAR	r0x1045
     0018 21rr                      1- 1998     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 1999     	BTRSC	STATUS,0
     001A 2501                      1- 2000     	ADDIA	0x01
                                    1- 2001     	BANKSEL	r0x1046
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2002     	MOVAR	r0x1046
                                    1- 2003     	BANKSEL	r0x1045
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2004     	MOVR	r0x1045,W
     001F 00rr                      1- 2005     	MOVAR	STK01
                                    1- 2006     	BANKSEL	r0x1046
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2007     	MOVR	r0x1046,W
     0022 00rr                      1- 2008     	MOVAR	STK00
     0023 2100                      1- 2009     	MOVIA	0x00
                                    1- 2010     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2011     ;;102	MOVAR	r0x1047
                                    1- 2012     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2013     	.line	368, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2014     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2015     	MOVR	_geweiNum,W
     0028 25rr                      1- 2016     	ADDIA	(_numArray + 0)
                                    1- 2017     	BANKSEL	r0x1045
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2018     	MOVAR	r0x1045
     002B 21rr                      1- 2019     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2020     	BTRSC	STATUS,0
     002D 2501                      1- 2021     	ADDIA	0x01
                                    1- 2022     	BANKSEL	r0x1046
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2023     	MOVAR	r0x1046
                                    1- 2024     	BANKSEL	r0x1045
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2025     	MOVR	r0x1045,W
     0032 00rr                      1- 2026     	MOVAR	STK01
                                    1- 2027     	BANKSEL	r0x1046
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2028     	MOVR	r0x1046,W
     0035 00rr                      1- 2029     	MOVAR	STK00
     0036 2100                      1- 2030     	MOVIA	0x00
                                    1- 2031     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2032     ;;2	MOVAR	r0x1047
                                    1- 2033     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2034     	.line	369, "main.c"; 	setInput();
                                    1- 2035     	MCALL	_setInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2036     	.line	370, "main.c"; 	}
                                    1- 2037     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 2038     ; exit point of _refreshNub
                                    1- 2040     ;***
                                    1- 2041     ;  pBlock Stats: dbName = C
                                    1- 2042     ;***
                                    1- 2043     ;has an exit
                                    1- 2044     ;functions called:
                                    1- 2045     ;   _delay
                                    1- 2046     ;   _delay
                                    1- 2047     ;3 compiler assigned registers:
                                    1- 2048     ;   STK00
                                    1- 2049     ;   r0x1048
                                    1- 2050     ;   r0x1049
                                    1- 2051     ;; Starting pCode block
                                    1- 2052     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2054     _checkIRKey:
                                    1- 2055     ; 2 exit points
                                    1- 2056     	.line	316, "main.c"; 	if(0x20 & PORTA)
                                    1- 2057     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2058     	BTRSS	_PORTA,5
                                    1- 2059     	MGOTO	_00239_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2060     	.line	318, "main.c"; 	irStep = 0;
                                    1- 2061     	BANKSEL	_irStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2062     	CLRR	_irStep
                                    1- 2063     	.line	319, "main.c"; 	return;
                                    1- 2064     	MGOTO	_00258_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
     0006                           1- 2065     _00239_DS_:
                                    1- 2066     	.line	321, "main.c"; 	delay(30);
     0006 211E                      1- 2067     	MOVIA	0x1e
     0007 00rr                      1- 2068     	MOVAR	STK00
     0008 2100                      1- 2069     	MOVIA	0x00
                                    1- 2070     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2071     	.line	322, "main.c"; 	if(getbit(PORTB, 3) == 0)
     000A 01rr                      1- 2072     	MOVR	_PORTB,W
     000B 2208                      1- 2073     	ANDIA	0x08
     000C 0903                      1- 2074     	BTRSS	STATUS,2
     000D 2101                      1- 2075     	MOVIA	0x01
                                    1- 2076     	BANKSEL	r0x1048
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 2077     	MOVAR	r0x1048
     0010 01rr                      1- 2078     	MOVR	r0x1048,W
     0011 0903                      1- 2079     	BTRSS	STATUS,2
                                    1- 2080     	MGOTO	_00256_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2081     	.line	324, "main.c"; 	notRecv = 0;
                                    1- 2082     	BANKSEL	_notRecv
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2083     	CLRR	_notRecv
                                    1- 2084     	.line	325, "main.c"; 	if(++revCount > 2)
                                    1- 2085     	BANKSEL	_revCount
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1- 2086     	INCR	_revCount,F
                                    1- 2087     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2088     ;;unsigned compare: left >= lit (0x3=3), size=1
     0017 2103                      1- 2089     	MOVIA	0x03
     0018 04rr                      1- 2090     	SUBAR	_revCount,W
     0019 0803                      1- 2091     	BTRSS	STATUS,0
                                    1- 2092     	MGOTO	_00258_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2093     	.line	327, "main.c"; 	if(irStep == 0 && waitTime == 0)
                                    1- 2094     	BANKSEL	_irStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2095     	MOVR	_irStep,W
     001D 0903                      1- 2096     	BTRSS	STATUS,2
                                    1- 2097     	MGOTO	_00258_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2098     	BANKSEL	_waitTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 2099     	MOVR	_waitTime,W
     0021 11rr                      1- 2100     	IORAR	(_waitTime + 1),W
     0022 0903                      1- 2101     	BTRSS	STATUS,2
                                    1- 2102     	MGOTO	_00258_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2103     	.line	330, "main.c"; 	if(workStep == 1)
                                    1- 2104     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 2105     	MOVR	_workStep,W
     0026 2401                      1- 2106     	XORIA	0x01
     0027 0903                      1- 2107     	BTRSS	STATUS,2
                                    1- 2108     	MGOTO	_00246_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2109     	.line	332, "main.c"; 	workTime = 50;
     0029 2132                      1- 2110     	MOVIA	0x32
                                    1- 2111     	BANKSEL	_workTime
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2112     	MOVAR	_workTime
                                    1- 2113     	MGOTO	_00247_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1- 2114     _00246_DS_:
                                    1- 2115     	.line	334, "main.c"; 	else if(workStep == 2)
                                    1- 2116     	BANKSEL	_workStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 2117     	MOVR	_workStep,W
     002F 2402                      1- 2118     	XORIA	0x02
     0030 0903                      1- 2119     	BTRSS	STATUS,2
                                    1- 2120     	MGOTO	_00243_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2121     	.line	336, "main.c"; 	workTime = 100;
     0032 2164                      1- 2122     	MOVIA	0x64
                                    1- 2123     	BANKSEL	_workTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2124     	MOVAR	_workTime
                                    1- 2125     	MGOTO	_00247_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 2126     _00243_DS_:
                                    1- 2127     	.line	338, "main.c"; 	else if(workStep == 3)
                                    1- 2128     	BANKSEL	_workStep
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 2129     	MOVR	_workStep,W
     0038 2403                      1- 2130     	XORIA	0x03
     0039 0903                      1- 2131     	BTRSS	STATUS,2
                                    1- 2132     	MGOTO	_00247_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2133     	.line	340, "main.c"; 	workTime = 150;
     003B 2196                      1- 2134     	MOVIA	0x96
                                    1- 2135     	BANKSEL	_workTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 2136     	MOVAR	_workTime
     003E                           1- 2137     _00247_DS_:
                                    1- 2138     	.line	342, "main.c"; 	waitTime = workTime + 300;
                                    1- 2139     	BANKSEL	_workTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 2140     	MOVR	_workTime,W
                                    1- 2141     	BANKSEL	r0x1048
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2142     	MOVAR	r0x1048
                                    1- 2143     	BANKSEL	r0x1049
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 02rr                      1- 2144     	CLRR	r0x1049
     0044 212C                      1- 2145     	MOVIA	0x2c
                                    1- 2146     	BANKSEL	r0x1048
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 03rr                      1- 2147     	ADDAR	r0x1048,W
                                    1- 2148     	BANKSEL	_waitTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1- 2149     	MOVAR	_waitTime
     0049 2101                      1- 2150     	MOVIA	0x01
     004A 00rr                      1- 2151     	MOVAR	(_waitTime + 1)
     004B 2100                      1- 2152     	MOVIA	0x00
     004C 0803                      1- 2153     	BTRSS	STATUS,0
                                    1- 2154     	MGOTO	_00009_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2155     	BANKSEL	r0x1049
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1- 2156     	INCR	r0x1049,W
     0050 0D03                      1- 2157     	BTRSC	STATUS,2
                                    1- 2158     	MGOTO	_00010_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 2159     _00009_DS_:
                                    1- 2160     	BANKSEL	_waitTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 03rr                      1- 2161     	ADDAR	(_waitTime + 1),F
     0054                           1- 2162     _00010_DS_:
                                    1- 2163     	.line	343, "main.c"; 	irStep = 1;
     0054 2101                      1- 2164     	MOVIA	0x01
                                    1- 2165     	BANKSEL	_irStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 00rr                      1- 2166     	MOVAR	_irStep
                                    1- 2167     	MGOTO	_00258_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058                           1- 2168     _00256_DS_:
                                    1- 2169     	.line	349, "main.c"; 	revCount = 0;
                                    1- 2170     	BANKSEL	_revCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 2171     	CLRR	_revCount
                                    1- 2172     	.line	351, "main.c"; 	if(++notRecv > 5)
                                    1- 2173     	BANKSEL	_notRecv
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 05rr                      1- 2174     	INCR	_notRecv,F
                                    1- 2175     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2176     ;;unsigned compare: left >= lit (0x6=6), size=1
     005C 2106                      1- 2177     	MOVIA	0x06
     005D 04rr                      1- 2178     	SUBAR	_notRecv,W
     005E 0803                      1- 2179     	BTRSS	STATUS,0
                                    1- 2180     	MGOTO	_00258_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2181     	.line	353, "main.c"; 	notRecv = 5;
     0060 2105                      1- 2182     	MOVIA	0x05
     0061 00rr                      1- 2183     	MOVAR	_notRecv
                                    1- 2184     	.line	354, "main.c"; 	revCount = 0;
                                    1- 2185     	BANKSEL	_revCount
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 2186     	CLRR	_revCount
                                    1- 2187     	.line	355, "main.c"; 	irStep = 0;			//移开了
                                    1- 2188     	BANKSEL	_irStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 02rr                      1- 2189     	CLRR	_irStep
     0066                           1- 2190     _00258_DS_:
                                    1- 2191     	.line	359, "main.c"; 	}
                                    1- 2192     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 2193     ; exit point of _checkIRKey
                                    1- 2195     ;***
                                    1- 2196     ;  pBlock Stats: dbName = C
                                    1- 2197     ;***
                                    1- 2198     ;has an exit
                                    1- 2199     ;functions called:
                                    1- 2200     ;   _pwmStop
                                    1- 2201     ;   __divuchar
                                    1- 2202     ;   __moduchar
                                    1- 2203     ;   _pwmInit
                                    1- 2204     ;   _pwmStop
                                    1- 2205     ;   __divuchar
                                    1- 2206     ;   __moduchar
                                    1- 2207     ;   __moduint
                                    1- 2208     ;   _pwmStop
                                    1- 2209     ;   __divuchar
                                    1- 2210     ;   __moduchar
                                    1- 2211     ;   _pwmInit
                                    1- 2212     ;   _pwmStop
                                    1- 2213     ;   __divuchar
                                    1- 2214     ;   __moduchar
                                    1- 2215     ;   __moduint
                                    1- 2216     ;5 compiler assigned registers:
                                    1- 2217     ;   r0x104A
                                    1- 2218     ;   STK00
                                    1- 2219     ;   STK02
                                    1- 2220     ;   STK01
                                    1- 2221     ;   r0x104B
                                    1- 2222     ;; Starting pCode block
                                    1- 2223     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2225     _chrgCtr:
                                    1- 2226     ; 2 exit points
                                    1- 2227     	.line	206, "main.c"; 	if(0x20 & PORTA)
                                    1- 2228     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2229     	BTRSS	_PORTA,5
                                    1- 2230     	MGOTO	_00190_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2231     	.line	209, "main.c"; 	pwmStop();
                                    1- 2232     	MCALL	_pwmStop
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2233     	.line	210, "main.c"; 	BPHCON &= 0xFB;
     0004 1Drr                      1- 2234     	BCR	_BPHCON,2
                                    1- 2235     	.line	211, "main.c"; 	IOSTB |= 0x04;
     0005 001r                      1- 2236     	IOSTR	_IOSTB
                                    1- 2237     	BANKSEL	r0x104A
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2238     	MOVAR	r0x104A
     0008 19rr                      1- 2239     	BSR	r0x104A,2
     0009 01rr                      1- 2240     	MOVR	r0x104A,W
     000A 000r                      1- 2241     	IOST	_IOSTB
                                    1- 2242     	.line	212, "main.c"; 	showFlag = 1;
     000B 2101                      1- 2243     	MOVIA	0x01
                                    1- 2244     	BANKSEL	_showFlag
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 2245     	MOVAR	_showFlag
                                    1- 2246     	.line	213, "main.c"; 	if(0x04 & PORTB || fullFlag)
     000E 0Drr                      1- 2247     	BTRSC	_PORTB,2
                                    1- 2248     	MGOTO	_00161_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2249     	BANKSEL	_fullFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 2250     	MOVR	_fullFlag,W
     0012 0D03                      1- 2251     	BTRSC	STATUS,2
                                    1- 2252     	MGOTO	_00162_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1- 2253     _00161_DS_:
                                    1- 2254     	.line	215, "main.c"; 	fullFlag = 1;
     0014 2101                      1- 2255     	MOVIA	0x01
                                    1- 2256     	BANKSEL	_fullFlag
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 2257     	MOVAR	_fullFlag
                                    1- 2258     	.line	217, "main.c"; 	baiweiNum = 1;
                                    1- 2259     	BANKSEL	_baiweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2260     	MOVAR	_baiweiNum
                                    1- 2261     	.line	218, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2262     	BANKSEL	_geweiNum
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 2263     	CLRR	_geweiNum
                                    1- 2264     	BANKSEL	_shiweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2265     	CLRR	_shiweiNum
                                    1- 2266     	MGOTO	_00192_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 2267     _00162_DS_:
                                    1- 2268     	.line	223, "main.c"; 	if(pwStep == 100)
                                    1- 2269     	BANKSEL	_pwStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 2270     	MOVR	_pwStep,W
     0020 2464                      1- 2271     	XORIA	0x64
     0021 0903                      1- 2272     	BTRSS	STATUS,2
                                    1- 2273     	MGOTO	_00159_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2274     	.line	225, "main.c"; 	baiweiNum = 0;
                                    1- 2275     	BANKSEL	_baiweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1- 2276     	CLRR	_baiweiNum
                                    1- 2277     	.line	226, "main.c"; 	shiweiNum = 9;
     0025 2109                      1- 2278     	MOVIA	0x09
                                    1- 2279     	BANKSEL	_shiweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 2280     	MOVAR	_shiweiNum
                                    1- 2281     	.line	227, "main.c"; 	geweiNum = 9;
                                    1- 2282     	BANKSEL	_geweiNum
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2283     	MOVAR	_geweiNum
                                    1- 2284     	MGOTO	_00192_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 2285     _00159_DS_:
                                    1- 2286     	.line	231, "main.c"; 	baiweiNum = 0;
                                    1- 2287     	BANKSEL	_baiweiNum
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1- 2288     	CLRR	_baiweiNum
                                    1- 2289     	.line	232, "main.c"; 	shiweiNum = pwStep/10;
     002D 210A                      1- 2290     	MOVIA	0x0a
     002E 00rr                      1- 2291     	MOVAR	STK00
                                    1- 2292     	BANKSEL	_pwStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2293     	MOVR	_pwStep,W
                                    1- 2294     	MCALL	__divuchar
     0031 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2295     	BANKSEL	_shiweiNum
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 00rr                      1- 2296     	MOVAR	_shiweiNum
                                    1- 2297     	.line	233, "main.c"; 	geweiNum = pwStep%10;
     0034 210A                      1- 2298     	MOVIA	0x0a
     0035 00rr                      1- 2299     	MOVAR	STK00
                                    1- 2300     	BANKSEL	_pwStep
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 2301     	MOVR	_pwStep,W
                                    1- 2302     	MCALL	__moduchar
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2303     	BANKSEL	_geweiNum
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 2304     	MOVAR	_geweiNum
                                    1- 2305     	MGOTO	_00192_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 2306     _00190_DS_:
                                    1- 2307     	.line	240, "main.c"; 	fullFlag = 0;
                                    1- 2308     	BANKSEL	_fullFlag
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 02rr                      1- 2309     	CLRR	_fullFlag
                                    1- 2310     	.line	241, "main.c"; 	BPHCON |= 0x04;
     003E 19rr                      1- 2311     	BSR	_BPHCON,2
                                    1- 2312     	.line	242, "main.c"; 	IOSTB &= 0xFB;
     003F 001r                      1- 2313     	IOSTR	_IOSTB
                                    1- 2314     	BANKSEL	r0x104A
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2315     	MOVAR	r0x104A
     0042 1Drr                      1- 2316     	BCR	r0x104A,2
     0043 01rr                      1- 2317     	MOVR	r0x104A,W
     0044 000r                      1- 2318     	IOST	_IOSTB
                                    1- 2319     	.line	243, "main.c"; 	if(workTime > 0)
                                    1- 2320     	BANKSEL	_workTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 2321     	MOVR	_workTime,W
     0047 0D03                      1- 2322     	BTRSC	STATUS,2
                                    1- 2323     	MGOTO	_00166_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2324     	.line	245, "main.c"; 	pwmInit();
                                    1- 2325     	MCALL	_pwmInit
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2326     	.line	246, "main.c"; 	workTime--;
                                    1- 2327     	BANKSEL	_workTime
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 06rr                      1- 2328     	DECR	_workTime,F
                                    1- 2329     	MGOTO	_00167_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1- 2330     _00166_DS_:
                                    1- 2331     	.line	250, "main.c"; 	pwmStop();
                                    1- 2332     	MCALL	_pwmStop
     004D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2333     	.line	251, "main.c"; 	PORTB &= 0xFB;
     004E 1Drr                      1- 2334     	BCR	_PORTB,2
     004F                           1- 2335     _00167_DS_:
                                    1- 2336     	.line	253, "main.c"; 	if(pwShowTime)
                                    1- 2337     	BANKSEL	_pwShowTime
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1- 2338     	MOVR	_pwShowTime,W
     0051 0D03                      1- 2339     	BTRSC	STATUS,2
                                    1- 2340     	MGOTO	_00187_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2341     	.line	255, "main.c"; 	showFlag = 1;
     0053 2101                      1- 2342     	MOVIA	0x01
                                    1- 2343     	BANKSEL	_showFlag
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 2344     	MOVAR	_showFlag
                                    1- 2345     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2346     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2347     	.line	256, "main.c"; 	if(pwStep > 99)
     0056 2164                      1- 2348     	MOVIA	0x64
                                    1- 2349     	BANKSEL	_pwStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 04rr                      1- 2350     	SUBAR	_pwStep,W
     0059 0803                      1- 2351     	BTRSS	STATUS,0
                                    1- 2352     	MGOTO	_00169_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2353     	.line	258, "main.c"; 	baiweiNum = 1;
     005B 2101                      1- 2354     	MOVIA	0x01
                                    1- 2355     	BANKSEL	_baiweiNum
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 2356     	MOVAR	_baiweiNum
                                    1- 2357     	.line	259, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2358     	BANKSEL	_geweiNum
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 2359     	CLRR	_geweiNum
                                    1- 2360     	BANKSEL	_shiweiNum
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 2361     	CLRR	_shiweiNum
                                    1- 2362     	MGOTO	_00192_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 2363     _00169_DS_:
                                    1- 2364     	.line	263, "main.c"; 	baiweiNum = 0;
                                    1- 2365     	BANKSEL	_baiweiNum
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 02rr                      1- 2366     	CLRR	_baiweiNum
                                    1- 2367     	.line	264, "main.c"; 	shiweiNum = pwStep/10;
     0065 210A                      1- 2368     	MOVIA	0x0a
     0066 00rr                      1- 2369     	MOVAR	STK00
                                    1- 2370     	BANKSEL	_pwStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 2371     	MOVR	_pwStep,W
                                    1- 2372     	MCALL	__divuchar
     0069 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2373     	BANKSEL	_shiweiNum
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 00rr                      1- 2374     	MOVAR	_shiweiNum
                                    1- 2375     	.line	265, "main.c"; 	geweiNum = pwStep%10;
     006C 210A                      1- 2376     	MOVIA	0x0a
     006D 00rr                      1- 2377     	MOVAR	STK00
                                    1- 2378     	BANKSEL	_pwStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 2379     	MOVR	_pwStep,W
                                    1- 2380     	MCALL	__moduchar
     0070 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2381     	BANKSEL	_geweiNum
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 2382     	MOVAR	_geweiNum
                                    1- 2383     	MGOTO	_00192_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074                           1- 2384     _00187_DS_:
                                    1- 2385     	.line	268, "main.c"; 	else if(stepShowTime)
                                    1- 2386     	BANKSEL	_stepShowTime
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 2387     	MOVR	_stepShowTime,W
     0076 0D03                      1- 2388     	BTRSC	STATUS,2
                                    1- 2389     	MGOTO	_00184_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2390     	.line	270, "main.c"; 	showFlag = 1;
     0078 2101                      1- 2391     	MOVIA	0x01
                                    1- 2392     	BANKSEL	_showFlag
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 2393     	MOVAR	_showFlag
                                    1- 2394     	.line	271, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2395     	BANKSEL	_shiweiNum
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 02rr                      1- 2396     	CLRR	_shiweiNum
                                    1- 2397     	BANKSEL	_baiweiNum
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1- 2398     	CLRR	_baiweiNum
                                    1- 2399     	.line	272, "main.c"; 	geweiNum = workStep;
                                    1- 2400     	BANKSEL	_workStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 2401     	MOVR	_workStep,W
                                    1- 2402     	BANKSEL	_geweiNum
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 2403     	MOVAR	_geweiNum
                                    1- 2404     	MGOTO	_00192_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2405     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2406     ;;unsigned compare: left >= lit (0x6=6), size=1
     0084                           1- 2407     _00184_DS_:
                                    1- 2408     	.line	276, "main.c"; 	if(pwStep <= 5 && offShowTime == 0)
     0084 2106                      1- 2409     	MOVIA	0x06
                                    1- 2410     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 04rr                      1- 2411     	SUBAR	_pwStep,W
     0087 0C03                      1- 2412     	BTRSC	STATUS,0
                                    1- 2413     	MGOTO	_00180_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2414     	BANKSEL	_offShowTime
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 2415     	MOVR	_offShowTime,W
     008B 0903                      1- 2416     	BTRSS	STATUS,2
                                    1- 2417     	MGOTO	_00180_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2418     	.line	278, "main.c"; 	showFlag = 1;
     008D 2101                      1- 2419     	MOVIA	0x01
                                    1- 2420     	BANKSEL	_showFlag
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 2421     	MOVAR	_showFlag
                                    1- 2422     	.line	279, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2423     	BANKSEL	_shanTime
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 05rr                      1- 2424     	INCR	_shanTime,F
     0092 0D03                      1- 2425     	BTRSC	STATUS,2
     0093 05rr                      1- 2426     	INCR	(_shanTime + 1),F
                                    1- 2427     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2428     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0094 2101                      1- 2429     	MOVIA	0x01
     0095 04rr                      1- 2430     	SUBAR	(_shanTime + 1),W
     0096 0903                      1- 2431     	BTRSS	STATUS,2
                                    1- 2432     	MGOTO	_00232_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098 21F5                      1- 2433     	MOVIA	0xf5
     0099 04rr                      1- 2434     	SUBAR	_shanTime,W
     009A                           1- 2435     _00232_DS_:
     009A 0803                      1- 2436     	BTRSS	STATUS,0
                                    1- 2437     	MGOTO	_00172_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2438     	.line	281, "main.c"; 	shanTime = 0;
                                    1- 2439     	BANKSEL	_shanTime
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 02rr                      1- 2440     	CLRR	_shanTime
     009E 02rr                      1- 2441     	CLRR	(_shanTime + 1)
                                    1- 2442     	.line	282, "main.c"; 	showFlag = 0;
                                    1- 2443     	BANKSEL	_showFlag
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 02rr                      1- 2444     	CLRR	_showFlag
                                    1- 2445     	.line	283, "main.c"; 	offShowTime = 5;
     00A1 2105                      1- 2446     	MOVIA	0x05
                                    1- 2447     	BANKSEL	_offShowTime
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 2448     	MOVAR	_offShowTime
     00A4                           1- 2449     _00172_DS_:
                                    1- 2450     	.line	285, "main.c"; 	if(shanTime % 100 < 50)
     00A4 2164                      1- 2451     	MOVIA	0x64
     00A5 00rr                      1- 2452     	MOVAR	STK02
     00A6 2100                      1- 2453     	MOVIA	0x00
     00A7 00rr                      1- 2454     	MOVAR	STK01
                                    1- 2455     	BANKSEL	_shanTime
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 2456     	MOVR	_shanTime,W
     00AA 00rr                      1- 2457     	MOVAR	STK00
     00AB 01rr                      1- 2458     	MOVR	(_shanTime + 1),W
                                    1- 2459     	MCALL	__moduint
     00AC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2460     	BANKSEL	r0x104B
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 00rr                      1- 2461     	MOVAR	r0x104B
     00AF 01rr                      1- 2462     	MOVR	STK00,W
                                    1- 2463     	BANKSEL	r0x104A
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 00rr                      1- 2464     	MOVAR	r0x104A
                                    1- 2465     ;;unsigned compare: left < lit (0x32=50), size=2
     00B2 2100                      1- 2466     	MOVIA	0x00
                                    1- 2467     	BANKSEL	r0x104B
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 04rr                      1- 2468     	SUBAR	r0x104B,W
     00B5 0903                      1- 2469     	BTRSS	STATUS,2
                                    1- 2470     	MGOTO	_00233_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
     00B7 2132                      1- 2471     	MOVIA	0x32
                                    1- 2472     	BANKSEL	r0x104A
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 2473     	SUBAR	r0x104A,W
     00BA                           1- 2474     _00233_DS_:
     00BA 0C03                      1- 2475     	BTRSC	STATUS,0
                                    1- 2476     	MGOTO	_00174_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2477     	.line	287, "main.c"; 	showFlag = 1;
     00BC 2101                      1- 2478     	MOVIA	0x01
                                    1- 2479     	BANKSEL	_showFlag
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 00rr                      1- 2480     	MOVAR	_showFlag
                                    1- 2481     	.line	288, "main.c"; 	baiweiNum = 0;
                                    1- 2482     	BANKSEL	_baiweiNum
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 02rr                      1- 2483     	CLRR	_baiweiNum
                                    1- 2484     	.line	289, "main.c"; 	shiweiNum = 0;
                                    1- 2485     	BANKSEL	_shiweiNum
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 02rr                      1- 2486     	CLRR	_shiweiNum
                                    1- 2487     	.line	290, "main.c"; 	geweiNum = pwStep;
                                    1- 2488     	BANKSEL	_pwStep
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 2489     	MOVR	_pwStep,W
                                    1- 2490     	BANKSEL	_geweiNum
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 00rr                      1- 2491     	MOVAR	_geweiNum
                                    1- 2492     	MGOTO	_00192_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
     00C8                           1- 2493     _00174_DS_:
                                    1- 2494     	.line	294, "main.c"; 	showFlag = 0;
                                    1- 2495     	BANKSEL	_showFlag
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 02rr                      1- 2496     	CLRR	_showFlag
                                    1- 2497     	MGOTO	_00192_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
     00CB                           1- 2498     _00180_DS_:
                                    1- 2499     	.line	297, "main.c"; 	else if(offShowTime > 0)
                                    1- 2500     	BANKSEL	_offShowTime
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 01rr                      1- 2501     	MOVR	_offShowTime,W
     00CD 0D03                      1- 2502     	BTRSC	STATUS,2
                                    1- 2503     	MGOTO	_00177_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2504     	.line	299, "main.c"; 	showFlag = 1;
     00CF 2101                      1- 2505     	MOVIA	0x01
                                    1- 2506     	BANKSEL	_showFlag
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 00rr                      1- 2507     	MOVAR	_showFlag
                                    1- 2508     	.line	300, "main.c"; 	baiweiNum = 0;
                                    1- 2509     	BANKSEL	_baiweiNum
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 02rr                      1- 2510     	CLRR	_baiweiNum
                                    1- 2511     	.line	301, "main.c"; 	shiweiNum = 10;
     00D4 210A                      1- 2512     	MOVIA	0x0a
                                    1- 2513     	BANKSEL	_shiweiNum
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 00rr                      1- 2514     	MOVAR	_shiweiNum
                                    1- 2515     	.line	302, "main.c"; 	geweiNum = 10;
                                    1- 2516     	BANKSEL	_geweiNum
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 00rr                      1- 2517     	MOVAR	_geweiNum
                                    1- 2518     	MGOTO	_00192_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
     00DA                           1- 2519     _00177_DS_:
                                    1- 2520     	.line	306, "main.c"; 	showFlag = 0;
                                    1- 2521     	BANKSEL	_showFlag
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 02rr                      1- 2522     	CLRR	_showFlag
     00DC                           1- 2523     _00192_DS_:
                                    1- 2524     	.line	310, "main.c"; 	}
                                    1- 2525     	RETURN	
     00DC 0010                      3-   40 m1      ret
                                    1- 2526     ; exit point of _chrgCtr
                                    1- 2529     ;	code size estimation:
                                    1- 2530     ;	  929+  302 =  1231 instructions ( 3066 byte)
                                    1- 2532     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
