
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	__divuint
                                    1-   51     	extern	_PORTAbits
                                    1-   52     	extern	_PORTBbits
                                    1-   53     	extern	_PCONbits
                                    1-   54     	extern	_BWUCONbits
                                    1-   55     	extern	_ABPLCONbits
                                    1-   56     	extern	_BPHCONbits
                                    1-   57     	extern	_INTEbits
                                    1-   58     	extern	_INTFbits
                                    1-   59     	extern	_ADMDbits
                                    1-   60     	extern	_ADRbits
                                    1-   61     	extern	_ADVREFHbits
                                    1-   62     	extern	_ADCRbits
                                    1-   63     	extern	_AWUCONbits
                                    1-   64     	extern	_PACONbits
                                    1-   65     	extern	_INTEDGbits
                                    1-   66     	extern	_ANAENbits
                                    1-   67     	extern	_RFCbits
                                    1-   68     	extern	_INTE2bits
                                    1-   69     	extern	_INDF
                                    1-   70     	extern	_TMR0
                                    1-   71     	extern	_PCL
                                    1-   72     	extern	_STATUS
                                    1-   73     	extern	_FSR
                                    1-   74     	extern	_PORTA
                                    1-   75     	extern	_PORTB
                                    1-   76     	extern	_PCON
                                    1-   77     	extern	_BWUCON
                                    1-   78     	extern	_PCHBUF
                                    1-   79     	extern	_ABPLCON
                                    1-   80     	extern	_BPHCON
                                    1-   81     	extern	_INTE
                                    1-   82     	extern	_INTF
                                    1-   83     	extern	_ADMD
                                    1-   84     	extern	_ADR
                                    1-   85     	extern	_ADD
                                    1-   86     	extern	_ADVREFH
                                    1-   87     	extern	_ADCR
                                    1-   88     	extern	_AWUCON
                                    1-   89     	extern	_PACON
                                    1-   90     	extern	_INTEDG
                                    1-   91     	extern	_TMRH
                                    1-   92     	extern	_ANAEN
                                    1-   93     	extern	_RFC
                                    1-   94     	extern	_TM3RH
                                    1-   95     	extern	_INTE2
                                    1-   96     	extern	_TMR1
                                    1-   97     	extern	_T1CR1
                                    1-   98     	extern	_T1CR2
                                    1-   99     	extern	_PWM1DUTY
                                    1-  100     	extern	_PS1CV
                                    1-  101     	extern	_BZ1CR
                                    1-  102     	extern	_IRCR
                                    1-  103     	extern	_TBHP
                                    1-  104     	extern	_TBHD
                                    1-  105     	extern	_TMR2
                                    1-  106     	extern	_T2CR1
                                    1-  107     	extern	_T2CR2
                                    1-  108     	extern	_PWM2DUTY
                                    1-  109     	extern	_PS2CV
                                    1-  110     	extern	_BZ2CR
                                    1-  111     	extern	_OSCCR
                                    1-  112     	extern	_TMR3
                                    1-  113     	extern	_T3CR1
                                    1-  114     	extern	_T3CR2
                                    1-  115     	extern	_PWM3DUTY
                                    1-  116     	extern	_PS3CV
                                    1-  117     	extern	_BZ3CR
                                    1-  118     	extern	_IOSTA
                                    1-  119     	extern	_IOSTB
                                    1-  120     	extern	_APHCON
                                    1-  121     	extern	_PS0CV
                                    1-  122     	extern	_BODCON
                                    1-  123     	extern	_CMPCR
                                    1-  124     	extern	_PCON1
                                    1-  125     	extern	_T0MD
                                    1-  126     	extern	___sdcc_saved_fsr
                                    1-  127     	extern	___sdcc_saved_stk00
                                    1-  128     	extern	___sdcc_saved_stk01
                                    1-  129     	extern	__gptrget1
                                    1-  130     	extern	__nyc_ny8_startup
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; global declarations
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     	extern	_delay
                                    1-  135     	extern	_F_wait_eoc
                                    1-  136     	extern	_F_Quarter_VDD_Convert
                                    1-  137     	extern	_checkBat
                                    1-  138     	extern	_initAD
                                    1-  139     	extern	_keyCtr
                                    1-  140     	extern	_pwmStop
                                    1-  141     	extern	_pwmInit
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_initSys
                                    1-  144     	extern	_refreshNub
                                    1-  145     	extern	_checkIRKey
                                    1-  146     	extern	_chrgCtr
                                    1-  147     	extern	_isr
                                    1-  148     	extern	_main
                                    1-  149     	extern	_keyRead
                                    1-  150     	extern	_R_Quarter_VDD_DATA
                                    1-  151     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  152     	extern	_intCount
                                    1-  153     	extern	_IntFlag
                                    1-  154     	extern	_baiweiNum
                                    1-  155     	extern	_shiweiNum
                                    1-  156     	extern	_geweiNum
                                    1-  157     	extern	_showFlag
                                    1-  158     	extern	_irStep
                                    1-  159     	extern	_revCount
                                    1-  160     	extern	_checkCount
                                    1-  161     	extern	_pwmTime
                                    1-  162     	extern	_sendFlag
                                    1-  163     	extern	_workTime
                                    1-  164     	extern	_workStep
                                    1-  165     	extern	_pwFlag
                                    1-  166     	extern	_pwShowTime
                                    1-  167     	extern	_stepShowTime
                                    1-  168     	extern	_pwStep
                                    1-  169     	extern	_keyCount
                                    1-  170     	extern	_longPressFlag
                                    1-  171     	extern	_sleepTime
                                    1-  172     	extern	_fullFlag
                                    1-  173     	extern	_shanTime
                                    1-  174     	extern	_count1s
                                    1-  175     	extern	_waitTime
                                    1-  176     	extern	_offShowTime
                                    1-  177     	extern	_notRecv
                                    1-  178     	extern	_zhedangFlag
                                    1-  179     	extern	_zhedangTime
                                    1-  180     	extern	_sleepFlag
                                    1-  181     	extern	_powerShi
                                    1-  182     	extern	_powerGe
                                    1-  183     	extern	_count5s
                                    1-  184     	extern	_count250ms
                                    1-  185     	extern	_checkBatTime
                                    1-  186     	extern	_fullTime
                                    1-  188     	extern PSAVE
                                    1-  189     	extern SSAVE
                                    1-  190     	extern WSAVE
                                    1-  191     	extern STK04
                                    1-  192     	extern STK03
                                    1-  193     	extern STK02
                                    1-  194     	extern STK01
                                    1-  195     	extern STK00
                                    1-  197     .segment "uninit", 0x20000040
 20000040                           1-  198     PSAVE:
                                    1-  199     	.res 1
 20000041                           1-  200     SSAVE:
                                    1-  201     	.res 1
 20000042                           1-  202     WSAVE:
                                    1-  203     	.res 1
 20000043                           1-  204     STK04:
                                    1-  205     	.res 1
 20000044                           1-  206     STK03:
                                    1-  207     	.res 1
 20000045                           1-  208     STK02:
                                    1-  209     	.res 1
 20000046                           1-  210     STK01:
                                    1-  211     	.res 1
 20000047                           1-  212     STK00:
                                    1-  213     	.res 1
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ; global definitions
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_Quarter_VDD_DATA:
                                    1-  220     	.res	2
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_Quarter_VDD_DATA_LB:
                                    1-  225     	.res	1
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     ; absolute symbol definitions
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; compiler-defined variables
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1048:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1049:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1046:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x1047:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1043:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1044:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1042:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1040:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1041:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x103C:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x103D:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x103E:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x103F:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1036:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1037:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1038:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x103B:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x1034:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x1035:
                                    1-  290     	.res	1
                                    1-  291     ;--------------------------------------------------------
                                    1-  292     ; initialized data
                                    1-  293     ;--------------------------------------------------------
                                    1-  295     .segment "idata"
     0000                           1-  296     _intCount:
     0000 0000                      1-  297     	dw	0x00
                                    1-  301     .segment "idata"
     0000                           1-  302     _IntFlag:
     0000 0000                      1-  303     	dw	0x00
                                    1-  307     .segment "idata"
     0000                           1-  308     _baiweiNum:
     0000 0000                      1-  309     	dw	0x00
                                    1-  313     .segment "idata"
     0000                           1-  314     _shiweiNum:
     0000 0000                      1-  315     	dw	0x00
                                    1-  319     .segment "idata"
     0000                           1-  320     _geweiNum:
     0000 0000                      1-  321     	dw	0x00
                                    1-  325     .segment "idata"
     0000                           1-  326     _showFlag:
     0000 0000                      1-  327     	dw	0x00
                                    1-  331     .segment "idata"
     0000                           1-  332     _irStep:
     0000 0000                      1-  333     	dw	0x00
                                    1-  337     .segment "idata"
     0000                           1-  338     _revCount:
     0000 0000                      1-  339     	dw	0x00
                                    1-  343     .segment "idata"
     0000                           1-  344     _checkCount:
     0000 0000                      1-  345     	dw	0x00
                                    1-  349     .segment "idata"
     0000                           1-  350     _pwmTime:
     0000 0000                      1-  351     	dw	0x00
                                    1-  355     .segment "idata"
     0000                           1-  356     _sendFlag:
     0000 0000                      1-  357     	dw	0x00
                                    1-  361     .segment "idata"
     0000                           1-  362     _workTime:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _workStep:
     0000 0000                      1-  369     	dw	0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _pwFlag:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _pwShowTime:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _stepShowTime:
     0000 0000                      1-  387     	dw	0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _pwStep:
     0000 0000                      1-  393     	dw	0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _keyCount:
     0000 0000                      1-  399     	dw	0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _longPressFlag:
     0000 0000                      1-  405     	dw	0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _sleepTime:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _fullFlag:
     0000 0000                      1-  417     	dw	0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _shanTime:
     0000 0000 0000                 1-  423     	dw	0x00, 0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _count1s:
     0000 0000                      1-  429     	dw	0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _waitTime:
     0000 0000 0000                 1-  435     	dw	0x00, 0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _offShowTime:
     0000 0000                      1-  441     	dw	0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _notRecv:
     0000 0000                      1-  447     	dw	0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _zhedangFlag:
     0000 0000                      1-  453     	dw	0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _zhedangTime:
     0000 0000                      1-  459     	dw	0x00
                                    1-  463     .segment "idata"
     0000                           1-  464     _sleepFlag:
     0000 0000                      1-  465     	dw	0x00
                                    1-  469     .segment "idata"
     0000                           1-  470     _powerShi:
     0000 0000                      1-  471     	dw	0x00
                                    1-  475     .segment "idata"
     0000                           1-  476     _powerGe:
     0000 0000                      1-  477     	dw	0x00
                                    1-  481     .segment "idata"
     0000                           1-  482     _count5s:
     0000 0000 0000                 1-  483     	dw	0x00, 0x00
                                    1-  487     .segment "idata"
     0000                           1-  488     _count250ms:
     0000 0000                      1-  489     	dw	0x00
                                    1-  493     .segment "idata"
     0000                           1-  494     _checkBatTime:
     0000 0000                      1-  495     	dw	0x00
                                    1-  499     .segment "idata"
     0000                           1-  500     _fullTime:
     0000 0000                      1-  501     	dw	0x00
                                    1-  505     .segment "idata"
     0000                           1-  506     _numArray:
     0000 003F                      1-  507     	dw	0x3f
     0001 0006                      1-  508     	dw	0x06
     0002 005B                      1-  509     	dw	0x5b
     0003 004F                      1-  510     	dw	0x4f
     0004 0066                      1-  511     	dw	0x66
     0005 006D                      1-  512     	dw	0x6d
     0006 007D                      1-  513     	dw	0x7d
     0007 0007                      1-  514     	dw	0x07
     0008 007F                      1-  515     	dw	0x7f
     0009 006F                      1-  516     	dw	0x6f
     000A 0071                      1-  517     	dw	0x71
     000B 0079                      1-  518     	dw	0x79
     000C 0050                      1-  519     	dw	0x50
                                    1-  522     ;--------------------------------------------------------
                                    1-  523     ; overlayable items in internal ram 
                                    1-  524     ;--------------------------------------------------------
                                    1-  525     ;	udata_ovr
                                    1-  526     ;--------------------------------------------------------
                                    1-  527     ; reset vector 
                                    1-  528     ;--------------------------------------------------------
                                    1-  529     ORG	0x0000
     0000 3rrr                      1-  530     	LGOTO	__nyc_ny8_startup
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ; interrupt and initialization code
                                    1-  533     ;--------------------------------------------------------
                                    1-  534     ORG 0x0008
                                    1-  535     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  537     .segment "code"
     0000                           1-  538     __sdcc_interrupt:
                                    1-  539     ;***
                                    1-  540     ;  pBlock Stats: dbName = I
                                    1-  541     ;***
                                    1-  542     ;2 compiler assigned registers:
                                    1-  543     ;   STK00
                                    1-  544     ;   STK01
                                    1-  545     ;; Starting pCode block
     0000                           1-  546     _isr:
                                    1-  547     ; 0 exit points
                                    1-  548     	.line	78, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  549     	MOVAR	WSAVE
     0001 1503                      1-  550     	SWAPR	STATUS,W
     0002 0283                      1-  551     	CLRR	STATUS
     0003 00rr                      1-  552     	MOVAR	SSAVE
     0004 010A                      1-  553     	MOVR	PCHBUF,W
     0005 028A                      1-  554     	CLRR	PCHBUF
     0006 00rr                      1-  555     	MOVAR	PSAVE
     0007 0104                      1-  556     	MOVR	FSR,W
                                    1-  557     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  558     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  559     	MOVR	STK00,W
                                    1-  560     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  561     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  562     	MOVR	STK01,W
                                    1-  563     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  564     	MOVAR	___sdcc_saved_stk01
                                    1-  565     	.line	80, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  566     	BTRSS	_INTFbits,0
                                    1-  567     	MGOTO	_00120_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  568     	.line	82, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  569     	MOVIA	0x37
     0013 03rr                      1-  570     	ADDAR	_TMR0,F
                                    1-  571     	.line	84, "main.c"; 	if(++intCount >= 100)
                                    1-  572     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  573     	INCR	_intCount,F
                                    1-  574     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  575     	MOVIA	0x64
     0017 04rr                      1-  576     	SUBAR	_intCount,W
     0018 0803                      1-  577     	BTRSS	STATUS,0
                                    1-  578     	MGOTO	_00120_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  579     	.line	86, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  580     	MOVIA	0x01
                                    1-  581     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  582     	MOVAR	_IntFlag
                                    1-  583     	.line	87, "main.c"; 	intCount = 0;	
                                    1-  584     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  585     	CLRR	_intCount
                                    1-  586     	.line	88, "main.c"; 	if(++count1s > 100)
                                    1-  587     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  588     	INCR	_count1s,F
                                    1-  589     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  590     ;;unsigned compare: left >= lit (0x65=101), size=1
     0021 2165                      1-  591     	MOVIA	0x65
     0022 04rr                      1-  592     	SUBAR	_count1s,W
     0023 0803                      1-  593     	BTRSS	STATUS,0
                                    1-  594     	MGOTO	_00120_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  595     	.line	90, "main.c"; 	count1s = 0;
     0025 02rr                      1-  596     	CLRR	_count1s
                                    1-  597     	.line	91, "main.c"; 	if(stepShowTime > 0)
                                    1-  598     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  599     	MOVR	_stepShowTime,W
     0028 0D03                      1-  600     	BTRSC	STATUS,2
                                    1-  601     	MGOTO	_00113_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  602     	.line	92, "main.c"; 	stepShowTime--;
     002A 06rr                      1-  603     	DECR	_stepShowTime,F
                                    1-  604     	MGOTO	_00120_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  605     _00113_DS_:
                                    1-  606     	.line	93, "main.c"; 	else if(pwShowTime > 0)
                                    1-  607     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  608     	MOVR	_pwShowTime,W
     002E 0D03                      1-  609     	BTRSC	STATUS,2
                                    1-  610     	MGOTO	_00110_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  611     	.line	95, "main.c"; 	pwShowTime--;
     0030 06rr                      1-  612     	DECR	_pwShowTime,F
                                    1-  613     	MGOTO	_00120_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  614     _00110_DS_:
                                    1-  615     	.line	97, "main.c"; 	else if(offShowTime > 0)
                                    1-  616     	BANKSEL	_offShowTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  617     	MOVR	_offShowTime,W
     0034 0D03                      1-  618     	BTRSC	STATUS,2
                                    1-  619     	MGOTO	_00120_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  620     	.line	99, "main.c"; 	--offShowTime;
     0036 17rr                      1-  621     	DECRSZ	_offShowTime,F
                                    1-  622     	.line	100, "main.c"; 	if(offShowTime == 0)
                                    1-  623     	MGOTO	_00120_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  624     	.line	101, "main.c"; 	sleepFlag = 1;
     0038 2101                      1-  625     	MOVIA	0x01
                                    1-  626     	BANKSEL	_sleepFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1-  627     	MOVAR	_sleepFlag
     003B                           1-  628     _00120_DS_:
                                    1-  629     	.line	118, "main.c"; 	if(INTFbits.PABIF)
     003B 08rr                      1-  630     	BTRSS	_INTFbits,1
                                    1-  631     	MGOTO	_00122_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  632     	.line	120, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003D 21FD                      1-  633     	MOVIA	0xfd
     003E 00rr                      1-  634     	MOVAR	_INTF
                                    1-  635     	.line	121, "main.c"; 	revCount++;
                                    1-  636     	BANKSEL	_revCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 05rr                      1-  637     	INCR	_revCount,F
     0041                           1-  638     _00122_DS_:
                                    1-  639     	.line	124, "main.c"; 	INTF = 0;
     0041 02rr                      1-  640     	CLRR	_INTF
                                    1-  641     	.line	126, "main.c"; 	}
                                    1-  642     	BANKSEL	___sdcc_saved_stk01
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  643     	MOVR	___sdcc_saved_stk01,W
     0044 00rr                      1-  644     	MOVAR	STK01
                                    1-  645     	BANKSEL	___sdcc_saved_stk00
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  646     	MOVR	___sdcc_saved_stk00,W
     0047 00rr                      1-  647     	MOVAR	STK00
                                    1-  648     	BANKSEL	___sdcc_saved_fsr
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  649     	MOVR	___sdcc_saved_fsr,W
     004A 0084                      1-  650     	MOVAR	FSR
     004B 01rr                      1-  651     	MOVR	PSAVE,W
     004C 008A                      1-  652     	MOVAR	PCHBUF
     004D 0283                      1-  653     	CLRR	STATUS
     004E 15rr                      1-  654     	SWAPR	SSAVE,W
     004F 0083                      1-  655     	MOVAR	STATUS
     0050 15rr                      1-  656     	SWAPR	WSAVE,F
     0051 15rr                      1-  657     	SWAPR	WSAVE,W
     0052                           1-  658     END_OF_INTERRUPT:
     0052 0011                      1-  659     	RETIE	
                                    1-  661     ;--------------------------------------------------------
                                    1-  662     ; code
                                    1-  663     ;--------------------------------------------------------
                                    1-  664     ;***
                                    1-  665     ;  pBlock Stats: dbName = M
                                    1-  666     ;***
                                    1-  667     ;has an exit
                                    1-  668     ;functions called:
                                    1-  669     ;   _initSys
                                    1-  670     ;   _initAD
                                    1-  671     ;   _gotoSleep
                                    1-  672     ;   _refreshNub
                                    1-  673     ;   _refreshNub
                                    1-  674     ;   _setInput
                                    1-  675     ;   __divuchar
                                    1-  676     ;   __moduchar
                                    1-  677     ;   _delay
                                    1-  678     ;   _checkIRKey
                                    1-  679     ;   _delay
                                    1-  680     ;   _delay
                                    1-  681     ;   _delay
                                    1-  682     ;   _checkIRKey
                                    1-  683     ;   _delay
                                    1-  684     ;   _keyCtr
                                    1-  685     ;   _checkBat
                                    1-  686     ;   _chrgCtr
                                    1-  687     ;   _gotoSleep
                                    1-  688     ;   _gotoSleep
                                    1-  689     ;   _delay
                                    1-  690     ;   _initSys
                                    1-  691     ;   _initAD
                                    1-  692     ;   _gotoSleep
                                    1-  693     ;   _refreshNub
                                    1-  694     ;   _refreshNub
                                    1-  695     ;   _setInput
                                    1-  696     ;   __divuchar
                                    1-  697     ;   __moduchar
                                    1-  698     ;   _delay
                                    1-  699     ;   _checkIRKey
                                    1-  700     ;   _delay
                                    1-  701     ;   _delay
                                    1-  702     ;   _delay
                                    1-  703     ;   _checkIRKey
                                    1-  704     ;   _delay
                                    1-  705     ;   _keyCtr
                                    1-  706     ;   _checkBat
                                    1-  707     ;   _chrgCtr
                                    1-  708     ;   _gotoSleep
                                    1-  709     ;   _gotoSleep
                                    1-  710     ;   _delay
                                    1-  711     ;3 compiler assigned registers:
                                    1-  712     ;   STK00
                                    1-  713     ;   r0x1048
                                    1-  714     ;   r0x1049
                                    1-  715     ;; Starting pCode block
                                    1-  716     .segment "code"; module=main, function=_main
                                    1-  718     ;local variable name mapping:
     0000                           1-  720     _main:
                                    1-  721     ; 2 exit points
                                    1-  722     	.line	130, "main.c"; 	initSys();
                                    1-  723     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  724     	.line	131, "main.c"; 	initAD();
                                    1-  725     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  726     	.line	132, "main.c"; 	gotoSleep();
                                    1-  727     	MCALL	_gotoSleep
     0002 2rrr                      3-   66 m1      LCALL rom_address
     0003                           1-  728     _00181_DS_:
                                    1-  729     	.line	135, "main.c"; 	CLRWDT();							// Clear WatchDog
     0003 0002                      1-  730     	clrwdt
                                    1-  731     	.line	136, "main.c"; 	if(showFlag)
                                    1-  732     	BANKSEL	_showFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  733     	MOVR	_showFlag,W
     0006 0D03                      1-  734     	BTRSC	STATUS,2
                                    1-  735     	MGOTO	_00135_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  736     	.line	137, "main.c"; 	refreshNub();
                                    1-  737     	MCALL	_refreshNub
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  738     	MGOTO	_00136_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1-  739     _00135_DS_:
                                    1-  740     	.line	140, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  741     	BANKSEL	_keyCount
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1-  742     	MOVR	_keyCount,W
     000C 0D03                      1-  743     	BTRSC	STATUS,2
                                    1-  744     	MGOTO	_00131_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  745     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  746     	MOVR	_pwFlag,W
     0010 2401                      1-  747     	XORIA	0x01
     0011 0903                      1-  748     	BTRSS	STATUS,2
                                    1-  749     	MGOTO	_00131_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  750     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  751     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  752     	.line	142, "main.c"; 	if(pwStep > 99)
     0013 2164                      1-  753     	MOVIA	0x64
                                    1-  754     	BANKSEL	_pwStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1-  755     	SUBAR	_pwStep,W
     0016 0803                      1-  756     	BTRSS	STATUS,0
                                    1-  757     	MGOTO	_00128_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  758     	.line	144, "main.c"; 	baiweiNum = 1;
     0018 2101                      1-  759     	MOVIA	0x01
                                    1-  760     	BANKSEL	_baiweiNum
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1-  761     	MOVAR	_baiweiNum
                                    1-  762     	.line	145, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  763     	BANKSEL	_geweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1-  764     	CLRR	_geweiNum
                                    1-  765     	BANKSEL	_shiweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  766     	CLRR	_shiweiNum
                                    1-  767     	MGOTO	_00129_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  768     _00128_DS_:
                                    1-  769     	.line	149, "main.c"; 	baiweiNum = 0;
                                    1-  770     	BANKSEL	_baiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1-  771     	CLRR	_baiweiNum
                                    1-  772     	.line	150, "main.c"; 	shiweiNum = powerShi;
                                    1-  773     	BANKSEL	_powerShi
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1-  774     	MOVR	_powerShi,W
                                    1-  775     	BANKSEL	_shiweiNum
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1-  776     	MOVAR	_shiweiNum
                                    1-  777     	.line	151, "main.c"; 	geweiNum = powerGe;
                                    1-  778     	BANKSEL	_powerGe
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  779     	MOVR	_powerGe,W
                                    1-  780     	BANKSEL	_geweiNum
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1-  781     	MOVAR	_geweiNum
     002A                           1-  782     _00129_DS_:
                                    1-  783     	.line	153, "main.c"; 	refreshNub();
                                    1-  784     	MCALL	_refreshNub
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  785     	MGOTO	_00136_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  786     _00131_DS_:
                                    1-  787     	.line	157, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  788     	BANKSEL	_geweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1-  789     	CLRR	_geweiNum
                                    1-  790     	BANKSEL	_shiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  791     	CLRR	_shiweiNum
                                    1-  792     	BANKSEL	_baiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  793     	CLRR	_baiweiNum
                                    1-  794     	.line	158, "main.c"; 	setInput();
                                    1-  795     	MCALL	_setInput
     0032 2rrr                      3-   66 m1      LCALL rom_address
     0033                           1-  796     _00136_DS_:
                                    1-  797     	.line	161, "main.c"; 	if(!IntFlag)
                                    1-  798     	BANKSEL	_IntFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  799     	MOVR	_IntFlag,W
     0035 0D03                      1-  800     	BTRSC	STATUS,2
                                    1-  801     	MGOTO	_00181_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  802     	.line	163, "main.c"; 	IntFlag = 0;
     0037 02rr                      1-  803     	CLRR	_IntFlag
                                    1-  804     	.line	164, "main.c"; 	powerShi = pwStep/10;
     0038 210A                      1-  805     	MOVIA	0x0a
     0039 00rr                      1-  806     	MOVAR	STK00
                                    1-  807     	BANKSEL	_pwStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  808     	MOVR	_pwStep,W
                                    1-  809     	MCALL	__divuchar
     003C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  810     	BANKSEL	_powerShi
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1-  811     	MOVAR	_powerShi
                                    1-  812     	.line	165, "main.c"; 	powerGe = pwStep%10;
     003F 210A                      1-  813     	MOVIA	0x0a
     0040 00rr                      1-  814     	MOVAR	STK00
                                    1-  815     	BANKSEL	_pwStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1-  816     	MOVR	_pwStep,W
                                    1-  817     	MCALL	__moduchar
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  818     	BANKSEL	_powerGe
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1-  819     	MOVAR	_powerGe
                                    1-  820     	.line	167, "main.c"; 	if(waitTime > 0)
                                    1-  821     	BANKSEL	_waitTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  822     	MOVR	_waitTime,W
     0048 11rr                      1-  823     	IORAR	(_waitTime + 1),W
     0049 0D03                      1-  824     	BTRSC	STATUS,2
                                    1-  825     	MGOTO	_00161_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  826     	.line	168, "main.c"; 	waitTime--;
     004B 21FF                      1-  827     	MOVIA	0xff
     004C 03rr                      1-  828     	ADDAR	_waitTime,F
     004D 0803                      1-  829     	BTRSS	STATUS,0
     004E 06rr                      1-  830     	DECR	(_waitTime + 1),F
                                    1-  831     	.line	168, "main.c"; 	else if(pwFlag)
                                    1-  832     	MGOTO	_00162_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1-  833     _00161_DS_:
                                    1-  834     	.line	169, "main.c"; 	{
                                    1-  835     	BANKSEL	_pwFlag
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  836     	MOVR	_pwFlag,W
     0052 0D03                      1-  837     	BTRSC	STATUS,2
                                    1-  838     	MGOTO	_00162_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  839     	.line	172, "main.c"; 	if(++count250ms >= 25)
                                    1-  840     	BANKSEL	_count250ms
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 05rr                      1-  841     	INCR	_count250ms,F
                                    1-  842     ;;unsigned compare: left < lit (0x19=25), size=1
     0056 2119                      1-  843     	MOVIA	0x19
     0057 04rr                      1-  844     	SUBAR	_count250ms,W
     0058 0803                      1-  845     	BTRSS	STATUS,0
                                    1-  846     	MGOTO	_00162_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  847     	.line	174, "main.c"; 	count250ms = 0;
     005A 02rr                      1-  848     	CLRR	_count250ms
                                    1-  849     	.line	176, "main.c"; 	revCount = 0;
                                    1-  850     	BANKSEL	_revCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 02rr                      1-  851     	CLRR	_revCount
                                    1-  852     	.line	177, "main.c"; 	for(i=0;i<10;i++)
                                    1-  853     	BANKSEL	r0x1048
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 02rr                      1-  854     	CLRR	r0x1048
     005F                           1-  855     _00183_DS_:
                                    1-  856     	.line	179, "main.c"; 	PORTA |= 0x40;
                                    1-  857     	BANKSEL	_PORTA
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 1Brr                      1-  858     	BSR	_PORTA,6
                                    1-  859     	.line	180, "main.c"; 	delay(2);
     0061 2102                      1-  860     	MOVIA	0x02
                                    1-  861     	MCALL	_delay
     0062 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  862     	.line	181, "main.c"; 	checkIRKey();
                                    1-  863     	MCALL	_checkIRKey
     0063 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  864     	.line	182, "main.c"; 	PORTA &= 0xBF;
                                    1-  865     	BANKSEL	_PORTA
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 1Frr                      1-  866     	BCR	_PORTA,6
                                    1-  867     	.line	183, "main.c"; 	delay(5);
     0066 2105                      1-  868     	MOVIA	0x05
                                    1-  869     	MCALL	_delay
     0067 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  870     	.line	177, "main.c"; 	for(i=0;i<10;i++)
                                    1-  871     	BANKSEL	r0x1048
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 05rr                      1-  872     	INCR	r0x1048,F
                                    1-  873     ;;unsigned compare: left < lit (0xA=10), size=1
     006A 210A                      1-  874     	MOVIA	0x0a
     006B 04rr                      1-  875     	SUBAR	r0x1048,W
     006C 0803                      1-  876     	BTRSS	STATUS,0
                                    1-  877     	MGOTO	_00183_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  878     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  879     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1-  880     	.line	185, "main.c"; 	if(revCount > 5)
     006E 2106                      1-  881     	MOVIA	0x06
                                    1-  882     	BANKSEL	_revCount
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 04rr                      1-  883     	SUBAR	_revCount,W
     0071 0803                      1-  884     	BTRSS	STATUS,0
                                    1-  885     	MGOTO	_00154_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  886     	.line	187, "main.c"; 	delay(30);
     0073 211E                      1-  887     	MOVIA	0x1e
                                    1-  888     	MCALL	_delay
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  889     	.line	188, "main.c"; 	for(i=0;i<10;i++)
                                    1-  890     	BANKSEL	r0x1048
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 02rr                      1-  891     	CLRR	r0x1048
     0077                           1-  892     _00185_DS_:
                                    1-  893     	.line	190, "main.c"; 	PORTA |= 0x40;
                                    1-  894     	BANKSEL	_PORTA
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 1Brr                      1-  895     	BSR	_PORTA,6
                                    1-  896     	.line	191, "main.c"; 	delay(2);
     0079 2102                      1-  897     	MOVIA	0x02
                                    1-  898     	MCALL	_delay
     007A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  899     	.line	192, "main.c"; 	checkIRKey();
                                    1-  900     	MCALL	_checkIRKey
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  901     	.line	193, "main.c"; 	PORTA &= 0xBF;
                                    1-  902     	BANKSEL	_PORTA
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 1Frr                      1-  903     	BCR	_PORTA,6
                                    1-  904     	.line	194, "main.c"; 	delay(5);
     007E 2105                      1-  905     	MOVIA	0x05
                                    1-  906     	MCALL	_delay
     007F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  907     	.line	188, "main.c"; 	for(i=0;i<10;i++)
                                    1-  908     	BANKSEL	r0x1048
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 05rr                      1-  909     	INCR	r0x1048,F
                                    1-  910     ;;unsigned compare: left < lit (0xA=10), size=1
     0082 210A                      1-  911     	MOVIA	0x0a
     0083 04rr                      1-  912     	SUBAR	r0x1048,W
     0084 0803                      1-  913     	BTRSS	STATUS,0
                                    1-  914     	MGOTO	_00185_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  915     	.line	196, "main.c"; 	if(zhedangTime == 0)
                                    1-  916     	BANKSEL	_zhedangTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1-  917     	MOVR	_zhedangTime,W
     0088 0903                      1-  918     	BTRSS	STATUS,2
                                    1-  919     	MGOTO	_00150_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  920     	.line	198, "main.c"; 	if(workStep == 1)
                                    1-  921     	BANKSEL	_workStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 01rr                      1-  922     	MOVR	_workStep,W
     008C 2401                      1-  923     	XORIA	0x01
     008D 0903                      1-  924     	BTRSS	STATUS,2
                                    1-  925     	MGOTO	_00147_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  926     	.line	200, "main.c"; 	waitTime = 50;
     008F 2132                      1-  927     	MOVIA	0x32
                                    1-  928     	BANKSEL	_waitTime
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 00rr                      1-  929     	MOVAR	_waitTime
     0092 02rr                      1-  930     	CLRR	(_waitTime + 1)
                                    1-  931     	MGOTO	_00150_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
     0094                           1-  932     _00147_DS_:
                                    1-  933     	.line	202, "main.c"; 	else if(workStep == 2)
                                    1-  934     	BANKSEL	_workStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1-  935     	MOVR	_workStep,W
     0096 2402                      1-  936     	XORIA	0x02
     0097 0903                      1-  937     	BTRSS	STATUS,2
                                    1-  938     	MGOTO	_00144_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  939     	.line	204, "main.c"; 	waitTime = 100;
     0099 2164                      1-  940     	MOVIA	0x64
                                    1-  941     	BANKSEL	_waitTime
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1-  942     	MOVAR	_waitTime
     009C 02rr                      1-  943     	CLRR	(_waitTime + 1)
                                    1-  944     	MGOTO	_00150_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
     009E                           1-  945     _00144_DS_:
                                    1-  946     	.line	206, "main.c"; 	else if(workStep == 3)
                                    1-  947     	BANKSEL	_workStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 01rr                      1-  948     	MOVR	_workStep,W
     00A0 2403                      1-  949     	XORIA	0x03
     00A1 0903                      1-  950     	BTRSS	STATUS,2
                                    1-  951     	MGOTO	_00150_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  952     	.line	208, "main.c"; 	waitTime = 150;
     00A3 2196                      1-  953     	MOVIA	0x96
                                    1-  954     	BANKSEL	_waitTime
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1-  955     	MOVAR	_waitTime
     00A6 02rr                      1-  956     	CLRR	(_waitTime + 1)
     00A7                           1-  957     _00150_DS_:
                                    1-  958     	.line	211, "main.c"; 	if(++zhedangTime > 40)
                                    1-  959     	BANKSEL	_zhedangTime
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 05rr                      1-  960     	INCR	_zhedangTime,F
                                    1-  961     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  962     ;;unsigned compare: left >= lit (0x29=41), size=1
     00A9 2129                      1-  963     	MOVIA	0x29
     00AA 04rr                      1-  964     	SUBAR	_zhedangTime,W
     00AB 0803                      1-  965     	BTRSS	STATUS,0
                                    1-  966     	MGOTO	_00162_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  967     	.line	213, "main.c"; 	zhedangTime = 40;
     00AD 2128                      1-  968     	MOVIA	0x28
     00AE 00rr                      1-  969     	MOVAR	_zhedangTime
                                    1-  970     	.line	213, "main.c"; 	//			    		if(zhedangTime % 2)
                                    1-  971     	MGOTO	_00162_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
     00B0                           1-  972     _00154_DS_:
                                    1-  973     	.line	226, "main.c"; 	zhedangTime = 0;
                                    1-  974     	BANKSEL	_zhedangTime
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 02rr                      1-  975     	CLRR	_zhedangTime
                                    1-  976     	.line	227, "main.c"; 	irStep = 0;			//移开了
                                    1-  977     	BANKSEL	_irStep
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 02rr                      1-  978     	CLRR	_irStep
     00B4                           1-  979     _00162_DS_:
                                    1-  980     	.line	232, "main.c"; 	keyCtr();
                                    1-  981     	MCALL	_keyCtr
     00B4 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  982     	.line	233, "main.c"; 	if(waitTime == 0 && workTime == 0)
                                    1-  983     	BANKSEL	_waitTime
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1-  984     	MOVR	_waitTime,W
     00B7 11rr                      1-  985     	IORAR	(_waitTime + 1),W
     00B8 0903                      1-  986     	BTRSS	STATUS,2
                                    1-  987     	MGOTO	_00166_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  988     	BANKSEL	_workTime
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 01rr                      1-  989     	MOVR	_workTime,W
     00BC 0903                      1-  990     	BTRSS	STATUS,2
                                    1-  991     	MGOTO	_00166_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     	.line	235, "main.c"; 	if(++checkBatTime >= 20)
                                    1-  993     	BANKSEL	_checkBatTime
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 05rr                      1-  994     	INCR	_checkBatTime,F
                                    1-  995     ;;unsigned compare: left < lit (0x14=20), size=1
     00C0 2114                      1-  996     	MOVIA	0x14
     00C1 04rr                      1-  997     	SUBAR	_checkBatTime,W
     00C2 0803                      1-  998     	BTRSS	STATUS,0
                                    1-  999     	MGOTO	_00167_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1000     	.line	237, "main.c"; 	checkBatTime = 0;
     00C4 02rr                      1- 1001     	CLRR	_checkBatTime
                                    1- 1002     	.line	238, "main.c"; 	checkBat();
                                    1- 1003     	MCALL	_checkBat
     00C5 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1004     	MGOTO	_00167_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
     00C7                           1- 1005     _00166_DS_:
                                    1- 1006     	.line	243, "main.c"; 	checkBatTime = 0;
                                    1- 1007     	BANKSEL	_checkBatTime
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 02rr                      1- 1008     	CLRR	_checkBatTime
     00C9                           1- 1009     _00167_DS_:
                                    1- 1010     	.line	245, "main.c"; 	chrgCtr();
                                    1- 1011     	MCALL	_chrgCtr
     00C9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1012     	.line	247, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0)
                                    1- 1013     	BANKSEL	_PORTA
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 01rr                      1- 1014     	MOVR	_PORTA,W
                                    1- 1015     	BANKSEL	r0x1048
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 1016     	MOVAR	r0x1048
                                    1- 1017     	BANKSEL	r0x1049
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 02rr                      1- 1018     	CLRR	r0x1049
                                    1- 1019     	BANKSEL	r0x1048
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 07rr                      1- 1020     	COMR	r0x1048,W
     00D2 00rr                      1- 1021     	MOVAR	r0x1048
                                    1- 1022     	BANKSEL	r0x1049
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 07rr                      1- 1023     	COMR	r0x1049,W
     00D5 00rr                      1- 1024     	MOVAR	r0x1049
                                    1- 1025     	BANKSEL	r0x1048
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 0Arr                      1- 1026     	BTRSS	r0x1048,5
                                    1- 1027     	MGOTO	_00172_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1028     	BANKSEL	_keyCount
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 01rr                      1- 1029     	MOVR	_keyCount,W
     00DB 0903                      1- 1030     	BTRSS	STATUS,2
                                    1- 1031     	MGOTO	_00172_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1032     	BANKSEL	_pwFlag
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 01rr                      1- 1033     	MOVR	_pwFlag,W
     00DF 0903                      1- 1034     	BTRSS	STATUS,2
                                    1- 1035     	MGOTO	_00172_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1036     	BANKSEL	_stepShowTime
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 01rr                      1- 1037     	MOVR	_stepShowTime,W
     00E3 0903                      1- 1038     	BTRSS	STATUS,2
                                    1- 1039     	MGOTO	_00172_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1040     	BANKSEL	_pwShowTime
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 01rr                      1- 1041     	MOVR	_pwShowTime,W
     00E7 0903                      1- 1042     	BTRSS	STATUS,2
                                    1- 1043     	MGOTO	_00172_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1044     	BANKSEL	_offShowTime
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 01rr                      1- 1045     	MOVR	_offShowTime,W
     00EB 0903                      1- 1046     	BTRSS	STATUS,2
                                    1- 1047     	MGOTO	_00172_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1048     	.line	250, "main.c"; 	if(++sleepTime > 100)
                                    1- 1049     	BANKSEL	_sleepTime
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 05rr                      1- 1050     	INCR	_sleepTime,F
                                    1- 1051     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1052     ;;unsigned compare: left >= lit (0x65=101), size=1
     00EF 2165                      1- 1053     	MOVIA	0x65
     00F0 04rr                      1- 1054     	SUBAR	_sleepTime,W
     00F1 0C03                      1- 1055     	BTRSC	STATUS,0
                                    1- 1056     	.line	251, "main.c"; 	gotoSleep();
                                    1- 1057     	MCALL	_gotoSleep
     00F2 2rrr                      3-   66 m1      LCALL rom_address
     00F3                           1- 1058     _00172_DS_:
                                    1- 1059     	.line	253, "main.c"; 	if(sleepFlag)
                                    1- 1060     	BANKSEL	_sleepFlag
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 01rr                      1- 1061     	MOVR	_sleepFlag,W
     00F5 0903                      1- 1062     	BTRSS	STATUS,2
                                    1- 1063     	.line	255, "main.c"; 	gotoSleep();
                                    1- 1064     	MCALL	_gotoSleep
     00F6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1065     	.line	257, "main.c"; 	delay(100);
     00F7 2164                      1- 1066     	MOVIA	0x64
                                    1- 1067     	MCALL	_delay
     00F8 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1068     	.line	257, "main.c"; 	//    	if(getbit(PORTB, 3) == 0)
                                    1- 1069     	MGOTO	_00181_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1070     	.line	279, "main.c"; 	}
                                    1- 1071     	RETURN	
     00FA 0010                      3-   40 m1      ret
                                    1- 1072     ; exit point of _main
                                    1- 1074     ;***
                                    1- 1075     ;  pBlock Stats: dbName = C
                                    1- 1076     ;***
                                    1- 1077     ;has an exit
                                    1- 1078     ;2 compiler assigned registers:
                                    1- 1079     ;   r0x1034
                                    1- 1080     ;   r0x1035
                                    1- 1081     ;; Starting pCode block
                                    1- 1082     .segment "code"; module=main, function=_delay
                                    1- 1084     ;local variable name mapping:
     0000                           1- 1087     _delay:
                                    1- 1088     ; 2 exit points
                                    1- 1089     	.line	774, "main.c"; 	void delay(u8t count)
                                    1- 1090     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1091     	MOVAR	r0x1034
                                    1- 1092     	.line	777, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1- 1093     	MOVIA	0x01
                                    1- 1094     	BANKSEL	r0x1035
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1095     	MOVAR	r0x1035
     0005                           1- 1096     _00491_DS_:
                                    1- 1097     	BANKSEL	r0x1035
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1098     	MOVR	r0x1035,W
                                    1- 1099     	BANKSEL	r0x1034
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1100     	SUBAR	r0x1034,W
     0009 0803                      1- 1101     	BTRSS	STATUS,0
                                    1- 1102     	MGOTO	_00493_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1103     	BANKSEL	r0x1035
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1104     	INCR	r0x1035,F
                                    1- 1105     	MGOTO	_00491_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1106     _00493_DS_:
                                    1- 1107     	.line	779, "main.c"; 	}
                                    1- 1108     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1109     ; exit point of _delay
                                    1- 1111     ;***
                                    1- 1112     ;  pBlock Stats: dbName = C
                                    1- 1113     ;***
                                    1- 1114     ;has an exit
                                    1- 1115     ;; Starting pCode block
                                    1- 1116     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1118     _F_wait_eoc:
                                    1- 1119     ; 2 exit points
     0000                           1- 1120     _00484_DS_:
                                    1- 1121     	.line	770, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1122     	BTRSS	_ADMDbits,5
                                    1- 1123     	MGOTO	_00484_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1124     	.line	772, "main.c"; 	}
                                    1- 1125     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1126     ; exit point of _F_wait_eoc
                                    1- 1128     ;***
                                    1- 1129     ;  pBlock Stats: dbName = C
                                    1- 1130     ;***
                                    1- 1131     ;has an exit
                                    1- 1132     ;functions called:
                                    1- 1133     ;   _F_wait_eoc
                                    1- 1134     ;   _F_wait_eoc
                                    1- 1135     ;6 compiler assigned registers:
                                    1- 1136     ;   r0x1036
                                    1- 1137     ;   r0x1037
                                    1- 1138     ;   r0x1038
                                    1- 1139     ;   r0x1039
                                    1- 1140     ;   r0x103A
                                    1- 1141     ;   r0x103B
                                    1- 1142     ;; Starting pCode block
                                    1- 1143     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1145     ;local variable name mapping:
     0000                           1- 1148     _F_Quarter_VDD_Convert:
                                    1- 1149     ; 2 exit points
                                    1- 1150     	.line	755, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1151     	BANKSEL	r0x1036
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1152     	MOVAR	r0x1036
                                    1- 1153     	.line	758, "main.c"; 	ADMD  = 0x90 | C_ADC_PB1;			// Select internal 1/4VDD as ADC input
     0002 2196                      1- 1154     	MOVIA	0x96
     0003 00rr                      1- 1155     	MOVAR	_ADMD
                                    1- 1156     	.line	759, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1157     	MOVIA	0x01
                                    1- 1158     	BANKSEL	r0x1037
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1159     	MOVAR	r0x1037
     0007                           1- 1160     _00477_DS_:
                                    1- 1161     	BANKSEL	r0x1037
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1162     	MOVR	r0x1037,W
                                    1- 1163     	BANKSEL	r0x1036
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1164     	SUBAR	r0x1036,W
     000B 0803                      1- 1165     	BTRSS	STATUS,0
                                    1- 1166     	MGOTO	_00479_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1167     	.line	761, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1168     	BSR	_ADMDbits,6
                                    1- 1169     	.line	762, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1170     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1171     	.line	763, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1172     	MOVIA	0x0f
     0010 10rr                      1- 1173     	ANDAR	_ADR,W
                                    1- 1174     ;;3	MOVAR	r0x1038
                                    1- 1175     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1176     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1177     	.line	764, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1178     	MOVR	_ADD,W
                                    1- 1179     	BANKSEL	r0x1038
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1180     	MOVAR	r0x1038
                                    1- 1181     ;;1	CLRR	r0x1039
                                    1- 1182     ;;101	MOVR	r0x1038,W
                                    1- 1183     ;;99	MOVAR	r0x103A
     0016 2100                      1- 1184     	MOVIA	0x00
                                    1- 1185     	BANKSEL	r0x103B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1186     	MOVAR	r0x103B
                                    1- 1187     ;;100	MOVR	r0x103A,W
                                    1- 1188     	BANKSEL	r0x1038
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1189     	MOVR	r0x1038,W
                                    1- 1190     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1191     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1192     	BANKSEL	r0x103B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1193     	MOVR	r0x103B,W
     001F 0C03                      1- 1194     	BTRSC	STATUS,0
     0020 05rr                      1- 1195     	INCR	r0x103B,W
     0021 0D03                      1- 1196     	BTRSC	STATUS,2
                                    1- 1197     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1198     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1199     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1200     _00001_DS_:
                                    1- 1201     	.line	759, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1202     	BANKSEL	r0x1037
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1203     	INCR	r0x1037,F
                                    1- 1204     	MGOTO	_00477_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1205     _00479_DS_:
                                    1- 1206     	.line	766, "main.c"; 	}
                                    1- 1207     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1208     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1210     ;***
                                    1- 1211     ;  pBlock Stats: dbName = C
                                    1- 1212     ;***
                                    1- 1213     ;has an exit
                                    1- 1214     ;functions called:
                                    1- 1215     ;   _F_Quarter_VDD_Convert
                                    1- 1216     ;   __divuint
                                    1- 1217     ;   _F_Quarter_VDD_Convert
                                    1- 1218     ;   __divuint
                                    1- 1219     ;7 compiler assigned registers:
                                    1- 1220     ;   r0x103C
                                    1- 1221     ;   r0x103D
                                    1- 1222     ;   r0x103E
                                    1- 1223     ;   r0x103F
                                    1- 1224     ;   STK02
                                    1- 1225     ;   STK01
                                    1- 1226     ;   STK00
                                    1- 1227     ;; Starting pCode block
                                    1- 1228     .segment "code"; module=main, function=_checkBat
                                    1- 1230     ;local variable name mapping:
     0000                           1- 1233     _checkBat:
                                    1- 1234     ; 2 exit points
                                    1- 1235     	.line	661, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1236     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1237     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1238     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1239     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1240     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1241     	.line	662, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1242     	MOVIA	0x08
                                    1- 1243     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1244     	.line	663, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1245     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1246     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1247     	ANDIA	0xf0
     000A 00rr                      1- 1248     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1249     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1250     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1251     	ANDIA	0x0f
     000E 11rr                      1- 1252     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1253     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1254     	.line	664, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1255     	MOVIA	0xf0
                                    1- 1256     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1257     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1258     	.line	665, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1259     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1260     	BANKSEL	r0x103E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1261     	MOVAR	r0x103E
                                    1- 1262     	BANKSEL	r0x103C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1263     	MOVAR	r0x103C
                                    1- 1264     	BANKSEL	r0x103D
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1265     	CLRR	r0x103D
                                    1- 1266     ;;104	MOVR	r0x103C,W
     001A 2100                      1- 1267     	MOVIA	0x00
                                    1- 1268     	BANKSEL	r0x103F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1269     	MOVAR	r0x103F
                                    1- 1270     	BANKSEL	r0x103E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1271     	MOVR	r0x103E,W
                                    1- 1272     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1273     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1274     	BANKSEL	r0x103F
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1275     	MOVR	r0x103F,W
     0023 0C03                      1- 1276     	BTRSC	STATUS,0
     0024 05rr                      1- 1277     	INCR	r0x103F,W
     0025 0D03                      1- 1278     	BTRSC	STATUS,2
                                    1- 1279     	MGOTO	_00002_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1280     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1281     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1282     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1283     _00002_DS_:
                                    1- 1284     	.line	666, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1285     	BCR	STATUS,0
                                    1- 1286     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1287     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1288     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1289     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1290     	BCR	STATUS,0
     002E 13rr                      1- 1291     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1292     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1293     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1294     	BCR	STATUS,0
     0031 13rr                      1- 1295     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1296     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1297     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1298     ;;unsigned compare: left >= lit (0x30E=782), size=2
                                    1- 1299     	.line	667, "main.c"; 	if(R_Quarter_VDD_DATA > 781)
     0033 2103                      1- 1300     	MOVIA	0x03
     0034 04rr                      1- 1301     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1302     	BTRSS	STATUS,2
                                    1- 1303     	MGOTO	_00456_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 210E                      1- 1304     	MOVIA	0x0e
     0038 04rr                      1- 1305     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1306     _00456_DS_:
     0039 0803                      1- 1307     	BTRSS	STATUS,0
                                    1- 1308     	MGOTO	_00401_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1309     	.line	669, "main.c"; 	if(++fullTime > 200)
                                    1- 1310     	BANKSEL	_fullTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 1311     	INCR	_fullTime,F
                                    1- 1312     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1313     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003D 21C9                      1- 1314     	MOVIA	0xc9
     003E 04rr                      1- 1315     	SUBAR	_fullTime,W
     003F 0803                      1- 1316     	BTRSS	STATUS,0
                                    1- 1317     	MGOTO	_00403_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1318     	.line	671, "main.c"; 	fullFlag = 1;
     0041 2101                      1- 1319     	MOVIA	0x01
                                    1- 1320     	BANKSEL	_fullFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1321     	MOVAR	_fullFlag
                                    1- 1322     	.line	672, "main.c"; 	pwStep = 100;
     0044 2164                      1- 1323     	MOVIA	0x64
                                    1- 1324     	BANKSEL	_pwStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1325     	MOVAR	_pwStep
                                    1- 1326     	MGOTO	_00403_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1327     ;;unsigned compare: left < lit (0x226=550), size=2
     0048                           1- 1328     _00401_DS_:
                                    1- 1329     	.line	675, "main.c"; 	else if(R_Quarter_VDD_DATA < 550)
     0048 2102                      1- 1330     	MOVIA	0x02
                                    1- 1331     	BANKSEL	_R_Quarter_VDD_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1332     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     004B 0903                      1- 1333     	BTRSS	STATUS,2
                                    1- 1334     	MGOTO	_00458_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 2126                      1- 1335     	MOVIA	0x26
     004E 04rr                      1- 1336     	SUBAR	_R_Quarter_VDD_DATA,W
     004F                           1- 1337     _00458_DS_:
     004F 0C03                      1- 1338     	BTRSC	STATUS,0
                                    1- 1339     	MGOTO	_00398_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1340     	.line	677, "main.c"; 	pwStep = 0;
                                    1- 1341     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 1342     	CLRR	_pwStep
                                    1- 1343     	.line	678, "main.c"; 	fullTime = 0;
                                    1- 1344     	BANKSEL	_fullTime
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1345     	CLRR	_fullTime
                                    1- 1346     	MGOTO	_00403_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1- 1347     _00398_DS_:
                                    1- 1348     	.line	683, "main.c"; 	fullTime = 0;
                                    1- 1349     	BANKSEL	_fullTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 02rr                      1- 1350     	CLRR	_fullTime
                                    1- 1351     ;;unsigned compare: left < lit (0x2BC=700), size=2
                                    1- 1352     	.line	684, "main.c"; 	if(R_Quarter_VDD_DATA >= 700)
     0058 2102                      1- 1353     	MOVIA	0x02
                                    1- 1354     	BANKSEL	_R_Quarter_VDD_DATA
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 04rr                      1- 1355     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     005B 0903                      1- 1356     	BTRSS	STATUS,2
                                    1- 1357     	MGOTO	_00459_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D 21BC                      1- 1358     	MOVIA	0xbc
     005E 04rr                      1- 1359     	SUBAR	_R_Quarter_VDD_DATA,W
     005F                           1- 1360     _00459_DS_:
     005F 0803                      1- 1361     	BTRSS	STATUS,0
                                    1- 1362     	MGOTO	_00369_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1363     	.line	686, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 700) + 40;
     0061 216C                      1- 1364     	MOVIA	0x6c
                                    1- 1365     	BANKSEL	_R_Quarter_VDD_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 03rr                      1- 1366     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1367     	BANKSEL	r0x103C
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 00rr                      1- 1368     	MOVAR	r0x103C
     0066 21FD                      1- 1369     	MOVIA	0xfd
                                    1- 1370     	BANKSEL	r0x103D
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1371     	MOVAR	r0x103D
                                    1- 1372     	BANKSEL	_R_Quarter_VDD_DATA
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 1373     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     006B 0C03                      1- 1374     	BTRSC	STATUS,0
     006C 05rr                      1- 1375     	INCR	(_R_Quarter_VDD_DATA + 1),W
     006D 0D03                      1- 1376     	BTRSC	STATUS,2
                                    1- 1377     	MGOTO	_00003_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1378     	BANKSEL	r0x103D
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 03rr                      1- 1379     	ADDAR	r0x103D,F
     0071                           1- 1380     _00003_DS_:
                                    1- 1381     	MGOTO	_00370_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1382     ;;unsigned compare: left < lit (0x262=610), size=2
     0072                           1- 1383     _00369_DS_:
                                    1- 1384     	.line	688, "main.c"; 	else if(R_Quarter_VDD_DATA >= 610)
     0072 2102                      1- 1385     	MOVIA	0x02
                                    1- 1386     	BANKSEL	_R_Quarter_VDD_DATA
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 04rr                      1- 1387     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0075 0903                      1- 1388     	BTRSS	STATUS,2
                                    1- 1389     	MGOTO	_00460_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
     0077 2162                      1- 1390     	MOVIA	0x62
     0078 04rr                      1- 1391     	SUBAR	_R_Quarter_VDD_DATA,W
     0079                           1- 1392     _00460_DS_:
     0079 0803                      1- 1393     	BTRSS	STATUS,0
                                    1- 1394     	MGOTO	_00366_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1395     	.line	690, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 610)/3) + 10;
     007B 219E                      1- 1396     	MOVIA	0x9e
                                    1- 1397     	BANKSEL	_R_Quarter_VDD_DATA
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 03rr                      1- 1398     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1399     	BANKSEL	r0x103E
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 1400     	MOVAR	r0x103E
     0080 21FD                      1- 1401     	MOVIA	0xfd
                                    1- 1402     	BANKSEL	r0x103F
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 1403     	MOVAR	r0x103F
                                    1- 1404     	BANKSEL	_R_Quarter_VDD_DATA
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1- 1405     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0085 0C03                      1- 1406     	BTRSC	STATUS,0
     0086 05rr                      1- 1407     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0087 0D03                      1- 1408     	BTRSC	STATUS,2
                                    1- 1409     	MGOTO	_00004_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1410     	BANKSEL	r0x103F
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 03rr                      1- 1411     	ADDAR	r0x103F,F
     008B                           1- 1412     _00004_DS_:
     008B 2103                      1- 1413     	MOVIA	0x03
     008C 00rr                      1- 1414     	MOVAR	STK02
     008D 2100                      1- 1415     	MOVIA	0x00
     008E 00rr                      1- 1416     	MOVAR	STK01
                                    1- 1417     	BANKSEL	r0x103E
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 01rr                      1- 1418     	MOVR	r0x103E,W
     0091 00rr                      1- 1419     	MOVAR	STK00
                                    1- 1420     	BANKSEL	r0x103F
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1- 1421     	MOVR	r0x103F,W
                                    1- 1422     	MCALL	__divuint
     0094 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1423     	BANKSEL	r0x103F
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1424     	MOVAR	r0x103F
     0097 01rr                      1- 1425     	MOVR	STK00,W
                                    1- 1426     	BANKSEL	r0x103E
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 1427     	MOVAR	r0x103E
     009A 210A                      1- 1428     	MOVIA	0x0a
     009B 03rr                      1- 1429     	ADDAR	r0x103E,W
                                    1- 1430     	BANKSEL	r0x103C
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 1431     	MOVAR	r0x103C
                                    1- 1432     	BANKSEL	r0x103D
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 02rr                      1- 1433     	CLRR	r0x103D
     00A0 14rr                      1- 1434     	RLR	r0x103D,F
                                    1- 1435     	BANKSEL	r0x103F
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1- 1436     	MOVR	r0x103F,W
                                    1- 1437     	BANKSEL	r0x103D
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 03rr                      1- 1438     	ADDAR	r0x103D,F
                                    1- 1439     	MGOTO	_00370_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1440     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1441     ;;unsigned compare: left >= lit (0x227=551), size=2
     00A6                           1- 1442     _00366_DS_:
                                    1- 1443     	.line	692, "main.c"; 	else if(R_Quarter_VDD_DATA > 550)
     00A6 2102                      1- 1444     	MOVIA	0x02
                                    1- 1445     	BANKSEL	_R_Quarter_VDD_DATA
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 04rr                      1- 1446     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00A9 0903                      1- 1447     	BTRSS	STATUS,2
                                    1- 1448     	MGOTO	_00461_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
     00AB 2127                      1- 1449     	MOVIA	0x27
     00AC 04rr                      1- 1450     	SUBAR	_R_Quarter_VDD_DATA,W
     00AD                           1- 1451     _00461_DS_:
     00AD 0803                      1- 1452     	BTRSS	STATUS,0
                                    1- 1453     	MGOTO	_00363_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1454     	.line	694, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 550)/8;
     00AF 21DA                      1- 1455     	MOVIA	0xda
                                    1- 1456     	BANKSEL	_R_Quarter_VDD_DATA
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 03rr                      1- 1457     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1458     	BANKSEL	r0x103E
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1459     	MOVAR	r0x103E
     00B4 21FD                      1- 1460     	MOVIA	0xfd
                                    1- 1461     	BANKSEL	r0x103F
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 1462     	MOVAR	r0x103F
                                    1- 1463     	BANKSEL	_R_Quarter_VDD_DATA
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 01rr                      1- 1464     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00B9 0C03                      1- 1465     	BTRSC	STATUS,0
     00BA 05rr                      1- 1466     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00BB 0D03                      1- 1467     	BTRSC	STATUS,2
                                    1- 1468     	MGOTO	_00005_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1469     	BANKSEL	r0x103F
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 03rr                      1- 1470     	ADDAR	r0x103F,F
                                    1- 1471     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00BF                           1- 1472     _00005_DS_:
     00BF 1C03                      1- 1473     	BCR	STATUS,0
                                    1- 1474     	BANKSEL	r0x103F
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 13rr                      1- 1475     	RRR	r0x103F,W
                                    1- 1476     	BANKSEL	r0x103D
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 1477     	MOVAR	r0x103D
                                    1- 1478     	BANKSEL	r0x103E
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 13rr                      1- 1479     	RRR	r0x103E,W
                                    1- 1480     	BANKSEL	r0x103C
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 00rr                      1- 1481     	MOVAR	r0x103C
                                    1- 1482     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C8 1C03                      1- 1483     	BCR	STATUS,0
                                    1- 1484     	BANKSEL	r0x103D
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 13rr                      1- 1485     	RRR	r0x103D,F
                                    1- 1486     	BANKSEL	r0x103C
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 13rr                      1- 1487     	RRR	r0x103C,F
                                    1- 1488     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00CD 1C03                      1- 1489     	BCR	STATUS,0
                                    1- 1490     	BANKSEL	r0x103D
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 13rr                      1- 1491     	RRR	r0x103D,F
                                    1- 1492     	BANKSEL	r0x103C
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 13rr                      1- 1493     	RRR	r0x103C,F
                                    1- 1494     	MGOTO	_00370_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
     00D3                           1- 1495     _00363_DS_:
                                    1- 1496     	.line	698, "main.c"; 	tempValue = 0;
                                    1- 1497     	BANKSEL	r0x103C
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 02rr                      1- 1498     	CLRR	r0x103C
                                    1- 1499     	BANKSEL	r0x103D
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 02rr                      1- 1500     	CLRR	r0x103D
     00D7                           1- 1501     _00370_DS_:
                                    1- 1502     	.line	700, "main.c"; 	if(0x20 & PORTA)
                                    1- 1503     	BANKSEL	_PORTA
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 0Arr                      1- 1504     	BTRSS	_PORTA,5
                                    1- 1505     	MGOTO	_00395_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1506     ;;unsigned compare: left < lit (0xA=10), size=2
                                    1- 1507     	.line	704, "main.c"; 	if(tempValue < 10)
     00DA 2100                      1- 1508     	MOVIA	0x00
                                    1- 1509     	BANKSEL	r0x103D
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 04rr                      1- 1510     	SUBAR	r0x103D,W
     00DD 0903                      1- 1511     	BTRSS	STATUS,2
                                    1- 1512     	MGOTO	_00462_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
     00DF 210A                      1- 1513     	MOVIA	0x0a
                                    1- 1514     	BANKSEL	r0x103C
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 04rr                      1- 1515     	SUBAR	r0x103C,W
     00E2                           1- 1516     _00462_DS_:
     00E2 0C03                      1- 1517     	BTRSC	STATUS,0
                                    1- 1518     	MGOTO	_00377_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1519     	.line	706, "main.c"; 	tempValue = 1;
     00E4 2101                      1- 1520     	MOVIA	0x01
                                    1- 1521     	BANKSEL	r0x103C
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 1522     	MOVAR	r0x103C
                                    1- 1523     	BANKSEL	r0x103D
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 02rr                      1- 1524     	CLRR	r0x103D
                                    1- 1525     	MGOTO	_00007_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1526     ;;unsigned compare: left < lit (0x14=20), size=2
     00EA                           1- 1527     _00377_DS_:
                                    1- 1528     	.line	708, "main.c"; 	else if(tempValue < 20)
     00EA 2100                      1- 1529     	MOVIA	0x00
                                    1- 1530     	BANKSEL	r0x103D
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 04rr                      1- 1531     	SUBAR	r0x103D,W
     00ED 0903                      1- 1532     	BTRSS	STATUS,2
                                    1- 1533     	MGOTO	_00463_DS_
     00EE 3rrr                      3-   63 m1      LGOTO rom_address
     00EF 2114                      1- 1534     	MOVIA	0x14
                                    1- 1535     	BANKSEL	r0x103C
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 04rr                      1- 1536     	SUBAR	r0x103C,W
     00F2                           1- 1537     _00463_DS_:
     00F2 0C03                      1- 1538     	BTRSC	STATUS,0
                                    1- 1539     	MGOTO	_00374_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1540     	.line	710, "main.c"; 	tempValue = tempValue - 10;
     00F4 21F6                      1- 1541     	MOVIA	0xf6
                                    1- 1542     	BANKSEL	r0x103C
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 03rr                      1- 1543     	ADDAR	r0x103C,F
     00F7 0C03                      1- 1544     	BTRSC	STATUS,0
                                    1- 1545     	MGOTO	_00006_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1546     	BANKSEL	r0x103D
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 06rr                      1- 1547     	DECR	r0x103D,F
     00FB                           1- 1548     _00006_DS_:
                                    1- 1549     	MGOTO	_00007_DS_
     00FB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1550     ;;unsigned compare: left < lit (0x78=120), size=2
     00FC                           1- 1551     _00374_DS_:
                                    1- 1552     	.line	712, "main.c"; 	else if(tempValue < 120)
     00FC 2100                      1- 1553     	MOVIA	0x00
                                    1- 1554     	BANKSEL	r0x103D
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 04rr                      1- 1555     	SUBAR	r0x103D,W
     00FF 0903                      1- 1556     	BTRSS	STATUS,2
                                    1- 1557     	MGOTO	_00464_DS_
     0100 3rrr                      3-   63 m1      LGOTO rom_address
     0101 2178                      1- 1558     	MOVIA	0x78
                                    1- 1559     	BANKSEL	r0x103C
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 04rr                      1- 1560     	SUBAR	r0x103C,W
     0104                           1- 1561     _00464_DS_:
     0104 0C03                      1- 1562     	BTRSC	STATUS,0
                                    1- 1563     	MGOTO	_00007_DS_
     0105 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1564     	.line	714, "main.c"; 	tempValue = tempValue - 20;
     0106 21EC                      1- 1565     	MOVIA	0xec
                                    1- 1566     	BANKSEL	r0x103C
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 03rr                      1- 1567     	ADDAR	r0x103C,F
     0109 0C03                      1- 1568     	BTRSC	STATUS,0
                                    1- 1569     	MGOTO	_00007_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1570     	BANKSEL	r0x103D
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 06rr                      1- 1571     	DECR	r0x103D,F
                                    1- 1572     ;;unsigned compare: left < lit (0x64=100), size=2
     010D                           1- 1573     _00007_DS_:
                                    1- 1574     	.line	716, "main.c"; 	if(tempValue >= 100)
     010D 2100                      1- 1575     	MOVIA	0x00
                                    1- 1576     	BANKSEL	r0x103D
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 04rr                      1- 1577     	SUBAR	r0x103D,W
     0110 0903                      1- 1578     	BTRSS	STATUS,2
                                    1- 1579     	MGOTO	_00465_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
     0112 2164                      1- 1580     	MOVIA	0x64
                                    1- 1581     	BANKSEL	r0x103C
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 04rr                      1- 1582     	SUBAR	r0x103C,W
     0115                           1- 1583     _00465_DS_:
     0115 0803                      1- 1584     	BTRSS	STATUS,0
                                    1- 1585     	MGOTO	_00380_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1586     	.line	718, "main.c"; 	tempValue = 100;
     0117 2164                      1- 1587     	MOVIA	0x64
                                    1- 1588     	BANKSEL	r0x103C
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 00rr                      1- 1589     	MOVAR	r0x103C
                                    1- 1590     	BANKSEL	r0x103D
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 02rr                      1- 1591     	CLRR	r0x103D
     011C                           1- 1592     _00380_DS_:
                                    1- 1593     	.line	721, "main.c"; 	if(pwStep < tempValue)
                                    1- 1594     	BANKSEL	_pwStep
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 01rr                      1- 1595     	MOVR	_pwStep,W
                                    1- 1596     	BANKSEL	r0x103E
     011E rrrr                      3-  110 m1      .banksel ram_address
     011F 00rr                      1- 1597     	MOVAR	r0x103E
                                    1- 1598     	BANKSEL	r0x103F
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 02rr                      1- 1599     	CLRR	r0x103F
                                    1- 1600     	BANKSEL	r0x103D
     0122 rrrr                      3-  110 m1      .banksel ram_address
     0123 01rr                      1- 1601     	MOVR	r0x103D,W
                                    1- 1602     	BANKSEL	r0x103F
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 04rr                      1- 1603     	SUBAR	r0x103F,W
     0126 0903                      1- 1604     	BTRSS	STATUS,2
                                    1- 1605     	MGOTO	_00466_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1606     	BANKSEL	r0x103C
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 01rr                      1- 1607     	MOVR	r0x103C,W
                                    1- 1608     	BANKSEL	r0x103E
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 04rr                      1- 1609     	SUBAR	r0x103E,W
     012C                           1- 1610     _00466_DS_:
     012C 0C03                      1- 1611     	BTRSC	STATUS,0
                                    1- 1612     	MGOTO	_00403_DS_
     012D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1613     	.line	723, "main.c"; 	if(++count5s > 500)
                                    1- 1614     	BANKSEL	_count5s
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 05rr                      1- 1615     	INCR	_count5s,F
     0130 0D03                      1- 1616     	BTRSC	STATUS,2
     0131 05rr                      1- 1617     	INCR	(_count5s + 1),F
                                    1- 1618     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1619     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0132 2101                      1- 1620     	MOVIA	0x01
     0133 04rr                      1- 1621     	SUBAR	(_count5s + 1),W
     0134 0903                      1- 1622     	BTRSS	STATUS,2
                                    1- 1623     	MGOTO	_00467_DS_
     0135 3rrr                      3-   63 m1      LGOTO rom_address
     0136 21F5                      1- 1624     	MOVIA	0xf5
     0137 04rr                      1- 1625     	SUBAR	_count5s,W
     0138                           1- 1626     _00467_DS_:
     0138 0803                      1- 1627     	BTRSS	STATUS,0
                                    1- 1628     	MGOTO	_00403_DS_
     0139 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1629     	.line	725, "main.c"; 	count5s = 0;
                                    1- 1630     	BANKSEL	_count5s
     013A rrrr                      3-  110 m1      .banksel ram_address
     013B 02rr                      1- 1631     	CLRR	_count5s
     013C 02rr                      1- 1632     	CLRR	(_count5s + 1)
                                    1- 1633     	.line	726, "main.c"; 	pwStep++;
                                    1- 1634     	BANKSEL	_pwStep
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 05rr                      1- 1635     	INCR	_pwStep,F
                                    1- 1636     	MGOTO	_00403_DS_
     013F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1637     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1638     ;;unsigned compare: left >= lit (0x64=100), size=2
     0140                           1- 1639     _00395_DS_:
                                    1- 1640     	.line	734, "main.c"; 	if(tempValue > 99)
     0140 2100                      1- 1641     	MOVIA	0x00
                                    1- 1642     	BANKSEL	r0x103D
     0141 rrrr                      3-  110 m1      .banksel ram_address
     0142 04rr                      1- 1643     	SUBAR	r0x103D,W
     0143 0903                      1- 1644     	BTRSS	STATUS,2
                                    1- 1645     	MGOTO	_00468_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
     0145 2164                      1- 1646     	MOVIA	0x64
                                    1- 1647     	BANKSEL	r0x103C
     0146 rrrr                      3-  110 m1      .banksel ram_address
     0147 04rr                      1- 1648     	SUBAR	r0x103C,W
     0148                           1- 1649     _00468_DS_:
     0148 0803                      1- 1650     	BTRSS	STATUS,0
                                    1- 1651     	MGOTO	_00386_DS_
     0149 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1652     	.line	735, "main.c"; 	tempValue = 99;
     014A 2163                      1- 1653     	MOVIA	0x63
                                    1- 1654     	BANKSEL	r0x103C
     014B rrrr                      3-  110 m1      .banksel ram_address
     014C 00rr                      1- 1655     	MOVAR	r0x103C
                                    1- 1656     	BANKSEL	r0x103D
     014D rrrr                      3-  110 m1      .banksel ram_address
     014E 02rr                      1- 1657     	CLRR	r0x103D
     014F                           1- 1658     _00386_DS_:
                                    1- 1659     	.line	736, "main.c"; 	if(pwStep == 0 || pwFlag == 0)
                                    1- 1660     	BANKSEL	_pwStep
     014F rrrr                      3-  110 m1      .banksel ram_address
     0150 01rr                      1- 1661     	MOVR	_pwStep,W
     0151 0D03                      1- 1662     	BTRSC	STATUS,2
                                    1- 1663     	MGOTO	_00387_DS_
     0152 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1664     	BANKSEL	_pwFlag
     0153 rrrr                      3-  110 m1      .banksel ram_address
     0154 01rr                      1- 1665     	MOVR	_pwFlag,W
     0155 0903                      1- 1666     	BTRSS	STATUS,2
                                    1- 1667     	MGOTO	_00388_DS_
     0156 3rrr                      3-   63 m1      LGOTO rom_address
     0157                           1- 1668     _00387_DS_:
                                    1- 1669     	.line	738, "main.c"; 	pwStep = tempValue;
                                    1- 1670     	BANKSEL	r0x103C
     0157 rrrr                      3-  110 m1      .banksel ram_address
     0158 01rr                      1- 1671     	MOVR	r0x103C,W
                                    1- 1672     	BANKSEL	_pwStep
     0159 rrrr                      3-  110 m1      .banksel ram_address
     015A 00rr                      1- 1673     	MOVAR	_pwStep
     015B                           1- 1674     _00388_DS_:
                                    1- 1675     	.line	740, "main.c"; 	if(pwStep > tempValue)
                                    1- 1676     	BANKSEL	_pwStep
     015B rrrr                      3-  110 m1      .banksel ram_address
     015C 01rr                      1- 1677     	MOVR	_pwStep,W
                                    1- 1678     	BANKSEL	r0x103E
     015D rrrr                      3-  110 m1      .banksel ram_address
     015E 00rr                      1- 1679     	MOVAR	r0x103E
                                    1- 1680     	BANKSEL	r0x103F
     015F rrrr                      3-  110 m1      .banksel ram_address
     0160 02rr                      1- 1681     	CLRR	r0x103F
     0161 2100                      1- 1682     	MOVIA	0x00
                                    1- 1683     	BANKSEL	r0x103D
     0162 rrrr                      3-  110 m1      .banksel ram_address
     0163 04rr                      1- 1684     	SUBAR	r0x103D,W
     0164 0903                      1- 1685     	BTRSS	STATUS,2
                                    1- 1686     	MGOTO	_00469_DS_
     0165 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1687     	BANKSEL	r0x103E
     0166 rrrr                      3-  110 m1      .banksel ram_address
     0167 01rr                      1- 1688     	MOVR	r0x103E,W
                                    1- 1689     	BANKSEL	r0x103C
     0168 rrrr                      3-  110 m1      .banksel ram_address
     0169 04rr                      1- 1690     	SUBAR	r0x103C,W
     016A                           1- 1691     _00469_DS_:
     016A 0C03                      1- 1692     	BTRSC	STATUS,0
                                    1- 1693     	MGOTO	_00403_DS_
     016B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1694     	.line	742, "main.c"; 	if(++count5s > 500)
                                    1- 1695     	BANKSEL	_count5s
     016C rrrr                      3-  110 m1      .banksel ram_address
     016D 05rr                      1- 1696     	INCR	_count5s,F
     016E 0D03                      1- 1697     	BTRSC	STATUS,2
     016F 05rr                      1- 1698     	INCR	(_count5s + 1),F
                                    1- 1699     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1700     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0170 2101                      1- 1701     	MOVIA	0x01
     0171 04rr                      1- 1702     	SUBAR	(_count5s + 1),W
     0172 0903                      1- 1703     	BTRSS	STATUS,2
                                    1- 1704     	MGOTO	_00470_DS_
     0173 3rrr                      3-   63 m1      LGOTO rom_address
     0174 21F5                      1- 1705     	MOVIA	0xf5
     0175 04rr                      1- 1706     	SUBAR	_count5s,W
     0176                           1- 1707     _00470_DS_:
     0176 0803                      1- 1708     	BTRSS	STATUS,0
                                    1- 1709     	MGOTO	_00403_DS_
     0177 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1710     	.line	744, "main.c"; 	count5s = 0;
                                    1- 1711     	BANKSEL	_count5s
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 02rr                      1- 1712     	CLRR	_count5s
     017A 02rr                      1- 1713     	CLRR	(_count5s + 1)
                                    1- 1714     	.line	745, "main.c"; 	pwStep--;
                                    1- 1715     	BANKSEL	_pwStep
     017B rrrr                      3-  110 m1      .banksel ram_address
     017C 06rr                      1- 1716     	DECR	_pwStep,F
     017D                           1- 1717     _00403_DS_:
                                    1- 1718     	.line	751, "main.c"; 	}
                                    1- 1719     	RETURN	
     017D 0010                      3-   40 m1      ret
                                    1- 1720     ; exit point of _checkBat
                                    1- 1722     ;***
                                    1- 1723     ;  pBlock Stats: dbName = C
                                    1- 1724     ;***
                                    1- 1725     ;has an exit
                                    1- 1726     ;functions called:
                                    1- 1727     ;   _delay
                                    1- 1728     ;   _delay
                                    1- 1729     ;; Starting pCode block
                                    1- 1730     .segment "code"; module=main, function=_initAD
     0000                           1- 1732     _initAD:
                                    1- 1733     ; 2 exit points
                                    1- 1734     	.line	633, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1735     	MOVIA	0x80
     0001 00rr                      1- 1736     	MOVAR	_ADMD
                                    1- 1737     	.line	638, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1738     	CLRR	_ADVREFH
                                    1- 1739     	.line	643, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1740     	MOVIA	0x10
     0004 00rr                      1- 1741     	MOVAR	_ADR
                                    1- 1742     	.line	647, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1743     	MOVIA	0x03
     0006 00rr                      1- 1744     	MOVAR	_ADCR
                                    1- 1745     	.line	654, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1746     	BSR	_ADMDbits,4
                                    1- 1747     	.line	655, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1748     	MOVIA	0x32
                                    1- 1749     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1750     	.line	656, "main.c"; 	}
                                    1- 1751     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1752     ; exit point of _initAD
                                    1- 1754     ;***
                                    1- 1755     ;  pBlock Stats: dbName = C
                                    1- 1756     ;***
                                    1- 1757     ;has an exit
                                    1- 1758     ;functions called:
                                    1- 1759     ;   _keyRead
                                    1- 1760     ;   _keyRead
                                    1- 1761     ;1 compiler assigned register :
                                    1- 1762     ;   r0x1041
                                    1- 1763     ;; Starting pCode block
                                    1- 1764     .segment "code"; module=main, function=_keyCtr
                                    1- 1766     ;local variable name mapping:
     0000                           1- 1768     _keyCtr:
                                    1- 1769     ; 2 exit points
                                    1- 1770     	.line	586, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1771     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1772     	COMR	_PORTA,W
                                    1- 1773     	BANKSEL	r0x1041
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1774     	MOVAR	r0x1041
     0004 2180                      1- 1775     	MOVIA	0x80
     0005 10rr                      1- 1776     	ANDAR	r0x1041,F
     0006 01rr                      1- 1777     	MOVR	r0x1041,W
                                    1- 1778     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1779     	BANKSEL	r0x1041
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1780     	MOVAR	r0x1041
                                    1- 1781     	.line	587, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1782     	XORIA	0x01
     000B 0903                      1- 1783     	BTRSS	STATUS,2
                                    1- 1784     	MGOTO	_00349_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1785     	.line	589, "main.c"; 	if(pwFlag)
                                    1- 1786     	BANKSEL	_pwFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1787     	MOVR	_pwFlag,W
     000F 0D03                      1- 1788     	BTRSC	STATUS,2
                                    1- 1789     	MGOTO	_00351_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1790     	.line	591, "main.c"; 	if(showFlag == 0)
                                    1- 1791     	BANKSEL	_showFlag
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 1792     	MOVR	_showFlag,W
     0013 0903                      1- 1793     	BTRSS	STATUS,2
                                    1- 1794     	MGOTO	_00337_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1795     	.line	594, "main.c"; 	pwShowTime = 3;
     0015 2103                      1- 1796     	MOVIA	0x03
                                    1- 1797     	BANKSEL	_pwShowTime
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1798     	MOVAR	_pwShowTime
                                    1- 1799     	.line	595, "main.c"; 	offShowTime = 0;
                                    1- 1800     	BANKSEL	_offShowTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1801     	CLRR	_offShowTime
                                    1- 1802     	MGOTO	_00351_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1- 1803     _00337_DS_:
                                    1- 1804     	.line	599, "main.c"; 	pwShowTime = 0;
                                    1- 1805     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 1806     	CLRR	_pwShowTime
                                    1- 1807     	.line	600, "main.c"; 	if(++workStep > 3)
                                    1- 1808     	BANKSEL	_workStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 05rr                      1- 1809     	INCR	_workStep,F
                                    1- 1810     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1811     ;;unsigned compare: left >= lit (0x4=4), size=1
     001F 2104                      1- 1812     	MOVIA	0x04
     0020 04rr                      1- 1813     	SUBAR	_workStep,W
     0021 0803                      1- 1814     	BTRSS	STATUS,0
                                    1- 1815     	MGOTO	_00335_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1816     	.line	601, "main.c"; 	workStep = 1;
     0023 2101                      1- 1817     	MOVIA	0x01
     0024 00rr                      1- 1818     	MOVAR	_workStep
     0025                           1- 1819     _00335_DS_:
                                    1- 1820     	.line	602, "main.c"; 	stepShowTime = 2;
     0025 2102                      1- 1821     	MOVIA	0x02
                                    1- 1822     	BANKSEL	_stepShowTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 1823     	MOVAR	_stepShowTime
                                    1- 1824     	.line	603, "main.c"; 	offShowTime = 0;
                                    1- 1825     	BANKSEL	_offShowTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 1826     	CLRR	_offShowTime
                                    1- 1827     	MGOTO	_00351_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 1828     _00349_DS_:
                                    1- 1829     	.line	607, "main.c"; 	else if(kclick == 2)
                                    1- 1830     	BANKSEL	r0x1041
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 1831     	MOVR	r0x1041,W
     002D 2402                      1- 1832     	XORIA	0x02
     002E 0903                      1- 1833     	BTRSS	STATUS,2
                                    1- 1834     	MGOTO	_00351_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1835     	.line	609, "main.c"; 	if(pwFlag)
                                    1- 1836     	BANKSEL	_pwFlag
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1837     	MOVR	_pwFlag,W
     0032 0D03                      1- 1838     	BTRSC	STATUS,2
                                    1- 1839     	MGOTO	_00344_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1840     	.line	611, "main.c"; 	pwFlag = 0;		//关机
     0034 02rr                      1- 1841     	CLRR	_pwFlag
                                    1- 1842     	.line	612, "main.c"; 	workStep = 0;
                                    1- 1843     	BANKSEL	_workStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 1844     	CLRR	_workStep
                                    1- 1845     	.line	613, "main.c"; 	pwShowTime = 0;
                                    1- 1846     	BANKSEL	_pwShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1- 1847     	CLRR	_pwShowTime
                                    1- 1848     	.line	614, "main.c"; 	stepShowTime = 0;
                                    1- 1849     	BANKSEL	_stepShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1850     	CLRR	_stepShowTime
                                    1- 1851     	.line	615, "main.c"; 	offShowTime = 5;
     003B 2105                      1- 1852     	MOVIA	0x05
                                    1- 1853     	BANKSEL	_offShowTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1854     	MOVAR	_offShowTime
                                    1- 1855     	MGOTO	_00351_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 1856     _00344_DS_:
                                    1- 1857     	.line	619, "main.c"; 	pwFlag = 1;		//开机
     003F 2101                      1- 1858     	MOVIA	0x01
                                    1- 1859     	BANKSEL	_pwFlag
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 1860     	MOVAR	_pwFlag
                                    1- 1861     	.line	620, "main.c"; 	pwShowTime = 3;
     0042 2103                      1- 1862     	MOVIA	0x03
                                    1- 1863     	BANKSEL	_pwShowTime
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1864     	MOVAR	_pwShowTime
                                    1- 1865     	.line	621, "main.c"; 	stepShowTime = 2;
     0045 2102                      1- 1866     	MOVIA	0x02
                                    1- 1867     	BANKSEL	_stepShowTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1868     	MOVAR	_stepShowTime
                                    1- 1869     	.line	622, "main.c"; 	offShowTime = 0;
                                    1- 1870     	BANKSEL	_offShowTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1871     	CLRR	_offShowTime
                                    1- 1872     	.line	623, "main.c"; 	if(workStep == 0)
                                    1- 1873     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 1874     	MOVR	_workStep,W
     004C 0903                      1- 1875     	BTRSS	STATUS,2
                                    1- 1876     	MGOTO	_00351_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1877     	.line	624, "main.c"; 	workStep = 1;
     004E 2101                      1- 1878     	MOVIA	0x01
     004F 00rr                      1- 1879     	MOVAR	_workStep
     0050                           1- 1880     _00351_DS_:
                                    1- 1881     	.line	627, "main.c"; 	}
                                    1- 1882     	RETURN	
     0050 0010                      3-   40 m1      ret
                                    1- 1883     ; exit point of _keyCtr
                                    1- 1885     ;***
                                    1- 1886     ;  pBlock Stats: dbName = C
                                    1- 1887     ;***
                                    1- 1888     ;has an exit
                                    1- 1889     ;1 compiler assigned register :
                                    1- 1890     ;   r0x1040
                                    1- 1891     ;; Starting pCode block
                                    1- 1892     .segment "code"; module=main, function=_keyRead
                                    1- 1894     ;local variable name mapping:
     0000                           1- 1896     _keyRead:
                                    1- 1897     ; 2 exit points
                                    1- 1898     	.line	551, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1899     	BANKSEL	r0x1040
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1900     	MOVAR	r0x1040
                                    1- 1901     	.line	553, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1902     	MOVR	r0x1040,W
     0003 0D03                      1- 1903     	BTRSC	STATUS,2
                                    1- 1904     	MGOTO	_00327_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1905     	.line	555, "main.c"; 	keyCount++;
                                    1- 1906     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1907     	INCR	_keyCount,F
                                    1- 1908     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1909     	.line	556, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1910     	MOVIA	0xc8
     0008 04rr                      1- 1911     	SUBAR	_keyCount,W
     0009 0803                      1- 1912     	BTRSS	STATUS,0
                                    1- 1913     	MGOTO	_00328_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1914     	.line	558, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1915     	MOVIA	0xc8
     000C 00rr                      1- 1916     	MOVAR	_keyCount
                                    1- 1917     	.line	559, "main.c"; 	if(!longPressFlag)
                                    1- 1918     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1919     	MOVR	_longPressFlag,W
     000F 0903                      1- 1920     	BTRSS	STATUS,2
                                    1- 1921     	MGOTO	_00328_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1922     	.line	561, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 1923     	MOVIA	0x01
     0012 00rr                      1- 1924     	MOVAR	_longPressFlag
                                    1- 1925     	.line	562, "main.c"; 	return 2;
     0013 2102                      1- 1926     	MOVIA	0x02
                                    1- 1927     	MGOTO	_00329_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1928     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 1929     _00327_DS_:
                                    1- 1930     	.line	568, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 1931     	MOVIA	0xc8
                                    1- 1932     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 1933     	SUBAR	_keyCount,W
     0018 0803                      1- 1934     	BTRSS	STATUS,0
                                    1- 1935     	MGOTO	_00324_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1936     	.line	570, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 1937     	CLRR	_keyCount
                                    1- 1938     	.line	571, "main.c"; 	longPressFlag = 0;
                                    1- 1939     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 1940     	CLRR	_longPressFlag
                                    1- 1941     	.line	572, "main.c"; 	return	0;
     001D 2100                      1- 1942     	MOVIA	0x00
                                    1- 1943     	MGOTO	_00329_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1944     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 1945     _00324_DS_:
                                    1- 1946     	.line	574, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 1947     	MOVIA	0x04
                                    1- 1948     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 1949     	SUBAR	_keyCount,W
     0022 0803                      1- 1950     	BTRSS	STATUS,0
                                    1- 1951     	MGOTO	_00325_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1952     	.line	576, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 1953     	CLRR	_keyCount
                                    1- 1954     	.line	577, "main.c"; 	return	1;
     0025 2101                      1- 1955     	MOVIA	0x01
                                    1- 1956     	MGOTO	_00329_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 1957     _00325_DS_:
                                    1- 1958     	.line	579, "main.c"; 	keyCount = 0;
                                    1- 1959     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 1960     	CLRR	_keyCount
     0029                           1- 1961     _00328_DS_:
                                    1- 1962     	.line	581, "main.c"; 	return 0;
     0029 2100                      1- 1963     	MOVIA	0x00
     002A                           1- 1964     _00329_DS_:
                                    1- 1965     	.line	582, "main.c"; 	}
                                    1- 1966     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 1967     ; exit point of _keyRead
                                    1- 1969     ;***
                                    1- 1970     ;  pBlock Stats: dbName = C
                                    1- 1971     ;***
                                    1- 1972     ;has an exit
                                    1- 1973     ;; Starting pCode block
                                    1- 1974     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1976     _pwmStop:
                                    1- 1977     ; 2 exit points
                                    1- 1978     	.line	545, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1979     	CLRA	
     0001 00rr                      1- 1980     	SFUN	_T2CR1
                                    1- 1981     	.line	546, "main.c"; 	}
                                    1- 1982     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1983     ; exit point of _pwmStop
                                    1- 1985     ;***
                                    1- 1986     ;  pBlock Stats: dbName = C
                                    1- 1987     ;***
                                    1- 1988     ;has an exit
                                    1- 1989     ;1 compiler assigned register :
                                    1- 1990     ;   r0x1042
                                    1- 1991     ;; Starting pCode block
                                    1- 1992     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1994     _pwmInit:
                                    1- 1995     ; 2 exit points
                                    1- 1996     	.line	533, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1997     	SFUNR	_T2CR1
                                    1- 1998     	BANKSEL	r0x1042
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1999     	MOVAR	r0x1042
     0003 0Frr                      1- 2000     	BTRSC	r0x1042,7
                                    1- 2001     	.line	534, "main.c"; 	return;
                                    1- 2002     	MGOTO	_00308_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2003     	.line	535, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2004     	CLRR	_TMRH
                                    1- 2005     	.line	536, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2006     	MOVIA	0x64
     0007 00rr                      1- 2007     	SFUN	_TMR2
                                    1- 2008     	.line	537, "main.c"; 	PWM2DUTY = 100;				// 		
     0008 00rr                      1- 2009     	SFUN	_PWM2DUTY
                                    1- 2010     	.line	539, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2101                      1- 2011     	MOVIA	0x01
     000A 00rr                      1- 2012     	SFUN	_T2CR2
                                    1- 2013     	.line	540, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 2014     	MOVIA	0x83
     000C 00rr                      1- 2015     	SFUN	_T2CR1
     000D                           1- 2016     _00308_DS_:
                                    1- 2017     	.line	541, "main.c"; 	}
                                    1- 2018     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 2019     ; exit point of _pwmInit
                                    1- 2021     ;***
                                    1- 2022     ;  pBlock Stats: dbName = C
                                    1- 2023     ;***
                                    1- 2024     ;has an exit
                                    1- 2025     ;functions called:
                                    1- 2026     ;   _setInput
                                    1- 2027     ;   _pwmStop
                                    1- 2028     ;   _setInput
                                    1- 2029     ;   _pwmStop
                                    1- 2030     ;; Starting pCode block
                                    1- 2031     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2033     _gotoSleep:
                                    1- 2034     ; 2 exit points
                                    1- 2035     	.line	500, "main.c"; 	sleepFlag = 0;
                                    1- 2036     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2037     	CLRR	_sleepFlag
                                    1- 2038     	.line	501, "main.c"; 	waitTime = 0;
                                    1- 2039     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2040     	CLRR	_waitTime
     0004 02rr                      1- 2041     	CLRR	(_waitTime + 1)
                                    1- 2042     	.line	502, "main.c"; 	setInput();
                                    1- 2043     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2044     	.line	503, "main.c"; 	sleepTime = 0;
                                    1- 2045     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2046     	CLRR	_sleepTime
                                    1- 2047     	.line	504, "main.c"; 	pwFlag = 0;
                                    1- 2048     	BANKSEL	_pwFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2049     	CLRR	_pwFlag
                                    1- 2050     	.line	505, "main.c"; 	pwmStop();
                                    1- 2051     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2052     	.line	506, "main.c"; 	AWUCON = 0xA0;
     000B 21A0                      1- 2053     	MOVIA	0xa0
     000C 00rr                      1- 2054     	MOVAR	_AWUCON
                                    1- 2055     	.line	508, "main.c"; 	IOSTB = C_PB3_Input | C_PB1_Input;
     000D 210A                      1- 2056     	MOVIA	0x0a
     000E 000r                      1- 2057     	IOST	_IOSTB
                                    1- 2058     	.line	509, "main.c"; 	PORTA = 0X00;
                                    1- 2059     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2060     	CLRR	_PORTA
                                    1- 2061     	.line	510, "main.c"; 	PORTB = 0X00;
     0011 02rr                      1- 2062     	CLRR	_PORTB
                                    1- 2063     	.line	511, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2064     	MOVIA	0x02
     0013 00rr                      1- 2065     	MOVAR	_INTE
                                    1- 2066     	.line	512, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2067     	MOVIA	0x18
     0015 00rr                      1- 2068     	MOVAR	_PCON
                                    1- 2069     	.line	513, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2070     	CLRR	_INTF
                                    1- 2071     	.line	514, "main.c"; 	CLRWDT();
     0017 0002                      1- 2072     	clrwdt
                                    1- 2073     	.line	515, "main.c"; 	ENI();
     0018 0004                      1- 2074     	ENI
                                    1- 2075     	.line	516, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2076     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1- 2077     	BTRSC	_PORTA,5
                                    1- 2078     	MGOTO	_00301_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2079     	.line	517, "main.c"; 	SLEEP();
     001C 0001                      1- 2080     	sleep
     001D                           1- 2081     _00301_DS_:
                                    1- 2082     	.line	518, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2083     	CLRR	_AWUCON
                                    1- 2084     	.line	519, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001E 21A0                      1- 2085     	MOVIA	0xa0
     001F 000r                      1- 2086     	IOST	_IOSTA
                                    1- 2087     	.line	520, "main.c"; 	IOSTB = C_PB3_Input | C_PB1_Input;
     0020 210A                      1- 2088     	MOVIA	0x0a
     0021 000r                      1- 2089     	IOST	_IOSTB
                                    1- 2090     	.line	521, "main.c"; 	PORTA = 0x00;
                                    1- 2091     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2092     	CLRR	_PORTA
                                    1- 2093     	.line	522, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2103                      1- 2094     	MOVIA	0x03
     0025 00rr                      1- 2095     	MOVAR	_INTE
                                    1- 2096     	.line	523, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2097     	CLRR	_INTF
                                    1- 2098     	.line	525, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2099     	MOVIA	0xb8
     0028 00rr                      1- 2100     	MOVAR	_PCON
                                    1- 2101     	.line	528, "main.c"; 	}
                                    1- 2102     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2103     ; exit point of _gotoSleep
                                    1- 2105     ;***
                                    1- 2106     ;  pBlock Stats: dbName = C
                                    1- 2107     ;***
                                    1- 2108     ;has an exit
                                    1- 2109     ;functions called:
                                    1- 2110     ;   _setInput
                                    1- 2111     ;   _setInput
                                    1- 2112     ;; Starting pCode block
                                    1- 2113     .segment "code"; module=main, function=_initSys
     0000                           1- 2115     _initSys:
                                    1- 2116     ; 2 exit points
                                    1- 2117     	.line	468, "main.c"; 	DISI();
     0000 0013                      1- 2118     	DISI
                                    1- 2119     	.line	469, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 2120     	MOVIA	0xa0
     0002 000r                      1- 2121     	IOST	_IOSTA
                                    1- 2122     	.line	470, "main.c"; 	IOSTB = C_PB3_Input | C_PB1_Input;
     0003 210A                      1- 2123     	MOVIA	0x0a
     0004 000r                      1- 2124     	IOST	_IOSTB
                                    1- 2125     	.line	471, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2126     	CLRR	_PORTB
                                    1- 2127     	.line	472, "main.c"; 	PORTA = 0x00;
                                    1- 2128     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2129     	CLRR	_PORTA
                                    1- 2130     	.line	473, "main.c"; 	BWUCON = 0x08;
     0008 2108                      1- 2131     	MOVIA	0x08
     0009 00rr                      1- 2132     	MOVAR	_BWUCON
                                    1- 2133     	.line	474, "main.c"; 	setInput();
                                    1- 2134     	MCALL	_setInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2135     	.line	475, "main.c"; 	APHCON = 0x7F;
     000B 217F                      1- 2136     	MOVIA	0x7f
     000C 000r                      1- 2137     	IOST	_APHCON
                                    1- 2138     	.line	476, "main.c"; 	BPHCON = 0xF7;		//PB3上拉
     000D 21F7                      1- 2139     	MOVIA	0xf7
     000E 00rr                      1- 2140     	MOVAR	_BPHCON
                                    1- 2141     	.line	477, "main.c"; 	ABPLCON = 0xFF;
     000F 21FF                      1- 2142     	MOVIA	0xff
     0010 00rr                      1- 2143     	MOVAR	_ABPLCON
                                    1- 2144     	.line	479, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0011 2103                      1- 2145     	MOVIA	0x03
     0012 00rr                      1- 2146     	MOVAR	_INTE
                                    1- 2147     	.line	481, "main.c"; 	PCON1 = C_TMR0_Dis;
     0013 0200                      1- 2148     	CLRA	
     0014 000r                      1- 2149     	IOST	_PCON1
                                    1- 2150     	.line	483, "main.c"; 	TMR0 = 55;
     0015 2137                      1- 2151     	MOVIA	0x37
     0016 00rr                      1- 2152     	MOVAR	_TMR0
                                    1- 2153     	.line	484, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0017 0200                      1- 2154     	CLRA	
     0018 0003                      1- 2155     	T0MD	
                                    1- 2156     	.line	486, "main.c"; 	PCON1 = C_TMR0_En;
     0019 2101                      1- 2157     	MOVIA	0x01
     001A 000r                      1- 2158     	IOST	_PCON1
                                    1- 2159     	.line	489, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     001B 2198                      1- 2160     	MOVIA	0x98
     001C 00rr                      1- 2161     	MOVAR	_PCON
                                    1- 2162     	.line	492, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001D 2101                      1- 2163     	MOVIA	0x01
     001E 000r                      1- 2164     	IOST	_PCON1
                                    1- 2165     	.line	493, "main.c"; 	ENI();
     001F 0004                      1- 2166     	ENI
                                    1- 2167     	.line	494, "main.c"; 	}
                                    1- 2168     	RETURN	
     0020 0010                      3-   40 m1      ret
                                    1- 2169     ; exit point of _initSys
                                    1- 2171     ;***
                                    1- 2172     ;  pBlock Stats: dbName = C
                                    1- 2173     ;***
                                    1- 2174     ;has an exit
                                    1- 2175     ;functions called:
                                    1- 2176     ;   __gptrget1
                                    1- 2177     ;   _showNubBaiwei
                                    1- 2178     ;   __gptrget1
                                    1- 2179     ;   _showNubShiwei
                                    1- 2180     ;   __gptrget1
                                    1- 2181     ;   _showNubGewei
                                    1- 2182     ;   _setInput
                                    1- 2183     ;   __gptrget1
                                    1- 2184     ;   _showNubBaiwei
                                    1- 2185     ;   __gptrget1
                                    1- 2186     ;   _showNubShiwei
                                    1- 2187     ;   __gptrget1
                                    1- 2188     ;   _showNubGewei
                                    1- 2189     ;   _setInput
                                    1- 2190     ;5 compiler assigned registers:
                                    1- 2191     ;   r0x1043
                                    1- 2192     ;   r0x1044
                                    1- 2193     ;   STK01
                                    1- 2194     ;   STK00
                                    1- 2195     ;   r0x1045
                                    1- 2196     ;; Starting pCode block
                                    1- 2197     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2199     _refreshNub:
                                    1- 2200     ; 2 exit points
                                    1- 2201     	.line	459, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 2202     	BANKSEL	_baiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2203     	MOVR	_baiweiNum,W
     0002 25rr                      1- 2204     	ADDIA	(_numArray + 0)
                                    1- 2205     	BANKSEL	r0x1043
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2206     	MOVAR	r0x1043
     0005 21rr                      1- 2207     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 2208     	BTRSC	STATUS,0
     0007 2501                      1- 2209     	ADDIA	0x01
                                    1- 2210     	BANKSEL	r0x1044
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2211     	MOVAR	r0x1044
                                    1- 2212     	BANKSEL	r0x1043
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2213     	MOVR	r0x1043,W
     000C 00rr                      1- 2214     	MOVAR	STK01
                                    1- 2215     	BANKSEL	r0x1044
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2216     	MOVR	r0x1044,W
     000F 00rr                      1- 2217     	MOVAR	STK00
     0010 2100                      1- 2218     	MOVIA	0x00
                                    1- 2219     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2220     ;;103	MOVAR	r0x1045
                                    1- 2221     	MCALL	_showNubBaiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2222     	.line	460, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2223     	BANKSEL	_shiweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2224     	MOVR	_shiweiNum,W
     0015 25rr                      1- 2225     	ADDIA	(_numArray + 0)
                                    1- 2226     	BANKSEL	r0x1043
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2227     	MOVAR	r0x1043
     0018 21rr                      1- 2228     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 2229     	BTRSC	STATUS,0
     001A 2501                      1- 2230     	ADDIA	0x01
                                    1- 2231     	BANKSEL	r0x1044
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2232     	MOVAR	r0x1044
                                    1- 2233     	BANKSEL	r0x1043
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2234     	MOVR	r0x1043,W
     001F 00rr                      1- 2235     	MOVAR	STK01
                                    1- 2236     	BANKSEL	r0x1044
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2237     	MOVR	r0x1044,W
     0022 00rr                      1- 2238     	MOVAR	STK00
     0023 2100                      1- 2239     	MOVIA	0x00
                                    1- 2240     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2241     ;;102	MOVAR	r0x1045
                                    1- 2242     	MCALL	_showNubShiwei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2243     	.line	461, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2244     	BANKSEL	_geweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2245     	MOVR	_geweiNum,W
     0028 25rr                      1- 2246     	ADDIA	(_numArray + 0)
                                    1- 2247     	BANKSEL	r0x1043
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2248     	MOVAR	r0x1043
     002B 21rr                      1- 2249     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002C 0C03                      1- 2250     	BTRSC	STATUS,0
     002D 2501                      1- 2251     	ADDIA	0x01
                                    1- 2252     	BANKSEL	r0x1044
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2253     	MOVAR	r0x1044
                                    1- 2254     	BANKSEL	r0x1043
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2255     	MOVR	r0x1043,W
     0032 00rr                      1- 2256     	MOVAR	STK01
                                    1- 2257     	BANKSEL	r0x1044
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2258     	MOVR	r0x1044,W
     0035 00rr                      1- 2259     	MOVAR	STK00
     0036 2100                      1- 2260     	MOVIA	0x00
                                    1- 2261     	MCALL	__gptrget1
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2262     ;;2	MOVAR	r0x1045
                                    1- 2263     	MCALL	_showNubGewei
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2264     	.line	462, "main.c"; 	setInput();
                                    1- 2265     	MCALL	_setInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2266     	.line	463, "main.c"; 	}
                                    1- 2267     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 2268     ; exit point of _refreshNub
                                    1- 2270     ;***
                                    1- 2271     ;  pBlock Stats: dbName = C
                                    1- 2272     ;***
                                    1- 2273     ;has an exit
                                    1- 2274     ;functions called:
                                    1- 2275     ;   _delay
                                    1- 2276     ;   _delay
                                    1- 2277     ;; Starting pCode block
                                    1- 2278     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2280     _checkIRKey:
                                    1- 2281     ; 2 exit points
                                    1- 2282     	.line	411, "main.c"; 	if(pwFlag == 0)
                                    1- 2283     	BANKSEL	_pwFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2284     	MOVR	_pwFlag,W
     0002 0903                      1- 2285     	BTRSS	STATUS,2
                                    1- 2286     	MGOTO	_00275_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2287     	.line	413, "main.c"; 	irStep = 0;
                                    1- 2288     	BANKSEL	_irStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2289     	CLRR	_irStep
                                    1- 2290     	.line	414, "main.c"; 	return;
                                    1- 2291     	MGOTO	_00287_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
     0007                           1- 2292     _00275_DS_:
                                    1- 2293     	.line	416, "main.c"; 	delay(2);
     0007 2102                      1- 2294     	MOVIA	0x02
                                    1- 2295     	MCALL	_delay
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2296     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2297     ;;unsigned compare: left >= lit (0xB=11), size=1
                                    1- 2298     	.line	417, "main.c"; 	if(revCount > 10 && irStep == 0)
     0009 210B                      1- 2299     	MOVIA	0x0b
                                    1- 2300     	BANKSEL	_revCount
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 2301     	SUBAR	_revCount,W
     000C 0803                      1- 2302     	BTRSS	STATUS,0
                                    1- 2303     	MGOTO	_00287_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2304     	BANKSEL	_irStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2305     	MOVR	_irStep,W
     0010 0903                      1- 2306     	BTRSS	STATUS,2
                                    1- 2307     	MGOTO	_00287_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2308     	.line	420, "main.c"; 	if(workStep == 1)
                                    1- 2309     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2310     	MOVR	_workStep,W
     0014 2401                      1- 2311     	XORIA	0x01
     0015 0903                      1- 2312     	BTRSS	STATUS,2
                                    1- 2313     	MGOTO	_00282_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2314     	.line	422, "main.c"; 	workTime = 50;
     0017 2132                      1- 2315     	MOVIA	0x32
                                    1- 2316     	BANKSEL	_workTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 2317     	MOVAR	_workTime
                                    1- 2318     	MGOTO	_00283_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1- 2319     _00282_DS_:
                                    1- 2320     	.line	424, "main.c"; 	else if(workStep == 2)
                                    1- 2321     	BANKSEL	_workStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2322     	MOVR	_workStep,W
     001D 2402                      1- 2323     	XORIA	0x02
     001E 0903                      1- 2324     	BTRSS	STATUS,2
                                    1- 2325     	MGOTO	_00279_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2326     	.line	426, "main.c"; 	workTime = 100;
     0020 2164                      1- 2327     	MOVIA	0x64
                                    1- 2328     	BANKSEL	_workTime
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2329     	MOVAR	_workTime
                                    1- 2330     	MGOTO	_00283_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024                           1- 2331     _00279_DS_:
                                    1- 2332     	.line	428, "main.c"; 	else if(workStep == 3)
                                    1- 2333     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 2334     	MOVR	_workStep,W
     0026 2403                      1- 2335     	XORIA	0x03
     0027 0903                      1- 2336     	BTRSS	STATUS,2
                                    1- 2337     	MGOTO	_00283_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2338     	.line	430, "main.c"; 	workTime = 150;
     0029 2196                      1- 2339     	MOVIA	0x96
                                    1- 2340     	BANKSEL	_workTime
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2341     	MOVAR	_workTime
     002C                           1- 2342     _00283_DS_:
                                    1- 2343     	.line	433, "main.c"; 	irStep = 1;
     002C 2101                      1- 2344     	MOVIA	0x01
                                    1- 2345     	BANKSEL	_irStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2346     	MOVAR	_irStep
     002F                           1- 2347     _00287_DS_:
                                    1- 2348     	.line	452, "main.c"; 	}
                                    1- 2349     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 2350     ; exit point of _checkIRKey
                                    1- 2352     ;***
                                    1- 2353     ;  pBlock Stats: dbName = C
                                    1- 2354     ;***
                                    1- 2355     ;has an exit
                                    1- 2356     ;functions called:
                                    1- 2357     ;   _pwmInit
                                    1- 2358     ;   _pwmStop
                                    1- 2359     ;   __divuchar
                                    1- 2360     ;   __moduchar
                                    1- 2361     ;   __moduint
                                    1- 2362     ;   __divuchar
                                    1- 2363     ;   __moduchar
                                    1- 2364     ;   _pwmInit
                                    1- 2365     ;   _pwmStop
                                    1- 2366     ;   __divuchar
                                    1- 2367     ;   __moduchar
                                    1- 2368     ;   __moduint
                                    1- 2369     ;   __divuchar
                                    1- 2370     ;   __moduchar
                                    1- 2371     ;5 compiler assigned registers:
                                    1- 2372     ;   r0x1046
                                    1- 2373     ;   STK00
                                    1- 2374     ;   STK02
                                    1- 2375     ;   STK01
                                    1- 2376     ;   r0x1047
                                    1- 2377     ;; Starting pCode block
                                    1- 2378     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2380     _chrgCtr:
                                    1- 2381     ; 2 exit points
                                    1- 2382     	.line	287, "main.c"; 	fullFlag = 0;
                                    1- 2383     	BANKSEL	_fullFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2384     	CLRR	_fullFlag
                                    1- 2385     	.line	288, "main.c"; 	BPHCON |= 0x04;
     0002 19rr                      1- 2386     	BSR	_BPHCON,2
                                    1- 2387     	.line	289, "main.c"; 	IOSTB &= 0xFB;
     0003 001r                      1- 2388     	IOSTR	_IOSTB
                                    1- 2389     	BANKSEL	r0x1046
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2390     	MOVAR	r0x1046
     0006 1Drr                      1- 2391     	BCR	r0x1046,2
     0007 01rr                      1- 2392     	MOVR	r0x1046,W
     0008 000r                      1- 2393     	IOST	_IOSTB
                                    1- 2394     	.line	290, "main.c"; 	if(workTime > 0)
                                    1- 2395     	BANKSEL	_workTime
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 2396     	MOVR	_workTime,W
     000B 0D03                      1- 2397     	BTRSC	STATUS,2
                                    1- 2398     	MGOTO	_00191_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2399     	.line	292, "main.c"; 	pwmInit();
                                    1- 2400     	MCALL	_pwmInit
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2401     	.line	293, "main.c"; 	workTime--;
                                    1- 2402     	BANKSEL	_workTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1- 2403     	DECR	_workTime,F
                                    1- 2404     	MGOTO	_00192_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1- 2405     _00191_DS_:
                                    1- 2406     	.line	297, "main.c"; 	pwmStop();
                                    1- 2407     	MCALL	_pwmStop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2408     	.line	298, "main.c"; 	PORTB &= 0xFB;
     0012 1Drr                      1- 2409     	BCR	_PORTB,2
     0013                           1- 2410     _00192_DS_:
                                    1- 2411     	.line	300, "main.c"; 	if(stepShowTime)
                                    1- 2412     	BANKSEL	_stepShowTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2413     	MOVR	_stepShowTime,W
     0015 0D03                      1- 2414     	BTRSC	STATUS,2
                                    1- 2415     	MGOTO	_00223_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2416     	.line	302, "main.c"; 	showFlag = 1;
     0017 2101                      1- 2417     	MOVIA	0x01
                                    1- 2418     	BANKSEL	_showFlag
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 2419     	MOVAR	_showFlag
                                    1- 2420     	.line	303, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2421     	BANKSEL	_shiweiNum
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 2422     	CLRR	_shiweiNum
                                    1- 2423     	BANKSEL	_baiweiNum
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 2424     	CLRR	_baiweiNum
                                    1- 2425     	.line	304, "main.c"; 	geweiNum = workStep;
                                    1- 2426     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 2427     	MOVR	_workStep,W
                                    1- 2428     	BANKSEL	_geweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2429     	MOVAR	_geweiNum
                                    1- 2430     	.line	304, "main.c"; 	}
                                    1- 2431     	MGOTO	_00225_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 2432     _00223_DS_:
                                    1- 2433     	.line	306, "main.c"; 	else if(pwShowTime || workTime)
                                    1- 2434     	BANKSEL	_pwShowTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 2435     	MOVR	_pwShowTime,W
     0025 0903                      1- 2436     	BTRSS	STATUS,2
                                    1- 2437     	MGOTO	_00218_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2438     	BANKSEL	_workTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2439     	MOVR	_workTime,W
     0029 0D03                      1- 2440     	BTRSC	STATUS,2
                                    1- 2441     	MGOTO	_00219_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 2442     _00218_DS_:
                                    1- 2443     	.line	308, "main.c"; 	showFlag = 1;
     002B 2101                      1- 2444     	MOVIA	0x01
                                    1- 2445     	BANKSEL	_showFlag
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2446     	MOVAR	_showFlag
                                    1- 2447     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2448     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2449     	.line	309, "main.c"; 	if(pwStep > 99)
     002E 2164                      1- 2450     	MOVIA	0x64
                                    1- 2451     	BANKSEL	_pwStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 04rr                      1- 2452     	SUBAR	_pwStep,W
     0031 0803                      1- 2453     	BTRSS	STATUS,0
                                    1- 2454     	MGOTO	_00194_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2455     	.line	311, "main.c"; 	baiweiNum = 1;
     0033 2101                      1- 2456     	MOVIA	0x01
                                    1- 2457     	BANKSEL	_baiweiNum
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2458     	MOVAR	_baiweiNum
                                    1- 2459     	.line	312, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2460     	BANKSEL	_geweiNum
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2461     	CLRR	_geweiNum
                                    1- 2462     	BANKSEL	_shiweiNum
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 2463     	CLRR	_shiweiNum
                                    1- 2464     	MGOTO	_00225_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1- 2465     _00194_DS_:
                                    1- 2466     	.line	316, "main.c"; 	baiweiNum = 0;
                                    1- 2467     	BANKSEL	_baiweiNum
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 2468     	CLRR	_baiweiNum
                                    1- 2469     	.line	317, "main.c"; 	shiweiNum = pwStep/10;
     003D 210A                      1- 2470     	MOVIA	0x0a
     003E 00rr                      1- 2471     	MOVAR	STK00
                                    1- 2472     	BANKSEL	_pwStep
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 2473     	MOVR	_pwStep,W
                                    1- 2474     	MCALL	__divuchar
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2475     	BANKSEL	_shiweiNum
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 2476     	MOVAR	_shiweiNum
                                    1- 2477     	.line	318, "main.c"; 	geweiNum = pwStep%10;
     0044 210A                      1- 2478     	MOVIA	0x0a
     0045 00rr                      1- 2479     	MOVAR	STK00
                                    1- 2480     	BANKSEL	_pwStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 2481     	MOVR	_pwStep,W
                                    1- 2482     	MCALL	__moduchar
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2483     	BANKSEL	_geweiNum
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2484     	MOVAR	_geweiNum
                                    1- 2485     	.line	318, "main.c"; 	}
                                    1- 2486     	MGOTO	_00225_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2487     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2488     ;;unsigned compare: left >= lit (0x6=6), size=1
     004C                           1- 2489     _00219_DS_:
                                    1- 2490     	.line	323, "main.c"; 	if(pwStep <= 5 && offShowTime == 0 && ((0x20 & PORTA) == 0))
     004C 2106                      1- 2491     	MOVIA	0x06
                                    1- 2492     	BANKSEL	_pwStep
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 04rr                      1- 2493     	SUBAR	_pwStep,W
     004F 0C03                      1- 2494     	BTRSC	STATUS,0
                                    1- 2495     	MGOTO	_00214_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2496     	BANKSEL	_offShowTime
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2497     	MOVR	_offShowTime,W
     0053 0903                      1- 2498     	BTRSS	STATUS,2
                                    1- 2499     	MGOTO	_00214_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2500     	BANKSEL	_PORTA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 0Err                      1- 2501     	BTRSC	_PORTA,5
                                    1- 2502     	MGOTO	_00214_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2503     	.line	325, "main.c"; 	showFlag = 1;
     0058 2101                      1- 2504     	MOVIA	0x01
                                    1- 2505     	BANKSEL	_showFlag
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 2506     	MOVAR	_showFlag
                                    1- 2507     	.line	326, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2508     	BANKSEL	_shanTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 05rr                      1- 2509     	INCR	_shanTime,F
     005D 0D03                      1- 2510     	BTRSC	STATUS,2
     005E 05rr                      1- 2511     	INCR	(_shanTime + 1),F
                                    1- 2512     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2513     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     005F 2101                      1- 2514     	MOVIA	0x01
     0060 04rr                      1- 2515     	SUBAR	(_shanTime + 1),W
     0061 0903                      1- 2516     	BTRSS	STATUS,2
                                    1- 2517     	MGOTO	_00268_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063 21F5                      1- 2518     	MOVIA	0xf5
     0064 04rr                      1- 2519     	SUBAR	_shanTime,W
     0065                           1- 2520     _00268_DS_:
     0065 0803                      1- 2521     	BTRSS	STATUS,0
                                    1- 2522     	MGOTO	_00197_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2523     	.line	328, "main.c"; 	shanTime = 0;
                                    1- 2524     	BANKSEL	_shanTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 02rr                      1- 2525     	CLRR	_shanTime
     0069 02rr                      1- 2526     	CLRR	(_shanTime + 1)
                                    1- 2527     	.line	329, "main.c"; 	showFlag = 0;
                                    1- 2528     	BANKSEL	_showFlag
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 02rr                      1- 2529     	CLRR	_showFlag
     006C                           1- 2530     _00197_DS_:
                                    1- 2531     	.line	332, "main.c"; 	if(shanTime % 100 < 50)
     006C 2164                      1- 2532     	MOVIA	0x64
     006D 00rr                      1- 2533     	MOVAR	STK02
     006E 2100                      1- 2534     	MOVIA	0x00
     006F 00rr                      1- 2535     	MOVAR	STK01
                                    1- 2536     	BANKSEL	_shanTime
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 2537     	MOVR	_shanTime,W
     0072 00rr                      1- 2538     	MOVAR	STK00
     0073 01rr                      1- 2539     	MOVR	(_shanTime + 1),W
                                    1- 2540     	MCALL	__moduint
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2541     	BANKSEL	r0x1047
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 2542     	MOVAR	r0x1047
     0077 01rr                      1- 2543     	MOVR	STK00,W
                                    1- 2544     	BANKSEL	r0x1046
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 2545     	MOVAR	r0x1046
                                    1- 2546     ;;unsigned compare: left < lit (0x32=50), size=2
     007A 2100                      1- 2547     	MOVIA	0x00
                                    1- 2548     	BANKSEL	r0x1047
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 04rr                      1- 2549     	SUBAR	r0x1047,W
     007D 0903                      1- 2550     	BTRSS	STATUS,2
                                    1- 2551     	MGOTO	_00269_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F 2132                      1- 2552     	MOVIA	0x32
                                    1- 2553     	BANKSEL	r0x1046
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1- 2554     	SUBAR	r0x1046,W
     0082                           1- 2555     _00269_DS_:
     0082 0C03                      1- 2556     	BTRSC	STATUS,0
                                    1- 2557     	MGOTO	_00199_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2558     	.line	334, "main.c"; 	showFlag = 1;
     0084 2101                      1- 2559     	MOVIA	0x01
                                    1- 2560     	BANKSEL	_showFlag
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 2561     	MOVAR	_showFlag
                                    1- 2562     	.line	335, "main.c"; 	baiweiNum = 0;
                                    1- 2563     	BANKSEL	_baiweiNum
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 02rr                      1- 2564     	CLRR	_baiweiNum
                                    1- 2565     	.line	336, "main.c"; 	shiweiNum = 0;
                                    1- 2566     	BANKSEL	_shiweiNum
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 02rr                      1- 2567     	CLRR	_shiweiNum
                                    1- 2568     	.line	337, "main.c"; 	geweiNum = pwStep;
                                    1- 2569     	BANKSEL	_pwStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1- 2570     	MOVR	_pwStep,W
                                    1- 2571     	BANKSEL	_geweiNum
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 2572     	MOVAR	_geweiNum
                                    1- 2573     	MGOTO	_00225_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090                           1- 2574     _00199_DS_:
                                    1- 2575     	.line	341, "main.c"; 	showFlag = 0;
                                    1- 2576     	BANKSEL	_showFlag
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 02rr                      1- 2577     	CLRR	_showFlag
                                    1- 2578     	.line	341, "main.c"; 	}
                                    1- 2579     	MGOTO	_00225_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093                           1- 2580     _00214_DS_:
                                    1- 2581     	.line	344, "main.c"; 	else if(offShowTime > 0)
                                    1- 2582     	BANKSEL	_offShowTime
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 01rr                      1- 2583     	MOVR	_offShowTime,W
     0095 0D03                      1- 2584     	BTRSC	STATUS,2
                                    1- 2585     	MGOTO	_00211_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2586     	.line	346, "main.c"; 	showFlag = 1;
     0097 2101                      1- 2587     	MOVIA	0x01
                                    1- 2588     	BANKSEL	_showFlag
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 2589     	MOVAR	_showFlag
                                    1- 2590     	.line	347, "main.c"; 	baiweiNum = 0;
                                    1- 2591     	BANKSEL	_baiweiNum
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 02rr                      1- 2592     	CLRR	_baiweiNum
                                    1- 2593     	.line	348, "main.c"; 	shiweiNum = 10;
     009C 210A                      1- 2594     	MOVIA	0x0a
                                    1- 2595     	BANKSEL	_shiweiNum
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 2596     	MOVAR	_shiweiNum
                                    1- 2597     	.line	349, "main.c"; 	geweiNum = 10;
                                    1- 2598     	BANKSEL	_geweiNum
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 2599     	MOVAR	_geweiNum
                                    1- 2600     	.line	349, "main.c"; 	}
                                    1- 2601     	MGOTO	_00225_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
     00A2                           1- 2602     _00211_DS_:
                                    1- 2603     	.line	351, "main.c"; 	else if(0x20 & PORTA)
                                    1- 2604     	BANKSEL	_PORTA
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 0Arr                      1- 2605     	BTRSS	_PORTA,5
                                    1- 2606     	MGOTO	_00208_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2607     	.line	357, "main.c"; 	showFlag = 1;
     00A5 2101                      1- 2608     	MOVIA	0x01
                                    1- 2609     	BANKSEL	_showFlag
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 2610     	MOVAR	_showFlag
                                    1- 2611     	.line	361, "main.c"; 	if(fullFlag)
                                    1- 2612     	BANKSEL	_fullFlag
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 2613     	MOVR	_fullFlag,W
     00AA 0D03                      1- 2614     	BTRSC	STATUS,2
                                    1- 2615     	MGOTO	_00205_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2616     	.line	363, "main.c"; 	fullFlag = 1;
     00AC 2101                      1- 2617     	MOVIA	0x01
     00AD 00rr                      1- 2618     	MOVAR	_fullFlag
                                    1- 2619     	.line	365, "main.c"; 	baiweiNum = 1;
                                    1- 2620     	BANKSEL	_baiweiNum
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 2621     	MOVAR	_baiweiNum
                                    1- 2622     	.line	366, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2623     	BANKSEL	_geweiNum
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 02rr                      1- 2624     	CLRR	_geweiNum
                                    1- 2625     	BANKSEL	_shiweiNum
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 02rr                      1- 2626     	CLRR	_shiweiNum
                                    1- 2627     	.line	366, "main.c"; 	}
                                    1- 2628     	MGOTO	_00225_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
     00B5                           1- 2629     _00205_DS_:
                                    1- 2630     	.line	371, "main.c"; 	if(pwStep == 100)
                                    1- 2631     	BANKSEL	_pwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 2632     	MOVR	_pwStep,W
     00B7 2464                      1- 2633     	XORIA	0x64
     00B8 0903                      1- 2634     	BTRSS	STATUS,2
                                    1- 2635     	MGOTO	_00202_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2636     	.line	373, "main.c"; 	fullFlag = 1;
     00BA 2101                      1- 2637     	MOVIA	0x01
                                    1- 2638     	BANKSEL	_fullFlag
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 00rr                      1- 2639     	MOVAR	_fullFlag
                                    1- 2640     	.line	374, "main.c"; 	baiweiNum = 0;
                                    1- 2641     	BANKSEL	_baiweiNum
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 02rr                      1- 2642     	CLRR	_baiweiNum
                                    1- 2643     	.line	375, "main.c"; 	shiweiNum = 9;
     00BF 2109                      1- 2644     	MOVIA	0x09
                                    1- 2645     	BANKSEL	_shiweiNum
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 2646     	MOVAR	_shiweiNum
                                    1- 2647     	.line	376, "main.c"; 	geweiNum = 9;
                                    1- 2648     	BANKSEL	_geweiNum
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 2649     	MOVAR	_geweiNum
                                    1- 2650     	MGOTO	_00225_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
     00C5                           1- 2651     _00202_DS_:
                                    1- 2652     	.line	380, "main.c"; 	baiweiNum = 0;
                                    1- 2653     	BANKSEL	_baiweiNum
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 02rr                      1- 2654     	CLRR	_baiweiNum
                                    1- 2655     	.line	381, "main.c"; 	shiweiNum = pwStep/10;
     00C7 210A                      1- 2656     	MOVIA	0x0a
     00C8 00rr                      1- 2657     	MOVAR	STK00
                                    1- 2658     	BANKSEL	_pwStep
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 2659     	MOVR	_pwStep,W
                                    1- 2660     	MCALL	__divuchar
     00CB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2661     	BANKSEL	_shiweiNum
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 2662     	MOVAR	_shiweiNum
                                    1- 2663     	.line	382, "main.c"; 	geweiNum = pwStep%10;
     00CE 210A                      1- 2664     	MOVIA	0x0a
     00CF 00rr                      1- 2665     	MOVAR	STK00
                                    1- 2666     	BANKSEL	_pwStep
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 2667     	MOVR	_pwStep,W
                                    1- 2668     	MCALL	__moduchar
     00D2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2669     	BANKSEL	_geweiNum
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 2670     	MOVAR	_geweiNum
                                    1- 2671     	.line	382, "main.c"; 	}
                                    1- 2672     	MGOTO	_00225_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6                           1- 2673     _00208_DS_:
                                    1- 2674     	.line	401, "main.c"; 	showFlag = 0;
                                    1- 2675     	BANKSEL	_showFlag
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 2676     	CLRR	_showFlag
     00D8                           1- 2677     _00225_DS_:
                                    1- 2678     	.line	405, "main.c"; 	}
                                    1- 2679     	RETURN	
     00D8 0010                      3-   40 m1      ret
                                    1- 2680     ; exit point of _chrgCtr
                                    1- 2683     ;	code size estimation:
                                    1- 2684     ;	 1002+  318 =  1320 instructions ( 3276 byte)
                                    1- 2686     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
