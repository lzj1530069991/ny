
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubBaiwei
                                    1-   20     	extern	_showNubBaiwei2
                                    1-   21     	extern	_showNubGewei
                                    1-   22     	extern	_showNubGewei2
                                    1-   23     	extern	_showNubShiwei
                                    1-   24     	extern	_showNubShiwei2
                                    1-   25     	extern	_A1
                                    1-   26     	extern	_B1
                                    1-   27     	extern	_C1
                                    1-   28     	extern	_D1
                                    1-   29     	extern	_E1
                                    1-   30     	extern	_F1
                                    1-   31     	extern	_G1
                                    1-   32     	extern	_A2
                                    1-   33     	extern	_B2
                                    1-   34     	extern	_C2
                                    1-   35     	extern	_D2
                                    1-   36     	extern	_E2
                                    1-   37     	extern	_F2
                                    1-   38     	extern	_G2
                                    1-   39     	extern	_A3
                                    1-   40     	extern	_B3
                                    1-   41     	extern	_C3
                                    1-   42     	extern	_D3
                                    1-   43     	extern	_E3
                                    1-   44     	extern	_F3
                                    1-   45     	extern	_G3
                                    1-   46     	extern	_delayms
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	__moduint
                                    1-   50     	extern	_PORTAbits
                                    1-   51     	extern	_PORTBbits
                                    1-   52     	extern	_PCONbits
                                    1-   53     	extern	_BWUCONbits
                                    1-   54     	extern	_ABPLCONbits
                                    1-   55     	extern	_BPHCONbits
                                    1-   56     	extern	_INTEbits
                                    1-   57     	extern	_INTFbits
                                    1-   58     	extern	_ADMDbits
                                    1-   59     	extern	_ADRbits
                                    1-   60     	extern	_ADVREFHbits
                                    1-   61     	extern	_ADCRbits
                                    1-   62     	extern	_AWUCONbits
                                    1-   63     	extern	_PACONbits
                                    1-   64     	extern	_INTEDGbits
                                    1-   65     	extern	_ANAENbits
                                    1-   66     	extern	_RFCbits
                                    1-   67     	extern	_INTE2bits
                                    1-   68     	extern	_INDF
                                    1-   69     	extern	_TMR0
                                    1-   70     	extern	_PCL
                                    1-   71     	extern	_STATUS
                                    1-   72     	extern	_FSR
                                    1-   73     	extern	_PORTA
                                    1-   74     	extern	_PORTB
                                    1-   75     	extern	_PCON
                                    1-   76     	extern	_BWUCON
                                    1-   77     	extern	_PCHBUF
                                    1-   78     	extern	_ABPLCON
                                    1-   79     	extern	_BPHCON
                                    1-   80     	extern	_INTE
                                    1-   81     	extern	_INTF
                                    1-   82     	extern	_ADMD
                                    1-   83     	extern	_ADR
                                    1-   84     	extern	_ADD
                                    1-   85     	extern	_ADVREFH
                                    1-   86     	extern	_ADCR
                                    1-   87     	extern	_AWUCON
                                    1-   88     	extern	_PACON
                                    1-   89     	extern	_INTEDG
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_ANAEN
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM3RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_TMR2
                                    1-  105     	extern	_T2CR1
                                    1-  106     	extern	_T2CR2
                                    1-  107     	extern	_PWM2DUTY
                                    1-  108     	extern	_PS2CV
                                    1-  109     	extern	_BZ2CR
                                    1-  110     	extern	_OSCCR
                                    1-  111     	extern	_TMR3
                                    1-  112     	extern	_T3CR1
                                    1-  113     	extern	_T3CR2
                                    1-  114     	extern	_PWM3DUTY
                                    1-  115     	extern	_PS3CV
                                    1-  116     	extern	_BZ3CR
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_Quarter_VDD_Convert
                                    1-  136     	extern	_checkBat
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyCtr
                                    1-  139     	extern	_pwmStop
                                    1-  140     	extern	_pwmInit
                                    1-  141     	extern	_gotoSleep
                                    1-  142     	extern	_initSys
                                    1-  143     	extern	_refreshNub
                                    1-  144     	extern	_checkIRKey
                                    1-  145     	extern	_chrgCtr
                                    1-  146     	extern	_isr
                                    1-  147     	extern	_main
                                    1-  148     	extern	_keyRead
                                    1-  149     	extern	_R_Quarter_VDD_DATA
                                    1-  150     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  151     	extern	_intCount
                                    1-  152     	extern	_IntFlag
                                    1-  153     	extern	_baiweiNum
                                    1-  154     	extern	_shiweiNum
                                    1-  155     	extern	_geweiNum
                                    1-  156     	extern	_showFlag
                                    1-  157     	extern	_irStep
                                    1-  158     	extern	_revCount
                                    1-  159     	extern	_checkCount
                                    1-  160     	extern	_pwmTime
                                    1-  161     	extern	_sendFlag
                                    1-  162     	extern	_workTime
                                    1-  163     	extern	_workStep
                                    1-  164     	extern	_pwFlag
                                    1-  165     	extern	_pwShowTime
                                    1-  166     	extern	_stepShowTime
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_keyCount
                                    1-  169     	extern	_longPressFlag
                                    1-  170     	extern	_sleepTime
                                    1-  171     	extern	_fullFlag
                                    1-  172     	extern	_shanTime
                                    1-  173     	extern	_count1s
                                    1-  174     	extern	_waitTime
                                    1-  175     	extern	_offShowTime
                                    1-  176     	extern	_notRecv
                                    1-  177     	extern	_zhedangFlag
                                    1-  178     	extern	_zhedangTime
                                    1-  179     	extern	_sleepFlag
                                    1-  180     	extern	_powerShi
                                    1-  181     	extern	_powerGe
                                    1-  182     	extern	_count5s
                                    1-  183     	extern	_count250ms
                                    1-  184     	extern	_checkBatTime
                                    1-  185     	extern	_fullTime
                                    1-  186     	extern	_waitBatTime
                                    1-  187     	extern	_startTime
                                    1-  188     	extern	_zhedangCount
                                    1-  189     	extern	_count10ms
                                    1-  190     	extern	_sendPreSta
                                    1-  191     	extern	_count8ms
                                    1-  192     	extern	_count10s
                                    1-  194     	extern PSAVE
                                    1-  195     	extern SSAVE
                                    1-  196     	extern WSAVE
                                    1-  197     	extern STK06
                                    1-  198     	extern STK05
                                    1-  199     	extern STK04
                                    1-  200     	extern STK03
                                    1-  201     	extern STK02
                                    1-  202     	extern STK01
                                    1-  203     	extern STK00
                                    1-  205     .segment "uninit", 0x20000040
 20000040                           1-  206     PSAVE:
                                    1-  207     	.res 1
 20000041                           1-  208     SSAVE:
                                    1-  209     	.res 1
 20000042                           1-  210     WSAVE:
                                    1-  211     	.res 1
 20000043                           1-  212     STK06:
                                    1-  213     	.res 1
 20000044                           1-  214     STK05:
                                    1-  215     	.res 1
 20000045                           1-  216     STK04:
                                    1-  217     	.res 1
 20000046                           1-  218     STK03:
                                    1-  219     	.res 1
 20000047                           1-  220     STK02:
                                    1-  221     	.res 1
 20000048                           1-  222     STK01:
                                    1-  223     	.res 1
 20000049                           1-  224     STK00:
                                    1-  225     	.res 1
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ; global definitions
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     .segment "uninit"
     0000                           1-  231     _R_Quarter_VDD_DATA:
                                    1-  232     	.res	2
                                    1-  235     .segment "uninit"
     0000                           1-  236     _R_Quarter_VDD_DATA_LB:
                                    1-  237     	.res	1
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ; absolute symbol definitions
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ; compiler-defined variables
                                    1-  245     ;--------------------------------------------------------
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1056:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1057:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1053:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1054:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1051:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1052:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x104E:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x104F:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x104D:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x104B:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x104C:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1045:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x1046:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x1047:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x1048:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x104A:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x1049:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x103F:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x1040:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x1041:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x1044:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x103D:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x103E:
                                    1-  314     	.res	1
                                    1-  315     ;--------------------------------------------------------
                                    1-  316     ; initialized data
                                    1-  317     ;--------------------------------------------------------
                                    1-  319     .segment "idata"
     0000                           1-  320     _intCount:
     0000 0000                      1-  321     	dw	0x00
                                    1-  325     .segment "idata"
     0000                           1-  326     _IntFlag:
     0000 0000                      1-  327     	dw	0x00
                                    1-  331     .segment "idata"
     0000                           1-  332     _baiweiNum:
     0000 0000                      1-  333     	dw	0x00
                                    1-  337     .segment "idata"
     0000                           1-  338     _shiweiNum:
     0000 0000                      1-  339     	dw	0x00
                                    1-  343     .segment "idata"
     0000                           1-  344     _geweiNum:
     0000 0000                      1-  345     	dw	0x00
                                    1-  349     .segment "idata"
     0000                           1-  350     _showFlag:
     0000 0000                      1-  351     	dw	0x00
                                    1-  355     .segment "idata"
     0000                           1-  356     _irStep:
     0000 0000                      1-  357     	dw	0x00
                                    1-  361     .segment "idata"
     0000                           1-  362     _revCount:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _checkCount:
     0000 0000                      1-  369     	dw	0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _pwmTime:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _sendFlag:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _workTime:
     0000 0000 0000                 1-  387     	dw	0x00, 0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _workStep:
     0000 0000                      1-  393     	dw	0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _pwFlag:
     0000 0000                      1-  399     	dw	0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _pwShowTime:
     0000 0000                      1-  405     	dw	0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _stepShowTime:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _pwStep:
     0000 0000                      1-  417     	dw	0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _keyCount:
     0000 0000                      1-  423     	dw	0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _longPressFlag:
     0000 0000                      1-  429     	dw	0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _sleepTime:
     0000 0000                      1-  435     	dw	0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _fullFlag:
     0000 0000                      1-  441     	dw	0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _shanTime:
     0000 0000 0000                 1-  447     	dw	0x00, 0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _count1s:
     0000 0000 0000                 1-  453     	dw	0x00, 0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _waitTime:
     0000 0000 0000                 1-  459     	dw	0x00, 0x00
                                    1-  463     .segment "idata"
     0000                           1-  464     _offShowTime:
     0000 0000                      1-  465     	dw	0x00
                                    1-  469     .segment "idata"
     0000                           1-  470     _notRecv:
     0000 0000                      1-  471     	dw	0x00
                                    1-  475     .segment "idata"
     0000                           1-  476     _zhedangFlag:
     0000 0000                      1-  477     	dw	0x00
                                    1-  481     .segment "idata"
     0000                           1-  482     _zhedangTime:
     0000 0000                      1-  483     	dw	0x00
                                    1-  487     .segment "idata"
     0000                           1-  488     _sleepFlag:
     0000 0000                      1-  489     	dw	0x00
                                    1-  493     .segment "idata"
     0000                           1-  494     _powerShi:
     0000 0000                      1-  495     	dw	0x00
                                    1-  499     .segment "idata"
     0000                           1-  500     _powerGe:
     0000 0000                      1-  501     	dw	0x00
                                    1-  505     .segment "idata"
     0000                           1-  506     _count5s:
     0000 0000 0000                 1-  507     	dw	0x00, 0x00
                                    1-  511     .segment "idata"
     0000                           1-  512     _count250ms:
     0000 0000 0000                 1-  513     	dw	0x00, 0x00
                                    1-  517     .segment "idata"
     0000                           1-  518     _checkBatTime:
     0000 0000                      1-  519     	dw	0x00
                                    1-  523     .segment "idata"
     0000                           1-  524     _fullTime:
     0000 0000                      1-  525     	dw	0x00
                                    1-  529     .segment "idata"
     0000                           1-  530     _waitBatTime:
     0000 0000                      1-  531     	dw	0x00
                                    1-  535     .segment "idata"
     0000                           1-  536     _startTime:
     0000 0000                      1-  537     	dw	0x00
                                    1-  541     .segment "idata"
     0000                           1-  542     _zhedangCount:
     0000 0000                      1-  543     	dw	0x00
                                    1-  547     .segment "idata"
     0000                           1-  548     _count10ms:
     0000 0000                      1-  549     	dw	0x00
                                    1-  553     .segment "idata"
     0000                           1-  554     _sendPreSta:
     0000 0000                      1-  555     	dw	0x00
                                    1-  559     .segment "idata"
     0000                           1-  560     _count8ms:
     0000 0000                      1-  561     	dw	0x00
                                    1-  565     .segment "idata"
     0000                           1-  566     _count10s:
     0000 0000                      1-  567     	dw	0x00
                                    1-  571     .segment "idata"
     0000                           1-  572     _numArray:
     0000 003F                      1-  573     	dw	0x3f
     0001 0006                      1-  574     	dw	0x06
     0002 005B                      1-  575     	dw	0x5b
     0003 004F                      1-  576     	dw	0x4f
     0004 0066                      1-  577     	dw	0x66
     0005 006D                      1-  578     	dw	0x6d
     0006 007D                      1-  579     	dw	0x7d
     0007 0007                      1-  580     	dw	0x07
     0008 007F                      1-  581     	dw	0x7f
     0009 006F                      1-  582     	dw	0x6f
     000A 0071                      1-  583     	dw	0x71
     000B 0079                      1-  584     	dw	0x79
     000C 0050                      1-  585     	dw	0x50
                                    1-  588     ;--------------------------------------------------------
                                    1-  589     ; overlayable items in internal ram 
                                    1-  590     ;--------------------------------------------------------
                                    1-  591     ;	udata_ovr
                                    1-  592     ;--------------------------------------------------------
                                    1-  593     ; reset vector 
                                    1-  594     ;--------------------------------------------------------
                                    1-  595     ORG	0x0000
     0000 3rrr                      1-  596     	LGOTO	__nyc_ny8_startup
                                    1-  597     ;--------------------------------------------------------
                                    1-  598     ; interrupt and initialization code
                                    1-  599     ;--------------------------------------------------------
                                    1-  600     ORG 0x0008
                                    1-  601     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  603     .segment "code"
     0000                           1-  604     __sdcc_interrupt:
                                    1-  605     ;***
                                    1-  606     ;  pBlock Stats: dbName = I
                                    1-  607     ;***
                                    1-  608     ;2 compiler assigned registers:
                                    1-  609     ;   STK00
                                    1-  610     ;   STK01
                                    1-  611     ;; Starting pCode block
     0000                           1-  612     _isr:
                                    1-  613     ; 0 exit points
                                    1-  614     	.line	85, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  615     	MOVAR	WSAVE
     0001 1503                      1-  616     	SWAPR	STATUS,W
     0002 0283                      1-  617     	CLRR	STATUS
     0003 00rr                      1-  618     	MOVAR	SSAVE
     0004 010A                      1-  619     	MOVR	PCHBUF,W
     0005 028A                      1-  620     	CLRR	PCHBUF
     0006 00rr                      1-  621     	MOVAR	PSAVE
     0007 0104                      1-  622     	MOVR	FSR,W
                                    1-  623     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  624     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  625     	MOVR	STK00,W
                                    1-  626     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  627     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  628     	MOVR	STK01,W
                                    1-  629     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  630     	MOVAR	___sdcc_saved_stk01
                                    1-  631     	.line	87, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  632     	BTRSS	_INTFbits,0
                                    1-  633     	MGOTO	_00125_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  634     	.line	89, "main.c"; 	TMR0 += 57;
     0012 2139                      1-  635     	MOVIA	0x39
     0013 03rr                      1-  636     	ADDAR	_TMR0,F
                                    1-  637     	.line	91, "main.c"; 	if(++intCount >= 10)
                                    1-  638     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  639     	INCR	_intCount,F
                                    1-  640     ;;unsigned compare: left < lit (0xA=10), size=1
     0016 210A                      1-  641     	MOVIA	0x0a
     0017 04rr                      1-  642     	SUBAR	_intCount,W
     0018 0803                      1-  643     	BTRSS	STATUS,0
                                    1-  644     	MGOTO	_00125_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  645     	.line	93, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  646     	MOVIA	0x01
                                    1-  647     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  648     	MOVAR	_IntFlag
                                    1-  649     	.line	94, "main.c"; 	intCount = 0;
                                    1-  650     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  651     	CLRR	_intCount
                                    1-  652     	.line	95, "main.c"; 	if(++count8ms >= 8)
                                    1-  653     	BANKSEL	_count8ms
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  654     	INCR	_count8ms,F
                                    1-  655     ;;unsigned compare: left < lit (0x8=8), size=1
     0021 2108                      1-  656     	MOVIA	0x08
     0022 04rr                      1-  657     	SUBAR	_count8ms,W
     0023 0803                      1-  658     	BTRSS	STATUS,0
                                    1-  659     	MGOTO	_00109_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  660     	.line	97, "main.c"; 	count8ms = 0;
     0025 02rr                      1-  661     	CLRR	_count8ms
                                    1-  662     	.line	98, "main.c"; 	if(workTime > 0)
                                    1-  663     	BANKSEL	_workTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  664     	MOVR	_workTime,W
     0028 11rr                      1-  665     	IORAR	(_workTime + 1),W
     0029 0D03                      1-  666     	BTRSC	STATUS,2
                                    1-  667     	MGOTO	_00106_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  668     	.line	101, "main.c"; 	PORTB |= 0x04;
     002B 19rr                      1-  669     	BSR	_PORTB,2
                                    1-  670     	.line	102, "main.c"; 	workTime--;
     002C 21FF                      1-  671     	MOVIA	0xff
     002D 03rr                      1-  672     	ADDAR	_workTime,F
     002E 0803                      1-  673     	BTRSS	STATUS,0
     002F 06rr                      1-  674     	DECR	(_workTime + 1),F
                                    1-  675     	MGOTO	_00109_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1-  676     _00106_DS_:
                                    1-  677     	.line	106, "main.c"; 	workTime = 0;
                                    1-  678     	BANKSEL	_workTime
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1-  679     	CLRR	_workTime
     0033 02rr                      1-  680     	CLRR	(_workTime + 1)
                                    1-  681     	.line	108, "main.c"; 	PORTB &= 0xFB;
     0034 1Drr                      1-  682     	BCR	_PORTB,2
     0035                           1-  683     _00109_DS_:
                                    1-  684     	.line	111, "main.c"; 	if(++count1s > 1000)
                                    1-  685     	BANKSEL	_count1s
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 05rr                      1-  686     	INCR	_count1s,F
     0037 0D03                      1-  687     	BTRSC	STATUS,2
     0038 05rr                      1-  688     	INCR	(_count1s + 1),F
                                    1-  689     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  690     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0039 2103                      1-  691     	MOVIA	0x03
     003A 04rr                      1-  692     	SUBAR	(_count1s + 1),W
     003B 0903                      1-  693     	BTRSS	STATUS,2
                                    1-  694     	MGOTO	_00162_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21E9                      1-  695     	MOVIA	0xe9
     003E 04rr                      1-  696     	SUBAR	_count1s,W
     003F                           1-  697     _00162_DS_:
     003F 0803                      1-  698     	BTRSS	STATUS,0
                                    1-  699     	MGOTO	_00125_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  700     	.line	113, "main.c"; 	count1s = 0;
                                    1-  701     	BANKSEL	_count1s
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1-  702     	CLRR	_count1s
     0043 02rr                      1-  703     	CLRR	(_count1s + 1)
                                    1-  704     	.line	114, "main.c"; 	if(stepShowTime > 0)
                                    1-  705     	BANKSEL	_stepShowTime
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1-  706     	MOVR	_stepShowTime,W
     0046 0D03                      1-  707     	BTRSC	STATUS,2
                                    1-  708     	MGOTO	_00118_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  709     	.line	115, "main.c"; 	stepShowTime--;
     0048 06rr                      1-  710     	DECR	_stepShowTime,F
                                    1-  711     	MGOTO	_00125_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A                           1-  712     _00118_DS_:
                                    1-  713     	.line	116, "main.c"; 	else if(pwShowTime > 0)
                                    1-  714     	BANKSEL	_pwShowTime
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  715     	MOVR	_pwShowTime,W
     004C 0D03                      1-  716     	BTRSC	STATUS,2
                                    1-  717     	MGOTO	_00115_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  718     	.line	118, "main.c"; 	pwShowTime--;
     004E 06rr                      1-  719     	DECR	_pwShowTime,F
                                    1-  720     	MGOTO	_00125_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1-  721     _00115_DS_:
                                    1-  722     	.line	120, "main.c"; 	else if(offShowTime > 0)
                                    1-  723     	BANKSEL	_offShowTime
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  724     	MOVR	_offShowTime,W
     0052 0D03                      1-  725     	BTRSC	STATUS,2
                                    1-  726     	MGOTO	_00125_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  727     	.line	122, "main.c"; 	--offShowTime;
     0054 17rr                      1-  728     	DECRSZ	_offShowTime,F
                                    1-  729     	.line	123, "main.c"; 	if(offShowTime == 0)
                                    1-  730     	MGOTO	_00125_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  731     	.line	124, "main.c"; 	sleepFlag = 1;
     0056 2101                      1-  732     	MOVIA	0x01
                                    1-  733     	BANKSEL	_sleepFlag
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1-  734     	MOVAR	_sleepFlag
     0059                           1-  735     _00125_DS_:
                                    1-  736     	.line	141, "main.c"; 	if(INTFbits.PABIF)
     0059 08rr                      1-  737     	BTRSS	_INTFbits,1
                                    1-  738     	MGOTO	_00127_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  739     	.line	143, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005B 21FD                      1-  740     	MOVIA	0xfd
     005C 00rr                      1-  741     	MOVAR	_INTF
     005D                           1-  742     _00127_DS_:
                                    1-  743     	.line	147, "main.c"; 	INTF = 0;
     005D 02rr                      1-  744     	CLRR	_INTF
                                    1-  745     	.line	149, "main.c"; 	}
                                    1-  746     	BANKSEL	___sdcc_saved_stk01
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  747     	MOVR	___sdcc_saved_stk01,W
     0060 00rr                      1-  748     	MOVAR	STK01
                                    1-  749     	BANKSEL	___sdcc_saved_stk00
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  750     	MOVR	___sdcc_saved_stk00,W
     0063 00rr                      1-  751     	MOVAR	STK00
                                    1-  752     	BANKSEL	___sdcc_saved_fsr
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  753     	MOVR	___sdcc_saved_fsr,W
     0066 0084                      1-  754     	MOVAR	FSR
     0067 01rr                      1-  755     	MOVR	PSAVE,W
     0068 008A                      1-  756     	MOVAR	PCHBUF
     0069 0283                      1-  757     	CLRR	STATUS
     006A 15rr                      1-  758     	SWAPR	SSAVE,W
     006B 0083                      1-  759     	MOVAR	STATUS
     006C 15rr                      1-  760     	SWAPR	WSAVE,F
     006D 15rr                      1-  761     	SWAPR	WSAVE,W
     006E                           1-  762     END_OF_INTERRUPT:
     006E 0011                      1-  763     	RETIE	
                                    1-  765     ;--------------------------------------------------------
                                    1-  766     ; code
                                    1-  767     ;--------------------------------------------------------
                                    1-  768     ;***
                                    1-  769     ;  pBlock Stats: dbName = M
                                    1-  770     ;***
                                    1-  771     ;has an exit
                                    1-  772     ;functions called:
                                    1-  773     ;   _initSys
                                    1-  774     ;   _initAD
                                    1-  775     ;   _refreshNub
                                    1-  776     ;   _refreshNub
                                    1-  777     ;   _setInput
                                    1-  778     ;   __divuchar
                                    1-  779     ;   __moduchar
                                    1-  780     ;   _delay
                                    1-  781     ;   _checkIRKey
                                    1-  782     ;   _keyCtr
                                    1-  783     ;   _checkBat
                                    1-  784     ;   _chrgCtr
                                    1-  785     ;   _gotoSleep
                                    1-  786     ;   _gotoSleep
                                    1-  787     ;   _delay
                                    1-  788     ;   _initSys
                                    1-  789     ;   _initAD
                                    1-  790     ;   _refreshNub
                                    1-  791     ;   _refreshNub
                                    1-  792     ;   _setInput
                                    1-  793     ;   __divuchar
                                    1-  794     ;   __moduchar
                                    1-  795     ;   _delay
                                    1-  796     ;   _checkIRKey
                                    1-  797     ;   _keyCtr
                                    1-  798     ;   _checkBat
                                    1-  799     ;   _chrgCtr
                                    1-  800     ;   _gotoSleep
                                    1-  801     ;   _gotoSleep
                                    1-  802     ;   _delay
                                    1-  803     ;3 compiler assigned registers:
                                    1-  804     ;   STK00
                                    1-  805     ;   r0x1056
                                    1-  806     ;   r0x1057
                                    1-  807     ;; Starting pCode block
                                    1-  808     .segment "code"; module=main, function=_main
     0000                           1-  810     _main:
                                    1-  811     ; 2 exit points
                                    1-  812     	.line	153, "main.c"; 	initSys();
                                    1-  813     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  814     	.line	154, "main.c"; 	initAD();
                                    1-  815     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  816     	.line	155, "main.c"; 	startTime = 200;
     0002 21C8                      1-  817     	MOVIA	0xc8
                                    1-  818     	BANKSEL	_startTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  819     	MOVAR	_startTime
     0005                           1-  820     _00218_DS_:
                                    1-  821     	.line	159, "main.c"; 	CLRWDT();							// Clear WatchDog
     0005 0002                      1-  822     	clrwdt
                                    1-  823     	.line	160, "main.c"; 	if(showFlag)
                                    1-  824     	BANKSEL	_showFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  825     	MOVR	_showFlag,W
     0008 0D03                      1-  826     	BTRSC	STATUS,2
                                    1-  827     	MGOTO	_00175_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  828     	.line	161, "main.c"; 	refreshNub();
                                    1-  829     	MCALL	_refreshNub
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  830     	MGOTO	_00176_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1-  831     _00175_DS_:
                                    1-  832     	.line	164, "main.c"; 	if(keyCount > 0 && pwFlag == 1)
                                    1-  833     	BANKSEL	_keyCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  834     	MOVR	_keyCount,W
     000E 0D03                      1-  835     	BTRSC	STATUS,2
                                    1-  836     	MGOTO	_00171_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  837     	BANKSEL	_pwFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  838     	MOVR	_pwFlag,W
     0012 2401                      1-  839     	XORIA	0x01
     0013 0903                      1-  840     	BTRSS	STATUS,2
                                    1-  841     	MGOTO	_00171_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  842     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  843     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1-  844     	.line	166, "main.c"; 	if(pwStep > 99)
     0015 2164                      1-  845     	MOVIA	0x64
                                    1-  846     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1-  847     	SUBAR	_pwStep,W
     0018 0803                      1-  848     	BTRSS	STATUS,0
                                    1-  849     	MGOTO	_00168_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  850     	.line	168, "main.c"; 	baiweiNum = 1;
     001A 2101                      1-  851     	MOVIA	0x01
                                    1-  852     	BANKSEL	_baiweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  853     	MOVAR	_baiweiNum
                                    1-  854     	.line	169, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1-  855     	BANKSEL	_geweiNum
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  856     	CLRR	_geweiNum
                                    1-  857     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1-  858     	CLRR	_shiweiNum
                                    1-  859     	MGOTO	_00169_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1-  860     _00168_DS_:
                                    1-  861     	.line	173, "main.c"; 	baiweiNum = 0;
                                    1-  862     	BANKSEL	_baiweiNum
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  863     	CLRR	_baiweiNum
                                    1-  864     	.line	174, "main.c"; 	shiweiNum = powerShi;
                                    1-  865     	BANKSEL	_powerShi
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  866     	MOVR	_powerShi,W
                                    1-  867     	BANKSEL	_shiweiNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  868     	MOVAR	_shiweiNum
                                    1-  869     	.line	175, "main.c"; 	geweiNum = powerGe;
                                    1-  870     	BANKSEL	_powerGe
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  871     	MOVR	_powerGe,W
                                    1-  872     	BANKSEL	_geweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  873     	MOVAR	_geweiNum
     002C                           1-  874     _00169_DS_:
                                    1-  875     	.line	177, "main.c"; 	refreshNub();
                                    1-  876     	MCALL	_refreshNub
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  877     	MGOTO	_00176_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1-  878     _00171_DS_:
                                    1-  879     	.line	181, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  880     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  881     	CLRR	_geweiNum
                                    1-  882     	BANKSEL	_shiweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  883     	CLRR	_shiweiNum
                                    1-  884     	BANKSEL	_baiweiNum
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 02rr                      1-  885     	CLRR	_baiweiNum
                                    1-  886     	.line	182, "main.c"; 	setInput();
                                    1-  887     	MCALL	_setInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
     0035                           1-  888     _00176_DS_:
                                    1-  889     	.line	185, "main.c"; 	if(!IntFlag)
                                    1-  890     	BANKSEL	_IntFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  891     	MOVR	_IntFlag,W
     0037 0D03                      1-  892     	BTRSC	STATUS,2
                                    1-  893     	MGOTO	_00218_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  894     	.line	187, "main.c"; 	IntFlag = 0;
     0039 02rr                      1-  895     	CLRR	_IntFlag
                                    1-  896     	.line	188, "main.c"; 	powerShi = pwStep/10;
     003A 210A                      1-  897     	MOVIA	0x0a
     003B 00rr                      1-  898     	MOVAR	STK00
                                    1-  899     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  900     	MOVR	_pwStep,W
                                    1-  901     	MCALL	__divuchar
     003E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  902     	BANKSEL	_powerShi
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1-  903     	MOVAR	_powerShi
                                    1-  904     	.line	189, "main.c"; 	powerGe = pwStep%10;
     0041 210A                      1-  905     	MOVIA	0x0a
     0042 00rr                      1-  906     	MOVAR	STK00
                                    1-  907     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  908     	MOVR	_pwStep,W
                                    1-  909     	MCALL	__moduchar
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  910     	BANKSEL	_powerGe
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1-  911     	MOVAR	_powerGe
                                    1-  912     	.line	191, "main.c"; 	if(waitTime > 0)
                                    1-  913     	BANKSEL	_waitTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  914     	MOVR	_waitTime,W
     004A 11rr                      1-  915     	IORAR	(_waitTime + 1),W
     004B 0D03                      1-  916     	BTRSC	STATUS,2
                                    1-  917     	MGOTO	_00197_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  918     	.line	193, "main.c"; 	if(count10ms == 0)
                                    1-  919     	BANKSEL	_count10ms
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  920     	MOVR	_count10ms,W
     004F 0903                      1-  921     	BTRSS	STATUS,2
                                    1-  922     	MGOTO	_00198_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  923     	.line	194, "main.c"; 	waitTime--;
     0051 21FF                      1-  924     	MOVIA	0xff
                                    1-  925     	BANKSEL	_waitTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 03rr                      1-  926     	ADDAR	_waitTime,F
     0054 0803                      1-  927     	BTRSS	STATUS,0
     0055 06rr                      1-  928     	DECR	(_waitTime + 1),F
                                    1-  929     	MGOTO	_00198_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1-  930     _00197_DS_:
                                    1-  931     	.line	196, "main.c"; 	else if(pwFlag)
                                    1-  932     	BANKSEL	_pwFlag
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  933     	MOVR	_pwFlag,W
     0059 0D03                      1-  934     	BTRSC	STATUS,2
                                    1-  935     	MGOTO	_00194_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  936     	.line	199, "main.c"; 	if(++count250ms >= 370 || revCount || irStep)
                                    1-  937     	BANKSEL	_count250ms
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 05rr                      1-  938     	INCR	_count250ms,F
     005D 0D03                      1-  939     	BTRSC	STATUS,2
     005E 05rr                      1-  940     	INCR	(_count250ms + 1),F
                                    1-  941     ;;unsigned compare: left < lit (0x172=370), size=2
     005F 2101                      1-  942     	MOVIA	0x01
     0060 04rr                      1-  943     	SUBAR	(_count250ms + 1),W
     0061 0903                      1-  944     	BTRSS	STATUS,2
                                    1-  945     	MGOTO	_00301_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063 2172                      1-  946     	MOVIA	0x72
     0064 04rr                      1-  947     	SUBAR	_count250ms,W
     0065                           1-  948     _00301_DS_:
     0065 0C03                      1-  949     	BTRSC	STATUS,0
                                    1-  950     	MGOTO	_00189_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  951     	BANKSEL	_revCount
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  952     	MOVR	_revCount,W
     0069 0903                      1-  953     	BTRSS	STATUS,2
                                    1-  954     	MGOTO	_00189_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  955     	BANKSEL	_irStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1-  956     	MOVR	_irStep,W
     006D 0D03                      1-  957     	BTRSC	STATUS,2
                                    1-  958     	MGOTO	_00198_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
     006F                           1-  959     _00189_DS_:
                                    1-  960     	.line	208, "main.c"; 	if(sendFlag)
                                    1-  961     	BANKSEL	_sendFlag
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 01rr                      1-  962     	MOVR	_sendFlag,W
     0071 0D03                      1-  963     	BTRSC	STATUS,2
                                    1-  964     	MGOTO	_00184_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  965     	.line	210, "main.c"; 	sendPreSta = getbit(PORTB, 3);
     0073 01rr                      1-  966     	MOVR	_PORTB,W
     0074 2208                      1-  967     	ANDIA	0x08
     0075 0903                      1-  968     	BTRSS	STATUS,2
     0076 2101                      1-  969     	MOVIA	0x01
                                    1-  970     	BANKSEL	_sendPreSta
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1-  971     	MOVAR	_sendPreSta
                                    1-  972     	.line	211, "main.c"; 	PORTBbits.PB1 = 1;
     0079 18rr                      1-  973     	BSR	_PORTBbits,1
                                    1-  974     	.line	212, "main.c"; 	delay(20);
     007A 2114                      1-  975     	MOVIA	0x14
                                    1-  976     	MCALL	_delay
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  977     	.line	213, "main.c"; 	checkIRKey();
                                    1-  978     	MCALL	_checkIRKey
     007C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  979     	.line	214, "main.c"; 	count250ms = 0;
                                    1-  980     	BANKSEL	_count250ms
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1-  981     	CLRR	_count250ms
     007F 02rr                      1-  982     	CLRR	(_count250ms + 1)
                                    1-  983     	.line	215, "main.c"; 	PORTBbits.PB1 = 0;
     0080 1Crr                      1-  984     	BCR	_PORTBbits,1
                                    1-  985     	.line	216, "main.c"; 	PORTA &= 0xBF;
                                    1-  986     	BANKSEL	_PORTA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 1Frr                      1-  987     	BCR	_PORTA,6
                                    1-  988     	.line	217, "main.c"; 	sendFlag = 0;
                                    1-  989     	BANKSEL	_sendFlag
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 02rr                      1-  990     	CLRR	_sendFlag
                                    1-  991     	MGOTO	_00185_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1-  992     _00184_DS_:
                                    1-  993     	.line	222, "main.c"; 	if(count10ms == 4)
                                    1-  994     	BANKSEL	_count10ms
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1-  995     	MOVR	_count10ms,W
     0088 2404                      1-  996     	XORIA	0x04
     0089 0903                      1-  997     	BTRSS	STATUS,2
                                    1-  998     	MGOTO	_00185_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  999     	.line	223, "main.c"; 	sendFlag = 1;
     008B 2101                      1- 1000     	MOVIA	0x01
                                    1- 1001     	BANKSEL	_sendFlag
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 1002     	MOVAR	_sendFlag
                                    1- 1003     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1004     ;;unsigned compare: left >= lit (0x5=5), size=1
     008E                           1- 1005     _00185_DS_:
                                    1- 1006     	.line	227, "main.c"; 	if(count10ms > 4)
     008E 2105                      1- 1007     	MOVIA	0x05
                                    1- 1008     	BANKSEL	_count10ms
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 1009     	SUBAR	_count10ms,W
     0091 0803                      1- 1010     	BTRSS	STATUS,0
                                    1- 1011     	MGOTO	_00187_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1012     	.line	229, "main.c"; 	PORTA &= 0xBF;
                                    1- 1013     	BANKSEL	_PORTA
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 1Frr                      1- 1014     	BCR	_PORTA,6
                                    1- 1015     	MGOTO	_00198_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 1016     _00187_DS_:
                                    1- 1017     	.line	233, "main.c"; 	PORTA |= 0x40;
                                    1- 1018     	BANKSEL	_PORTA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 1Brr                      1- 1019     	BSR	_PORTA,6
                                    1- 1020     	MGOTO	_00198_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
     0099                           1- 1021     _00194_DS_:
                                    1- 1022     	.line	241, "main.c"; 	PORTA &= 0xBF;
                                    1- 1023     	BANKSEL	_PORTA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 1Frr                      1- 1024     	BCR	_PORTA,6
                                    1- 1025     	.line	242, "main.c"; 	sendFlag = 0;
                                    1- 1026     	BANKSEL	_sendFlag
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 02rr                      1- 1027     	CLRR	_sendFlag
     009D                           1- 1028     _00198_DS_:
                                    1- 1029     	.line	244, "main.c"; 	if(++count10ms >= 8)
                                    1- 1030     	BANKSEL	_count10ms
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 05rr                      1- 1031     	INCR	_count10ms,F
                                    1- 1032     ;;unsigned compare: left < lit (0x8=8), size=1
     009F 2108                      1- 1033     	MOVIA	0x08
     00A0 04rr                      1- 1034     	SUBAR	_count10ms,W
     00A1 0803                      1- 1035     	BTRSS	STATUS,0
                                    1- 1036     	MGOTO	_00218_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1037     	.line	246, "main.c"; 	count10ms = 0;
     00A3 02rr                      1- 1038     	CLRR	_count10ms
                                    1- 1039     	.line	247, "main.c"; 	keyCtr();
                                    1- 1040     	MCALL	_keyCtr
     00A4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1041     	.line	248, "main.c"; 	if(++checkBatTime >= 200)
                                    1- 1042     	BANKSEL	_checkBatTime
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 05rr                      1- 1043     	INCR	_checkBatTime,F
                                    1- 1044     ;;unsigned compare: left < lit (0xC8=200), size=1
     00A7 21C8                      1- 1045     	MOVIA	0xc8
     00A8 04rr                      1- 1046     	SUBAR	_checkBatTime,W
     00A9 0803                      1- 1047     	BTRSS	STATUS,0
                                    1- 1048     	MGOTO	_00202_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1049     	.line	250, "main.c"; 	checkBatTime = 0;
     00AB 02rr                      1- 1050     	CLRR	_checkBatTime
                                    1- 1051     	.line	251, "main.c"; 	if(workTime == 0)
                                    1- 1052     	BANKSEL	_workTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1053     	MOVR	_workTime,W
     00AE 11rr                      1- 1054     	IORAR	(_workTime + 1),W
     00AF 0D03                      1- 1055     	BTRSC	STATUS,2
                                    1- 1056     	.line	252, "main.c"; 	checkBat();
                                    1- 1057     	MCALL	_checkBat
     00B0 2rrr                      3-   66 m1      LCALL rom_address
     00B1                           1- 1058     _00202_DS_:
                                    1- 1059     	.line	254, "main.c"; 	chrgCtr();
                                    1- 1060     	MCALL	_chrgCtr
     00B1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1061     	.line	256, "main.c"; 	if((0x20 & ~PORTA) && keyCount == 0 && pwFlag == 0 && stepShowTime == 0 && pwShowTime == 0 && offShowTime == 0 && startTime == 0)
                                    1- 1062     	BANKSEL	_PORTA
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 1063     	MOVR	_PORTA,W
                                    1- 1064     	BANKSEL	r0x1056
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 1065     	MOVAR	r0x1056
                                    1- 1066     	BANKSEL	r0x1057
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 02rr                      1- 1067     	CLRR	r0x1057
                                    1- 1068     	BANKSEL	r0x1056
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 07rr                      1- 1069     	COMR	r0x1056,W
     00BA 00rr                      1- 1070     	MOVAR	r0x1056
                                    1- 1071     	BANKSEL	r0x1057
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 07rr                      1- 1072     	COMR	r0x1057,W
     00BD 00rr                      1- 1073     	MOVAR	r0x1057
                                    1- 1074     	BANKSEL	r0x1056
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 0Arr                      1- 1075     	BTRSS	r0x1056,5
                                    1- 1076     	MGOTO	_00206_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1077     	BANKSEL	_keyCount
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 1078     	MOVR	_keyCount,W
     00C3 0903                      1- 1079     	BTRSS	STATUS,2
                                    1- 1080     	MGOTO	_00206_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1081     	BANKSEL	_pwFlag
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1082     	MOVR	_pwFlag,W
     00C7 0903                      1- 1083     	BTRSS	STATUS,2
                                    1- 1084     	MGOTO	_00206_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1085     	BANKSEL	_stepShowTime
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 1086     	MOVR	_stepShowTime,W
     00CB 0903                      1- 1087     	BTRSS	STATUS,2
                                    1- 1088     	MGOTO	_00206_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1089     	BANKSEL	_pwShowTime
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 01rr                      1- 1090     	MOVR	_pwShowTime,W
     00CF 0903                      1- 1091     	BTRSS	STATUS,2
                                    1- 1092     	MGOTO	_00206_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1093     	BANKSEL	_offShowTime
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 1094     	MOVR	_offShowTime,W
     00D3 0903                      1- 1095     	BTRSS	STATUS,2
                                    1- 1096     	MGOTO	_00206_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1097     	BANKSEL	_startTime
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 1098     	MOVR	_startTime,W
     00D7 0903                      1- 1099     	BTRSS	STATUS,2
                                    1- 1100     	MGOTO	_00206_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1101     	.line	259, "main.c"; 	if(++sleepTime > 100)
                                    1- 1102     	BANKSEL	_sleepTime
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 05rr                      1- 1103     	INCR	_sleepTime,F
                                    1- 1104     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1105     ;;unsigned compare: left >= lit (0x65=101), size=1
     00DB 2165                      1- 1106     	MOVIA	0x65
     00DC 04rr                      1- 1107     	SUBAR	_sleepTime,W
     00DD 0C03                      1- 1108     	BTRSC	STATUS,0
                                    1- 1109     	.line	260, "main.c"; 	gotoSleep();
                                    1- 1110     	MCALL	_gotoSleep
     00DE 2rrr                      3-   66 m1      LCALL rom_address
     00DF                           1- 1111     _00206_DS_:
                                    1- 1112     	.line	262, "main.c"; 	if(sleepFlag)
                                    1- 1113     	BANKSEL	_sleepFlag
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1114     	MOVR	_sleepFlag,W
     00E1 0903                      1- 1115     	BTRSS	STATUS,2
                                    1- 1116     	.line	264, "main.c"; 	gotoSleep();
                                    1- 1117     	MCALL	_gotoSleep
     00E2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1118     	.line	266, "main.c"; 	delay(100);
     00E3 2164                      1- 1119     	MOVIA	0x64
                                    1- 1120     	MCALL	_delay
     00E4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1121     	MGOTO	_00218_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1122     	.line	269, "main.c"; 	}
                                    1- 1123     	RETURN	
     00E6 0010                      3-   40 m1      ret
                                    1- 1124     ; exit point of _main
                                    1- 1126     ;***
                                    1- 1127     ;  pBlock Stats: dbName = C
                                    1- 1128     ;***
                                    1- 1129     ;has an exit
                                    1- 1130     ;2 compiler assigned registers:
                                    1- 1131     ;   r0x103D
                                    1- 1132     ;   r0x103E
                                    1- 1133     ;; Starting pCode block
                                    1- 1134     .segment "code"; module=main, function=_delay
                                    1- 1136     ;local variable name mapping:
     0000                           1- 1139     _delay:
                                    1- 1140     ; 2 exit points
                                    1- 1141     	.line	825, "main.c"; 	void delay(u8t count)
                                    1- 1142     	BANKSEL	r0x103D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1143     	MOVAR	r0x103D
                                    1- 1144     	.line	828, "main.c"; 	for(i=1;i<=count;i++)
     0002 2101                      1- 1145     	MOVIA	0x01
                                    1- 1146     	BANKSEL	r0x103E
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1147     	MOVAR	r0x103E
     0005                           1- 1148     _00673_DS_:
                                    1- 1149     	BANKSEL	r0x103E
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1150     	MOVR	r0x103E,W
                                    1- 1151     	BANKSEL	r0x103D
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1152     	SUBAR	r0x103D,W
     0009 0803                      1- 1153     	BTRSS	STATUS,0
                                    1- 1154     	MGOTO	_00675_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1155     	BANKSEL	r0x103E
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1156     	INCR	r0x103E,F
                                    1- 1157     	MGOTO	_00673_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1158     _00675_DS_:
                                    1- 1159     	.line	830, "main.c"; 	}
                                    1- 1160     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1161     ; exit point of _delay
                                    1- 1163     ;***
                                    1- 1164     ;  pBlock Stats: dbName = C
                                    1- 1165     ;***
                                    1- 1166     ;has an exit
                                    1- 1167     ;; Starting pCode block
                                    1- 1168     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1170     _F_wait_eoc:
                                    1- 1171     ; 2 exit points
     0000                           1- 1172     _00666_DS_:
                                    1- 1173     	.line	821, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1174     	BTRSS	_ADMDbits,5
                                    1- 1175     	MGOTO	_00666_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1176     	.line	823, "main.c"; 	}
                                    1- 1177     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1178     ; exit point of _F_wait_eoc
                                    1- 1180     ;***
                                    1- 1181     ;  pBlock Stats: dbName = C
                                    1- 1182     ;***
                                    1- 1183     ;has an exit
                                    1- 1184     ;functions called:
                                    1- 1185     ;   _F_wait_eoc
                                    1- 1186     ;   _F_wait_eoc
                                    1- 1187     ;6 compiler assigned registers:
                                    1- 1188     ;   r0x103F
                                    1- 1189     ;   r0x1040
                                    1- 1190     ;   r0x1041
                                    1- 1191     ;   r0x1042
                                    1- 1192     ;   r0x1043
                                    1- 1193     ;   r0x1044
                                    1- 1194     ;; Starting pCode block
                                    1- 1195     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1197     ;local variable name mapping:
     0000                           1- 1200     _F_Quarter_VDD_Convert:
                                    1- 1201     ; 2 exit points
                                    1- 1202     	.line	806, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1203     	BANKSEL	r0x103F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1204     	MOVAR	r0x103F
                                    1- 1205     	.line	809, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1- 1206     	MOVIA	0x9b
     0003 00rr                      1- 1207     	MOVAR	_ADMD
                                    1- 1208     	.line	810, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1209     	MOVIA	0x01
                                    1- 1210     	BANKSEL	r0x1040
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1211     	MOVAR	r0x1040
     0007                           1- 1212     _00659_DS_:
                                    1- 1213     	BANKSEL	r0x1040
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1214     	MOVR	r0x1040,W
                                    1- 1215     	BANKSEL	r0x103F
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1216     	SUBAR	r0x103F,W
     000B 0803                      1- 1217     	BTRSS	STATUS,0
                                    1- 1218     	MGOTO	_00661_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1219     	.line	812, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1220     	BSR	_ADMDbits,6
                                    1- 1221     	.line	813, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1- 1222     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1223     	.line	814, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1224     	MOVIA	0x0f
     0010 10rr                      1- 1225     	ANDAR	_ADR,W
                                    1- 1226     ;;3	MOVAR	r0x1041
                                    1- 1227     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1228     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1229     	.line	815, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1- 1230     	MOVR	_ADD,W
                                    1- 1231     	BANKSEL	r0x1041
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1232     	MOVAR	r0x1041
                                    1- 1233     ;;1	CLRR	r0x1042
                                    1- 1234     ;;101	MOVR	r0x1041,W
                                    1- 1235     ;;99	MOVAR	r0x1043
     0016 2100                      1- 1236     	MOVIA	0x00
                                    1- 1237     	BANKSEL	r0x1044
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1238     	MOVAR	r0x1044
                                    1- 1239     ;;100	MOVR	r0x1043,W
                                    1- 1240     	BANKSEL	r0x1041
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1241     	MOVR	r0x1041,W
                                    1- 1242     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1243     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1244     	BANKSEL	r0x1044
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1245     	MOVR	r0x1044,W
     001F 0C03                      1- 1246     	BTRSC	STATUS,0
     0020 05rr                      1- 1247     	INCR	r0x1044,W
     0021 0D03                      1- 1248     	BTRSC	STATUS,2
                                    1- 1249     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1250     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1251     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1- 1252     _00001_DS_:
                                    1- 1253     	.line	810, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1254     	BANKSEL	r0x1040
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1255     	INCR	r0x1040,F
                                    1- 1256     	MGOTO	_00659_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1257     _00661_DS_:
                                    1- 1258     	.line	817, "main.c"; 	}
                                    1- 1259     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1260     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1262     ;***
                                    1- 1263     ;  pBlock Stats: dbName = C
                                    1- 1264     ;***
                                    1- 1265     ;has an exit
                                    1- 1266     ;functions called:
                                    1- 1267     ;   _F_Quarter_VDD_Convert
                                    1- 1268     ;   _F_Quarter_VDD_Convert
                                    1- 1269     ;6 compiler assigned registers:
                                    1- 1270     ;   r0x1045
                                    1- 1271     ;   r0x1046
                                    1- 1272     ;   r0x1047
                                    1- 1273     ;   r0x1048
                                    1- 1274     ;   r0x1049
                                    1- 1275     ;   r0x104A
                                    1- 1276     ;; Starting pCode block
                                    1- 1277     .segment "code"; module=main, function=_checkBat
                                    1- 1279     ;local variable name mapping:
     0000                           1- 1282     _checkBat:
                                    1- 1283     ; 2 exit points
                                    1- 1284     	.line	680, "main.c"; 	R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;
                                    1- 1285     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1286     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 1287     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1288     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 1289     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 1290     	.line	681, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 1291     	MOVIA	0x08
                                    1- 1292     	MCALL	_F_Quarter_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1293     	.line	682, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 1294     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1295     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 1296     	ANDIA	0xf0
     000A 00rr                      1- 1297     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 1298     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 1299     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 1300     	ANDIA	0x0f
     000E 11rr                      1- 1301     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 1302     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 1303     	.line	683, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 1304     	MOVIA	0xf0
                                    1- 1305     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1306     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1307     	.line	684, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 1308     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 1309     	BANKSEL	r0x1047
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1310     	MOVAR	r0x1047
                                    1- 1311     	BANKSEL	r0x1045
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1312     	MOVAR	r0x1045
                                    1- 1313     	BANKSEL	r0x1046
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1314     	CLRR	r0x1046
                                    1- 1315     ;;102	MOVR	r0x1045,W
     001A 2100                      1- 1316     	MOVIA	0x00
                                    1- 1317     	BANKSEL	r0x1048
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1318     	MOVAR	r0x1048
                                    1- 1319     	BANKSEL	r0x1047
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1320     	MOVR	r0x1047,W
                                    1- 1321     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1322     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1323     	BANKSEL	r0x1048
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1324     	MOVR	r0x1048,W
     0023 0C03                      1- 1325     	BTRSC	STATUS,0
     0024 05rr                      1- 1326     	INCR	r0x1048,W
     0025 0D03                      1- 1327     	BTRSC	STATUS,2
                                    1- 1328     	MGOTO	_00002_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1329     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1330     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 1331     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1332     _00002_DS_:
                                    1- 1333     	.line	685, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0029 1C03                      1- 1334     	BCR	STATUS,0
                                    1- 1335     	BANKSEL	_R_Quarter_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1336     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002C 13rr                      1- 1337     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1338     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1339     	BCR	STATUS,0
     002E 13rr                      1- 1340     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002F 13rr                      1- 1341     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1342     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1343     	BCR	STATUS,0
     0031 13rr                      1- 1344     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0032 13rr                      1- 1345     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 1346     ;;unsigned compare: left < lit (0x5AA=1450), size=2
                                    1- 1347     	.line	696, "main.c"; 	if(R_Quarter_VDD_DATA < 1450)
     0033 2105                      1- 1348     	MOVIA	0x05
     0034 04rr                      1- 1349     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0035 0903                      1- 1350     	BTRSS	STATUS,2
                                    1- 1351     	MGOTO	_00637_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21AA                      1- 1352     	MOVIA	0xaa
     0038 04rr                      1- 1353     	SUBAR	_R_Quarter_VDD_DATA,W
     0039                           1- 1354     _00637_DS_:
     0039 0C03                      1- 1355     	BTRSC	STATUS,0
                                    1- 1356     	MGOTO	_00571_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1357     	.line	698, "main.c"; 	pwStep = 0;
                                    1- 1358     	BANKSEL	_pwStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 1359     	CLRR	_pwStep
                                    1- 1360     	.line	699, "main.c"; 	fullTime = 0;
                                    1- 1361     	BANKSEL	_fullTime
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1- 1362     	CLRR	_fullTime
                                    1- 1363     	.line	700, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 1364     	BANKSEL	_PORTA
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 0Err                      1- 1365     	BTRSC	_PORTA,5
                                    1- 1366     	MGOTO	_00572_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1367     	.line	702, "main.c"; 	pwFlag = 0;		//关机
                                    1- 1368     	BANKSEL	_pwFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 02rr                      1- 1369     	CLRR	_pwFlag
                                    1- 1370     	.line	703, "main.c"; 	workStep = 0;
                                    1- 1371     	BANKSEL	_workStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 02rr                      1- 1372     	CLRR	_workStep
                                    1- 1373     	.line	704, "main.c"; 	pwShowTime = 0;
                                    1- 1374     	BANKSEL	_pwShowTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 02rr                      1- 1375     	CLRR	_pwShowTime
                                    1- 1376     	.line	705, "main.c"; 	stepShowTime = 0;
                                    1- 1377     	BANKSEL	_stepShowTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1378     	CLRR	_stepShowTime
                                    1- 1379     	.line	706, "main.c"; 	offShowTime = 0;
                                    1- 1380     	BANKSEL	_offShowTime
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 02rr                      1- 1381     	CLRR	_offShowTime
                                    1- 1382     	MGOTO	_00572_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1- 1383     _00571_DS_:
                                    1- 1384     	.line	711, "main.c"; 	u16t tempValue = 0;
                                    1- 1385     	BANKSEL	r0x1045
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1- 1386     	CLRR	r0x1045
                                    1- 1387     	BANKSEL	r0x1046
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1- 1388     	CLRR	r0x1046
                                    1- 1389     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1390     ;;unsigned compare: left >= lit (0x847=2119), size=2
                                    1- 1391     	.line	712, "main.c"; 	if(R_Quarter_VDD_DATA > 2118)
     0051 2108                      1- 1392     	MOVIA	0x08
                                    1- 1393     	BANKSEL	_R_Quarter_VDD_DATA
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 1394     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0054 0903                      1- 1395     	BTRSS	STATUS,2
                                    1- 1396     	MGOTO	_00638_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 2147                      1- 1397     	MOVIA	0x47
     0057 04rr                      1- 1398     	SUBAR	_R_Quarter_VDD_DATA,W
     0058                           1- 1399     _00638_DS_:
     0058 0803                      1- 1400     	BTRSS	STATUS,0
                                    1- 1401     	MGOTO	_00540_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1402     	.line	714, "main.c"; 	fullFlag = 1;
     005A 2101                      1- 1403     	MOVIA	0x01
                                    1- 1404     	BANKSEL	_fullFlag
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1405     	MOVAR	_fullFlag
                                    1- 1406     	.line	716, "main.c"; 	tempValue = 120;
     005D 2178                      1- 1407     	MOVIA	0x78
                                    1- 1408     	BANKSEL	r0x1045
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 1409     	MOVAR	r0x1045
                                    1- 1410     	BANKSEL	r0x1046
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1411     	CLRR	r0x1046
                                    1- 1412     	MGOTO	_00541_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1413     ;;unsigned compare: left < lit (0x834=2100), size=2
     0063                           1- 1414     _00540_DS_:
                                    1- 1415     	.line	718, "main.c"; 	else if(R_Quarter_VDD_DATA >= 2100)
     0063 2108                      1- 1416     	MOVIA	0x08
                                    1- 1417     	BANKSEL	_R_Quarter_VDD_DATA
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 1418     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0066 0903                      1- 1419     	BTRSS	STATUS,2
                                    1- 1420     	MGOTO	_00639_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 2134                      1- 1421     	MOVIA	0x34
     0069 04rr                      1- 1422     	SUBAR	_R_Quarter_VDD_DATA,W
     006A                           1- 1423     _00639_DS_:
     006A 0803                      1- 1424     	BTRSS	STATUS,0
                                    1- 1425     	MGOTO	_00537_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1426     	.line	720, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 2100) + 100;
     006C 2130                      1- 1427     	MOVIA	0x30
                                    1- 1428     	BANKSEL	_R_Quarter_VDD_DATA
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 03rr                      1- 1429     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1430     	BANKSEL	r0x1045
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 1431     	MOVAR	r0x1045
     0071 21F8                      1- 1432     	MOVIA	0xf8
                                    1- 1433     	BANKSEL	r0x1046
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1434     	MOVAR	r0x1046
                                    1- 1435     	BANKSEL	_R_Quarter_VDD_DATA
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 1436     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0076 0C03                      1- 1437     	BTRSC	STATUS,0
     0077 05rr                      1- 1438     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0078 0D03                      1- 1439     	BTRSC	STATUS,2
                                    1- 1440     	MGOTO	_00003_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1441     	BANKSEL	r0x1046
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 03rr                      1- 1442     	ADDAR	r0x1046,F
     007C                           1- 1443     _00003_DS_:
                                    1- 1444     	MGOTO	_00541_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1445     ;;unsigned compare: left < lit (0x7E4=2020), size=2
     007D                           1- 1446     _00537_DS_:
                                    1- 1447     	.line	722, "main.c"; 	else if(R_Quarter_VDD_DATA >= 2020)
     007D 2107                      1- 1448     	MOVIA	0x07
                                    1- 1449     	BANKSEL	_R_Quarter_VDD_DATA
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 04rr                      1- 1450     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0080 0903                      1- 1451     	BTRSS	STATUS,2
                                    1- 1452     	MGOTO	_00640_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
     0082 21E4                      1- 1453     	MOVIA	0xe4
     0083 04rr                      1- 1454     	SUBAR	_R_Quarter_VDD_DATA,W
     0084                           1- 1455     _00640_DS_:
     0084 0803                      1- 1456     	BTRSS	STATUS,0
                                    1- 1457     	MGOTO	_00534_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1458     	.line	724, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 2020)/2) + 60;
     0086 211C                      1- 1459     	MOVIA	0x1c
                                    1- 1460     	BANKSEL	_R_Quarter_VDD_DATA
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 03rr                      1- 1461     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1462     	BANKSEL	r0x1047
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 1463     	MOVAR	r0x1047
     008B 21F8                      1- 1464     	MOVIA	0xf8
                                    1- 1465     	BANKSEL	r0x1048
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 1466     	MOVAR	r0x1048
                                    1- 1467     	BANKSEL	_R_Quarter_VDD_DATA
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 01rr                      1- 1468     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     0090 0C03                      1- 1469     	BTRSC	STATUS,0
     0091 05rr                      1- 1470     	INCR	(_R_Quarter_VDD_DATA + 1),W
     0092 0D03                      1- 1471     	BTRSC	STATUS,2
                                    1- 1472     	MGOTO	_00004_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1473     	BANKSEL	r0x1048
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 03rr                      1- 1474     	ADDAR	r0x1048,F
                                    1- 1475     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=0, offr=0
     0096                           1- 1476     _00004_DS_:
     0096 1C03                      1- 1477     	BCR	STATUS,0
                                    1- 1478     	BANKSEL	r0x1048
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 13rr                      1- 1479     	RRR	r0x1048,W
                                    1- 1480     	BANKSEL	r0x1049
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 1481     	MOVAR	r0x1049
                                    1- 1482     	BANKSEL	r0x1047
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 13rr                      1- 1483     	RRR	r0x1047,W
                                    1- 1484     	BANKSEL	r0x104A
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 1485     	MOVAR	r0x104A
     009F 213C                      1- 1486     	MOVIA	0x3c
     00A0 03rr                      1- 1487     	ADDAR	r0x104A,W
                                    1- 1488     	BANKSEL	r0x1045
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 00rr                      1- 1489     	MOVAR	r0x1045
                                    1- 1490     	BANKSEL	r0x1046
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 02rr                      1- 1491     	CLRR	r0x1046
     00A5 14rr                      1- 1492     	RLR	r0x1046,F
                                    1- 1493     	BANKSEL	r0x1049
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1- 1494     	MOVR	r0x1049,W
                                    1- 1495     	BANKSEL	r0x1046
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 03rr                      1- 1496     	ADDAR	r0x1046,F
                                    1- 1497     	MGOTO	_00541_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1498     ;;unsigned compare: left < lit (0x75E=1886), size=2
     00AB                           1- 1499     _00534_DS_:
                                    1- 1500     	.line	726, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1886)
     00AB 2107                      1- 1501     	MOVIA	0x07
                                    1- 1502     	BANKSEL	_R_Quarter_VDD_DATA
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 04rr                      1- 1503     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00AE 0903                      1- 1504     	BTRSS	STATUS,2
                                    1- 1505     	MGOTO	_00641_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
     00B0 215E                      1- 1506     	MOVIA	0x5e
     00B1 04rr                      1- 1507     	SUBAR	_R_Quarter_VDD_DATA,W
     00B2                           1- 1508     _00641_DS_:
     00B2 0803                      1- 1509     	BTRSS	STATUS,0
                                    1- 1510     	MGOTO	_00531_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1511     	.line	728, "main.c"; 	tempValue = ((R_Quarter_VDD_DATA - 1886)/4) + 27;
     00B4 21A2                      1- 1512     	MOVIA	0xa2
                                    1- 1513     	BANKSEL	_R_Quarter_VDD_DATA
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 03rr                      1- 1514     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1515     	BANKSEL	r0x1047
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 1516     	MOVAR	r0x1047
     00B9 21F8                      1- 1517     	MOVIA	0xf8
                                    1- 1518     	BANKSEL	r0x1048
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 00rr                      1- 1519     	MOVAR	r0x1048
                                    1- 1520     	BANKSEL	_R_Quarter_VDD_DATA
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 1521     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00BE 0C03                      1- 1522     	BTRSC	STATUS,0
     00BF 05rr                      1- 1523     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00C0 0D03                      1- 1524     	BTRSC	STATUS,2
                                    1- 1525     	MGOTO	_00005_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1526     	BANKSEL	r0x1048
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 03rr                      1- 1527     	ADDAR	r0x1048,F
                                    1- 1528     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=0, offr=0
     00C4                           1- 1529     _00005_DS_:
     00C4 1C03                      1- 1530     	BCR	STATUS,0
                                    1- 1531     	BANKSEL	r0x1048
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 13rr                      1- 1532     	RRR	r0x1048,W
                                    1- 1533     	BANKSEL	r0x1049
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 1534     	MOVAR	r0x1049
                                    1- 1535     	BANKSEL	r0x1047
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 13rr                      1- 1536     	RRR	r0x1047,W
                                    1- 1537     	BANKSEL	r0x104A
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 00rr                      1- 1538     	MOVAR	r0x104A
                                    1- 1539     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     00CD 1C03                      1- 1540     	BCR	STATUS,0
                                    1- 1541     	BANKSEL	r0x1049
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 13rr                      1- 1542     	RRR	r0x1049,F
                                    1- 1543     	BANKSEL	r0x104A
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 13rr                      1- 1544     	RRR	r0x104A,F
     00D2 211B                      1- 1545     	MOVIA	0x1b
     00D3 03rr                      1- 1546     	ADDAR	r0x104A,W
                                    1- 1547     	BANKSEL	r0x1045
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 00rr                      1- 1548     	MOVAR	r0x1045
                                    1- 1549     	BANKSEL	r0x1046
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 1550     	CLRR	r0x1046
     00D8 14rr                      1- 1551     	RLR	r0x1046,F
                                    1- 1552     	BANKSEL	r0x1049
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 01rr                      1- 1553     	MOVR	r0x1049,W
                                    1- 1554     	BANKSEL	r0x1046
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 03rr                      1- 1555     	ADDAR	r0x1046,F
                                    1- 1556     	MGOTO	_00541_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1557     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     00DE                           1- 1558     _00531_DS_:
                                    1- 1559     	.line	730, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1450)
     00DE 2105                      1- 1560     	MOVIA	0x05
                                    1- 1561     	BANKSEL	_R_Quarter_VDD_DATA
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 04rr                      1- 1562     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     00E1 0903                      1- 1563     	BTRSS	STATUS,2
                                    1- 1564     	MGOTO	_00642_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
     00E3 21AA                      1- 1565     	MOVIA	0xaa
     00E4 04rr                      1- 1566     	SUBAR	_R_Quarter_VDD_DATA,W
     00E5                           1- 1567     _00642_DS_:
     00E5 0803                      1- 1568     	BTRSS	STATUS,0
                                    1- 1569     	MGOTO	_00541_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1570     	.line	732, "main.c"; 	tempValue = (R_Quarter_VDD_DATA - 1450)/16;
     00E7 2156                      1- 1571     	MOVIA	0x56
                                    1- 1572     	BANKSEL	_R_Quarter_VDD_DATA
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 03rr                      1- 1573     	ADDAR	_R_Quarter_VDD_DATA,W
                                    1- 1574     	BANKSEL	r0x1047
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 00rr                      1- 1575     	MOVAR	r0x1047
     00EC 21FA                      1- 1576     	MOVIA	0xfa
                                    1- 1577     	BANKSEL	r0x1048
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 1578     	MOVAR	r0x1048
                                    1- 1579     	BANKSEL	_R_Quarter_VDD_DATA
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 01rr                      1- 1580     	MOVR	(_R_Quarter_VDD_DATA + 1),W
     00F1 0C03                      1- 1581     	BTRSC	STATUS,0
     00F2 05rr                      1- 1582     	INCR	(_R_Quarter_VDD_DATA + 1),W
     00F3 0D03                      1- 1583     	BTRSC	STATUS,2
                                    1- 1584     	MGOTO	_00006_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1585     	BANKSEL	r0x1048
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 03rr                      1- 1586     	ADDAR	r0x1048,F
     00F7                           1- 1587     _00006_DS_:
                                    1- 1588     	BANKSEL	r0x1047
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 15rr                      1- 1589     	SWAPR	r0x1047,W
     00F9 220F                      1- 1590     	ANDIA	0x0f
                                    1- 1591     	BANKSEL	r0x1045
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 00rr                      1- 1592     	MOVAR	r0x1045
                                    1- 1593     	BANKSEL	r0x1048
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 15rr                      1- 1594     	SWAPR	r0x1048,W
                                    1- 1595     	BANKSEL	r0x1046
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 00rr                      1- 1596     	MOVAR	r0x1046
     0100 22F0                      1- 1597     	ANDIA	0xf0
                                    1- 1598     	BANKSEL	r0x1045
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 11rr                      1- 1599     	IORAR	r0x1045,F
                                    1- 1600     	BANKSEL	r0x1046
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 12rr                      1- 1601     	XORAR	r0x1046,F
     0105                           1- 1602     _00541_DS_:
                                    1- 1603     	.line	735, "main.c"; 	if((0x20 & PORTA) > 0)
                                    1- 1604     	BANKSEL	_PORTA
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 0Arr                      1- 1605     	BTRSS	_PORTA,5
                                    1- 1606     	MGOTO	_00568_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1607     ;;unsigned compare: left < lit (0xF=15), size=2
                                    1- 1608     	.line	738, "main.c"; 	if(tempValue < 15)
     0108 2100                      1- 1609     	MOVIA	0x00
                                    1- 1610     	BANKSEL	r0x1046
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 04rr                      1- 1611     	SUBAR	r0x1046,W
     010B 0903                      1- 1612     	BTRSS	STATUS,2
                                    1- 1613     	MGOTO	_00643_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
     010D 210F                      1- 1614     	MOVIA	0x0f
                                    1- 1615     	BANKSEL	r0x1045
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 04rr                      1- 1616     	SUBAR	r0x1045,W
     0110                           1- 1617     _00643_DS_:
     0110 0C03                      1- 1618     	BTRSC	STATUS,0
                                    1- 1619     	MGOTO	_00551_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1620     	.line	740, "main.c"; 	tempValue = 1;
     0112 2101                      1- 1621     	MOVIA	0x01
                                    1- 1622     	BANKSEL	r0x1045
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 00rr                      1- 1623     	MOVAR	r0x1045
                                    1- 1624     	BANKSEL	r0x1046
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 02rr                      1- 1625     	CLRR	r0x1046
                                    1- 1626     	MGOTO	_00009_DS_
     0117 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1627     ;;unsigned compare: left < lit (0x1E=30), size=2
     0118                           1- 1628     _00551_DS_:
                                    1- 1629     	.line	742, "main.c"; 	else if(tempValue < 30)
     0118 2100                      1- 1630     	MOVIA	0x00
                                    1- 1631     	BANKSEL	r0x1046
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 04rr                      1- 1632     	SUBAR	r0x1046,W
     011B 0903                      1- 1633     	BTRSS	STATUS,2
                                    1- 1634     	MGOTO	_00644_DS_
     011C 3rrr                      3-   63 m1      LGOTO rom_address
     011D 211E                      1- 1635     	MOVIA	0x1e
                                    1- 1636     	BANKSEL	r0x1045
     011E rrrr                      3-  110 m1      .banksel ram_address
     011F 04rr                      1- 1637     	SUBAR	r0x1045,W
     0120                           1- 1638     _00644_DS_:
     0120 0C03                      1- 1639     	BTRSC	STATUS,0
                                    1- 1640     	MGOTO	_00548_DS_
     0121 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1641     	.line	744, "main.c"; 	tempValue = tempValue - 16;
     0122 21F0                      1- 1642     	MOVIA	0xf0
                                    1- 1643     	BANKSEL	r0x1045
     0123 rrrr                      3-  110 m1      .banksel ram_address
     0124 03rr                      1- 1644     	ADDAR	r0x1045,F
     0125 0C03                      1- 1645     	BTRSC	STATUS,0
                                    1- 1646     	MGOTO	_00007_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1647     	BANKSEL	r0x1046
     0127 rrrr                      3-  110 m1      .banksel ram_address
     0128 06rr                      1- 1648     	DECR	r0x1046,F
     0129                           1- 1649     _00007_DS_:
                                    1- 1650     	MGOTO	_00009_DS_
     0129 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1651     ;;unsigned compare: left < lit (0x28=40), size=2
     012A                           1- 1652     _00548_DS_:
                                    1- 1653     	.line	746, "main.c"; 	else if(tempValue < 40)
     012A 2100                      1- 1654     	MOVIA	0x00
                                    1- 1655     	BANKSEL	r0x1046
     012B rrrr                      3-  110 m1      .banksel ram_address
     012C 04rr                      1- 1656     	SUBAR	r0x1046,W
     012D 0903                      1- 1657     	BTRSS	STATUS,2
                                    1- 1658     	MGOTO	_00645_DS_
     012E 3rrr                      3-   63 m1      LGOTO rom_address
     012F 2128                      1- 1659     	MOVIA	0x28
                                    1- 1660     	BANKSEL	r0x1045
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 04rr                      1- 1661     	SUBAR	r0x1045,W
     0132                           1- 1662     _00645_DS_:
     0132 0C03                      1- 1663     	BTRSC	STATUS,0
                                    1- 1664     	MGOTO	_00545_DS_
     0133 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1665     	.line	748, "main.c"; 	tempValue = tempValue - 17;
     0134 21EF                      1- 1666     	MOVIA	0xef
                                    1- 1667     	BANKSEL	r0x1045
     0135 rrrr                      3-  110 m1      .banksel ram_address
     0136 03rr                      1- 1668     	ADDAR	r0x1045,F
     0137 0C03                      1- 1669     	BTRSC	STATUS,0
                                    1- 1670     	MGOTO	_00008_DS_
     0138 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1671     	BANKSEL	r0x1046
     0139 rrrr                      3-  110 m1      .banksel ram_address
     013A 06rr                      1- 1672     	DECR	r0x1046,F
     013B                           1- 1673     _00008_DS_:
                                    1- 1674     	MGOTO	_00009_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1675     ;;unsigned compare: left < lit (0x78=120), size=2
     013C                           1- 1676     _00545_DS_:
                                    1- 1677     	.line	750, "main.c"; 	else if(tempValue < 120)
     013C 2100                      1- 1678     	MOVIA	0x00
                                    1- 1679     	BANKSEL	r0x1046
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 04rr                      1- 1680     	SUBAR	r0x1046,W
     013F 0903                      1- 1681     	BTRSS	STATUS,2
                                    1- 1682     	MGOTO	_00646_DS_
     0140 3rrr                      3-   63 m1      LGOTO rom_address
     0141 2178                      1- 1683     	MOVIA	0x78
                                    1- 1684     	BANKSEL	r0x1045
     0142 rrrr                      3-  110 m1      .banksel ram_address
     0143 04rr                      1- 1685     	SUBAR	r0x1045,W
     0144                           1- 1686     _00646_DS_:
     0144 0C03                      1- 1687     	BTRSC	STATUS,0
                                    1- 1688     	MGOTO	_00009_DS_
     0145 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1689     	.line	752, "main.c"; 	tempValue = tempValue - 18;
     0146 21EE                      1- 1690     	MOVIA	0xee
                                    1- 1691     	BANKSEL	r0x1045
     0147 rrrr                      3-  110 m1      .banksel ram_address
     0148 03rr                      1- 1692     	ADDAR	r0x1045,F
     0149 0C03                      1- 1693     	BTRSC	STATUS,0
                                    1- 1694     	MGOTO	_00009_DS_
     014A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1695     	BANKSEL	r0x1046
     014B rrrr                      3-  110 m1      .banksel ram_address
     014C 06rr                      1- 1696     	DECR	r0x1046,F
     014D                           1- 1697     _00009_DS_:
                                    1- 1698     	.line	755, "main.c"; 	if(pwStep < tempValue)
                                    1- 1699     	BANKSEL	_pwStep
     014D rrrr                      3-  110 m1      .banksel ram_address
     014E 01rr                      1- 1700     	MOVR	_pwStep,W
                                    1- 1701     	BANKSEL	r0x1047
     014F rrrr                      3-  110 m1      .banksel ram_address
     0150 00rr                      1- 1702     	MOVAR	r0x1047
                                    1- 1703     	BANKSEL	r0x1048
     0151 rrrr                      3-  110 m1      .banksel ram_address
     0152 02rr                      1- 1704     	CLRR	r0x1048
                                    1- 1705     	BANKSEL	r0x1046
     0153 rrrr                      3-  110 m1      .banksel ram_address
     0154 01rr                      1- 1706     	MOVR	r0x1046,W
                                    1- 1707     	BANKSEL	r0x1048
     0155 rrrr                      3-  110 m1      .banksel ram_address
     0156 04rr                      1- 1708     	SUBAR	r0x1048,W
     0157 0903                      1- 1709     	BTRSS	STATUS,2
                                    1- 1710     	MGOTO	_00647_DS_
     0158 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1711     	BANKSEL	r0x1045
     0159 rrrr                      3-  110 m1      .banksel ram_address
     015A 01rr                      1- 1712     	MOVR	r0x1045,W
                                    1- 1713     	BANKSEL	r0x1047
     015B rrrr                      3-  110 m1      .banksel ram_address
     015C 04rr                      1- 1714     	SUBAR	r0x1047,W
     015D                           1- 1715     _00647_DS_:
     015D 0C03                      1- 1716     	BTRSC	STATUS,0
                                    1- 1717     	MGOTO	_00556_DS_
     015E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1718     	.line	758, "main.c"; 	if(++count5s > 30)
                                    1- 1719     	BANKSEL	_count5s
     015F rrrr                      3-  110 m1      .banksel ram_address
     0160 05rr                      1- 1720     	INCR	_count5s,F
     0161 0D03                      1- 1721     	BTRSC	STATUS,2
     0162 05rr                      1- 1722     	INCR	(_count5s + 1),F
                                    1- 1723     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1724     ;;unsigned compare: left >= lit (0x1F=31), size=2
     0163 2100                      1- 1725     	MOVIA	0x00
     0164 04rr                      1- 1726     	SUBAR	(_count5s + 1),W
     0165 0903                      1- 1727     	BTRSS	STATUS,2
                                    1- 1728     	MGOTO	_00648_DS_
     0166 3rrr                      3-   63 m1      LGOTO rom_address
     0167 211F                      1- 1729     	MOVIA	0x1f
     0168 04rr                      1- 1730     	SUBAR	_count5s,W
     0169                           1- 1731     _00648_DS_:
     0169 0803                      1- 1732     	BTRSS	STATUS,0
                                    1- 1733     	MGOTO	_00556_DS_
     016A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1734     	.line	760, "main.c"; 	count5s = 0;
                                    1- 1735     	BANKSEL	_count5s
     016B rrrr                      3-  110 m1      .banksel ram_address
     016C 02rr                      1- 1736     	CLRR	_count5s
     016D 02rr                      1- 1737     	CLRR	(_count5s + 1)
                                    1- 1738     	.line	761, "main.c"; 	count10s = 0;
                                    1- 1739     	BANKSEL	_count10s
     016E rrrr                      3-  110 m1      .banksel ram_address
     016F 02rr                      1- 1740     	CLRR	_count10s
                                    1- 1741     	.line	762, "main.c"; 	pwStep++;
                                    1- 1742     	BANKSEL	_pwStep
     0170 rrrr                      3-  110 m1      .banksel ram_address
     0171 05rr                      1- 1743     	INCR	_pwStep,F
                                    1- 1744     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1745     ;;unsigned compare: left >= lit (0x80D=2061), size=2
     0172                           1- 1746     _00556_DS_:
                                    1- 1747     	.line	768, "main.c"; 	if(R_Quarter_VDD_DATA > 2060)
     0172 2108                      1- 1748     	MOVIA	0x08
                                    1- 1749     	BANKSEL	_R_Quarter_VDD_DATA
     0173 rrrr                      3-  110 m1      .banksel ram_address
     0174 04rr                      1- 1750     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0175 0903                      1- 1751     	BTRSS	STATUS,2
                                    1- 1752     	MGOTO	_00649_DS_
     0176 3rrr                      3-   63 m1      LGOTO rom_address
     0177 210D                      1- 1753     	MOVIA	0x0d
     0178 04rr                      1- 1754     	SUBAR	_R_Quarter_VDD_DATA,W
     0179                           1- 1755     _00649_DS_:
     0179 0803                      1- 1756     	BTRSS	STATUS,0
                                    1- 1757     	MGOTO	_00572_DS_
     017A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1758     	.line	770, "main.c"; 	if(++count10s > 60)
                                    1- 1759     	BANKSEL	_count10s
     017B rrrr                      3-  110 m1      .banksel ram_address
     017C 05rr                      1- 1760     	INCR	_count10s,F
                                    1- 1761     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1762     ;;unsigned compare: left >= lit (0x3D=61), size=1
     017D 213D                      1- 1763     	MOVIA	0x3d
     017E 04rr                      1- 1764     	SUBAR	_count10s,W
     017F 0803                      1- 1765     	BTRSS	STATUS,0
                                    1- 1766     	MGOTO	_00572_DS_
     0180 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1767     	.line	772, "main.c"; 	count10s = 0;
     0181 02rr                      1- 1768     	CLRR	_count10s
                                    1- 1769     	.line	773, "main.c"; 	pwStep++;
                                    1- 1770     	BANKSEL	_pwStep
     0182 rrrr                      3-  110 m1      .banksel ram_address
     0183 05rr                      1- 1771     	INCR	_pwStep,F
                                    1- 1772     	MGOTO	_00572_DS_
     0184 3rrr                      3-   63 m1      LGOTO rom_address
     0185                           1- 1773     _00568_DS_:
                                    1- 1774     	.line	779, "main.c"; 	if(pwStep == 0)
                                    1- 1775     	BANKSEL	_pwStep
     0185 rrrr                      3-  110 m1      .banksel ram_address
     0186 01rr                      1- 1776     	MOVR	_pwStep,W
     0187 0903                      1- 1777     	BTRSS	STATUS,2
                                    1- 1778     	MGOTO	_00562_DS_
     0188 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1779     	.line	781, "main.c"; 	pwStep = tempValue;
                                    1- 1780     	BANKSEL	r0x1045
     0189 rrrr                      3-  110 m1      .banksel ram_address
     018A 01rr                      1- 1781     	MOVR	r0x1045,W
                                    1- 1782     	BANKSEL	_pwStep
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 00rr                      1- 1783     	MOVAR	_pwStep
     018D                           1- 1784     _00562_DS_:
                                    1- 1785     	.line	783, "main.c"; 	if(pwStep > tempValue)
                                    1- 1786     	BANKSEL	_pwStep
     018D rrrr                      3-  110 m1      .banksel ram_address
     018E 01rr                      1- 1787     	MOVR	_pwStep,W
                                    1- 1788     	BANKSEL	r0x1047
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 00rr                      1- 1789     	MOVAR	r0x1047
                                    1- 1790     	BANKSEL	r0x1048
     0191 rrrr                      3-  110 m1      .banksel ram_address
     0192 02rr                      1- 1791     	CLRR	r0x1048
     0193 2100                      1- 1792     	MOVIA	0x00
                                    1- 1793     	BANKSEL	r0x1046
     0194 rrrr                      3-  110 m1      .banksel ram_address
     0195 04rr                      1- 1794     	SUBAR	r0x1046,W
     0196 0903                      1- 1795     	BTRSS	STATUS,2
                                    1- 1796     	MGOTO	_00651_DS_
     0197 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1797     	BANKSEL	r0x1047
     0198 rrrr                      3-  110 m1      .banksel ram_address
     0199 01rr                      1- 1798     	MOVR	r0x1047,W
                                    1- 1799     	BANKSEL	r0x1045
     019A rrrr                      3-  110 m1      .banksel ram_address
     019B 04rr                      1- 1800     	SUBAR	r0x1045,W
     019C                           1- 1801     _00651_DS_:
     019C 0C03                      1- 1802     	BTRSC	STATUS,0
                                    1- 1803     	MGOTO	_00572_DS_
     019D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1804     	.line	785, "main.c"; 	if(++count5s > 30)
                                    1- 1805     	BANKSEL	_count5s
     019E rrrr                      3-  110 m1      .banksel ram_address
     019F 05rr                      1- 1806     	INCR	_count5s,F
     01A0 0D03                      1- 1807     	BTRSC	STATUS,2
     01A1 05rr                      1- 1808     	INCR	(_count5s + 1),F
                                    1- 1809     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1810     ;;unsigned compare: left >= lit (0x1F=31), size=2
     01A2 2100                      1- 1811     	MOVIA	0x00
     01A3 04rr                      1- 1812     	SUBAR	(_count5s + 1),W
     01A4 0903                      1- 1813     	BTRSS	STATUS,2
                                    1- 1814     	MGOTO	_00652_DS_
     01A5 3rrr                      3-   63 m1      LGOTO rom_address
     01A6 211F                      1- 1815     	MOVIA	0x1f
     01A7 04rr                      1- 1816     	SUBAR	_count5s,W
     01A8                           1- 1817     _00652_DS_:
     01A8 0803                      1- 1818     	BTRSS	STATUS,0
                                    1- 1819     	MGOTO	_00572_DS_
     01A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1820     	.line	787, "main.c"; 	count5s = 0;
                                    1- 1821     	BANKSEL	_count5s
     01AA rrrr                      3-  110 m1      .banksel ram_address
     01AB 02rr                      1- 1822     	CLRR	_count5s
     01AC 02rr                      1- 1823     	CLRR	(_count5s + 1)
                                    1- 1824     	.line	788, "main.c"; 	pwStep--;
                                    1- 1825     	BANKSEL	_pwStep
     01AD rrrr                      3-  110 m1      .banksel ram_address
     01AE 06rr                      1- 1826     	DECR	_pwStep,F
                                    1- 1827     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1828     ;;unsigned compare: left >= lit (0x65=101), size=1
     01AF                           1- 1829     _00572_DS_:
                                    1- 1830     	.line	795, "main.c"; 	if(pwStep > 100)
     01AF 2165                      1- 1831     	MOVIA	0x65
                                    1- 1832     	BANKSEL	_pwStep
     01B0 rrrr                      3-  110 m1      .banksel ram_address
     01B1 04rr                      1- 1833     	SUBAR	_pwStep,W
     01B2 0803                      1- 1834     	BTRSS	STATUS,0
                                    1- 1835     	MGOTO	_00575_DS_
     01B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1836     	.line	797, "main.c"; 	pwStep = 100;
     01B4 2164                      1- 1837     	MOVIA	0x64
     01B5 00rr                      1- 1838     	MOVAR	_pwStep
     01B6                           1- 1839     _00575_DS_:
                                    1- 1840     	.line	802, "main.c"; 	}
                                    1- 1841     	RETURN	
     01B6 0010                      3-   40 m1      ret
                                    1- 1842     ; exit point of _checkBat
                                    1- 1844     ;***
                                    1- 1845     ;  pBlock Stats: dbName = C
                                    1- 1846     ;***
                                    1- 1847     ;has an exit
                                    1- 1848     ;functions called:
                                    1- 1849     ;   _delay
                                    1- 1850     ;   _delay
                                    1- 1851     ;; Starting pCode block
                                    1- 1852     .segment "code"; module=main, function=_initAD
     0000                           1- 1854     _initAD:
                                    1- 1855     ; 2 exit points
                                    1- 1856     	.line	652, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1857     	MOVIA	0x80
     0001 00rr                      1- 1858     	MOVAR	_ADMD
                                    1- 1859     	.line	657, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1860     	CLRR	_ADVREFH
                                    1- 1861     	.line	662, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1862     	MOVIA	0x10
     0004 00rr                      1- 1863     	MOVAR	_ADR
                                    1- 1864     	.line	666, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     0005 2103                      1- 1865     	MOVIA	0x03
     0006 00rr                      1- 1866     	MOVAR	_ADCR
                                    1- 1867     	.line	673, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1868     	BSR	_ADMDbits,4
                                    1- 1869     	.line	674, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2132                      1- 1870     	MOVIA	0x32
                                    1- 1871     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1872     	.line	675, "main.c"; 	}
                                    1- 1873     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1874     ; exit point of _initAD
                                    1- 1876     ;***
                                    1- 1877     ;  pBlock Stats: dbName = C
                                    1- 1878     ;***
                                    1- 1879     ;has an exit
                                    1- 1880     ;functions called:
                                    1- 1881     ;   _keyRead
                                    1- 1882     ;   _checkBat
                                    1- 1883     ;   _checkBat
                                    1- 1884     ;   _keyRead
                                    1- 1885     ;   _checkBat
                                    1- 1886     ;   _checkBat
                                    1- 1887     ;1 compiler assigned register :
                                    1- 1888     ;   r0x104C
                                    1- 1889     ;; Starting pCode block
                                    1- 1890     .segment "code"; module=main, function=_keyCtr
                                    1- 1892     ;local variable name mapping:
     0000                           1- 1894     _keyCtr:
                                    1- 1895     ; 2 exit points
                                    1- 1896     	.line	596, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 1897     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1898     	COMR	_PORTA,W
                                    1- 1899     	BANKSEL	r0x104C
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1900     	MOVAR	r0x104C
     0004 2180                      1- 1901     	MOVIA	0x80
     0005 10rr                      1- 1902     	ANDAR	r0x104C,F
     0006 01rr                      1- 1903     	MOVR	r0x104C,W
                                    1- 1904     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1905     	BANKSEL	r0x104C
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1906     	MOVAR	r0x104C
                                    1- 1907     	.line	597, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 1908     	XORIA	0x01
     000B 0903                      1- 1909     	BTRSS	STATUS,2
                                    1- 1910     	MGOTO	_00515_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1911     	.line	599, "main.c"; 	checkBat();
                                    1- 1912     	MCALL	_checkBat
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1913     	.line	600, "main.c"; 	if(pwFlag && pwStep > 0)
                                    1- 1914     	BANKSEL	_pwFlag
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1915     	MOVR	_pwFlag,W
     0010 0D03                      1- 1916     	BTRSC	STATUS,2
                                    1- 1917     	MGOTO	_00517_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1918     	BANKSEL	_pwStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1919     	MOVR	_pwStep,W
     0014 0D03                      1- 1920     	BTRSC	STATUS,2
                                    1- 1921     	MGOTO	_00517_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1922     	.line	602, "main.c"; 	if(showFlag == 0)
                                    1- 1923     	BANKSEL	_showFlag
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1924     	MOVR	_showFlag,W
     0018 0903                      1- 1925     	BTRSS	STATUS,2
                                    1- 1926     	MGOTO	_00500_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1927     	.line	605, "main.c"; 	pwShowTime = 3;
     001A 2103                      1- 1928     	MOVIA	0x03
                                    1- 1929     	BANKSEL	_pwShowTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1930     	MOVAR	_pwShowTime
                                    1- 1931     	.line	606, "main.c"; 	offShowTime = 0;
                                    1- 1932     	BANKSEL	_offShowTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 1933     	CLRR	_offShowTime
                                    1- 1934     	MGOTO	_00517_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1935     _00500_DS_:
                                    1- 1936     	.line	608, "main.c"; 	else if(stepShowTime == 0)
                                    1- 1937     	BANKSEL	_stepShowTime
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1938     	MOVR	_stepShowTime,W
     0022 0903                      1- 1939     	BTRSS	STATUS,2
                                    1- 1940     	MGOTO	_00497_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1941     	.line	610, "main.c"; 	pwShowTime = 0;
                                    1- 1942     	BANKSEL	_pwShowTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1943     	CLRR	_pwShowTime
                                    1- 1944     	.line	611, "main.c"; 	stepShowTime = 2;
     0026 2102                      1- 1945     	MOVIA	0x02
                                    1- 1946     	BANKSEL	_stepShowTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1947     	MOVAR	_stepShowTime
                                    1- 1948     	.line	612, "main.c"; 	offShowTime = 0;
                                    1- 1949     	BANKSEL	_offShowTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 1950     	CLRR	_offShowTime
                                    1- 1951     	MGOTO	_00517_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 1952     _00497_DS_:
                                    1- 1953     	.line	616, "main.c"; 	pwShowTime = 0;
                                    1- 1954     	BANKSEL	_pwShowTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1- 1955     	CLRR	_pwShowTime
                                    1- 1956     	.line	617, "main.c"; 	if(++workStep > 3)
                                    1- 1957     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1958     	INCR	_workStep,F
                                    1- 1959     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1960     ;;unsigned compare: left >= lit (0x4=4), size=1
     0030 2104                      1- 1961     	MOVIA	0x04
     0031 04rr                      1- 1962     	SUBAR	_workStep,W
     0032 0803                      1- 1963     	BTRSS	STATUS,0
                                    1- 1964     	MGOTO	_00495_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1965     	.line	618, "main.c"; 	workStep = 1;
     0034 2101                      1- 1966     	MOVIA	0x01
     0035 00rr                      1- 1967     	MOVAR	_workStep
     0036                           1- 1968     _00495_DS_:
                                    1- 1969     	.line	619, "main.c"; 	stepShowTime = 2;
     0036 2102                      1- 1970     	MOVIA	0x02
                                    1- 1971     	BANKSEL	_stepShowTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 1972     	MOVAR	_stepShowTime
                                    1- 1973     	.line	620, "main.c"; 	offShowTime = 0;
                                    1- 1974     	BANKSEL	_offShowTime
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1975     	CLRR	_offShowTime
                                    1- 1976     	MGOTO	_00517_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 1977     _00515_DS_:
                                    1- 1978     	.line	624, "main.c"; 	else if(kclick == 2)
                                    1- 1979     	BANKSEL	r0x104C
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 1980     	MOVR	r0x104C,W
     003E 2402                      1- 1981     	XORIA	0x02
     003F 0903                      1- 1982     	BTRSS	STATUS,2
                                    1- 1983     	MGOTO	_00517_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1984     	.line	626, "main.c"; 	checkBat();
                                    1- 1985     	MCALL	_checkBat
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1986     	.line	627, "main.c"; 	if(pwFlag)
                                    1- 1987     	BANKSEL	_pwFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 1988     	MOVR	_pwFlag,W
     0044 0D03                      1- 1989     	BTRSC	STATUS,2
                                    1- 1990     	MGOTO	_00510_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1991     	.line	629, "main.c"; 	pwFlag = 0;		//关机
     0046 02rr                      1- 1992     	CLRR	_pwFlag
                                    1- 1993     	.line	630, "main.c"; 	workStep = 0;
                                    1- 1994     	BANKSEL	_workStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1995     	CLRR	_workStep
                                    1- 1996     	.line	631, "main.c"; 	pwShowTime = 0;
                                    1- 1997     	BANKSEL	_pwShowTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 1998     	CLRR	_pwShowTime
                                    1- 1999     	.line	632, "main.c"; 	stepShowTime = 0;
                                    1- 2000     	BANKSEL	_stepShowTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2001     	CLRR	_stepShowTime
                                    1- 2002     	.line	633, "main.c"; 	offShowTime = 5;
     004D 2105                      1- 2003     	MOVIA	0x05
                                    1- 2004     	BANKSEL	_offShowTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 2005     	MOVAR	_offShowTime
                                    1- 2006     	MGOTO	_00517_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 2007     _00510_DS_:
                                    1- 2008     	.line	635, "main.c"; 	else if(pwStep > 0)
                                    1- 2009     	BANKSEL	_pwStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2010     	MOVR	_pwStep,W
     0053 0D03                      1- 2011     	BTRSC	STATUS,2
                                    1- 2012     	MGOTO	_00517_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2013     	.line	638, "main.c"; 	pwFlag = 1;		//开机
     0055 2101                      1- 2014     	MOVIA	0x01
                                    1- 2015     	BANKSEL	_pwFlag
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 2016     	MOVAR	_pwFlag
                                    1- 2017     	.line	639, "main.c"; 	pwShowTime = 3;
     0058 2103                      1- 2018     	MOVIA	0x03
                                    1- 2019     	BANKSEL	_pwShowTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 2020     	MOVAR	_pwShowTime
                                    1- 2021     	.line	640, "main.c"; 	stepShowTime = 2;
     005B 2102                      1- 2022     	MOVIA	0x02
                                    1- 2023     	BANKSEL	_stepShowTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 2024     	MOVAR	_stepShowTime
                                    1- 2025     	.line	641, "main.c"; 	offShowTime = 0;
                                    1- 2026     	BANKSEL	_offShowTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 2027     	CLRR	_offShowTime
                                    1- 2028     	.line	642, "main.c"; 	if(workStep == 0)
                                    1- 2029     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2030     	MOVR	_workStep,W
     0062 0903                      1- 2031     	BTRSS	STATUS,2
                                    1- 2032     	MGOTO	_00517_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2033     	.line	643, "main.c"; 	workStep = 1;
     0064 2101                      1- 2034     	MOVIA	0x01
     0065 00rr                      1- 2035     	MOVAR	_workStep
     0066                           1- 2036     _00517_DS_:
                                    1- 2037     	.line	646, "main.c"; 	}
                                    1- 2038     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 2039     ; exit point of _keyCtr
                                    1- 2041     ;***
                                    1- 2042     ;  pBlock Stats: dbName = C
                                    1- 2043     ;***
                                    1- 2044     ;has an exit
                                    1- 2045     ;1 compiler assigned register :
                                    1- 2046     ;   r0x104B
                                    1- 2047     ;; Starting pCode block
                                    1- 2048     .segment "code"; module=main, function=_keyRead
                                    1- 2050     ;local variable name mapping:
     0000                           1- 2052     _keyRead:
                                    1- 2053     ; 2 exit points
                                    1- 2054     	.line	561, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2055     	BANKSEL	r0x104B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2056     	MOVAR	r0x104B
                                    1- 2057     	.line	563, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2058     	MOVR	r0x104B,W
     0003 0D03                      1- 2059     	BTRSC	STATUS,2
                                    1- 2060     	MGOTO	_00487_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2061     	.line	565, "main.c"; 	keyCount++;
                                    1- 2062     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2063     	INCR	_keyCount,F
                                    1- 2064     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2065     	.line	566, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2066     	MOVIA	0xc8
     0008 04rr                      1- 2067     	SUBAR	_keyCount,W
     0009 0803                      1- 2068     	BTRSS	STATUS,0
                                    1- 2069     	MGOTO	_00488_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2070     	.line	568, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2071     	MOVIA	0xc8
     000C 00rr                      1- 2072     	MOVAR	_keyCount
                                    1- 2073     	.line	569, "main.c"; 	if(!longPressFlag)
                                    1- 2074     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2075     	MOVR	_longPressFlag,W
     000F 0903                      1- 2076     	BTRSS	STATUS,2
                                    1- 2077     	MGOTO	_00488_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2078     	.line	571, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2079     	MOVIA	0x01
     0012 00rr                      1- 2080     	MOVAR	_longPressFlag
                                    1- 2081     	.line	572, "main.c"; 	return 2;
     0013 2102                      1- 2082     	MOVIA	0x02
                                    1- 2083     	MGOTO	_00489_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2084     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1- 2085     _00487_DS_:
                                    1- 2086     	.line	578, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1- 2087     	MOVIA	0xc8
                                    1- 2088     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2089     	SUBAR	_keyCount,W
     0018 0803                      1- 2090     	BTRSS	STATUS,0
                                    1- 2091     	MGOTO	_00484_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2092     	.line	580, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2093     	CLRR	_keyCount
                                    1- 2094     	.line	581, "main.c"; 	longPressFlag = 0;
                                    1- 2095     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2096     	CLRR	_longPressFlag
                                    1- 2097     	.line	582, "main.c"; 	return	0;
     001D 2100                      1- 2098     	MOVIA	0x00
                                    1- 2099     	MGOTO	_00489_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2100     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2101     _00484_DS_:
                                    1- 2102     	.line	584, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2103     	MOVIA	0x04
                                    1- 2104     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2105     	SUBAR	_keyCount,W
     0022 0803                      1- 2106     	BTRSS	STATUS,0
                                    1- 2107     	MGOTO	_00485_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2108     	.line	586, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2109     	CLRR	_keyCount
                                    1- 2110     	.line	587, "main.c"; 	return	1;
     0025 2101                      1- 2111     	MOVIA	0x01
                                    1- 2112     	MGOTO	_00489_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2113     _00485_DS_:
                                    1- 2114     	.line	589, "main.c"; 	keyCount = 0;
                                    1- 2115     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2116     	CLRR	_keyCount
     0029                           1- 2117     _00488_DS_:
                                    1- 2118     	.line	591, "main.c"; 	return 0;
     0029 2100                      1- 2119     	MOVIA	0x00
     002A                           1- 2120     _00489_DS_:
                                    1- 2121     	.line	592, "main.c"; 	}
                                    1- 2122     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2123     ; exit point of _keyRead
                                    1- 2125     ;***
                                    1- 2126     ;  pBlock Stats: dbName = C
                                    1- 2127     ;***
                                    1- 2128     ;has an exit
                                    1- 2129     ;; Starting pCode block
                                    1- 2130     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2132     _pwmStop:
                                    1- 2133     ; 2 exit points
                                    1- 2134     	.line	555, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2135     	CLRA	
     0001 00rr                      1- 2136     	SFUN	_T2CR1
                                    1- 2137     	.line	556, "main.c"; 	}
                                    1- 2138     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2139     ; exit point of _pwmStop
                                    1- 2141     ;***
                                    1- 2142     ;  pBlock Stats: dbName = C
                                    1- 2143     ;***
                                    1- 2144     ;has an exit
                                    1- 2145     ;1 compiler assigned register :
                                    1- 2146     ;   r0x104D
                                    1- 2147     ;; Starting pCode block
                                    1- 2148     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2150     _pwmInit:
                                    1- 2151     ; 2 exit points
                                    1- 2152     	.line	543, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2153     	SFUNR	_T2CR1
                                    1- 2154     	BANKSEL	r0x104D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2155     	MOVAR	r0x104D
     0003 0Frr                      1- 2156     	BTRSC	r0x104D,7
                                    1- 2157     	.line	544, "main.c"; 	return;
                                    1- 2158     	MGOTO	_00468_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2159     	.line	545, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2160     	CLRR	_TMRH
                                    1- 2161     	.line	546, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2162     	MOVIA	0x64
     0007 00rr                      1- 2163     	SFUN	_TMR2
                                    1- 2164     	.line	547, "main.c"; 	PWM2DUTY = 69;				// 		
     0008 2145                      1- 2165     	MOVIA	0x45
     0009 00rr                      1- 2166     	SFUN	_PWM2DUTY
                                    1- 2167     	.line	549, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div256;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 2107                      1- 2168     	MOVIA	0x07
     000B 00rr                      1- 2169     	SFUN	_T2CR2
                                    1- 2170     	.line	550, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2171     	MOVIA	0x83
     000D 00rr                      1- 2172     	SFUN	_T2CR1
     000E                           1- 2173     _00468_DS_:
                                    1- 2174     	.line	551, "main.c"; 	}
                                    1- 2175     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2176     ; exit point of _pwmInit
                                    1- 2178     ;***
                                    1- 2179     ;  pBlock Stats: dbName = C
                                    1- 2180     ;***
                                    1- 2181     ;has an exit
                                    1- 2182     ;functions called:
                                    1- 2183     ;   _setInput
                                    1- 2184     ;   _pwmStop
                                    1- 2185     ;   _setInput
                                    1- 2186     ;   _pwmStop
                                    1- 2187     ;; Starting pCode block
                                    1- 2188     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2190     _gotoSleep:
                                    1- 2191     ; 2 exit points
                                    1- 2192     	.line	510, "main.c"; 	sleepFlag = 0;
                                    1- 2193     	BANKSEL	_sleepFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2194     	CLRR	_sleepFlag
                                    1- 2195     	.line	511, "main.c"; 	waitTime = 0;
                                    1- 2196     	BANKSEL	_waitTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2197     	CLRR	_waitTime
     0004 02rr                      1- 2198     	CLRR	(_waitTime + 1)
                                    1- 2199     	.line	512, "main.c"; 	setInput();
                                    1- 2200     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2201     	.line	513, "main.c"; 	sleepTime = 0;
                                    1- 2202     	BANKSEL	_sleepTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2203     	CLRR	_sleepTime
                                    1- 2204     	.line	514, "main.c"; 	pwFlag = 0;
                                    1- 2205     	BANKSEL	_pwFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2206     	CLRR	_pwFlag
                                    1- 2207     	.line	515, "main.c"; 	pwmStop();
                                    1- 2208     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2209     	.line	516, "main.c"; 	AWUCON = 0xA0;
     000B 21A0                      1- 2210     	MOVIA	0xa0
     000C 00rr                      1- 2211     	MOVAR	_AWUCON
                                    1- 2212     	.line	518, "main.c"; 	IOSTB = C_PB3_Input;
     000D 2108                      1- 2213     	MOVIA	0x08
     000E 000r                      1- 2214     	IOST	_IOSTB
                                    1- 2215     	.line	519, "main.c"; 	PORTA = 0X00;
                                    1- 2216     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2217     	CLRR	_PORTA
                                    1- 2218     	.line	520, "main.c"; 	PORTB = 0X00;
     0011 02rr                      1- 2219     	CLRR	_PORTB
                                    1- 2220     	.line	521, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2221     	MOVIA	0x02
     0013 00rr                      1- 2222     	MOVAR	_INTE
                                    1- 2223     	.line	522, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2224     	MOVIA	0x18
     0015 00rr                      1- 2225     	MOVAR	_PCON
                                    1- 2226     	.line	523, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2227     	CLRR	_INTF
                                    1- 2228     	.line	524, "main.c"; 	CLRWDT();
     0017 0002                      1- 2229     	clrwdt
                                    1- 2230     	.line	525, "main.c"; 	ENI();
     0018 0004                      1- 2231     	ENI
                                    1- 2232     	.line	526, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2233     	BANKSEL	_PORTA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 0Err                      1- 2234     	BTRSC	_PORTA,5
                                    1- 2235     	MGOTO	_00461_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2236     	.line	527, "main.c"; 	SLEEP();
     001C 0001                      1- 2237     	sleep
     001D                           1- 2238     _00461_DS_:
                                    1- 2239     	.line	528, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2240     	CLRR	_AWUCON
                                    1- 2241     	.line	529, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     001E 21A0                      1- 2242     	MOVIA	0xa0
     001F 000r                      1- 2243     	IOST	_IOSTA
                                    1- 2244     	.line	530, "main.c"; 	IOSTB = C_PB3_Input ;
     0020 2108                      1- 2245     	MOVIA	0x08
     0021 000r                      1- 2246     	IOST	_IOSTB
                                    1- 2247     	.line	531, "main.c"; 	PORTA = 0x00;
                                    1- 2248     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1- 2249     	CLRR	_PORTA
                                    1- 2250     	.line	532, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2103                      1- 2251     	MOVIA	0x03
     0025 00rr                      1- 2252     	MOVAR	_INTE
                                    1- 2253     	.line	533, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2254     	CLRR	_INTF
                                    1- 2255     	.line	535, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2256     	MOVIA	0xb8
     0028 00rr                      1- 2257     	MOVAR	_PCON
                                    1- 2258     	.line	538, "main.c"; 	}
                                    1- 2259     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2260     ; exit point of _gotoSleep
                                    1- 2262     ;***
                                    1- 2263     ;  pBlock Stats: dbName = C
                                    1- 2264     ;***
                                    1- 2265     ;has an exit
                                    1- 2266     ;functions called:
                                    1- 2267     ;   _setInput
                                    1- 2268     ;   _setInput
                                    1- 2269     ;; Starting pCode block
                                    1- 2270     .segment "code"; module=main, function=_initSys
     0000                           1- 2272     _initSys:
                                    1- 2273     ; 2 exit points
                                    1- 2274     	.line	478, "main.c"; 	DISI();
     0000 0013                      1- 2275     	DISI
                                    1- 2276     	.line	479, "main.c"; 	IOSTA = C_PA7_Input  | C_PA5_Input;
     0001 21A0                      1- 2277     	MOVIA	0xa0
     0002 000r                      1- 2278     	IOST	_IOSTA
                                    1- 2279     	.line	480, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2280     	MOVIA	0x08
     0004 000r                      1- 2281     	IOST	_IOSTB
                                    1- 2282     	.line	481, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2283     	CLRR	_PORTB
                                    1- 2284     	.line	482, "main.c"; 	PORTA = 0x00;
                                    1- 2285     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2286     	CLRR	_PORTA
                                    1- 2287     	.line	484, "main.c"; 	setInput();
                                    1- 2288     	MCALL	_setInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2289     	.line	485, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2290     	MOVIA	0x7f
     000A 000r                      1- 2291     	IOST	_APHCON
                                    1- 2292     	.line	486, "main.c"; 	BPHCON = 0xFF;		//PB3上拉
     000B 21FF                      1- 2293     	MOVIA	0xff
     000C 00rr                      1- 2294     	MOVAR	_BPHCON
                                    1- 2295     	.line	487, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2296     	MOVAR	_ABPLCON
                                    1- 2297     	.line	489, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2103                      1- 2298     	MOVIA	0x03
     000F 00rr                      1- 2299     	MOVAR	_INTE
                                    1- 2300     	.line	491, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2301     	CLRA	
     0011 000r                      1- 2302     	IOST	_PCON1
                                    1- 2303     	.line	493, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2304     	MOVIA	0x37
     0013 00rr                      1- 2305     	MOVAR	_TMR0
                                    1- 2306     	.line	494, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2307     	CLRA	
     0015 0003                      1- 2308     	T0MD	
                                    1- 2309     	.line	496, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2310     	MOVIA	0x01
     0017 000r                      1- 2311     	IOST	_PCON1
                                    1- 2312     	.line	499, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2313     	MOVIA	0x98
     0019 00rr                      1- 2314     	MOVAR	_PCON
                                    1- 2315     	.line	502, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2316     	MOVIA	0x01
     001B 000r                      1- 2317     	IOST	_PCON1
                                    1- 2318     	.line	503, "main.c"; 	ENI();
     001C 0004                      1- 2319     	ENI
                                    1- 2320     	.line	504, "main.c"; 	}
                                    1- 2321     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2322     ; exit point of _initSys
                                    1- 2324     ;***
                                    1- 2325     ;  pBlock Stats: dbName = C
                                    1- 2326     ;***
                                    1- 2327     ;has an exit
                                    1- 2328     ;functions called:
                                    1- 2329     ;   _setInput
                                    1- 2330     ;   __gptrget1
                                    1- 2331     ;   _showNubBaiwei
                                    1- 2332     ;   __gptrget1
                                    1- 2333     ;   _showNubShiwei
                                    1- 2334     ;   __gptrget1
                                    1- 2335     ;   _showNubGewei
                                    1- 2336     ;   _setInput
                                    1- 2337     ;   _setInput
                                    1- 2338     ;   __gptrget1
                                    1- 2339     ;   _showNubBaiwei
                                    1- 2340     ;   __gptrget1
                                    1- 2341     ;   _showNubShiwei
                                    1- 2342     ;   __gptrget1
                                    1- 2343     ;   _showNubGewei
                                    1- 2344     ;   _setInput
                                    1- 2345     ;5 compiler assigned registers:
                                    1- 2346     ;   r0x104E
                                    1- 2347     ;   r0x104F
                                    1- 2348     ;   STK01
                                    1- 2349     ;   STK00
                                    1- 2350     ;   r0x1050
                                    1- 2351     ;; Starting pCode block
                                    1- 2352     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2354     _refreshNub:
                                    1- 2355     ; 2 exit points
                                    1- 2356     	.line	468, "main.c"; 	setInput();
                                    1- 2357     	MCALL	_setInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2358     	.line	469, "main.c"; 	showNubBaiwei(numArray[baiweiNum]);
                                    1- 2359     	BANKSEL	_baiweiNum
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 01rr                      1- 2360     	MOVR	_baiweiNum,W
     0003 25rr                      1- 2361     	ADDIA	(_numArray + 0)
                                    1- 2362     	BANKSEL	r0x104E
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2363     	MOVAR	r0x104E
     0006 21rr                      1- 2364     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0007 0C03                      1- 2365     	BTRSC	STATUS,0
     0008 2501                      1- 2366     	ADDIA	0x01
                                    1- 2367     	BANKSEL	r0x104F
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1- 2368     	MOVAR	r0x104F
                                    1- 2369     	BANKSEL	r0x104E
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2370     	MOVR	r0x104E,W
     000D 00rr                      1- 2371     	MOVAR	STK01
                                    1- 2372     	BANKSEL	r0x104F
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2373     	MOVR	r0x104F,W
     0010 00rr                      1- 2374     	MOVAR	STK00
     0011 2100                      1- 2375     	MOVIA	0x00
                                    1- 2376     	MCALL	__gptrget1
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2377     ;;2	MOVAR	r0x1050
                                    1- 2378     	MCALL	_showNubBaiwei
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2379     	.line	470, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 2380     	BANKSEL	_shiweiNum
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2381     	MOVR	_shiweiNum,W
     0016 25rr                      1- 2382     	ADDIA	(_numArray + 0)
                                    1- 2383     	BANKSEL	r0x104E
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2384     	MOVAR	r0x104E
     0019 21rr                      1- 2385     	MOVIA	((_numArray + 0) >> 8) & 0xff
     001A 0C03                      1- 2386     	BTRSC	STATUS,0
     001B 2501                      1- 2387     	ADDIA	0x01
                                    1- 2388     	BANKSEL	r0x104F
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1- 2389     	MOVAR	r0x104F
                                    1- 2390     	BANKSEL	r0x104E
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 2391     	MOVR	r0x104E,W
     0020 00rr                      1- 2392     	MOVAR	STK01
                                    1- 2393     	BANKSEL	r0x104F
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2394     	MOVR	r0x104F,W
     0023 00rr                      1- 2395     	MOVAR	STK00
     0024 2100                      1- 2396     	MOVIA	0x00
                                    1- 2397     	MCALL	__gptrget1
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2398     ;;2	MOVAR	r0x1050
                                    1- 2399     	MCALL	_showNubShiwei
     0026 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2400     	.line	471, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 2401     	BANKSEL	_geweiNum
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2402     	MOVR	_geweiNum,W
     0029 25rr                      1- 2403     	ADDIA	(_numArray + 0)
                                    1- 2404     	BANKSEL	r0x104E
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2405     	MOVAR	r0x104E
     002C 21rr                      1- 2406     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002D 0C03                      1- 2407     	BTRSC	STATUS,0
     002E 2501                      1- 2408     	ADDIA	0x01
                                    1- 2409     	BANKSEL	r0x104F
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 2410     	MOVAR	r0x104F
                                    1- 2411     	BANKSEL	r0x104E
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2412     	MOVR	r0x104E,W
     0033 00rr                      1- 2413     	MOVAR	STK01
                                    1- 2414     	BANKSEL	r0x104F
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1- 2415     	MOVR	r0x104F,W
     0036 00rr                      1- 2416     	MOVAR	STK00
     0037 2100                      1- 2417     	MOVIA	0x00
                                    1- 2418     	MCALL	__gptrget1
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2419     ;;2	MOVAR	r0x1050
                                    1- 2420     	MCALL	_showNubGewei
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2421     	.line	472, "main.c"; 	setInput();
                                    1- 2422     	MCALL	_setInput
     003A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2423     	.line	473, "main.c"; 	}
                                    1- 2424     	RETURN	
     003B 0010                      3-   40 m1      ret
                                    1- 2425     ; exit point of _refreshNub
                                    1- 2427     ;***
                                    1- 2428     ;  pBlock Stats: dbName = C
                                    1- 2429     ;***
                                    1- 2430     ;2 compiler assigned registers:
                                    1- 2431     ;   r0x1051
                                    1- 2432     ;   r0x1052
                                    1- 2433     ;; Starting pCode block
                                    1- 2434     .segment "code"; module=main, function=_checkIRKey
     0000                           1- 2436     _checkIRKey:
                                    1- 2437     ; 0 exit points
                                    1- 2438     	.line	418, "main.c"; 	if(pwFlag == 0)
                                    1- 2439     	BANKSEL	_pwFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2440     	MOVR	_pwFlag,W
     0002 0903                      1- 2441     	BTRSS	STATUS,2
                                    1- 2442     	MGOTO	_00427_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2443     	.line	420, "main.c"; 	irStep = 0;
                                    1- 2444     	BANKSEL	_irStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2445     	CLRR	_irStep
                                    1- 2446     	.line	421, "main.c"; 	return;
                                    1- 2447     	MGOTO	_00010_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
     0007                           1- 2448     _00427_DS_:
                                    1- 2449     	.line	423, "main.c"; 	if(sendPreSta == 1 && getbit(PORTB, 3) == 0)
                                    1- 2450     	BANKSEL	_sendPreSta
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 2451     	MOVR	_sendPreSta,W
     0009 2401                      1- 2452     	XORIA	0x01
     000A 0903                      1- 2453     	BTRSS	STATUS,2
                                    1- 2454     	MGOTO	_00444_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C 01rr                      1- 2455     	MOVR	_PORTB,W
     000D 2208                      1- 2456     	ANDIA	0x08
     000E 0903                      1- 2457     	BTRSS	STATUS,2
     000F 2101                      1- 2458     	MOVIA	0x01
                                    1- 2459     	BANKSEL	r0x1051
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2460     	MOVAR	r0x1051
     0012 01rr                      1- 2461     	MOVR	r0x1051,W
     0013 0903                      1- 2462     	BTRSS	STATUS,2
                                    1- 2463     	MGOTO	_00444_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2464     	.line	426, "main.c"; 	notRecv = 0;
                                    1- 2465     	BANKSEL	_notRecv
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 2466     	CLRR	_notRecv
                                    1- 2467     	.line	427, "main.c"; 	count250ms = 0;
                                    1- 2468     	BANKSEL	_count250ms
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1- 2469     	CLRR	_count250ms
     0019 02rr                      1- 2470     	CLRR	(_count250ms + 1)
                                    1- 2471     	.line	429, "main.c"; 	if(++revCount > 5)
                                    1- 2472     	BANKSEL	_revCount
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 2473     	INCR	_revCount,F
                                    1- 2474     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2475     ;;unsigned compare: left >= lit (0x6=6), size=1
     001C 2106                      1- 2476     	MOVIA	0x06
     001D 04rr                      1- 2477     	SUBAR	_revCount,W
     001E 0803                      1- 2478     	BTRSS	STATUS,0
                                    1- 2479     	MGOTO	_00429_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2480     	.line	431, "main.c"; 	revCount = 6;
     0020 2106                      1- 2481     	MOVIA	0x06
     0021 00rr                      1- 2482     	MOVAR	_revCount
                                    1- 2483     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2484     ;;unsigned compare: left >= lit (0x6=6), size=1
     0022                           1- 2485     _00429_DS_:
                                    1- 2486     	.line	433, "main.c"; 	if(revCount > 5 && irStep == 0)
     0022 2106                      1- 2487     	MOVIA	0x06
                                    1- 2488     	BANKSEL	_revCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 04rr                      1- 2489     	SUBAR	_revCount,W
     0025 0803                      1- 2490     	BTRSS	STATUS,0
                                    1- 2491     	MGOTO	_00010_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2492     	BANKSEL	_irStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2493     	MOVR	_irStep,W
     0029 0903                      1- 2494     	BTRSS	STATUS,2
                                    1- 2495     	MGOTO	_00010_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2496     	.line	435, "main.c"; 	irStep = 1;
     002B 2101                      1- 2497     	MOVIA	0x01
     002C 00rr                      1- 2498     	MOVAR	_irStep
                                    1- 2499     	.line	436, "main.c"; 	if(workStep == 1)
                                    1- 2500     	BANKSEL	_workStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 2501     	MOVR	_workStep,W
     002F 2401                      1- 2502     	XORIA	0x01
     0030 0903                      1- 2503     	BTRSS	STATUS,2
                                    1- 2504     	MGOTO	_00436_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2505     	.line	438, "main.c"; 	workTime = 125;			//1s 
     0032 217D                      1- 2506     	MOVIA	0x7d
                                    1- 2507     	BANKSEL	_workTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2508     	MOVAR	_workTime
     0035 02rr                      1- 2509     	CLRR	(_workTime + 1)
                                    1- 2510     	MGOTO	_00437_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 2511     _00436_DS_:
                                    1- 2512     	.line	440, "main.c"; 	else if(workStep == 2)
                                    1- 2513     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 2514     	MOVR	_workStep,W
     0039 2402                      1- 2515     	XORIA	0x02
     003A 0903                      1- 2516     	BTRSS	STATUS,2
                                    1- 2517     	MGOTO	_00433_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2518     	.line	442, "main.c"; 	workTime = 175;			//1.4S
     003C 21AF                      1- 2519     	MOVIA	0xaf
                                    1- 2520     	BANKSEL	_workTime
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 2521     	MOVAR	_workTime
     003F 02rr                      1- 2522     	CLRR	(_workTime + 1)
                                    1- 2523     	MGOTO	_00437_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 2524     _00433_DS_:
                                    1- 2525     	.line	444, "main.c"; 	else if(workStep == 3)
                                    1- 2526     	BANKSEL	_workStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2527     	MOVR	_workStep,W
     0043 2403                      1- 2528     	XORIA	0x03
     0044 0903                      1- 2529     	BTRSS	STATUS,2
                                    1- 2530     	MGOTO	_00437_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2531     	.line	446, "main.c"; 	workTime = 265;			//2.12
     0046 2109                      1- 2532     	MOVIA	0x09
                                    1- 2533     	BANKSEL	_workTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1- 2534     	MOVAR	_workTime
     0049 2101                      1- 2535     	MOVIA	0x01
     004A 00rr                      1- 2536     	MOVAR	(_workTime + 1)
                                    1- 2537     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=0, offr=0
     004B                           1- 2538     _00437_DS_:
                                    1- 2539     	.line	448, "main.c"; 	waitTime = workTime/2 + 50;
     004B 1C03                      1- 2540     	BCR	STATUS,0
                                    1- 2541     	BANKSEL	_workTime
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 13rr                      1- 2542     	RRR	(_workTime + 1),W
                                    1- 2543     	BANKSEL	r0x1052
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 2544     	MOVAR	r0x1052
                                    1- 2545     	BANKSEL	_workTime
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 13rr                      1- 2546     	RRR	_workTime,W
                                    1- 2547     	BANKSEL	r0x1051
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 2548     	MOVAR	r0x1051
     0054 2132                      1- 2549     	MOVIA	0x32
     0055 03rr                      1- 2550     	ADDAR	r0x1051,W
                                    1- 2551     	BANKSEL	_waitTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 2552     	MOVAR	_waitTime
     0058 02rr                      1- 2553     	CLRR	(_waitTime + 1)
     0059 14rr                      1- 2554     	RLR	(_waitTime + 1),F
                                    1- 2555     	BANKSEL	r0x1052
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1- 2556     	MOVR	r0x1052,W
                                    1- 2557     	BANKSEL	_waitTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 03rr                      1- 2558     	ADDAR	(_waitTime + 1),F
                                    1- 2559     	MGOTO	_00010_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 2560     _00444_DS_:
                                    1- 2561     	.line	454, "main.c"; 	revCount = 0;
                                    1- 2562     	BANKSEL	_revCount
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1- 2563     	CLRR	_revCount
                                    1- 2564     	.line	455, "main.c"; 	if(++notRecv > 20)
                                    1- 2565     	BANKSEL	_notRecv
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 05rr                      1- 2566     	INCR	_notRecv,F
                                    1- 2567     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2568     ;;unsigned compare: left >= lit (0x15=21), size=1
     0063 2115                      1- 2569     	MOVIA	0x15
     0064 04rr                      1- 2570     	SUBAR	_notRecv,W
     0065 0803                      1- 2571     	BTRSS	STATUS,0
                                    1- 2572     	MGOTO	_00010_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2573     	.line	457, "main.c"; 	irStep = 0;
                                    1- 2574     	BANKSEL	_irStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 02rr                      1- 2575     	CLRR	_irStep
     0069                           1- 2576     _00010_DS_:
                                    1- 2577     	.line	461, "main.c"; 	}
                                    1- 2578     	RETURN	
     0069 0010                      3-   40 m1      ret
                                    1- 2580     ;***
                                    1- 2581     ;  pBlock Stats: dbName = C
                                    1- 2582     ;***
                                    1- 2583     ;has an exit
                                    1- 2584     ;functions called:
                                    1- 2585     ;   _checkBat
                                    1- 2586     ;   __divuchar
                                    1- 2587     ;   __moduchar
                                    1- 2588     ;   __moduint
                                    1- 2589     ;   __divuchar
                                    1- 2590     ;   __moduchar
                                    1- 2591     ;   _checkBat
                                    1- 2592     ;   __divuchar
                                    1- 2593     ;   __moduchar
                                    1- 2594     ;   __moduint
                                    1- 2595     ;   __divuchar
                                    1- 2596     ;   __moduchar
                                    1- 2597     ;6 compiler assigned registers:
                                    1- 2598     ;   r0x1053
                                    1- 2599     ;   r0x1054
                                    1- 2600     ;   r0x1055
                                    1- 2601     ;   STK00
                                    1- 2602     ;   STK02
                                    1- 2603     ;   STK01
                                    1- 2604     ;; Starting pCode block
                                    1- 2605     .segment "code"; module=main, function=_chrgCtr
                                    1- 2607     ;local variable name mapping:
     0000                           1- 2609     _chrgCtr:
                                    1- 2610     ; 2 exit points
                                    1- 2611     	.line	277, "main.c"; 	if((0x20 & PORTA) == 0)
                                    1- 2612     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Err                      1- 2613     	BTRSC	_PORTA,5
                                    1- 2614     	MGOTO	_00307_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2615     	.line	279, "main.c"; 	fullFlag = 0;
                                    1- 2616     	BANKSEL	_fullFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2617     	CLRR	_fullFlag
     0005                           1- 2618     _00307_DS_:
                                    1- 2619     	.line	281, "main.c"; 	BPHCON |= 0x04;
     0005 19rr                      1- 2620     	BSR	_BPHCON,2
                                    1- 2621     	.line	282, "main.c"; 	IOSTB &= 0xFB;
     0006 001r                      1- 2622     	IOSTR	_IOSTB
                                    1- 2623     	BANKSEL	r0x1053
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2624     	MOVAR	r0x1053
     0009 1Drr                      1- 2625     	BCR	r0x1053,2
     000A 01rr                      1- 2626     	MOVR	r0x1053,W
     000B 000r                      1- 2627     	IOST	_IOSTB
                                    1- 2628     	.line	284, "main.c"; 	if(startTime)
                                    1- 2629     	BANKSEL	_startTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2630     	MOVR	_startTime,W
     000E 0D03                      1- 2631     	BTRSC	STATUS,2
                                    1- 2632     	MGOTO	_00352_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2633     	.line	286, "main.c"; 	checkBat();
                                    1- 2634     	MCALL	_checkBat
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2635     	.line	287, "main.c"; 	startTime--;
                                    1- 2636     	BANKSEL	_startTime
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 06rr                      1- 2637     	DECR	_startTime,F
                                    1- 2638     	.line	288, "main.c"; 	showFlag = 1;
     0013 2101                      1- 2639     	MOVIA	0x01
                                    1- 2640     	BANKSEL	_showFlag
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2641     	MOVAR	_showFlag
                                    1- 2642     	.line	289, "main.c"; 	baiweiNum = shiweiNum = 8;
     0016 2108                      1- 2643     	MOVIA	0x08
                                    1- 2644     	BANKSEL	_shiweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2645     	MOVAR	_shiweiNum
                                    1- 2646     	BANKSEL	_baiweiNum
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 2647     	MOVAR	_baiweiNum
                                    1- 2648     	.line	290, "main.c"; 	geweiNum = 8;
                                    1- 2649     	BANKSEL	_geweiNum
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2650     	MOVAR	_geweiNum
                                    1- 2651     	.line	290, "main.c"; 	}
                                    1- 2652     	MGOTO	_00354_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 2653     _00352_DS_:
                                    1- 2654     	.line	292, "main.c"; 	else if(stepShowTime)
                                    1- 2655     	BANKSEL	_stepShowTime
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 2656     	MOVR	_stepShowTime,W
     0020 0D03                      1- 2657     	BTRSC	STATUS,2
                                    1- 2658     	MGOTO	_00349_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2659     	.line	294, "main.c"; 	showFlag = 1;
     0022 2101                      1- 2660     	MOVIA	0x01
                                    1- 2661     	BANKSEL	_showFlag
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2662     	MOVAR	_showFlag
                                    1- 2663     	.line	295, "main.c"; 	baiweiNum = shiweiNum = 0;
                                    1- 2664     	BANKSEL	_shiweiNum
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2665     	CLRR	_shiweiNum
                                    1- 2666     	BANKSEL	_baiweiNum
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2667     	CLRR	_baiweiNum
                                    1- 2668     	.line	296, "main.c"; 	geweiNum = workStep;
                                    1- 2669     	BANKSEL	_workStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 2670     	MOVR	_workStep,W
                                    1- 2671     	BANKSEL	_geweiNum
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 2672     	MOVAR	_geweiNum
                                    1- 2673     	.line	296, "main.c"; 	}
                                    1- 2674     	MGOTO	_00354_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 2675     _00349_DS_:
                                    1- 2676     	.line	298, "main.c"; 	else if(pwShowTime || workTime)
                                    1- 2677     	BANKSEL	_pwShowTime
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2678     	MOVR	_pwShowTime,W
     0030 0903                      1- 2679     	BTRSS	STATUS,2
                                    1- 2680     	MGOTO	_00344_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2681     	BANKSEL	_workTime
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 2682     	MOVR	_workTime,W
     0034 11rr                      1- 2683     	IORAR	(_workTime + 1),W
     0035 0D03                      1- 2684     	BTRSC	STATUS,2
                                    1- 2685     	MGOTO	_00345_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 2686     _00344_DS_:
                                    1- 2687     	.line	300, "main.c"; 	if(workTime > 0)
                                    1- 2688     	BANKSEL	_workTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 2689     	MOVR	_workTime,W
     0039 11rr                      1- 2690     	IORAR	(_workTime + 1),W
     003A 0D03                      1- 2691     	BTRSC	STATUS,2
                                    1- 2692     	MGOTO	_00315_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2693     	.line	302, "main.c"; 	u8t waitlight = 100;
     003C 2164                      1- 2694     	MOVIA	0x64
                                    1- 2695     	BANKSEL	r0x1053
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 2696     	MOVAR	r0x1053
                                    1- 2697     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1- 2698     	.line	303, "main.c"; 	if(workStep >= 2)
     003F 2102                      1- 2699     	MOVIA	0x02
                                    1- 2700     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 2701     	SUBAR	_workStep,W
     0042 0803                      1- 2702     	BTRSS	STATUS,0
                                    1- 2703     	MGOTO	_00309_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2704     	.line	305, "main.c"; 	waitlight += 50;
     0044 2196                      1- 2705     	MOVIA	0x96
                                    1- 2706     	BANKSEL	r0x1053
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 2707     	MOVAR	r0x1053
     0047                           1- 2708     _00309_DS_:
                                    1- 2709     	.line	307, "main.c"; 	if(workStep == 3)
                                    1- 2710     	BANKSEL	_workStep
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1- 2711     	MOVR	_workStep,W
     0049 2403                      1- 2712     	XORIA	0x03
     004A 0903                      1- 2713     	BTRSS	STATUS,2
                                    1- 2714     	MGOTO	_00311_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2715     	.line	309, "main.c"; 	waitlight += 90;
     004C 215A                      1- 2716     	MOVIA	0x5a
                                    1- 2717     	BANKSEL	r0x1053
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 03rr                      1- 2718     	ADDAR	r0x1053,F
     004F                           1- 2719     _00311_DS_:
                                    1- 2720     	.line	311, "main.c"; 	if(workTime < waitlight)
                                    1- 2721     	BANKSEL	r0x1053
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1- 2722     	MOVR	r0x1053,W
                                    1- 2723     	BANKSEL	r0x1054
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 2724     	MOVAR	r0x1054
                                    1- 2725     ;;1	CLRR	r0x1055
     0053 2100                      1- 2726     	MOVIA	0x00
                                    1- 2727     	BANKSEL	_workTime
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 2728     	SUBAR	(_workTime + 1),W
     0056 0903                      1- 2729     	BTRSS	STATUS,2
                                    1- 2730     	MGOTO	_00417_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2731     	BANKSEL	r0x1054
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 01rr                      1- 2732     	MOVR	r0x1054,W
                                    1- 2733     	BANKSEL	_workTime
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 04rr                      1- 2734     	SUBAR	_workTime,W
     005C                           1- 2735     _00417_DS_:
     005C 0C03                      1- 2736     	BTRSC	STATUS,0
                                    1- 2737     	MGOTO	_00316_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2738     	.line	312, "main.c"; 	showFlag = 1;
     005E 2101                      1- 2739     	MOVIA	0x01
                                    1- 2740     	BANKSEL	_showFlag
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 00rr                      1- 2741     	MOVAR	_showFlag
                                    1- 2742     	MGOTO	_00316_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
     0062                           1- 2743     _00315_DS_:
                                    1- 2744     	.line	315, "main.c"; 	showFlag = 1;
     0062 2101                      1- 2745     	MOVIA	0x01
                                    1- 2746     	BANKSEL	_showFlag
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 2747     	MOVAR	_showFlag
                                    1- 2748     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2749     ;;unsigned compare: left >= lit (0x64=100), size=1
     0065                           1- 2750     _00316_DS_:
                                    1- 2751     	.line	316, "main.c"; 	if(pwStep > 99)
     0065 2164                      1- 2752     	MOVIA	0x64
                                    1- 2753     	BANKSEL	_pwStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 2754     	SUBAR	_pwStep,W
     0068 0803                      1- 2755     	BTRSS	STATUS,0
                                    1- 2756     	MGOTO	_00318_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2757     	.line	318, "main.c"; 	baiweiNum = 1;
     006A 2101                      1- 2758     	MOVIA	0x01
                                    1- 2759     	BANKSEL	_baiweiNum
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 2760     	MOVAR	_baiweiNum
                                    1- 2761     	.line	319, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2762     	BANKSEL	_geweiNum
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 02rr                      1- 2763     	CLRR	_geweiNum
                                    1- 2764     	BANKSEL	_shiweiNum
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 02rr                      1- 2765     	CLRR	_shiweiNum
                                    1- 2766     	MGOTO	_00354_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 2767     _00318_DS_:
                                    1- 2768     	.line	323, "main.c"; 	baiweiNum = 0;
                                    1- 2769     	BANKSEL	_baiweiNum
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 02rr                      1- 2770     	CLRR	_baiweiNum
                                    1- 2771     	.line	324, "main.c"; 	shiweiNum = pwStep/10;
     0074 210A                      1- 2772     	MOVIA	0x0a
     0075 00rr                      1- 2773     	MOVAR	STK00
                                    1- 2774     	BANKSEL	_pwStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 2775     	MOVR	_pwStep,W
                                    1- 2776     	MCALL	__divuchar
     0078 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2777     	BANKSEL	_shiweiNum
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 2778     	MOVAR	_shiweiNum
                                    1- 2779     	.line	325, "main.c"; 	geweiNum = pwStep%10;
     007B 210A                      1- 2780     	MOVIA	0x0a
     007C 00rr                      1- 2781     	MOVAR	STK00
                                    1- 2782     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 2783     	MOVR	_pwStep,W
                                    1- 2784     	MCALL	__moduchar
     007F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2785     	BANKSEL	_geweiNum
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 2786     	MOVAR	_geweiNum
                                    1- 2787     	.line	325, "main.c"; 	}
                                    1- 2788     	MGOTO	_00354_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2789     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2790     ;;unsigned compare: left >= lit (0x6=6), size=1
     0083                           1- 2791     _00345_DS_:
                                    1- 2792     	.line	330, "main.c"; 	if(pwStep <= 5 && offShowTime == 0 && ((0x20 & PORTA) == 0) && pwFlag)
     0083 2106                      1- 2793     	MOVIA	0x06
                                    1- 2794     	BANKSEL	_pwStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 04rr                      1- 2795     	SUBAR	_pwStep,W
     0086 0C03                      1- 2796     	BTRSC	STATUS,0
                                    1- 2797     	MGOTO	_00339_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2798     	BANKSEL	_offShowTime
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 2799     	MOVR	_offShowTime,W
     008A 0903                      1- 2800     	BTRSS	STATUS,2
                                    1- 2801     	MGOTO	_00339_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2802     	BANKSEL	_PORTA
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 0Err                      1- 2803     	BTRSC	_PORTA,5
                                    1- 2804     	MGOTO	_00339_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2805     	BANKSEL	_pwFlag
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 01rr                      1- 2806     	MOVR	_pwFlag,W
     0091 0D03                      1- 2807     	BTRSC	STATUS,2
                                    1- 2808     	MGOTO	_00339_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2809     	.line	332, "main.c"; 	showFlag = 1;
     0093 2101                      1- 2810     	MOVIA	0x01
                                    1- 2811     	BANKSEL	_showFlag
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 00rr                      1- 2812     	MOVAR	_showFlag
                                    1- 2813     	.line	333, "main.c"; 	if(++shanTime > 500)			//电量不足闪灯
                                    1- 2814     	BANKSEL	_shanTime
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 05rr                      1- 2815     	INCR	_shanTime,F
     0098 0D03                      1- 2816     	BTRSC	STATUS,2
     0099 05rr                      1- 2817     	INCR	(_shanTime + 1),F
                                    1- 2818     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2819     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     009A 2101                      1- 2820     	MOVIA	0x01
     009B 04rr                      1- 2821     	SUBAR	(_shanTime + 1),W
     009C 0903                      1- 2822     	BTRSS	STATUS,2
                                    1- 2823     	MGOTO	_00420_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
     009E 21F5                      1- 2824     	MOVIA	0xf5
     009F 04rr                      1- 2825     	SUBAR	_shanTime,W
     00A0                           1- 2826     _00420_DS_:
     00A0 0803                      1- 2827     	BTRSS	STATUS,0
                                    1- 2828     	MGOTO	_00321_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2829     	.line	335, "main.c"; 	shanTime = 0;
                                    1- 2830     	BANKSEL	_shanTime
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 02rr                      1- 2831     	CLRR	_shanTime
     00A4 02rr                      1- 2832     	CLRR	(_shanTime + 1)
                                    1- 2833     	.line	336, "main.c"; 	showFlag = 0;
                                    1- 2834     	BANKSEL	_showFlag
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 02rr                      1- 2835     	CLRR	_showFlag
     00A7                           1- 2836     _00321_DS_:
                                    1- 2837     	.line	339, "main.c"; 	if(shanTime % 100 < 50)
     00A7 2164                      1- 2838     	MOVIA	0x64
     00A8 00rr                      1- 2839     	MOVAR	STK02
     00A9 2100                      1- 2840     	MOVIA	0x00
     00AA 00rr                      1- 2841     	MOVAR	STK01
                                    1- 2842     	BANKSEL	_shanTime
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 01rr                      1- 2843     	MOVR	_shanTime,W
     00AD 00rr                      1- 2844     	MOVAR	STK00
     00AE 01rr                      1- 2845     	MOVR	(_shanTime + 1),W
                                    1- 2846     	MCALL	__moduint
     00AF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2847     	BANKSEL	r0x1054
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 00rr                      1- 2848     	MOVAR	r0x1054
     00B2 01rr                      1- 2849     	MOVR	STK00,W
                                    1- 2850     	BANKSEL	r0x1053
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 00rr                      1- 2851     	MOVAR	r0x1053
                                    1- 2852     ;;unsigned compare: left < lit (0x32=50), size=2
     00B5 2100                      1- 2853     	MOVIA	0x00
                                    1- 2854     	BANKSEL	r0x1054
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 04rr                      1- 2855     	SUBAR	r0x1054,W
     00B8 0903                      1- 2856     	BTRSS	STATUS,2
                                    1- 2857     	MGOTO	_00421_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
     00BA 2132                      1- 2858     	MOVIA	0x32
                                    1- 2859     	BANKSEL	r0x1053
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 2860     	SUBAR	r0x1053,W
     00BD                           1- 2861     _00421_DS_:
     00BD 0C03                      1- 2862     	BTRSC	STATUS,0
                                    1- 2863     	MGOTO	_00323_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2864     	.line	341, "main.c"; 	showFlag = 1;
     00BF 2101                      1- 2865     	MOVIA	0x01
                                    1- 2866     	BANKSEL	_showFlag
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 2867     	MOVAR	_showFlag
                                    1- 2868     	.line	342, "main.c"; 	baiweiNum = 0;
                                    1- 2869     	BANKSEL	_baiweiNum
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 02rr                      1- 2870     	CLRR	_baiweiNum
                                    1- 2871     	.line	343, "main.c"; 	shiweiNum = 0;
                                    1- 2872     	BANKSEL	_shiweiNum
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 02rr                      1- 2873     	CLRR	_shiweiNum
                                    1- 2874     	.line	344, "main.c"; 	geweiNum = pwStep;
                                    1- 2875     	BANKSEL	_pwStep
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 01rr                      1- 2876     	MOVR	_pwStep,W
                                    1- 2877     	BANKSEL	_geweiNum
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 00rr                      1- 2878     	MOVAR	_geweiNum
                                    1- 2879     	MGOTO	_00354_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
     00CB                           1- 2880     _00323_DS_:
                                    1- 2881     	.line	348, "main.c"; 	showFlag = 0;
                                    1- 2882     	BANKSEL	_showFlag
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 02rr                      1- 2883     	CLRR	_showFlag
                                    1- 2884     	.line	348, "main.c"; 	}
                                    1- 2885     	MGOTO	_00354_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
     00CE                           1- 2886     _00339_DS_:
                                    1- 2887     	.line	351, "main.c"; 	else if(offShowTime > 0)
                                    1- 2888     	BANKSEL	_offShowTime
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 2889     	MOVR	_offShowTime,W
     00D0 0D03                      1- 2890     	BTRSC	STATUS,2
                                    1- 2891     	MGOTO	_00336_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2892     	.line	353, "main.c"; 	showFlag = 1;
     00D2 2101                      1- 2893     	MOVIA	0x01
                                    1- 2894     	BANKSEL	_showFlag
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 2895     	MOVAR	_showFlag
                                    1- 2896     	.line	354, "main.c"; 	baiweiNum = 0;
                                    1- 2897     	BANKSEL	_baiweiNum
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 02rr                      1- 2898     	CLRR	_baiweiNum
                                    1- 2899     	.line	355, "main.c"; 	shiweiNum = 10;
     00D7 210A                      1- 2900     	MOVIA	0x0a
                                    1- 2901     	BANKSEL	_shiweiNum
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 00rr                      1- 2902     	MOVAR	_shiweiNum
                                    1- 2903     	.line	356, "main.c"; 	geweiNum = 10;
                                    1- 2904     	BANKSEL	_geweiNum
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 2905     	MOVAR	_geweiNum
                                    1- 2906     	.line	356, "main.c"; 	}
                                    1- 2907     	MGOTO	_00354_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
     00DD                           1- 2908     _00336_DS_:
                                    1- 2909     	.line	358, "main.c"; 	else if(0x20 & PORTA)
                                    1- 2910     	BANKSEL	_PORTA
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 0Arr                      1- 2911     	BTRSS	_PORTA,5
                                    1- 2912     	MGOTO	_00333_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2913     	.line	364, "main.c"; 	showFlag = 1;
     00E0 2101                      1- 2914     	MOVIA	0x01
                                    1- 2915     	BANKSEL	_showFlag
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 00rr                      1- 2916     	MOVAR	_showFlag
                                    1- 2917     	.line	368, "main.c"; 	if(fullFlag && pwStep == 100)
                                    1- 2918     	BANKSEL	_fullFlag
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 01rr                      1- 2919     	MOVR	_fullFlag,W
     00E5 0D03                      1- 2920     	BTRSC	STATUS,2
                                    1- 2921     	MGOTO	_00329_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2922     	BANKSEL	_pwStep
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 01rr                      1- 2923     	MOVR	_pwStep,W
     00E9 2464                      1- 2924     	XORIA	0x64
     00EA 0903                      1- 2925     	BTRSS	STATUS,2
                                    1- 2926     	MGOTO	_00329_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2927     	.line	370, "main.c"; 	fullFlag = 1;
     00EC 2101                      1- 2928     	MOVIA	0x01
                                    1- 2929     	BANKSEL	_fullFlag
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 2930     	MOVAR	_fullFlag
                                    1- 2931     	.line	372, "main.c"; 	baiweiNum = 1;
                                    1- 2932     	BANKSEL	_baiweiNum
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 00rr                      1- 2933     	MOVAR	_baiweiNum
                                    1- 2934     	.line	373, "main.c"; 	shiweiNum = geweiNum = 0;
                                    1- 2935     	BANKSEL	_geweiNum
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 02rr                      1- 2936     	CLRR	_geweiNum
                                    1- 2937     	BANKSEL	_shiweiNum
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 02rr                      1- 2938     	CLRR	_shiweiNum
                                    1- 2939     	.line	373, "main.c"; 	}
                                    1- 2940     	MGOTO	_00354_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
     00F6                           1- 2941     _00329_DS_:
                                    1- 2942     	.line	378, "main.c"; 	if(pwStep == 100)
                                    1- 2943     	BANKSEL	_pwStep
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 01rr                      1- 2944     	MOVR	_pwStep,W
     00F8 2464                      1- 2945     	XORIA	0x64
     00F9 0903                      1- 2946     	BTRSS	STATUS,2
                                    1- 2947     	MGOTO	_00326_DS_
     00FA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2948     	.line	380, "main.c"; 	fullFlag = 1;
     00FB 2101                      1- 2949     	MOVIA	0x01
                                    1- 2950     	BANKSEL	_fullFlag
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 00rr                      1- 2951     	MOVAR	_fullFlag
                                    1- 2952     	.line	381, "main.c"; 	baiweiNum = 0;
                                    1- 2953     	BANKSEL	_baiweiNum
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 02rr                      1- 2954     	CLRR	_baiweiNum
                                    1- 2955     	.line	382, "main.c"; 	shiweiNum = 9;
     0100 2109                      1- 2956     	MOVIA	0x09
                                    1- 2957     	BANKSEL	_shiweiNum
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 00rr                      1- 2958     	MOVAR	_shiweiNum
                                    1- 2959     	.line	383, "main.c"; 	geweiNum = 9;
                                    1- 2960     	BANKSEL	_geweiNum
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 00rr                      1- 2961     	MOVAR	_geweiNum
                                    1- 2962     	MGOTO	_00354_DS_
     0105 3rrr                      3-   63 m1      LGOTO rom_address
     0106                           1- 2963     _00326_DS_:
                                    1- 2964     	.line	387, "main.c"; 	baiweiNum = 0;
                                    1- 2965     	BANKSEL	_baiweiNum
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 02rr                      1- 2966     	CLRR	_baiweiNum
                                    1- 2967     	.line	388, "main.c"; 	shiweiNum = pwStep/10;
     0108 210A                      1- 2968     	MOVIA	0x0a
     0109 00rr                      1- 2969     	MOVAR	STK00
                                    1- 2970     	BANKSEL	_pwStep
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 01rr                      1- 2971     	MOVR	_pwStep,W
                                    1- 2972     	MCALL	__divuchar
     010C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2973     	BANKSEL	_shiweiNum
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 00rr                      1- 2974     	MOVAR	_shiweiNum
                                    1- 2975     	.line	389, "main.c"; 	geweiNum = pwStep%10;
     010F 210A                      1- 2976     	MOVIA	0x0a
     0110 00rr                      1- 2977     	MOVAR	STK00
                                    1- 2978     	BANKSEL	_pwStep
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 01rr                      1- 2979     	MOVR	_pwStep,W
                                    1- 2980     	MCALL	__moduchar
     0113 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2981     	BANKSEL	_geweiNum
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 00rr                      1- 2982     	MOVAR	_geweiNum
                                    1- 2983     	.line	389, "main.c"; 	}
                                    1- 2984     	MGOTO	_00354_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
     0117                           1- 2985     _00333_DS_:
                                    1- 2986     	.line	408, "main.c"; 	showFlag = 0;
                                    1- 2987     	BANKSEL	_showFlag
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 02rr                      1- 2988     	CLRR	_showFlag
     0119                           1- 2989     _00354_DS_:
                                    1- 2990     	.line	412, "main.c"; 	}
                                    1- 2991     	RETURN	
     0119 0010                      3-   40 m1      ret
                                    1- 2992     ; exit point of _chrgCtr
                                    1- 2995     ;	code size estimation:
                                    1- 2996     ;	 1152+  377 =  1529 instructions ( 3812 byte)
                                    1- 2998     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
